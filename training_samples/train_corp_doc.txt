 int3 int3 int3 int3 int3 int3 data16 cmp jne rol test jne retq ror jmpq sub mov callq mov mov test jne mov jmp andq xor add retq mov mov push push push push push sub xor mov mov cmp jne mov cmp jle lea sub mov jmp mov callq xor lock jne mov cmp je mov callq jmpq mov cmp je mov add jmp mov cmp je callq sub cmp jae mov callq mov mov mov xchg jmpq xor jmpq mov cmp jne mov mov mov jmp cmp je mov callq xor lock jne jmp mov mov cmp je mov callq jmp lea lea mov mov cmp jae cmp jne mov cmp je callq add cmp jb cmp jne lea lea callq movl cmp jne mov xchg cmp je lea callq cmp je mov mov mov callq add mov mov mov add pop pop pop pop pop retq int3 int3 mov mov mov push push push sub mov mov mov mov mov test jne cmp jne xor mov jmpq cmp je cmp jne mov test je movl mov callq mov mov jmp xor mov mov mov test je mov mov mov callq mov mov jmp xor mov mov mov test je mov mov mov callq mov mov jmp xor mov mov mov cmp jne test jne xor xor mov callq jmp mov mov mov xor xor mov callq jmp mov mov mov mov test je xor xor mov callq jmp mov mov mov test je cmp jne mov mov mov callq mov mov jmp xor mov mov mov mov test je cmpl je mov mov mov callq mov mov jmp xor mov movl mov add pop pop pop retq int3 int3 int3 mov mov push sub mov mov mov cmp jne callq mov mov mov mov mov add pop jmpq int3 int3 int3 mov sub lea callq mov mov xor lea mov callq mov cmpq je movq lea mov lea mov lea mov mov mov mov xor callq jmp mov mov lea add mov mov mov mov mov movl movl mov mov mov mov xor callq lea callq callq mov mov callq add retq int3 int3 int3 int3 int3 int3 int3 mov mov cmp je xor retq movslq add xor cmpl jne mov cmp sete repz int3 movslq xor mov add movzwl movzwl lea test je mov cmp jb mov add cmp jb inc add cmp jb xor retq mov retq int3 int3 sub mov lea mov callq test je sub mov mov callq test je mov shr not and jmp xor add retq int3 int3 int3 mov push sub mov andq movabs cmp je not mov jmp lea callq mov callq mov xor callq mov xor callq lea mov xor callq mov xor movabs and movabs cmp cmove mov not mov mov add pop retq int3 sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg lea retq mov mov push sub mov mov mov mov add mov cmp je xor lea mov mov mov movzwl jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne cmp je mov cmp jae movzwl mov test je lea sub lea movzwl mov test jne movzwl lea test je cmpw je add cmp jne mov movzwl lea mov jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne cmp je mov cmp jne xor lea mov mov mov pop retq mov jmp int3 int3 int3 mov mov mov push sub callq mov cmpl jne mov jmpq mov mov xor xor lea mov cmp je mov cmp je mov add xor mov test jne lea callq mov mov xor mov cmp je mov cmp je mov add xor mov test jne lea callq mov cmp je test je callq jmp xor lea mov mov mov mov pop retq mov mov push sub callq mov mov andq andq mov callq lea mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov test je mov mov callq lea mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq lea mov mov callq lea mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq movl mov mov jmp xor mov mov add pop retq int3 rex sub xor mov lea test jne mov jmp mov mov xor mov cmp je lea lea sub sub lea cmp je add mov xor mov test jne callq lea callq mov mov callq add pop retq int3 int3 mov push push push push mov sub mov xor test je movzwl mov xor cmp jne movslq add mov mov mov xor add cmp jne cmp je mov mov mov add add add mov mov cmp jbe mov mov mov mov mov add mov mov cmpb mov je mov test jle movzbl inc mov mov and shl imul add imul xor mov dec mov mov test jne mov cmp je inc add mov cmp jb xor add pop pop pop pop retq mov movzwl mov mov add cmp jb mov add cmp jae mov xor mov mov test je cmp jne mov sub inc mov test jne test jle mov mov mov test jle movzbl lea cmp ja add movzwl inc dec mov and shl add imul imul xor cmp jne mov callq mov mov test jne mov mov mov callq lea lea mov mov callq test jne mov lea lea xor xor callq mov xor test mov cmovne mov lea callq mov test je movslq lea add mov test je mov test jle movzbl inc dec mov and shl add imul imul mov mov xor test jne mov mov callq jmpq mov jmpq int3 int3 sub cmp jne callq mov mov mov mov mov callq mov add retq sub dec jne and movl and movl lea mov callq test jne callq mov mov xor mov mov callq jmp mov xor mov mov callq nop add retq int3 int3 mov push sub xor movl movl and and mov mov mov lea mov callq lea lea callq mov test jne callq mov mov mov xor mov callq jmpq lea mov callq test jne callq mov jmp andl movl andl movl mov callq lea mov callq test jne callq mov mov mov xor mov callq cmpl je callq test jne xor jmp andl lea lea xor lea callq mov mov test je mov mov mov mov callq mov callq test je mov callq jmp mov xor mov mov callq nop mov add pop retq int3 int3 mov mov mov push sub andq lea mov andq andq xor movl lea mov lea mov callq mov lea callq test je mov mov mov mov mov callq jmpq callq mov lea callq mov mov mov mov test je mov callq cmpl je callq test jne xor jmp andl lea lea xor lea callq mov test jne mov mov mov xor callq xor jmpq mov mov callq cmp jne mov mov mov xor callq mov callq xor lea callq jmp mov callq mov mov mov mov callq test je mov callq xor jmp mov xor mov mov callq xor mov mov add pop retq int3 mov mov xor mov mov mov mov mov test je cmp je cmp jne imul imul not not jmp imul imul jmp imul imul mov and cmp jae add jmp mov sub movzwl mov mov and cmp jae add jmp mov sub movzwl add mov shr shr add cmp jl mov mov mov mov mov movl mov mov mov mov xor retq int3 int3 rex sub andl cmpq mov je mov andq lea callq test jne mov callq orq add pop retq int3 mov mov mov push sub mov mov lea mov mov mov callq mov mov mov mov mov add pop jmpq mov mov push lea sub mov mov lea xor movl movl movl movl mov mov callq lea movslq lea mov callq test je lea xor callq mov callq test jne cmp je cmp jne mov mov lea mov mov mov pop retq mov mov push sub movzbl lea cmpl mov je callq cmp jae andl jmp sub cmp jb mov callq test je andl mov jmp callq mov xor mov mov add pop retq int3 int3 mov mov mov push sub mov mov lea lea movl callq xor test je movzwl lea mov jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne movzbl lea sub mov mov mov mov callq cmp setne mov mov mov add pop retq int3 mov mov mov mov push lea sub mov or xor lea movl movl mov lea movl movl mov callq movslq lea lea mov callq test jne or jmp mov lea mov callq test jne callq cmp jne mov callq jmp mov lea xor xor mov mov movl callq mov cmp jne inc cmp jb mov lea mov mov mov mov pop retq mov push push push push push push sub mov mov mov orq andl andq xor cmp ja callq test je mov callq test je mov callq mov cmp je lea movb mov mov lea lea callq mov lea mov lea lea callq mov mov lea lea callq callq mov mov lea lea callq callq mov mov lea lea callq mov xor mov mov lea lea callq andl mov lea lea callq xor mov mov lea lea callq mov mov lea lea callq mov xor mov mov test je mov and je shr add jmp mov mov lea lea callq mov mov test je mov and je mov mov lea lea callq cmp je cmp je cmp je cmp je cmp je cmp je lea cmp jbe jmpq add mov mov mov mov lea jmp add mov mov mov mov lea jmp add mov mov mov callq mov jmp add mov mov mov mov lea jmp add mov mov mov callq lea mov lea callq shr jmpq mov cmp je mov callq mov callq andq jmp add pop pop pop pop pop pop retq int3 cmpw mov mov jne mov retq movzwl test je mov sub mov test je movzwl test je movzwl lea cmp ja add lea cmp ja add movzwl movzwl sub jne add cmp jne cmpw je add add movzwl test jne xor retq mov retq int3 mov mov push push sub lea mov mov mov callq test jne xor jmpq xor xor mov mov callq test je andq lea lea xor mov callq andl andl test je mov lea lea lea callq test je mov xor mov mov callq andl movl mov mov add pop pop retq int3 jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 rex sub mov movl add pop retq rex sub mov mov xor cmpl sete mov mov add pop retq
 push mov mov pop ret int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret int3 push inc xor pop inc xor push mov sub push push push push cld mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret push mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop loopne add or add xor add and mov mov mov mov mov shr mov add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov inc shr inc cmp jb rep jmp lea scas adc adc add mov add test add jl add je add insb adc adc inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov enter rclb add fcoml add lock adc leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop push adc adc inc add rorl jmp or std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea add add or add adc add sbb add and add sub add xor add inc adc mov inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov pusha adc add js add mov or leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov push mov cmp jb neg and je sub mov inc dec jne mov shl add mov shl add mov and shr je rep test je mov inc dec jne mov pop ret mov ret push mov push mov mov lea sub push push push mov mov push mov movl mov lea mov ret mov mov pop pop pop pop leave push ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 repz int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret add test je test je movb inc dec jne ret push mov sub push push pushl xor mov mov mov call mov test jne mov jmp lea push push push call test je cmp jne push push call cmp jne xor jmp push pushl call test jne push lea push pushl call mov test jne mov mov lea mov push push push pushl mov mov call cmp jne mov inc push push mov call push call mov test je lea push push push pushl call test jne lea push push push pushl call cmp jne mov inc push mov xor push call push call mov test je lea push push push pushl call test jne lea push push pushl pushl call cmp jne mov inc push mov xor push call push call mov test je mov add push push push call add lea push pushl pushl pushl call test jne mov xor cmp je lea push push push pushl call cmp jne mov inc push mov xor push call push call mov test je lea push push push pushl call test jne mov mov add add add push mov xor push call push call mov test je pushl xor push pushl mov push push push push call add test js mov mov call push call mov test je push push push call test jne pushl push pushl call test jne pushl push pushl call cmp je cmp je push push pushl call test jne push pushl call test jne push push pushl call test jne pushl push pushl call test jne push pushl call test jne push push pushl call test jne mov mov mov call push xor push call push call push xor push call push call pushl push call push call pushl push call push call pushl push call push call lea push pushl call mov test je xor mov cmp cmovne pop pop pop mov pop ret movl jmp movl push xor push call push call pushl push call push call pushl push call push call pushl push call push call mov mov mov call push push call push call mov jmp push xor push call push call pushl push call push call mov mov mov call push push call push call pushl push call push call pushl jmp push xor push call push call pushl push call push call mov mov mov call push push call push call pushl jmp push xor push call push call pushl push call push call mov mov mov call push jmp push xor push call push call pushl push call push call pushl jmp push xor push call push call pushl push jmp push xor push call push call mov jmp push mov push push push push push mov xor push mov mov call mov test jne mov jmp lea push push push call test je cmp jne push push call cmp jne xor jmp push pushl call test je jmp lea mov push push push pushl call cmp jne mov inc push push mov call push call mov test je lea push push push pushl call test jne push call mov test je push push push call test jne push push push call cmp je cmp je push mov push push call test jne push push call test jne push push push call test jne push xor push call push call lea push pushl call mov test je xor mov cmp cmovne pop pop pop mov pop ret mov jmp mov push push call push call mov jmp push mov sub push push xor xor inc push mov mov mov mov mov and mov movsbl lea neg sbb and xor xor and inc cmp jl mov mov mov mov and movsbl neg sbb add and add xor and cmp jl movb movb mov lea shl sub mov mov sar lea or and mov xor sar lea or and mov xor sar lea or and mov sar lea or mov xor and xor xor mov mov mov inc mov cmp jl xor movzbl mov and movsbl neg lea sbb and xor and mov xor shl xor shl xor shl xor movzbl mov rol mov rol mov rol mov test je mov add cltd idiv mov mov jmp andl test je mov add cltd idiv mov jmp xor test je mov add cltd idiv mov jmp xor test je mov mov add cltd idiv mov jmp xor shl xor mov shl xor shl xor mov rol mov rol mov rol mov inc cmp jl pop pop pop mov pop ret push mov push push cmpl mov push push push mov mov jne call mov movl lea movl xor mov mov lea movzbl movzbl lea shl or movzbl shl or movzbl shl or mov inc cmp jb mov mov sub je dec dec je dec dec jne mov movzbl mov addl movzbl movzbl shl movzbl xor movzbl shl movzbl xor movzbl shl movzbl xor mov xor xor lea xor mov mov xor mov xor mov mov movzbl mov movzbl movzbl shl movzbl xor movzbl shl movzbl xor movzbl shl movzbl xor mov xor xor mov mov xor mov mov xor mov cmp jb jmp mov movzbl movzbl movzbl shl movzbl xor movzbl shl movzbl xor movzbl shl movzbl xor mov xor add xor lea xor mov mov xor mov mov xor mov mov xor mov mov xor mov cmp jb jmp mov movzbl movzbl movzbl shl movzbl xor movzbl shl movzbl xor movzbl shl movzbl xor mov xor add xor lea xor mov mov xor mov mov xor mov cmp jb pop pop xor pop mov pop ret push mov sub push push push mov push lea lea movl mov call pop test jne mov shl add push pop mov add mov add mov add mov add mov add mov add mov sub mov add mov dec jmp mov movzbl push movzbl movzbl mov movzbl xor movzbl movzbl xor movzbl movzbl xor mov pop add add dec jne dec sub test jg mov add mov add mov mov mov mov mov mov xor pop pop pop mov pop ret push mov sub mov push push mov movzbl movzbl shl or movzbl shl or movzbl shl or movzbl xor mov movzbl shl or movzbl shl or movzbl push movzbl shl shl or movzbl or xor movzbl shl or mov movzbl shl or movzbl xor shl mov movzbl or shll movzbl or shll movzbl mov or mov xor mov mov add sar mov dec mov mov test jle mov mov shr and shr and mov mov xor mov shr xor mov movzbl xor xor mov mov mov shr and shr and mov xor mov shr xor movzbl xor xor mov mov mov shr and shr and mov xor mov mov shr xor movzbl shr and mov shr xor and mov mov xor xor mov shr xor movzbl xor mov xor shr mov shr and and mov xor mov shr xor mov movzbl xor xor mov mov mov shr and shr and mov mov xor mov shr xor movzbl shr xor xor mov shr mov mov and and mov xor mov shr xor movzbl shr and xor xor mov shr and mov mov mov xor mov shr xor movzbl xor xor add mov dec mov mov test jg mov mov shr and shr and mov mov xor mov shr xor mov movzbl xor xor mov shr and mov mov shr and mov xor mov shr xor movzbl xor xor mov shr and mov mov shr and mov xor mov mov shr xor movzbl shr and mov shr xor and mov mov xor xor mov shr mov xor movzbl xor mov xor shr and mov movzbl mov shr movzbl shl xor mov shr and shl movzbl xor mov shl movzbl movzbl xor mov xor shr and mov movzbl mov shr movzbl shl xor mov shr and shl movzbl xor mov movzbl shl movzbl xor mov shr and xor mov mov movzbl mov mov shr movzbl shl xor mov shr and shl shr and movzbl xor movzbl movzbl shl shr movzbl and xor mov shr xor movzbl shl xor movzbl mov shl xor mov movzbl shl movzbl xor mov xor mov shr mov mov shr mov mov shr mov mov mov shr mov mov shr mov mov shr mov mov shr mov mov shr mov mov shr mov mov mov shr pop shr mov shr pop mov mov xor mov pop mov pop ret push mov sub mov push mov push push cmp jae xor jmp mov push sub pop mov xor inc dec jne push mov lea call pop test jne mov add mov sub mov mov mov test jne xor lea mov inc inc cmp jb test je lea sub dec shr inc mov mov mov lea push push lea movsl movsl movsl movsl call mov pop pop push mov pop mov xor inc dec jne lea sub lea mov movsl add decl movsl movsl movsl jne mov mov mov cmpl jne addl add mov xor inc pop pop pop mov pop ret push push call andl call orl xor jmp xor inc ret mov orl push pop call ret push mov sub push xor mov push push push mov mov mov mov mov mov mov mov lea push push mov call add lea push push push call mov test jne push call lea push lea push pushl call test jne push pushl call test jne pushl call and lea push pushl call test jne push pushl call mov test je push push push push call mov test je lea push push push pushl call test jne mov lea push lea mov push call pop pop test je lea push xor push pushl push push push call mov test je push push call test je push push call jmp movl jmp call cmp jne push call call cmp je cmpl je pushl call cmpl je pushl call test je push push push call mov pop pop pop mov pop ret push mov and sub push push lea movl push lea push push pushl call test jne xor push mov pop cmp je mov mov inc cmp jl cmp jge sub lea push push push call add pushl call mov test je mov mov call test je inc cmp jl push call pop mov pop mov pop ret xor inc ret jmp
 push call mov call mov call mov push pushl push pushl call push call push mov sub push pushl call mov movl movl movl movl movl movl movl movl push push call mov pushl popl push call test je push pushl push push push push push push push push push push call test je push pushl call mov push pushl call push pushl call pushl call push push push push call cmp jb jne push call push call jmp leave ret push mov push push push cmpl je pushl pushl pushl pushl call jmp mov mov nop add mov nop inc push jp jb push inc pop pop push clc pop sub push jno shl pop rol ja jl cmp jb push xor pop js xor push push push test pop pop pop clc js push cmp pop push push test pop pop sub cmc sub mov mov xor jns push test pop stc ja push mov pop push push sub pop pop nop stc add mov rol jnp xor push ja stc pop jle rol jnp push mov pop cmc jno sub push push mov pop pop shl nop mov mov xor add push push rol pop pop jno push push pop pop push jb jne sub pop cmp jg jb or test nop ja push sub pop mov jae and push jno test pop stc push push push pop pop pop cld push jno push add pop jno ja cmp test test nop stc add mov xor jl push mov pop push push cmp pop pop nop push jo push push pop pop pop push push push or pop pop pop clc cld and nop add ror test push inc pop clc mov mov or cld xor clc push jle push add pop lea push cmp pop sub lea nop add mov lea jl and push mov pop push add pop push push inc pop pop je or jle jbe cmp ror push jns test pop jae push add pop jl dec inc ja jge add jns sub cmp fnop clc cld mov cmp jge jbe or jne shl push sub pop rol jo add or stc jle ror and and jo clc lea call push mov pop jb rol test js push add pop or je shl push add inc dec push ja push mov pop pop cmp push push test pop pop xor jl jnp jae ror mov inc nop cmp jne xor mov lea lea mov or push or pop and or ror add add test mov jle and sar jno sar jb stc clc sub push push rol pop pop push ja jl xor xor pop push push jge mov pop pop cld lea call mov inc cmp mov jne call lea inc inc inc push nop pushl popl push push push push push push pop pop ja sub or push and pop ror nop jb push and pop test rol je push push pop pop js or push inc pop jg jns jne cmp push dec pop push push push add pop pop sub stc stc push push mov call pushl lea sub sub xor push inc pop addr16 addr16 add inc inc push pushl call call mov pop nop inc inc pushl nop popl push push nop nop push nop push push push mov nop call push and cmc shl push push push add pop pop pop add or jno sub jp push and pop add push mov pop jle sub cmp jp std cld push jl or pop push push mov pop pop jnp cmp push je xor pop mov push push ror push pop jl cmp push or pop sub push mov pop cmp cmp and and and jbe test test push mov pop shr push jb sub pop test cmp xchg push cmp pop test test push sub pop test cmp push nop nop push push nop nop mov stc push push test pop pop clc xor push jp push rol pop pop jo jge push mov pop stc cmp push and pop push jle sub pop jo add cld and jns add push push jns shr pop pop jae addr16 addr16 cld push push ret mov cmp nop je mov push js push test pop push push jp cmp pop pop jbe xor push push test pop pop cld push ja xchg pop jae add and test cld push je cmp pop sub jae and push jo jae test pop push push and pop pop je jno je rol cld cmc nop test push push push nop pushl shl push jle shr pop ja jno xor cmp jp jno push cmp pop jbe push push test pop pop push push mov pop pop jg push mov pop jnp ror push mov pop and add push push push add pop pop pop stc stc stc ret xor jmp jmp xor pop pop pop leave ret sub add add add sub sub sub xchg sub imul xor int and sub xchg sub jg inc pop sub pop dec inc sub inc inc pop or pop pop inc or outsl bound inc inc stos dec dec add and or stos sub or out insl shlb dec int ja sub cmp inc mov das cmp mov push sub lock je sub mov sub dec das sub inc dec sub mov sub sub pushf lods sub sub sub mov test sbb sub stos lods cs sub and scas sub sbb sub aas lods ds sub sub sub cmpsl sub dec sub push daa sub cs add sub sub mov lods sub stos pop sub and pop dec stos dec pop dec sub popa and sub add push sub imul in jmp pop pop pop pop dec in sub adc pop sub sbb inc inc mov daa mov paddsw jle xchg out shr and pop insl adc adc adc adc movntps (bad) cmp sub jge or ds aam sub insl sub cmpsb pusha fstpt dec das jge in push sbb sub mov inc cmp jge in push aam jnp sub xlat jl cmp jae enter sub cmp and lea sarb push cmp push fcmovnbe ds (bad) sub mov and jp inc das lods sub xlat sarb jne cs sub jge,pn das inc sub jp,pt cmp and scas (bad) mov sub jnp lds and mov cmp das sub imul fsubr cmp inc cmp ss or mov mov cmpsb js jg pop das insl cmp dec mov or push fnstcw pop push cmpsb and jl adc es daa inc sub jl sub outsb frstor int3 push inc sub aam ds (bad) stos sub and outsb aad inc stos add or ljmp xor xor dec add push aam scas in mov sub sbb push sub inc jmp push out mov sub ljmp sub in xor or add fistpl outsb aaa filds std mov (bad) cmp push mov es sub cmp fsubl cmp add push outsb jnp pop cmp ljmp xchg sti dec mov scas aad and or sbb aam jo push cmp sbb or js cld push in pop dec cmpsb aaa push sbb push sbb mov or jnp movsl in push ds call adc ljmp jns stos sub dec das cmp cmpsb data16 in adc mov leave jns xchg stos sbb lods (bad) and js cmp dec in sub jge,pn das sub sub pop shrl sar cmpsb repz rcl and scas xor stos cmp or adc jns shrl rorb cmp dec sub mov int hlt lret lods int lret rcl rorb ror sub xor xor aam jns jl in (bad) sub mov sub mov push mov stos cvtdq2ps sub pusha lea cmpsb mov sub scas or push aad sub pop sbb pop out sub and outsb fnstenv ds fldenvs cmp aad ds fistpl iret lods lds les imul adc or shll jb std imul fbstp inc and idivb jbe out push and and push inc cmp add insb imul adc jp imul jns jbe xor das cmp sub cli popf sub es aas mov mov es adc xor cmp js jg adc push sub xor aam mov adc mov es and fldenv dec in or and xor sub das mov sbb cmc scas mulb xor jnp mov cld shrl mov push clc movsb sub aam mov movsb adc rcrw jnp adc push sub clc mov fstpt dec jmp gs fsubrs cli sub mov sub sub frstor lahf sub xlat dec pop cmp stc daa cltd xor arpl push cmp sub loop add mov sbb sub jmp outsb std cmpsb push lea jns inc or pop or js movsb jle mov js movsb jle sub movsb jle out movsb jle mov js movsb jle mov js movsb jle aam sub cmp cmpsb jle mov jg sti mov jge dec and lcall sub inc sbb jg push jnp sbb in sub sub (bad) in je adc das and mov ret pop and sub aam stos aas and cmp sub movsl and push lds adc pop or pop aaa mov mov jmp insl outsb cmp jmp jl cmpsb pusha aas push in push cmpsb das js int cmpsb jle arpl xor shrb movsb pop stc mov mov sub jl lea xor cmp sub mov sub iret sub lret movsb addps les insb rcrl js int3 sub mov pop fbld sub call mov push xor aaa sti int3 popa cmp sub xor iret aad sub ljmp scas das or stos (bad) stos sub loopne mov sub int ljmp icebp aam iret sub (bad) fs sub push out mov mov and and xchg sub (bad) das lods and pop fsubs lods pop cmp and sub sub rorl jle fsubrs mov sub dec loope jb dec cmp cmp sub loopne dec shll sbb push and sub jmp pop das sub test aas sub outsb aad pusha xlat movsb and sbb pop sub mov cs pop and lods rcr dec test sub lods (bad) lods shrl pop sub jae mov rcll xor jmp mov mov lret cmp insb sub pop push jnp sbb das daa inc jmp sub ret movsb rolw enter and lods (bad) lret and and pop and lea in das sub and and cmpsl outsb shrb daa je cmp inc les inc stc pop fwait js lock (bad) in and outsb ffree sub mov mov and dec adc pop sub jne pop dec loop out shr and cmp cmp cmp and stos mov sbb mov xlat std sub test cmp aas jge and and push sub stos cmp and and jle jle inc subl insl outsb cmpsb jns lret or int3 and aam aam fsubl aam dec shlb fbld sarb and test jmp sbb mov out sub imul sub mov int3 xchg sub aad aam cmp sub rol sub sub shrb and in rcl das pop test in pop push mov mov sub loop dec movsb sub movsb data16 inc push ljmp lds sub (bad) lods shrb push xlat mov int add cs int pop sub sub sub stos frstor test sub mov jae das push push stos cs and and es sub and mov sub scas mulb or push cmpsb aad sub push mov pop das dec sub sti movsb jle (bad) cmp cmpsb leavew sub push sub cmp sub cs ds jle sub mov ja mov outsb lds and pusha (bad) and test sub ljmp in sbb je or enter push mov xor loope das and jb cmpsb in cs and mov aaa jno,pt das stos shrl jge sub sub pop sub sub rcl aam cs and cmpsb fstps jmp imul push das inc test (bad) shrl xchg imul sub outsb cltd mov mov insl adc std fisttps and in adc or mov and cmp loopne jle xchg ds movsb jle sub test mov (bad) adc mov in cmp jmp mov and sar movsb outsb aad in and scas insl sub jle cmpsb pusha shrl pusha lret mov mov push loop clc ds jp jnp outsb leave sub pop sub out (bad) cmp inc and and push cmpsb dec and dec sub daa sub cmpb xlat lea cmpsb jle add fildll jbe (bad) std add dec and pop xor (bad) lret lds outsb std cmpsb and cmc ljmp lds and daa sbb dec and push out mov push sub jmp fs push push loope into or cmp sar cmpsb add pop cmp cmp dec std ljmp ss and ss push cmp and daa push dec sub daa sbb jns rclb jmp es es adc es mov ljmp or jge push dec mov jl das adc sub imul push ret adc dec add jo pop out sub lods sub das jb out aas pusha cmp jmp sub movsb outsb (bad) dec movsb outsb sub mov push jle cmpsb sub and in pop shlb or and sub cmpsb push lret cmp cmpsb push mov jg inc das jnp ljmp outsb aad sub adc test pop dec and cmp insl xor in cmp pop dec jmp ja movsl insl popa and mov mov mov inc out or fimuls in fbld and sti mov mov cmp ds or xchg sub jne jmp xor cmp sub xor mov mov and daa jge ret cltd jp stos push cmp imul jb xor xor test mov sbb and lea sub js int or insl add dec cmp imul imul fisubrs and scas sub pop test pop or aas cmpsb lods repnz fldt in sub mov mov int3 xor das sub aam and or shrl aam je call adc ds and inc sub sub inc aam sub sub outsl stos and or sub flds push mov sub sub sub lcall and sub cmc aam or lock mov sub sub sbb jne sbb or cmp jnp pop inc inc and sti sub sub sbb mov jne js cmp cmp cmc jb sub sub mov sub mov cmp cmp jb sbb sub jne aam fsubrs daa outsb aam aam aam aam mov daa sub (bad) sub pop push cs cmp mov sub sti fisubrs pushf sub cmp sbb jo ret mov pop std outsl out je sbb xor add sub call aam jp sub mov sub dec and sub mov sub mov xor jbe sub cmpsb scas scas imull sarb test lret inc cmp mov jge sub sti sub aad fistps (bad) mov jb (bad) sub and jl sub sarb das sarl ret rol cmp ds push js fdivrl shrl sbb jge and mov sub jle sub sbb pop sub jge popa wbinvd sub unpckhps jl ret imul scas in push and add nopl imul cmp das inc sub sub mov pop test or push fcomps (bad) jmp jge cs sub cmp es dec das jg and cmp and in sub adc sub xchg in sub push push cmp jnp mov pushf xor ret ljmp frstor adc mov js popa nop es jl jl jp push mov daa cmpsb fstpt cmc (bad) or jle,pt cmp or cmp sub mov and cmp insl test imul cmp imul or es sub movsl xor lock sub sub ffree ss mov cmp lods jp aam jne cli xor insb inc fidivs lods sbb push lock sub aad xor sbb mov jnp arpl js xor jns jnp cmp sbb imul cmp jl push call push jmp es inc adc sub or jp sub sub jbe imul dec ret pop and or outsl jg adc mov icebp test sbb lcall sbb cltd scas fwait cmp xor pop pop xor mov xor mov or mov sbb xor or aas push das dec mov mov and stos insb or psubb test push sbb sbb test sub clc lods mov dec mov inc stos fucomip lret and fnsave sub das or sti cmpsb fildl jns clc or int3 or jl mov jl push xor or imul dec xor imul adc push mov and bsf cmpsb sub jecxz,pn mov sub enter ds decl sbb adc mov dec jnp lods sbb xlat imul ret mov gs rcrl pop aad aam shrb sbb shrb sub jnp push ffree xor stc ret sub jnp jnp insl jge sti rcl cmp sub fwait sub push jge jge and insb sub es cmpsb sub pushf ret ret sub imul lret sub imul push or ret cmpsl mov imul or cs jnp mov lret and sub jle add pop adc out dec cs jns sub scas jp sub xchg sub sub ds insl imul sub aam jge aas cmp in insb imul sub stos shr sub inc inc sub imul sarb jg sub cs sarb (bad) sub sbb sub pop imul std mov mov das mov aam scas in sub mov iret sbb sub sub sbb sub jle aam inc and push adc push lds aam aam out sub sub add inc lds xor sub popl popf sub jl pop sbb jp push (bad) sub stos shl sub cmp sarb addr16 daa imul ret or push sub sub cmp sub daa and mov adc add aam aam jne mov sub mov das sub ds scas xchg and mov adc inc arpl cmpsl xlat sub sarb xchg sub adc mov aam inc dec stos sub lods sub inc mov js jg sub jns sub cmp ljmp sub or sbb jl or fwait in cmp mov sub xor imul insl sub insl daa sub sub sbb out out adc and sub xor sbb push lods push inc jg pop in sub pop in and test xor jnp clc sub cs sub sub cmpsb lods ss js cmc stos aas and out add ljmp and pushf insl cs stos mov pop jl sub mov and lds xchg rcl aam jmp xor sub pop xor pop stos sbb jge mov jmp lods fisubrs sbb hlt int3 sub cld jg adc push loop dec movsb rcl sbb cs test push into sub call jle daa in mov adc inc jnp sub dec push sub sbb mov cmp cmp jmp js inc cmp or ret push sub sub mov das jnp cs sub cmp or push xor sub sub jae sub or jg aam jge add movsl cmc mov es sbb movsb ss sub pop cmp sbb and cs and push out and sub xor insb int sub and xor dec and lods push in inc xchg sub lods and unpckhps and sub sub dec cmpsb outsb and xchg int3 and pop adc cmp lods sub es sub ds add ja sbb or leave jnp stos roll sub sub dec in inc inc imul mov imul inc cmp sub ljmp ret lret scas cs sub dec pop lea sub test mov sub stos cmp pop outsl or cmpsb and mov jnp pushf popa (bad) jp aam sbb mov or jnp les daa lea mov adc dec jg sub sub or lret cmp xor push popa (bad) sub jns ffree out testb mov aas sub ds cmp mov or pop sub aas and or sub cmc pop pop in sub popf sub jmp cmp pop inc ret stos ds lods and dec or int ljmp jecxz fldcw sub or push and daa cmp push lret int3 sub ds daa (bad) aam pop (bad) (bad) inc loopne int3 or jnp cmpsb cmp pop sub mov mov je call jge outsb and adc sub sub sub sub sub sub sbb sbb sbb mov sub sbb sbb sub sbb jle sub sub sub and sub sub insb sub sub sbb sbb jno sub sub mov sub sbb cmc sbb rcrl sub sbbl dec sbb sub sub sbb sbb fstpl cmp sub arpl leave sbb sub sbb sbb pop sbb jnp sub sbb fwait sub sub cmp sub pop inc fwait sub sub pop sub sub sub sub sub jge pop sub pop sbb dec sbb inc sub sub cmpsl add sub sub inc cmp add popa sub push pop jnp inc sub pop dec push sub dec pop pop sub dec pop jge dec pop sub jle dec pop inc inc das inc fnstsw pop jp dec pop dec sub inc pop dec dec test sub and fwait sub jg adc sub and sub cmp jnp dec mov sub fwait and das pusha sub pop dec inc insb inc jne inc dec pop cs and cs pop sub and and dec cmpb and jns mov cs sub pop sbb pop pop sub sub or fldt jge stc sub ds jns dec adcb sub sub sub sub pop sbb sbb sbb dec pop sub sbb stc sbbl inc mov sub dec inc sbb jae dec inc dec and and outsb aas daa dec fnstcw ja frstors sub aas pop sbb jl jns fidivl dec sbb ja std outsb jnp jp dec jg jnp and inc cmp sbb adc xor sub pop sub sub pop dec pop pop inc pop sub dec pop dec pop inc dec jge push sub sub jmp sub pop add sbb pop dec sub dec fildl dec jge ja push sub adc push push sub pop sbb test push sbb aam sub push insb push insb push insb push insb push insb push insb rclb push push push push push push push push insb push insb push insb push insb push pop or add jp insb jnp leave add xor (bad) sub sbb push pop pop sub dec inc pop inc sbb inc pop pop cs fldt or dec jle push or dec das jle sub inc pop dec pop fwait push imul inc dec jns pop inc pop sub sub addr16 dec fldt popf ds jns jns pop pop mov outsb dec pop pop pop dec inc cwtl popa or movaps imul sub sub inc dec arpl dec inc or sub xor (bad) pusha and das jnp fs pop dec dec sub inc pop dec sub daa sub inc fs and daa jmp sub sub daa cli sub cs pop pop pop add sub pop and pop push and sbb sub jae ds sub sub sbb pop pop pop jae sub jg cmp inc pop and dec push lret das das sub inc pop inc jp sub inc inc inc inc sub pop sbb js dec or pop fdivrl inc sub cmp out gs sbb push (bad) out cltd sub sub pop pop sub sub dec pop dec js pop sub sub dec pop addr16 pop pop outsb sub sub pop dec inc jle inc dec or dec sub outsb push inc pop jnp inc dec sub pop sub pop outsb inc inc inc dec inc dec and inc sub cs sub inc dec pop fs insl sub shrb jl imul pop js jmp dec inc dec dec pop sub jb in pop dec inc pop sub inc dec dec pop and inc dec pop outsl inc dec sub arpl sub insb sub sub or push fs sub bound inc pop sbb sub outsb pop dec dec pop shrb sub scas sub das pop sub inc sub dec push sub pop pop dec daa dec lods and stos and dec imul outsl inc pop sub push lods and sub inc mov add scas xor and inc sub stos popa insb test sub add jns outsb popa sbb inc sub pop pop pop lods pushf pop dec jp sub scas es lods or pop gs pop inc sub inc sub push sub inc inc dec inc sub push pop pop stos popa rep inc inc sub out scas cmp pop inc dec pop sub sub sub lea inc jle lods (bad) out xor jg dec dec pop scas xor mov inc inc pop pop jnp das inc pop lods push dec dec jnp inc adc sbb lods cvtps2pi dec imul push test sub pop cs sub dec sub dec dec push daa sub daa imul outsl data16 inc inc pusha jge inc pop inc jmp jle dec pop pop inc dec push jl in scas cmp das scas inc sub scas sub sub push dec dec dec pop in es jle pop dec pop pop sub outsb pop pop sub inc pop pop dec pop dec testl insl xor out add outsb sub mov and cmp imul pop testl in aas push push sub sub lods cmp jnp bound out sub in dec imul inc dec dec pop jnp pop out inc insl and push sub sbb das xor xor xor xor shlb xor xor xor xor xor cmp sub sub sub mov mov xor sub int les sub sub sub lret sub lret sub stos sub lea test das and and das lret fldcw (bad) or sub sub sub cmpsl js sub int xchg cs cs sub sub mov sub sub sub dec sub dec sub sub imul mov ds sub sub or cs pusha dec sub clc sub loop push pusha sub mov lret addr16 lahf out mov mov mov sub call das sub mov lahf or arpl jo movsb lahf and cli mov sub cmc xor cmc aad jnp jecxz xor xor xor and shlb and and and and and mov pop cmp cmpsb dec sub imul lods notb sub sahf xchg jnp sub in movsb mov mov sub adc jge push xor inc sub sub outsb leave out lods sub fsubs inc lahf mov cltd cmc cltd out jge mov xor mov mov sub xor (bad) incb lret cmp outsb sub mov (bad) outsb push sub fwait daa or imul in push nop mov sub call push push dec cmp sar push leave and sub mov sub sub adc sub negl mov adc jecxz das adc push and addr16 stos imul mov sub xlat sti jle cltd loop mov adc sarl sub adc xchg add nop cmc push jnp mov mov in cli es inc call incb push inc jle cltd and cmp imul sbb and sub sbb xchg shrl clc call cltd lahf sub testl negb sub pop sub xlat (bad) cmp sub sub shll sub and mov sub mov mov sub xlat clc push push sub xchg ljmp sar ljmp out roll sub fwait and xor sub loop (bad) adc loop,pt mov push lcall lea xor or adc dec scas sub xchg stc outsb xchg jmp xor sbb xchg xlat lods push sub push jo push adc or clc popf and xlat jne pop mov ljmp shrl jnp push xlat sub adc fsub or addr16 aaa out lods cli adc cltd sbb sub sub test xor lea mov mov enter and repz cmp shl sub jno sub shll out outsb sub call dec cmp repz adc out adc sub jbe xchg shrl test xlat clc lret aas cmpsl stos cmc jo aas cmpsb out cmp cltd scas dec add cmp movq mov mov dec and sbb out popa add jnp sub stos and pop sub lret mov fmuls xor add mov mov xlat xchg testl and lods xchg mov ljmp and and rorb sbb mov icebp (bad) mov icebp leave mov mov and dec push adcb mov pop mov push outsb in xchg (bad) mov jnp and mov and xor xor sub sti sub cld sub stc mov sub sub jnp and int3 mov cltd sub push fdiv repz xchg push sub xor outsl sub cmp int3 or lcall cld pop or cmp (bad) cs repnz and das stos sbb inc cltd cmp mov dec aas push jge aaa repz jmp xor sub xor jmp mov cmc sub out in repz lret xor iret push jle das xor pusha mov push push sub push fcompl pop sub pop ja jmp mov pop sub sub fisubrl sub and push adc mov cltd addr16 adc test sub sub jb sub jmp int3 cltd sub fsubrs sub sub cmp xchg adc stos das lcall sub lahf fistpl mov adc cltd out popa lahf int3 imul sub and sub sub and sub xchg sub sub sub mov xor lahf and sbb fwait xor cltd dec fsubrl int3 dec and das nop (bad) cmc jnp xor lahf and sub dec xrelease sbb cltd sub nop and sub and inc xchg inc mov incb xor add xor mov push (bad) xchg sub sar stos sub insb movsb insl clc das mov push jae sub insl clc push cmp push sub loop cmp scas (bad) clc lods xlat (bad) fldt mov mov sbb in xlat push mov nop xchg lahf sub xchg add addr16 cmp lods xor sub xchg jb int3 sub into (bad) in dec popa lahf and das decb in sub sbb sbb and in sub xor push add xor std popa lock jmp mov movsb imul or mov and aaa subb mov jae loop push nop xlat (bad) and add add jg push out add push push sub in outsb clc mov loop xchg clc mov or push push test adc push push shrl xor push incb jbe and outsl cltd adc push sub lret call stos adc stos add sbb add jbe outsb cmp cmp stos xor xchg mov cmp xlat mov out addr16 pusha out and cmp rorl out sub and pop popf add inc inc sub clc pop mov insl xor ss popa sub xlat js,pt or sbb sub adc pop lahf jb or dec sub outsb sub jle jl and js and cltd jmp stos cltd push add sub jl loop insl cmc jle lret jo sub dec std repz popa sub push xchg sub xor sbb cmp aas sub and xor int3 lret aam mov add js mov aaa or or adc das repz dec sub cmc popa and int3 sbb sub mov sub sub inc or cmp dec and and repz sbb and out inc or cmp jle stos int xor mov or imul test mov rol dec arpl jle sub mov push test xchg popa cmp in es es mov dec sub out lret imul sub xchg fsub add int3 int sub int3 sub cmp imul das cmp pop js,pt scas dec test xor jle sub sub add in sub int add or nopl sub imul sbb dec and cmp dec lea lock lods dec cmp movsb mov in and dec and pop push (bad) cmpsl aaa jle or in dec cmp jle sbb sbb cmp or and iret sub and push mov mov jl js jge outsl or xchg lahf dec fs out stos imul outsb aas cltd lods sbb lea or cmp or push mov cs dec stos or xlat mov jle or ljmp xchg mov mov test js and sbb aam xor iret or mov das iret in dec mov cli jle sub adc dec lods add xor shrd push sar lret sub xlat cld jge inc shrl cld lea xlat cld into push iret clc or sub dec push xchg popf wbinvd sub xor or jbe sbb in movsl mov lahf jle push rcll dec stos xor jo aaa dec dec or pop cltd or or and outsb cli jmp and cs sub into ds stos or and stos sbb jge mov or mov sub int push cmp daa int push enter push int3 cmc shll mov push imul cmp mov lret bound xor int3 sarl mov push out imul in jge stos int3 insl xor cmpsb insl sub push add insb mov cmp pop xchg cmp xlat cmp sub mov (bad) aas sub mov add add imul or dec lea jp in and mov xor xor pop dec bound mov xor sahf stc push insl sub stos jge mov sub sub xor sbb out shll xlat sbb sub shll insl shll xlat fs das cmp outsl aam sbbw push mov mov lahf cltd les mov ss xchg xlat clc or lahf mov cmp sbb scas and xchg push mov and or sub jnp mov test imul xchg or xlat or jecxz xor mov push in lock and cltd xchg xchg cltd and and clc cmp loop mov pop aas push cmp and lods es sub or out repz mov jle mov add xchg test test sbb push ja sub sbb dec iret push mov outsl cmpl adc pop or sub in add decl sub cmp insl cltd js pop add sarb or push stos or add xlat mov ds mov (bad) cld or cli sub dec jmp lcall out and sub adc and or dec dec xchg imul jge xor call add or das xor daa and (bad) cmp lahf mov push insl mov mov outsl and icebp xchg lcall int jp out sbb add jno loop push out or jge pop loop cli sub jnp sti icebp adc sub ljmp (bad) push aas pop sub cmp outsb aas out push std mov sub xchg std lret sub or ja mov mov pop sub push stc mov sbb sti add aas cmp sbb std das je jle,pn push ficoms mov sub call stos add xchg or xor test in int3 jge push ret adc packuswb xchg out mov xor lret add cli mov orl aas int in aas icebp jno insl xchg repz bound push dec (bad) outsb enter lea jle mov jnp and push inc cmp sti cli or jmp xadd or call mov sub daa shr or mulb mov loope and arpl aas jle dec cmp xor es sub xlat call xlat sub adc adc sub sub int3 lods push loope sbb sub pushf das dec stc sub out lahf lods cs ss or dec scas test mov sbb popf sbb movsl cld sarl or inc cmpl in jnp call popa lock and out sub and lods lahf and ljmp push jp out jge xor mov mov out sub push inc in test in sub ja jns push mov (bad) in dec jge popf jg jae nop sbb sub and ja mov scas and adc and outsb and sbb mov out dec sub mov stos add adc cmp imul sbb sbb int3 add mov xor outsb sub clc call (bad) push or aas sbb sub push sub or dec and ljmp fucomip int and cmp sbb xor cmp sub mov cmp add imul push or sbb sub sbb push lcall ret add lods outsb cltd outsb or inc sub mov jp repz pop add push sbb sbb sti xor and and and aas push into pushf sub mov or rcrb cmp das xchg mov sub cmc xchg not add sub cmp outsb std sub outsb mov jp in push sub call mov das xchg call cli sbb subl add sub adc push sub sub push mov pop sub xchg xchg ljmp adc sub xor cmp lea push mov (bad) insb pusha pop fnsetpm(287 fadds outsb popf add cltd popf jp lcall lret repz pop lahf (bad) stos popa and or popf sub imul or fdivrs cmp cs cs xor sbb clc (bad) jecxz in inc fisubl sbb dec sbb or cmp decb notb (bad) push dec sub repz cli (bad) dec loop mov push lea (bad) notb in jmp insl subl sub push or imul cltd lret push cli aam cltd jmp add push fistps sub call enter xchg int lahf insb mov out adc fwait push sub mov int3 adc movsb ss imull or sub lock jno adc outsb inc int3 incb push mov sub loop xor out rcl jl loop mov or sub sub mov mov sysret mov icebp je push movsb sub pmulhuw xlat jnp aam rdtsc mov cltd sub xlat jp xchg push sub gs out sub cmpsl add push jge cltd push call pop jl mov outsb sub xlat adc push xlat stos sbb sub adc es gs sub movzbl adc (bad) stos adc xchg jo lahf in xchg sub mov test or or das add inc push outsb sub sub icebp sub pusha jnp push stos adc lods or push aas in sbb icebp mov ds and and push shrl mov loop js push int3 lahf and push out mov add mov jne xchg sub loop call xlat push lods and pop dec stos stc ss imul pop sahf sub mov fst lahf cltd sar or jmp sub outsb aas sub sar xor (bad) aas and and jbe sub adc xlat loopne pop xlat loopne push in add imul cmp clc and cmp in aas stos push pop test xor fisttpl xor or sbb xor es sub loop push mov in cmp lods cmp and shll cmp loopne or lock and sub (bad) enter cmp sub xor push into mov adc and cs das push sub jnp mov ss js das xor lahf mov outsb adcb stos sub and ds enter adc lods sbb ss sub lahf cltd jmp and push mov or loop cmpsl es addr16 aaa cmp int3 outsl sbb out ds incb lret popf sbb mov test xlat incb sub cmp repz jp addr16 sbb push aas nop in adc imul push sub ret add stos and cmp push sub lods in sub aas sub sbb cmp cmp aas loop sub cmp int3 sbb test hlt insb movsb call mov es or nop imul out sub mov loop lahf icebp jecxz pop mov ja pop out or test insl (bad) stos sub pop shl daa xor and mov stos mov cmp cmp arpl insl clc jmp mov sub into cmp cmp sub pop dec cmp and mov ss adc inc (bad) psubq sub and and and cmpsl cmp sub neg jl sti and push popa and or dec xchg std and (bad) pmulhuw mov adc push xchg sub and pmulhuw cs jmp mov cs stos dec outsb mov neg stos or mov notb lret sub ja shr xor or orl popa stos mov inc lea mov mov dec jge int3 stos and lret jp sub or sbb or sbb lahf sbb sub ljmp push lret sub scas push add dec adc push sub dec in mov adc nopl or lahf or lahf or (bad) mov adc lahf xlat cmp outsb std adc aas push dec das movzbl and sub jge sub outsb add outsb mov int sbbl aaa ljmp mov lcall dec out outsb fmul xchg fwait or and lods dec xchg sub pop cmp jnp repz sub mov xor lahf std add ds mov or imul add out and xchg xlat jp testl xchg sub sahf lret cmp adc or mov clc lret mov add push xchg repz stos stos jmp cld lea and lret cmp push or das dec xlat add imul xchg jecxz (bad) rdtsc stc pusha or jmp add das mov xchg clc push cmp sub stos daa sub xlat adc mov or sub outsb xchg call (bad) rcll imul add and and xor lret lea (bad) push scas push add jnp sub add mov sub xor xor (bad) cld into cmp int enter or dec or or das aam daa leave xor cmp cmp inc out cmp (bad) push xor sub int3 push add imul push mov xchg outsb (bad) call jp shlb dec rorl xchg nop or sti lea xor icebp jmp jg jg cmp or xor mov mov insb lea mov int and imul sub xor cltd mov push outsb dec mov out out xlat call mov sub push cmc and or mov and jle popa and js fwait shl loope nop addr16 add dec xlat dec sub imul popa push xchg sub ss clc stos out popa paddsb sbb jmp popf add inc dec in adc jle push jbe std adc mov sbb sub stos adc js icebp mov js pop sbb mov pop cmp or dec mov xor movsb push test cltd imul dec xor push jle lods cmpsb push or lret cmp cmp mov jle sub jnp enter mov push das clc or out xchg gs lahf pop dec cli mov mov outsb cmc jle push sub outsb xchg pop out pop sub loop clc xlat xor das xlat cld out push sub sub cli mov pop xor sub mov sub pop jl popa imul pop dec je jle jmp mov (bad) outsb je sub cmp and stos sub addr16 and js divb jnp outsl cmp mov out sbb stc sbb sub jae push cltd sub jl loop cmp sbb negl and fsubrs repz jge sbb fdivrs sbb and in push jns pop in mov and dec push jle dec daa scas lcall mov pop or daa mov xor in sub popa lock in pop cli lret sub das and int (bad) stos sub jae mov sub xchg dec js mov mov call fisubl stos std das xchg push mov push and movaps sub test sub sbb and cli pop and (bad) sub lods repz out push dec sbb jge push mov sub mov cmp mov and negl in push stos sbb mov and or cltd js repz sbb push cs jnp pop fistps cmp adc pop cmp and jle sbb ds and insl push aaa sub sub push pop imul jge out cs sub das xor or imul sub add push mov clc pop cwtl cli pop jns popf sub or js subl sbb pop mov inc dec dec sbb sbb mov sub cld imul push sub pop test or wbinvd xor sub push lods insl sub sbb push leave sub or add dec cmp dec stos sub inc mov sub sbb mov push mov sbb jle pop sub (bad) sub jnp push hlt jmp int fisttpll daa sti push mov das imul push loopne mov cmc dec sub sbb push jl adc aaa dec fidivl call jle cmp call pushf add popa cmp pop cmp mov push or sub out dec sub sbb aaa movsb fbstp jge xor push push dec and sub sbb push mov daa daa out ss clc jae cmp lods insl adc (bad) js pop add adc or in es js sub add dec aam mov push mov loope xor adc das sbb cmp pop push mov xor fwait ljmp and pop push (bad) in sub repz insl sub popf sub call cmc cli out sub mov mov pop mov popf xchg out jp test mov pop inc push outsb in push iret movsb or sub sub add push (bad) cmp lret adc mov sub push fdivrs or push lret sub and jbe xchg mov mov push rcrl nop arpl push dec loope insl cwtl js mov cld out mov sub jnp sbb inc sti sub dec sbb cmp or push or sbb jp dec ds dec cmp ds loope or mov push sbb push out pop das xchg subl lret in pop push fmull and and mov cmc pop dec and fildll and xchg or inc and push lea push cmp lahf cmpl mov jbe push loope and pop dec or pop loop cmp insl sub das cmp cld and jno rorl push jmp push repnz or cs cmp mov sub js lahf and mov mul nop sub add pop and lock aam ja roll rcll imul lods mov inc lret ss dec (bad) outsb in out add jno lock loope inc cmp and cmp in sub loop fidivrs imul outsb insl cmp clc or jge inc cvtps2pi int3 pmulhuw cltd lahf xchg insb movsb mov lods das mov cltd cvtps2pi cmc je lret out stos push pop out lahf cltd ss cs or mov add jo and adc sub lds lods movsb sub dec lods ss mov sub cmp or lahf int3 dec sbb arpl sub adc or push cltd cmpsb xchg dec mov sub push aam cltd mov outsb push stos push stos jge iret stos and cpuid sub clc push in stos cltd lahf mov push push mov scas imul lahf lods sub clc sub xor mov cs cmpl call sub push jnp sub imul or or or lods dec xchg and and stos cmp (bad) push jo int3 lahf cltd add outsb adc inc test lods xor ds xor sbb js cmp lahf int3 testl pop sub add movzbl cltd lahf out xchg xchg sub das push fldt sub lahf and sub sub dec dec lret imul push push add in insb lods popa jbe or leave jmp sub mov lahf cltd sar push push xchg xor outsl das out push cmp cmp sub push mov scas sub cmp sub inc sub dec mov or and and lods adc add ret insl ds or popa in sub cmp stos jae jle dec imul insb inc xor jle test out das push test clc xor cmp pop mov mov mov lret (bad) outsb mov push sub push (bad) insl fs imul sub int sub cmpsl mov dec mov xchg add xlat sub out das test mov and sub pop cmpsb cmp lods lea insb sub sub or sub push int3 dec loopne ds imul popf jmp mov xchg mov xor daa inc les aas ljmp icebp inc (bad) mov shrl or xchg push ds popf xchg push nop or add add pop jmp sub push das sub inc push stos daa roll adc das addr16 subb pusha mov (bad) fnstenv dec daa cmp jmp push outsl daa mov mov int mov mov xchg sub xlat xor gs cmp lea xor cltd sbb push xor out push fstl lahf ja mov adc push adc and das jg inc mov mov cmp sub adc popf stos add or (bad) int3 sub insl dec cltd lahf cmp cmp sub jmp std or sbb adc out mov pop lret or dec push sub insb inc std sub push xchg xchg xchg pop sbb push dec scas and nop insl jmp push sub mov cmp sub mov xor psubb dec sub shrb popf cltd lret insb push push lcall lea mov das push cld or push shrb xor xor loop andl push sub jno cmp movsb outsb cmp leave sub add push lcall dec scas cmp pop ss nop insb ljmp in and imul or imul notb sub imul xchg dec cmp sub mov popa imul lahf or es sub pop push dec iret das lret (bad) sub cmp push loop outsl cmp sub or jo cmpsb mov or and xor xchg push daa imul mov or (bad) and sbb movsb mov cmp jmp push stos and cltd mov push fstps leave push daa sub cs or stos insl sub and pop out scas push adc lret enter outsb std push call insb loopne add push mov test loop cmp and daa or add mov nop outsl movsl push ds or and push push test xor pop jmp or pushf shrl mov jg pusha iret jg and or (bad) clc or cmp mov push mov mov push jnp outsb lods in pusha lret mov mov test sub push nop sbb loope or movsb mov adc in xor dec xor xor imul es mov in jb push xor add cli sub or sti pop and push sub or out dec sub js cmpsl xchg jle sub jp mov sub xor push push int icebp and adc in sub sub push push lret xor sbb sub dec jno (bad) cld popf scas cltd pop dec mov fs or or push sub xchg popf jge push xchg popf cmp cmp xchg js cwtl cmp lret add mov jp adc push jge dec into sub lock push sub cmp cltd inc out outsl outsb push push pop stos dec sub xor lahf sub stos sub das imul sbb sub psubd mov push inc lahf cltd jl jmp sub psubd cmp psubsb lahf popa push jns jnp repz jle push pop push (bad) dec sbb das aas stos popf sub sbb iret stos add out jns (bad) incl ds in sbb push mov sub cmp pushf sub mov aas push lret xor xchg push test jge in (bad) push sub dec sub mov cmp es rcrl das sub lods imul push sbb sub sub cmp lea movsb pop xor xchg aas sbb pushf aas faddp and push clc inc sbb or in adc flds sbb or or or xor shl popf sbb ja sub push xor aas or push or xchg push int3 clc xor sbb jae xor leave das jmp xchg adc adcb and dec imul add adc and popf and pop and fwait ds aas dec adc mov jmp jp fisubrs inc push mov sub pop dec fildll outsb imul pop scas xor clc imul mov mov and cmpsl sbb out sub jmp cmp or das mull fcmovu cwtl aam (bad) push lret dec push int lock mov xchg inc call ss and shll sbb and aas push aaa mov icebp lods xlat decb jmp cmp mov (bad) mov frstor pop imul or clc stos sbb push insb adc (bad) xor insb addr16 xlat cmp push and and push cmp sub sbb adc push (bad) sti pop mov scas push dec jb jmp cmp cmp out dec mov imul mov das sub cli push mov ds xchg xchg std sbb movntq lret jno mov xor inc push jne sub lods cmp das stos lret xor push cmp dec sub (bad) fwait jl adc std mov int3 imul cli sbb mov (bad) fldt push push xchg sub pop cmp loop sar jmp cmpsl mov mov inc (bad) das mov clc in mov insl jge push insl in std cmp hlt cmp int das or cmp insl nop in movsl push pop stc insl sub ret mov sub es cmp mov adc outsb mov push sbb popa mov call incl cmp lret and push test imul push (bad) fnstsw fwait push mov mov xor xor data16 or (bad) dec cmovne add out scas and sub sti shrl pop push mov sbb inc insb sub cmp cs or dec mov and push std dec sub or cld push cmp xor mov sub xchg xchg mov dec into icebp add stos sub sti cwtl jnp ret xlat cmp ljmp jge aad mov cmp pusha (bad) xchg fistpll lods idivl xchg lahf jl cmp imul xchg jp xor pop scas mov push xor mov lods dec sar in jo int3 push mov sub nop cmp data16 cli insb jo js ss lret test mov js push or out call das jmp loop pop sub in stos cmp fldt out loop das out sub sub inc wbinvd outsb sub mov loop sub loop push and cltd lahf sub mov mov adc lods out lahf sub int3 (bad) xor dec cs jns xor sub in sub ja sub mov lods movsb inc and ficompl dec sub xchg daa iret sbb push xchg inc lret mov test xor imull and inc loope mov cli dec or jle stc call cmc or sbb nopl jo and adc sti inc into sub pop sbb sub lahf int3 mov sub ss mov xchg lea or sbb sub or in stos xor xchg popa cmp push sub push lahf cltd loop aas outsl ds lret scas sub or movb sub out les mov sub add sub ret inc scas sub ret (bad) scas sub ret sub mov hlt test cmp sub sub jbe mov pushf sbb sub sub fwait sub wbinvd pmulhuw cmp mov andl sub stos dec xchg sub add mov sub test lahf or add in fmull add imul in sub movsb outsb cmp jge in pmulhuw sub cmp and loope sub jle sub inc sub lahf cltd add (bad) insl sub jle lahf cltd mov in das xlat sbb sub and jp and js xlat shrb or push sub sbb cltd lahf insl add imul aas sub or in es outsb cmp xlat mov lods pop in enter adc sub ljmp adc das outsb es mov arpl scas and jnp sub jmp outsb mov and scas es cmp movsb xchg cltd lret adc (bad) lods outsl jge xchg addr16 imul popa and das or nop or jle sub mov push mov cmp insb into xor sbb in push push das add cs out clc push pop sub dec outsb imul stos mov pop jmp lahf cmp insl aaa imul sub (bad) outsb push xchg xchg sub nop icebp mov orl and daa mov clc js daa push stos and jle,pn imul add pop push test sub (bad) cltd lahf jp imul cmp outsb std mov jmp or insl or sub in movsb stos das outsb and int3 and clc push outsb lea and sbb in xlat in aas push lods das ljmp sub lret push or stos in sub out js das and sub das mov lods mov incb push adc scas ss sbb es xlat and shll sbb push outsb lret xor outsb cmp movsl outsb and lods sub incb adc mov insl sub push sbb clc push mov nop (bad) loop push jg sub xor cmp outsb imul nop in int3 sub aas imul jmp stos cltd jl and mov cmp shrd in sub fistpll int3 or push (bad) sub mov xchg add das cmp mov jbe adc cli int3 cmp sub lea push fimuls sub stos mull ss mov ljmp sub sub mov ss loop jge sub repz js xchg out gs or lret ljmp std mov sub cmp dec sub cld cmp insb in sub (bad) out or dec lock sub sti cs cs or cmp nop insl cmp or xchg xchg mov and sub and sub inc xor and mov sti cmp roll nop or mov cmp pop xchg add jbe leave dec das dec mov mov idivl jmp inc (bad) mov sub stos adc dec (bad) lock inc (bad) dec fs xchg insb movsb stos push ljmp jecxz and mov mov fcmove sbb pop push aas lret mov leave mov or sbb stos pop idivl lret or stos xchg push mov dec pop cmp imul loope sub adc stos sub lret pslld cli xchg or popf or cmovne adc sti icebp cmp sbb mov mov mov cmovno mov lret (bad) dec idivb aas jle cltd imul sbb call dec mov pop dec ljmp movsb push ss insl add adc push lahf push cmp stos cmp insl pop add mov pop jo cmp sbb cltd clc push or sub jle add out mov outsl je inc sub sub call lret imul or push and in sub clc mov push or jp js outsb push call cmp or mov sub es sub mov je push adc stos outsl loop sbb push (bad) stc pop jbe sub and add loop lods jbe addr16 jl das popa stc xor mov stos jmp sub mov pop outsb std sbb insb cs or out outsb cmp pop xor push adc nop and xchg and lahf and nop and and nop and fwait and dec jl outsb cmp lods sub mov sbb les out jp mov lret js mov dec sub xchg stos addr16 lds xor cs jno mov ja xlat ret js bswap sub inc jle push loop mov push jnp cmp loop sub stos sub pop mov push or mov outsb and push icebp scas xchg mov cltd xchg add (bad) sub mov mov imul sub popa icebp and push das add js jmp sbb mov sbb or mov pslld dec push adc lods pop jge xlat (bad) out mov add je test mov int3 push xchg ljmp lods loop xor std dec insl lea int3 insl xchg stos push mov adc ss add add sub fstl xchg push push pushf outsb sbb sub sub imul lret jo push lcall int3 add pslld outsb add lds mov pop adc and subl decl push xchg inc jge cld push out jmp iret in add inc cmc jle mov fwait sub (bad) cltd lret pop and movsb pop sub mov xor (bad) pop xor mov xchg scas mov and int3 push mov insb in lcall movd das mov sub dec sbb add cmp pop xlat dec js imul sub and xchg dec js xor sub addr16 and sti sub popf push dec jle jmp paddusw pushf das sub ds (bad) add lahf jle push dec push cmp jl sbb mov jge and cmpsl push idivl lods iret mov mov and mov dec sbb imul push mov das push xchg cmp mov sbb int3 push push adc push push sub jl lock out mov repnz or fadds or cmp loop cli inc and mov inc pop cmp int hlt inc inc pop out inc pop in into je mov xchg push int3 lahf dec inc and inc fimull dec mov sub in aas push insl clc movsb lret jecxz cmp dec sbb pop int3 sub xchg mov rorb pop and xor sub inc cmp jl mov std aam dec push dec sub sub and sub mov xlat cmp ss not js or and fs mov mov xchg cvtpi2ps int3 push or fwait and jmp int3 xlat test sbb pop bound aam pop jno mov or and into and and sub lods xor into imul das lahf or lahf push jne test add add lods sub mov dec ds cld cmp dec sub add and xchg dec int3 push pop push and das int or popa cltd adc add cmp mov push mov mov pop sub clc push cmp clc lret int3 inc clc sbb das outsl pop and (bad) adc push aaa cmpsb imul mov lods sub push add and (bad) movsl mov ljmp push and loopne lcall ja xor push mov pusha fistpl int3 mov jo inc xchg dec imul lret aaa movsb iret adc pop cmp cld jns xchg dec xor in sub movq call les or int3 push pop (bad) pop lret scas insb movsb xchg in (bad) mov jl,pn into (bad) dec xchg sub or sub nop in adc xlat adc sub mull xchg mov and inc lret add loop push mov sub mov jb int3 or inc cvtps2pi int3 outsb mov sub repz cltd lahf lods outsb push jmp sub aas or movaps cmp ja push call (bad) xor cltd jnp clc push sub sub insl add sub adc sub js pop sub push adc sub sub mov cltd mov cltd lahf sbb cltd lahf or sub ds mov jge sbb sub imulb popa cmp test push sbb lods sbb cmp lods adc push sub lahf lock and jge and lods cmpsb xor or inc sub mov outsb std push sub mov or arpl cltd sar imul push imul push fldcw push lods sbb (bad) arpl pop xchg int sub sub outsb std roll imul scas sub stos das insl adc cli xlat cltd push imul jl and clc push xor or adc (bad) outsb push xor push mov inc lods and mov notb push lods jne pop cmc sub adc out cld cltd lahf push fisubl add xchg inc dec cmp and cltd lret pop add mov rcr in or pmulhuw sub sbb int3 sar push sub incb mov pusha call jo das mov sti inc mov int3 push into sub or dec xchg or xchg outsl jae xchg je jp loop test inc lock cmp movq insl ja daa jmp and and test xor dec addr16 rolb dec mov lods dec sbb sub movsb outsb add lahf cltd add sub pop outsb sub push cmpl sub push rcrl inc call dec jo mov mov lods jo sub mov (bad) outsb sub lret shrb cld mov cli out xchg in sub xchg push xchg or xlat cltd or (bad) in sub push scas lret dec dec mov cmp or incb arpl (bad) cmp imul lods es in jb push cmp in jo dec mov stc mov sub sbb cmp push sbb enter pop sub push cmp push sub xor sub scas loop stos add insl nop lret test imul jnp lods and and test out mov mov push cli sub arpl dec inc insb das xor or nopl cmp cmp dec and loop pop xlat and or push sub jmp (bad) push imul scas or and push mov xor dec cmp and mov adc dec and and and mov and and out cs aas outsl mov aas mov pop clc inc dec push ja push (bad) xor (bad) stos cmp sub stos shrb das nopl xor cmp int3 xor out sub inc outsl xor ja testl or in sub inc mov sub leave sub out sbb in mov sbb sub gs fldenv sub xchg mov sub sub iret sub adc stos arpl xchg test subb (bad) icebp aam (bad) call fs jno sti mov js aas in jle jl and dec js addr16 jp aaa in sbb mov sub imul rcll icebp sub cmp out or push dec sub lahf and lods or test or mov in jb loop xchg leave sub cmp lahf int3 aas xchg stos sub add dec push bound stos sub iret push int3 sub push sub pop insb sub push scas pop sub sbb sbb daa push sub (bad) ss cmpsl lods loop and aas jle iret and dec lea jp and nop sub loop loope sub icebp mov sub cmp and add sub mov push mov mov sbb lret in cltd lahf xchg insb int std mov rdmsr dec and loope mov leave cmp cmc enter sub sub push call lods pop push mov imul lods scas daa inc into sub cmp add cmp sub sarl es sub or push ret xor ss jmp add stos ret sub movsb subl cmp cli mov loop dec sub cmp clc pop ss or (bad) clc pop aas sub aaa int3 add xor (bad) ja lcall pop sub ljmp cmp and add ss xor or or sub or bswap sub sbb lret fisubrl mov xor or mov nop dec or fldt sub jg mov sub cmp mov sti daa and lret fs sub pop mov cmp jmp nopl fsubrl or and and mov add gs mov xor dec sub mov dec sub movsb mov lods sub mov mov mov sti xor sbb aad sub sbb sub push adc sub add leave mov fwait jne sbb mov push popa mov jp in xor xor outsb cmp movsb ja adc sub int3 mov sub push xor cmc lret sub push stos sub rcll xlat sub xlat push cmp push insb sub push rcll scas rcll xlat push fwait shrl mov push iret and push mov push insb das sbb jge mov adc aas sbb add mov pop sub cmp sub pop ds int3 and sbb jl push (bad) jl iret sbb or fidivrs mov in mov data16 mov mov jo or jmp push xchg sti aas jnp mov mov push push and sub mov push dec jge clc push push pop push sub dec xchg cmp bswap push mov xor lods aaa fdivr mov push outsb sub in push jp adc jecxz pop inc mov int3 lret cmp and es xchg lahf lods cmpsl add or ljmp es inc shrb xor (bad) sbb push loope das mov lret imul enter das or or das push repnz sub dec adc sub lods popf lock pop add pop nopl insb pop and add sub and push jo sub movsl lret cwtd sub mov lahf adc lea or pop cmp out gs or mov cli adc in sub cmp cltd out sub fildll cs jl sbb adc in out jp pop push mov repz push and aaa in ja push and loopne sub push sbb lods xor jae cmp jmp cmp dec push mov xor or jno xor or jle popf sub cmp xor ljmp sbb sub or mov cmp cmp mov xor sti test sub cmp or in mov (bad) jo cwtl shr shll imul adc dec mov imul push clc cld xchg add pop and and add push push sti sub jecxz mov sub popf add nop xlat lcall mov jb aas or sub mov mov push jg adc sub mov sub cmp aam cmp pop sub mov fwait es call aas call lods mov sbb sub xor movsb mov outsb out and ds xchg mov jbe xor xchg (bad) xor mov cmp mov mov push in negb pop xchg add sbb jge xor mov ljmp xchg add dec mov xor sbb cs in imul gs sub or xor xchg outsb add pop push dec cmp xor pop jmp lret cmp jmp add mov push sti inc mov outsb mov sub adc mov xlat repz jp and mov jg push xor pop addr16 adc cli out lods test imul push (bad) xor sub cmc jle shlb xchg push sbb mov lods inc fldt or imul aas outsb imul or int call sbb sbb imul cs das pop pop sub outsb scas pop (bad) push aaa ret and jle pop sub and xchg out and sbb bound and pop xchg inc push sub test loop mov jns sub sub cli daa dec int push or sub dec sbb cmc push or clc mov (bad) int3 cltd sub lea push lahf cltd sub lahf test ja in insl and and repz sub icebp (bad) cmp int popf mov add rcll or dec adc sub outsl mov lret mov xchg sub lahf int3 add das or sub roll sarb dec sub enter jl loop ss mov push cltd lahf cltd sub jae imul scas icebp mov sub aas jle sub wbinvd adc or int3 adc sub sub jae and dec mov push sub cltd lahf out rcll or popa icebp mov wbinvd push sub push push sub or sub jae push push push or push or sub test or ss xchg xlat adc mov sub stos mov sub lahf cltd notb xchg mov not les push outsb inc xchg inc lret sub push sub jmp sub sbb stos es sbb in or cmp and push int3 push xchg stos sbb insb sub dec dec mov cmp sub insl clc push mov stos cmp cmp jle cmp sub outsb stos es bound and xor sub mov and cmp sub dec outsb aas cltd or sub lret scas and aas pop cmp sub aaa stos lea mov bound movzbl mov push gs sub xchg push add adc fsubrs xor sbb sub test jmp ja sub shl cmp stos xchg and sbb jo push fs adc popa cmp sub pop insl sub push je insb jmp notb and shrl jmp xchg and cmp out outsb sub sub imul shr push add and test add sub push add stos and fsubrs pop test dec sub sub loop pop out cmp add insl sub cltd outsb clc sub mov scas or punpckhdq ds and cmpsl cltd and cmp cmp outsb std out push les std push shr adc call repz sub mov mov sub leave ljmp cs insl loop xor and das or nop xchg adc scas adc insb icebp push sar out sub mov add cmpl in or aas and insl pop (bad) push lcall push imulb das aas jle in das cmpsl jle sub sub imul lahf in push ljmp daa lret daa shrl xchg mov cwtl xchg inc loope test mov ja stos ror push mov xlat push mov push popf xlat push sub shll sbb sub xlat push add sbb mov dec or nop (bad) xchg xor pop rcll jp mov sub dec dec jl and outsb sub outsb pop jl sbb push stos dec xlat psubq sub in cmp or xor dec sub xchg sub gs push push add sub sub mov mov in sbb adc insl xor dec mov or pop mov imul add xor pop add dec cmp jmp sub stos cmp cltd scas inc mov lret das jmp sub mov add adc outsb push lret sub sub mov xlat sbb jae mov mov clc or add sub (bad) jnp push push jge scas adc pop in sub xchg mov ss das mov shl inc dec sub sub mov lahf or push movsl pop sub or call add clc decb repnz or setns insb cmp and ja imul inc lea aas in outsb push fmuls stos addr16 mov pslld dec outsb imul wbinvd dec insb cmpl insl es aas lods sub out movsb sbb or jge xor mov push push push sub jmp push cwtl sub cmp hlt pushf lret push pop das and insl sub mov xor (bad) ljmp adc xor push pop or push sub cmp dec dec sub loop sbb loope outsb push sub jl and pmulhuw dec mov movsl stos cwtl stos sub mov je sub sub mov ss lret and clc inc in cmp pop lods sub sub lods and cmp mov sbb imul lahf out insb fwait dec cmp mov nopl sub leave repz xor dec movsb bound lret jg (bad) iret test xchg push push push sub pop stos mov hlt sub jmp cmp mov clc mov lods add xchg lcall imul pop dec and es push dec cmp ja sbb mov stos mov popa and push and add add loopne mov and lods or pop push in pop imul xor scas dec lret clc push (bad) outsl push sub sub sbbl sub cmp xor stos mov sub sub int cmp jns int incb mov fwait jge sub repnz sub test sub sbb mov fisubrl mov sub mov mov sbb movsb pop das jnp sub das dec fwait lea imul imulb and xlat jb xor push in cmp fldl sub push pop push std bound push sbb sbb (bad) stos imul push lahf push sbb bound xchg push sbb add sbb mov sbb jle sti inc jl insb dec outsb mov es push dec add fldt scas pop add mov sub js sub push and push test sub push mov sbb sbb push (bad) sbb cmp test test addb push ljmp jge jge adc push imul insb xor cmp pop inc sub stos cs call das sub lahf and or ret sub mov sub or cmp sub int cli std adc jne jge clc call xor pop pop and push dec fcompl add shrd fistps test sbb pop and dec cmp call dec push lea mov rcll ljmp pop clc cmp or pop dec sbb xor mov dec jne or cmp cmp sub xchg pop imul xchg les or pop xor jns insb sub sbb lret dec bound or and mov xor in sub pop adc push mov sub push lods sub xor sub or int3 das in subb or repz iret mov sbb fldl cmp mov (bad) xor int3 jbe aas dec idivl mov inc or lea mov lods mov int push pop jg orb jmp cmp outsl mov outsb in sbb or icebp mov mov or mov jge xor cmp stos fbld fstpl and in cmp sub lret gs sub jge inc int3 int3 xor lods push shll cmp and sti stos scas jp mov stos sbb sbb dec js dec xchg mov cmp sub jl pop in int3 pusha sbb sub cmpsl sub outsb sub mov stos jp and jge std sub push dec dec js stos ret lret in cmp sub outsb clc push jp push loop pop int dec paddsb in sub cmp inc insb adc sub xchg xor sub pop sub call push pop insb sub pop and pop mov test mov out pop out push enter insb jp pop sti out inc mov cmp arpl push xchg test add mov outsl nop pop test push test lods sub cmp xchg pop ss fisubrl lahf sbb sbb or sub cmp das or fimull xchg minps and sub test stc mov cltd mov mov dec inc jp and mov aas outsl sub inc int3 xlat lcall insl aaa dec sbb icebp call lods sub bswap sbb pop jnp and lods daa fnstsw xor xchg mov (bad) lret out adc cli int3 mov sub aas js add push daa lret or mov cmp adc mov cmp dec jmp mov sbb jl mov and into adc in jo pop sbb (bad) push or dec and inc jmp dec xor sub and xor xchg xchg sbb or sub loope in xchg call adc in jb lea les ret loope addr16 cmp (bad) cmp int3 dec shlb jnp es sub int3 outsb mov outsb data16 mov ljmp mov sub adc ss sub pushw ss xlat sub sti xlat jl sub sub outsb in xor les push push adc ljmp add in push test mov sub test imul cmp mov cmp stos sub jbe in imul addr16 sub sub mov push ss xlat sub rcll push push add push sub loop rcll inc outsb push popf xlat push push outsb lods push mov scas xlat push shrl std popf lahf mov dec xor or push call xlat sub sbb arpl mov xchg mov add lahf sub insl cltd or xchg mov jb xchg out cmc or stc sub movsb mov sub inc dec insl xchg sub insl xchg jnp andb insl xchg pop inc sub outsb inc add loope outsb sub js cmp cld repz shrb xchg sub (bad) (bad) push sub or sub addr16 lahf xchg sub jle jmp cmp sub outsb scas in jb mov repz sub xchg insl push or sub lods cs repz push shrl or sub test or cmpsb das and dec pop xor (bad) jmp outsl out ja sub or rolb sub cmovle sub xchg jo jno scas outsb lods in popf addr16 je test mov out stos or dec subl xchg inc mov mov push les adc in sub jle push shrl int3 push into sub jmp imulb xor sbb xor lods cmpsb mov sbb ds xchg push and sub (bad) nop insl xchg nop and mov sub ljmp icebp (bad) mov nop sub js mov mov stos sub or pop loop mov imul push sub pushf and outsb clc mov push jge cmp sub lock dec pusha or push mov clc bound and in sub imul mov fsubrs pop jno xchg shrl cmp in push xlat insl insl xlat xlat push add and outsb push sub pop mov clc lret inc lods sbb and lahf icebp sub mov add sub mov mov cmp xor or jge cltd lahf xor sub and sub int3 notb nop icebp decl loop outsb sub push push cs sub mov mov jl imul sbb insl jbe cmp jnp cs call (bad) push je cltd lahf mov arpl aas or lods sub or sub ljmp sti inc (bad) stos daa mov or push or lods dec pop in insl and pop xchg push sub cmp dec sbb test movsb addr16 clc testl sub sub pop sub sub imulb sub sub xchg sub xchg sub sub mov sub test sub sub inc sub insb push cmp in aaa insl lea xchg sub imul clc pop mov sbb sub imul mov sbb dec notb xor add sub add scas mov insl dec sub daa cltd outsb mov ss nop xchg mov sub (bad) loop imul add icebp leave sub mov sub or sub jl out dec orb (bad) cld imul mov sub sarl in inc or stos or or xchg lods mov or push add sub mov pop jmp push xor sub mull xchg add and lea int3 or in dec sub jb lret es push lods cmp outsb or pop push lods or test mov es sbb cmp push lahf (bad) iret test xchg cmp sbb shr sub push aam das push add movsb daa xlat mov mov incb sub loop popa lock jmp outsb in push sub decb jae and push mov pop lret sub stos cli jns,pn imul ljmp in sub ljmp clc sub push sbb sbb push mov outsb in jge push outsl subl push int3 add push xor out dec push addr16 cmp sub mov lods sub stos cmpsb mov stos movsb inc jmp mov lret push add dec imul popa lock sub mov jle sub js xlat jnp push ds cmp sub cmp ljmp lock sub or jbe cs push mov or js jge jp sub mov repz addr16 imul in adc int3 ss mov movsb shrl and int3 shll mov push stos push jmp push or mov imul mov or aaa sbb pop in in add pop dec das sub es insl sub shrd sub lahf repnz mov mov repnz loop inc (bad) and ss std push mov repz in or (bad) sub lock push loop outsb hlt jle imul push mov or int3 mov or stos sub and lret das stos sbb sub sub loop or mov sub ja sub and in nop mov jg jmp int3 imul push outsb daa sbb sarl mov sub fsub nop mov arpl out addr16 xor and or mov xchg movsb push out repz xor sub pop das mov es imul jns lea sub xor movsb sub push mov adc mov int3 imul (bad) (bad) cmp int jnp mov and cmp or mov and test int3 or cmc adc dec insl jl cltd cmp mov fildll mov call and int fmull in jnp cmp popf cmp jle jbe xor fwait es sub in insb sub imul and imul sub or pop sub mov push insl outsb xor aas push and das insl mov or add mov add mov cs lods jns pop sub out fwait pop mov push xchg int std or decb movsb scas sbb test pop call test push das sub push push rcrb or adc jle sbb sbb in cmp iret pop dec insl or xchg stos mov cltd clc push sbb fs add sti push jp adc adc or imul push jmp sti push aas (bad) jl outsl mov pop out aas mov mov jnp fnstcw mov jnp dec sub adc sbb cld push mov cmp aas movsb mov or leave and sub push add das mov jno mov sub adc push sbb jb addr16 jne xor jmp mov add js scas pop and sbb pop and xchg push pop sub cmp and sub cmp add push adc mov in aaa js sub cmp pushf cs cmp xor pushf imul mov sub sub out aas push sub lahf cltd add mov adc and sbb mov scas cmp jae or popl icebp and sbb push lea lcall mov in add das mov cmp jo bsr push jecxz cmp lret sub jmp or in das push add das or mov mov and cmp fstpl int3 mov dec mov test sub std sbb mov sarl push sbb sub pusha sbb sub mov scas sub push rcl sub push cld xor sbb out cmp pop jp push mov xchg icebp je sub scas push fs cs sub sub jns imul cli mov sarb add sub aaa int3 stc cs mov out push push mov mov xor add sbb sbb pop and pop es cmp sbb sub push sbb mov das (bad) insl cmp xchg adc cmp sbb lahf xlat cmp mov out jnp sarl stos (bad) in add xor xlat adc cwtl or pusha jmp mov sub pop cmp mov std or jnp add outsb pop popf add (bad) popa addr16 sbb sbb jne xlat aad or sub push call or xlat (bad) daa push dec das sub mov sub in (bad) adc jno ds jg sub clc push popf sub and bound xchg push cld imul aad popf sub jmp sub sub clc sbb mov lcall adc lret adc or sti push inc aas gs xor pop push inc lcall jle add push sbb pop jne push cmpsl lea pop es and sub clc push das icebp jmp or and (bad) mov jle insl cmp jmp push sbb std push frstor outsl int and sub cmp sbb lret das cmp jp mov xor xchg nop push sbb jmp idiv dec sub fisubs (bad) pusha adc mov push xlat (bad) cmp sub jmp mov (bad) cmp sub outsb inc xchg inc mov cltd int3 incb push sub xchg popa cmp sub lahf cltd clc sub stc xchg mov cltd xchg sub mov and lret push xchg lahf int3 push xchg iret sub jbe lret adc sbb mov cmp or icebp int3 push ljmp out loop sbb imull pop into je sub mov sub out push cmp lahf sub add dec pmulhuw mov sbb popa jmp xor cmp xchg lods pusha sub sub sub (bad) nop in xor div push push out daa and adcl or lret sub sub outsb test lods das in sub lret sbb mov das cs jge lahf popa lahf sub push imull or push inc add mov sub jno fsts mov adc add ja cmp stos arpl mov sub outsb sbb sub testb inc outsb lods aaa stc sub add lods movsb out or pop cmp sub add push scas test ss xchg adc sub cli dec dec outsb clc call push xchg sub jl jge or sbb or js mov sub cltd jmp jmp insl jnp jmp jmp cmp call push clc push xchg fistps cltd clc sub xchg cltd sti cltd xchg push in cmp jmp call cltd mov lret stos xor arpl push daa test sbb xor cs stos xor das push insl imul in out inc insl jp mov insl push sub lahf cltd add setns lods or scas or push mov push test or movsb sub xor in and xchg nop mov movsb or adc sbb sub ds pop sub cmp shrl es in sub lahf cltd ja lahf int3 shll ljmp jg cmp pop imul movsl cmpsb mov pop iret jmp sub jae lahf int3 pmulhuw add sub sub shl cmp sub loop mov push jnp sub push les mov nop xchg mov insl cmp je xlat shrb mov push shrl mov stos mov mov or pop shrd mov push cmp loop xor in jbe xchg push sub int3 (bad) push dec sub sub out jl and repnz cs lea imul sub adc int3 push iret mov jnp push out jmp push cwtl in es stos sub das outsl pop jo mov cmp cmp xor adc insl sbb idivl or int movsb jmp ja xlat mov stos xor cmp popf xchg and sub mov scas sub (bad) out int3 or and mov pop and sub xor mov jbe les loope sub cli int3 xchg sub pmulhuw bound test xchg in inc cs in mov stos das adc insl add pop (bad) clc (bad) lods xor inc in aas add lsl xchg lret push mov and pop incb movsl or sti and pmulhuw dec xor stos cs xor lret jmp mov add lret sbb ss negb jmp fistpll mov leave lods sub cmp or xor aas or nop or mov cs jge cltd aas scas or stos or xchg sub es mov jnp mov adc mov add cmpsb cltd lahf or int3 jg sub and or rorb shlb push adc sub mov sub sub rorb sub sub popa dec cs and cmp push outsl add repz insl mov popa and shrb xchg std mov dec and ljmp cmp jmp mov push xchg std imul push (bad) popf lods add sub sub stc addr16 (bad) cmp push dec add push call sub mov wrmsr push subb cmp inc jge or imul insl sub movsb xchg add cmp jle es fucomip cmp addr16 or mov cmp mov or imul or xor addr16 leave xor and adc sub cltd jns aas fisttpl pushf stos cmp dec pushf push push lahf cmp dec sub sub sub mov lods mov push (bad) and and xchg call cmpsb fisttpll rolb push jmp movsl cmp dec sub and imul push adc push jmp mov sbb jge test ljmp rcrb or sub imul jbe pop dec sub xor xor insl or sub das xchg add or cmp or lahf sub push cmp cs xchg sub loop push push lcall insb push sub jge ss das mov lods sub aaa mov imul sbb pop gs jnp xor jge push cmp sub in adc jg sub stos imul icebp sub outsb in rcll int3 jge outsb add xchg sub mov push sub adc test sub outsb sarl jno dec cs adc sti xor push mov mov sub cmp push add es xlat stos push push jp push cmc outsb dec pop xor scas out push int mov xlat (bad) (bad) (bad) aas pop and dec aaa pop cmp add addr16 sub push sub and int3 xor cmp mov mov int3 sbb das sub cmpsl mov push push out pop push sbb mov xor jo push xchg and jle out sbb add es add sbb push pop xchg inc out outsb scas mov push cmpl dec and mov sub loop xlat jnp js jl aas lret cmp add dec dec inc pop push jp sub jbe daa mov mov lea clc push xchg and cmp jnp push push mov dec fnsave push push xchg mov xchg imul push movsb dec sub int3 sbb jg sub sub cli sub test mov insl jno test aam test clc mov lret aam stos push jne js scas and sti mov pop cli push shl cmp mov push imul int3 and add push add mov add fisttpl andl or lret and (bad) mov sbb int3 in adc mov insl clc push loop sbb lret das push js sub sub std inc mov inc test (bad) out fwait adc sbb inc cltd pop dec insb subl lods pop mov imul jnp cmp jmp cltd js stos fs add push sahf int3 lods int3 js sbb cmp jle lea call and call push outsb lods es clc mov xor outsl jnp dec mov sub push loop sub insl sbb sub and lods jb and pop push xlat or mov pop faddl sub mov xchg sbb sub sti and sub push push mov cmp mov adc in int (bad) push sbb and outsb push lret das jg ljmp das sbb add mov add insl add stos mov jne pop stos cmp pop cltd xor lods imulb addl cs popa das insl sarl js cmp sub jo cli jl dec fwait xchg sub cltd outsb imul sbb and insl sbb mov pop pop rcrb adc pop scas sub es cli cld and mov daa mov rcrb sahf pop daa int cmp dec enter sub mov sub daa pop outsb adc sbb lahf push sub les fld xchg sub lahf xor cmp mov dec notb sub sti nop std mov lds mov lret xlat mov sub mov mov fdivr or sub mov xchg mov lods mov in or sbb outsb mov xchg (bad) mov xor sub xchg jbe sub mov ss outsb rcl ret mov xchg into xor sub setb sub sti sub and xor addr16 mov lods js and ja sub fnstcw test xor gs outsb test sub mov out mov loop sub popa push in pop sub (bad) iret cmp mul or outsb (bad) sbb inc outsb cmp imul idivb das push sub push loop in sub in push in sub in das jmp sub jmp (bad) in xchg call jg adc cmp rorl or lods out outsb stos push sub xor xlat mov mov mov cltd mov roll wbinvd add gs out push jp mov incb push push ds packssdw sub jns push imul les inc sub mov push imul pop call push jmp das cmp xchg ljmp inc push add adc fs popa popa cmp sub sub dec cmp sub add push sbb addr16 aad int3 stos mov push xlat sub shrb inc sub sub and and push sub inc mov ss mov (bad) jmp fs imul js sbb loope push imull mov addps sub inc and xor outsl mov call add rcrl enter call add addr16 wbinvd lfs test dec ss inc mov orl push dec lahf jnp dec sbb cs lods inc int3 test mov pop shll xchg sub cmc cld testl or or lret jge bound xlat add inc shl add std inc shrb in push arpl insl subl out notb ljmp shrl lock call shr push rorl sub imul push pop icebp mov cmp push lods add scas push imul imul lcall sub sub lods sbb sub imul in mov xor or test cmp testb in roll xchg mov insl xchg sub sbb aam insl lahf xchg insb movsb ss out cld xchg das inc in sbb clc addr16 lods aaa shr xchg call insl mov shr push add outsl sub push call sub lods repz mov sub cs call insl call push lea rcll insl and and mov add insl sub int3 xchg sub push add das inc xlat dec add lds xlat and push ds cs dec sub cmp test sub mov outsb or lds ss test ljmp outsb fidivl dec or fdivl cmpsl ljmp outsb push push shrb sub das sub sub dec and sub mov (bad) xlat push out punpckhbw add insb sub cmp sub data16 jmp stos xlat loopne outsb sub or in lcall sbb push mov dec sub sub sub stos and in lcall (bad) mov or sub and lods mov out int int push sbb daa dec cmp sub and scas sub push in xor scas sub call sub sbb push ss jnp inc dec mov int3 sub imul outsl es and dec add dec and lods sub add cs ljmp cmp xchg push mov in adc rclb adc adc add leave push js pop adc mov outsl pop leave xor cmc outsb out int sub mov or sub iret push push and das out in pusha jnp mov ss mov sub and jb pop in or add loopne or add hlt mov das or push loop outsb and es cmp jne push and in das xlat loop outsb in or scas sub das inc or and and mov popa push and sub sub mov mov pmulhw or popf mov push cmp call xor fs pushf or push xor or shrb mov fdivl sub stos es insl and outsb int jl push pop push stos add push add cmp sub sub sub outsb sbb ss (bad) fildll in mov fwait sub cs sub xchg fdivrl ss pop lahf and push sub outsb adc in pop sub pop and dec aam daa push push iret cs aas fsubrl and aas sbb cmp aam cmp and insl stc cmp adc sub dec daa int cmp sbb ljmp leave adc sub adc and adc aam adc xor adc sub and xor jae xor cmp or push cmp iret xor mov jge rorb sub jo xor sub sbb lods call sub xor iret cmp sub push sbb jae sub adc sub insl or sub mov sub jbe sub sub es push xchg jp repz mov mov mov iret jnp xor sub lret pop call fists sub sub dec outsl jg das ja and xor hlt pop xlat loop outsb inc outsb lods dec outsb cmp push cli mov sub (bad) xlat push cmpsb popa (bad) sub cld fs outsb cmp cld cmpsb rcrb sub lahf sub fs mov sub pop sub mov std sbb cmpsb sub inc cld sbb xchg inc jge ljmp cmpsb jo cld mov adc jo cmp cld mov cmp and sub lret jmp push sub pmulhuw sub mov (bad) xor (bad) push cvtps2pd pop clc sub mov cmp stos out mov mov fstl and mov xlat (bad) jge in icebp loopne jbe dec sub and in push mov lods cs xor out loope xlat cmpsb lret sub push decb in movsb outsb std mov push sbb mov sub imul icebp dec int3 sti pop in stos test ljmp or sbb pop mov mov (bad) shrl clc mov mov sbb xlat loopne sbb cmp ud2 notb pop lahf je lret sub js mov aas out or xor sbb jg mov mov dec and cs and or jnp sub nop or push lea cmp aas cmp push or into mov sbb cmp sub dec sbb adc in or addr16 pop sub pop sub mov mov cli and sub or or sub lahf jnp xor xchg xchg jo lret pop dec cmp cwtl xlat loop mov cmp cmp inc lahf int3 jb imul pushf sub imul xchg jnp clc sbb jne mov mov inc decb dec mov popa lock enter and sbb cmp nopl das xchg insb or cmp das sub xor push sbb fbld roll fwait pop cmp sub push das dec and aaa mov daa cmp sbb test adc fisubrl loop sub sub jmp add or push insl cmp aas cmp sub sub scas fdivrl jge cmp sub cmp lea pop sub pop adc das fstpl fldt les cmp aam mov jne loop mov inc and sub push cld sub sub jae sub and pop sti clc cmpsl in lods sub sub xchg sub mov jbe sub outsb inc outsb mov mov inc mov mov adc xchg push mov add sub pmulhuw sub sete es loopne clc xor push sbb lods stc sub push push and xor mov pushf stc outsb adcb sub imul mov push shll xlat fs adc outsb add sub sub xchg xchg sub and push ret ds xchg xchg sub sbb push (bad) sub cmp notb sub sub xchg push std outsb add add push sub shrb cmp popf push jle sub sub jmp mov das jae sbb cmp outsb sub and xor xor inc sub mov jo bound xor (bad) push imul sti sub cs insb int3 ss xchg scas jb xchg fwait push sti inc loope sbb insl xor and wbinvd sub repz push pminsw adc jle mov push and outsb or into stos pop repz es sbb pop jle sub jno fstps sti adc lcall and loopne jle jmp test jnp mov movzbl je in stc sub es sub sub cmp stos push xchg adc mov stos sub cltd sub sub xlat cmp push dec jns adc stos call jbe sub imul add mov xor in cmp add sub pop xchg das push jnp xor cmp iret cmp and (bad) push das mov xchg adc aas call std imul push sub outsb xchg sub insl sbb mov mov daa out sub roll add stos dec jmp or lods and push ljmp imul cmp insl mov pop and xchg push call pop outsb std push sbb sub add push xor cmp jl imul in and and jnp sub lds in stos inc ja fs imul in jmp addr16 xlat lods insl sbb test int3 out and add sub or sti mov in stos xor daa shrb sub jmp push fldcw ljmp sub mov jmp call mov mov das loopne xlat std xlat inc push sub push mov mov mov in outsl addr16 push mov or xor loop stos pop push das pop insl pop out ss add lea nop icebp add or sub cmp mov in sbb push call sub outsb sub das jne lds scas sub stos rol test mov jecxz sub jge sub or out dec or mov insb mov cmpsb nop in cmp imul or int3 push loop aas cli aas arpl push sub das pop in out mov in cmp xor out push cmp push jno adc insl mov and xor push lods cmp xor call or imul push mov adc or out out je push xchg movsb das sub xchg mov lret sbb jo and dec mov sub push pop sub sub mov push lret sub out and das adc nop mov push je and (bad) int3 cmp dec popa mov or xor ja jp inc and scas lods das push or sub push jl cmc sub cmp outsb sub add out sub xchg dec lahf sub call imul cmp xchg push sub xlat cltd lahf out cmp push sbb jecxz xchg add mov jno stos jl popa jns lods das in sub sarl jns inc dec sub sbb jno pop lods inc lods sub add sub nop xchg add stc dec and std std imul add in mov or sub push mov popa nop jmp or add sub ljmp mov test or shll sub jnp dec stos dec mov sub cmp insl cmp ljmp push ljmp das mov push movsb popa jns push dec and xchg mov push sub int3 lea out cld addr16 and cli daa addr16 lods shl sub popa push repnz popa cmp lea stos or rdmsr fwait stos or cmp add outsb sub mov outsb sub ds repz jp push addr16 daa mov shll jecxz in lcall lret and sbb xor and aas xchg lods popa arpl cli stos sbb sub outsb xchg add xchg inc and mov and pop mov pop xchg jno dec sbb popa jns int adc mov cmp add push jg dec adcb adc lcall in inc inc sub xor lods sub sub sub cmp sti sub cmp cmp pop sub fcmovne popa or sub xor push mov sub xchg addr16 imul cmp cmp js es pop pavgw or test dec or or xchg xor mov jp cmp out in sbb rorl sub lret push jl fnstenv jb xchg das ljmp inc xor popf mull push cmp clc cmp imul int3 xchg cltd lret popa imul in pop gs adc sbb lret jno lods stos jge adc imul cmp sub cmovne push icebp imul sub jl call xchg or sub mov mov sub or xor xor lea imul add scas clc imul push xchg enter stos popa cmpsb adc clc inc adc and pop sub rcll xor sub jns (bad) das sbb add sbb stos sub mov xor push dec mov lret dec push cltd pmulhuw cmp sbb fistpll push add stos sub scas cltd out sub sti mov clc sbb sub xchg pop test cmp sub inc mov mov jno int3 xor xlat out roll ss jnp mov cltd sar push push dec adc outsl push xchg dec das jmp mov lret imul pop jle and daa cmp divl std sub int3 fisubrs arpl pop loope sub orl mull mov or enter jle ss xor cmp xor fcoml push int3 dec das lret mov (bad) cmp ss lret lret inc xchg add in insl pmulhuw push lret ss sbb inc sub and push push cmp sub adc or outsb and fstpt jmp push push sub outsb addr16 sbb sub mov push dec nop shrl das push fsubrp sarl push jp sub xor xchg cmp lods dec mov jp pop sbb (bad) imul or in push cmp sub adc mov mov cs mov cs dec sub sub call inc push int3 into or cmp xor push cli xor cmpsb decb xor adc sub aaa sbb sbb lcall sbb or sub or lea and sub repz pop icebp xlat xor pop cmp sub jno sub mov ficomps push lahf add ss pop add and mov aas iret jb xlat loop jp frstor and nop sub outsb dec adc push jle and arpl push xor cmp or ss push out dec das and sub sub jmp dec mov sub and adc sub cmp cli movsl popf stos jp jp sub jmp xor xlat call outsl fs fs and mov jnp fisttpl adc (bad) out dec or sub test sub int3 sbb lahf or sbb lock addr16 dec sub jb call mov jp dec push xchg mov sbb jne and lods mov inc addr16 arpl stos xor aas aas addr16 jmp mov lret and sub aas xor pushf xor iret (bad) add push test sub push scas dec insl sub dec lret ret sub lret clc sub xor hlt pop sbb jl cmp fisubrl arpl jle sbb adc xchg cmp and adc cmc addr16 cwtl pushf and sbb inc jmp mov outsb ret das frstor sub jae sub and adc dec sub rcrl or fisubrl gs icebp jno mov (bad) mov push cs mov mov fsubrs popa cli insl lret cmp sbb sahf je imul fidivl insb dec iret dec insl adc cld es push movsl dec leave mov and sub loop sub loop push lea xor add test popa cmp pop sub cmp push push sahf jmp sbb pusha sub ja ljmp shlb mov ror insl sub inc mov xchg push push cltd popa sub or push inc push popf jns jnp arpl jnp mov mov (bad) fwait or xchg insb sub cmp cltd sbb mov sub xchg push push cltd sub xlat cmp mov outsb sub xlat clc push mov mov insl cmp outsb push aas jle xchg (bad) loop push into sub insb int3 negb outsb clc sub notb mov (bad) in adc adc in xchg imul repz lahf int3 outsb cmp cmpsl sub xchg mov loop outsb nop call in push sub jp sub es sbb or (bad) sub adc jnp and (bad) push sub add cmpsb or and xor or sub mov jecxz lahf sub nop icebp xlat xor pop cmpsb add loopne inc sti inc mov clc push add imul mov cmp push sub jne sub call xor addr16 mov sub mov clc cmp ss mov xor mov cmp mov mov sub and out cmc icebp js or mov sub popa stos ja aas aam and stos mov xchg push movsb lahf sub daa int3 and cmp mov nop mov gs cmp sub nop in cmp lods out push sub sub and outsb (bad) call sarb loope pop sarl stos add clc mov mov sub xor movups sub sub out adc pushf and sbb push mov push scas sub and nop mov jnp push push cmp addr16 jp and rorl jae pop mov sub in sub jmp aam sub jnp (bad) jne loop sub mov mov popa and lods mov jnp sub and jns dec insl and sub mov nop cmp popa lock sub movsb lods jb addr16 push test jmp sbbl clc insb or or mov aaa cmp mov in sub imul mov jg loop push inc mov or sub scas xor imul xor cld imul push mov cmp cmp mov aas cmp popa jns sub sub or sub jl jmp aad push rclb and add lods sub push clc push sbb popa xor rdpmc lahf mov lods sbb dec popa and sub push and and gs cmp sbb dec and and dec sub or mov imul mov mov add sub stos call cmp lret sub adc ljmp sub mov push xchg adc pop xchg inc out add cvtps2pi push xchg add sub push push xchg mov or sahf jmp mov mov mov mov cmp push add and cmp mov in mov sub stos jge cmp sub push stos sub insl and psubb or push mov cmp pop in and dec imul and rorb in or sbb mov lret in mov sub sub int3 incb lods mov push rorl push test insb push xor sub add push scas lea dec inc in or outsb test cs aas jl dec fwait push (bad) xor insl mov push outsl or ss push in sub test mov and stos sbb sub sub outsb ja seto push das pop out sub clc xor mov sbb cltd jmp insb movsb xor lods sub xlat (bad) push xchg add insl and jl and jmp bound mov lods sub sbb sub clc and xor cmp adc sbb sbb inc decl pop aas clc sub or loop and pop mov jl xor insb or test daa lret mov cmp dec adc add sbb sbb adc lret add lea wrmsr fwait sub inc add ss jl sub sbb and jge std and leave ss leave xor sub xor out cmp or sub clc cmp jp push sub mov jecxz push adc jo sub test jmp lods sub sub push addr16 je das leave sub jmp cmp and stos push sub negb or xchg push xchg add jmp imul sub sub js sub outsb sub imul sub push enter and ds sub and lret mov jl sub aas sub lahf cld imul or mov insl and and sub wbinvd int3 xor cltd sbb sub xor or mov push cmp add push sub mov push (bad) jge mov test lods sub and jle in sub mov push flds in sub popa cmp push mov sub or and (bad) outsb test xchg push inc sbb jnp outsb aas mov sub cmp push lods cli sub jle sbb cmp dec mov pop int3 mov lea lahf imul cmp mov adc setb push shll (bad) mov ffree rol insl pop insb movl cmp incb sub int3 sub pop ss and outsb out out adc and repz add cltd outsb sub outsb test adc mov push bound pushf outsb subl jge sbb or stos cld mov psubsb clc sub xor jle jmp jecxz fldt outsl fildl and cmp int3 int3 and and insl sbb int cmp insl mov int3 test jo cs ja or movsb int3 push push int lods sub sub das insb add mov insb mov xchg add mov mov scas adc ja sbb sub stos sbb push ds lret push das sbb rdtsc call inc and sti mov cmp dec cmp rcll das mull xchg add sub hlt fstpl sbb sbb sub imul add mov lahf xchg das lret call adc enter jo xlat fs mov movsb popa sub loope xchg mov dec sub insl stos push das inc std push cmp scas dec and sbb subl mov push sti inc enter sub add mov lcall popf sbb mov push xchg cmp pop xor stos cmp insl sub xor (bad) cmpsl add ja and sub push lcall pusha imul mov xchg ljmp ss scas jle pop xchg sub nop mov sub mov (bad) sti sub dec and and mov cmp test cmp inc or ljmp data16 sbb push std or sbb fiaddl or jbe outsb stos push sbb pop sub pop sub pop sub inc stos adc lods and daa cmp sti xor push jmp push sub lock int cmpsb or es sbb cmpsl cmp add lods (bad) sub pop cmp push xor sub (bad) movsb xchg push lahf cmp jmp in lahf out testl fwait pop stos lods movsb lahf or jle jle in sub xor mov aas insl (bad) sarl sbb test add sub mov sub lahf xor das adc cmovne lret adc jne std je cs cs inc ud0 call sub mov pop insb cmp ds xchg lahf cltd adc mov sub cmp sub cvtps2pi xchg sbb jmp stos sub add push add pop or stos mov sub cmp pusha or movsl or push lock xchg loop and mov sub and adc aas popf stos ss inc jp outsb imul movsl push cmp sub xchg push stc cmc int daa (bad) mov add pop scas and cmp sub mov nop mov cmpsb ljmp push mov (bad) mov das add mov sbb add sub insl jp mov jb jmp insb mov pavgw fnsave pop out mov aam sub arpl sbb jg in roll in es add mov ja out dec cmp popf adc movsb dec lea xchg nop mov xor push sbb add add jecxz push or (bad) insl push fisubrl jmp sti daa mov aas pop sub ds insb sub cmp into mov adc (bad) cmp sub stc sub sub cmp ret mov sub aas mov cmp dec sbb aaa imul pop sub daa jo out das outsl bound call loop xor cld imul mov xchg addr16 (bad) movsl fisubrl pop bound jb sub cmp push cmp nop arpl mov sub push add nop add jge and addr16 loop,pt mov cmp int3 notb nopl out sub mov or mov sub lahf cltd add shll pxor andl push cmp sbb cmp sub out lahf int3 std test int3 or cmp lea xchg insb jge xchg xchg add inc xchg inc int3 sub add cltd mov sbb xchg xor jl xor sub and and cltd outsb sbb sub push sbb sub and shrl jo cvtps2pi add jae push sub mov sub push adc sub push movsb cmp pop das adc sub xor sub popa xor and jp,pn adc jl outsb adc mov ljmp scas push sub sar stos adc or jecxz insb stos dec mov scas sbb or ucomiss insb adc xchg xor inc test or cltd rcll sub and or push dec inc sub sub in or out sub cmp mov lret sub or sub sub and adc or das mov les imul add lods push cmp or imul xlat loopne cmp loopne push dec xchg sbb lods punpckhbw push mov lods and stos or mov push mov in push push lea arpl and das das loop lea pslld in sub add in cmp stos add cmp loop push test adc xor movsl ljmp movsb aas iret stos xor imul lods sub pop push hlt movsl sub mov add xchg inc lahf xchg sahf jle lahf sub sub lods cltd sbb (bad) push (bad) ljmp sub mov std jmp sub jne xlat xchg mov push in wbinvd push jnp or push jnp sub jne nop lret pop insl sub aas jmp and xor shrl sub push sub stos cmp popf stos cmp lods cmp sub (bad) mov js rcll lods sub push mov ds cmp sub imul push adc or jle js cltd and outsb cmp stos or js sbbl pop sub jns and push and int3 push mov outsb cmp push popa push cmp insl sub into sbb adcl and jg outsb cmp xor int in aas mov lret dec adc sub repz push insl in daa sub push cmp clc or outsb and sub pop xlat (bad) insb cmp push in aaa add mulb stos mov cld mov stos cmc or push imul in lret and cmp iret sub or mov mul sub mov sbb sub stos or comiss lods mov push jp and xor and dec sti inc stc mov push test imul mov jmp mov sarb sbb nop mov or outsb dec mov pop push cmp dec push add insl dec add dec arpl test push insb dec push or cs sub pop fs fsubl or rsqrtps and enter loop push cmp cmp test adc aas lret sub das sub xchg clc cmp cmp mov sub int3 imul cmp xchg dec test cmp and sub hlt or cmp jmp cwtl outsl mov lods mov (bad) das inc int xchg push adc insb sbb sarb or sti in jle pop pop dec mov repnz adc incb aas or call cmp lcall outsl decl cmpsl cmp outsb or lret lret popa imul push das and rcll ljmp mov addr16 sub mov cmp fsts sbb stc lret aaa aas sbb lods xor aaa outsb in pop xor mov cs lret cmpsb outsl push aas cmp sub lret sub popl push fstpl nop int3 outsb adc sub adcl push xor or imul subl in sub mov loop add imul jbe mov mov insl and pop bound jl and int3 or (bad) out xor sub das jmp mov lods cld icebp add in inc das cs lcall cltd lahf xchg stos cltd int3 sbb rclb cs or xor dec ds ljmp cmp dec das dec (bad) repz mov mov inc push inc push sub jge ja in pop cmp and dec js jl in push jns pop jge je lods dec push (bad) mov lods sub sub or cmp xchg mov dec or insb imul sub fwait and and sub mov adcl push push cmpsl mov dec outsb jnp sub outsb movsb add push fdivrs or outsb es add xor sbb addr16 int3 ss sbb push mov push outsb lret xor cmp mov push and rcll das mov std (bad) lcall sub mov cmp xchg pop mov sbb dec sub adc cmp add loop scas push arpl xor jg cmp push loop adc icebp stos mov push cmc imul (bad) push aam cmp fists test in fimull int3 push loop jb jnp or sub sbb outsb js arpl xchg inc mov ss push cmp push jge push cltd sbb adc int3 mov or cmp push rclb popa xlat loop push jp and (bad) push lock mov or clc scas sub bound sarl push jp test ljmp cmp push lahf bnd iret push cmpsl mov lret ljmp push sub cmpsl push push in xchg push in sbb push adc mov add sub push jl xor cs push pop cltd sub jl out and int3 and mov push or and jg jo sub movsb clc pop imulb arpl das cli xor outsl aaa insb push in or sbb xchg push jge in push mov push push outsl dec scas orb sbb push push jns sbb ret das mov sbb sub das mov xor popf jle xor sub pop ljmp cmp lods cmp jb,pn jmp lods out add push mov stc aas or outsl sub or iret sub mov cmp add aas sub iret inc iret jge lret out or cmp cld dec push in js popl rorb outsb test insl cmp ret out imul popf or and mov lahf sub sub mov pushf push inc xlat loopne stos das pop mov aas adc cmp sub repz dec mov stos int lea push insl mov icebp mov pop or xchg push das mov mov test sub cmp pop cld sub sub pop cld lret das push sub mov fldl sub sub call dec imul adc xor fsubrs dec sbb sarb and push pop cs and les xor insl or dec subb (bad) push mov sbb lret ret movsl cmp mov inc sub inc inc fildll scas das xor lods das push adc sub or or sbb cmp jns push pushf ret and mov cwtl mov or test dec lods cs wbinvd mov jecxz lods int3 or mov lods sub pop fs adc ds (bad) push pop sbb inc sbb cmp outsb es add adc fcoml popf (bad) in mov js sub adc adc sub sbb sub lahf cmp cltd fcmovu idivb movd sub sub or lock aas out test sub and enter cmp cwtl jns jne sub sbb sub jg aas in jge push clc dec daa std push rcrl cld pop jg dec jmp sti and lretw bound aas jmp or out and push int3 (bad) aas cltd mov push in sub cmp nop addr16 cltd outsb and lahf cltd sub push es or lock sub jmp lahf push sub jmp pop outsb clc cmp push outsb (bad) sub inc clc cld pop call sub xchg push or (bad) push das mov out mov cltd lahf cmp mov push cmovp std cmp out and int3 mov outsb jmp push mov sub mov push into mov outsb adc jo mov pop outsb sub loop xor or sub sub sub push sbb sub sub sub outsb test cs (bad) push sub push fsubl and sub adc xor and subb lock fisubrs and pop aas xchg arpl push dec stos push cs pop sub or and xchg sub push cmp and and and push daa push and and sub mov mov sub sub sub or push incb lods and mov push cmp sub scas lods and or das rcll sub and inc cmpl and and and cs adc or sub or and aas sbb cltd and ss stos cmpsl lahf int3 lahf or sbb std and call jb int3 or outsb std mov test cmp mov sub and jno adc inc push push ret adcl xor ret and pop mov add and outsb imul push mov sub test cs cmp push clc push mov and insb and mov mov inc xor pop int3 incb mov sbb sub or in js jae test or xor repnz push cmpsb (bad) lret int3 sbb or mov sub outsl xchg scas jle std ret or cmp adc ljmp xrelease jp adc testl lret cmc stos ds sub pop jns jmp sbb in push push js or push imul or outsl or push loope das gs int3 int3 fs es mov jmp lret mov mov sub mov add mov mov mov jmp stos lods cmp xor insb cmp jmp add mov mov in cmp push in cmp push sub outsb add push pop push aaa lret and push cmc int outsl outsb add add ss adc or stc or sub sub sbb adc cmp int3 ss fs sub leave imul sarl push pop nop (bad) sub mov data16 cmp or and imul cmp daa push push sub add pop gs cmp dec es sub cmp pop sub mov mov and scas ror aaa or dec pop and sub push sub les sub (bad) mull sub pop lea mov mov cmp es lods and out and xor or mov xchg sub js or and int3 cmp sbb movb or or dec xor lods lea insl add lahf cltd notl lods cmp aas in bsf nopl cs lods and cmc mov lock pop ds lret mov sub adc inc add lahf daa and mov insb add sub out inc pop push sub das push jl dec and mov cwtl sub push (bad) jmp xchg xchg enter lret and and adc sub lea insb pop icebp call and xchg in mov cmp and sub cmp dec sub outsb bound jo outsl cmp or or sub out sub insl es sub jbe xlat xchg sub mov xlat lret mov sti cltd aas mov jmp jmp adc adc mov inc int3 sub xchg xor sub cmp dec sbb xlat (bad) adc repnz xlat incb mov and or movsb nopl dec adc aas xchg imul shrl jbe call inc pop sub test insl jl ljmp sub dec sub xor out add gs outsl jnp sub in sub mov xchg xchg aas xchg sbb cs xchg sbb sub and sub xor dec pop add imul xor push or xlat or imul popa push das or push pavgw mov imul wrmsr rdtsc pop inc imul das test pop nop add lods and daa sbb sub pop push mov cmp sbb pop cmp gs fwait sub insl or sub repz mov mov sti or push sub jl cmc sub cmp shr ljmp js je sub xor aas mov ds mov sub arpl jno push push insl pop daa xor push rcrb les sub pop or insl fmull dec test scas push push xor add sub or sbb cmp stc jae das sub xor loope fldt mov jge mov sub sbb push int3 push mov lret (bad) ds sub sub cmpsl lea and (bad) sahf inc cmp das or lret sbb cs insl push movsb ss jle push jp outsb bound pop (bad) mov sbb or lahf mov mov mov pop and sub xchg stc mov or ss jge add cld or clc push movsl dec sub mov xor adc in das push cltd add adc (bad) (bad) push sub das call mov outsb sbbl or enter fsubrs loop stos push push int3 lret sub sub aam loop sub dec dec (bad) outsb mov aas xchg fwait or imul cmp sbb jle mov sub sub sub push cmp std and push imul out sub test add daa adc jl adc daa cmp jbe aas sti inc xchg sub test mov mov stos xor js clc sbb sbb mov sbb sub jle xor lret jg lock or cmp cs aas sub sub ds cmp push xchg pop xor adc imul or xchg mov sarb and imul dec mov out outsb push outsb in sub dec in mov sarl or cmp add cld sub (bad) mov add insl and pop push jns sti cmp cmp movsb or decb cltd lea pop push mov stos mov das lods mov clc mov dec sub sub pop push pop scas lods das adc and cmpsb push jg dec jg dec cmp sbb cmp sub mov sbb nop mov lods das pop mov das sub rsqrtps wbinvd cli sub xchg or repz sub sub sub repz push pop mov jp mov aas rcrb scas xchg pop sbb aas cmp or sub pop or sub sbb sub hlt mov cs mov pop cmp loope or push inc push jmp xor pop ud1 mov sub (bad) insl pop sub or fnstsw push or jg sub dec sbb inc inc xchg add cmp aas into jmp insl (bad) out push sbb pusha (bad) cmp xor in jmp sbb frstor mov sarl ds dec xor and dec (bad) sub fnstenv mov cmp add adc nop mov sub mov mov mov jl fwait pop insb dec fnstsw das push mov movsb lahf and jnp mov movsb fwait sub rorb call and jae arpl ja pop scas sbb and clc dec outsb cmp sti lods call movsb or pop out mov or sbb mov sub (bad) lret sub and and and xor sub sub sub sub sub cltd das cltd aam sub jle sub sbb sbb cs lahf sbb sub sbb sbb loope sub sbb sbb sbb pop sub lahf std sbb jle sub sub sub xlat mov cltd sub sbb sub dec js xor sub jle daa repz subl sub mov sub mov js sub sub sub sub sub pop cmp sub sub mov sub push sub and sub ret push cmp xor cmp sub lahf int3 sub js,pn mov fildll sub sub jp sub sub or cs sub sub (bad) sub inc sub sub lahf sbb jge cltd lahf cld stos sub lods sub stos sub lods sub (bad) stos cmp cmc stos sub lods sub stos jo lods sub stos sub lods sub stos sub mov push inc setns sub pushf or lahf (bad) jle sub sub stos sub lods sub stos sub lods sub lods sub sub lods sub stos sub lods sub adc lahf jns mov popa stos sub js sub lods mov mov sub stos sub sub stos sub sub lods sub jle sub stos sub lods cs cs js cs lods sub jmp xlat in sub jmp sub or sub sub jmp pop in sub jmp cs cwtl sub sub fs int3 sbb imul cltd loop es mov repz xor lahf and sub lahf inc jp das and insl or jmp mov das cltd stc insl sub lahf sub out sub imul cltd add lahf test and lahf pushf push sub lahf push lahf scas imul jns ret in aas loope sub inc jns xor aaa in push fsubrs insb sub cmp insl daa repz mov outsl sub jmp cmc out add lahf dec pop cltd aas insl sub push xor jmp push outsl cmp cmp add ss jns lahf adc popf push imul or jg outsb xor (bad) fidivl mov cmp dec cmp mov xor xor mov sahf jmp into das jge imul mov jmp sub stc ss sahf lret sub arpl lahf insl and aaa and sub xor sub mov lahf jmp test out cmpsb aaa sub inc mov mov xor fdivl jmp sub xor jge imul push xor imul ss (bad) aas in mov sub icebp insl sub lahf mov repz xor sub leave cmp and lret sub imul cmpsb cmpsl sbb sub (bad) push iret sub mov add and out xor sub push jge push ss sub inc sub in jmp out cltd add cmpsb ficoml cltd lahf push cmp icebp call dec das out sub sub das cs sub scas push sub mov (bad) sub cwtl xor stos dec jmp mov lret sub jecxz jp jl into sbb mov add and mov xor in rcl dec sub cltd loope mov inc mov inc xor aas lods sbb sub mov scas sub adc mov cltd aas and dec insb aaa xor and pop fdivl adc lods insl dec aas cmpsb ss dec xor dec sbb je clc dec sub or dec dec push jns or dec jne lret jbe dec jge es sbb scas and mov int3 mov int3 push out xor call sub mov sub lahf jl inc aaa or inc (bad) and js sub lea adc mov mov or dec cmp jnp sub cltd imul dec sub push lahf xor cmp movsl xor dec sub push jmp xchg jp icebp xor mov push out jp xor lods sub ret cmp dec bound pop sub push push xor jge xor mov add insl adc xor and out divl sub stc jnp repz lret xor stc int3 add mov push sub adc scas sub mov gs clc mov jmp and xchg (bad) sbb push jle push movsb sub and sbb add fsubrl sahf and push sahf fwait adc sbb sub stos ljmp xor mov fstpt and (bad) test cli mov lcall scas add push jo sub adc push sub aam sbb es dec fldcw cmp iret or add mov jbe std lock sub xchg outsb rclb jns mov fs mov imul ret jle sbb push xor sub dec ljmp inc lahf xor rcrl into hlt movsb pop mov sub (bad) aaa or (bad) sub pushf jns and xor sub cmp dec fwait or divl bound imul push lahf int3 jle sub sbb lret sub stc loop leave add sub and repz push sub ds cmc push stc sahf xor xor jl cli add mov jnp fildl sahf das dec insl aaa mov mov das (bad) stc pop movhps or push lea and outsb add sub xor imul das cltd dec mov or aas jl fsubrl nop or xor jmp cmp push mov daa out mov and sub mov mov mov and jecxz dec pop push cltd imul pop sub (bad) in sub xor pop sbb or add add call and sub sub sub push add loop test sub xor push fcoml dec sub jb out sahf aaa pop sub and jnp pop push mov mov repz fldt lahf call sub es cmp (bad) sbb sbb mov and pop aas (bad) cmpsb mov mov sahf fnstenv das mov mov mov adc and (bad) jge lahf (bad) mov inc cltd mov fistl aas pop sub mov sbb jnp sub rcrb mov daa or daa dec inc outsl sub inc jge or or lahf xor jne push xor jns push pop sbb jle push xor push sbb pushf pusha xor sbb mov insb sbb das jmp int3 cwtl mov or (bad) std popa inc repz nop jnp sbb cmpsb add das jl push sub and sub cltd jno sbb popf sub jnp lahf cld jnp ficompl sbb popa inc or sub fisubl mov and das sbb lds and jg punpcklbw cmp cmp xor inc sbb mov mov sub mov xor das pop mov sub fisubrl pop cmp in sub sub pop mov mov inc (bad) fbld ss sub sub fnsave cld mov das shlb cmp sbb clc cs das sub or mov std dec clc push sub xchg ret aam sbb mov pushf jb,pn jb das cli push fadds sub jp cmp push fistpll push sbb pop cli add and aas sbbb sub sub repz sub pushf push jle jl in sub das mov pop adc sub mov cltd sub push or sub pop sub sbb cmp jge or lahf jl fcoml sbb xchg sub xchg xor sub sub mov mov xor xor cmp sbb sub sub xor xor xchg sub mov mov lahf cmpsb sub and loop lahf jmp lahf mov sub xor ds mov inc sub sub cwtl sub sti cltd push cltd jp xor and es mov cmp aaa cltd jno sub xor pusha cs cltd sub loop sub fisubrl or sub or and mov daa mov bound jl sub sub xor add stos and push (bad) stos daa test stos cmp and mov xor jmp push xor cltd sub xor sub dec cltd lahf aas sub mov jmp xor mov sub aas push insl cmc mov ss stos ds in cmc mov imul xor cwtl scas cmp and es lret push push mov inc cmp xor scas sub scas insb mov nop mov call stos cli repnz mov dec mov test lods cmp stos pop adcl stos xor lods and stos mov stos pop aaa lods daa adc cmp cmc insl sub imul cs xor and sub cltd jmp out xor sub ljmp cltd sbbl out sub in sub imul outsb push out sub insl sub sub push insl sub jmp ja sub sub xchg in sub in cmp add in and cltd sub sub cmpsl sub adc movsb mov imul outsl push in sbb sub outsl or cmp and sub outsl xor insl sub imul push sbb add popa add sub clc jmp (bad) loopne and cmp and imul std cmp adc xorb aas and aas insb and xor jmp mov out adc in add push cmpsb aaa lods dec ljmp adc ss outsb sub jge xor push sub jmp xchg out dec jecxz xchg and and test dec test sub mov clc sub dec arpl sub repz int3 dec push outsl jnp mov jmp and push ss xor mov xor ss and sub jmp sub and jmp sub sub lahf dec clc cltd mov scas pusha and jbe jnp repz and insl or sub jnp and call jge mov sub or xor test lret or adc pop enter iret push lea cltd xchg cltd jl sub iret sub sbb sub or das add and das scas lea sub mov rorb lea mov stc lea dec sub mov sub cmp cmp cmp aas cltd or jmp and cmc xor test mov mov jl pop adc dec or sahf jl push sbb fwait inc sub xchg inc cs and mov xrelease and loopne sub cmp cwtl cltd sub sub xor clc push mov lods adc push xor loopne push subl mov in mov jmp cmp dec scas fimuls or dec mov pusha add cmc dec das lcall sub cltd lahf mov and lahf cltd sarb int inc sub dec das dec jb sub or das pop lds scas shrd int dec push das push lahf mov or dec and sub dec and pusha or cltd insb inc sub mov js inc sub sbb sbb lahf lea cltd aam sub sbb sbb in sub sbb sub pop sub sbb sbb loope sub sbb push sbb sub xlat test sbb mov sub sbb cltd sbb push sbb mov cmpsb sbb cmpsb sbb cmc sbb sub sub sbb mov sub mov sub sbb adc sub or pop sbb jnp mov or lcall xchg sbb insb sbb xor and sbb mov sbb mov sub mov sub sbb cli sbb push sub sbb fldt inc sbb sub sub sub xchg sbb dec sbb xchg mov sub jle sub sbb push popf and pop sub sbb sbb sahf cltd das inc (bad) sbb sub sub sbb and sbb sub cmp xchg sbb sub sub lret or mov sub sbb mov sub sbb dec outsb js sbb fwait sbb xor sub sbb pop sub pop pop sub pop sub sbb dec popf add sbb sub sbb sbb popf sbb cltd and sub mov jge mov fcomps nop sbb lahf lahf sub jns lret xor sub loop and sub mov (bad) mov jmp jmp sub insb cvtpi2ps sub dec imul out in sub repz cwtl sub cltd or sub cli sub jge sub and fidivl sub mov (bad) sub sub repz inc lods mov xrelease int3 cmpsb add mov mov mov sub sub fsubr and nop lahf in sub add cmp fcomps pop lahf stos (bad) pop sub add or repnz lret sub repz mov rcrb sub sbb imul insb jge sub lahf stos fs mov loop xchg (bad) jl sub imulb cmc xor mov push xor mov js aad sub push cltd lahf scas dec sbb pop cmc push and imul mov sub cmp and stc cmp cmp xor frstor test cvttps2pi pushf mov xor sbb xchg jnp sbb decb sub fistpl xor jmp insb jnp fnsave jmp pop mov adc loopne mov sub fsubrs dec jg ja mov mov xor inc int and insl aaa and nop xor loop out sub jp or sub repz xor inc pop clc das scas in add sub das lahf jmp push cmp xor dec dec mov sub sub sub inc in sbb push mov cmp mov add lahf pop pop sub xor push sahf add loop mov cli and jl cltd hlt ds bound sbb cli sub insl mov push ds or xor movaps loop sub pop mov lahf call jmp lahf arpl fmull cltd inc fisubrs (bad) sub int3 push or cmc popf and pop sub fcoms or stos cs and sub or sahf jae add adc daa cmc cltd fwait ds cmc and sbb or test stos (bad) xor push aaa and fstpl into adc sti ds cmc clc or adc outsl out mov repz push hlt pop adc mov adc subl loopne (bad) test das xor and add sub mov lods add mov or cltd jns aas sub push out push jge clc cmp ds sub jmp mov daa repz and mov jnp nop mov or push sbb repz lahf sub push aaa xor mov ss repz cltd iret sub mov rep xor lahf shrb mov and fs mov or mov cmc and fidivl sub (bad) cwtl mov cltd lahf cmp push mov imul cltd mov and sub out or mov in xor sub (bad) mov jmp adc push push or inc and in and sub mov mov lahf jns cmp pop sub sub or xor and repz xor sub mulb jmp cmp das add sub cwtl cltd lahf paddb stos xor push and xor daa lods scas push xor mov int3 sub lahf mov xor lahf or cmc mov repz ljmp push lods xchg sub or push stos in imul jnp push mulb cmpb adc cmp mov push (bad) imul and cmp test push xor xchg cltd xchg test in adc push sub mov xor cwtl fsubr jge xrelease ss cs and jge mov jge stos aaa (bad) jl cltd sbb push mov lret lahf sub mov jmp xor sub xor add xor in cs cltd ret mov and push dec push push insb sub sub daa xor xor sub push xlat dec loop cmc sub adc ss xor jge or loop outsl pop jmp in or jmp mov in mov call push dec xor mov adc or das cmp push add xor cmp lods cmp lahf shr mov insl dec out sbb lods outsl xor cmpsb cmp jnp inc jns imul aaa jae and aas mov pop clc insl dec add xor aaa sub xor jge and (bad) fcomps mov mov xor sub stos inc lahf pop imul jmp insl or daa cltd xchg (bad) cltd lahf mov jmp push lea dec sub aas sub int jb cmc push jnp sub sub mov aas or or in adc bound mov dec (bad) xor mov sub jge into sub mov test cs jl dec das sahf mov lahf xchg mov das xchg iret stos mov aaa dec es lea iret cmp mov sub lock sub int push mov cs cmp xor clc push mov adc adc mov das test xor aaa cmp jmp inc and xor add or test sub xor rep push out and sub pop lahf mov out sahf dec sub pop dec inc xor cltd dec popa or mov cwtl cmp xor or or test mov push inc mov push dec push mov lahf sbb dec pop push bswap cs adc int3 sub xor cltd in sbb lret lret and scas lods xor (bad) test mov clc jp sub dec or cltd adc push xor add fs aad in xor xor xor xor sub sub sub sub cltd lret dec sub sub dec sub cli dec sub dec sub xor aam sub sub sub sub sub sub sub sub and and and and and and and and xchg and and and and and sub mov lahf push jnp jmp lahf jle jge sub sub sbb js pop sub pop sub jle sub pop sub pop sub push sub mov cltd push push sub mov int3 push sub sub push sub sub push sub xchg push sub sub sub sub nop mov sub xor fsubrl out out pop sub addr16 sbb (bad) lahf int3 aam sub mov sub cs bound cltd cmp sub sub sub rep lahf cmp das imul cmp sub lahf test sbb (bad) lret outsb pop sub sbb imul sbb sbb sub sahf inc pop pusha or jb insl mov jb xor pusha idivl sub sbbb lods jecxz inc (bad) cmpsl sub aad shrl xor xchg addb es cs sub inc jns mov pusha mov mov xor lcall sub adc jge sub xchg or jne hlt mov push (bad) mov arpl jb sbb arpl mov adc jb sub adc lods ljmp test pusha mov pop jnp sub test call mov push subb adc cmp movsl add nop (bad) sbb sub mov je sub sbb sbb mov es pop and fldlg2 sub cmp cli cwtl out sub jb sub aad xorl sub cmp stos add (bad) iret sbb mov push jmp pop sub cmp add and xchg pop cmp loop mov imul cld rorl pop xor fnstsw mov push sub sbb sub inc or repnz loope fdivrs or test cmp jecxz jb ret sub mov jg sub out addb mov pushf push cmc call sub add lahf sub xchg and data16 enter sub mov popf cmp jb fisttpll dec sbb sub lods jb pop adc lahf sub cmp sub daa es jg push shrl pop fildll xchg xor add fdivs xor xor mov mov sub jmp jg cmp sub nop test je xor dec dec sbb fldl mov je movsl sbb push or mov sub dec lret das or mov fs cmp pop push dec sub test push out pop cmp sub mov fcompl daa sub stos lods sub sbb and jno int adc add dec cmp and cmp mov les cwtl (bad) lock mov fstl sub xor mov or inc push jle lret imul sub inc cmp sub sbb pop cmc mov sub out mov sub xchg in icebp sub xchg ja inc sub lock jbe sub and or sub mov mov or imul sub sbb outsb lahf jnp repnz mov inc inc sbb sub clc shrl (bad) repnz in cmpsl push sub (bad) or inc cmp push cmp iret cmp iret mov add sbb xor shlb cmp mov xchg and jno mov shll stc xor pop jp sub mull ljmp lods lods jb sub outsl xchg push subl mov (bad) shl repnz sub outsl mov xchg jmp inc jb sub popf lret mov sub and add sub sub pushw sub mov pushf xchg adc je lret mov sub cmp sub lret test aam cmp xor xchg and jge es sub cmp sub sub mov sub (bad) xor sub or andl sub push ja mov lahf cmp xor mulb add outsb loopne dec sub rolb ds jp aas sub sub sub arpl inc xchg sub mov (bad) sub movsb lods mov jb cmpb fst cmp adc sub inc xor adc imul fiadds (bad) fstpl icebp sub jl sub pushf xor add jbe out sub mov mov sub notl sbb mov mov add adc (bad) xlat imul mov and jo pop sbb sub and inc mov xchg jmp je negb sti shll sbb sbb call dec fwait sbb jmp push stos mov adc jmp jno cmp mov xor test jne int3 lret jge push das pop mov data16 shll pop jge out mov xchg lret add jbe icebp das stos je add shll aam xor and and lret ficoms addl and xchg cmp ret mov out pop and mov cmp stos je pusha adc (bad) je pop push mov cwtl fildll mov jno out pop mov mov adc or mov out or cmp jge mov mov push je or push aad cmp pop xchg daa pop push and or cmp cs push data16 rolb cmc dec adc sbb dec mov xor mov xchg jge sbb pcmpeqb cmp pop cmp xchg mov cmc fwait aam jno les mov sbb xchg out and shll mov fistps jmp mov lcall arpl pop daa in std dec cwtl mov sbb lret imul or cli int dec mov adc and sahf pop in out rcl stc sub jb pusha out jg mov les test test lahf and mov mov les or mov inc stos pop adc pushf jp pop clc sub push push int in and icebp pop pusha jae in add fdiv rcr and xor in or repnz sbb test cmpsl push fs aas cmpsl and push xchg lea mov icebp add push popf xchg mov mov lahf lahf pop and dec push hlt xchg sbb mov subb sbb or mov shlb pop jle xchg (bad) pop mov je push ja mov xchg dec stc adc mov cmp scas push pop jg dec mov add cmp push add ja adc inc out leave sub repz mov pop pop cmpsl cmpsl jg sar je inc xchg arpl mov inc nop sub mov je sbb push push pop fdivl shll sub ja cmpsb (bad) ja fs cmp shll dec arpl cmp cmp pop push test push jmp cmp mov mov mov mov imul cld sub fnstcw mov outsl sbb ja test pusha push jns pop (bad) dec ss in lahf (bad) je pop lretw rcrb xor xchg out shll lcallw or pop push xor std nop push out mov pop jne aaa xchg cltd das ret push add mov aaa push (bad) lods push mov push pop shr adc neg test js cmpsl cmpsl dec rolb mov mov icebp push outsb add inc rorb or movsl push ss es cmp mov xor pop jae sub jecxz mov dec or pop ds dec es pop fcomps stc sbb push int3 je jo pop push shlb lahf add push xor fnstcw scas je dec movsl xchg and push mov (bad) mov fisttpl xor out sub sbb sti xor mov shl inc shlb rcrb xor loope lock jmp and fiadds rcrl aad aad aad (bad) cwtl mov mov lret inc sub mov cwtl in add adc push idivb xor sub mov mov lcall negl out sub jecxz dec cld mov dec push add in sbb add mov or cmp imul rorl sbb sbb jne push (bad) push pop dec pop movsl jb cmp pop ret rol repz push inc mov inc je (bad) in mov je nop aaa (bad) ror (bad) mov enter decb inc sbb mov orb addb jmp icebp int3 fmull push mov inc icebp cmp sbb or lea decb aaa cmp in cmp pop xor push mov xchg cmp test jecxz mov popa icebp inc adc divb jmp add lret je inc (bad) lods xchg lock xor xorb (bad) imulb mov inc push rorl or adc and push test mov aaa or outsl aaa scas jns lea adc jl or adc dec xor inc or dec (bad) js fdiv rcr and ret and jne cltd mov rcrl sarl pop xchg xchg xor xor enter xor mov dec outsb lods xchg es (bad) int enter xor add popl lret lret xor and adc mov andb loop div inc nop push xor xor dec arpl cmp add aad (bad) and jmp jae or lds pop popa push add sub test fs mov or mov jp sub pop dec jnp jne mov fdivrs cmp movsl xor lret rclb jae (bad) pushf dec imul push pop mov (bad) sahf push mov mov andb (bad) adc push out aam mov aaa lods ja xlat or outsl out inc push ja push sub jge cmp push int push fwait cmp push inc cs xchg jge rcll std mov jns sub push add add cmp cli lret bound test jo push and mov adc lock popa lds and mov lret mov mov lds loop xor and sub jne sbb fimull daa and sbb lds les or sbb mov cltd inc (bad) mov clc dec sub mov push or andb test inc push xchg jp or das gs dec cmp fcomps or jmp xorb rol (bad) sbb rcl push frstor lret rcrl sbb jnp dec mov cmp repnz push add adc (bad) sbb xor or les das movsl arpl xchg xchg add shr decb add ret cltd icebp mov test int push out push cwtl inc stos in mov xor sub (bad) mov inc cld xchg xor adc cmp xchg es jb mov jno stos mov dec ret or adc nop stos test add mov push xor ja adc mov ret inc add add adc adc xor jecxz jnp in mov jns lock ffree test jmp jnp xchg xor outsl sbb dec imul std aaa pushf cmp sbb ret fs cmpb arpl pop cld lcall mov mov jmp jb jl inc jp fs (bad) adc push lods (bad) sbb push ret mov xchg iret xchg inc xchg push mov pushf cltd cmp idivb pop std aaa pop dec stc cmpsl into lret pop sti pop xchg mov sub mov inc popf and mov xchg stos xchg xlat inc hlt pusha mov mov enter stos push arpl repz xchg cwtl push and jne mov rclb mov repz movsl dec push dec jp mov xor es mov adc sahf clc in mov ja lods outsl shlb mov inc push enter icebp aaa out imul ljmp jl inc stos sub ret mov iret push or mov or clc out and mov popf into stc loopne add ret jp xor xchg or add mov lret sahf or push rcrb rol sub dec (bad) mov add in mov stc pushf or and sar mov mov xchg pop and ret pop pop (bad) adc les mulb cmp pusha and cwtl dec or xor aaa nop and out xor sbb idivl xor xor lods sbb aaa add insl pop jecxz add fcmovb cmp (bad) fwait je je jne push outsb outsl cmpsl dec rolb jmp pop jge in inc fs jp mov sbb push mov adc lods imul arpl repnz inc pop lock add outsl sbb xor mov xor lret or fcompl ret rclb dec lds cmpsl jg mov imul fwait out xor in and mov std xor cmp roll dec cld arpl je lea mov pop sub insb or fnstenv push and sub les stos fisubs arpl or mov je mov clc aam movsl lret ret push addl (bad) adc mov pop cld dec xor arpl ret dec iret out imul addr16 testl roll rcrl sbb repnz scas jns sub mov lods sar cmp sub xchg and cmp push arpl mov aaa xchg and push leave pusha loop scas mov aam mov sbb inc mov fcmovb and mov fdivrl lret sbb out je aaa ficomps cli jle mov or sub cmpsl cmpsb cmc mov adc pop es ret shlb push mov and dec cmp fistl pusha push add pop mov jns loope xchg cmp aad cmp imul shrl xchg and or nop fsubs push cmpsb insb dec pop dec dec cld and sub xchg xchg cmp pop je jp xchg rcll xor shlb cmp jmp push fxch test bound push lret lock inc jnp jno cmpsl cmp outsb rorl add hlt mov dec aas sti lea popf lods mov (bad) adc vpmulhw arpl popf xor push mov mov mov js dec pop pop xor xchg mov adc fdiv popa push mov push les sbb imul jns test popf (bad) inc ret loop or and lret mov flds cmp pop je add jne pop push mov or outsb cld (bad) (bad) jnp xchg mov add ja pop mov sbb scas notl cld std fcmovnb dec dec jns cmp dec dec mov clts out notb addr16 loope movsl into shlb inc mov jg and arpl testb cmp fbld push jb push pusha xor outsb (bad) negl pop jo jbe or jns subb stc push mov test movsl cmp movsl xor or fldenv in mov sti cmp out sbb aaa xchg lock outsl test pop jo int cltd ljmp data16 scas cmp jno aas push lods xor fmull test dec sub pop popa pushf lcall aas fisttpl sbb sub mov arpl in test lods mov movsl mov mov dec mov push dec xchg mov pop jo adc in xor cmpsl pop sarl lret or xchg or sub lret jecxz mov sti pop pushf jge pop test mov adc dec out inc dec or jae sbb xchg push adc mov mov push pop dec mov push pop push inc push jnp out push int3 mov dec inc fwait push mov stos fwait lock inc push ret loope lea mov clc add mov aas in xchg shr adc push jg std jo movsl int or inc mov inc (bad) test subb scas sbb mov sub mov sub pop xchg and xor push icebp dec inc adc mov data16 xor xchg je xchg mov lea data16 shlb push fs out and repnz dec xor frstor cld push in push mull movsl mov or mov lret xor pop ja cmp mov push mov jge js es (bad) dec shrl mov les call fsubrl test add sar arpl int imul add cld push pop popl push mov cs mov cmp sarl mov mov pop dec sbb or cmpsb push dec paddw loop pop dec mov loop fistpl ficomps pop icebp cmp pop cmpsb mov (bad) or xor xchg fnsave scas xchg push je dec push mov int3 pusha jp aam xor dec je jge dec jecxz stc sub (bad) dec jmp jle imul pop jo xorb fxtract mov ficoml icebp lret je inc cmp sub sub adc popa lods clc and insb leave movsb add pop or cld jbe loope dec mov into push test outsb add inc mov or ss jb int mov inc cmp or arpl inc mov ja out adc mov inc add mov mov fs cmp aam push stos jnp jg xor or or adc push outsb cmp mov enter sbb out pop out sub mov fwait jno dec es mov bound rcrb push mov lret xchg (bad) mov (bad) cmpsl adc in dec or gs stos repnz and or push sub test sbb call fsubrl sbb outsl repnz popa xchg daa jle stos in pushaw call addr16 sbb iret pop gs shlb pop (bad) ja stos cmp repz es decl inc sti leave test jno or and out aam jno mov lret or inc jnp sub (bad) movsl jo dec ja cltd fidivs lcall inc daa cmp or les pop rcll xchg mov mov (bad) lods mov adc loopne out shll aad movsb lcall xor cmp dec sub xchg mov push js (bad) mov stos insl mov rcll lds sbb jne cld lds jno inc fldl dec inc sbb call jo shlb dec adc ficoms addr16 pop pop idiv dec mov lea adcb cli lret jmp hlt aam push je lods add icebp cmp daa (bad) adc jg jge popa xorb jmp hlt inc and je lods add icebp cmp (bad) adc mov lret mov hlt aam push je jne add in xchg (bad) adc xorb push inc adc in loopne stos je add cs jbe mov jno out loopne add divb je inc push data16 sbb imul sti (bad) cli and inc shlb out push mov lods push icebp jge sub jnp jne pop jae shr aas inc leave out push add push or addr16 in in out test lahf jp sbb shrl pushf push mov stc insb jb std scas or into fs ret shrl xor or and dec and outsl sub addr16 das push or mov mov (bad) dec jmp inc arpl inc stos or sbbl dec int inc les ds lods in ror mov in xor (bad) (bad) out push lods cmpsl pop orl or jp mov in test out rorl inc pop popa push ja pop sbb dec jg in addr16 orb dec sbb shll orl lock rol out cmp jl aam mov mov ret addr16 mov xchg mov add xchg or mov addr16 dec pop daa hlt in jne lds data16 enter insl es inc mov ss jbe mov mov (bad) fsubs sub dec lods add (bad) adc filds mov mov cmp insb xchg add jne inc mov adc inc xchg jns sahf push sahf or daa insl jl std jg je sbb gs add jo mov ret jecxz push mov or jne adc mov adc sbb mov jl push xor jl js xor or push dec jmp push (bad) call mov dec lcall ljmp adc adc jle lea aaa stc lea add mov mov test fwait push shlb pop cli xchg or xlat test dec arpl roll (bad) mov outsl insl xor insb rolb test leave jl ja push sub push out test es jle sub (bad) xchg jae (bad) in push jnp xlat sbb jecxz lahf add mov enter out ret push mov sub ljmp dec clc ljmp lcall insb cmp (bad) not cmc mov adcl pop adc int inc mov adc sbb gs (bad) push lods jl and push mov scas cmp and xchg or das sbb mov push (bad) jecxz ja jg xchg jno test inc lcall (bad) into in das sub jge xchg mov mov inc sub cmp rcll mov daa mov lret xor mov wrmsr and add xor lods push adc rol jb ret jnp and cmpsl sbb or icebp cmp jge push arpl inc orl popa into mov xchg popf xchg not mov rcll adc inc xchg push mov nop mov add mov sbb cs pop fcom push add arpl mov outsl movsb dec int ljmp push cmp jmp shll pop cmp push xchg dec lock je adc mov aaa cmp fmull mov sbb mov ljmp xlat or dec sbb add or pop out jge push sbb jbe rorl push mov popf jmp icebp pop scas mov addr16 jns jg aaa sahf mov and hlt enter push jg mov data16 push sbbl mov and mov data16 jp aaa mov lods test mov pushf jae dec mov mov mov push dec push fiadds adc cmpb xchg aas sbb cmpsl xchg roll ret shll xor xorb dec dec nop mov and and push std lds inc icebp mov sbb jbe sahf subl rcl xchg inc cmp sub sbb sbb xor test xor pop or ds je mov fwait cmpsb inc cs bound xor inc aas pop out xor jo ret clc dec and xor adc dec outsl out mov adc int3 mov mov push stc xchg push jae sarb xor stos jae leave int3 xchg test xor fwait pop shll fbstp push mov add add fwait mov decb in cmpb lret add mov pusha inc in stos push jo cmp enter ret fsub jnp pop xor pop cmp mov push je movsl xlat add je pop adc lds mov mov cwtl fstpl aad sbb fstpl mov lds mov jp ret std movsb notb mov ret mov jge or adc (bad) jecxz adc xor adc dec cmp dec jge lods js popaw hlt mov jecxz push or insl xor mov in popf or mov mov aas pop mov xchg sbb jg or popf lahf xor test push jge enter test xchg scas or push pop shll jne (bad) sub pop mov mov fs notl mov and mov icebp adc in sbb sti pop sbb out cmp dec (bad) fwait es movsl mov cmp mov rorb sub mov pop jmp push cmpsl mov cld testb jle cmp xchg and push clc cmp jle aas ss mov sbb mov sbb push dec mov lret stos js outsl popf pop inc rorl add (bad) mov loopne bsf push mov daa stos inc jle mov inc ret sbb mov rcll inc push andl addr16 adc mov mov jne dec jno lods mov sbb or xor adc mov push test outsb incb rol aad xor rclb xorl pop aam enter xor push testl fwait add and jb dec insw fcoms push jp dec mov test lret ss icebp and cmp sbb mov mov pop push jae icebp mov jecxz mov bound and inc repz xchg mov dec pop sub ret js loop and fsubl js and (bad) jg cmp and imul inc loopne push adc xor jb mov jg xchg xchg sbb (bad) mov loope adc jnp mov lods mov push pop cli (bad) mov xor (bad) dec sub stos rolb sar mov push mov icebp ret and sub mov lret pop mov mov push je sbb xor cwtl inc pop pushw movsl mov inc jb insl mov pusha xor cmp sbbb in inc ret lret jle jg aad shrl or mov popf dec adc movsl cmpsl (bad) out jae mov test cmp mov pop adc jge arpl popf leave es (bad) mov shlb pop mov arpl mov arpl je add pop fstl mov in and icebp testb pusha mov pop jnp add xchg add mov mov push subb icebp cmp add nop mov pop sbb idivl jb lret mov xor mov mov and sub fldlg2 sarl xchg cld sahf loope enter jb sub jmp or sub leave pop adc inc sbb inc mov jmp pop ret testb and lods xchg pop cmp loop mov pop mov int3 cld rorl pop xor icebp cmp push cmpsb xor xorb jge inc or repnz mov jp xor test cmp adc dec inc scas (bad) jmp cmp (bad) push xchg push mov push cmc call cs inc cltd pop mov pop xchg and je into xchg mov test cmp je fisttpl sbb pop stos je sbb push cltd das mov (bad) cmp sub and jns sbb lods mov test aaa mov mov je aaa cmpsb mov popa mov mov add cmp nop test xor dec sbb int3 mov jns sbb mov mov lock mov dec lret or hlt mov mov mov jbe cmp push pop push dec mov cmp incb push out pop cmp xchg push outsb stos outsb mov cltd cmp sub dec push shrl bound pop push and lret stc pop cs dec cmp and push movsl (bad) cwtl (bad) lock lcall cmp icebp xor or inc adc imul enter add nop lret push sub sbb repz test je dec es fucomi icebp das pusha addl mov jbe xor inc mov or icebp cmp (bad) iret mov mov mov push mov jge hlt sub inc sbb ret (bad) xlat insb nop clc hlt mov lea arpl rorb inc cmp insb cmp iret cmp iret mov adc (bad) cmpsl shll lret fistpll xchg hlt cld xchg mov shll ss pop jl out sub mull ljmp stos je mov inc outsl xchg push andl mov call outsl mov in xor iret into mov fbld jns hlt roll ljmp pushw hlt mov lcall cmp mov sbb mov cmp test xchg cmp xchg and jge es nop dec aaa mov cmp cmpl inc mov add cmp arpl aam clc fidivrs xor call cltd aas (bad) or add icebp cmp push jns sbb add sbb nop jl cmp mov cmp push mov fdivrs outsl inc cmpsb pop add dec pop leave movsb lods mov shrl js fst cmp adc sub xor mov xchg jb mov mov mov cmp adc into popa mov (bad) ret lret pop mov in mov sub scas pusha push test insb imul loopne xchg pushf stos jnp push mov or out adc iret aad xchg lock cmpsl push das scas mov adc (bad) aam ret ja leave push mov outsl daa iret pushw sub pop mov pop pop scas dec cli popf or repnz ja xor loopne dec dec xchg xchg mov adc jmp jno cmp mov xor test jne int3 lret sbb mov sub dec (bad) mov test xor cmpb lret mov shlb pusha je popf data16 push mov shrl mov mov mov adc and mov mov push push cmp inc jecxz dec movsb sub adc imul in hlt push mov mov cwtl shll xor mov add lret lret xor pop adc les cmp dec jl jnp push (bad) xor xchg cmp out pop mov or xchg out das sbb push (bad) cwtl test pop jecxz pop jge mov lret les xchg sbb mov mov xchg add in inc mov jg mov jo data16 cmp cmp gs mov lret push mov mov fwait je sub lahf push sbbl sub add xchg jp pushf lcall (bad) scas push cmp fimuls pop es xor jae rcrb lret lock lods sbb aaa jbe cmp ja lret jno lock push fwait shrl sub (bad) pop in pop sti mov pop fistpl mov data16 in push or pop (bad) insl icebp stc dec outsl popa jb ret test or and (bad) cmp or pop js jmp xor add pop or inc addr16 dec int lret pop push dec ja (bad) daa aad popf repnz push xchg mov xchg jne cltd push je cmc sahf xchg les ret aaa push xor jnp hlt add sahf loope (bad) aaa pop out pop xchg pop cmpsl les fs xor xchg aas (bad) fstps inc pop sti fs gs int3 in stos mov test pushf lret mov aas lcall (bad) movsl mov hlt repz jo jno,pn inc lods add jg std imul xor cmp pop xchg icebp xchg pop lock inc mov insb test push (bad) (bad) icebp (bad) sub (bad) lea mov and xchg je mov repnz mov mov fildll jo or outsl xchg adc pop jge cld stos mov pop lret mov hlt mov mov pop add (bad) cmp or iret pop mov xor inc ds xor mov sbb cmpb pop testl sbb add lret xor mov push mov add test mov inc dec lahf out stos add shrl adc add xchg push cmp push data16 or shll inc loop data16 cmp fistps sbb cmc dec inc push testb sub and cs imul inc cmp mov mov aam les lods cwtl inc cmp and test dec sbb das out in jg popf stos aam addr16 push jae,pt sub fs cwtl or call in mov das push cmp test lock (bad) push ljmp add clc pop pop lcall and pusha aas pop inc push pop inc mov fs (bad) and cmp pop xor in sub pop mov xchg ret push xchg shll outsb outsb fs dec sbb sub pop pop and xor add mov ss aad cmp into insl add mov leave mov push (bad) jl shll inc in push popf outsl jns sbb das add pop outsl bound cwtl push mov lret rolb test mov or (bad) or ja or or xchg xchg ud2 sub aas arpl adc addr16 jecxz shll xchg jmp cld jnp cmp inc sahf fldcw xor pop les mov ljmp push mov nop lea adc ljmp ja hlt scas inc aad mov (bad) inc or lret mov hlt cmp xor jb rolb sahf dec sub adc and mov (bad) std mov pop int3 mull cmp pop and nop add mov fnsave aam (bad) fs call stos sbb lcall in inc xor sbb pop out cltd or xorl inc cwtl shrl adc (bad) aas fs jno cmp pop lret notl dec (bad) mov xor jmp sbb push xlat mov push fbld push aaa lea ja sbb pop xor das orb mov outsl pcmpgtb dec add sbb test xchg lahf insl mov in xchg fwait lods stos sbb nop inc pushf pop dec push adc adcl cs add push rcrl sub hlt aaa push or jmp jmp mov gs aaa (bad) or ret sbb loop fdivrs je test imul je sbb pop clc fs adc mov popa cmp xchg add int3 out mov xor pusha lods or push test sbb pop dec mov inc and push push adc data16 scas xchg dec (bad) push inc aaa outsb xor arpl push das std out mov shll pop push add fwait fs movsl xchg push shrl addl sbb add scas (bad) pop (bad) int3 inc xor ret into (bad) cmp and hlt out jno ror pop lret popa rorb push cli mov outsb add jge push mov insb xchg push inc inc push insl sar ja test sahf mov push push out movsl sbb movd xchg rcrb or fwait mov je and mov mov fidivrs xor push mov lock repz sti sbb inc dec popa out pop mov movsb (bad) clc out fidivs push data16 jno jb lcall dec mov mov or pop push dec pop or decb jb adc cmp push lret mov dec mov xchg or or popf inc imul stos test jo push fisubl mov sub push jb or add xor adc aaa dec out into outsb imul sbb push mov (bad) movsb test imul cmp or pop add xchg and push loope xor in popl scas ret mov imul mov hlt rclb pop js xlat mov inc cmp or jl fisubrs and xor dec xchg add bound dec push je hlt sub mov pop (bad) clc pop or push jns shrl push mov insl and add inc je les inc push push addr16 sub adc fs test scas pop mov lea int sbbb sbb mov shrl scas mov test bound push std ret mov jo and inc jb lcall shll call push clc dec scas mov xor mov insl shrb mov insl rolb inc jnp or xlat jae and sbb fcompl lds dec ret and lahf lret fidivl push clc sbb je (bad) or outsl add out jno mov pushf ret cmp stc jge fisubrs ja jmp andl lret push sbb sub xchg add insb push ret and rclb or stos xorl sbb decb and rcrb in or inc dec cld pop jb mov inc clc aad push mov add popf cmpsl adc xor cmc mov pop mov or js out pop cltd rcrb aaa add loop (bad) lret pop push xor mov push adc test adc xor adc stos jle data16 cmpsl out cltd fisttps icebp rclb mov outsl sub insb (bad) pushf dec add stc and push add outsl lods int3 hlt test xor shr mov mov loope push stc movb rcrl outsb rorb nop aas decl pop lcall xchg lock or cltd andl and and add sub mov and dec cmp test cmp ss xchg jns negl pushf cmp mov lahf std roll gs (bad) and int xchg cmp pushw cltd lahf and cmp test out popf and clc icebp int3 js inc sti out enter sbb lods xchg ret sub mov xchg cmc inc push fistps stos jb sbb push sti int cli data16 mov jno in dec (bad) (bad) shr cld and sbbl in lret xor (bad) ja adc xchg jp cmpl add sahf xor xchg int push test test pop add mov jbe push mov mov add cmp test adc mov and ss popa pop pop sub mov jae test dec cwtl imul cmp je cmp sub inc pop (bad) mov jp cmp or cld arpl jg in add mov or hlt cwtl dec adc (bad) cld mov push movsl push xchg inc pop divps jge mov in jp pop mov icebp aas ljmp js sbb faddl js pop mov mov inc popa or pop imul ljmp pop movsl dec (bad) iret pusha mov ljmp in mov shl in inc jo mov insb mov and lock and or xor aam ljmp mov sbb jmp pop sbb xlat imul xor add mov sbb add xor mov dec sbbb js dec aam jge and loope int stos push loopne adc aas fists addr16 out fwait aad (bad) lods out xor jb sbb inc dec dec xchg push or leave xchg cmpsl loope fstps outsl or xlat inc push cltd inc lcall in xor dec dec sub push mov and lahf push xchg mov mov lahf in (bad) adc xor mov (bad) jne xor in or add imul mov int mov test ret and add mov dec cmp add test (bad) jb out push mov (bad) jle movsl lds (bad) pop or xchg push mov mov push mov loopne mov sub adc das xchg pop and cmp xor xchg inc push movsb pop mov adc and mov jle xor daa roll mov shrb cltd gs das dec xlat jg ret test xchg shlb pop jmp ret dec sbb push (bad) xchg pop movsb lret dec orl cmp outsb and js mov cld push je imul cmc lahf addl jl sbb adc popa lods and jmp xor shll sub add ret inc sub jge js pusha push stos mov and adc pop stos mov mov pop or sarl adc sub pop clc arpl sub out push loope mov shrb insb pop scas xor jmp fsts inc test mov jno inc insl sbb scas push int and or std mov inc lods fldpi and imull lea jae aaa mov push (bad) xor flds xchg ret rorb ret sbb cmp pop aam aad rolb lods xor in cmc cwtl inc (bad) sub sbb jne out fwait push jns and adc jb lahf cmp mov lods in inc jl mov pop idivb xchg je xchg sub mov in pop adc cmp inc sub push test lock data16 push mov lret mov push sub push mov mov or adc xchg pop mov lahf dec cmp lock push sbb jne ret stc sbb jno rcll nop mov mov cmp sti push xchg pop add xchg shlb jle fsubl sarl aas and xchg sub mov push and jmp repz aam mulb (bad) jle xor lods mov and xlat jp xor push dec sbb xor adc aam ret shr inc (bad) enter push insl fnstenv or adc mov aaa fwait sub in or ret test pop or insl xchg mov faddl repnz mov fsubl int3 sbb je pop pushw or int3 pop sahf lock fs cmpl pop mov addl clc inc pop out and repz and pop mov std mov cmp mov sub add mov icebp hlt out es loop sub mov sbbb xor push out pop dec in (bad) pop or pop mov dec pop icebp lods push fs insb jnp push es sub mov fnstcw xor sbb or je das push push out adc enter lahf stos xor dec sar stos pop or mov xor repz pop pop jmp and xchg (bad) ds arpl sbb rorl mov imul aam and out ror mov ret cmp jg repnz adc enter (bad) inc pop dec insl sub pushf xchg push mov push or orl in add gs lret and cld rcrb adc arpl std add dec mov pop xlat fmul ljmp cmp mov push inc or je push lahf xor scas lret ret mov jge pusha jl shl rsm je (bad) cmp inc xor es in arpl xor imul jne jo sbb xor bound pop cld adc ret je sbb mov mov je arpl ficoms sub ja push xchg into scas fs inc add lods push cmp pop mov adc imul pop inc push push xorb adc es movsb test sbb aaa xor in addb (bad) adc aas (bad) mov lods lret rol push jo mov xor xlat cli (bad) into aam jo cmp aas faddp lret mov lds in push dec addl or int pop sub dec jns add push js pop fbstp mov inc loope xchg xchg cmp test (bad) out push cmpsl lret lret push fidivs mov mov loop clc or aaa fisttpl (bad) dec sbb mov jp pop loop cltd lds adc cltd (bad) sub (bad) pop fistps hlt fcmovnb popa outsl inc xor sub xchg cmc cmc je mov adc rorb cmp cmp hlt mov (bad) jmp movsl addl ja mov pop and out or movsb pop sub sbb lcall xchg inc int3 cmp cmp xor sbb push jmp test (bad) loopne outsl mov adc mov repnz lcall sub dec fcmove mov sbb pop nop lds test shll xor (bad) adc insb inc or push push pop rorl mov dec (bad) xlat stos jae dec or xor pusha into jmp jge lret adc stos dec mov (bad) lcall push pop or aaa sbb and aaa sbb movsb push push ds ljmp outsl jns out push lods sbb jno mov sahf int3 lea lock push loopne xor or hlt popf push xor popf dec ljmp cmc fsub sbb pop ret inc scas dec add sub push mov mov cs xor xchg icebp xor movsl xor cmp movsb jmp cli je arpl sti inc xchg mov push sub ja shl dec call fstpt rcrl xchg cmpl or push lret out test xchg ret lods jge imul or sbb arpl leave cmp (bad) jge jae pop and dec push cmp push insb sar jb mov inc sub xchg daa cmp sbb outsl push xchg mov cmp and stos jge cld mov sbb jnp mov dec icebp inc ret das pop mov pop hlt (bad) or xor lret dec or (bad) lahf bound je jbe mull mov xlat mov push dec je or (bad) mov sbb xchg inc sub xchg mov xchg jbe sub mov cs mov sub je pop in cmp lcall add sub ret lret test xor lret mov pop or fists pop aaa pop js mov push inc cmp lret or adc movb and cmc sbb xor insb js adc iret push iret pop mov jge data16 or lret or push les aam (bad) test cmp sbb dec xor testb lret jb call lds notb add test movsl pop xchg dec orl fimull sti push mov adc movsb imul pusha lret mov aas mov lcall xor mov dec hlt stc adc scas arpl mov mov sbb push es and stc jns mov (bad) sbb or sarl add dec and insw bound push out jns pop lret pop cmc test fs xlat xor iret (bad) pop test gs and xlat fsubl inc pop pop sahf lret cmp fbstp bswap sbb shr pop or add into and mov dec iret jl lock or sbb xor fistpl popf sbb pop pop lock dec fsubrl mov lret notb and push test sbb push dec arpl inc jbe das data16 jmp int mov or inc shll iret push sub and fucomip daa mov dec mov arpl mov ret ljmp pop sbb fsub jmp cmp fwait push fdivp mov cld push pop jg enter (bad) sarb jbe xchg pop xchg mov in dec (bad) mov inc mov jns mov mov aam inc push mov insl mov xchg and lcall aad cmp pushf push cmp mov inc mov push in sub les sub xor mov out lea or xchg cmp pop (bad) adc mov mov imul out jae cld daa dec jns adc push and add mov jne (bad) shll es icebp or test xchg adc or xor cmpsb imul aas call mov mov sub push je lcall outsb arpl lods xchg pop dec fisubl and aam push fsubrs std add enter dec insl sbb xchg inc pop pop loop lret (bad) movsl sarl and jb jl imul test inc xchg aaa sbbb cmc pushaw repz outsb jge push xchg push push mov mov jb je cmovs xchg mov mov mov push icebp cmp std push sub inc movsb jl xor pop push mov add aas jge or das popa repnz es dec pop pop inc jnp cld mov pop cmp imul add pop mov lods jbe pop jge mov push inc lods sbb insb int3 ja push mov loop das test pop push mov jne cmp mov test std aaa inc jmp imul shll outsl push push mov fwait pop dec sbb push xor scas lods mov (bad) insl push shlb loope movsl mull xor fsts sbb int3 pop xchg mov xor loop imul enter ret inc fldl out pop sbb lret in mov mov inc pusha add icebp push int rcll mov pop daa mov xor jb sub cmp out out add xchg je and cmc aad cmpsl mov std ljmp leave stos mov (bad) xor sub or mov testl les push xchg (bad) push push mov push data16 pop and fnstsw cld aam aad fmul (bad) ja xor mov push rcrl out cmpsl test testb addr16 pmuludq sbb jg dec inc xchg adc into push shll push mov or jge add shrl pusha add jne (bad) lods loop pop repnz xor repnz notl or mov add lret loop dec mov or mov jae fdiv sbb pop xchg aaa int3 sub and test gs inc and xchg cmc and cmp sub leave sub (bad) and push rclb mov xchg stos adc mov cmp dec hlt or ds ljmp nop and ss pusha pop pop push cmp pop fcmovb cld leave sub (bad) pop in es sub dec push test jge ds jne or cwtl insl ss test lods stos xchg test outsl xchg test mov sbb cld or mov int3 and insb push stos out js sub test int xchg xor sbb out jae pop xchg mov xor (bad) ljmp jo mov in nop add xor sbb popa fwait push cmp out push data16 (bad) jb inc testb adc arpl ljmp pop dec clc add pop dec inc ret and lods shrl int3 xchg pop mov mov fdivs lcall or cli mov and into fcompl push inc mov push jb iret fildll adc push xchg jo daa out mov enter mov lods shrb and aam in dec int adc out sub mov popf (bad) mov inc repz in je push cmp push jae sbb leave mov cs mov mov cld and cli push mov aad and cltd sub frstor xor bound jns das xor sbb push cmp pop movsb and int cmpb lock je scas push jg or scas addl in add dec fnstsw xor sub addr16 inc add sub cmpsb sbb jge add or imulb push rcrl xor lret jp ret in fdivrs bound adc shlb mov ja pop insb mov and mov loopne adc sub ljmp imul iret outsl sti adc dec adc inc mov lods cmp push jge adc lret xor cmp jp imulb imul mov hlt lcall push xchg aaa mov mov mov mov adc xlat fldcw adc xor fidivs xchg mov lods test sti pop (bad) mov fcmovnbe sahf cmp xlat scas or add (bad) mov pop jle je out inc adc dec jmp jge push lock sbb fsubp not (bad) (bad) jo dec std es mov ret mov je mov inc ljmp pop test movsl insb imul test mov insl add pusha xchg fmull loop adc into ja and clc add cs inc rorb or inc mov dec xlat pop je sub xorb out cltd and push xor xchg push cwtl rcll and inc mov js jae push push jnp (bad) fisttps inc xlat sti bound popf pop daa adc or push push sti xchg dec or sub aam shrb cltd jns insl aaa lods adc pop sbb flds lea stc je pop sbb dec sub pop add sbb mov sbb decl inc adc div je in aaa cwtl dec loope xchg in in push andb jmp pop cli rclb lods add cmpsl dec inc pop stc adc aam add mov outsl mov add bound nop call jne das es or xor jl mov into add push or lods add pop in cmp ret hlt jae (bad) ret (bad) push xchg cltd adc shll jae lods enter jae mov fistpll lds pop test pop fisttpl push nop and in mov push cmpsb test mov lea push (bad) sub and repnz inc aad stos and fsubl mov mov xor cltd aad xor pop imull sbb pop addr16 and inc and xor leave js out adcb test fstl or sub pusha add jge shll jns test mov xchg std adc rorl in es push xor or inc add push and stos mov aam icebp imul adc das jns sbb es mov imul dec lcall or xor xchg cmp in push add test pop aam lret mov pop loope mov push add andb out test cmp rolb out pop pushf cltd push mov and loop rorl jne mov stc fndisi(8087 hlt sub es add psrad test inc mov or dec cld mov adc int ja lret int and int3 push shrl mov test fnstenv inc and rclb xchg movsb pop movsl dec (bad) mov hlt mov jae pop and shll cmp pop inc lea adc lret test lcall leave or dec xlat dec (bad) inc jmp and test testb dec inc rcrl lds lods xor cli lock xor (bad) mull push and adc into sub cmpsl jl ljmp into fidivl mov (bad) pop dec popf inc mov cmp fsubrl inc pop pop pop jl pop icebp ror cmc inc add cmp cmp pop mov cmp movsl insb jae test shl lea je inc and hlt inc les xchg push and push push jnp out cmp popa mov pop mov fistl mov jl or fs hlt and cmp insl push mov sbb mov push xorb add pop vpaddsw (bad) mov pop fs push scas int and inc cmp clc mov cli int3 jo mov mov mov mov cli scas lret hlt in sbb push inc loop jge adc sub mov sbb stos fwait arpl pop mov hlt pop xor cs in test out mov (bad) lret rcl gs mov incl sbb or (bad) and dec mov test sub (bad) and and cwtl fisttpll mov push bound (bad) add mov psllw gs adc pop xchg aad sub jno aaa push mov mov cmp mov and sbb adc gs int3 jmp or xor out pop dec push pop or or in adc test fstl aas mov pushf addr16 (bad) dec mov insl mov lods mov push mov out dec fxch sbb add cmpsb lods pop lods es jb lahf stos push mov mov or icebp adc or mov mov inc jnp pushw das insl scas je js inc or inc orb sub xor scas sti pop xchg fwait or (bad) sti sub sub outsl jl das imul (bad) in leave out add mov lods movsb jnp or push jg cmp test je adc stos movsb inc mov mov das mov loopne xchg push ljmp mov xor rorl sub sub or xchg push sbb je les mov push es es adc hlt add or stc and xlat fmull insl xor cld cmp call sub pop stos ja les gs push call in and push out shrb mov jne jge jl test shl dec dec and movsb pop mov test mov or push es (bad) and xchg dec scas hlt repnz jbe aas lock std mov es push dec bound popa mov call ret push and notb dec cmp sub leave pop xchg lods dec nop add mov insl jl mov es xchg push xlat imul aas pop (bad) cld sti mov fs shlb lcall adc iret (bad) push insl jno xchg inc dec dec xchg jge movsl xor fcoml jecxz push mov inc cltd dec mov mov outsb enter or rcrb out sbb (bad) rcrb or push or inc sahf sub into mov imul lods outsl pop mov mov cmpsb push bound sub out cmc std pushf shr jg mov insl dec test lcall push pop hlt outsb xchg pop adc ret shl push lret cmpb xchg sbb movsl xchg rcr lret shll and imul sahf mov outsl push and push sub hlt orb imul jo leave movsl dec stos push hlt jb cld push int pop lcall ljmp push push mov popf dec jle lahf pop push sub ret sbbb pop pop xchg dec lret repz mov jl mov stc dec xorl inc (bad) or iret (bad) pusha and cmp repz nop enter mov mov fisubs dec ss in pop push (bad) out insw adc push sub div add fs mov into mov (bad) lret jo lock dec push ja mov pop sbb xchg push int mov out movsl xor inc pop inc dec (bad) dec pop and outsl xchg scas inc pop add and mov inc xchg xor inc scas mov mov dec cmp stos push xchg jno lods out ret jb and push loop xchg pop dec sub out adc arpl push movsb add nop bound js test lret mov les mov pusha call jbe icebp pop dec psrlw mov pop cmc adc xchg xchg (bad) iret negl in xor (bad) inc imul push push jo loop pop insl das pop mov cmpsb icebp adc mov aad sbb xor or ret adc es dec pusha push push loopne adcl hlt roll xchg fs cmp mov (bad) shl and pop imul add rcr fiaddl inc dec jle push jb pop mov test inc dec into fisttps jp add push push js lods sbb jmp or fldl (bad) pop aad in std adc push or imul sub sbb iret push leave lahf rdmsr sub add push inc enter push jp or mov out add and jle sub sbb enter pop ja aaa cmp cmpsl dec lods lcall sbb ja sub sti jge mov push sbb mov mov xor jne outsl pop mov jp jge inc mov iret out es lret movsl jmp jbe std mov out adc or xor adc mov sub les xchg sub loop sub pop arpl jge push aaa (bad) lea cltd std lock (bad) jo data16 cmpb (bad) out add xor ljmp pop mov jbe xchg push test dec dec mov add dec inc scas lea sub dec cmp movsl lret adc mov mov sub inc fldl int3 mov cmpsb lret js and jno ss cmp insl jno sbb aam pop or sub mov dec int3 sbb xchg push xchg lds adc aad mov dec mov add mov stos sub das stos lahf sub int3 insb test cmp pop out clc mov xchg mov das icebp push das jno,pt nop outsl in xchg cmp mov aad mov insl popa mov ret imul add pushf or adc cli mov fnstsw xor cmp pop fdiv or adc mov xchg mov sbb mov arpl or jns inc xor fisubrs xchg jns lret pop fdiv shl cmc mov add into mov lret in cli add fidivl faddp inc add in push xchg loop in mov test and ja sub hlt fmull outsl daa adc in xor rcrb out dec iret inc sbb into or jo sub (bad) inc mov sub fnstenv lods es sub sbb push movsl cmp lods pop aaa pop sbb iretw xchg pushl sub cmpsl test sbb scas adc imul fldcw sub mull mov nop sbb imul out scas pop pop fistl shll loopne repz arpl fs jbe test loopne stos mov lcall int jle mov inc sub sbb xor jno rcrl pop jmp mov mov popl fnsave xor addr16 adc push jge test adc lcall xor lret sbb push add iret stc sub adc push xor push mov push arpl pop push cltd mov mov mov mov pop test fistps dec movsb loop (bad) test mov sub (bad) lods adc push adc mov inc test xor (bad) repz stc add je xlat inc cmpsl scas fs ds xor xor jg int xor sbb mov jns stc mov sbb inc jo push cmc mov jmp lret or (bad) mov jne jl ja fwait jo aad insb xor aaa imul or inc shll cmp add in sbb xchg mov cmpsl lcall inc or jno addr16 adc and inc popa adc imul ja sub mov insb jecxz inc mov mov out xor mov ffreep shr iret jbe adc xor outsl lods sti out in js nop in adcb jae inc test mov xchg in dec mov xor add dec inc scas (bad) pop xchg mov icebp jo loop push loop fwait out jno das and loopne xor les inc xchg arpl jmp jecxz mov popf inc insb inc push roll lods xor sahf mov test jnp test aaa js mov or sbb pop lret (bad) inc jo sub inc and mov call push inc and xor lret jge xor loopne aam lret jmp sbb sub xlat adc xor pop sub jb dec icebp aam fstpl lret push dec arpl cmp xchg push push add (bad) push push pop push push incl sbb sti adc pushf mov xchg movsl mov pop lret stc lea inc (bad) scas push sbb mov aaa movsl adc stc inc (bad) (bad) nop out inc and mov sbb mov jmp imul pop cmpsl test call (bad) test mov cmp and jno xchg test xchg xchg adc cmp xor pop dec aaa push cltd inc mov push lret and mov movsb xchg test jae and insl mov lock insb push add xchg xor or dec pop push xor test addr16 outsl in mov push or in pop test jnp jnp shll push sbb jbe (bad) ret xlat mov and aam mov lret repnz push add sub (bad) push dec pop jbe add (bad) lods cltd inc and xchg add mov or sarb pusha mov shlb outsb adc lock push test push hlt repnz sub nop xor js dec pushw sbb dec pop ror lcall xor sub mov xchg push inc addb repz sub inc ja insl lcall add xchg nop xor outsb ret xor add jo mov mov jge hlt lret push cmp or mov stos pop iret inc pusha push cmp lret stos dec cs or mov ret mov andl xchg fistpll adc cmp and lret cwtl jge or out (bad) or add xor push cwtl adc es loop fbstp fs add mov test out call test mov aaa jno push xor mov pop dec sub push lcall in jns mov shrb jne cmp shll mov sbb stos inc addb adc mov movb test cmpsl sti adc mov sbb xchg mov mov lret sub add inc pusha fwait add je push repnz and adc jns lock lds jae push pop pop icebp dec in ficomps cmc insl or mov cmp pushf sar icebp mov mov je jle ret add icebp test lods lods loope pop inc fistl dec sbb ret push mov dec mov cwtl shr imul mov arpl push rcr cmc cmp mov and cmp stos aaa jne inc scas dec jp pop mov stos or test push aam shrl decb cmc test sub or mov mov outsb loop sbb movsb icebp inc scas inc jno inc dec adc jno lret xchg cwtl in js inc push mov and cmp adc test push lret out xchg ja xchg cmp out mov stos jb push loope pop or mov iret add test push xor add inc js pop repnz add lcall jg ficompl mov popf xor shl iret popl mov sbb iret aam pop cmp push mov sub test in sbb inc shrb test lret je lcall mov jp xor inc inc dec pop lret cmp jecxz cmp xchg pop test jno ficoml xor cmpsl inc dec mov xchg push adc or adc or mov jb in inc addl and adc test pop aaa mov sub sub in sbb or rcrb shrb jmp mov scas inc call mov mov cltd and and add jb icebp jmp (bad) and aaa adc nop mov jno ljmp mov adc push mov xchg mov dec or jmp test nop push or jne xor dec lahf mov iret cmp xchg outsb pop out lods movb lret xor xor and xchg test mov out mov iret mov inc mov rcrl dec xchg mov popf (bad) (bad) sub mov or call lret roll (bad) pop mov jae dec dec inc push sbb divps or jle jmp lds and popa dec xchg mov stos (bad) sub mov mov stos inc arpl xchg andb test mov mov (bad) sub iret jg push sub and ljmp sub xlat adc cmp or xor or adc enter es push xorb sub push je adc push adc pop loopne xlat mov and jo andb and lret xor adc jns mov adc add dec popf cmp mov ror inc xchg lods or mov cmp mov daa mov pop int3 mov test pop adc fnstenv dec sub jle xor inc jno and add push rcl popf inc repz sub sahf (bad) dec and cs push xor push inc pop in cwtl hlt in dec push mov xchg pop xor jae inc pop xor pushf rol lock pop test jb push xor fnop (bad) cltd movsl test js cmpsl mov sbb (bad) lret je inc (bad) lods xchg lock cltd dec inc or add jae imulb movsl call sbb addr16 lods mov xchg or xor lcall test pop push cmp mov repz clc or rorb sub mov cs pop sbb rcrl adc roll dec lahf or mov leave fcmove mov jmp inc ja repz jno pop outsl xlat inc fisubrl dec or lret test mov adc mov push cwtl xchg (bad) push and (bad) mov jnp arpl and testb icebp ds movsb data16 dec mov push dec jae shll lret aad outsl mov adc je lods xor add popf aaa mov xchg aas es xor (bad) lods into pop xchg pop jmp subb push and and insl fmuls mov or fiadds lahf fstps loopne into inc adc outsl xor adc in xchg lahf out sarl jo ss jp fidivl sbb jmp (bad) fisttps lock adc andl (bad) adc ficoms sbb js push int pop es pop sbb push inc pop mov dec lods cli fs xchg pop int sub loope ror xchg icebp push dec lods jo cmpl roll mov fistps jg (bad) (bad) mov sub cmp push out pop dec in adc (bad) or adc rcrb mov xchg cwtl mov faddl scas hlt jmp adc mov out inc pusha add cmp lock popa inc sub sarb add movsb pop rol jge pop push imul sub shll in mov dec loopne dec mov jge stc jo es xor pop mov ja fnsave push out inc sarl lods imul out out mov jo aam mov mov ds pop lea scas out xchg sahf je test clc pop rcrb jmp pop sbb sbb pop sub out adc dec int3 dec push mov movsb xchg and lods add inc adc mull jg mov sbb mov cmp mov adc xchg jp sub or out test (bad) scas rclb stos mov sbb and mov dec lret sub and dec enter rclb shl stos adc mov sti pop and fldenv es add sbb (bad) push ret push je pop es leave test into pop shl add adc sahf mov shl push (bad) xchg cmpsb dec cli mov adc xchg in sub xchg jp lret adc mov dec mov add adc and pop aaa adc adc dec jnp rorb inc mov test mov mov dec adc mov aaa or rorb mov (bad) pop (bad) fbld mov fwait mov seta aaa jae adc dec mov sub or mov or pop or or dec xor add jo js cs or inc mov dec xchg xor aas lock fwait cld fmull test push mov cmp lret pop ffreep (bad) imul xor push mov in xor popa mov mov fldl out ja jo repz jnp fs test insb out lret or loopne inc es jmp pop mov cmp adc insb inc adc les jg pop cwtl data16 add jo leave add fmull mov pusha shll lods loop inc pop pop pop pop imul out mov cmp aas dec pusha js test mov mull pop in testb jge fwait in mov out ret lods xor adc fistl mov lret je in je aad sbb cmpsl sub mov jmp push dec dec ja mov and push ds sbb mov (bad) aaa cli mov jae cwtl inc pop jno ss adc es xchg lret xchg fs mov sub push sti mov ret xchg fwait aaa sbb dec xchg pop xchg int3 jno mov (bad) jne movsl lret jno sbb xchg cmp les fstpt outsl xchg aad scas lret (bad) fdivr mov leave jo (bad) imulb (bad) daa inc out fadds stos sbb sbb xor ja rorl add sahf lea lret (bad) jb aad inc cmovb stos xchg xchg dec xchg fwait ja mov pusha in push push icebp or sub test mov daa sub push jbe leave popf adc inc ds xor lret stc fwait je test lret das jl xchg mov jmp push les aas mov jne inc pop adc sti mov cwtl mov mov mov lret cwtl js fdivrs xchg icebp mov lock popf xor jae (bad) sbb nop popl lea push mov mov or faddp or movsl mov xchg jo aas sub cmp enter sbb ss cs stc into stos mov cli shr add pop repnz push clc inc je lods xor in aaa arpl xlat push or mov push cmpsb cmp or pop sti int or mov add pop xor in test xor sub mov movsb sub mov lods inc test adc lods rclb xor insl inc sbb cmp in jp in add pop sbb in xor dec jmp pop mov stos mov inc cmp dec cmpsb cltd rol addr16 push inc cli out sahf icebp cltd sbb enter mov pop xchg push mov xchg jmp negb inc popa cmpsb jl clc dec ds cld inc add inc jp (bad) push fbstp jecxz cmp push in sub mov pop fdivr xchg loopne mov scas push pop mov or ss lret xor fisttps iret sub dec add iret cmpsl sub mov imul adc loope fstps cmpsl fstps mov lret jns scas push (bad) adc add xor sbb ja xchg repz loop dec jp testb xor cli test cmp arpl mov sbb adc ret dec pop mov je or fs xor cmp sbb sbb xchg mov sbb iret cwtl stc roll out push pop xor mov jp mov call ja push cmp pusha and sub cmc lock dec jmp push dec mov or fwait test jle or push mov loop stos mov or (bad) pop mov out or shlb and cltd ja lods xchg ret hlt mov dec lret pop mov mov ljmp mov (bad) push mov call (bad) jle jl jmp in ja pop lock iret loopne pusha mov sbb cmp push mov cltd push aad mov rolb add sbb mov ret gs and clc aaa xor push adc sbb lods xchg outsl xorb jge push adc les push mov ljmp das (bad) pusha es sti pop je jnp and lods inc shll lret xor inc dec inc out pop pop dec push int3 popf jo je shll mov adc jae jmp int3 pusha je pushf inc xor negl in es sahf adc fcmovu sbb mov into pop push insl jl adc gs test and into lock lret mov mov jae add xchg mov loopne (bad) dec mov fistps mov jmp dec incb add int fs pop outsl sbb in jo inc inc sbb jp movsl push push mov ret mov adc push inc xor and movsl cltd lds cmp jmp xor cmp (bad) mov mov popf mov into lds inc and inc pop lret xlat outsb ret inc dec mov adc scas add mov stos (bad) ficoml imul mov icebp xlat icebp je or movl inc popf out mov es add test (bad) or cmp aad push out add xchg enter lods dec (bad) and ss mov jecxz adc clc sbb je shrb mov sub lods sahf push lret aas and push rcrb or push (bad) push andb mov movsl and pop aad sbbb dec or sbb mov mov lock push mov push test out and cmpsb add aaa push cltd push mov mov jge divl jne ss out test jecxz fisubrl mov icebp pop and insl xor xor lret jo pusha mov xor mov sbb ljmp jl imul movsb sbb cwtl inc jo jno pusha int3 xor stos pop sub cwtl or lret push aas inc mov jne sub push hlt mov push je das cmpsb sub leave mov dec clc lds pop test shlb pop aas adc jmp cwtl xchg xor (bad) xor push mov mov jl xchg push pop idivb lea les cmp mov dec fbstp daa in in shlb clc aam xchg loop (bad) in vprotw in dec sub pop ror data16 ljmp xor lods lock jecxz push je aas adc data16 loope fs cld push arpl xchg and inc fiadds or mov cmp fsubrl les lcall add add sti and pop mov daa mov lods mov dec mov xor pop (bad) stos or add or out pop or test clc sbb clc xchg xchg loopne sbb lretw jbe sbb dec les cmpsb rorl int push fwait or pop in push aad inc inc fs dec fbstp daa xor sahf jae adc mov xor mov es data16 xor (bad) je mov sbb xchg or cmp add ja enter and dec sarb mov movq xchg add sbbb int adc int3 in clc xor xorb jecxz test sub add cmp or mov jo roll addr16 sbb jmp sbb mov lret je loop (bad) ficomps les lahf mov xor pop add mov cmpsl jnp xor mov xor mov stos push dec mov xor lcall sub or pusha rcll xor mov ret xor hlt mov mov scas testb cmpsb mov pop jecxz mov lret pop mov jne push call das out mov push sbb femms push insl xchg lock leave iret adc pop adc jo (bad) mov (bad) adc ja adc mov jo pop dec adc push cmp loop rolb fiadds daa mov xor jae xlat aad in stos je (bad) fsubl mov pushl mov or fwait sub pop inc cld lods imull negb stos pushf jae mov jae cmpsb es xor cwtl cwtl and mov es pop sahf dec fcoml testl fildll sub mov xchg cmp add test inc (bad) sub in cmp jl dec addl push dec inc inc test loop aam inc jbe jge insl ret into fbstp ja xchg popf lret les (bad) (bad) sbb or mov xchg sbb pop ja adc cs scas jns push (bad) iret jmp cmp stos imul push adc push aad int cmpsb or adc mov push sub mov mov (bad) jno xchg mov jl mov push xchg xor je add sub dec lock xor addb cmp scas stos data16 int3 lea mov out push shll std adc push pop inc xorl sbb xchg jb mov inc sub pop sbbb mov aaa pop sti fwait dec in dec es hlt jmp lret cmp dec inc sub mov test dec fmul lds pop sbb enter lods cmp mov xchg adc es xor cld (bad) sbb test sbb rorl inc mov and jbe mov fcmovb jecxz daa xor lret mov mov inc fs in mov arpl sbb jge lcall cmp fwait (bad) imull mull lcallw imul jbe adc add hlt sub add inc or aas xlat jb xor xor out adc push lods (bad) out xorb inc sbb je rcll arpl sbb lret pop xor sbb shlb pop mov adc jl and mov pop in jmp cmp test lea shr popa and fwait mov jmp je push lcall repnz adcl xor mov adc adc (bad) ljmp pusha loop mov or xchg in stos cmp inc aam out jne ret pop loope or pop test test pushl or sub mov out push inc mov ret push mov push test scas aaa xchg and test inc stos push cltd mov bound push pop cmc outsl sub mov sub movsb (bad) (bad) lahf jmp xchg add xorb aaa bound cmp std adc gs sub aas dec sbb ret pop adc sub cmp arpl jb sub fsts mov and xor pop icebp fs pop sub rcl hlt jo fld (bad) mov cmp mov push pop lea cmp es enter (bad) and cltd in lret adc es lret cmp pop addb shl mov ljmp mov test adc int imul je daa add stos call lret mov fwait in push mov clc mov scas mov inc dec rcll cmp jmp je xor sub and (bad) movsl mov nop das repz loop testl xlat dec jl lock or inc sbbl mov add cmp mov inc ljmp xchg out test xchg xchg orl or sub imull inc iret or call lret daa pop or repnz (bad) jb push push call out mov out inc dec mov sbb addr16 nop add pop out sub lock js insb dec sub xchg aad enter jbe movsl or out test mov cmp sbb jns or push xchg clc mov std push cmp mov dec and mov stos push mov ja int dec cmp pop pop ret aas bound sub adc dec notb push xor mov shrb pop (bad) shrl test lahf mov jecxz pop fs cmp sbb movsb out enter lock cltd inc (bad) popf lds shrl ror push pop push adc push xchg neg sub sarl aas cmp outsb xchg test lods jno jl ljmp jmp xor add jne inc and shrb cmp lock sbb sub icebp or outsw rorb gs cmp fs sbb push psllq or cli repnz bound or push cmp inc fiaddl sub (bad) mov sbb pushf jno sahf pop dec scas or int3 hlt aad push cwtl or push push test adc sbb shrb add mov mov ja scas push outsl mov xchg jbe push das add lds out arpl mov arpl cmpsl (bad) sahf adc loop (bad) pushl add test inc pushf (bad) icebp in js jp and adc lods cmp insb and pusha xor and test fwait out mov ljmp cmp lods icebp aaa push add inc sub div cmc repz movsl jnp mov stc add mov xor lock mov mov mov mov dec cmc fwait inc push inc push imul mov daa cmp xchg fistps enter lock lcall test xor test sub xchg sbb add fisubl adcl nop fimull lret jbe fcomps sub call aad iret in xchg int3 pop fwait dec mov sub test addr16 mov out test jge in fisttpl mov xlat mov movb test add lods cmp and gs cmp je lret mov pop and sbb mov xchg andl xor aam aaa clc xchg pop inc in add push sub add cmpsb mov lds je repz fdivr sub notl sub xor jne std dec insb dec jnp inc std cwtl scas and gs mov out std push sub (bad) fsubrs leave fstps mov and cmpsl xchg push pop popf test ds adc aad push xor stos cmp stos add push insb imull jbe cmp das push cmp popa or adc jg mov adc push inc pop sbbl inc mov or aaa jp shl dec jb pop outsl mov jo cmp sbbb push sub repnz lds test pushl lahf xchg stos (bad) sbb jne pop ja aas nop repnz sub lcall sub pop pop or xchg add in jns or movb push xlat shll adc mov (bad) shr into mov cmpsl out push fnstenv sub push sub bound dec test loopne inc and aad shrl shll adc sub push es mov xchg push aaa push data16 (bad) stc cmp sar fs jae fisubl pop jae mov dec adc mov data16 pop stc (bad) icebp xchg pop cmp (bad) ljmp popl les xchg xor inc rcrl mov push cmp notl out jae aam ja push cmp rorl aaa mov addr16 or repz cmp jno sub mov icebp pop add sub stos and xchg aam pop push out lods mov or dec pop inc orb xlat decb stos sti jl fldenv nop jns iret out data16 neg inc xor jp rcll push xchg xor dec shrb inc pop and adc jbe sub clc dec or adc lret sahf roll cmpsl xchg push aas and cmp mov (bad) add xchg add dec xor sub shll rorl mov clc out in dec test in sub xor shlb and in out outsb push xor mov dec sbb mov sbb out iret ret push lock mov mov mov test push cmp imull nop aaa mov jmp inc dec cmp roll (bad) outsl mov std add stos pshufw xchg popa (bad) xlat sbb mov mov mov mov mov cmc adc into nop add adc pop mov mov jb xor push or mov lret rcll loope in pop lahf icebp lret pushf cmp dec jmp ss sub out inc push xchg out je mov dec (bad) xor mov lret pop sub lods bound mov sub xor ror or and les out inc in ss idivl sahf xchg xchg out pop test pop mov or mov test test add inc and jo or in dec sti mov adc push test mull jno mov andl dec xlat mov pop sahf cmp test fs jb in jmp in stos xchg sbb je jns or push dec fbstp lcall adc aad jne cwtl lock cs adc arpl fs gs leave push fdivs and mov dec xchg shll icebp jle xor fs jmp jnp test in inc jle push lret jne cmp push sbb or lods aaa pop inc repnz xor lea mov mov imul cltd lds shll rclb sub mov movsl jae sbb pusha pop test rorb adc in mov mov xchg or xorb dec dec pop and or test jb dec rclb cmp jno aaa pop xor cmp dec jae xchg and xchg divb or sbb movsl push movl hlt or nop and lods out mov shl xor stc inc hlt inc add push shrb cli lea cs dec jae lock lods jecxz mov adc scas and nop push in ja aaa jmp mov loop (bad) aad mov jp js inc lock push aam addb sbbb jae hlt mov cmpsb lds jbe xchg nop mov ficoml (bad) push in xor push sub (bad) data16 lret xor je cwtl repz xchg shll stos or sbb or push popf dec push cmp lret cmp sub push and xchg rolb jg inc add sbbb mov push inc mov jbe pop movsl mov ret fists lret insb shl jmp mov filds cmpsb in fnstsw in mov or (bad) fisubrl inc push fs mov (bad) bound sar shrl inc in in scas fwait test push push push test inc mov cld pop cmp pop popa popa pop adc cmpsl std fisubrl mov repnz lods (bad) incl xchg leave mov add sub pop lea sbb daa pop xchg xorl iret (bad) ja mov sbb movsl adc jbe add les ja add push push les push insb jbe and or jb call fiaddl inc pop popf rcl adc xor or cmpsl mov xchg cmpsl sahf push xor add insl push push xchg add fldl cmpsl loop pop (bad) out popf xchg ret xchg or addr16 cltd and roll and sbb shlb xchg jmp sbb call sbbb mov push jb pop cmp jl inc pop pop and inc jno jg xchg shl shl push fs int cld cmp mov xchg or shl jo idivb test push aaa ja fs add dec mov test (bad) int loop incb adc or push stos sub or test mov sbb adc push aaa mov ret fbstp sub pushf dec dec or ret fmulp mov incl gs or pop xor mov aaa sub lret sub mov xor adc fwait cmp add pop or xor je push fstpl xor push xchg jmp test adc aas or outsb xchg push jnp cli lock enter lahf sbb lcall roll xor sbb pop sub pop pop stc je daa or cwtl jne cltd outsl sbb or scas aam je pop xchg cli scas arpl mov lret adc pop (bad) pushf mov movsb int in out fnstenv pop xchg imul mov pop jmp lea push popa bound add lret or insl aaa (bad) icebp sbb icebp lret xor decb pop imul xor xlat xor xor mov out in lret jne out andb mov jp ret cwtl or outsl cmc lcall shll pop icebp mov fld stc cmp das adc jbe mov mov add sbb lcall movsb imul mov fmull (bad) fnstsw cmc inc in mov sbb popf xor inc call mov rorl je mov aaa dec test out aad inc and mov adc jp xlat iret (bad) sar inc xor cwtl push push (bad) aaa adc (bad) loopne clc adc icebp das daa xor stc jmp int3 outsb movsb pop movsb adc je cmc negb loope popa lahf jg cmp std push das scas sub and sbb push mov rcrb dec jno mov pusha insb inc dec aad inc lahf mov pop (bad) adc or out sub xor fcomi sarl rclb cs jecxz push into push pop not push mov mov or mov xchg es jo stos push (bad) lahf gs sub xor sub pop cs rcl pop adc add pop jl lret sub and mov push jae cmpb fidivs stos cmpl in je xchg xchg lcall xor or lods in adc or enter loop imul dec add cmp fstps mov push pop (bad) stos push imul lds push or pop shll inc xor adc and push test adc mov cmp cmc scas pusha dec push imul push test cmp sahf xchg adc (bad) mov jno xlat mov imul pop xchg repz sarl sar cmp movsl mov in xor movsb daa push inc push rcl inc stos test scas cmp mov sbb add pop cwtl pop icebp rorl hlt sarl push and and jae xchg xchg push ret cld jg jb iret test dec out mov fisubrl popa sub push dec leave dec lds sub popa icebp std test in out jp rorb mov dec call pop sub cs jo mov shrb data16 sbb jp icebp lods mov cmp enter js sub sub stos out popa push push mov mov mov or int3 sbb cwtl std xor lods lock stos insl inc sahf mov sbb adc fucomi inc pop hlt push in mov or js scas hlt les inc insb inc lcall stos icebp mov and lret push sbb xchg inc nop fwait and pop mulb inc test pop pop lret xlat mov jmp pop imul cli les popa test ljmp pusha addl rcl xchg mov or je inc and cmp or test rcll adc inc jne cmp adc (bad) or loopne in adc stos cltd icebp in sti push fidivrs push je mov cmp pop jno dec inc sarl fsubl pop xor fwait cmp pusha shrl loope sub jno add mov shrb cli out and stos cmp xor jge (bad) push (bad) je ret (bad) in rcr or pop gs test pushf sub ds inc ljmp icebp fdivr sti or or loope mov call or add push lods in cmp adc adc rolb pop cltd mov dec mov std or adcl dec jo insb xchg mov pop push sbb (bad) mov lret fs lret or inc mov (bad) ret mov xor std mov enter and xchg mov mov nop pushf push dec shl xlat and hlt cmp loopne push cmc add or subb or push or adc das or shll mov in sbb xor ljmp cmpsl cli lret adc jno xor in mov es push ret test (bad) or push test pop inc in sbb (bad) adc fwait inc (bad) cmc sahf je out sbb jno mov (bad) jbe jb mov mov sub fcmovne mov lret push add push xor ret push xor add imul rcrb loop sub jle mov mov add rcrb pop adc (bad) mulb or dec push mov insl pop cmp sub cmpsl push les sbb pop jbe and test js mov adc add decb push fwait inc mov test pushf prefetch cmpsb mov cmpsl sub push mov imull es xor lahf lahf add out (bad) fidivl mov xchg and adc pop push push mov lret rorl mov pushf rcrl jecxz popf jg fimull rorl dec dec bound mov jb sbb push ljmp out xchg sbb lds adc xlat clc addb cld arpl jmp cmpl add in inc ret aaa mov shlb leave add cmp dec cmp rorb idivb cmp jno fldenv jmp clc dec dec mov loopne fucomp pop mov jae mov fcmovnu xchg pop mov jge js push lcall inc lea push fs push pop mov and add insl mov mov out or (bad) xchg mov mov dec orb (bad) cmp ljmp ja cmp or mov je xlat xchg xchg iret movsl out jg popf nop test int push pop ja fidivrs test jmp adc fimuls pop rcrb pop jbe dec int3 sahf pop and mov dec jo xchg ret mov mov inc pop pop stos xchg es mov and sbb mov out rorb testb sbb sbb mov sbb mov mov fidivl inc or mov dec aaa mov es fwait pop repnz test sbb lea jno push jmp inc imulb or pop xchg pop cmp enter es add jp jle mov jge popf jne ja lds sar cwtl jbe push push aam lods xor pop iret mov mov and sbb mov jecxz (bad) cmc mov pop mov sbb fsub mov gs push repnz data16 mov (bad) pop xchg or mov mov lds xchg int3 mov adc rcl xor (bad) push push or add push xchg and das push (bad) idivb pop shll scas bound mov roll inc lock sub sub jnp pop movsb dec (bad) fwait xchg push mov jne (bad) dec cmp je dec andl rcr rolb pushf or dec ds push mov cmc aad movl fwait xchg lahf into test dec pop sarl or push test aaa push mov xor ret and vprotq negb or jo das inc in mov insb lds mov mov rclb shrb scas std outsb test jl jbe pop jge jnp mov cmpl (bad) fwait pop xchg popa jo xchg inc dec (bad) in push cmc mov mov mov add or push or fwait lods push data16 lds cmp xchg cs and jb adc je inc inc mov inc sub ror mov sub xor mov jns sbb loopne push shl sbb mov mov lcall ja fwait sbb and into scas adc mov cs push fdiv rorl mov sti pop xor sbb fs adc outsl jecxz sti inc in mov enter sbb aad adc cmp and push outsl cltd rclb push outsl mov movsb ja mov mov mov cmp push sarb xor xchg dec imul mov jae jnp testb je push lea sbb add mov jp mov bound idivl stos push add mov mov mov lret dec in adc fcomps jmp cmp dec out dec mov xor mov jnp mov imul xor push scas xor mov je jp test and pop insb xor outsl xchg dec add (bad) push scas xor or dec xor push mov or and fs bound lods loopnew adc mov pusha sbb push cmp mov jl pop sahf cmc and out (bad) idivb jno call les test push push negb fcoms cltd lea pop fimuls test pop pop pop stos add xorb movsl sbb push pop xchg jmp mov (bad) pop mov cmp sub xlat push jecxz iret cmp xor cmp das (bad) jo add inc and imul cmp push jb addr16 hlt mov jge dec (bad) iret jno mov xor pop pusha dec dec ljmp repz push jbe test movsb sub popf in pushf sarb (bad) push and cmp xchg les addl push popa and pop add repnz add sub decb orb and les int3 xor stos push jno push adc mov jnp imul std inc xor mov rcr mov (bad) je fwait xor add cmp jae jge in mov test jge clc dec cltd pop lahf sub jmp insb fdivl adc mov push stos in scas dec das (bad) movsl or aas inc into inc (bad) xor jle jecxz sub sub out stos adc dec jb mov loopne stos cmp mov mov jnp lcall xor daa sbb shl stos mov lret shll xorl jo jge pop (bad) (bad) dec sub or push pop leave mov sahf sbb hlt je jno cltd gs or add inc lret test pop shl dec xor mov ret dec mov mov stos sub (bad) aad imul dec xchg aas sub ss repnz rorb rclb das addr16 adc xor inc mov in lret push jnp and jmp jb lret push xchg fimuls jnp outsl inc data16 push jno push mov sti jo jge mov rcrb adc mov xchg adc xchg lods add pop mov (bad) mov pop arpl xchg or pop xorl lock cmc inc pop es xchg fcmovb adc lock aam lret fcmovnb push leave rcll int3 or lea es stc shl aam pop (bad) aaa lods fists pop in icebp mov and inc int3 out push imul test (bad) popf out dec test data16 aam sub xor mov xchg popa stos arpl lods push xor aad shlb add add hlt mov jg mov cmc and out xchg mov add shlb inc in nop lret cvtdq2ps test dec add outsl cmp inc mov ficoms xor pop xor xchg mov xlat push out jge out or sahf mov xor xor pop scas arpl sbb mov pop fldenv xchg lock bound fldl (bad) shl inc or ror clc or out rolb (bad) mov and add dec mov repnz dec mov sarl gs into scas fmuls lret fs mov je shlb add notb bound and adc sbb popf sub out ds notl adc imul push sub inc (bad) int3 sub cmp xor scas xchg cmp aad push ja push sub rcl and pop mov jbe sarl cmp (bad) xchg daa and out popf mov (bad) fsubs rorl sub jge gs and xor dec fwait jne (bad) sub ds cmp je or loopne gs sbb fcomps movsb jge pop or shrl or sub xor data16 out push push ja adc test pop divb gs dec outsl adc shlb push lock ss inc inc jno test mov mov loope scas sub pop mov lret and mov aad stos cmp pop adc and sahf idivb mov lods and sub xchg (bad) lock je jl cwtl popf frstor ja xor ds cs or arpl jecxz ret into or jbe in mov mov hlt in je and mov insl in arpl fiaddl sbb xlat adc repz lret lahf loop add add insb xor mull push mov aaa cmpsb in mov mov in out inc pop and je xor lea fdivs mov insl mov xor fs aad aaa add and dec int popf outsb xor popa lahf jg ss sub mov stos fisubrl jno cwtl mov cmp ja or cmpb jp movsb cld push mov mov push negl add ret xor cwtl arpl sbb cmp jg,pt (bad) scas shr scas jnp sub repz push js jnp sar and sbb bound pop pop das xor cmc stc push into mov jp lea ret jmp inc sarb mov sarl add outsl sub popa rcrb je pop inc add int or fdiv jb popf pop push xorb enter dec iret enter jne mov fisubl push push xor div sahf (bad) xor ljmp jge inc inc xchg ret jo fcmovu xchg pusha mov dec das xor fbstp loop imul push stos and lods aad push push arpl fistps arpl sbb loopne mov inc lret or test xorb mov push rclb or out mov mov dec push lock mov jb lods (bad) movsl jns add jo xchg add lods call xor sub lret mov mov xorl xchg mov bound sub add mov mov or xor loope cmp notl dec xchg cmp xor js fisttps lahf push mov mov lret and inc pushl xchg push (bad) push ja or pop stos test movsl lock int into data16 sub or add and lret push data16 sbb dec in and add aam pusha xchg and push gs jnp push cmp (bad) xor rolb dec cmp jae jo push jg mov jecxz lahf notb mov or imul ja mov adc adc xchg cmpsb mov test mov lahf aad sbb cmpsb pcmpeqb pop std pop mov into sbb cmpsb scas test iret mov cmpsb aaa cmpsb mov pop push add and mov pushf or in cmpsb jp lret mov jbe or sahf into push inc (bad) divb push xchg out sbb call lret lahf insl inc loopne pushf mov aaa xchg xchg xchg mov push lds mov sbb test adc rclb movsl and ja fwait sub jo lcall sbb mov je add (bad) xor or frstor jno aad in sbb lea xor add aaa arpl jp push cwtl int3 xchg aaa scas pop fxtract xchg ljmp or inc fnstsw negb pop addl sub lcall and aas (bad) mov sub adc mov or cmpsl ljmp push test jb mov add push andl aaa push sbb mov outsl jl (bad) daa je xchg xor mov ja and jbe or mov sub inc xchg adc jo dec out xchg push mov sbb ret mov in pop out mov xor outsl out mov sbb repz sbb push jnp addr16 push xchg inc mov adc add and cmp pop imul mov pop jge mov testb je dec loope loop and imul dec inc pop jbe push jecxz inc cmp loopne push jg ret adc loope xchg pop mov or sub je sub dec mov je xor jb add scas std push bound mov jmp les xchg cmpsl data16 das lds pop (bad) xor mov icebp in fistps out std jnp cltd sbb loopne pop pop subb pop pop jno ja pop xor adc dec xchg lret push cmp roll ret xchg test xor mov xlat dec enter (bad) fcoms aas inc test xchg inc pop inc jns test ss cmp lock sahf mov das inc cld sbbl int3 and mov mov (bad) js in mov add in mov loopne sub test xchg cmc cmp inc loope test fs and cmpsb mov dec aad push dec xlat add imul pop les jg (bad) lock mov repnz xchg cmpsb add out in cli popa scas or int3 loopne fildl dec sbb dec dec sub adc outsb or aam mov xchg push sbb loopne iret lds rcll nop mov int3 cmc fwait loopne (bad) jo fwait pop je add lock ja testb lahf xchg imul pop out lock push cltd inc test sub loopne faddl jbe pop pop xor xchg enter xor sbb push xor bound dec pop repnz adc int cmpsb inc outsl and mov pop inc daa aaa pop stc push xchg repnz dec rcll enter dec outsb mov cltd cmpl mov outsl outsl lahf out sbb xchg sub aas rcll mov xor lds add lret cmc xor std and push lret push xchg adc divb das dec test or adc mov dec lea scas mov data16 sahf sub or and pop and xchg or ficompl sarb dec xchg dec mov inc adc mov sti ret push and adcl loop adc fnstsw in mov mov sbb fs pop dec inc lret jno test ror stos test dec sbb cmp and fs push push xchg dec xor mov ljmp mov or and pushf (bad) lods xchg and out ljmp add ficomps sti daa call or push jmp adc mov andl cmp mov sub xor xor xor or push cmp and jle sbb jb push push pop shlb cmc xor add stos ja dec sub insb jo xchg test ret sub stc insl lea aad and sbb pop adc in xorb lret pop sub xchg idivb sti push aad arpl (bad) ret jmp and sbb xchg push das (bad) mov jl xchg push mov bound pop push das ret mov push pop cmpsb adc clc push adc push jo mov mov imul pop sbb xor pop iret in jb cltd adc das (bad) aad scas pop popf lcall dec mov pusha ficompl sbb (bad) out xchg mov and inc or imul push test pop inc loop scas jle and pushf (bad) leave mov in push mov mov mov inc dec and push fiadds ja ja mov lret jg addr16 enter sub stc stos sub fs cmp mov xchg mov subb push sub shlb lret ja xchg stos rcll lds dec xchg dec scas popf jl popl out int or ljmp sbb and sbb and clc (bad) js xchg mov jne cltd stos (bad) lods clc jp out in cmc sbb xorb jns xor xor cmp es cld sub fcomi fs xchg scas or adc and cli stos lea iret (bad) cmp push add rolb (bad) popf dec cmc adc mov test mov fwait and xchg cld test loopew rorl dec gs push pushl push arpl pop mov rorl sub je cltd inc jge dec adc mov and inc popf mov push and xchg imul js jl addr16 fcoml out pop dec (bad) mov mov pop int in out pushf insl mov pop xor in addr16 lods or nop lcall stos push mov dec sbb xchg sub test daa movsl xchg push inc fidivrs arpl adc jl cmp pop and mov sbb cwtl int3 cmp fisttps mov sbb add jl jnp test dec push jmp mov add add pushf sbb aad scas cmp push sbb inc adc pop cmc add cwtl inc gs mov lcall inc xlat in jae sub xor jno jg idiv shll repnz test dec xchg xor and (bad) jg ret or outsl aaa xchg popa in in push imul pop inc sarl pop pop out push push xor insb call xchg add cmp es xchg xor mov stos fdivl addr16 je pusha fnsave jnp pop add iret xchg mov sbb repnz xor loop loope das push push mov inc or loopne or pop loop push sbb mov mov mov cmpb cmp popw pop mov and inc xchg stc scas cmpsb inc add jae xor mov cld sbb out inc imul fbld ja dec ret loope fstpl push pop out sub or pop dec ja xchg xor dec into das pop repnz loop rcrl mov adc ret and and sbbl mov test (bad) sub xor into adc xchg arpl xor mov xor ret jns notl sub mov lea jge test mov stos xchg add mov jne es fwait and push cwtl cmpsl push add mov stc gs push je pop pop aam xor adc lcall loope pop xchg or aad cmp in bound xchg fdivrl lock out push shrl lods dec fidivl mov mov shrl sbbb je dec add sbb push fnstenv arpl push (bad) cmp das scas inc fldt mov dec pop adc push mov loop loopne jae aas icebp xchg push sbb push notl ret jbe ret jle inc mov in (bad) out in jno xor sbb mov sbb push cs dec je cmc mov sub sub pop inc mov fildl aaa or or test lret lcall push dec bound outsb pushf dec mov je dec decl jnp sarb icebp aam shl adc dec inc jg mov xchg jmp lret dec cmpl pop (bad) test xchg cltd cmc ss mov sbb imul loop shl add adc ljmp loope sbb lea enter push cmp xor push cmp es mov rol or xchg cltd inc test cwtl and push jo sbb push or push pushf mov movsb pop out adc loop and and adc or xor outsl lret (bad) idivl pop mov jne out cmpsb inc mov xor sub inc jo mov mov out (bad) jb orl icebp pop dec jbe mov push arpl clc fnsave sbb pop xchg js cmp or cmp movsb (bad) xchg fwait call pminub scas movsl enter rcrl add pop lds sti (bad) jmp div mov sbb and test mov adc xor paddd cmp lahf ljmp jecxz lods push xor jg sub adc mov out outsb ja add sbb ja inc cltd adc loopne (bad) lcall pop jge xchg sbb pop dec lcall xor (bad) out iret inc inc dec test cli lods aas add or cmp push mov std shl and xor inc and mov pop pop sbb sub mov sub ljmp lcall mov in xlat inc rcrb enter sbb (bad) ja add inc cmc lret inc lret cmp jecxz add repnz and dec mov mov mov jno dec or je or dec mov mov and es xor daa (bad) mov les pop rol xchg in call fwait mov add hlt pop or loope xor mov or orl and pop sbbl cli push cltd jne inc in mov ds ja sub sbbl adc lds adc je mov jo bound xor xlat adc enter rorb out mov jl ret jns pusha in les fwait gs (bad) repnz (bad) rolb mov cmpsl data16 and loope xor (bad) adc popa and scas sbb mov pop clc add bswap pop push xchg cmpsl cltd dec es cmc fs jl out inc or icebp jge arpl and into push int ret pop push mov or push in sbb push mov and mov test jno test mov inc push loop mov push jmp pusha mov sbb (bad) xchg xor xor adc cmpb ficompl dec pop sub in lock or movsb jno jo in lret out lcall loopne mov xor cwtl mov fisubrl jg pop and inc sbb loopne mov arpl je pop add scas inc aas jo push jge shll into and jmp sbb push pop mov test pop out add rcrl adc cltd or cwtl inc sbb loop inc sub push (bad) (bad) rorb (bad) cmpsl push mov repnz dec fcoml out or insb mov neg scas xchg and cwtl cmpsl pusha cmc xorl mov xchg (bad) jo cmp jno daa mov pop idivb xor sbb mov and push jo mov jge (bad) (bad) ja push add adc popf push pop xchg test xchg lcall es addr16 inc adc lret push inc inc insl (bad) adc out divb cmp data16 jb jbe xchg orb add xchg mov push pop (bad) sarb cmp lods xchg stos sbb push repnz test dec scas push jno sub adc fs cmc and fyl2xp1 xor (bad) jge jne and loop mov xchg mov ror add sahf sbb adc lret sbb hlt movsl xchg mov stos lods inc cmp (bad) push scas shrl push push out cmp inc mov pop cltd inc test xorb or imul movsl and js (bad) jge inc fs in sbb push ret adc mov pop push add ja sti mov dec add pop loope rcll add dec in test xor arpl xchg or dec ret lret pop hlt mov les and dec push mov jno fsubr iret mov and out out xchg adc and push sub (bad) mov divl test xor push xor push dec mov push fwait adc sbb xor nop cmp dec pop repz daa xor pop push cwtl push add loop jns adc adc scas jae fidivrl in jmp test clc cmpsb mov or dec xor les call jnp arpl sbb cmp pop or shll pop lea pop pop xor std jbe ret push jno jl mov pushf fisubrl inc sbb or mov clc (bad) clc mov sbb push aam adc fldenv jbe jae pusha push adc rcrl ja loopne xchg sahf xchg popf andl loopne (bad) fwait pusha jle inc (bad) and sbb mov pop fisubl inc out test xchg jle dec movsb fwait inc aam shlb outsl sarb lahf in loop imul rcll xchg xor add push cmpsl loop rclb pop and shll xchg es jae aaa push lcall jle jge ljmp dec push sub out cmpsb inc cltd sbb xor repnz jno (bad) sbb cli call dec or lock adc cmp stos xor push mov adc sbb xchg es push cwtl jno inc xor sbb jno test pop jmp arpl (bad) or mov addr16 cltd sbb mov sbb dec hlt leave out push cli mov xchg test loop cmc adc popl pop fadd jl dec stos iret nop lods mov enter dec pop sbb mov stos jae xchg mov repz ret xor ret mov popf rorb mov test enter xor push test rolb mov xchg repz dec pop sbb loopne int3 out add sub xchg cs fimuls mov sbb popf mov and hlt inc jb push cs jbe negb push loopne inc sbbb pusha cmp movsb jno mov (bad) rcl jle ror push inc sbb or sarb or (bad) rclb iret push sub ret (bad) cmp xchg dec add repnz mov stc adc xor call pop daa cmpsl inc imul pop mov jno inc mov inc cli and aaa imul mov mov jle fincstp sub dec je popa cmpsl addr16 inc rcl pop mov add or sub adc aaa popf add and scas addb mov mov push test mov or mov adc cmp xchg jnp negb js jno add sub and mov pop shll (bad) sbb adc (bad) imul insb xor cmpsl imul pop sub and rorl mov test imul push fs xor xor scas push (bad) scas mov xor ret ja jno or gs aas outsl pop cmp adc pop lock pop imul pop lock mov mov mov loop inc int3 ror cmp stc mov mov inc in add int push jnp mov add fs (bad) cmp lods lret xlat jno shll insb xor arpl js testb imul xchg or pop fmull outsb jge and scas mov lret inc inc push (bad) pop and xchg hlt push daa outsb repnz shl sbb jb cmp mov lret pushf icebp fmuls insb lds xorb and dec jle cmpsl mov add cmpsl or mov sbb cmp jge xor in scas lret jae jp bound sbb stos add mov sbb dec cmc xor jle les popf outsb jne stos in mov les scas scas (bad) adc xor inc fistps inc xor push cmc je and arpl pop lret nop je inc aad xchg sahf cli or cmp cmp daa movsl dec mov inc and (bad) mov jne ret or out cmc in sahf fwait (bad) fsts xor dec jnp inc xor xchg pop adc (bad) hlt jmp scas cmc add out test sbb fildl xchg clc mov (bad) (bad) out xchg outsl jae movsb jno rcrb into or add xchg (bad) dec pop pop sbb (bad) fwait mov fsubp out pop shl (bad) or pop or push mov add inc adc and add push xor fucomi rcrl inc test dec hlt cwtl add icebp push xor loop mov mov out or inc add jno pop xchg cmp vshufps or mov pop rclb adc push cmpsl pop shll xor push mov pop stos je test test or fwait push push in sub or xor cmp fisttps outsb stos lret sub je or jge jno cld arpl test ljmp (bad) pop xor dec andl add iret cltd cmpsb inc cmpsl jg xchg lock ret sub xchg add pop cmp lcall add push je addr16 icebp cmp adc mov mov testb popa repnz mov test stos rcl cmp data16 push mov or es jbe mov lret pop mov add data16 daa data16 inc push mov rcrl es cmp mov lret pop mov add data16 data16 xchg push mov jl es sahf pop mov lret pop mov push xchg push cmp je das and or es sub ret lret pop mov and push xchg data16 push ja pop shlb ret lret pop mov or inc xchg data16 aam mov imul sbbb pop mov or lds mov subps pop outsl pop mov lret pop mov enter mov cmp mov iret mov mov jecxz push out or hlt mov jecxz stos jecxz cmp inc mov jmp lds mov lret pop mov adcb movsl push data16 push daa mov lret shlb jno mov lret pop mov adcb inc push data16 and pop jge push xorb aam hlt push fs je jno add and insl pop jge mov mov hlt mov jecxz stos insl addl mov mov mov push lret jns hlt push xchg push je jg sbb icebp sub fsin pop mov pop (bad) xor cmpb ret lret xorl stos push pusha icebp adc cmpsb jbe mov xchg outsl jge fstp jecxz dec shrl xchg push test rcrl add pop fdivrp xchg sahf jae cwtl test dec mov mov fcmovb inc jg or mov pop lret xchg psrad stos mov xchg push (bad) shlb pop fwait pop clc lret out dec imul add sahf stos jno stc lcall cmp jo push iret xchg jl dec movsb test imul imul mov xchg dec or mov lds out sbb and stos cltd shr and mov popf ret push pop or jmp pop lahf and ret mov out pop movsl push xchg scas push movsl inc inc stos fcoms nop insb aam push mov add es sbb jno push je mov inc cmp and xor scas inc addl jae dec addr16 jmp inc dec pop mulb std insl icebp mov cwtl cmc and in cmp hlt mov push pop mov pop lods popa xchg es mull loope add and mov lahf int pop lret push fadds dec adc jle aaa jmp add popa mov inc mov fistl pop inc xchg dec jge pop mov lods xor cmp dec add adc rolb inc shrl dec sub inc jmp dec (bad) mov pushf lock rorb pop push mov push mov imul pop (bad) js mov jp in shl mov mov jae mov lret testl pop jge push fnstsw hlt and mov jae xor cmp jbe aam das add mov mov leave out jl fisubrs stc jnp cmp inc push jb adc fnstenv fdivrs pop in stc fcoms xor mov and cs dec in xchg xchg add (bad) adc cmp pusha push dec inc sub lods jecxz mov lea mov pop dec xchg mov cmp xchg mov jns out lds es mov push mov pop pop jle jae outsb add nop mov (bad) int add ret pop lret fcoml stc aaa cli adc neg dec cmp enter mov daa or ret (bad) pop push mov mov jb cld lds mov xchg push lcall add adc aaa addr16 icebp sub fistpl lods insl fnstsw in pop loopne add lods insb mov test jecxz stos jb stos test stos stos icebp cmp and insb mov push das mov mov xor adc je movsb ljmp (bad) mov (bad) mov movsb cld outsl and dec into lods test gs leave dec ret in pop ret leave mov jge xor dec cli lret pop loop sbbb outsl outsb pop jge aam mov xchg lret fidivs ret stos adc push mov (bad) sub cmp mov out add jg shrl push dec cwtl call xchg pop add lret imul mov adc pop insb jne shll cmp xor pop inc add mov fnsave sbbb movsl dec jne mov xchg and cmp aaa outsl mov inc scas mov insb mulb lock popf mov pop jge xor push out cmpsb push stos mov pop adcb mov lods aad inc sub push cmp or roll outsb cli lds les cmp cld jl mov popa mov hlt loope sub add lret adc mov and (bad) lods shlb and aas xchg add push insl mov sub cmp adc divb (bad) cmc mov jge ret xor in cmp je je add aaa pop adc mov cmpsb jae test insl dec lea mov fdiv and aam sub lcall mov xor std add mov lds comiss mov mov fmull sub push adc nop popf fsin adc fisubrs push jp mov lea inc arpl je stos jo sarl rcr js and inc mov ss mov ss pop lret xchg cwtl dec adcb or pop pop jbe (bad) jnp mov in ret sub adc data16 adc jne (bad) sub adc xchg pop push pop aas orl and stos sbbl rclb hlt jns add out clc jge or in push pop fstps das and push pop jbe mov mov mov mov push (bad) adc inc ret jmp icebp sbb mov (bad) push iret out or jb push out pop inc in lret xor inc push sbbb subb add ret roll sbb xor lods jl pop shll jae cltd jbe pop sti or ja adc arpl int3 shr sahf jmp test dec sbb mov rep push (bad) jg jne xor jp (bad) mov lret enter je cmpl dec das mov adc mov sbb ret lret jge sti jbe push stos xchg inc sbb sub cmp lret cwtl sbb pop xor adcb xchg push repz xor movsl or xchg push push jns pusha mov or test xchg scas adc mov mov test adc test std cmpsb cmp stos (bad) out stos xorb (bad) push hlt mov dec adc mov stos or pop jno mov lret pop mov adc mov icebp cmp or cli mov mov add pop hlt mov ljmp or imul mov push lea xchg sbb mov int3 imul mov mov xchg outsl xor shl mov xor stos test aas xchg repnz dec sahf lret subl shll imul jbe push je sti xchg add enter arpl jbe xchg or es ret cltd mov fsubs loop popf mov std negb rorl in dec push mov adc pop jmp pushl shll aaa cmp jne shll mov mov xorb ljmp pop dec ficompl std and roll jns add (bad) filds insl dec push jg cmp push push jmp dec mov rclb icebp into dec push add lret imul outsb cmp cwtl lds xor add mov jo call and xchg adc lahf movl imul in mov push push adc sub je pusha jle inc lret popf and and mov xor mov mov sbb mov sub cmp push jge mov push imul mov test (bad) aaa in lret (bad) outsb es jmp add cltd push cmc and das mov ja xchg je or shlb leave mov pop ss jl inc (bad) mov push and int dec and shll jb xchg mov mov lret dec cmp cwtl inc push (bad) push cmpb add adc push rcrl out dec outsb pop rorl dec fnsave cmp push out push jns pop or mulb and loope or pop mov mov mov cmp mov (bad) jge push jnp jns mov (bad) scas imul xchg push inc inc cwtl je fcmovnu lcall mov loop mov shlb data16 and fcoms inc pop mov mov enter sbb or in dec je js ret mov sub jge mov xor shlb and push shl out repz pop idivl dec (bad) cmc mov push out stos rcrl shrb shll popa inc cmpsl lods mov aaa add stos xchg je dec (bad) test sti loopne or add xchg (bad) mul jecxz sbb and repz push mov cwtl jmp lret xor add sub cmp mov es jne rcrl or mov inc adc mov mov aaa stos jo and jnp mov sbb jns push mov fdivl adc ret dec mov mov into pop stos xchg mov lds aam add mov ret pop in mov cmp jmp rcll ret inc (bad) (bad) imul push push cmp jge fdivl stos lcall aas (bad) adc mov inc mov out jae mov hlt ljmp or sub mov xor daa adc mov rol mov dec mov add or loop mov aam jnp das push test lret scas sub ret mov add fdivrs and pop les test push or iret dec inc call xchg xor jl dec cmp cmp inc lea shll sbb and or dec test aaa jp mov es rorl mov pushf andb ret jge and ret jge mov sbb je xchg sub mov sub or mov inc add jl mov jbe mov push cmp sbb enter mov js,pn aaa mov ret sbb out clc inc (bad) xor jg,pt pop out add (bad) fwait mov (bad) cmp mov pop mov das daa icebp hlt int pop mov mov sub jge shlb xor jmp lock push lods push jb outsb xchg fidivrs out test aam xor clc clc stos add ss sbb jb sbb cmpsl and push (bad) mov sub xorb mov pop imul jo xchg adc push fsubl ds push imul adc int3 mov dec sub out scas cltd shll mov stos je adc test and fwait jge mov pop push out pop (bad) (bad) repz je je cli ljmp popa dec push sbb mov adc mov mov mov test add lds jl jmp ret arpl xchg push lock data16 mov xchg and adcb repz mov je loope leave fwait cmp mov sti or push jb in lret popa lods hlt jg and aad add mov adc js es rorb cld jg ret lret xorb std cpuid or mov cmpsb test bound xor in jge lret mov je mov xchg pusha pop into mov insl sbb xchg xchg call pop mov bound mov pop xchg je add fmuls aas repnz lret pop push mov stos mov sbb and andl out flds je je fisubrs mov and cmc les cmp adc lahf sbb sbb (bad) (bad) mov fisttpll cmp lret fistps jb jb jecxz adc pop addr16 mov orl nop arpl stos pop push cmp push push rolb sub imul pop imul ret adc xchg enter push clc mov fistpll inc mov adc push scas hlt push adc push sahf mov adc inc xorb out mov mov mul lods insl add aas xchg (bad) adc (bad) xorb pushl dec lods pop add xor inc and adc dec xorb or dec lods xchg add dec sbb cmpsb (bad) adc mov mov mov addr16 lds push movsl sarl and (bad) adc add pop daa add sub or les (bad) and inc xchg xor pop out es lret hlt mov lods (bad) roll add aaa (bad) pop mov jbe and pop push insb sbb adcb out inc test jbe out jge sub mov mov dec daa mov call push pop fs jle cmc mov shll out mov inc cli push push push rorl pusha mov jge in test int3 mov loop mov mov fsubr je sbbl push insl test shl shlb xor shlb fisubs dec lods mov cmp test push inc mov cs mov dec ficomps xchg inc paddsw mov fldl jae je and mov ljmp mov pop int xchg and push mov jnp sbb fwait jmp push sub cmp in xlat ds ja arpl cli xchg adcb sub (bad) repz popa aas addl adc pusha mov dec push sti test sub push lock out jl cmp push out dec add in mov (bad) sub xor dec push decl int fs and mov (bad) cld popf jo imul faddp lcall mov dec push sub test je cmpsl inc sub dec in and outsb rcrb std fcmove pop movsl in enter out mov xor (bad) fiadds arpl push push cmp mov xchg pushf (bad) or outsb xor es pop jl sub pop clc aas hlt mov xchg sbb mov outsb push cmp std gs lcall mov and inc push mov push add cmpsl into sub mov pop cltd imul movsl mov mov cmc dec out add les stos icebp push add les movsb dec icebp les inc cmp sbb lahf push sbb mov aaa mov mov stos shll call mov ficoms mov adc push sbb push add (bad) repz ret push aas scas mov mov movsb je test (bad) negb loop loope es push add lret pop sub mov xor sub andb sub or sbbb (bad) adc jno pop leave stos je inc daa cmp pop sarb test dec lcall add push pop arpl or test push rcll add fsubrs jle push es insl mov jl ja push popa push out pop mov je je aam loop notb xor lods sbb fnstenv push inc lcall int not push mov and sbb flds add push xor sbb inc adc and pushf and push stos test push xor out push cwtl mov push lret ds pop jns cmc push or icebp cmp aam mov or popa pop shll sub pop jb sub add loope shlb mov adcb ret idivl sbb cwtl push add jecxz adc mov mov adc mov adc mov mov adc enter jmp jmp pop dec out mov mov pop xchg in pop test sti mov jge pop bnd popf lret sbb js fsts stos gs sti push pop mov mov adc xchg in iret (bad) inc mov adc shlb inc cmp push or shr out dec aad jecxz repz xlat pop (bad) mov mov test xlat mov push cs and xor shlb fdiv lea aam sbb (bad) xlat adc mov scas fcoms shrl sub adc add test (bad) adc jmp mov (bad) xchg fsubrl jmp mov call adc out out add icebp es repz pop mov js push add pop cli shll pop in xchg xor movsl mov jmp rcr push inc adcb adc ror sub adcb jne bound lods jne arpl shll push mov stos push sub hlt cmp dec das and test and cmpsb xorb pop lds test push fldt int flds sbb inc repnz mov pop clc xor daa fsubr cmp sbb pop jne mov aaa cmp and ret sub inc int3 icebp jecxz cmp adc cs ja movsl in cld push repnz stos ja push inc or out cs xchg and xor pop pop add xor mov cmp js mov inc lcall test (bad) mov insb jecxz jl xchg push dec popa and mov mov das (bad) push (bad) dec xor daa mov inc mov jge inc or push inc push sub mov mov jb in (bad) lods (bad) jg dec push dec xlat cltd add mov cld mov aam inc push stos mov xlat aaa cmp push xor push pop lock jl js stos leave nop lret call lret arpl shl cmp (bad) rol es xchg xor cli mov int loopne pop int adc push subl sbb push ss in pop cmc pop mulps in mov je xchg jle test (bad) push idivl add outsb jl jl mov out mov hlt divl push inc outsl je mov dec pushf popa push jge mov sbb push mov hlt pop std sti dec cmpsl ljmp mov dec pop cmpsb aaa dec dec int3 mov mov pusha mov je shr cmpsb push rcll pop nop dec loopne shrl lcall cmp push sub (bad) xchg shlb xchg xor adc out sbb aas test fimuls or push outsl push dec fnsave int and fs mov cmp out jns idivl popa xor inc mov xorb icebp rorl je jmp push data16 rcll std pusha ljmp outsl js hlt loopne fists mov lret into cmp lahf ja cmc fldt lods push mov or sbb mov data16 and mov dec sub jb mov cld cltd adc shlb cmp fistpl adc test push mov mov test ss mov popf mov icebp jecxz ja mov push fsubr ret lret stos lret out fistps ss loop out orb adc push and js push mov out pop out mov mov sub mov pushf aad lea push out dec lods nop dec not or movsl rcll mov lar push ja inc clc cmp cmp xchg push mull inc adc imull mov and (bad) lock lret imul mov or mov push pop mov pop cmp push lods push xchg push popa sub cmp cmp data16 cmp es jge ds adc stc mov mov and adc sbb sbb jmp cmp inc out pop mov std in mov stc push push insb jns in je push xchg (bad) push bound push xchg xchg ficoms push mov data16 repz insl fnstenv and push iret inc int adc fdiv cmp or pusha faddp (bad) out sbb shl inc and mov aad (bad) sarb mov dec sub mov pop loope test nop hlt jbe movsl adc je add mov ret mov test movl hlt mov cld mov push rorl ret divb cld addr16 test adc stos adc add xor add loop xor push test lret ret out or nop adc jb inc das add (bad) adc and dec adc mov cli sbb sub mov hlt (bad) cmp fmuls or inc sub push mov arpl push (bad) idivl popf dec or jp inc data16 andb push inc xchg sbb mov pop jo movsb or (bad) adc pop xorb cli mov mov rolb mov lahf (bad) loop jno push mov mov hlt mov add shlb mov dec pop js xorb shrb imul and add sub sbb insl mov mov pop xchg dec sbb (bad) push cmpl xchg test (bad) adc cmp and imul je je rolb bound jnp push mov push out imul loope jo lock ja lods cmpsl es lret lcall and fs hlt mov xor add push mov addb pop xchg fsubrs xchg shrb inc popa movsl cmp enter test test push cmp and ficoml icebp cmp les lret test loope mov or cmp daa popa xchg jl xchg out popa inc sbb jno sbb cmp stos fisubl icebp cmp (bad) aas imul bound push pop into loopne popa dec popa pop mov je jmp jg test jae jge cmp (bad) popl xchg adc adc fisttps ror pop sub adc cli dec mov mov adc push mov mov clc pusha outsb pop mov pop and push shlb arpl out or push cmpsb add int3 hlt sbb int xorb push jp and repnz shll scas sub icebp or mov lret xor pop stos testb pop and ds jl add xchg out and nop stos and test cmpsl ret shlb cmp jp subl pushf test movb lcall sbb outsb mov (bad) test mov cwtl fwait stos xor xchg mov adc adc subl fwait cli pop xchg test pusha jbe xchg ud2 jns xorl fwait neg icebp sbb outsb ljmp jg fcmovnbe or and sarl pusha imul mov xchg ret loopne inc fcomp jb cmp mov inc push test jle outsb inc push sbb (bad) mov cmpsl out or (bad) pop mov push out nop push mov mov mov pop xchg (bad) fsubrl inc or ret or jae xchg test movlps iret xor cmp sub repz (bad) icebp push and stc fists call arpl inc inc sub xorb push pusha andl and inc mov mov loop mov xor int ret push stos arpl sbbl xchg xor fnstcw dec in jno mov adc or negl inc inc lahf adc fs imul or std xchg jae stos xchg adc push pop mov mov je adc push lds pop sub cli mov xor popa adc push iret inc out xchg push pop int3 and and sub mov xor ret cltd fsubs loopne adc sbb pop shll xor mov xchg cwtl adc idivb stos je stos adc insb cmpsb repnz mulb lcall sahf lea loopne popf ss je adc cmc (bad) aas pop (bad) testb pop dec fwait mov icebp inc cs data16 clc popf push jnp lret mov mov adc xchg push shl es js jae pop sbb xchg call shlb notb les mov (bad) (bad) push mov mov imul xchg or cmp je movsl inc es sbb push fildll push xchg mov loope mov mov or test hlt xlat xor popf inc sub add lods pushl insl mov imul adc add (bad) dec jp hlt mov dec lock (bad) and ficoml cwtl mov pcmpeqb in mov test push mov js inc and push jmp xchg lods xor mov and push or mov repz mov mov inc loop mov fimuls loop pop sbb jns xor shrb out test sbb lock sarb (bad) mov and push imulb lcall dec lea xchg mov lods cli (bad) aaa inc cmc sti mov imul ret mov mov repz dec push and push sti (bad) sub lock nop aad sub jnp or or out (bad) push and je stc cmp or mov mov and dec dec (bad) in lret test pusha mov popf dec dec popf mov sti cmc (bad) mov cmpsl lcall ret cmp hlt ljmp add lods pop inc pop mov mov das push xchg repz into mov call add lods sub mov jno in pop or xor jno pusha dec jb stos into mov pop das into push in test lods add jno in xor add ljmp ret pop mov dec and cmp or arpl mov movsb pop inc mov iret (bad) adc aas pop and and pop cmpsl push mov cmp xor sbb push sub jecxz mov mov push jo mov dec cwtl outsl dec pop cmp mov ret sub mov sbb and mov shll mov push lock xor sub (bad) cmc pop aam sub xor lea (bad) mov in cmpsb dec pop shll or mov sbb movsl out das fdiv cmpsl add lcall adc icebp shlb mov xchg sbb push pop and adc pop hlt rcr mov sub mov mov leave jp pop mov cmpsb push stos notb push or xchg cmp pop pop nop rclb sarl sar out repz and and inc je movsb divl cs sub or into adc and jo sub insl pop pop push int3 outsl daa or int3 imul (bad) (bad) push dec icebp mov mov add in mov xchg test cmp dec push (bad) jp movsl int3 inc cwtl popf stos outsl pop cmp pushf and shll clc jo sbb (bad) sub push les into mov inc cmpsb dec mov pop subb out push ljmp test data16 clc mov or adc xchg dec jbe shlb push sbb xchg cmp std cmc lock add and mov mov pop cmc lcall fldt cmp xchg inc add or cmp mov adc leave pop mov jge push adc negw mov and sub cmpsb movsl lret leave xor aam cmp into enter dec aam lods mov add sub sub daa icebp cmp popf cbtw call mov adc inc cmp iret inc mov mov push pop mov pusha test add sub add mov xor jae out add into dec shlb mov pop mov lret cmc (bad) mov xor xlat lcall out pop cltd cmp xchg sbb and in mov dec add iret fs outsl repnz jecxz stc mov bound add push loope dec sbb and movsb xor lret sub cmp insb and aaa xchg cmp mov sbb ret sbb cmpsb mov fwait add cmc out push and adc shrl lret test jecxz jb nop stc inc into addr16 cmp adc mov jp dec sbb and out icebp push sbb mov cmp xchg in push jae hlt fiadds int and sarb ljmp adc or push push xchg cmp stos mov and imul mov jp repz sbb (bad) (bad) mov jle adc jl fildl leave jecxz adc adc (bad) or cmp sub push fists cmpsl mov das icebp out (bad) mov jge xchg lods adc out push mov xchg push mov push das stos ljmp pop cmc decb fsts aaa aam pop mov pop or push jmp js inc add into push leave test aaa sub or xchg sbb dec (bad) imull rorb lock lcall xor adc xchg adc iret or and cmp pop xor mov pop jnp shrb js in jl mov sub add inc ja shl lods stos (bad) aaa imul inc xchg sti jo pop xorb fs pop cmp lahf push pop mov pop mov sub mov or pushw rcrb sub push lcall xchg out rcll jg sarb mov xor (bad) out dec adc mov out cmp lahf adc xchg mov and je,pn pop mov shl cli decl push xorb pop test pop shlb mov jno fbstp push (bad) (bad) xor jge mov iret push jge dec lret rcll cs outsb pop sub sar xlat and aaa and or outsl pop mov in arpl stos je sub out hlt filds (bad) repnz push mov out data16 lret mov stos data16 pop cmpsl shlb in imul imul xor icebp xchg xchg outsb ror mov xchg push test rclb hlt ljmp inc mov (bad) mov sar je push push out push aad sbb pop xchg repnz orb movsl pop out mov fdivs mov je into icebp or mov push mov adcb shll loope push push ja jge mov es mov iret xlat outsl data16 stos jno add pop mov dec or adc and ret mov out ret adc push lea add ret pushf jle xorl lock jge pop hlt shll je xor insb dec lret cmpsb mov jmp sahf out push scas ficoms cmp cld jle dec mov imul fwait bnd dec aas mulb inc iret pop jmp loop mov call sbb popa mov cmpsl imul out out out inc lret and cmp in and pushw jge dec das cmp push lcall push mov adc push jge ljmp sarl lods mov aaa mov inc or jne les data16 loop cmp and jg nop data16 roll je dec mov xorb push dec push fwait es sbb ret iret jle mov dec jno add (bad) pop mov push dec add daa add (bad) mov jnp aad ljmp mov pop xchg mov sbb lahf icebp jge xchg test out pop sub inc adc mov and (bad) jo adc ficompl push out add push inc rcl or inc jp insl insb cmpsl dec popa fs fndisi(8087 fdivrl mov je and xchg stos out enter mov int3 movsl sbb jbe and lods fmull std lds inc jle jae loopne loop mov popa test jb test xor loope bound xchg aas and ror xchg dec and and test mov inc mov pushf push lds pop jo jnp das dec or inc adc enter inc or jne ret loop mov clc test ret and outsl call stc es inc (bad) xor aaa arpl aaa and test outsb scas fdivs out leave lahf mov aam (bad) mov icebp cmp mov adc mov and push hlt mov mov mov sbb adc cld inc loope in fcoms ss cmp rclb data16 fisttps (bad) cmc fisttps lea xchg mov or adc pusha popa push sub cmpsb mov or cmp dec stc mov inc movsb jb inc jp (bad) aaa fst xor mov les push std mov shlb mov sbbb movsl data16 xchg out pop adc or call shrl pop sbb les or add adc lret out sbb insb sub mov mov xchg xchg adc cmpsb hlt (bad) repnz mov jne insl lods jg fists loope fcmovne lahf scas pop das sahf insl cmp mov cld sub xchg cld cwtl add sti jno loopne,pn or and into imul mull testb cmp (bad) jno movsb aam enter xor sub jne and inc cmp outsl cmpsl sub xchg add lret stc mov test lahf hlt mov mov stos aam and add adc and aas and movsb push xchg movswl cmpsl mov aad data16 iret out mov je mov and (bad) mov lret or add pop cs (bad) test xchg pop mov (bad) into daa push adc add and ss dec sbb in in sbb sbb mov callw into jno lods pop inc imul pop stos xor cmc cmp cmp cmpsb (bad) (bad) push sbb enter and ffreep loop and (bad) mov push sahf push cmp xor dec (bad) mov add xchg inc cwtl pop lods pop fs xor jno cs aam enter xor movsl (bad) aas and mov fwait mov dec inc test push inc out cmpsl or and xorl push repnz test mov rcrl push loopne sbb pushf mov jnp mov and je add shrl jae cli mov faddl xor push mov mov aad ss or and (bad) cmp lods jp add in ret je,pn lock pandn mov daa cmp xor pushf sub fiaddl xchg ds pop data16 in in lods add cmp inc in call ljmp jne les shlb sub ja adc decb adc test aaa pop jae lock aam enter jmp cmpsl (bad) je cmp and addb mov addr16 inc push xor cld push or loope jae icebp or cmp sbb adc stc add or mov mov fidivs cmc or sub inc push aas sbb jp jb mov sti mov dec dec cmpsl mov sbb push mov mov pop stos sti cmc sub mov sub push stc dec mov and xchg fcmovb frstor pop mov add push clc mov imul test mov xorl (bad) aam enter xor aad lahf and mov fwait xor inc sbb push pop ss in jecxz test sub mov stos enter mov xor xorb xchg cmp fwait ds mov cs js arpl roll clc pop cmp movsb jp add in imull add rdtsc test xchg xor daa pop inc dec push jae pop pushf xor push loop fidivl xchg lcall (bad) jmp mov or xor push ja pushf sbb out test hlt mov (bad) mov (bad) sti inc sbb xchg adc add cmpsb jne out sbb pushf xchg sub repz mul pop fistpl lahf mov je insl cmp std pop stc (bad) mov addr16 xchg mov cmpsb xor jno cs fmul jmp and mov fwait jmp les outsb or sbb push fcoms mov push mov test lret xchg cld je fisubs push sub push das xchg adc add jae cli loope cmc xor cmpsb lods mov icebp adc adc mov js stos insl cmc cmp lret push stc (bad) ss cmpsl sub mov add fs icebp lods out bsr call in xor int3 mov sbb (bad) cmc pop repnz pushl mov clc adc mov push ds xchg sbb std stos in sbb les filds outsb faddl sbb or fcoml test (bad) xchg xchg cmpsb shll cmp xchg pop adc and fisttps sub stos pop andl loop and push inc and push icebp sbb lock sahf js stos adc fisttpl inc mov lret inc jp mov lret mov xchg rdpmc test aad out sbb add cmc inc lods xor adc ret sbb push inc mov cmpsl inc pop sub lret scas dec imul push cmp arpl sub jb jne or div test in pop decb inc mov sbb (bad) loopne mov pop inc xor je push xor push jne out sbb sub movnti movl inc xchg cmp adc mov mov sbb push sub scas ret mov cmc push das loope fistpl sahf mov pop outsl (bad) or xchg loopne xchg lods mov adcb daa fcmovnbe lahf lcall into lcall push lret notb es fs xor jno cs add xchg xor dec and pusha dec pop test andl add mov es fdivs in loope jae icebp daa xchg mov mov imul mov push lret ret or push hlt mov mov fnsave push adc cli pushf add das mov mulb testb jnp mull xchg (bad) sahf leave loop and clc push mov mov jbe andb sub and stos jbe jno jecxz cmpsb lret test add fldt movsb loopne pmaxub jl pop les fiadds xor adc ret mov roll xchg sub pop mov or rorb dec xchg aam push cmp cmp out dec xor lods fadds jb jne or push adc icebp not test adc xor sbb mov pop lahf xor (bad) sub xor sbb les sub (bad) loopne ud0 adc mov and cmp xlat sbb les dec mov loope (bad) loope fistl fstps pop sahf dec cmp (bad) dec or sub xchg jg shrl cmc loope fistl lahf sbbl sahf jb jno out sbb jo pop push hlt testb pop xor jno cs aam enter xor cwtl mull lea testb inc push outsb mov das sbb or mov pusha and mov fwait sub mov outsb push cmpsl fcomp jmp push ss test mov shrl push xrelease bound test pop mov mov push mov cs das xor sub mov lret jmp ficoml jmp fisubrl or push sub hlt jle pop or mov test pop or decl mov sub jno out sub pop fisttpl xor mov out add push sub xchg lcall fidivrl adc negb pop inc push test pop ret fstl sub gs add and fucom mov sub pop pop add mov outsl out add or push loopne mov sub fcmovnb inc mov out scas (bad) pop pop pop sahf sub sub int dec icebp sub sub inc arpl inc rcrb push data16 fmuls in sub xlat in scas outsl stc sub push xchg mov sub adc push mov (bad) hlt add lret sub mov scas sbb repnz movsl push je insl mov mov mov lds mov enter inc (bad) leave or sub fidivrl dec sub cltd icebp (bad) sub xchg hlt mov jle sub mov jl add jmp inc cs (bad) pusha inc push sub xor mov mov cmp sub mov in rcr xchg mov pop sub fstpl jmp sub xchg cmp xor xchg lods xchg inc xor int sub or mov mov hlt ja adc xor loopne push sub sbb push mov ror mov sub loopne or ss sbb stos gs pop test sub subl daa push and push xor adc inc sub data16 xchg aad lods sub or jp sub fs scas sub (bad) popf inc mov mov sub xor and xchg add xor sub outsb mov lds pop mov or sub inc sub cmp (bad) push pop xor stos dec mov xor (bad) fsubs aam es or xor sub (bad) and push mov int push jp add in out sub adc sub (bad) js stos sub repz jne das or mov jae cmpsl out or sub dec mov or xchg daa mov or sub or pop je inc mov clc fnsave xor lret xchg in push dec push jmp sub push loop fisubrl xor pop out inc sub insl in sub mov sub xor test fildll mov fs jmp sub or inc sub sub stos ret sub out mov ret pop gs push inc sub cmp push cmp call (bad) push or pop push xchg lock lods jne push fs xor sub xor xor repnz lock pop outsb push inc mov adc sub filds out sub nop (bad) arpl sub mov popf clc stos dec inc sub in aad sub and sahf jecxz test sub data16 outsl and cmp sbb flds lods push out pop iret hlt mov in mov jo mov pop cs inc inc cmp (bad) mov mov dec ret xchg sub adc fidivl or popf cmp dec or stc sub inc cmp inc cli sub inc subl int dec rol sbb push clc mov imul nop or sub filds fidivl xchg sub ret lret sub jb sub out (bad) lcall sbb mov xor ret and cs sub sub pop aas sub subl xorl jno adc jno dec adc je add sub (bad) and xor xorb sbb sub push jb sub sub and cmp iret sub fcoml sub mov stc sub movl leave pop sub (bad) mov mov sub xchg inc jmp pop push in fcoml inc aam ret cmp push add mov and sub fldt sub (bad) cld (bad) sub aas cld aad cmp orb shlb mov xchg cmp add sub in push repnz fidivrl sub mov std rcl scas adc cld sub push push rorb loop pushf outsl cmp jns jb mov sub mov sub outsb xchg sub inc push jae popf fs dec sub xlat adc sub jp int sub aas jns sub outsl sbb sahf sub lahf ljmp rcrl xchg sub pop mov sub cmpsl inc and mov shlb mov in sub cmc arpl sub icebp andb sub jge movsl jno rol mov jge nop push insl push and mov sub ret repnz fnstenv ja sub mov jl push fwait or sbb (bad) out or push sbb push imul stos pop rol sahf mov aas std test and sahf stos cmp sub dec decb lret add mov popl mov adc cmp sub imul (bad) mov or nop or add mov add movsl sub and ror repnz add and sub cltd out xor inc push xchg test sub mov and (bad) sub sub inc xor cmp pop cltd and sub xchg pop adc jne push pop sub or fbld sub aaa (bad) cmp mov adc sub aaa xor xlat aad sub in ja jo dec fwait sub sbb jo ret push sub cltd outsb sbb sub pop xor shlb pop sub or mov scas fsubrl sbb shrl aam jl imull inc lea cmp sub and add sub and mov sub fnsave adc imull or out and aam in jne mov iret div pop sbb sub mov xchg mov sub push xor cltd add fists xchg xchg inc sbb in and or xchg ror xor sub xor test sub push lods sub insl ja int3 xchg ja sub inc xlat push pop sub push sti ljmp (bad) out push jecxz sub adc bound cmp test lods imul aam fs loop sub or cmp into mov scas call sub repz movsb sti pop setno dec xor mov cmc inc sub mov mov mov cmp sub cmp add test je cmp out sbb adc sub fsts arpl daa mov sub lahf push outsb sub add sub add dec enter loopne mov push ret sub daa sub sub fiadds mov je popa dec idivb std mov mov outsl jo adc or stc sub test mov sub push and iret imul rclb in dec xchg sti sub aam sub jne pop push sub aaa jle push dec pop jno in add cltd mov (bad) ret add mov clc mov add testb xor push test fldz xchg inc jne xor sub jecxz jl mov ss sub stos iret push sub adc mov inc fyl2x adc xor sub ja jne adc clc dec iret xor sub and mov scas mov shrb jecxz scas int es push push ret xlat push jecxz dec rcr push sub xchg lock sub loopne sub and stc inc sub xchg and jae lods dec sub pop xchg pop aad stos pop push fsubrl dec das pusha fsubrs dec or insl in clc sub in adc push sub xchg xor int3 mov push sub xlat and sub aam fisubrs sub push lds or xchg dec stos popf jl sub pop add pop push shrl out sub inc sbb cltd mov ret lcall fwait pusha and sub xor jge jno fdivrs sub daa xor in aaa mov pop jno popa cli shrb sub mov xchg jns cmp scas cs and std aas adc mov sub push dec out sub jo mov adc sub div xor jb into stc push inc dec sub ret sub push jnp jo sub dec or mov push (bad) or sub sub gs sbb push andb jo jp xor call sub mov cmpsb test orl aam cltd in mov sbb cmp cmp jae lods cmp imull pusha cmpsl loop sub mov mov push mov fcoml (bad) in pop adc outsb jns xchg add cmpsl lods pusha ja add fwait js xchg das fsubrs dec and inc pop idiv sub out add sub add cld mov sub adc ja jg js and clc outsl sub and arpl sub jae rol sub adc adc sub repz inc sub dec mov sub pop push rcl sub xchg frndint fistps cli jns popa int3 loop sub arpl test xor pop rolb cltd pop cli sub aaa mov insl cmp fildll bound dec sub jb ds and lds nop inc add mov or scas jmp dec dec sub ret inc iret adc subl dec (bad) or sub push xchg push xor xchg mov int sub test mov pop mov sub jl jle sub fwait xchg repz or xchg pop mov and loop lods mov sub daa push mov and loop xor enter repz outsl fwait lea jo jne out sub lret pushf pop mov sub rorb jmp sbb outsl int3 jg std test enter push shll pop sbb jle stc mov sub stc xor mov fidivl mov sub mov repz mov mov jnp push sub repz adc mov (bad) mov mov push ss sub and mov sub xor mov add jmp sub cmc in and jmp das repnz std das xor mov xor repz and sub sub mov in sub push mov mov or jnp sub sub jl cs stos and mov mov jp les sub mov loop or sti and jge mov out sub sub sub sub icebp xchg and or sub lcall cmc fisubrs cld shll sub aam aam aam sub sub sub sub sub sub sub sub aam aam aam aam aam aam aam aam and sub sub sub sub xor std call out inc push sahf push sub mov push push sub in (bad) mov cmpsb dec cmpsb sahf cmpsb xchg fnsave imul lock into jl add sub mov aaa mov mov sub in in in in push jecxz jecxz jecxz jecxz fsubrl or xlat mov sub jl jl in jp jp jp stc sub insb nop sub xor pop ret sbb les les pushf sub jmp sub lcall cltd cli cltd lahf cltd ja out mov push shrb push push jle xor fwait mov test xor into mov test mov mov sti sub mov jecxz test test test sub or or xor pop mov cmpsl dec mov mov push jp sub dec ljmp sub mov jae pop stc nop sub les les clc imul cltd lahf dec sub out stc out and (bad) push stc sub dec push sbb ss enter sub es mov sub mov mov and stc in in sub orl sub cmpsl movsl cmpsl shrl arpl stos sub jl jl sub stc sbb imul outsl iret outsl pop sub imul outsl cltd xchg cltd lahf and inc out sbb sbb aam call mov mov out out sub lret push cmp mov outsb mov xor xor or mov jecxz jecxz jecxz jecxz sub mov jp jp jp stc xor push decl jno push pushf inc pushf popf sub outsl sub imul lods sub jge out push push dec sub test add push mov cmpsb pop cmpsb lret cmpsb insl cmpsb (bad) sub fnstenv mov js mov sub ss sub mov sbb lods into inc sub enter sub fwait into xchg aas mov cmpsl sub jecxz sub in in sub ret jecxz jecxz sub scas dec scas jns test test test or or aaa sub cmpsl inc cmpsl into sub xor mov mov sarl and pop or jp jp pushf lods sub outsl xlat outsl push push sbb outsl xchg outsl mov lahf cltd mov jg sub mov or sub xchg push cltd mov cmpsb daa cmpsb dec cmpsb sub push mov and pop mov xchg sub stos xor xor fidivl (bad) enter enter mov mov inc enter mov mov push mov mov sub lret test test and sahf or out ja stos jmp cmpsl and sbb cmpsl adc mov ja sub mov mov xchg mov mov sub mov jp movsb (bad) cld jmp and mov sbb dec ret les or jl cmp jmp aaa cltd lahf das cwtl lods sub out mov repz sub addr16 sbb mov or aad sub xor xor adc push ss cmp mov cmp popa mov sub and or or cmpsb mov sar dec lcall and mov pop in xor out sub push notb push jnp cmp dec into fxch out in lret sub idivl cltd in in in ss jecxz insl mov in dec test test or or or insb das mov mov pop sub scas jl pushl sub das stc data16 sub les (bad) out adc sub pop ret sub push pushf imul lcall imul mov or or ds or out adc ja adc call gs adc and push adc push sub cmpsb in sub mov cmpsb xchg (bad) xor xor sub ss hlt cmp mov in int pop repnz dec xor das xor insb or adc (bad) into jle aaa sub into add cwtl into aaa into xor or into pop into and mov adc addr16 mov mov mov shrl sbb fdivrl sbb sbb sub int repnz jecxz sub sbb jo jecxz jecxz sub scas imull test test test insb or test test dec arpl sub sub or mov imull or xor xor or dec dec sub or mov adc mov mov scas mov cmpsl pop cmpsl lret cmpsl and mov shll jb enter mov (bad) mov mov pusha sub stc push stc add test decl adc das (bad) ds lods stc pop stc inc stc addr16 les les sub mov out ret pusha sub les (bad) cmp push lahf cltd and dec pop scas xchg scas lods stc or mov pop lods xchg push dec mov or mov mov xor sub jl jl jl ljmp icebp ret sub sub lcall imul cltd push lahf xchg lret daa sub adc pushf push mov adc mov lods cmp int sub mov mov lea inc lret inc inc int and add in in cmpsb dec mov in in in jmp test lea or mov jp jp jp ljmp jl cmp stc ljmp mov ljmp jg sar sub pop jmp cmp and jp or mov xor sub les rcrb pushf cli pushf and mov cmp push cmp out clc out xlat lret pusha jns mov inc push mov push addr16 int in iret mov xor xor xor (bad) pusha sub sub loopne xor dec cmp mov push mov dec mov in sub inc mov cmpsl dec mov xchg mov mov lock mov aam jl jl jl lret test (bad) sti or sub stos ret stos ret lcall pushf lods in outsl and outsl inc lret xchg sub sub scas call out std out lods out lods jne inc call cmp ljmp jne pop push sub in sub cmc cmpsb in cmpsb sub and sub jle push xor call mov dec xor mov ss ss pop xor xor inc lret xchg call into or enter test and push fmul sub dec xor jecxz mov xchg ljmp je stos in scas jne and push inc scas add das idivb mov cmpsl cmp loopne mov jbe or sbb jl cli jp jp mov mov add jns jp xchg mov mov and mov cmpsb stos cmpsb sub cmpsl cmp lods ljmp jnp mov mov out int3 out mov jge add mov sub sub sub sub sub sub and and and and and and and and aam sub sub sub sub sub sub sub sub and and and and and and and and aam sub sub sub sub sub sub sub sub and and and sub sub inc call and jb sar movsl mov add pop stos (bad) stc insl cmp clc call bound iret sub outsb push insl lods mov mov sbb bound sub sub xlat or fs cmovne bound or xchg xchg add jo mov and and cs mov xor cwtl sahf sub mov cltd dec test mov bound fidivrs and lea push ljmp inc lahf mov jge mov xor popf mov cltd xchg sub outsb nop jmp sub push int3 fisubrs shll fildll popf sub nop and fsubrs sub mull cmp jmp add xchg sub rcrl push out pop cmp pop sub sub cmp sub adc add and cmp or ja xchg imul rclb adc adcl bound dec mov int jge jle or test ds bound sub adc xchg add nop cmc push jnp mov mov in fisubrl dec nop add xchg test shrl rcll js lahf and or pop insl sub sub ss cltd xlat sub pop sub adc sti or decb imull bound outsb insb mov imulb sub cltd mov fwait sub insl mov dec xchg cltd xlat inc (bad) ljmp jne cmp pop out and sub unpcklps jb mov xlat mov sub adc mov mov sub ds gs cmp pop xchg sbb jg jge push fistpll sub cmp mov jne lcall push outsb ret sub int3 add mov lret aaa mov lea sub sub fs xor jmp adc xor or leave jg ss push or fistps mov lahf popa dec imul (bad) std adc outsl sub sub fs jne push adc mov sub sub push xchg adc fmuls scas loop xchg lahf shrl imul add or and mov and sub sub popf ds jns push lret cmp xchg addr16 es jnp add mov fidivrs sbb fs fistpll mov sub cmp out sub test in packuswb sbb loop fidivs and cltd insl aaa mov leave repz mov gs add or mov and push movsl add add sub xchg sub add xchg out fcom add mov popf xor xchg sub mov (bad) imulb roll cltd mov mov jle cltd loop sub ljmp jmp pop sbb insb in (bad) arpl sub push bound sub wbinvd lahf sub mov xchg addr16 (bad) stos cltd xlat cmp bound xchg insl mov push add mov xchg add adc dec fs stc lods mov cld lahf sub xlat bound xor mov fs sub xchg daa shrb bound dec cltd fs sub or sub aas and add aas test cmp push adc push cmc and in mov mov xor sub test sbb repz mov and cltd sub push fdiv ss imul out insl shl xlat cmp test lods and out fsubrs nop cltd out cltd lahf fsubrs test iret wbinvd shrd xlat cltd cmp inc mov shrl lods cltd ds or mov pop sub xchg dec cmp dec cmp jmp aaa repz xor jmp fisubrl out in push jmp int3 in push xor iret leave add cmp mov call lret out sub scas es sub loope out jmp mov sub out sub ljmp cltd sub in mov sbb add cltd and das in shr das lret jle das call push sub sub imul std jecxz imul sub test loop lods mov mov cmp mov mov and ja sub cmp sub and fnstcw rclb sub sub mov cwtl ss mov lahf fldpi sub outsl outsl ds vpmacsdqh add sub in sub insb mov and (bad) xor daa jmp inc lret sub cmc jnp xor dec rsm and inc lret sub mov or and jl das daa xor xor push xor xor xor xor xor xor xor bound xlat js,pt out pop xchg sub clc nop add mov std inc push dec cs push outsb sub repz mov push das sbb clc jnp (bad) test xchg pop jae dec sub xlat push jae xlat incb jp lret jo xchg rorb out lods sub lods mov nop mov xlat cmp cmp dec sub das sub cltd mov loopne insl fsubrs sar insl or sbb mov or out and lock orb jno mov addr16 popa jmp cmp das (bad) xor push fs insl cmc jle stos je mov and loop popa lock insl push cltd das mov lods sub nop mulb aaa mov jne and nop or sub pop sub mov push inc sbbl test cmp cmp clc pop imul xlat repz cmc stos js xlat (bad) xor clc imul clc xor sub and push xor mov cmp dec or loop xchg ljmp es std cmp lahf jnp nop std push push or and and imul adc pop icebp int sub mov cmp or push sbb cmp in sub scas outsl cmp xchg add movsl or stos cmc in xlat xlat or jno and and pop mov sub adc lret dec not insl sub outsl lret sub xor std push adc es cmp and and sub xchg out bound int sti cmpsl inc aas insl and or mov or add scas mov nop and daa mov push gs xlat pop js pop sub pop js lret pop sub sub iret sbb inc mov pop and jle jmp loop nopl or cltd push fs outsb mov mov in mov push ljmp xor das sbb xor test clc popa or mov sub cmc sbb or fs add scas sub push or and or insl outsb test mov shlb mov sbb jg jnp jge fsubrs adc js or cmc sub popa and dec nopl or cli sbb bound mov sub adc das scas ss lods sub cli popa and (bad) cmp int stc and das nop add and in sub ljmp mov pop xchg sub in sbb imul mov adc clc sbb das les mov push or int3 sub mov cmp jp or cmp sti int scas or sub and cli nop pmulhuw push sbb lahf mov and cmc mov dec aaa jl adc push or mov cmc outsb mov jnp std pop xor imulb sbb js nop cmp dec jmp js call xor pop pop jmp mov daa mov sbb stos push sbb std cmp cltd sub adc sbb jmp sbb cmp sub loop fs (bad) and mov int daa sbb push aas int3 jle and cmp (bad) orb outsb jg lahf outsb insl repz nop outsb sub mov in mov mov cmp or inc cld adc mov je push jbe sub add stos cltd and aas xchg mov push mov sub and stos mov in das das jl cmp push repz and sbb in ss sbb aam mov inc mov outsl sub jo lcall clc lret xchg fisubrs and lods jmp cmp xchg xlat dec clc lret orb and das cltd cmp nopl add sub bound dec cmp jle fcom sub mov (bad) push push lcall or sti push push mov add sbb cmp sbb test or and add pop and and dec daa lea out cmc outsb cmpb pop fwait rorb jns cltd push outsb shll imul push lret popf xchg mov jge pop mov pusha mov fisubrs push popa and adc aas bound cltd push out sub cmp cmp add sbb or nop push pop mov and xchg mov jbe ds jle nopl mov adc sbb jnp push outsl cmpsl popf daa cmp push lret cmc xor out jnp jmp test js push test sub adc fwait sbb popf wbinvd sub insl or add sub rol sub sbb cs cmp shll jle add pop outsb cmp jle cmp imul testl push jmp fimuls sub jle fs fwait out out mov aas xchg int3 iret in push sbb cs (bad) sbb outsb pop nop ss fisubrs in sub dec or xchg (bad) cmp or nop fs dec fbstp and imul imul and push jno jns dec xlat mov push lret sub push and or ret jnp cs lret mov add cmp jns add pop repz mov xchg lahf or and jnp mov nop fs rcll cltd roll sub xchg repz iret xlat fisttps sub (bad) pop add sub lret jmp (bad) insl cmpsb or daa pusha imul push pop scas cltd push jmp mov xlat lods push or mov int dec aaa sub pop or mov sub fistpll lea sti inc outsb sbb or push fldt push dec js aaa mov cmp cmp std push das add repz outsb and lahf sbb xchg inc push mov and lret or iret jle stc mov dec or lcall sub or int std sub xor mov or sbb sarb jge fsubrl insl add sub and push adc punpckldq and and dec mov xlat mov not cvtps2pi (bad) outsb lahf sub push cmpsb jle cltd fs sub leave js insb sub jp aaa push insb lret sub sub loop sub sub wbinvd sub add sub inc sub fs mov cs sub (bad) push js,pt sub sbb cmc jle push test cltd lahf sub fs insb or sub or outsb dec jle or sub push pop push mov jl xchg mov push shll xor push cmc sub test punpckhbw sub sbb das jmp pop out and daa test daa mov inc jmp stos data16 dec or lahf lods and pop shrl jl stos movsl stos cmp outsl mov in push sbb lock addr16 stos and or pop int3 add push mov add mov and popa push sub mov (bad) loop add leave sub push dec or adc sub repz mov das je or push orl add mov add dec and sub ja lds sub push xchg add les cmc mov (bad) mov sub ja adc lods add sub pop arpl or xchg cld and xchg adc lahf mov scas pop bound ds push in imul cmp push lahf cltd call push imul int rcll lods bound imul test and sbb xchg mov outsb and pusha jge (bad) jmp dec nop loopne clc lods dec lods mov fisubrs clc outsb sub sub outsb add das enter push xlat nop js inc mov cmp aaa xor stos adc nop outsb or cld lods or sbb in std cmp sub sub les push add sub adc sub nop outsb clc mov bound lock in das sub cltd xlat cwtl js call (bad) xor sub adc lock in jae pop xchg stos aaa (bad) insb cmp scas sbb lods sub xor in or cli adc daa sub std cmp mov stos xor insl nop cmp ljmp out sub sub nopl cmp lods das addr16 jle and sarl call pushf imul imul ja imul addr16 cmp xlat pop js ds popf mov je mov mov sub fidivrs or outsb adc je sub xor push push jno push dec or jae sar dec add ljmp mov imul insl sub mov inc insl sbb or sbb jle push mov and jge stos push dec pop mov stos mov das sub ds fstps stos cmp dec mov push outsb cmpsl fs mov pop adc and imul out mov es fs push jne insb xor rolb pop leave es and cmp and mov sub hlt lea sub clc test test lods xlat out (bad) mov mov or popa push mov xchg dec push mov into sub push sub ret jo push (bad) in cmp ret xchg add daa mov sub lahf lahf sub lods nop jl stos repz sub dec and out in das sub ds xor push or and cmp and and sub sub call punpckhwd and or adcb das mov mov xor int iret cmp outsb scas pop push mov (bad) push scas cwtl push inc inc mov lret cmp or push xor sub pop push jne,pt cmp cmp cmp cmp dec das cs push test iret sub lret bound adc test rcrb cs cmp mov jge pop jmp sub mov sarb jg ret in stos nop sub in sbb or sbb outsb xchg repz outsb jnp pop sub sbb inc xchg imul js data16 popf sub stos push dec or icebp (bad) nop mov sbb cld aas adc js fsts lea orb or cltd mov cltd cmp scas insl xlat in push dec and sub jl adc sbb mov adc outsb scas nop pop sub cmp ds xchg lcall in adc cltd js test sub rcll jle adc bound pop es mov fisubl mov and pop and and lock mov push push mov fcomi or or orb push sub mov push xor imul fwait or adc fsubrs pop or insl sbb fdivl and or insl sub xchg int3 fs scas and pop jge push push mov nop lret mov lcall sub sub dec jnp sbb (bad) fldt cmp (bad) pushf fldt mov mov xchg insl jnp (bad) out jnp xchg push cmp cli or xchg sti cmpsb jno push and (bad) (bad) sarl or adc sub fs jp lahf in or xor out imul lahf cltd jmp nop icebp mov (bad) mov push fisubrs and or fldcw xchg xlat inc or mov xor fwait mov pushf pop nop ds fbld mov fsubl and imul data16 bound sub and jp jnp bound add outsb outsb lret sub jl mov fs and int sub ja lahf jno pop mov icebp lret es xlat cld jge das xlat jnp int3 stos sbb sub jmp pop imul and push mov xor or ss popf movsb xor daa fists outsl fists or jmp or adc lahf sub (bad) imulb and jl add push call imul and (bad) cld nop mov outsb add fs sub gs imul icebp xchg roll xor sub loop (bad) cmp and lods outsb jae push and lret cmp sbb and xchg loopne or bound int (bad) sti add call sbb cmp outsb mov pop sbb or les das xchg insl add arpl adc stos mov js adc mov or (bad) push pop sub sbb jnp inc cltd ficoml sbb fs sub out cmp inc scas sub sub cmp sub orb sub sub int je sub js xchg mov sub ror jle mov out pop sub mov and pop repz iret pop and cmp sub dec sub pop lods sub popa out in sub outsb in push je and test mov fstpl sub lret cli imul popa and es sub sbb sub ds or es (bad) and outsb addr16 xor pop and leave sub dec or cmpsb push das dec lahf fldcw and out jge pop popa lock (bad) lods sub pop je subb xor push cmp and sub pop cltd mov jle aas sbb jns scas cld sub cmp sbb jp or push sub mov sub repz movsb lret sub sbb or add lock (bad) sbb sub mov (bad) mov mov pushf inc bound mov outsl sub dec and mov test cltd mov jae pop mov mov mov sbb push notb xor and pop inc push cmp fimull xor cmp and popf and cmp mov nopl sbb xor push mov sub and lods sub dec icebp dec or dec or ss sbb mov insl xchg push leave cltd loop fsubl pop nop sbb outsl xor and xor cmpsb pop and pop daa xchg sahf test js lcall mov repz sub jle (bad) lock and fs mov mov sub mov icebp xlat clc ss pop clc mov xchg push xchg lahf in jnp adc mov mov addr16 cmp loop fisubrs mov sub sub cmp mov (bad) xor imul sub sub fs sub push mov cmp or fs sub push imulb cmp comiss lock mulb sub outsb fisubrs sub sbb push popa popa lahf cltd fisubrs sub nopl and sbb sub cmp push xchg cltd sub nopl dec inc sub lods pop outsb push sub sub stos sub sub leave js lods sub sub in stos outsb imul or and sub gs pop test push mov or or dec stos es mov lods das xor sub push sbb sub in sub xchg int3 bound push in mov mov imul or jae lods inc imul shrb stos push jmp mov hlt stos xor call imul sub dec js jmp and sub sub and push aam jmp daa in sub sub jmp lods xor push nop (bad) test cmp push and fs xchg add and sub pusha push imul xlat js,pt pop call in sub mov aas les cmc imul in add sub add and fs or mov outsb ret fs loop xlat mov add add xlat add and pusha sub ss mov lret xlat and jnp adc xchg dec sub xor outsb mov push xchg bound nopl adcb sub ljmp mov sub add daa int3 stos bound push push sbb mov cltd rorl insl and sub stos jp sub out cmp push jnp and xchg in bound or loop in and push imul add jns pusha test and outsl nop sub pop and bound sub aam jmp dec sub push popa xchg mov imul xchg daa mov outsb lret outsb cmp sub push (bad) cld jmp fs jmp lret and imul mov pop lret lret lea into outsl dec ss sub sub loope cmp dec add js push pusha iret dec or push sub iret and xor and and sub and jp jl mov sbb dec or int3 dec push stos and jg inc or jo sub aaa push inc das int3 ds call dec insl outsb popf cltd push dec xor nop sub negl jle sub push sar mov push es mov add adc outsb and out ja stos sub mov mov push sbb mov mov mull xor sub pop bound pushf jmp pop mov punpckhbw dec and cmp cmp sub (bad) fimuls adc inc mov xchg xchg mov into sub ret mov sub cs sub outsb and lret sub mov outsb ljmp fistpll push sub (bad) cmc popa push xchg mov mov popa and aam sub loop or popa push dec sarl cmp or fwait shl mov fisubrs fs lahf jmp ret paddsb and cmp stos add in dec sti inc jge xor mov mov daa jp add lahf sarl sub rsqrtps test adc dec push lea xlat lahf outsb pop fs mov pop imul lea cmp dec fs xchg xor sub mov dec sub sarl scas sbb jle lret sub mov test dec repz push cmp push or outsb ja cs lahf lds or enter push jnp insl das sbb xlat cmp fs in add push aaa lods sub loop or das sub cmp push jecxz jmp int mov nop (bad) repnz mov jnp fs xlat xlat ret call lret dec mov negb imul mov loop les and jmp push ss iret ss xchg insl fstps imul lods xor notb sub shrb inc das dec lahf das mov mov nop cwtl adc rcrb push fildll mov cmpsl scas sub imul add sub cltd lahf in nop sbb adc cmp sbb (bad) sti sub push in cld pop inc inc int3 push and loop mov cld jge cmp dec sub std cmp out xchg xchg adc mov std jg and lods rep cmp popa lock lods sub sub jp mov es and cmp sbb push daa and lret pop ds lcall mov fldt insl aas push lahf mov or sub mov shlb sub and sub out push aas adc sub mov bound repz mov push jle push test jp clc mov daa sbb lea repz ja cmp out das addr16 or push (bad) jp cs js xchg push das dec cmp and cmp mov add lods xchg jmp lret dec outsb mov push mov test fsubrs jmp stos push ja sub insl jmp mov dec mov das push adc int push insb mov sub mov cmp adc xlat or call jle push xor daa pop pop stos mov rorl or out daa and sub push push sub push mov clc cmpsb xlat ret cmpsl fs adc and arpl and pusha lahf daa push or stc cs das jbe cmp push nop aas jno cmp mov je add cmp ss ret mov adc imul icebp pop sub sub das lahf test jp pop xor jp adc addr16 cmp adc and aas dec sub jp mov xchg scas sub fildll xchg fnsave xchg sub sub cmp sub and mov mov push or cmp arpl lret sub fdivrl cmpsl mov into or cmp aas sub js daa cltd lods mov addr16 std push (bad) lret jg sbb sbb mov daa scas pushf sub adc push jge mov jae sub cmp add jno or or push xchg lods or fisubrl sub lahf cltd sub mov lret push repnz sub sub stos jnp cmpsl scas je dec jl pop data16 mov inc pop lret and sub pop jg scas sub sbb sub mov aas das pop addr16 repnz sub insb pushw in and sub xchg add lret xchg mov xor pop sub negb mov sub sbb popf xor inc std xchg cmp adc ljmp ss jno loope pusha imul push fwait sbb sub jmp cs add mov cld movsb popa and jp aaa cmp ficompl pop jp inc ret mov sbb dec jle mov sub aas dec insb xchg mov enter or std jo pop adc data16 sub dec and and push or mov aas popf sub pop repz cmpsb fwait push test mov repz (bad) fwait sub mov jge lahf outsb xchg sbb mov sub xlat mov push push push cmp std inc cmp insl or xchg or jmp push bound imul mov dec jle sbb std add and mov daa loop nopl and pop daa ficomps repz rcll mov sub or insl mov push (bad) outsl loop sub push js cmp aam dec or sub sahf shlb lcall push sarl push stc xor or pop sub daa xor outsl scas mov xor cmp xchg push imul mov sub js nop jl sbb call cltd sub jbe mov xchg and xchg addr16 mov sbb mov bound jo pop jns mov sub mov outsl ret std mov sti rcll rol fisubrs lahf call outsb mov fs (bad) std popf sub wbinvd jo aam movsl sub (bad) lock cmovge push repz or in cs sub insl fidivs fdivrs (bad) fs adc data16 cmp cmp xchg and popa push sub ss mov fmuls scas or mov outsl sub lods bound sub bound jle adc push lahf outsb stos or sub sbb add mov daa xchg push and sub cmc jle cmp lds jp (bad) out xlat repz push and xchg push movsl xor jmp outsb movsw int3 add mov bound push js cltd lahf dec ss sub jmp mov or lods punpckhbw mov push sub stos sbb bound xchg or les lods insb xor sbb insb sub (bad) cltd and mov sub stos sub or sub test sub sub aas fs movsl sub lahf sub xlat dec js call outsl add or nop lods and lods dec or lods aas bound xchg push imul and sbb jg and imul sti inc in mov bound push out sub dec mov xor and fs in xor bound add sub imul dec scas and sub and cmp inc sub xor gs fisubrs jnp fsubrs add pop out adc imul lea xor cltd push ss stos arpl icebp add (bad) daa into notl imul js pop nopl adc out jp sbb bound xor in mov insl or jmp pusha sub push cmp (bad) enter cmp jnp jmp and in mov push aam mov out insb add push inc lret cltd dec leave test addr16 cmp out sub gs cltd mov in sub sub push mov and sub stos jno bound sub imul ss xchg andl dec bound and cmpsb sub xchg decb or lods sub sub and lods and and push xor push mov lahf cmp xor push and aas or lock sbb imul add and mov dec xor xlat xor mov mov leave jo or dec lret or cs sub pop lods sub outsb add insl inc bound sub lahf stos and push sub ds push jmp mov add repz enter lahf push imul mov stos mov int3 sub push (bad) lret or and in insl dec sub dec sub int3 bswap dec int3 lods inc imul stos movsl call lods pop ds push sub push enter mov sub dec outsb (bad) xor fsubrs add andb sbb test popa and sbb xchg or bts xchg nop jge xchg fwait int3 or ds dec xor bound sbb pop adc xor sub and lods sub lds lods lea sub (bad) pcmpeqw test push push inc mov mov mov insl and insl ss xchg mov stos das jno or mov sub mov sub add pop fbld lods sub push lea rcl fs or dec and stc mov push inc dec push (bad) add and inc sbb jae sub and in sub out leave es lret dec rcrl arpl aaa or in dec mov adc sbb mov sub ret js,pt data16 add push sbb movsb or mov xor dec mov xor pusha movsb leave sub dec jmp push mov push lea bound xchg movsl cltd lret sub (bad) scas repz sub stos sub add jo mov and mov cli cltd cmp setbe insl ret mov push dec cmp jo outsl lret int3 test xchg sub ret xchg test scas sub jle dec es push shl lahf cltd movsl cltd mov add mov das push cmp in das (bad) js sbb int3 push loop mov add sub (bad) das bound bound jle xor insb mov mov xor sub pop fstpt jmp xchg and dec mov outsb mov or cmp clc and cli sub jmp jle cmp sbb enter fisubrs pop js in dec lea cmc outsb pop sti sub imul cmp clc stos enter sub imul fs mov push pop jl lock sub sti into sub adc cltd lahf or mov mov pop aas jmp out sbb stos push cltd dec jno,pt lahf mov jbe cmpsl fisubrs mov cmpsl imul imul push mov pop sub aaa sti push lahf xor seto insb movsl and outsb stos mov mov sub in mul addl fwait push outsl mov sbb lcall jge add aad cmp out mov mov xor aam std inc int mov mov pop fsubrs mov sbb mov sub sbb sub les insl xor rcrl nopl sub xor fldcw lods (bad) cld dec js pop lcall insl and fsubl (bad) mov aas mov inc xchg icebp or fwait ds push das mov dec dec loopne add cmp add cmp imul cmp sti aas cltd mov pusha in cmp xchg cli cmp pop adc fidivrs fsubl sbb lea and dec xor jb adc xchg dec xor xchg cli mov xchg or xadd pop push dec aaa mov insb sub adc push or sub cltd jno popf test mov pop fstps or sub lahf (bad) mov popf sub inc push sub das cs jae or cld sub push (bad) scas sub inc sbb sub dec adc and imul or inc in mov pop sub mov xchg or sub mov cltd jno dec stos mov sti ds and and cmp daa je mov push testl popa mov cmpl pop inc or mov lods and cli or test inc lods mov jge in mov add mov adc mov dec (bad) mov mov or or sbb out sbb or loop fwait jb pusha adc (bad) out rcr inc or add dec mov das pop lahf sub leave cmpsl sbb js mov cltd adc pop rcr test sub pop test shrl xchg sti inc call pop sub xchg jbe xchg sub jo push and pop mov mov add push cmc mov and outsb pop add nop ljmp and ret or dec jle xor mov dec sub mov jo xchg pop sbb sti insb mov adc adc (bad) adc insl imul call popa xchg sbb or lahf cmp rcr pop std jbe dec and packuswb inc insb or sbb js cld jnp jbe or inc pop outsl addr16 sub out dec mov adc js dec movsb inc cmpsb loop cltd push adcb wbinvd and icebp ds out adc sbb sahf mov fwait xor add add pop sub movhlps out ja (bad) jge push fstpt push (bad) cs add fsubrl imul loopne std or rcrl inc outsl call mov sub push mov test and xchg adcb call jae lods ljmp inc ss sub pop mov or and push rcrb lea adc or insl add cltd jl out sub xchg sub out push outsb test cltd lahf sub lahf bound lahf outsb sub ja nop adc sub sub add jo sub nop and nop popa push mov and or bound shl imull loop or jo cld push lahf sub mov outsb pop push aad or or xchg popa cmp sub jns sub pop sbb xor and and push bound das cmpsl movaps cltd jno scas adc mov jbe push movsb lea jbe push lods add stos fimuls test lock sub shlb sub xchg cld mov push sub (bad) xor repz cltd and and mov cs or push scas test bound mov cmp cmp stos add push jg mov es cs sub sub cltd outsb push or jb or wbinvd and sub fldt stos aas adcb dec lods sub subb pop push outsl jge insb push fs das js lods sub sti fsubrs sub push das and sub cmp call int3 xlat imul jge xlat dec lods orl xchg inc sub je outsb shrb outsb push fs mov subb sub mov cltd shl insl fidivs jbe out stos xor sub pop mov fistpll cltd push test daa cltd push imul and (bad) sub subb enter outsb adc push mov jle fs sub js bound cmp or sub fs enter pop scas cmp mov push sub in bound jle gs cs popa pop in xor out arpl scas and insl and shlb js lahf cltd stos or xor mov lods (bad) call or test sub loopne mov ds ds es pop sub outsb sub ss sub ljmp outsb sbb and push int lahf cltd xchg sub negb and sbb mov bound jb and xlat sub insl pop out push mov es and jo je adc add fs test sub fisubrs jl outsl repz dec sub mov cltd setbe bound fs cltd mov sub dec cmp iret imul push repz sub int loope int3 sub rcrl or adcb push and cmp cmpsb sub cmp adc push lods insb das loop,pn fs push pop shrb push or ja jnp ja (bad) or push and mov push wbinvd in and sbb lret inc mov subl push push into scas cmp aam outsl lods add or sbb insl fisttpl call or push jbe sub xor mov imul dec in dec xchg repz and jae pop je pop push add xor mov sub sub sbb aas out movsb xor cmp loopne adc outsb mov push sub imul cmp mov push mov adc lret imul push dec sub and mov lea imul and outsl dec cltd scas push or push mov or mov dec outsl adc push inc imul das loop,pn xchg insl xor and imul sub xchg or dec push outsl jmp and adc out push pusha in aas in mov call int3 insl add sub sub push lea mov inc sub sti push ss add inc or shrb xor cmp sbb in in popf outsb ficoml jae xor int3 cmp jmp shrl bound unpcklps das jl mov push (bad) lods sub int3 or les sbb lods and iret lret and lret shld ret sbb jg mov cs or in stos leave sub fwait insl fs xor mov int jbe cmp cltd jno fstpl lret push imul sti cmp lods and pop fldt sti xchg and dec lcall dec add aas and insl clc out cmp cmp dec pop push negl xor mov sub add ss cmpsl fs add outsb or ret fs or bts xchg stos jge xchg fwait int3 dec pusha push out adc xor jmp fidivrs sub mov rorl add pop rcl cmp das xlat push (bad) sbb imul sbb cld ds (bad) cld and mov lret fs scas mov sbb push jl sub xor bound das inc push in das sub das js and insb das into cli and das jne xor sub daa adc fsubl jb xlat adc sub and and stos popa push cmp cmovbe fsts adc adc pop cs sub sub inc int scas pop insb and outsb add sub loop bound pop or fidivrs and sub mov push addb cs push lea fsubrl mov sub mov data16 cmp sbb pop sub mov jle pop sub (bad) sbb fldt sahf sub das sub sub sub or cmc lahf push sbb outsb add fldenv sbb cmp pop sub adc cmp cltd push xchg push fs mov int mov jle sub mov fmuls mov adc sub sbb jnp sub in loopne mov std jp lret lods lret dec ljmp dec popa and dec or pop leave adc sub xor dec cmp or push sub sub stos sbb mov sbb sub js nop movsl das jmp gs xchg push ljmp or loope jnp popa and xor ljmp out cmp push jmp lea mov int ret jp fidivrs add adc jecxz sub aam dec shrb (bad) das sbb in push fildll pop aam aam cmp daa fldt mov sub push mov fldcw cmc shrb shrb inc cmp sub in sub das fldl das jle lahf fldcw mov das shrb cmp sbb frstor cwtl (bad) das mov sub xchg addr16 aam dec aam inc mov shrl add das repz fldcw pop (bad) sub sub sub shrl jns lret sub cmp das adc das shrb cmp aam and sub mov ret sbb das in cmp cs das mov cs (bad) add rcr mov das popa and aam rcr or sub mov fwait inc cmp nop jge in icebp loopne ljmp ret cltd jno pop (bad) xchg and dec sub mov cs and das jnp sub jge addr16 int3 dec sub mov fnstenv in xchg sub sti cltd lahf bound mov sarl jle out bound cltd sub sti fsubrs and js out mov cmc jle nopl out sub js lahf cltd sub sub lahf fsubrs lret push mov cmp outsb xor fsubrs and and sub inc xchg sub cmpsl cmp lds outsb sub jbe inc lahf sub js cmp fisubrs pop push mov das popa bound adc sub repz jl sub rcl test xchg leave mov or push sub out bound cltd sub xchg cs stos das and popa ljmp sbb imul stos out fs add outsb fs xchg cmp stos gs push sub (bad) xor lahf adc sahf (bad) stos and sub and fs insl fs sub push or stos and stos sub inc fs sub xor pop stos and jle or insl lods mov clc or loopne insl call cmp mov popf sub add or sub lahf xor push sub pop xlat xchg xchg daa addr16 cmp cltd lods sub bound jl dec jle cltd mov lahf cltd nop sarb mov sub and stos cs push mov jge sub jg in ds jmp cltd sbb daa cltd mov jb mov lods xor cltd xlat mov lods outsl or js lods and push cmp insl aas lahf sub nop popa and xor pop fidivrs aas push sub push lods or ss cmc outsb mov jle je imul jle lret mov imul popa push and imul sub outsb sub sbb push mov arpl xchg or adc or mov sub popa jmp call push imul daa or ja and xorl sub jmp sub xor and and push adc and cli and and and test icebp sub mov cltd lahf mov std lods mov sbb mov ljmp lret pushaw in lods pusha lea bound push jmp leave and cmp jbe insb inc lahf sub nop xlat xchg jge outsl cs daa sub push cmp cmp adc sar mov outsl sbb sub cs sub push into sub (bad) cs xor mov cmp wrmsr setg dec or fs scas sub jo or jno or outsb sub push cmp sub adc stos sub sub push sub nop and push dec lods adc and sub xchg (bad) call or pop call sbb das jle outsb xchg sub insl mov imul mov xor lods imul sub push or or cmpsl xchg pop push cmp sbb add push sub loopne stos stos std inc mov xchg mov or js icebp and adc or cs es dec xlat xor jle imul cmp sub sub mov adc mov mov fsubl iret fsubrs sub xchg unpcklps icebp sub repz pop fcom and mov jmp dec popa sub in bound stos sub and unpcklps loop,pn fidivs nop bound dec xor wbinvd adc xchg mov testb sub xor sti sub sbb jle mov popa and jne or mov cld pop cmp int3 sub movsb sub loop mov es xchg and pop insb and sub lret daa movsl int adc sub icebp and or pop push and sti sub cmp push jmp repz lods and out sub sbb es push outsb out pop lahf outsb sbb int cmpsl pusha iret dec out lret sti lahf in sub mov push decb lahf scas push ret mov fsts inc push les sub mov jg pushf lret ds push pop dec dec cmp push sub aas popa in gs jmp sbb sub fildll sub cmp mov or or pop push and xchg add pop sbb outsb push fwait and mov pop push lret or (bad) fsubrl sbb aas fs inc jmp xchg or sahf dec repnz popf lret cmp cmp iret sub sub pop in sub daa mov pop sub das xchg in sub add and jae push dec shlb int cmp ss pop sub cs fldcw imul push push mov lods cld jnp mov movsl cmp cltd push mov xchg nopl xlat daa int3 push insl stos or std mov test call push xchg add ror xchg rorb imul nopl das aam or sbb stc das imul mov and mov (bad) and xor push popa mov int3 insb sub push push sub ss push xchg bound sub in push imulb cli jl pop push dec add pop fimull das mov (bad) das pop fists jle or jns jne lods push push iret test lods push fmuls dec pusha sub aad sub pop mov sub fisttpll dec mov jg aas mov cltd lods popa cld fldt push cltd loop aas das scas lea sub sbb stos nop mov lret enter cmp sbb adc lods sbb addr16 or sbb addr16 and icebp push jp cltd dec sbb sub cmp and mov adc mov daa mov and daa cmp mov xor and (bad) xor dec sub imul enter push push outsb dec xor lea or mov mov push (bad) mov or int3 daa jle int3 sub loop daa jle popa mov nop xchg ljmp ficoms ljmp sub and lahf outsl lahf in sub in jmp xor xchg or or fdivs fs pop cmc fcmovu sub bound inc lret jmp jnp mov mov push call fisubrs fwait mov jp jle fs imul movsl cmp xchg xor cmp xlat jnp or sub (bad) call push in nop dec inc inc lods xchg jle popa icebp in das das (bad) idiv fs fwait outsb imul xchg sub scas ja rcrl pusha (bad) in cmc stos xchg jmp fs adc lret pusha sahf push shr and imul push mov add iret mov imul pop gs rorl stos xchg bt outsb sbbb mov jl (bad) insl icebp bound and sub imul stos fildll mov je stos js lock lahf outsb iret outsb pop dec mov mov jnp pause pinsrw sub cmp mov and insl nop jnp or int3 mov and enter fs xchg push cmp notl xor and adc pop mov (bad) outsb shrl add pop and out out loopne subb jp cltd and rep in lahf das mov and pop outsl in push pop add arpl movsb dec in bound add cwtl int3 fistl jb cmp repz sub addr16 add inc das inc das iret pop dec das nop std or mov pop dec sbb jl gs push stos in adc sub and negb cld mov jb cmp icebp mov push jb sub cs xor out sbb lret push dec sub xor and sbbl add sub dec sub out nop dec sub test sub xor jmp dec sub call (bad) xchg dec xchg out sti inc sub js icebp cmp push cltd push ss fs insb sub sub mov xlat sub jle addr16 lahf (bad) call mov jle sub or push cltd icebp push sub bound xchg unpcklps or loop unpcklps push pop (bad) xlat xchg js cmpsl mull fs lahf sub jl sub addr16 mov or adc nop setbe or xchg fidivs (bad) xchg fisubrs dec dec sub mov or sbb ja cltd notb sub sub and adc sbb sub das pop and in daa push add mov popa and adc jmp mul sub dec bound or mov jge xchg testl lret push sub sbb add imul xor lods popf xor stos cmc mov sub nop lods scas xlat xlat iret cmp das out cmp (bad) cmp int sub stos bound js imul int3 cmc jle push pop or wbinvd outsb insl das bound and sub lret xlat and jnp sub popa push mov bound fwait std repz lods jnp ljmp jb push add pop or ds punpckldq push push bound xlat mov xchg bound or mov mov stos and stos sub xor sub sub imul pushf jmp xor bound sub lcall or adc dec outsb and bound (bad) (bad) js sub js jno sub bound das bound xor js bound and sbb adc wbinvd out jnp loopne xchg out (bad) xchg pop push sbb (bad) push fwait sub fsub wbinvd cmp xchg pop and inc cmp sub add ss inc sub imul and xchg cltd rcrb pushf stos mov xchg call adc sub bound test imul sub pop sbbl cmp lret cmp loope cmp lods adc popa and push xchg insl inc bound push sub insl ds lahf lahf rcll jle jmp jmp cmp imul outsb mov insl xchg cmp push (bad) sub jne outsb pop sub add arpl test outsb imul stos ljmp test imulb lahf outsb cs or or lock sub sub lret xchg add mov xchg add cs push bound insb and pop out jns push xor pop imul xor and or cmc outsb ja sub cmp imul insb sbb lods fsubl mov jge and pusha fsubrs outsb mov cmp pop imul cltd dec or add sub dec or imul aaa or sbb dec das lods sbb push mov sbb out dec das jle xor sub push stos dec das jae mov mov mov mov cmp cmp bswap cmp nop popa and lods xor (bad) xor nop pop int3 es jmp sub cltd sub lds popa and lahf fdivrs or adc and mov and xchg cld mov fmuls shl sub or test outsl fisubrs test xchg nop sti mov loop mov and xor dec out mov sub (bad) or dec jle xchg dec mov outsb xchg fs data16 push shlb nopl das add mov imul cltd shl in xor sbb int3 sub jno or cmp scas pop pop test mov pop and push push and push mov dec js bound insl or mov cmp and cmp and jmp dec sub out pop xchg cmp mov daa lahf mov mov or sbb insl xor mov add ss js sub movaps sub insl sub fs aaa (bad) sbb push push repz lahf mov outsb sub mov sbb lahf rcrl orl cmpsl lret and jmp stos or popa and enter push xchg jmp lret sbb mov push int push sar sub mov (bad) mov loop mov (bad) test mov das mov cmp outsb imul outsb arpl fsubrs xchg fsubr push das mov mov iret add xchg rcll jnp outsl lods sub (bad) ss insl sub bound or movsb dec aad in or sar rorb sbb std push dec sub xor xchg mov in pop push jl ljmp int3 insb lcall sub lds pop sub (bad) pop sub nop xchg mov pop add imul xor push lea sub cs inc ljmp imul sbb nop jb sbb fs scas adc or sbb fmuls stos fimuls pop cmp sbb in popf push push sub xchg std addr16 aaa lahf outsb dec jle pop jnp gs cltd (bad) sub and push or insb jl shlb add sarl sub wbinvd ss imul jo mov mov bound jo ljmp (bad) sbb dec dec jecxz pop dec fstpt testl pusha push pop sub pop sub pop jns js xor jmp or xchg cmp fisttpll pop mov pop and fisttpll jns fimull inc dec (bad) mov jge sub stos sub loop add inc push add clc test sub adc xchg sbb and sti or imul lea sub shrl (bad) sub (bad) in (bad) push jnp pop aaa sub bound sub pmulhuw push lahf push sub or or mov and dec sub call inc lahf daa mov xorl and sub and sub lods pop es in mov mov sub and (bad) gs (bad) sub inc sbb xor push enter mov pop add stos cmp jo xlat mov sbb cwtd lahf sub std sub fimull pop les and imul push jbe sbb push push mov test cmpsl xor test jno pop repz lock stos or sbb aas frstor sbb sub mov clc mov ss add or xchg dec cltd sbb sbb xor nop dec mov cs and dec and popf sub mov push int (bad) dec sub sub mov mov lcall movsl pop mov sub jmp cwtl mov (bad) adc and sub push pop and lret or lods outsl mov fimull xchg xor or enter int3 es sub sub jo dec sub loopne sub sub sbb xor pop orb sbb and repz out pop addr16 and rorb sub stos jge or gs popf das sbb mov stos and insb xchg fisubs fildll xor sub (bad) sub xlat sub shrb pop clc shrb cli mov xchg sub add popa sbb ljmp mov push sub add sub das sub mov in mov addr16 or repz nop adc daa pop sbb or sub sarl imul cmc adc push xchg scas sbb xor fnstsw dec xchg xor stc jns and or sub (bad) insl push dec je jae sti mov cmpsl cmp sub and mov insl addr16 add xlat sub imul insl or loop js imul bound sar dec js (bad) sub popa and addr16 jae addr16 das xchg mov add in addr16 cmp or sub sbb addr16 or add stc xchg imul std push xchg pushf dec sub sbb std xor loop xor push cli sbb cmp pop or xor dec frstor sub test sub das mov outsb dec in push xor add dec sub (bad) das push mov mov repz and test adc ljmp cmp (bad) leave and mov cmp push and fstpt in xchg sub jl jge mov nop icebp jle outsb cmp js bound jle fs adc ret sub xchg xchg push inc cltd lahf std mov imul out and clc ss lock and fbld addr16 lahf sub or xchg or bound stos (bad) sub cmp adc nop das inc (bad) lret and fs xchg dec fs sub cmp xchg add or push cvtps2pi (bad) pop cltd lahf bound sub je bound fs js,pt or daa iret das xor outsb inc or lock pop rorl push sub mov cltd sub sub sub sub sub push push mov cmp sub repz div dec nop jno sub rolw inc cmc ja mov lods aaa (bad) adc dec mov stos pop cs add cmp push int3 add pop fs xor fwait scas mov or adc cmc or test das ja sub xor or (bad) xor insl xchg push sub out jl in xchg pop sub rorb sub loope sub mov lahf mov push sub jl sub jmp das sbb outsl and sbb jg lahf imul jg insb or xchg add or sti scas inc int xor wrmsr ret das or sub clc jl aas mov scas jmp prefetch imulb cltd lahf in inc pop adc in ds sub imul lods sub inc in and repz les push cwtl sub mov jmp icebp iret sub movaps fsubrl and imul imul (bad) std push add or fs movsl lods outsb and xlat jmp pop or add sbb pop inc xchg sub lods lods pop or int3 lods pop xor lock pop adc push cltd insl mov or add cltd sub int3 popa push jmp or pop sbb sub js icebp push jnp push push jmp sub sub stos arpl sub ljmp lods mov mov stos cmp stos jmp nopl and mov loopne xchg dec xchg out (bad) xchg pop mov mov jo adc cltd push (bad) push fs das sbb sub mov lcall imul cmp dec sub clc mul subl adc mov in popa fs sub loop cmp int dec jmp sub testb sub cmp fisubrs inc sub outsl shrl adc imul imul or sub jno sub dec sub add and sub movaps jnp push jbe mov dec sub sbb sub sub dec sub movsb int3 xor mov or test sub stos das and jne je and and data16 nop cmp mov lds fs mov and sub mov out adc push jge push imul mov fsubrs push or outsb lea xchg fisubrs nop add mov xchg es cmp lds insl test or or sub mov pop lahf scas pop cmpsl scas mov stos sub sub scas ret or and es lret dec mov xchg pop wbinvd pop add mov sbb js lret cltd xlat cwtl int mov jmp aaa cmp fisubrs xchg push cmp imul push mov push adc cmc outsb sbbb leave lahf stos cs lods and pop insl in jge sbb das dec inc or push subb push dec lret cltd lea pop mov gs sub cmp and mov call jp push pop subb (bad) js push jmp das pop dec jle,pn orl and or or jmp cmpsb mov dec pop mov or ret sbb and insb mov xchg jbe dec mov jo daa shrb fmull adc push pop dec test push sub lds or lret into scas stc jnp pop test push ret or xchg cld mov mov inc cli mov stos jbe bound sbb and xor (bad) adc xchg test mov or or pusha dec inc mov jbe imul lock sub nopl push pop imul lock sub fnstsw test pushf and ss xchg cltd add add aas insl cmp and dec dec add inc add sarl or minps mov cmc or or pushf lods mov ss add mov pop es dec fisttpll das cld int3 mov repz sbb jge sub mov nop movsl insb push or incl ficomps pop cmp (bad) shrl jge cli sub les data16 pusha mov stc sub dec lds sub and push jp xlat or fs or nop cmp inc insb sub cmp or sub js in or sub es lods rcll adc (bad) push push enter das jbe mov aaa mov outsb and pushf sub sub jge mov dec sub lods movsl or out pop sub mov dec rolb nop lret cmc mov and jp out mov (bad) dec pop push hlt lods sub ret daa int3 mov aam xor and jnp adc insl pop cltd lahf mov jl daa movsb mov shll mov push fsubrs mov add mov sbb imul in cltd fsubrs or mov fsubrs or bound test jl cmc sbb mov in lahf cltd shll (bad) and mov jns or push inc jmp repz sub xor in sub sub fwait xor sbb sbb sub sub add fmuls adc sub pop add xchg sbb dec scas sub call xchg int mov cs aas adcb fs mov aaa pop add xor sub mov mov and push pusha in pop push addr16 sub sub popf sub fmuls and mov outsb sub add jle add dec pop lret mov jmp cltd dec in jno bound mov stos mov xorl sub iret fmuls mov cmp add inc std dec or push jbe popf addr16 jae fnstcw sbb repz stos push je sub aas test dec fwait cmp adc or int3 cli ds mov das lret sub sub insl movsb push aaa xor and sub insb scas sub fsubrs inc (bad) imul or fsubl jp xchg dec xor cmp cmp clc cltd cmp bound mov popf push jnp in or stos popa in mov mov lods cltd jp mov outsb dec jle or mov inc loopne sub add add xor jbe ficompl ss int cs sub jge and xlat jge push add xor xor push ljmp sub xlat xchg movsl mov repz adc (bad) out sub ljmp js cltd fstpl adc fs jmp ss xchg addr16 push mov out sbb xchg xchg cli dec sub or dec or push mov push mov mov push popa add sub sbb fadds jnp sub mov or das mov outsl popa cmp mov loop das icebp or pshufw cli std pushf adcb sub repz bound leave out mov xchg xor add sub test cltd lahf or lahf sub loop repz and mov sub sub lahf cltd syscall pop outsl mov sbb lahf xor sub fs sub packssdw sub and cmp out bound jle fs fs fs insb in xchg cmp bound xchg inc (bad) ss gs lahf cltd popa and push sub mov sub adc and sub sbb js xor jle pop sub popl repz imull mov mov bound cltd sub outsb scas fs in xchg push rorl wbinvd sub gs arpl lahf outsb lods add and repz mov sub jle js sbb and aas nop mov sbb lods and push in and sub sub cmp xlat cmp jle add fsubrs stos bound fisubrs cmp xchg stos js push mov dec or or or sub fs aas sub stos cmp cmc mov test stos cmp pop mov sub aas sbb lods in mov push (bad) gs and lods and jle or mov inc jmp add out out outsb outsb stos imul scas cmp adc pop sub cmp pop sub nop and in sbb jmp dec insb and xlat sub lahf outsb xchg fs sbb push outsl inc sub std gs cltd lods push cmp out pop push shll cmp push outsb adcb test mov shrl dec js xor mov das outsb insb subl add sbbb xchg cmpsb cmp push xlat imul xchg lods and lea mov and outsl ss es push imul es test xor sub lods test lods subl ss stmxcsr cmpsb push insl outsl add push test imul in test and cmp je lods cmp cltd xchg je (bad) xchg cltd and sub test stos adc movsb jmp push arpl add push jge mov (bad) sub sub dec lahf sub mov scas inc mov icebp push or lds mov mov stos es adc pop xchg mov loop dec cmp xchg rorb nopl in sbb and pop enter sbb adc and sti xchg or sub out fsubrs jns popf cmp nop sti int3 aaa les fcompl mov xchg jo imul dec loope sub push les push dec sub sub pop mov push stos or out scas jmp inc fldt shlb jbe dec das fs outsb push sub mov xlat aaa das jmp xor ss push cmc rcll sbb clc ss imul xchg or mov test sub mov sub sub pop int lea dec xlat and jle or and imul cmp insl push mov bound xchg jp cmc sub xchg shll lea shrl sub rorb sub les sub sbb ror cltd mov sub int3 fisubrs jge in outsb jnp fsubrs lds adc (bad) std ljmp in stos mov mov dec cs scas push mov mov ret es cli daa imul imul mov push cmp mov lods pop xor enter das jmp pop fwait ret cli sub sub es jne sub dec sub fs cs or cs and call in nopl push lret cmp sub xchg pop or or stos in cmp nop lret lds and rorb dec pop cmp aas jmp sub in xchg (bad) fs inc lods inc sub insb leave mov pop xchg stos and das std push cs popa and adc pop rcrl or pop cltd xlat pop js inc movsl je scas sub jle inc clc ss sub sub jp lods and movsl arpl xor sub stos cltd out jle lahf outsb adc int3 cltd lods xchg or cltd inc sub jo sub insb sub cmp mov or mov and mov dec and jle ss cmp mov imul pop xchg jle cmp inc push push inc cmp das and cmp in sbb nop movsl pop sub lcall in sub lret sub das outsb mov cs daa test push cmpb test jg popf inc jl sub fs sub es mov cltd aas pop adc sub sbbl dec sub sub push sbb bound pop sub pop sub push sbb push pop sub sub das and fldenv (bad) cmp test or outsl inc adc pop pop mov testl aam pop das cmp dec addr16 pop mov and lds sbb mov sub nopl sbb out cs popa push das or push test cltd (bad) sbb lods add xchg dec xchg out insl add lahf outsb pusha mov int and pop dec cmp sub xchg push sub add adc cmp cmp fidivl bound sbb daa (bad) aas lods sbb dec sti sbb scas push sbbl xor pop jns dec mov or (bad) and and push sbb pop clc movq gs popf xor lahf sti push out push sbb or inc push dec das push push cmp lahf sub sub mov jo xor cmp and stos and mov or xchg insl cltd push sbb mov sahf jle scas push cmpsl aas sub lods xor cltd insl dec xor pop push mov and imul sbb nop cmp push stos fs out xor fsubl in sbb dec cmpsb test js add int insl sub clc sub cmovl sub shrl fldcw sub or and das jp repz sub lea (bad) outsl sub jnp pop in cmpsb aaa jle cwtl or xchg aas clc pop mov inc dec psubb fwait mov sbbb and jmp lea pop jb dec sub rcll or jge mov or outsb inc jns add add punpcklwd std orl sahf or ss pop add sub cmp xchg push or sub pop dec sub outsl in sbb test mov imul movsl outsl adc sub jmp popa cmp fisttpl scas imul push test adc mov jge lret sub (bad) fsubrs outsl mov out outsl push fisubrs cltd sub (bad) ret enter and sbb sub outsl scas cmp mov ror outsl cld sti sub gs imul jge stc push xchg movsl cmp mov mov ret or mov mov js mov imul mov pop push hlt mov cmp cmp lret in daa push jge ret sub push cmp loop lcall sti or pcmpgtw std jae cmp and jl dec sub and jns lret and outsb xchg cwtl cmp pop rcrb xor cwtl cltd sub (bad) xchg jb test (bad) mov mov sub lods cwtl mov sarb jb fists mov add cmp xor pop jbe cmp mov loope ret jo pusha jmp sub lods mov testb jns mov std mov insl mov and sti push fisubrl dec sbb sarb mov sub mov mov fbstp pushf lret jge cmp lahf xchg lahf mov lahf or sub cltd lahf sub lcall in bound ds push cmp adc daa sub outsb leave mov adc sub in sub adc sub sub sub in sub les xor daa pop sub inc (bad) bswap (bad) sub sub and mov mov xlat js,pt out xlat mov lret sub xchg dec xchg out sub (bad) push pushw outsb mov dec adc sub sub bound lods lahf clc ss xor xchg stos daa shrb jmp xlat lods push sbb sub add in mov pop loopne adc adc sub ss mov sub jle xchg sub and sub jmp pop cli stos xor lods mov fs sub cmc xlat pop js cld stos outsb test sbb cmpsl aaa sub sub outsl or jns daa ja arpl mov mov mov jp and cmp outsb push sub mov insb sub add and test lock clc das sbb outsb cmp sub mov jl push stos push xchg push nop and xchg cmp jp int3 lods addr16 ss fs cwtl js nop outsb cmp sub movsb mov jg in daa arpl lods cmpsb jle jge lods jle push adc shrd adc or fisubrl popa jmp cmpsb daa mov test aas mov add in sub pop xchg daa mov in punpckhbw in jns out nop cmp jmp imul and dec js sbb les fs stos popa stos imul jmp lret cltd xchg sbb aaa cltd push push (bad) fs shrl outsb add cmp rep imul sub dec js in clc xor in bound push fnstcw scas add push daa jmp jnp sub cs pop sub xor and fs sub ss ljmp xchg lret inc jmp das mov fs je stos jne,pt xor repz jp jle outsb adc pop out insl cmp test inc out inc pop fs inc xchg imul mov mov jl add insl cs and sub push sub mov lods jge leave js int3 sub cmp sub sub and das pop stos dec fs ja dec pop or call pause movsl or das stos dec rorb sbb sub cmp dec addr16 sub pop aad int mov lret or les or mov mov push movsl inc or mov xlat out (bad) das xchg lret bound insb adc pop cltd push shlb xor cmp dec insl xor sbb sub inc or notl and pop test scas xor ljmp xor or xor cmpsb mov push dec sub mov rcll jmp lret lods sbb sub outsb ljmp pop and pushw in cltd lahf sub dec mov cs mov push repz das and mov mov wbinvd enter insl sub leave push lods push or jle dec imul lods add ret lea ss sbb jns jns bound call das filds test mov cmp dec jne (bad) sub lahf mov and xchg int3 cltd jno dec sub lret nop pop int3 sub int3 pushf xchg addr16 fmuls lods sub xchg mov ficoms das sub adc call or shlb cltd adc fs nop mov sub mov out outsb aam cmc outsb lret repz mov sub nop leave repz repz stos shr inc ljmp push shll scas repz outsb aam cmc xlat aam cmc stos push xlat adc test cmc ss repz outsb inc test dec sub lret cs sub repz nop mov in stos test gs outsb stos xchg xor and sub xlat lods (bad) push testl outsb lret ss dec clc ss rorb dec sub and call repz daa lahf fs sub bound andb mov scas pop lea and sub repz or out repz mov (bad) xor mov cltd lahf insl add gs or xchg xchg ljmp jno pop sub ljmp xchg lea xchg mov lea adc sub nop outsb pop cld sarl aas xlat cmc enter sub and in ror nop push sub stos and movsl in scas addr16 adc adc cs xlat ret outsb cmpb mov push mov sbb int push sub test repz mov or js mov cmc iret shll sub pop sub ljmp cmp arpl cmp sub sub and cld cs pushf sub add pop daa int scas daa jo sub nop das xor pop sub shr push sub mov mov cmp xchg mov dec sub ret jmp outsb and mov pop in sub or sub cmp mov pushl dec sub nop ljmp clc int3 and das mov pop sub and sub sub sbb ds mov mov mov in sub repz xor cltd mov sub outsb arpl fsubrs or fisubrs nop xor xchg mov push das sub mov imul jb xchg out cmc sub xchg movsb mov imul dec lods in insl nop mov sub jnp pusha xchg stos and xchg mov inc push clc jnp xor adc inc mov push sub enter int fistl cmc popa sub jle xor cld cltd jge or js insl paddw mov test std and cltd sbb xlat inc js or lods dec pop jp popa cmp stos inc xchg aas inc or cmc outsb nop jle lret jbe enter sub mov std repz sarb xchg js sub add repz xchg jnp fsubrl cmp dec out shrb push ja and mov and fnstsw adc das mov repz and mov fcomps xchg cld or xchg sub jo pop fs inc aam push sub call xchg mov pop push das arpl lahf mov sub adc mov nop mov adc (bad) in mov jnp mov push cli push mov lods sub xchg xchg push int3 stos (bad) sub imul sbb std add or mov jno (bad) inc mov subb jo push jmp outsb mov je outsb stos fildll cmp jmp push mov push fidivl xor mov jge add dec jmp iret in insl cmp mov cmp add jno cmc outsb xchg cltd mov cmp cs and push dec daa popa push mov and nop cli popa fisubrs pop in icebp aas push cmp test sti jno std scas cli cmp lahf and cmp or lret mov js add sahf push adc in xchg cmp insl nop jp lahf bound das lahf ja es mov and sub outsb xchg fidivrs sti sub mov dec sub and cli out stos out cs test sub imul cmpl inc jl cmp popf push aaa mov lods test sbb or or addr16 xor punpckhwd xchg (bad) sub sub in and js lcall movsl (bad) fldt in sub js,pn lcall sub data16 or sub imull sub sub sahf lahf cmp or cltd jno aad mov and sub call mov lret and jb push stos cmp ds cli sbb adcb (bad) cmp cmp in jno,pn fdivl jno shrb mov aas aas push sub cs or aas sbb sub popf test sub sub sub mov sub popf fsubrs and cwtl bound sub pop xor das bound test fs mov pop pop jmp or mov pop mov pushl lea icebp or fs and das sub test xlat inc das cmp sub push lret cs bound mov mov fcomp xchg xchg das push std mov cltd divl or loopne ljmp in and push sub or js lahf sahf lods cmp orl sbb stos iret xchg leave cmp sub ljmp test adc jnp lret lea bound rorb lods cmp push lds or repnz hlt call cltd mov mov cld sub add lret inc in pop or sub pusha push and cmp paddw mov xchg push arpl and sub (bad) fs and mov jle sub wbinvd notb nop (bad) std push pop sub sbb sbb lahf cltd sub xlat xor ror jle sub mov and stos sub pop js das sub jle nop sub mov test lods cltd sub pop js insb sub push and cmp js sub and jle sub or xor jle sahf das cmp jle sub pop js sbb sub js das sub jle movsb cs adc sub leave js sub sub js cs pop jle adc das dec jle sub sub test inc cli lods sub cmp and sub jle fs stos jle dec jle aaa cmc sub aas xlat js,pt sub shll jle sub mov fs rcrl stos sub cmc sub bound mov add (bad) stos xlat repz or adc mov lahf outsb scas pop lahf outsb test icebp push and mov stos and scas test lcall jns sub nop popa sub add lods and mov sub (bad) scas ja imul inc add sub lods and daa mov pop or mov jle push push cmp cs ljmp cltd sub insl cmc jle test or sbb xchg popa dec push stos scas stos insb cmp stos push mov sub or jle popa and sub cli jno cmp push outsl jmp sub js add sbb push sbb mov adc sub popa lahf arpl xlat out or stos imul pop mov dec jae bound inc repz inc adc sbb adc (bad) ljmp dec jle stos sub cs mov xchg imul aad stos pusha imul outsb jno popa and jmp loop push lret push jnp cmp mov push bound nopl jmp mov jp xor cmc outsb imul fs mov popa sub outsb cmp mov fs ret lods xor cmp ds mov int3 sub mov mov cs inc clc lea push pusha or pop leave dec daa cmp and push popf scas hlt int3 sub lret xchg sub jnp mov sub mov imul dec sub xor and test fsubrs push roll nopl jmp setbe shrl mov fs and aam xor ds or stos daa jmp and xchg push sbb add jbe push mov aas or sbb or push mov bound push mov jno or jae das enter pop nopl scas or and pop sub dec cs dec sub fisttpll adc mov lahf cltd or or or dec or into sub lods push addb add and push aas jbe movaps add sub cli stc out push insb lods and mov js and dec es and lret add shrb jle cmp sub push daa sub jle mov mov inc js xlat jnp xor cmc stos sub int stc jge imulb xor orb mov or inc sub orl adc imul mov ljmp push or and setg pop out int3 inc jl bound ljmp dec sub push cmp (bad) jg scas int3 pop xor and or dec push sbbb and push (bad) mov cmp lods sub (bad) bound cmp jge push pop int in imul dec movsb lret stos fsubrs lret inc or jnp fsubrs add (bad) cmp mov dec cmp dec cmp imulb jg cmp dec xor sti fwait aas enter inc sub lahf outsb pop sub mov cmc sub push mov jle mov mov xchg push jle fs je sub aas ret xor aaa in xor ljmp push cltd in (bad) stc mov jl cmp outsl in lea xor testl sbb mov dec jmp cs fidivrs or dec in xchg cltd shll aam sub ljmp push fidivrs cwtl cmp xor in dec ss add mov cltd cmpsl xor mov test das cmp loop lret repz int3 sub xlat and popa mov popf sub (bad) sbb repz sub xor cmc imul cmp std sbb mov stos sub mov daa jge lods push adc sar insl dec and sub mov in sbb sbb cwtl imul in sbb push dec mov mov and mov jge or sub mov xor sub sub outsl pop mov jmp cmpsl or mov aas (bad) and sub add push notb mov bound inc sbb sub mov out xchg pop imul cmp int pop sub js imul sti enter or or or (bad) sbb fldt cmp sub sub gs (bad) or fcom jnp inc xchg xor xchg xchg push push and sub fidivrs outsb fisttpll inc sub cmp jmp cld pop and add lahf jle aas lahf outsb or lret cmp fsubrl fsts dec sub mov push pop inc fdivrl js jb sbb mov je mov inc rcrl rclb jge sbb (bad) (bad) int push cmp mov mov (bad) std mov aaa pcmpeqd clc pop sub pop sub movsl sub andb or mov ljmp and sbb scas unpcklps in mulb mov cli jp sbb loop sub std xlat cltd or icebp xlat mov push lods pop shlb frstor add lret sbb (bad) mov and adcl or add and and and and adc push bound enter inc sbbb cltd fnsave push xchg sub dec xor shrl pop movsl popf das mov sbb enter mov pop mov ret sbbb das outsb adc sub (bad) sub pop rolb rolb push arpl add jp push add stc fadds sbb push pop pop filds mov (bad) pop roll sarb sub sarb idiv fisubrs cmp cmp cmp lret faddl pop jnp dec nop loopne cmp inc out test push dec cmp out inc sbb mov bound popf cmp popa int jmp sub daa mov fs outsb push inc push sarb and push xchg stos add in dec cs sub sub sbb push jmp sub push cmp cmp mov add cmp popa or lret nop and sbb fwait xor mov adc fldt xlat xlat jl loope cmp outsb or sbb jp dec sub mov push das mov sub ss xlat fldenv xchg imull mov fsubrl xorb sub in sub test and mov repz cltd xlat xchg fstpl outsl aam xlat daa jae mov and and fildl das shll fldcw shlb adc sub and xchg sub testl cltd xlat xchg lahf ds bound jle fs fs fs insb in add fs add inc sub fs push sub notb mov cltd xchg sub lahf lahf outsb adc xor push sbb cmp push in popa bound js (bad) das mov and sub lahf cltd mov orl or and inc mov dec sub outsb mov xchg in inc cmc jle ss cltd sub outsb lahf jle stos (bad) cli jmp in movsl sub cmc jle das mov cltd lods roll call sub add push cmpsb sub stos and sbb sub push or aas scas pusha xlat xchg stos insl and sub insl sub movsb add decl cmp push popa cmp mov outsb dec sub jne (bad) aas (bad) dec sub jo movsl mov pop sub stos and cmc rcrl sub push mov pop das and cmp cs mov (bad) bound push wbinvd outsb addr16 lods sbb stos sbb outsb sub cmp js lahf mov push jle jmp rcrl cmpsb in adc aaa lock push cmp ss insl ss aaa jp in or and cmp stos inc dec lods inc lahf outsb pop arpl sahf test dec jge jmp test push cs pop inc wbinvd ljmp jl aas sbb cmp inc or xchg push popa inc jmp int3 sub lods inc mov xor cmp adc xchg imul sub aas insb jp rsqrtps xor insb pop mov ljmp sbb jecxz fs in xchg nop push lcall sub lods adc stos adc mov imul push mov insl jo and mov cmpb and push lret push dec lods xchg bound cs mul fs aaa in adcb subb push and sub scas push stos cmpsb insl lods cmp in push inc imul fnstsw sub sbb int3 imul sub push or lea inc rorb ffree or insl jb or sbb fimull ds push pop xchg sub or das or ret or das nop outsl sub lea or or mov pushf lods dec in lods stos sub mov push dec mov or xor int3 ss fs jmp not sub mov popa cmp iret lea sub aam and push jbe dec push fs push and scas sub lret and pop push push inc dec sub bound cmp imul ljmp sub and nop popa push mov and sub loop testl loop or xchg cld cmpsl insb and mov iret (bad) ljmp cs sub xchg mov sub ds push mov adcb pusha and inc sub or cmpsl mov xor and insb add gs xor push push sbb xchg mov jmp jmp xchg inc rorb subb push dec cmp sbb stos cs sub push in outsb push xchg mov sub jl stos jnp xchg mov cmp add in insl in insb cmp in jp sub jno fs cmpsb xor sbb cmc outsb subb push outsl out (bad) in sub outsb gs xor lea fsubrs sbbl sbb es cmp cmp nop dec nop and or cmp cltd test fs cmp in and inc jns insb pop xchg mov bound sub cmovbe and sub clc outsb and cmp dec cmp dec cmp lods cs jo in jbe cmp ds (bad) pop outsb sarb sbb ret xor mov xor push or dec shlb mov aam fldt aad sub ds xor dec daa rcrb inc shrb (bad) add js,pn or sub sub sbb mov push dec sub insb pop or sti inc xchg mov jne and popf mov xchg and sub jno addr16 and pop insl fstps dec daa daa fstpl fistpl iret nop cli cltd sub setbe or mov jbe xlat fdivrs or dec stos pushf adc sbb bound into fs adc repz sub add das mov sub or adc lea lahf jle jmp cmp mov jne aaa aaa jle jmp outsb xchg xor push and ss xor lods cltd push mov xor push or ljmp lcall push outsb sub mov lret and mov fisubrl nop pop and int3 sbb insl sbb ss push cmp out in je xlat cltd mov fisubrs clc ss adc push out pop and push mov dec push sub insb sub cmp fldcw sub fisttpl imul or xor sti inc or push pop dec fildl test fmul sbb cs and or inc cli scas jnp aaa pop setne scas lock xor cmp imul fmull insb cmp mov jmp dec sub push mov outsl jl std inc add cmp pop and lahf jmp outsb lods cltd daa ja and push push sarl dec sub sbb ds and mov call fsubl mov jge or or imul in mov mov push (bad) sti fimuls pop push fadds mov add and imul xchg in or cli xchg push push cwtl stos pop fs jno sub jbe cmp mov cmp out das clc mov cmp push sub sub mov mov xchg push mov pop (bad) mov cmp pushl dec cmp mov and push test repz outsb scas imulb mov ljmp and lahf imul xor movsb mov jp push popf scas dec mov ds cmp jg or cmp push xor insb pusha call outsl syscall popf sbb push lcall out sub in std cltd mov insl lods add js sub das jecxz sub dec sub sub and call das jl sub call mov dec iret add sbb sub xor mov popa and jne cmc jl jge call mov fisubrs cli cltd lahf xor daa mov xchg mov mov cltd and (bad) xlat mov adc lret repz repz xlat and xchg shrb pop sub sub daa int3 cmp ljmp rorl sbb sarl outsb lahf call xlat imul inc fsubrs stos das aas sub add fildll mov xchg adc cmp mov or xchg or fistpll rcr mov push sub outsb or sub out aam sbb xor push fnstsw cmp add sub (bad) sub adc sbbl insb jns outsb addr16 xchg xor sub sub and outsb cli inc popf xchg lret das fistps sub cmp lahf cltd lahf bound adc das sub inc shl addr16 mov sub (bad) nop mov jp mov xor adc addr16 fs popa and out psrld sub xlat ds bound sub stos addr16 push mov push pop bound jo push movsb adc or xchg lret jmp sub push sbbl push gs mov out fs shll nop mov and bound std mov orb or bound (bad) std inc lret cltd lahf clc ss mov fs cmp xor js in nopl or mov jle nopl stos and sub fwait das bound pop mov pop lods sub cmp and sub inc sub xor insb test js sub (bad) lods cmp push mov sub stos imul jmp cmp pop lahf cmp sub outsb mov aas sub sub lahf bound add xor push sub lret mov scas push lods pop bound ss out lahf cltd xchg add scas xlat dec js call punpckldq push lods adc jmp cmp sub test js mov rep test or push jne stos and stos aas ljmp adc sub out push sub push xchg or add mov add lahf rcrl mov dec jmp das push pusha or nop das push roll in outsb fs or lock xchg loop cltd push push cmp fidivrs jle sub and push fstpl sub (bad) lock and fsubl stos mov adc xor xchg insl popa popa cmp inc sub in lea jae push lret (bad) xlat inc popa and gs cmc pop lods jmp outsb and and mov sub outsb imul cmp inc jno or adc cmpb dec lahf outsb in bound or cmp nop icebp mov mov dec sub lods xor or sub pop enter insl das (bad) insl in push sub bound cmp sub nop por addr16 stos sub mov das outsb pop sub push and sub push sub lahf stos adc mov xchg sub in xor or outsb cmc jle aaa jp in push leave sub js sbb outsl repz xor or imul push int3 add push fs jmp iret sub nopl cmp insl in or or lret jge push xchg out nop clc nop add mov outsb push cltd push das daa lods jb repz sbb subl mov int or mov insl shll int3 or add orl gs xchg ss mov imul sub orb sbb mov xchg sti popa lret outsb adc addr16 and sti mov cld int3 sarl or shl sub push cs adcb repz pcmpgtw rorl sub mov push (bad) nop rorl push jge stos cmp ljmp xchg aam scas gs arpl bound jle call add or push das xchg int3 into inc lahf outsb pusha ss and stos daa jp add aaa inc push xchg or insl add call cmp outsl inc imul (bad) mov cmp outsl cmp and outsb and adc or js dec adc in and cld lods dec or test int3 addr16 jns mov inc push mov test lea in and popa sub mov insb scas cmc pusha dec or pop repnz mov divl aas sub jb sub inc aam cmpsl or ljmp in and mov sahf xorb leave nop jg das lret dec xor das mov das imul or sub xor imul rclb nop push es sub nop inc xchg adcb out sbb (bad) lret dec gs mov mov int lret inc and or sub fsubr push mov cmp lea test jne xor adc popf adc test mov add sub imul das ss dec or in push and push lret cs push xor fidivrl repnz fbld adc mov mov jb push mov pop xor sub xor push mov sbb pop or sbb fisubl outsl insb cmp insl out nop outsb add push fwait (bad) xlat insl or push jbe or popa jecxz sub sub sti bound push lret push (bad) cltd lahf fistl mov lret and jo jg shrl std inc mov int inc outsb enter pop bound std cmp bound jp cwtl cld jno (bad) sub or sbb repz insb or test or cs xchg cmp sub or xchg psllw pop inc and ja ds cmp cmp test and pop wrmsr sub in jg dec addr16 test or sub or es or jp dec popf mov scas jmp je sub pop rolb das push popa das mov or outsb and int3 repz jnp lahf push std mov fs fisubrs in xlat dec dec sub lret sarb jbe cmp cmp sub fistpll mov mov aad xor cmp cmp jno sahf ds cmp test mov mov cmp daa sbb fs sub gs sbb mov mov xchg je jne cmp bound xchg xlat (bad) cmc shrl jle pop mov fnstenv or mov sub (bad) and sub das or fidivs int int3 mov xchg js fimuls dec cs je cli sbb std or pusha cltd lahf xor int loopne sub cltd mov wbinvd fidivs add mov mov bound ljmp ja in push mov adc lods pop push sub sub sub dec es sbb dec out xor mov in clc jl dec aad outsb bound into repz jbe repz bound sub sub or mov and and outsb in cmp je push sub cmp daa xlat sub xor call sub mov cmp mov js js mov mov ret in popf sub and stos sub mov bound shl unpckhps stos ss das mov mov push add mov movsb das movsl das outsb dec imul les cs jo or test sub es cmp mov stc (bad) (bad) sub comiss sub mov or imul fisubrs arpl fsubrs rcr sub mov cwtl stos sarl lret out xchg aaa ret add fstpl popa push dec shrl gs push std sbb mov xor inc in sub rorl lahf jmp daa popa cltd jno iret (bad) gs addr16 sbb sbb call xchg inc mov mov or and jge sub xlat dec popa sub cmc outsb or lahf pop sbb lahf stos pop sbb cmp insl xchg add and popa lock fisubl lahf cltd mov mov sbb sub sti subl lea mov stos sub mov fwait sub ja fisubrl or sub sub xchg xor cmp jle lods adc cs ss xchg lods lods mov cltd js nop rorl lahf mov dec es pushf sub leave xchg ljmp cmp and sub sub sub cmc jle xchg xor int3 pop sub bound pop lcall in lock pop fs popf or popf stos push xchg dec mov sbb cltd xchg and mov push xchg push outsb sub outsb lahf jle sub stos cmp mov sub jle and push mov ljmp sub pop daa or cmp cmp (bad) sub (bad) xor js nop add in ss xlat sub jle repz rclb pop out pop add jns sub stc in sub jle sub jmp cmp es ss (bad) xor js clc outsb or xor sub nop ss sub sub pop ljmp nop ss insl shll sub cli sub imul stos sbb sub mov sub mov repz fs dec lahf (bad) push insb lret ficoms test imul insl cmc outsl inc sub adc mov js cmc outsb stos stos adc cmpsl cmp add lahf cvtpi2ps or lods sub add or nop rorl cmpsl mov lods adc sub sub movsb repz je stos sbb and (bad) jle mov addr16 lahf lahf sub lahf nop dec cs sub stc and cltd lahf adc sub sub sub jmp sub scas out popa test sub inc gs leave ja lret xor xchg stos add inc movsl lods mov stos stos js push ljmp stos lret push sub pop data16 sub jbe mov das out sub scas xor pusha in add out nop cmpsl repz jle stos xor or xor test jmp test xchg xor mov clc stos mov das mov sub xchg push repz mov or dec pusha or lret addr16 js notb wbinvd cltd int in cltd lea sub nop bound cmp adc sub add inc xchg mov mov cmp or xlat jmp lahf jle push jne mov popa lock pusha jmp xchg adc ljmp fs sub sub xchg mov lods xchg push sbb sub jmp jnp daa sub xor cmc outsb sub (bad) lock dec mov in adc mov packuswb cltd mov mov daa mov or insb mov rorl daa or dec movaps outsb cmp or (bad) clc ss cmp cltd lea mov xor sub xor dec cmp and sub pop and push es or jge inc and subl push es jo sub inc and es ficoms movsl nop outsb outsl mov xlat xlat in push mov imul and jecxz and in mov push jae lahf cltd mov xor dec outsb sti insb insb insl add (bad) leave bound mov lahf stos jae sub xchg out decb nop add push dec inc xchg popa sub popa push aas andl dec adc sub in xchg call push cltd push fs das fs arpl lret ror push ss aas adc lret mov wbinvd outsl das mov lods add ss push cmc adc xchg outsl ljmp sub cmc mov loop adc and or push sub xor test mov dec dec mov push int push outsb sub lret and clc outsb fisubl stos push in dec aaa or fsubr icebp imul xor dec or xor dec lods sbb dec sub push imul outsb xor ljmp sub cs clc ss dec dec jg pop push dec fildll std and pushf sub sbb cmc cmp (bad) in sub insl or push cmp rcr test outsb xor pop sub cs adc cmc outsb cs xor cmp out (bad) sti (bad) pop or jmp outsb lods (bad) push sub lods xor movsb pop sub lret sub or dec and and cmp push shll sbb jae outsb iret or sub fimuls and test sub or jmp sub out sub std cmp cmp repnz (bad) cmp sti inc cmp cs xor stos xchg or lods das int3 lret xor sbb dec xor testb fiadds jae je or or pop inc mov cmp and stc sub push je je je je fists int bound cmove lock or or imul insb js xor aaa ret sub outsb shrb adc lea cmp mov mov mov cmp aas das insb mov sub mov out sub sub xor ljmp push cs ss lods das pop insb scas das data16 push mov ljmp dec sub lahf arpl popf add cmp xchg lock ds cmp sub call or out das or sub sub sub clts jmp or mov and or xor into arpl lret jo xor lcall fcoml adc bound or sub iret cmp or sub or sub dec sbb sbb or lea ret pop sub popf or push cmp lret and cld paddusw cltd or cmp das mov mov xlat xchg repz pop or cmp add jmp or sbb testl arpl test mov cmp stc sub gs cmp (bad) aad outsl (bad) iret das insl (bad) fnstcw sbb fdivrs cmp sbb addr16 pop pop sub outsb fs or ror inc in mov in in in in in pop loop push mov rorb aam push or ds cmp rorl xor or fisubs lods cmc ss daa (bad) or dec mov sub pop das test sbb sub xchg fmuls jnp outsl shrb pop lahf sub pcmpgtb das das or repnz sub cmp push lahf lods add sub pop ljmp sub in push call sub push scas xchg push sub sub sub push xchg push in jno out sub sbb popf sbb in pusha and sub or sub sub add xchg sub je cmp jge cmp cmp bound push xchg cld cld mov cli and or cld jo sub addr16 xor sub jecxz sub outsb cmp or sub sub outsb std stos cmp push stos and xor jl sub push sub mov sub jecxz stos sub nop nop sub xchg mov es cmp sub xchg (bad) fs inc call repz xchg sub popa fmull imul bound mov adc xlat js,pt (bad) cmpsb (bad) dec jle sub test sub lahf cmp xchg imul mov jl lods pop xor int fisubrs mov fs sub fimuls insb addr16 and lahf lahf outsb pop sub repz lods sub call subb push or mov adc cs cltd sub cmc and mov sub daa outsl or sub sub sub daa or in das outsb insb cmp insl lret and shrb sub sarl mov aas call xlat cmp sbb sub add imul push fs xchg nop cmp bound jno mov or mov cld repz ljmp or das ljmp add cmpsl or or outsl insl das push xchg push cmovne in jno xlat out add aam fs stos adc add jmp push mov mov nop sub out pop fs call int3 clc pop xchg dec sub pop xchg xchg push sub lahf outsb mov push aaa mov sub fs ss ss jmp jnp jmp stos jno imul nopl nop in or pop and cmp sub dec cltd cmp in scas and insl and call and ss mov test lods mov xor push insl (bad) push sub push hlt ljmp call pop mov out cmp cmpsb nopl bound push outsb std fisubrs inc nopl mov scas sub mov and sub das push nopl or imul sbb add sub or in imul into add and mov loopne push push (bad) sub sbb lahf sub push fildll wbinvd les jge cmp cmp push xor lods ljmp jne xor jp ss and sbb mov mov sub sub fwait or sub push and inc and fs mov sub cmp cmp sbb add mov and les dec push and push iret cmp cs enter mov mov cmp lret sub dec sbb and shll stos or daa or sub lret outsb cmp jb fs stos or stos and and pop mov dec and dec and and pop dec and dec das repz push or push lahf outsb std mov and jmp jmp xor or push cmc outsb cmp push loope sub clc pop bound push push dec and lahf outsb imul or mov cmp pusha icebp call add dec sub xor out jo insl mov pop fldcw sub mov jbe aam mov push out sub jnp sub lock and andl sub in fs outsl bound push sub cmp xor mov jg adc lea or outsb int3 xchg mov outsb data16 mov insb sub mov clc ja ficoms mov cmc rcrl jle fisubrs clc outsb rolb or xchg or int (bad) dec lahf outsb ljmp push das gs cmp inc push fsubrs and and dec add scas add sbb or ret mov and sub subb mov lods and add and xchg dec sub in and mov dec daa (bad) and lret xchg cmp cltd fimuls push pusha and push fstpl xchg jb jge std jg or and or in and jge jg pop xor bound push int mov cs vpunpcklwd sub lret inc lret sub fs mov push insl icebp sub mov lea cmp sti das push xor std das lahf outsb arpl lahf outsb and or ljmp sub in push jle or xor jo or ljmp dec sub and sub or or mov pop sbb sub sub outsb jl mov push daa mov cmp fs sub add mov or lret push push pop and and jmp cld in mov sbb clc daa ret sub push adc add fsubrl push and sub xchg xchg jge mov pop xor cmp cmp (bad) push into cmp jp pop sub (bad) cmp imul aas dec stos or dec xor and sub insl xor cmp stos cmp cmp mov adc mov mov sub mov test and xchg cmpsb sti and sub ret mov leave (bad) wbinvd xchg xor dec int3 dec xlat ss dec sub and and push dec jnp in mov cmp mov imul cltd inc test sub outsb nop mov sub push sub fsubr rorl sub push xchg insb sub and (bad) mov popf xor dec das in divb outsl xchg scas cmp cs mov cmp cmpsl insl mov (bad) fstpt lret cmp adc daa mov daa mov sub scas cmp mov cmp cmpsl jg push sub sub xchg add and dec outsb mov push or shl out push shl in insl fsubs cmp sti sub pop fisubs gs cltd popf cmp lods jge mov sub outsb mov nop mov sub lods push sub mov ljmp and xlat jo das mov popa aam jg iret daa lret cmp push sbb add xor insb add inc jg fsubr push xchg (bad) or xor jmp sbb cli fdivrs clc outsb lods sub mov cmc sub jnp cmc outsb mov xchg push and sub (bad) lds or leave jne jne dec mov jmp mov jne fdivrs cmp int3 test lret inc fisubrs loope daa jnp pop xor sub pop sub and sbb das test or jl add lcall aas mov int3 cmp push mov es sub out sub or jp cmp ljmp cmc sub addr16 outsb scas fs aam xor das (bad) stos and and and mov jb sarl cli popf sbb punpckhdq rcrl or mov pop iret adc mov xor xor movsl lea inc cmp sbb aas cmp sub insl cmp mov sarl dec xor push je pop (bad) pop je sub stos nop push dec or ljmp cmp sub ja cmp imul xor sti add nop jnp sub or cmc lret aad fsubrl imul shrb in dec and or test popa push xchg out rclb ficoml pop lret sub gs and xor sbb push mov jmp push jp and mov fwait inc ds push jns mov sbb and ds sub js,pt (bad) lret and xlat sub in fisubrs lahf mov loopne mov outsb adc push in fsubrs cltd push sbb outsb lods fs push sub mov push mov addr16 sub fimuls lods lahf sub nop fcoms das loopne adc adc jno insl fidivrs addr16 sub fisubrs xchg rcr jno shlb jg sub sub or or cmp sub adc ja lods sub dec sub or int3 popa xchg dec sub or xchg nop or std xchg setns sub push mov popa jmp das inc sub sbbl and fs sub scas (bad) xlat scas jp popa jns stos jp aam jp sub mov popa and and fisubrs mov bound popa push fsubrs pop stos das mov push sub cmp aas mov and lods pop sub mov and mov daa and stos and ljmp in mov es cmp fdivrp mov mov jp and shrl sub addr16 out sub mov sub and sub xchg mov stos cs ljmp cmp sub mov sub fisubrs xchg jmp or xor stos inc mov insl xor jnp sub sub fs fs xchg bound sub ss das or xor jle sub adc jmp das mov mov xchg mov push into popa and sub arpl sub push xchg xchg and push call jg sub es cltd mov in mov sbb add cmp jns das mov fs icebp xor in or roll and or jmp cmp mov xchg scas push sbb jbe sub mov stos lods test fidivs in aas out popa dec xchg test push fs test adc sub dec sub jp sub push int ljmp lret jp push (bad) sbb push jmp mov sbb das addr16 outsl bound sub jecxz mov gs sub dec add aad sub add jns or lods sub or xor mov inc push addb inc mov cmp es xlat dec cmp and (bad) bt sub sub arpl inc scas cmp cmp cmp sub bound mov int3 mov mov mov sub sub inc in fs ss sbb sahf lahf cltd lret mov insb in gs lods dec js in popa sub int mov and sub push sub add or lahf lods das dec rorb mov mov dec and nopl lahf insl lahf push lret sub adc push jb das or and pop push scas das cmc icebp mov call test sub sub and movsl mov mov stos and and lret and sbb inc lahf addr16 ss outsb inc outsb orb pop cmp sub mov adc mov jmp imul pop sbb dec imul outsb test adc js insb js nopl sub daa sbb push imul ljmp imul xchg mov fs adc sub outsb sub daa (bad) lret xlat imul ss sbb imul sub push or leave xor lret bound and ret aaa outsb mov mov xor test js nop jb or cltd int3 sub imul xchg adc adc call sub jnp sbb cmp mov cmp sbb ret and std inc sbb movd mov andb cmp lret push fs xchg ljmp fs aaa xchg dec adc dec jle out push ret xchg repz out repz into and (bad) sub mov cmc fs sbb and jbe fwait daa jmp pop jl sub fwait or bound cmpsl js cmp outsb std cmp sbb fs test in sub dec jle sbb dec xlat mov cld sub aaa mov imul push lahf mov and push inc jge push fbld scas push insl xchg test aaa xchg xchg insl xchg jmp cmp mov xchg nop cmp add lahf mov fmull pushw sub jg lods and cmpsl movsb stos cmp dec sbb repz popf es xor in es sti sub jle cs cmp push scas mov sub push xchg mov stos cs push fwait cs movsb stos xor das stos push outsb mov das sub and loopne stc popa lods and jnp mov inc outsb mov jp sub xchg int3 cmp sub sarl mov jb outsb fsubr cmp cs movsb dec sbb into pop cmp push add push ret lret sub scas sbb mull stc push cmp sub cmp push fistpl test cmp fdivrl xor mov mov dec xor push xchg outsl das add sub js xor push call popa cmp lods lret das mov cmc jg cmp push lods pop sub push jg dec in cmp lss pop push imul or xchg add sbb ret jg push cltd cltd lahf mov sbb mov and sbb sbb dec mov pop pusha stos sub insb or sub jmp push movsb in sub sbb xor and push mov cltd es aas xor je scas cmp mov cmp or js sub repz and or push cmpxchg sub and mov and and mov add mov and push xchg xor xchg push cmp arpl in sub sub jb dec subl (bad) mov sub or push fidivl push pop push fimull test adc movaps stc adc or dec cmpsl fwait lods cmpsb mov sub fnstsw lds sbb mov stos or adc jb inc cs ss insl nop pop das aam btl adc xlat xchg mov fwait pop aas ljmp rorl imul sarb in dec xchg and inc lahf outsb mov sub fwait nop pop pop cmp sub out pop fs nop outsb or clc mov dec aaa dec add lahf adc xchg (bad) cli sub nop or sub pushf xchg inc shll addr16 mov and adc cmp mov or lods xor cmp push loope mov push add pop push push fs gs test sub test cmp enter insl mov sbb leave sub das icebp inc cmp jp sub add xchg inc mov fnsave stos or and xchg push inc sub push jb sbb insb jmp mov and testl nop or xchg std xor mov mov push stos shrl push fstpt pop dec or cmp dec aam or mov and and xorl cmpsl xor and sub xchg adc xchg jno bound mov (bad) cmp mov fsubl rorb xor and popa dec sub sbb jecxz popa and cs or bound bound nopl sub sub fcoml sub sbb xlat mov push mov sub es add popa mov ficompl pop sub push and insl popf sub pop mov daa insb fldl xchg jnp push dec xlat fs clc pop outsl add cltd popf arpl pop cmp cmp pop shll pcmpgtd mov cmp sub cmpsb in xlat sub mov lahf shrl pop xor xlat sub imul nopl lret cmpsb mov push cmc outsb and sub lds push daa ja insb stos cmp xor xlat sub xchg xor cmp lret fsubr lahf adc push cltd lahf cltd popa sub cmp jge cltd outsb cmp stos sub cmp cltd imul cs push wbinvd repz sub sub and outsb cmp cmp cmp js sub adc in push cmp or or movsl call sub sbb das add push outsb lods (bad) lock popa and outsb sub jle xchg sub jae shrl imul out bound lahf shll jle fs bound bound push jae jno push xor imulb jl jle sub scas adc loopne adcl xchg imul push jge out lahf cltd adc sub cld mov cmp cmpsl cli call aas mov jge push lret lods popa and popa nop sub or shrb ja clc sub cmpsb test xchg xchg sub or or addr16 sub jle fs fs sub push xchg sub xchg es sub xchg mull lahf cltd testl and sub sub jmp sub xchg dec fs fs inc sbb push (bad) xor push stos out cltd mov stos mov mov and cltd repz mov nopl cmpsb lods das addr16 push rep mov rorl scas or xor xor sahf sub stos mov cmp stos cmp mov sub shrb mov lock and ds cmp cmp mov sub xlat pop js sub cmp punpckldq mov insl and bound lods lret imul jg jmp stos jle push mov sub and stos sub call lock in mov jae push inc sub imul xor and das inc insl and outsl xor xor nop mov in and and shlb cmp lods test push or insl lock mov stos and in bound insl cmp das sbb imul cs sub lock cmc outsb sub mov cmc cmpsl sub pop pop insl sub xchg jmp jl cmc loopne sub ret mov jg (bad) pop stos ljmp insl jnp mov sub nop in cs out sub nopl lods cwtl xchg push cs outsb dec sbb dec pop sub xchg sub sub shld sbb jl stos mov and cltd sub in or cs das stos push inc mov push mov add add lret sub cmp cmp popf ljmp insb es les lock mov sbb lret in xchg sub int iret add cmpsl jnp and aas sti das and sub jns and or lret and sbb insb js lods cmp movsl push imul js dec mov mov negb mov jnp push daa jge in jnp sub mov adc xor scas imul add test test add pop test sub dec xor in mov or inc or or mov mov or leave lret sub push jmp cs insb mov lret push mov and xchg int3 bound fs in out push mov adc das insb ljmp enter inc shlb call sbb addr16 xchg stos sub lret fs adc out das clc insl cs ss cltd push data16 push bound jmp push xchg imul stos sub fs push or dec fs and dec and dec cmp mov fs int imul shll arpl push mov sub jmp add push xor cmp insl cwtl xchg inc push jge call jg das cvtpi2ps push push outsb scas scas mov sub mov and or sub lret sub je in outsb aas out cld call push sahf sub sarl test pop sbb imul sub outsb sub popa cmc sbb xorl out stos bswap pop sub mov push push push sub aaa or xor push orl or push dec sub cmp jp stc dec test das sub mov popa call push add lret cmp sbb mov int mov xor push call inc push (bad) mov iret arpl lahf push lea negb sub shrd dec sub adc int3 mov les pushf ucomiss add ds dec jle,pt and jno sub clc mov mov add push lock dec (bad) leave mov sub push out mov pop stos sahf sub add int es and pop pop int add cmp ss cmp sbb sbb push mov dec jp push fs mov sbb or sbb sub pop jmp xchg jnp,pt or push add stos mov sbb dec js pop sub imul mov cmp sti and das dec or out or sbb sub aas enter mov and sbb cmp outsb mov js std push or push xor jb xor add stos int bound nopl scas sub mov lret js mov fidivrl fnsave jmp les mov jp xor cmp xlat das push xchg insl and popa sub adc (bad) cld insb imul hlt jge cld push push adc or or and fstpt rol das or and push movsb stc pop sub call xlat xlat push sub movl mov or adc js sub call mov sub sub sub and fwait sub push add ficompl imul and xor mov xor imul jmp pop xor int xlat xchg or das xchg jge nop sti popa (bad) bound or daa rorb rcrl cmp sub cmp push push cmp aas addr16 out or call cld es lahf cmp mov sub or fstps and jne mov cs into sub es push dec or in push (bad) sti das imul mov outsb cli fwait sbb push aam sub std cld (bad) mov adc mov adc adc cmp fdivl fcomps sub or out cmp outsb aam (bad) sub clc sub (bad) cld sub je sub int3 cmc fs gs mov sub or or imul adc sub add loopne xlat and (bad) insl sub (bad) jge and icebp sub adc cmp inc clc nop lea call rcrb sub mov jge sub xchg inc ljmp sub pop sub lea sbb aas add ror and fs and sbb or lahf sbb mov and and cli fs outsl and dec sub mov bound jnp std fwait push in sub aas jnp sub or lods adc fs fwait or jnp dec pop cmp add fsubrs cltd fldl or sub cltd mov jmp sbb sub nop outsb pop push sub insl xchg jmp imul push int3 insb std das cmp push (bad) jge sbb add xchg mov pop test pop and inc in pop jno push stos mov sub cmp pop jno mov sub setbe ljmp pop sub and popf xor lret sub cltd shll xlat sub jmp iret push push cwtl mov js popf or stos bound jnp xlat push sbb cmp sub iret repz imul arpl jecxz sub sub lods jmp push mov call das fistpl lret das outsb pop jnp outsb cltd push dec sub stos das pop lret mov cmp in cmp push or or sub cmp xor pop in fisubs cmp sbb lahf mov xor push jge out fsubrs cmp sti pop dec lea bound mov mov (bad) xor adc (bad) mov jge je adc pop mov out or or sbb cltd lahf lock and call sub jnp outsb aam or sub imul cmp sub outsb shll push arpl and sub jle xlat and sub add inc jmp outsb sub lret mov fs or punpckldq and jbe and cli lret lock in bound jle out bound jle sub outsb adc push test jl inc sub or sub sub daa int3 cs sub xor or xchg aas sub shr sub inc sub fs imul xchg push sub mov or or in outsb jae push mov cmc stos adc jle rcl lods cs ret (bad) and cs lods gs lods mov stos jo sub xor xchg fwait mov mov popf imul fs ds and stos sub xor mov sub pop stos push mov popa stos adc jp repz rclb and and and cmp stos mov std and cltd push and sahf sub sbb das aaa push shr sub outsb in push (bad) adc imul and outsl adc adc popa and out in and outsb lods push adc ljmp and mov sbb pop push cltd sub fs test push xor sub mov imul stos and or cmp les paddsw in push xor out dec imul call je sub outsl das out xor sbb pop sub (bad) sarl sub loop (bad) xor ss push pop nopl push xchg add cmp lods and in sub mov sub cs ret jmp ljmp sub out xor in xor and xor bound insb cmp sub xchg je xchg sub js,pt cmp (bad) sub push add insb or sub jmp sub lret gs xor sbb fcomip int pop outsb add test mov sub or or mov lods or pop mov lahf or push sub xchg ret dec sub and int and sub mov stos sub test or lret sub pusha aam fwait stc div bound scas into daa stos cmp sub sub mov sub cs sub insb add leave or call ss mov add repz int std les jo xor sbb fsubrs sub add adc movb sub popf xchg push mov call lret outsb adc jmp lahf push (bad) clts std dec mov sub movsb mov and sub sar sub daa movsb negb inc bound adc and popa push xchg or test repz mov push imul insb lcall mov lret mov icebp outsl (bad) mov dec dec adc xchg ds or leave pop iret or sub push lea mov dec dec xor sub and insl pop in lahf cltd cltd mov sub or sbb out inc jecxz sub les fmul sub into cs sbbl xor into cs lret out les lret xor push add push sbb rclb sub cpuid (bad) in lods sub mov int or jle lret dec daa cltd dec and int3 adc jg es and xchg xchg sub out in cmc mov lods sub outsb or sub dec ds in imul in das xchg ds add das add mov dec inc (bad) leave xchg sbb sub or insl aas sbb jp lods sub stos sub ljmp and lret stos sub lods mov dec insb sub jp gs xchg movsb outsl jnp jmp insl test (bad) in xor in lret call dec mov popa imul addr16 mov and rorl repz ficomps aaa pop sub bound insb mov rorl pop mov sub pusha ljmp fisttpll or das fldt xor lahf sub imulb and outsb sbb (bad) push and sub adc jle jmp ss push xchg or bound cmp outsl sub outsb jge push jp mov bound lret push xchg jge movsl jp sbb fldcw push push adc sub das js push adc dec das imul push fisttps lock fs or mov push ljmp jmp and fwait sub push pop sub aaa jnp and daa rcrb (bad) dec push call sub lcall or cwtl bound mov stc xor pop and push jle shl jmp adc daa sub sub daa outsl pop stc daa add in sbb cmp sub adc dec jmp test dec into xor imul fwait scas jmp clc sub (bad) lods or pop adc stos shll fs rcll mov lea lea fs add insb adc sub mov or dec lahf push popf daa inc cltd dec daa in pop dec lcall sbb loop psllw outsb mov jecxz das mov and sub test adc fistpll sbb sub outsb sub lret and scas and sbb lret xchg test loop mov stos cmp xlat push in movsl lods dec cltd push mov pop mov and sub push stos sub out fsubrl push pop (bad) sub sub adc sbbl xchg sub add mov js (bad) std inc push jge mov mov cltd mov sub xlat (bad) and lods fldcw fisubrs sti das sub lods shll dec or lret mov rcrl push mov fadds mov test and lea movsb std adc sub insl sub or inc xlat push and and mov or aam nop popa push mov push andb repz (bad) loop push rcrb cltd pop and int3 das and and mov stos loope cmc jl mov aam mov dec fwait das xor sub scas fsubrs (bad) test jnp ja fbld fs fcompl cmp pop cmp das clc mov pop ss jl mov jo and sub sub sub mov out jne fisubrs fdivs popa and sub in cmp and clc xlat fwait cld mov shl xor stos cmp shrb sub cmc shrb and cmp sub sub fs sub fldt aam paddw cmc push or add pop xchg xchg push xor push push and jl cmp cwtl cmp or mov shrb sub fsubrs outsb xchg loopne jmp jp (bad) or pop (bad) aas xchg sarb nop xchg std mov mov sub hlt aam sbb cmp pop sub sti and jno xchg rorl (bad) cltd fimuls arpl jno fisttpl sbb shrd add cmp and or push insl cmp cmp cmp cmp fwait aaa cltd push xor clc popa cmp fisttpll pop mov cld or cmp lods call cltd push sub push adc pop outsb ja xor mov xor sub out fldenv out lods jmp es outsb gs dec stos push cmc outsb in push outsb push es daa pop clc and jg idiv daa sub and (bad) daa imul sub or cld and lods fcomip daa stc daa fdivl jmp pop xchg sub lahf in lahf cltd sub add es cmc jl inc xor lahf outsb push xor xlat push and sub jno xlat test clc negb test paddw cmc push or add fs mov gs sub repz outsb push bound or in outsb dec das insb xlat sub cmp sub outsb imul js sub cs mull cs sub testl jno repnz push out mov sub sub test fs insb push sub sub and and das sub inc in fs mov lahf or cmc scas sub negl popf popf wbinvd ss lahf cltd notb outsb ljmp adc stos sbb cmp sub jle lods sarl jle cltd push shl jle cltd mov stos cmpps (bad) dec aas js lods and or sub jecxz mov lock and fs sub sub popa sub lods jo push scas pop sub sub inc lret sub fs sub nop sub setb into aam adc ss sub aas mov cmovp iret jle sub xlat pop js sub pop js lods sub sub cmp stos push xchg push wbinvd sub nop in lahf mov lods aas mov adc sub test and sub and lahf push add fs outsb xchg push mov dec out sub jmp jns push lods bound cmp daa xchg push xor or sub popa lock push (bad) enter je stos shrd je repz and add stos adc xor lods repz xchg lods mov cmc popa and in sub insl das (bad) in xor int test mov xor xor sub or lahf cmp push push fs jl sub inc jecxz cmp add (bad) xor insl stos xlat cwtl insl xor mov int sub clc outsb notb pop popa lock orb sbb push das push sub adc imul adc xor pop outsb jmp fs sbb mov sub arpl or sub push test push xchg inc add lods popa nop outsb adc sbb scas xor imul mov sub pop mov insl inc test inc add jbe push mov lret ss imul lods push xor and and jmp xchg push nop and gs adc iret divl insl das int stos add fsubrs cltd push dec sbb out js cmp sub pop jo sub cmp jmp jae iret fmull jmp xchg arpl in and jmp lea das imul call sub int3 add scas add pop fwait push (bad) inc dec sub stc rep outsb test push outsb sub wbinvd xchg add mov sub or or adc lods sub xchg in mov sub outsl int3 lret jge and cltd sub outsb push fs lret sub insb cmp lret or and repz sub or call cwtl or sub shrb iret bound push out pop outsl sub testl sub push mov insl or inc xchg xor cmp lods addr16 xchg push pop xchg mov cmp in sub mov adc add mov or sbb jb sub mov leave pop clc ss nopl loopne mov cmc stos inc inc push cmp shrb les das mov inc push cwtl in or leave and sub or adc sub mov neg dec add ss clc pop fs sub cmp fs mov mov mov or test insb imul das lods in sub loopne or lods mov mov dec sub lods je,pn lods outsb sub cmp and push sub imul loop push popa cli outsl or sub in mov adcb jne cs test adc in adc jecxz sub stos aas or fdivrs push sub mov mov nop xor cs imul fldenv daa push test test leave or mov enter or pop pushf adcb sub clc xchg in jg cmp int dec xor (bad) adc lret das push sub add xor xor xchg (bad) xchg mov je outsb sarb fcoms push lahf jnp pop pop lret sbb ficomps (bad) xor fwait or pop cltd push jbe arpl lret insl jmp cwtl sub sub push insb cmp ljmp cmc dec movsl nop fdivrs in pop sub fwait push outsl insl sub aaa lods sbb jne jae push sbb fsubs sub xor lock lock xchg or shll or sub call or jae out jg ret gs adc test sub jmp fdiv cltd das and and or cmp mov adc leave pop xor imul cmp mov xchg ret fs cmp cmpsl jmp aam or sub insl (bad) ljmp mov mov and and mov stc pop sub and jnp popf push int ja sub ds sub sub enter adc mov das aad sub mov das cmp das subl sub sub inc or and xchg fistpll or inc gs inc mov pop ret shl lret int3 pop jl ds xor dec or sbb pushf push push lret push mov dec cmp scas sbb bound fdivs push xor sub mov mov lahf mov icebp and sub addr16 popa mov mov (bad) fldenv aaa cmp dec sbb or cs and cmp mov std sub sub sbb mov lods and fs test cmp mov inc testl test lods push aas sbb sub lea outsb and cmp sti mov push stos sub sub fwait sub fisubrs sub cmp adc subb pop mov lea mov sti or or sub ss sub std cmp stos add pop push mov pop pop jnp add inc cltd mov pushf fldt shlb bound mov mov xchg mov into insb mov int push movsb imul cmpsl aad (bad) pop fildll (bad) clc shrl xor sub shrb sub sub push and mov xchg ds lods xchg fwait adc sbb pop mov mov jno add (bad) adc push xchg in mov cmp and lea push cwtl call subb jbe sub sub xchg fdivrs push bound lea sub or add dec add sbb jge clc or adc dec xchg popf lea cmpsl push pop insl push imul shr and cmp jnp pop sub lcall dec sub cs mov das call nopl fsubrl faddl cmc jl fidivrs lahf imul in sbb shl mov iret addr16 lahf dec cmp sbb sub lock xchg js popa lahf cltd fs sub mov push imul lock in sub inc mov sbb inc (bad) push sub ret in sub ljmp sbb setae and shlb fs mov push scas pxor sub xchg push (bad) and sarl jle xlat cmp jle add sub movsl cltd mov push repz inc add mov sub or push cld jbe test or sub movsl cltd jmp aas xlat mov jle push xchg sub lods xor or jb mov jmp mov sub push ja lods and mov mov sbb wbinvd cltd mov ja mov adc cmp xor stos cs bswap lods (bad) mov sub and outsb adc bound jle sub add adc lret pusha (bad) divb in mov jmp sub mov sarl inc xchg ds sub add sbb pop or and sub push mov scas movsl and and add popa call loope sub in sub in pop push jmp push push dec sub lods scas sub wbinvd pop mov loope xor jmp or mov ljmp sub xchg cs ljmp sub outsl dec call cs sbb and sub imul push and inc popf fs push and ljmp mov das loop jmp push ljmp cmp scas and outsb mov cs shrb dec cmp or cwtl insl or (bad) jp and lret or cltd jle and test cmp in daa add adc xchg out and in and mov cltd lahf pop ljmp insl aas jo lcall es mov lods xor iret lods xor insl (bad) bound sub xor (bad) jmp lock inc in adc (bad) sbb and xor invd xor lods sub iret es ror sub sub sub sti inc push test dec cmp mov pop fisttpl loop or es insb ds and arpl scas add leave js jbe jecxz sbb loopne mov mov sub ljmp out sub sub outsb jg or std ret lret cmp dec push bound lods ljmp sub repz push mov sub fs sub jmp sub sub stos das rep sub nop bound or or sub push and js dec xlat pop js mov sub sbb ljmp icebp xlat bound arpl out xor or pop lods lahf cltd outsb adcb mov push test inc push fbld lods sub push enter lods scas leave outsl xchg rorl push cltd movsl outsb push jp sub lahf ljmp mov (bad) dec jle jmp subb and xor lods cmpsl insl and ret dec mov outsl sub push mov dec xor imul jmp xor movsb stos aaa mov or outsb daa add lahf in and inc sub in and or xor in test cmp into sub test aas sub subl sbb sub or or xlat stc subl out aas movsb ljmp cmp or pop mov jne sub int3 cmp iret cmp cmp sub push lods dec dec cs lret and shl dec sahf outsb push hlt lods sub out and jle outsb dec or das pop cmpsb dec sub or xlat iret jge sub inc adc loopne ret scas lret lahf mov sub lea les jo ljmp imul nopl pop mov lods jge fwait jmp imul scas stos insb je sub ret shld push inc leave push iret push test push push inc and or or int3 xor push orl inc adc fwait sub inc imul cmpsb punpckhdq sysenter sub sub adc sbb leave jl and and test push scas sub or fisttps sub push in insl mov imul sub xor sub scas xchg in or and sub or jmp fldcw addr16 and outsb nop mov insl cmp and jge xor mov sub lahf mov insl lahf nop outsb mov lea fldt xchg stc adc cmp mov fdivs lods and popa and cs lret lahf and sbb sbb sub insl nop sub and add dec mov lahf adc push sbb clc dec sub jge mov fnstsw lret sbb repz xchg fisubrl stos cmp fidivrs imul jnp cmp daa in fwait sub stos popf dec push jnp sub sub push sbb xor fidivrl fs stc inc int dec fdivl sbb sbb popa fsubrs push or scas dec add sub cltd in bound lods pusha cmp sti pop dec (bad) int push std push cs (bad) fldcw fidivl outsb popf pop sub push jae cs mov mov cs sub ret in push or sub lahf mov fsubrs lret push das or sub mov dec xchg das loopne cmp (bad) xor fsubrs sbb dec sub outsb jb and sub cmc lret mov cmp xchg jbe nop test adc dec sub sbb mov ljmp or movsb push outsb dec jle aaa (bad) cmpl fs push outsb mov push imul (bad) bound popa or mov lods sub jmp ss jl,pn daa cmpsb int3 mov fstpt out nop and sarl sbb int bound nopl orb je dec fs outsb subb dec and lea sub mov mov stos pop cmp jnp and test jno sbb int sub and bound adc jp in cmc fwait fs mov ret sub jp jnp fldcw sti cmpsl or sub sub sbb test fsubl or pop fnstenv cmp push jle ss cltd std xor xchg or in or int sub ds out cltd push or lods jns cltd js nop cmp orb cltd popf push fimull popf imul sub aaa xchg push in mov mov dec jmp stos cmc lret push ss orb add leave push nopl jg jae cwtl lcall packssdw fsubrl sti sbb xchg sub or xor test cmp dec scas js in sbb lea dec movsl pop and pop push sti sub push dec daa test jmp pop sub outsb push sub lret sub xlat out or fnstenv inc pop sub pop and pop cwtl dec sub pop cmpl mov sub jle int sub sub cmp fadds dec pushf cmp loop sbb adc or dec (bad) mov or stos je push sbb fstpt sbb prefetchwt1 std test xchg inc mov int vfmadd231sd nop jp outsb dec aaa in or fsubrp fisubrs ficomps test sub je sub (bad) cs (bad) aaa int sub aam faddl outsb mov outsb cmpsl push or lcall scas sub sub sub jl adc dec sub jp sbb repz cmp (bad) aad cltd sbb pop out sub jne jp push dec pop or negb dec pop adc sub rcrl shlb outsb sar fstpt scas rcll adc outsb sub wbinvd fs ss xchg popa insl or outsb ljmp and fs pop xchg add inc jmp fs xchg or xlat sub xlat push xchg sub imul push jb xchg imull mov xchg call lahf in das mull dec sub adc (bad) fs sub enter bound cltd fisubrs push je cltd sub jnp lahf pop fs or lea aas sbb cmp sub sbb cmp das test bound push test and outsb inc stos sub add scas lods sub sub scas sub stos sub xor push outsb pop and xchg push scas dec and jle add inc push shrl sub add out fs push lods dec lods or sub sub or imul push xor sbb cmp push lods and push mov stos push dec js sub cmp mov push xor or and sub or cmp insl and mov insb es outsb adc sub aas sub in add mov sub stos sub push mov fsubrs loope jnp insb insl jmp xchg dec xchg out mov in or sub lahf outsb xchg nopl insl pop cltd lahf mov mov xlat xchg in or xchg sub xchg aaa mov in xor cmp xor outsb push imul jmp mov in and jmp cmp lret jmp lahf outsb adc fsubrs push cmp cmp push mov cmp stos adc repz imul iret test lock and outsb in sub js cmc outsb gs arpl push repnz outsb and dec cmp cmp movsb xchg sub jl std mov nop in and jmp sub jp xor sub jns mov xor sub jp stos cmp insl es outsb adc xlat sbb jp dec imul pushw scas adc xor inc in xchg repz xor or jmp aad mov xor sub add sbb add sub lods jb sbb dec outsl mov mov sub dec test in outsb fsubrp and in push popa sub push aam sub mov lods push mov xor int3 or cs sub stos cs or roll sub dec das push dec sub dec das cmpsl dec sub dec das (bad) rorl or inc lods sub push xor jge mov imul mov int3 ljmp jns pop push imul push adc ret popa nop (bad) and dec js imul jmp sub sub pop addr16 sub lahf dec sbb js sub and fs cmpsl (bad) das in insl fs inc or imul outsb aaa jle stos and push dec and pop lret push or loop dec cs lret pusha addr16 sub or movsl bt stos sub iret cs mov outsb jo adc or sub xor xor sub nopl call mov and cmp or jno cltd and mov fcomi wbinvd mov stos sub fisubrs push jnp push es iret orl sub lret sub cmc jp jns outsb mov mov in and aas push adc insl fwait scas dec or test push mov out (bad) negb xchg int nop cmp lret in stos sub dec mov xor lahf jle scas (bad) clc out adc fwait aas insb push pop aaa cs lret dec xor mov adc sub add add out das lods or cmpsb out pop add or xor xor cmp dec push mov (bad) sub insb leave sub sub iret sub xor sub out leave sub iret sub pop sub pop sub sub mov sub mov cmp pop sub jle sub sub pop sub test sub sub pop sub pop sub ds sub sub pop sub push pop sub sub inc pop sub sub pop sub out sub pop sub xor sub pop sub pop pop sub sub pop sub pop sub pop sub mov sub jle sub sub pop sub pop sub orl mov sub dec pop sub pop sub pop sub mov sub jle sub pop sub pop sub mov sub aad sub or pop sub pop sub pop sub pop sub pop sub pop sub push pop sub clc pop sub push and push sub popf sbb int3 rcrb (bad) pop sub clc pop sub sub fildll nop pop sub sub pop sub fildll pop sub pop sub pop sub js fildll fildll sub fildll pop sub jge sub pop sub fstpl xor mov mov or sub mov pop sub fildll fistpll jp sub sub sahf pop sub pop sub add pop sub and lahf cltd in mov sub mov pop sub dec cltd and lahf jmp mov mov lahf ss and sub xor inc sbb cmp xor mov cmp add lahf in sub lahf add sub pushf popf sub test cs cltd les out sub sub sbb pop and std sub iret cltd add cmc jns mov sub pop es fcomps aas jge mov aam fisubs cmp xorl das sahf pop and pop es and sub sub sub sub ds jmp adc sub and cmp (bad) fidivl mov xor fsubrl xrelease mov mov in adc sahf jmp lahf pop sub xor jge jge fildll in pop cs ss sahf cwtl (bad) (bad) sbb xor das aaa xor cmc xor xor frstor out cmp insl test out sub mov inc mov mov xor fdivl jmp enter xor xor jecxz push xor dec insl xor loop push daa sbb cwtl cmp testl popf cmc repz fldcw sub mov and sub push sub xchg das lahf sub push jmp int3 sbb fwait mov cmp sub int3 mov sub mov das pop (bad) push jnp sub xor arpl xor inc adc fwait loop inc sub lahf add into sub push and fsubrs das out das sub sub sub das cmp sub sub cmp mov icebp mov shrb in sub dec in in push jp sub and into jl jp enter xchg xor mov pop sub icebp mov ss (bad) shlb dec cmp out mov inc sub xor xor cmc xor mov push test push mov adc test aaa inc sub cmc mov lahf xrelease xor repz repz cltd fidivl xor adc push scas jle xor and xor cltd sub int3 cltd mov lahf cmc stos sub cltd loop or lahf push lahf mov lods sub sub sub lods cmp lahf sahf lahf xor out mov sub push mov lret xor out sahf jge push jmp cmpsl test test xor stos sub sub aaa insl sub sub outsl das ljmp sub push outsl sub imul sub inc mov push imul jge,pn imul and cmp pop lahf xor sbb imul cs leave add imul and xor jp xor sub in and loopne cmp out test sub sub mov sub sub push xor and out imull xor stc jnp sbb in call fdivl in sahf stc in inc sub xor xor out daa adc scas hlt addb mov lods (bad) sub pop jns sub xorb sub sbb push sub loopne and sub add fdivrl rcr sub in ljmp sbb sti lods in sub jle out sub fstpt and fldl cli mov sub std push movsl test imul or mov std cld pop push and (bad) sub mov add sub dec (bad) cmp iret or sub mov sub roll rclb jns aaa push dec mov inc push aad ret jle sbb mov push xor dec in adc inc call xor sub enter sub jecxz xor aas lcall sarl sub dec popf bndldx mov mov adc mov hlt sti jle mov or iret sub cs sub iret sub in jge add xor and sub and repz jge xor jge lret in adc lcall in ljmp mov leave data16 leave cs imul mov sub enter int shrl in mov push jmp and arpl sub ss insl (bad) les lahf mov xor cmp sub xor mov and jmp push aas and test sub cmp mov and cmp jecxz dec sub dec lahf cltd cld clc dec cltd (bad) js sub iret and dec jne pop or or jo dec int call sub lret and pop outsl loop or (bad) in lret sub add jge call xor mov into sub lcall iret sub jmp jge lahf jmp and sub mov xor std call mov xor cmp sub or or int or cmp sub dec or sub cmp cmpsb jle mov int cmpsb or and stos mov cltd mov lods lahf (bad) and lahf (bad) xor lods or int sub sub iret xor sub aaa xor sahf test dec sub mov and jmp or xor push push std ss mov cmp cmp mov lret sub or leave mov int mov fmull add sub int3 std lahf bound or decb xchg cltd add sahf push int3 das enter and mov and or dec aas fimuls int3 sub lea cs or int lahf or int fs dec xor xor mov mov push pop sub pop cmp mov add jns cmp cmp xor sbbb sub jnp push pop sub sub xor fldcw out bnd mov (bad) das sbb sbb mov or and cs sub sub std sub cli dec mov pop dec inc pop and hlt sub sub push fwait mov sub jb pop clc cs das out fisttps (bad) cli pop (bad) lahf (bad) sti jp,pn sub sub aaa sbb aaa aas pop sahf pop shrb (bad) sbb mov pushf jb,pn js cld test pop pop hlt sub jp cmp fnstcw push repnz push mov xor pop cmp sub je adc sub sbb and xchg sub das mov pop es hlt or sub repz sub sbb sub pop sub sbb cmp jge or mov push or sbb xchg sub aaa lcall cld sub mov sub sub sub push xor xor cmp cmp xor xor cmp enter xor xor lcall sub fidivl stc ss cli cmp aaa pop cmp xor cmp faddl pushf (bad) jmp and and fimull cld jl mov pushf sub add test pop faddl icebp testl (bad) stos dec push sub xor sub cmp jge mov in pop push mov sub jmp push xrelease jne xor and jmp xchg and push jnp cwtl jns lea jge jnp sub lret push mov sub das pop std (bad) ljmp leave lahf lret pop cltd mov lcall sub sahf cmpsb pop jne mov cltd repnz cwtl jge inc fwait and push popf sub pop sub sub stc add gs test cmp inc xor dec xor jecxz outsb inc pop inc ss jmp or xor push pop jns cmp and sub gs push jge adc cli cltd xor sub aaa cmp fisubrl cld sub std cs sub inc jge loope xor and pop jnp out ficompl inc xor cmp inc cmp and sbb (bad) jg push sarb ja pop and mov or xchg pop cli lcall and and dec fstl push sub fildll and aad mov arpl sub sub sub sub sub mov mov imul push out adc ficoms repz mov ss mov (bad) xchg sub xor out cltd sub sub ss and adc push mov cltd out sub xchg nop loopne jecxz xchg and aam in sub adc das out sub fsubs (bad) (bad) sub gs sub or xchg das sqrtps mov xchg push xor mov xor ss jnp xor mov cwtl in and sub xor xor mov sub dec (bad) lahf cltd or sub and and sub in mov mov jmp pusha leave add xor jge jge mov push and adc xor sub mov xor stos cs test sub lahf adc lods sub lahf mov sub cmc lahf mov jnp xchg cltd jl sub scas jl,pn lahf lret lahf sbb stos sub mov ds int3 lods adc cltd cltd scas and stos ldmxcsr stc lods negl sub lods sub stos cmp jp or paddb sub xchg sahf cwtl xrelease lods lahf cltd xor aas cltd cmc insl jne push in jae jmp jp sub adc cltd push in cs sub in das push xlat push outsl sub imul sub lahf in sub sub xrelease and loopne mov das test cmp ss (bad) push mov in insl int3 mov push xor xor out push jnp daa insl adc add in xor sub in xor lahf pop cmp mov ss sub insl movsb mov sub insl sub imul clc popa add in and mov call shlb lahf rcrb out dec jmp xchg cmp jmp enter lahf dec ljmp leave sub lahf leave enter mov sub or sub in daa sbb outsl lahf push cwtl out sub cs cwtl sub cltd (bad) dec cmp (bad) into cltd insl lahf mov mov addr16 outsl lahf addr16 call xor and dec das xlat lods lahf push dec popa lahf push enter add sub cltd (bad) repz nop leave aaa sub add lahf inc enter sbb mov lea sub int dec leave lahf dec and xchg dec dec stos push mov dec jmp imul stos dec nop dec cmp into mov mov adc cmp dec es das mov sahf out lahf and enter and dec or nop dec cmp add jge int3 lahf jge jnp,pt dec jnp,pt or dec nop/reserved adc and add dec add sahf mov lahf mov lahf mov int3 sub mov cmpl dec sub sub add aas shlb dec and enter lahf or xchg sub stos inc cltd add cmp inc cs out cmc mov sub mov and sub lahf js sub jle jmp sbb mov test lahf jge dec lahf int3 and cmp pop out leave adc int sub pop cmpsb lea aam imul push dec sub jno sub and sub dec outsb lret outsl lret push popa cmpsb adc dec or sub lret cltd stos int3 enter shll out dec sub and sub sub cwtl push lahf sub mov popa lods das leave nop dec data16 adc lahf mov enter jno lahf shrb lret iret ja cltd lahf dec dec sub ss inc das mov ror jns dec leave sbb sub sbb int outsl xlat cltd imul icebp cltd lahf mov dec sub dec cmp stos mov and dec sub lret fs cltd jnp adc js imul daa mov loope cltd cmc dec sub push jmp or dec sub cltd lahf fbstp lret sub inc dec pop sub dec add daa mov lahf cltd sub dec sub aam sub dec pop arpl dec sbb int mov dec or inc in push inc sub sub sbbl fnstcw leave xlat fnstsw lahf shrb pushf sub adc sub mov inc mov call rcrb add cmp sub lahf xor xor cltd mov cltd xor pop sub pop mov xchg cmp sub mov cltd sbb mov push out push sub pop sbb gs sub add sbb pop cmp sub roll sub shrb sub cmp push test xchg lods fmuls sbb pop jle test sbb and xor lcall sub sub mov mov call sub dec call sub lahf dec ret mov lods adc mov stc pop outsl scas pop imul sub mov cmp lahf cltd lcall sub sbb sub push sub or lahf outsl scas push nop shll es fs jle gs cltd mov pushf xor sub xor sub add lahf cltd push adc sub adc mov ficompl pop or or aaa aaa lahf cltd push xchg fiadds sub outsl mov mov cmp sub push cltd lahf push sbb sbb in mov sbb call xor ds sbb jg sub test adc pop pushf pop sub insb daa lahf ret xchg cltd mov or sbb fwait jp pop cmp sub sub sub adc sub push add sub sbb (bad) push loop cltd in xor cmp es data16 cltd cmpl jg outsb jns sub cmpsb dec xchg pop pop sbb fildl cmpsb pop pop lret or lahf cltd or sub enter out imul adc adc sub xchg (bad) sub mov cltd lods push fistpll rorb and sub dec pop and sbb jnp lahf int3 negb sub sbb mov lret xchg mov movsl lods shr pop cmp imul lahf out lahf mov sbb lahf dec inc sbb sub call movsb (bad) out fldt shrl mov inc xchg pop mov cltd mov cltd lahf imul jl or sbb aaa rcrb frstor sbb sub sub xchg jl int mov sbb sbb js fstpt push fldl movsb pop addr16 (bad) pop push addr16 jno (bad) pop inc call sub pop mov xor frstor lahf enter sub popa pop mov dec pop addr16 adc inc pop sbb or dec adc mov dec cwtl sub mov call fnstenv popf mov popf mov sbb or sub add daa and int3 mov sbb sub (bad) into ja lea call sahf or fwait or lcall mov sub popf jge stos mov xor shrb out lahf sbb fldt (bad) out xlat sub sbb int loop sbbl lahf mov loope mov or pop adc push cmpsb sbb cmpsb lahf and stc popf and fwait daa push lahf and fldt pop (bad) sbb mov fcoms mull pop sub push cltd pop ret sahf adc xchg sbb sbb mov sub xchg mov cltd aaa sub sub or aam lahf in sub sub mov lahf cltd lahf push mov popf lahf cltd pop and add xchg aaa sub cltd pop cltd lahf jg sub or outsl imul cs into sub lahf push cmc shlb mov pop sahf lret dec sub add inc lahf add sub mov sub push add lahf cmp xlat jp,pn daa cmp mov inc cltd mov iret sub stos leave nop adc add lahf fmuls lahf nop enter adc addr16 int lods adc lahf cltd dec lods or addr16 call and sbb cltd sbb and jp and cltd ss mov test cltd add xor lret scas mov les pusha xchg mov popa xor cwtl rcrb cltd jnp xor scas pop mov jns lea jns test stos scas jns dec gs mov cltd lods xor stos cltd mov fs mov cltd cld mov cwtl out scas (bad) lods cs stos sub lods sub bound dec dec mov sub lahf dec enter dec mov call mov cmp cmp pop cltd lahf sahf pop out in cmp das mov iret into jb iret cmp jmp mov mov inc lahf out jmp cltd sub inc popa sahf popa cltd popa repz nop mov imul lahf cltd cltd (bad) sub ljmp in sub push push loop and sub and imul inc lret call loope psubsw add sub mov add inc sub sub jbe sbb jo lahf movsb nop mov sbb out lahf mov mov mov sbb xor add pop in sub cltd and mov cltd jmp lahf in inc add mov sbb xor lahf inc jmp inc in sub jmp or out mov out add pop imul movsb mov cltd adc cwtl push loope jmp int3 sub mov dec push pop lahf cmp stos jae fisubrl sub lahf test fisttps cltd and stos cmp jmp sbb dec daa int3 adc sbb mov das dec sub mov sub addl rcrb int3 lret push mov int3 and cli dec inc fs sub and inc das mov rorb lahf shrb into ss (bad) mov iret inc sbb dec sub xor sub into jno lahf dec pop dec mov ja sbb and lahf mov mov dec dec ss sbb lea cltd lahf fwait mov das cltd (bad) sub int int int3 sub das dec sub push int3 aas int3 mov es dec sub cmp (bad) sub mov mov lret xor sbb pop dec mov cmpsl lods les dec xchg add lahf mov stos cltd lahf ret and and insb out lahf inc aas and dec popa movsb inc cs out jg stos int3 cwtl dec outsl ljmp lret mov int out push sub dec dec inc dec mov leave jmp sub pop dec sub sub mov mov out or xchg aam leave pop leave cltd setns leave or sub mov sub aas and int mov lahf pop lahf orb int3 sub inc fwait mov dec mov daa stos out (bad) sub cltd xchg int out popa sbb lret pop lret mov fsts sub movsb inc sub xchg xlat lret into or std jl lahf decb (bad) cs dec dec inc das dec stos lret mov dec or mov dec sub lods sahf inc das lret cltd lahf insl dec sub mov int3 and dec push inc cs cmp enter lds fsubrl daa mov jle cltd lahf mov cs fwait inc push sub (bad) mov xchg sub cmp xchg cltd mov cs and adc sbb pop pop mov fstpl cmp cltd jmp jns pop push stos jg jge dec nop mov cltd lahf and sub cmp lahf fisubrl mov sub (bad) push sub (bad) into mov sbb inc sbb cltd ds aas cltd mov cs rcrb sbb xchg sub add adc mov mov mov xor inc lahf out mov cmp and cltd pop mov stos decb mov sbb pop xor call pop sbb sbb pop dec cltd pop jo (bad) inc sbb pop mov cltd and pop pop adc pop inc popf dec dec adc mov pop outsl sbb sub fldl sbb rcrb and outsl pop mov mov imul aas cltd lahf cltd pop sbb sbb out lahf push fwait aas out mov push inc aam mov fstpt sbb cltd mov sub jge (bad) mov lahf mov sbb push sub and jl cs movsb pop dec add nop movsb aaa fcoms popf pop lahf cwtl movsl inc push lahf inc sub lea mov mov aaa movsb inc lret adc sbb mov xor adc sub sub push daa fcompl fildll fistpl lcall fsubs popf sbb sub mov repz xchg pop cltd lahf xchg sbb xor fsubrl mov cltd pop cltd pop sbb lcall lldt mov or cwtl popf and fbld lahf cltd push xor sub adc push xchg lahf push dec popf mov push data16 mov aaa dec lahf cltd cli add sub pop stos cwtl pop sub lahf rcrl sub mov push sub mov scas popa out sub (bad) sahf out cltd mov pop mov pop and cwtl lcall cmp sub jp pop sub inc sbb sbb js pop loop sub add pop or fwait adc aam cltd or (bad) push fldt sub xor or dec adc lahf dec mov ret fwait pop pop insl cltd xchg adc xchg scas popf xchg pop pop sub cmp push mov sbb pop sahf arpl pop sub lahf addr16 insb ficomps sub adc mov xchg sbb mov test pop scas pop sub and fwait aaa ja cmp fstpt out lahf scas sbb ljmp sbb sbb add sub stc aam cmp sti mov out and fldenv pop orl lcall mov sub sub lcall fchs nop cs sahf sub fxch mov mov nop lods mov lcall mov add sub sub sahf test ficoml pushf push mov cltd call fwait sub sub sbb sbb stc dec fs sub pop sub sub test popf sub adc sbb sub es sub pop sub sub sub pop sub xchg das pop xor sub cmc das adc das xor das xor sub push das and and mov mov (bad) sub andl scas das sub sub sub sub das sub sub das sub sub pop cs jle sub das sub sub scas cs scas cs sub scas shrl sub sub cs je cs push scas push scas cs sub jle sub scas cs test test scas loope,pn sub mov test push test js pop scas sub scas cs test addl scas ds jmp sub sub sub insb out sub fs xor sub sub sub js sub jmp and sub out sub jmp lcall out sub jmp cs sub push shr jns,pn out mov jmp addr16 mov cmp jmp push js sub jmp pop jmp sub clc jmp enter push jmp out out lret out sub sub out sub js sub jmp leave jmp sub and out sub jmp cs dec leave sub iret sub fidivrl sub leave sub iret sub leave sub jle sub iret sub iret jge,pn iret sub iret sub jle sub iret das addr16 sub iret sub iret sub xchg sub iret sub aaa mov push jl sub ror sub sub enterw (bad) iret sub sub and cwtl sub and cmc jnp sahf cwtl or mov fs sbb cmc sub lahf fsubr sub sub mov xor out sbb or dec das dec in mov insl jecxz and xor and aaa lret cwtl test mov clc jp sub sahf xchg cmc xor xor mov fidivl aad sub and das dec dec sub cmc push and mov int3 mov and iret and out adc or sub aaa mov dec cmp ds scas dec sub imul xor cmp movsb or mov nop aas cltd clc dec das clc insl sub cltd inc sub btr out pop cwtl or lret pop scas or ss lahf jne daa and cmc mov and fsubrs sub decb sahf mov lahf sub xchg pop xor and xor and push xor jmp jmp sub cmc mov and push or dec sub mov lahf add das out in sub and xor inc dec sub mov sub cmp ss int3 cvtpi2ps pop or mov mov (bad) sub and imul mov cmpsb add sub mov insl sub dec xor lahf in sub push push or das fmuls sub das pop lahf stos dec sub add mov xor sub dec xor jmp lahf and insl aaa and push cmc mov jl and das mov cmp lahf pop clc das scas and aas xor das lahf jmp or (bad) xor add das or ljmp xchg jnp and sub xor xor pop add movaps lahf pop pop sub nop xor xor stos xor lahf test and dec sub cltd sub sub cmp lods es insl mov push push push repz das lahf lods and jge es lea jge out pushf sub xor sub or jp lahf inc fsubrs push adc push or jmp fwait daa (bad) pop sub push aaa xor lahf cmp pop sub sub jecxz cli sub cmc cltd fwait ds das repz xor or mov xor mov xor push adc aaa adc std cmp aaa cmp sbb mov mov cmp add (bad) and or scas clc sub sub jle insl daa dec es adc or int cmp push lret adc movsb aas dec pop sub aas lahf jg sub lea push jnp (bad) cmp mov sub cmp sub mov sub repz leave push and mov adc sub push or jmp cltd fidivl cmp aas add or arpl push sti cmp xor adc mov mov push xor daa int3 add pop mov mov jnp subl mov popf jb cmc xor lahf adc cmp das dec cmp insl sahf jnp sbb sub popa fsubrp push and mov push scas mov mov insl xor pop sbb mov mov sub cltd into cltd (bad) pop fs sub (bad) and cmpb push fstpt push and sub pop sbb (bad) mov mov sbb insl repz or push xlat lahf jle and adc sbb cmc sub xor lahf fwait dec cwtl sub and or lea add sbb inc lret lahf dec sub dec jge loop xor sbb daa rcrl cltd sub jge mov dec push push jmp dec cs std jp daa in repz cmp jmp xchg mov imul or and xor xor es cmp jl jg xor in or and mov adc fdivr cmp sbb inc mov cltd stos mov cmp cwtl and xlat mov push repz cmp mov pop jno std cmp cltd ret clc or cmp lods int3 jmp xor pop insl push cmp cwtl insl mov cmpsl sbb push aaa test lahf or ljmp sahf sub sub cltd sub and cltd lahf mov sub push mov sbb pop and sub negb xor cmp ljmp in or sub jns xor xor std aaa dec sub mov cld cmp push sbb dec mov sub fsts mov xor rcrb cmp sub das sbb sub (bad) sub sarl aaa insl clc push mov adc out push xor mov sbb mov and es pop and xor mov cltd lret jnp xor sbb popf sub pop sub (bad) test dec or aaa sbb xchg jge cwtl sub lahf inc xlat out xor sbb xor sahf mov or and push daa cmp cwtl xchg xchg sub xor mov sti lahf sub lahf popf lahf imul pop arpl lahf pop sub fimuls adc sub lahf mov jge cmp jge xor or int3 mov mov sub sub cmpsb mov lahf mov mov jp xor imul int3 bound cmp cmc sbb and (bad) (bad) lahf cltd sub insb shrl mov test jmp sub scas jnp,pn scas mov push sub sub sub sub sub lahf cltd dec rolb cltd lahf jne pop out in sub dec cmp imul lahf test adc test jmp cltd mov sub adc lahf push jmp mov inc cltd lahf dec jmp sbb in sub cmp sub xor mov sbb lea iret sub dec sub lret dec sub dec sub js sub dec sub lahf cltd and sub sub sub lret dec sub ljmp cmp lret sub sub sub aaa dec sub sub cmp or cltd jbe aaa jmp xchg sub lret sub dec xor int test dec xor int stc fimuls das sbb sub lret sub and int3 sub lret sub dec int popf jle lahf inc dec sub sub dec cmp sub orb sub sub lret sub mov push sub lret dec sub sub push dec sub cs lahf sbb dec sub scas add das dec xor int3 sub ja and int3 sub sub lret loope cltd lcall sub dec sub sub cmc dec sub sub sub sub lret sub jle sub sub lret sub lahf movsl lret das nop int mov lret daa dec sub jge dec sub sub dec sub sub dec dec sub sub push dec sub jnp add sub sub sub push mov push jecxz cltd stos dec sub sub nop dec sub sub dec sub lret int3 sub int3 sub or lret dec sub sub mov sub call mov lahf cltd add lret aaa xchg int adc jmp jo cmp sub sub dec sub lret sub lret sub das int3 sub dec sub lret dec sub aaa int daa inc dec sub dec sub dec dec sub int sub sahf dec sub and sub adc das int int3 sub lcall sub dec sub sub mov lods lret sub jle sub sub sub dec sub aas insb lret sub std push dec xor sub das int3 sub jmp sub sub xchg int mov sub sub dec sub lret dec sub dec daa lret scas dec sub sub sub lret dec sub sub int ja dec sub add pop and repz and stc xchg pop sub fwait sub cmp and cld idiv sbb pop sub aas lahf nop pop sub push or pop sub es sub sbb pop sub fwait cs sub sbb sbb out pop sub sub sub sub cltd cmp push sbb jbe sub sub sbbb jecxz fidivrs inc fnstsw xlat fwait sub sub mov and pop sub and jnp sub pop sub outsb mov scas pop es sub int3 pop adc sub sbb pop sub adc sub pop sub lahf out add sub pop sub or clc fisubrs call sub mov sub mov add es sub icebp arpl cmp add sub lahf cltd mov dec pop sub ja sub sbb pop sub pop pop sub sub xchg cltd sub pop sub sub pop sub xor pop sub out add and sbb cs sub ficompl (bad) sbb lds sbb test pop sub xor pop fstpt pop sub nop sbb pop sub sub out sub cmp pop sub and sub fildl sub fwait sub sbb sub adc sub sub fwait sub dec sbb pop sub out sub sbb sbbl frstor xchg pop sub xor sub adc pop sub fwait sub sub popf sub sbb jbe sub pop sub (bad) sbb dec sbb pop sub or xchg sbb sbb sub sub jmp pop sub inc popf sub sbb sub (bad) sbb push pop sub sbb lahf cltd fistpl pop sub add sub lahf hlt lahf cltd cmpsl repz add pop sub xor sub fstps jnp adc push xchg pop sub fldt pop sub lods popf sub sbb mov fldt sub enter (bad) pop es pop sub pop cmp sbb sub fwait sub sub sbb sub jp sub and sub or sbb mov pop sub lahf scas lahf cltd lahf and sub sub sbb pop sub fwait sub sbb pop sub and sbb sub or pop sub dec je sub fwait outsl jmp sub fwait aas push sub push popf sub dec pop sub and sub pop daa pop sub pop sub sub out popf sub pop sub fisubrl xchg pop sub lahf sub mov and js dec js sub pop sub mov mov mov sbb aaa pop sub sub mov jno popf nopl sbb sub sbb sub pop sub dec fdivl pop sub sbb cmp sub or sub sub ja cmp pop sub push cwtl fwait sub sbb sub jns fbstp nop cltd sub adc lahf cltd add pop sub mov negb sub sbb fldln2 fstpl dec pop cmp sbb sub fwait sub sub sub clc sbb pop sub loopne sub sbb pop sub popfw sub pop sub fsts sub sahf sbb outsb sahf cmp pop sub sbb sub mov sub dec sahf daa jle sub sbb sub fldt xchg pop sub sbb sub sbb pop sub fwait sub sbb sub sub pop sub fwait sub mov daa pop sub cltd pop sub push pop sub mov sub sbb js sub push nop cmp sub lahf push sub pop lahf cltd dec stc push mov xor sub xor sub xchg sub mov out in jae mov sub cmp and sub lea cltd lahf iret mov sub sahf subb or sub cmp sub lahf and es jne cltd xchg sub sub sbb sub sub jns lahf cltd popf pop inc mov shrl fwait cwtl lahf cltd mov sub call xor sub push xchg mov cs sub (bad) jb sub lahf mov xor sub lods lods sub rep lods sub stos sub lods cs mov test jnp lods sub lods sub sub adc insb mov sub stos sub lods push lods sub (bad) lahf cltd insb lods lods sub mov sub lods sub xchg lods sub sub lods jle,pn cs jle lods je lods sub cmp sub fistpl mov lock lods sub iret stos jle cmpsb stos mov sub mov xchg lods push lods lods sub dec lods imulb xchg jmp mov jmp cltd in jb sub sub or cmp mov sub (bad) in or ljmp in sub and and jnp in sub stos in sub sbb in cmp jmp mov sub ljmp in sub lahf je pop jmp (bad) in sub sub dec jecxz cltd lahf stc jmp ljmp in sub jmp push in cs mov sbb es ljmp in sub jmp imul in and sub dec jmp jmp ljmp in sub jmp cli in sub jb sub test ljmp das xchg xor sub in sub or sub lahf cltd fsubrp sub sub jmp test xchg sub push sub sub adc das ljmp in sub jmp leave in sub cmp mov das sbb sub adc sub insb cltd lahf pop ljmp in push cli in sub sub ljmp das push jmp out std lahf cltd inc int xchg push int stos dec sub sub insl cli lret or js sub dec sub sub push push adc dec lret das lret sub or jbe sub lret sub js sub mov dec sub jb sub orb sub dec sub lret sub lret sub dec inc jle sub and xchg and sub dec sbb int3 sub int dec sub sub adc int mov or sub dec sub sub and int3 sub dec sub sub xchg dec or lret dec sub orb sub sub lret sub sub and sub dec sub sub dec sub sub cmp int3 sub sub imul out sub dec adc sub dec sub int3 sub sub lret sub dec xor sub lret push lret ja sub sub les sub sub stos je sub dec and int (bad) loopne sub inc push lret sub lret pop xchg xchg lret sub addr16 push dec sub sub and sub lret int and adc sub dec sbb sub cs sub sub dec add xchg add sub into js lret sub add insb lret sub dec sub lret sub lret sub mov out add mov sub sub dec xchg nop int testb dec repnz jno into dec lret lret sub lret int daa push int int xchg sbb sub pop dec sub push cltd lahf lret adc int mov lret sub and lret sub pop int imul sub sub dec sub sub add cmovnp pop lret cli dec sub lret dec sub xorl sub lret sub dec add sub dec xor int jnp dec sub xor sub inc int int3 sub dec sub sub add pop dec sub sub loope lret jno sub dec sub int sti or sub and sub mov sbb sub jmp sub sbb pop sub sbb out fwait sahf daa pop sub sbb pop sub dec popf sub pop sub pop xor sbb bound fldcw pop sub ja sub mov xchg pop sub xor sub sub pop sub lahf mov das mov mov fwait cmp jmp sub fwait sub sub sub mov sub sub cwtl fsubrl pop sub sbb sub push sbb xor popf sub pop sub push pop sub rcrb pop sub lea xchg in pop sub stos pop sub sbb pop sub fwait sub sbb sub fwait sub xchg sub and (bad) out pop sub sub sub inc popf sub sbb sub pop pop sub pop sub pop pop sub inc outsl sbb jmp sub pop ds pop sub stos pop sub pop daa push pop sub add adc sbb sub sub fwait sub sbb pop sub lahf js es sub sbbb sub pop sub fnstenv sub sub sub mov pop sub and pop sub lahf stc sbb pop sub sbb pop sub fwait sub sbb pop sub adc pop sbb js sub fwait sub sub sub test pop sub lahf (bad) fwait and pop sub sbb sub jnp cs sub test sub pusha pop sub fwait sub xor sub sbb sub fstps mov inc pop sub fisttpl sbb pop sub pop sub das xchg sub lahf sub lret sub pop sub sbbb sub pop sub sbb cmp and sbbb sbb pop sub out in fwait xor sub or pop sub cmp xchg pop sub pop sub mov inc mov out pop sub sbb pop sub fwait inc pop sub bound sbb sub pusha cltd sub sbb fildl insb pop sub sbb push sub sbb sub sahf sub xchg pop sub ja ljmp sub sub sbb pop sub add stc mov sub sbb js sub sub sub (bad) mov pop sub sub pop sub fwait sub pop sub pop sub lods mov sub xchg clc out sbb inc fwait xor sub add or sub sbb pop sub fwait sub out sub movsl cmpsb fistpl fwait sub sbb sub enter pop ds sub sub pop sub lcall sbb sbb sub sub test push sub sub sub sbb sub orl nop pop sub mov sub lahf sub lods mov pop sub or pop sub fwait stos pop sub test push sbb pop sub pop sub cltd dec pop sub pop sub cltd push pop sub pop sub repz pop and sub xchg popf and mov fwait sub mov mov sub lea pop or sub sub fcompl mov fists sbb pop sub fiaddl clc mov stos pop add sbb sub fwait sub sub sub adc pop sub sbb sbb sbb sub sub pop sub fwait sub sbb sub sub sub sbb add cltd adc pop sub pop sub testb xchg pop sub push pop sub fistpll lahf int sub stos sub sub sbb lahf and xor mov jno sub addr16 cs sub sub and sub js and lea sub add sub sbb sub and push dec mov mov sub lahf push stos das jmp lahf jle jge cs lods sub jle xchg sub js stos jae,pn sub lods sub cmp lret cltd js stos jle,pn sub sahf lods sub sub aaa sbbl sub jl lods pop ljmp lret ljmp aaa stc jle,pn stc cs sub cs jmp cltd sub and sub cltd rol ljmp movsl ljmp into std in mov call (bad) in sub ljmp cltd lret ljmp jecxz imul cltd fs cld sub lahf xor push lahf out cmc lahf sub in sub sub imul in cs lahf scas clc in das cmc lahf cmp call add es scas dec insl fstps sub insl sub cmp sub (bad) jmp in cs and imul cmp jmp sub jmp mov je sbb call sub loopne imul (bad) sbb cli scas xchg fs das fldenv outsb mov mov dec dec loopne filds (bad) shrw fdivrp (bad) fimull jmp clc repnz add mov dec sbb clc cmp sub sub push xor aam inc push (bad) jmp push adc fldl add cmp out jbe adc sub push jns int3 sub (bad) roll mov arpl adc fsubl mov add loopne fistps stos and sar cmp lds cmp lds sub sbb pusha push sub add add cli insb pop (bad) xchg (bad) imul fnstenv push call sub add sub mov and fdivrl sub ja adc sub imul sub (bad) jb movsb cmpl (bad) out test sub cmp movsl push sub sub or nop int fucomp sub mov pushf sub lret loopne push ror ret sub rorl sub test roll fidivrl fsubrl mov pop (bad) cmp mov xchg bound or loope ret sub imul fdivl dec sub rolb insb mov sub leave popa mov sub outsl test test jp outsl sub cli jbe adc xor sub push mov push aad mov in call push sub pop dec mov sub dec mov cld data16 sub outsb xchg jae pop push sub push ds xor cltd pop or sub inc push cmpsl mov scas lock (bad) scas sub pop dec adc sub (bad) push sub or push xor outsl adc out fidivl jnp sbb mov movb int stc ja (bad) daa lahf sub xchg adc sub mov out aam outsl lods int3 shrb and fldt mov aaa dec mov mov aaa sbb lds pop mov decb adc sub jno movsl lret cmpl mov or sub jl xchg xchg sub int sbb mov jnp sub xchg bound sub jecxz jae das fstpl gs sub dec sbb (bad) leave push sub sbb movsl int lret hlt and into lahf data16 lods les and or mov mov sub leave stos mov xor lods mov lds aaa fstpl xchg pop jnp pop sub test and leave sti jg nop test mov shlb lret push subl xchg mov pop add lock pop sti sahf mov mov sub call or mov mov popa fbstp push or fidivrl subb mov mov scas or outsb outsb sub addr16 movsb push push aas sub mov mov xchg es adc sub sbb mov push imul jle inc mov loope sub shrb mov cli pop push sub (bad) fistpl int3 mov sub (bad) shrl sub ret adc xchg sbb inc and ja pusha sbb inc sub adc fidivrs nop dec js faddl pop sub xchg pop xchg test or jg jle loope loope sub sub add mov lock stos sub sub cmp inc sub xor insb inc scas das pushf sub mov shl sub sub jae fldcw pop lock cmp xchg roll sub mov jmp dec sub adc dec repz or pusha sub icebp arpl out stos je sub sbb cmpsl cmp sub xorb jnp mov shrl adc pushf sub push jno fstl fsubrl sub sbb mov loopne sub pop mov int3 aas pop testb (bad) sub sahf mov dec sub rorl or dec sub push jno mov cmpsb mov movsl outsl sub push jg push imul popf cld xchg loope pushf shlb enter cmp int loopne sub sub sub fsubrs repz jno cltd push enter ficoml mov dec and sub push pop (bad) sti stos and sub (bad) push push loop out inc push inc sub imul stos (bad) and xchg adc sahf mov add (bad) sub jno dec popaw mov xchg lods and xchg sub fisubrl sub xchg imul movsl ret push mov (bad) push pop jp ss cmp (bad) mov les outsl mov and push orb pushf adc sbb fcoml sbb popa es push js or lahf stos pop mov lea mov mov cmpl xor mov bound sub inc lahf cmp cmp sub mov sbb ficompl xor dec xchg or aaa add inc add adcl mov cmp shl push gs ffree test adc icebp mov mov test fs adc sub xchg pop sbb sub push push push mov jge test loop xchg sub jge add and lods add xchg jge cs and test adc sarb cmpsl sbb and outsb loope sub into add sub cmpsl es cli sub sbb jl fldl testl add jnp in sbb and mov fisubl mov sub orl cmp or or mov fsubrs and and mov aam addr16 cmp sub xchg push mov shrb mov insb inc sbb push add ret data16 mov mov orb int sti arpl sub inc push pop sub fsubrl sub add jp sub sub xor jle and out jg shlb test sarl jb jns sub pop arpl jnp fnstsw sub xor pop sub addb and xchg out aas add addb jbe push (bad) test mov loopne (bad) out sbb filds leave and sti stc out pop cmp mov loop mov mov (bad) or xor xchg rcll jne addb fxch mov sub rclb std sub lods andb cltd loope xchg jo or (bad) sbb aaa rorb sarl sub cltd inc (bad) aaa sbb jmp (bad) adc fisubrl jle xchg mov std adc in shr fcomp sub sbb pop push sub int jmp push fcompl (bad) jo pop xchg loop shrl in add and xchg sub stos cmpsl sbb jno rcrl dec imulb mov dec add ljmp aaa cmp fistl shlb mov pop hlt test pop popa add add (bad) sti enter sub shll cmovne cld sub mov lock sbb mov pop mull pushf sbb sub test sub cmc sbb sbb dec popa jg sub insb mov cmpsb xchg inc gs xor out sub icebp add xchg rcrb dec mov stos rcr in pushf gs sub dec inc sub add pop pop xor sub stos and divl pop lods dec lock fcoml fstl lods jno lahf and sub (bad) mov pop out cmpsb out sub in mov mov mov cmp mov mull sub and push sub cmp in push xchg pop push mov enter sub xchg adc fildl xor out cmpsl sub popa or sub push add mov out pop stos frstor mov xchg and (bad) push sub mov inc sub lahf stos sbb xorb fdivl lret rcr movsb shrb jno (bad) stc sub std subb sbb (bad) sub cmp movsl sbb push mov loope arpl ffreep cli sub dec sbb sub jmp ss cpuid jb sub sub sub es mov jne sub jl subl sub push insb and mov xor sub outsb pop subl mov inc mov lods sub pop and sub sub into bound (bad) and popf add mov sub sub aam pop cltd fisubl addb dec lea xchg notb mov mov jecxz sub sub mov pop je jne (bad) outsb mov sub subl mov pop xchg and sub jp add movsl das jle cmp mov jge push or pushf mov adc mov inc adcb pop sub cmpsl enter in or dec in xor sub into je and scas imul sub cwtl sbb lods sub pusha pop xor cmp sub cmp pop popf outsb dec ljmp xchg test inc sub ljmp mov nop rorl pop aas out sub pop fists add loopne mov xor sub inc push shlb fldcw push sbb sub dec (bad) jmp adc sub cld inc das lcall (bad) dec sub add dec enter sub movsl pusha adc sub (bad) adc jmp gs sub addr16 sub fisttps fimull sub int add sub add (bad) inc dec fwait subl mov aad sub inc ja xchg out test enter sub iret cmp repnz sub cmpsl sub jo adc ljmp xchg or subb sub adc mov test xor in pop rclb push out movsl shr dec sbb clc loop stos jno xchg mov dec mov test inc jae lock sbb scas jo add sbb pushf gs dec pop into int3 mov push pushf cltd aas pop and subb add fcomps lret xor repnz ss ret ss mov pop sbb cld fidivrl std add mov loopne inc aaa out mov je (bad) loopne pop jl out push (bad) outsb cmp add xchg and (bad) xor in cmpsb lods mov ja and fistpl add mov fs cld xchg jb cmp mov popa test mov add add aas sbb in clc jbe sbbb sbb cmpsl inc lahf ja cmp call sbb adc and mov sbb or popf jge sbb scas out and sub push aam pop out pop dec mov mov jmp pinsrw out pop fisubrs roll popf and (bad) test hlt or mov pop inc lret pop push mov dec out stos daa into out add mov in (bad) mov int or ror setbe test outsl loop lds in mov adc fmul mov dec (bad) fisubl stos push pop imulb fidivs rcrb xchg xchg adc lods popa sub inc sbb loopne cmpsl in scas push fildll inc jns add out push addl push xor out cmp (bad) jns xchg scas xor mov push (bad) and ja pop sarl sahf adc adc mov stos cmpsb adc jnp sbb cltd mov jmp ljmp xchg add sub mov dec dec push jno stos sbb rcrl pushf push loop xlat sub out or outsb push push fdivrl and push mov faddl inc sbb mov les cmp sub add repnz repz inc push addl inc sub inc ljmp (bad) fidivl sahf lock out and dec pop inc xor (bad) and xor (bad) adc mov out xchg int3 lret repnz push incl xchg ficoml enter dec subl faddl mov loopne mov mov xchg shl ja adc (bad) ror xchg outsl mov arpl nop jb mov dec out jne pushf sbb jo shrl hlt push xchg or inc (bad) mov sub pop jge mov mov (bad) (bad) mov stc cmp outsb and fldcw sub cmp cs into lcall xchg push rcrb fidivrs xchg dec cld jp cmpsb ja push test sbb lods scas pop adc inc (bad) hlt mov pop jne aas mov js sbb cmp lret arpl ja ja or enter das das cmpsb push in rorb sub push lahf insb jle test inc pushl mov mov arpl xchg adc cmp adc adc add js push mov xchg push sub push xchg dec mov adc cmp div sbb and popa fs or mov cmp ljmp sbb sbb push or aad xor fcomp mov rclb loope in test lcall pop or scas movsl pop pop push sarb push fldenv negb cmpl sahf cmp xchg mov sbbb aas mov ljmp and xchg jl mov xlat (bad) mov test jbe mov inc rorb fists (bad) dec sub mov loopne cld push cmpsl mov add (bad) push dec push sub xchg or fsubrs sbb rclb mov inc cmpb mov lret inc repnz clc sbb cwtl dec or insb xchg (bad) mov dec jmp jle and hlt jbe mov jle in insl mov push jae lahf mov sbb scas mov andb jge fnstcw sub pop jge shll js add jecxz mov ror pop push sbb or xlat mov es test jle into mov cltd adc pop xchg rorl dec pushf fstl xchg cmp add xchg cmc repnz cwtl rcrb sub or push xlat insl cmpsl int sbb xlat pop xor cwtl mov xchg fs aam rclb rcll or lahf push jle (bad) popf setne push movsl cltd mov pop or loope ret inc add cmp or xchg pop je adc jb xchg push jmp jne repnz test lret pop push lds mov jmp add insb push sbb clc repnz inc pop and fisttps cwtl fcompl sbb add xor sbb pop daa rorl add loope mov inc jb xchg pop ret mov sub lock ja dec adcl (bad) pop (bad) mov push lods push dec in sbb (bad) ja or sti addr16 cmpsl fwait or cmp jecxz xchg test sub js push mov mov in shl mov xchg push icebp (bad) mov mov jno and rolb out (bad) cmpsl pop cmp sub mov inc fwait cmp popa mov pushf mov cmp dec decb sbb jle jge bnd subl or add adc int3 (bad) xchg xchg lahf ja movsl fdivrl out lret pop loopne adc stc ja pop jg mov and cmpsl dec or mov leave imul xor jle or sub xor xchg inc adc out imul gs mov sub pop mov aam and shlb xlat pop dec add sbb andb and and out pop xchg add bound js icebp jno adcb xchg jg pop inc cmp int cmp repnz rorl ja (bad) cmp xchg lods adc call leave and std call mov xchg imull fsubp sbb fidivrl mov push bswap adc sbb scas jp lods xor push ror enter and (bad) push and cmp call int3 outsl cltd jnp add pop mov xchg push adc add fisttpl das jnp mov pop (bad) jnp popf jne adc adc fimuls rolb test jno mov dec pop jno ret inc out adc call out xchg imul and add mov lahf sub aam sbb jecxz daa inc add xchg adc jo sbb mov xchg add jae cmp push cld popf mov fisubrs mov pop pop cmp mov into mov xor push and add push jge mov push xor xchg push pushf cltd mov xor in fsub mov sbb or cmp push push lcall in out xchg divl fs mov or xchg fldcw sbb sub mov out popl cmp pop es mov sbb pop ljmp inc mov into mov out cmc mov sub nop test ret xor sti fucomi outsl jno jmp or movsl (bad) popf stos xor leave sbb loop fisubl int3 addb cltd pusha mov cld push xor stos (bad) mov mov repnz ja xchg repnz repnz mov xchg pop xlat out fidivrl mov mov pop pop xchg sbb out adcb fs test inc adc pop stos js jae enter lahf sbb hlt pop push scas xor pop ret out jmp into das enter mov mov push jmp push aas fs mov cmpsb lcall cwtl push mov jg and inc xchg mov arpl xchg hlt pop cmc repnz in push sub adc in daa rcll inc push add sarl fucomip pop or or adc fisubrs ljmp aam (bad) jne pop mov addr16 or and sub imul out cmp mov sbbb mov hlt push add mov orb mov (bad) imul or fsubl and fsts jb dec data16 pushf adc out mov add cmp dec mull xor push stos cltd adc push lcall sar fucomip jns sbb xchg jnp push or adc loopne,pn (bad) imul lods sub mull jnp push xlat cltd adc fisubl xchg xor xchg outsl daa in pop aad enter push shlb aam mov dec jb fisubrl je lahf ja cmp outsl cld sbb mov sti jo or xor mov fildl enter add cwtl aad mov data16 pop pop and sarb in lret into mov fdivl jl aad ret push or jns frstor push add aad and mov out movsl popa sahf pop sti into dec adc imul iret leave dec xchg cmc out test push mov in aad stc outsl adc cmpsl mov or xchg xchg jnp imul sti stos and or scas loopne cltd popf cmp aad sbb lea or mov push das xorl cmp sahf mov jo mov test xor out fmull or call fst fsubrl imul stos arpl mov pop push sub mov fistl sahf xchg outsl out insb shlb gs clc add pushf adc out lcall xchg outsl mov lods xchg ret push sub cmp pop cs int3 in fucomip pop rolb pop push clc xchg or sub jno movsl mov int3 push inc fucomip pop shlb mov clc bound ja mov movsl inc ja in jl cwtl bound mov popf cmp fs xchg xchg and dec (bad) into xor xchg xor push cs imul or pop add data16 lahf xor sbb inc mov dec leave sarb aas pause pop pop xor mov imul xchg sti adc rcrb pushf sarb in out mov loope add lcall mov sub arpl es adc xor sbb push in mov jae sbb and test add inc add dec mov fimull mov add cmp mov aad mov or das ljmp sbb or push cwtl mov mov shl (bad) testb ret imul push mov dec movsb adc and pop cmpsb rcrb (bad) sbb ss pop jecxz sub mov lds jnp lret sub sbb loopne add mov (bad) out mov icebp add cmp or push push scas pushf mov shr rolb inc or fcomp pushf push in pop rcrb mov sbb test pop das idivl and and call push subl mov mov enter jg dec mov or call pop fiaddl mov mov dec adc xchg lods mov test xchg xorl adc sbb lahf ja lea mov shll push mov sub mov aam fwait sbb lret xor aaa xchg rcl mov pushf fsub push and mov mov mov nop jae sbb and stc push roll call movsl cmp cwtl ja dec ljmp and fs xchg ja xchg dec ficoml ret mov or in pop push stos xchg push fisttpl in (bad) scas nop sbb pop fs test dec push jmp xchg sbbl mov inc sahf mov sub sub pushf jno pop dec (bad) mov xor ret loope rclb pushl out lahf dec sub sbb ficoml lret stos mov outsl fildll mov mov bound pushf mov imul insl mov or iret mov or cmp dec xchg adc xlat xchg ja adc mov scas mov dec out mov mov xlat sub lods push adcl sbb negb sbb sub and sbb (bad) scas icebp dec js fwait test sahf push mov sbb adc out (bad) pop into cmpsb and scas shrb daa (bad) or add jg data16 pop stos dec stos test ljmp addr16 (bad) jg inc or mov sub ret sbb in mov jns xchg jns mov jbe xchg and sub inc xchg mulb pushf sarb jecxz (bad) (bad) outsl or pop jbe push jecxz mov mov jmp pop in sbb and (bad) cwtl movsb movsb adc fsubrs xor mov ret ret sub jecxz xor adc out les lahf dec add pop bound push mov gs add nop sub popf mov mov mov sub ss test bound dec pop es cmpb mov xor push test aad stc test xchg nop sbb jns push lea inc outsl cmp jmp lcall pop (bad) or ja jecxz rorb cmpl imul dec sbb push movl pop add cltd sbb xchg and lahf pop jb out xor push stc stos aaa test push fistpll subb and adc adc data16 test cmpl adc mov (bad) push enter (bad) mov rorl fcomps imul jecxz pop mov mov repnz pop sub rol lods fs (bad) fdivrp movb add sarb es int3 fs mov insl mov pusha fisubrs fmuls inc mov adc out and arpl fisttpl mov scas int3 and lret clc cwtl mov sub roll push vorps jnp inc or das add xlat pop in test pop nop jmp inc fwait rcr mov jae dec insb mov sbb mov iret jp movsb sti jbe in jge addb sbb sbb sub sbbl mov jmp or jne and pop and (bad) adc mov imul push xor in test sub imul test clc and in cmp jbe pop lods inc lods movsb cmp je inc (bad) popa bound lcall std test jbe into mov sbb dec push add xchg inc xor adc fnstcw sub mov sub xor lcall int imul ficomps lds out cwtl push out movsb jmp sbb test pop jmp jne xor dec xor sbb and (bad) sub lods cmpsb sbb fstpl cltd testb mov mov xchg jge in sub ss push or out (bad) dec sbb pop rcr dec test mull cmpb pushf adc int fcompl in or sbb lahf scas andl imul xor sub adc lret add cld sub mov push call pop sbb dec jge and fucomip imul rorl pushf add ja in stc dec push mov lret dec cmp mov shlb xor loope addr16 jl add adc cmp pop rcrb or (bad) add sub xchg ja adc fisubl mov sbb push fistps and jb and rcr testl sbb rcr in pop mov int jp sti std jle mov (bad) adc cmp pusha sbb nop adc xchg call (bad) push mov lods movsb mov mov aas loop sbb jbe nop stos (bad) jmp or and sbb push pop add mov rorb adc lds jmp adcb xlat cmc in xchg mov out ljmp pop add sbb sbb call push adc pusha adc test push aas mov add mov and fiadds aam mov test repz mov push test push ja clc adc fisttpl into cs adc sbb push push loopne dec sub loopne ffreep lahf or (bad) xchg cmp inc adc add xchg xchg jno,pn jle cmp inc jle mov mov push cmp aad xor jne aas dec inc test adc and ljmp ret mov or sub call imul sbb call bound xchg lret cmp loope ds lret adc lretw xor fistpl xchg jl hlt mov inc fisubrs push leave daa dec loop mov xor mov inc add push mov (bad) sbb adc leave iret fsubrs mov cmpsb sbb pop pop push push jge dec xor popa (bad) (bad) jbe ret mov aad xchg rolb adc xor mov stos insl ljmp sbb icebp negb xor push lods adc mov jo and repz or shll enter aad negl sub push fcomps andl out mov add aas mov fldt arpl pushf cmpsl mov es cmpsl jge dec scas push sub nop in in pop in mov call mov testl in imul pusha pop cmp stos adc fdivs les xchg es add (bad) mulb xchg push lock xor push mov mov pop xchg out (bad) mov lahf cmc (bad) adc inc xor stos cmpb je sbb jg subb rorl mov fdivl xchg daa inc lahf ja mov pop popf push lods and test push push sub xchg test mov xlat sub lret ds xlat in dec jg and insb imul push push loop push ja clc rolb mov jne or cmp pop sub or cltd js pop aas push inc or sbb enter in mov frstor adc mov dec (bad) int3 nop adc sbb jge fs lret int lock outsl fcmove jge lock dec pop mov cmp mov cmc fcoms push (bad) rclb push mov add shlb pop ret enter int pop jnp mov fcmovbe push iret mov push cmp ja xchg repz test test sub xchg xor sub fiaddl mov gs out mov and subl fwait and stc xchg dec mov sbb mov int pop jg mov (bad) in add pop pop lret mov sbb and jp (bad) stos aas or decb test pop stos js movsl cs scas (bad) fucomip jb imul sbb xor add add pop add lods mov cmc out or adc cmp insl (bad) xorl in jle sbb movsl pop test insb mov fsubrs mov xchg or add add sahf and fists xchg lahf fwait xor test insl cltd mov fidivl (bad) lds jmp imull loope sub or xchg adc inc jp and xchg sbb inc pop mov fs pushw test sbb adc jg mov jbe mov jno sahf lods and imul inc int3 mov adc aaa mov mov shrl cli inc repnz out fidivl add push int3 sbb aas and sub mov xchg testb sbb mov movsb stos and sarl push rcr push ret dec fistpl repz popf inc imull clc (bad) pop std lock inc fnstcw lret sbb mov and pop adc aaa mov push or sbb cs cmp pusha xor pop dec movsb outsb test gs inc sub clc cmpsb ja pop mov xchg ja stc push ret pop mov sub xchg and into sbb mov mov out std out sbb aad int3 cmp xor sbb or (bad) dec dec mov and stos fs aad nop cmc jg out mov add fcomps push sbbl pop popa movsl insb and and push mov cs fcmovnbe fwait outsl scas jne bound lods js imul notl lods fistpll stos imul sbb xchg push jge sahf je aas sbb lods pop adcl push ja jmp jo ret jle lock and dec jge popa (bad) cmp pop loop push push cmpb mov push pushl lahf ret adc jle sbb fimuls jecxz test mov mull jg aas mov mov push das push pop sbb jns push adc lock shl xor mov push push adc adc pop inc mov jne adc jge mov sub dec lahf in jo sbb jne lret test xor fsts dec pop inc mov jp jo adc add out mov adc ss sub lea mov adc dec and push push mull jns and daa mov out fisubrl imul mov mov cmp sub loope mul loope push sbb setae lret loopne imul cmpsb lret int3 lods adcl adc push mov out xchg outsl addb push mull jmp cltd dec cwtl loop lahf dec gs lods xchg pop shl dec test or mull (bad) sub pushf into (bad) dec ficoml sbb or pop clc insl dec ret arpl xchg cltd fldl mov std mov push xor test popa mov pop jg jnp jo out fimull push psadbw cmp inc test mov push lahf subb pushf adc jge cs dec les negl stos fisubrs ret sbb sub and cltd jp test into lods loop popf (bad) and mov sub adc imul push xchg xchg mov inc sbb rorl imul and lods in and dec push mov sbb out or push lds int sub in inc push fldcw push in jge (bad) dec mov cwtl inc push jecxz fidivrl jo ret push mov leave adc mov (bad) or out cmpsl stos or ds dec cltd nop dec popa pop roll mov and lds sahf ret insl aas add test xchg inc sub lret mov dec push jnp sub adc push ss adc mov test out (bad) ds enter jecxz testb dec or bound rorl adc insl push (bad) imul scas push sub js and out insb and testb fcomps push mov mov jg addr16 mov cmovg adc ds ja jmp in (bad) fisttpll sub mov clc iret test dec jge dec mov push popa dec aam push rolb inc add leave sbb xor pop daa fisubrl sbb les fdivl cs cmp sub mov xchg cli call nop adc add pusha xchg pop sub ljmp mov sbb jp pop (bad) adc xchg push (bad) sbb sbb push add push out iret pop roll test mov fisttpl xlat aas add clc cmpsb xchg repz sbb insl int imul pop lock lret (bad) xor scas lods inc jmp cmpsb cs ret iret xchg sbb lods outsb jno ss mov inc fs nop mov dec nop sub lcall jo jbe jg outsl filds push fldt dec sub dec mov or imul dec mov xor lahf mov sbb add mov push inc pop sbb imul pusha lock js repnz adcl push mov stos cmpb popf cmpsb dec sub dec ss loopne daa fcmovnb jmp xcrypt-ctr cmpsl lahf test (bad) loope push std enter insb pop fbstp iret mov and addr16 sub push in outsb clc in sub dec cmp ds mov (bad) int subl imul es push notl xchg jnp xchg pop jecxz sbb int loop mov dec inc jecxz mov imul das shll mov cmpsl fistl pop shlb push int sti mov jg loop aad rorl enter mov fbstp outsl push shrb mov hlt (bad) in stos push cmp lods cli ja sti sub enter stc mov mov cmpsb lods in (bad) nop fisubrl push dec cltd or pop sbb xor pushf pop cs and xor mov sti lods mov sti or sbb pop mov push incl push and xchg cmp mull movsb scas cmp mov push ret xchg cltd xor fistpl addr16 jge into xor sbb (bad) cmp lret bsf sub push mov cmp clc mov xor rcrb addr16 mov ja inc push (bad) cli lods bound add mov fwait xor (bad) or into pop cmpsl mov fisttpll xchg cmp sbb lahf xor fmull xor pop mov cmpb mov jnp mov inc cltd or out xor popa push mov fwait loop pop test out and sbb jg inc dec cmp test xchg pop filds cltd imul test mov (bad) inc aas mov dec cmp push cmp mov int pop mov push rcr push (bad) cmc pushf dec shlb and addb xor aas test jg iret xlat mov test jmp mov into lods in mov mov dec ficoml sbb inc jle mov out xor jo mov (bad) cmp int3 bound popa mov adc fidivs adc jle push ss test sti xor mov leave pop notl xchg repnz les inc and mov imul add ja (bad) mov stos mov cwtl stc mov jo or cwtl subl imul sbb sbb jg push fs mov jo filds iret pop daa std nop mov adc pushf push shll push pop loope ljmp enter ret sbb pop xchg mov push dec iret test insl lret jno sub pushf cmp adc adc mov add popa dec sbb and (bad) dec adc add mov mov push out dec idivl ljmp dec sub leave ret sub lret add vhsubps sarb xor imul repnz sub sbb insl push sbb sbb inc dec dec or arpl add inc mov jecxz jns push xor xor jbe xchg mov dec push xlat das gs push adc cmp cs scas stc ja rol test cmpsb mov mov mov mov stos js sysenter jge clc jb mov stos cmp mov (bad) aaa inc scas push sti adc stos fists xor push cltd daa cld dec sbb sti mov into pushf cmp and or cld test pop xor cs ljmp leave and gs jb and xchg inc mov push pop jmp xchg or clc jle cmp or movsb xchg pop push and ja aaa mov sahf and or mov add lods movsb xchg cmp jmp sbb ds xchg iret lahf inc sbb dec dec (bad) call and xchg and in push pushf pop (bad) in cwtl jge mov lods inc pusha ret fucomi ds xor add imul out imul xchg inc notb outsl int3 cmp out sub mov xor lods push and aam fisubs mov mov xchg pop xor mov pop stc xchg jae lods test (bad) lods test mov push fldt aaa and xchg dec es outsb call xor mov xorl xorl test pushf fildll test stc fs jg push clc mov repz add pop pop inc inc test leave xchg mov push ds addl mov mov (bad) (bad) adc jge mov fdivp mov fdivl clc in subb sbb xchg arpl xor adc rcrb leave in jno or sub add das es xchg lcall stos xchg lcall subl fbld (bad) leave mov xchg add test fwait and add in jecxz push mov jbe lret test push subw test mov rcrb pop loop repnz pop cmp lds dec mov cmpsb push adc jmp fstl pop and cmp arpl adc mov aad loopne xor push pushf into test ss xor pop cmpb lret sub cmc scas pop lea mov dec dec push ljmp inc aas push lock inc int sbb cld int xor cmc decl insl movsb pop mov sbb leave test das push ret lret add shll outsw pop xchg xor sub rcll adc mov sbb mov lahf nop insl cld adc mov cltd sbb je mov or mov in jno inc sbb or inc into sbb dec loope and shll inc outsl adc ret pop into lds fcomps incl dec adc mov jl ljmp dec call push mov stc repz add push sbb movlps dec out (bad) adc pushf mov or mov sbb cmpsl into jne imul int3 jb jno rolb mov dec or (bad) (bad) ds push scas (bad) ds pusha loopne aaa pop cmc jecxz les pushf icebp ret fxch cmp pop fdivrs pop add cmova call mov cld (bad) mov mov mov and fs test test sbb je pop pop adc mul into cltd (bad) repnz adc lods dec xchg out push push mov bound orb out jbe test stc scas cltd xchg das xor lods and dec neg inc loope sub sbb push dec pop outsb xchg push ljmp stos popf push jle aas xchg test push push in imul sbb adc and inc jne jle popf lods mov data16 outsb mov test test test sbb lods lds push push aas mov mov test lcall mov push lock fcmovb xor shlb mov frstor mov fs loopne push ds jno adc lea (bad) lds sub stc inc add into adc daa div icebp repz outsb sarb aam (bad) push mov mov andb sbb insl out xor sbbl repnz inc xchg and push sahf arpl fstps sub int push imul ret xchg mov mov (bad) sbb arpl sbb mov xchg loop popa fwait cwtl arpl testl ror sahf out outsb adc int (bad) fdivp push adc lea xchg mov pop addr16 imul popf xrelease fdivrs and inc push ja popa push cmp sbb xor jae insl mov push out add add pushf adc mov test sbb in xchg adc inc in mov andl mov loop push jo mov shrl jbe mov lock xchg fdivrs and shll testl fwait (bad) frstor sub cwtl ret daa push cld test imul hlt fidivrl sub int nop cmpsl cwtl call dec fnclex mov cmp pop cwtl in push fs fimull imulb mov mov and cld cs mov xchg mov mov mov pop out adc dec arpl jp in mov dec mov jnp jmp frstor mov dec adc idivl add stos mov mov add jb and dec inc push test pop jl push int std or inc sub xor cs mov repz add ret xlat cwtl pavgb and das jne xchg daa xlat icebp jg cmp push mov test lods sbb or ja lahf fsts out lahf je dec fwait addr16 aam cmp inc adc call js jge (bad) shl inc push lock iret imulb imul out jbe int cmpsb movsb xchg add jg (bad) jecxz push out add loopne loop ljmp lds gs movsl cmpb scas push (bad) out decb cmp sub jmp lods insb mov dec inc adc das mov xor pop xchg cmpsb jle scas inc push repnz pop int push leave daa addb mov dec shlb push sbb mov push jbe dec shl inc ss xor jecxz aad pop bnd xor cmpsl add decb in push inc ret insl je mov test dec mov ret scas mov lea push sbb shlb imul sbb stc or and scas in (bad) sub out cmp push lahf rclb mov clc xchg dec scas mov loop ret push sbb imul inc push iret cmpb mov (bad) es inc jg jnp cmp daa xchg imulb xchg mov or mov repz cmp loop dec or negb testl shll mov scas mov nop fcoms inc shrb pop scas ljmp ljmp dec jmp mov in pop cwtl out test (bad) sub inc jnp lahf js je (bad) jo adc (bad) in js xchg sbb push outsl lret or sbb popa fwait sti fstpt jbe mov or pop bound sahf xchg rolb out out mov inc aam add rcrl mov xlat push clc mov sub bound (bad) imul and outsl imul clc mov scas mov cmpsl mov int3 xlat mov xor adc into ja ret sti mov adc jge out imul jmp fxch scas push movsl call fidivl push rcrb sti je mov mov push fs add scas (bad) pop cmp push aad dec lret sub int3 xchg mov adc dec jge arpl scas in add mov loopne orb pop pop jb adc mov mov loop shl and into add sub inc scas pop in scas xchg xor and add cmpsb js mov jge ret call repnz mov xor lahf and adc imul cli mov out out (bad) jecxz les mov sbb lea sub xor mov aam push pop lods push scas push dec test es in or psrlq enter mov sbb fisubrs fwait lret sbb jle mov cmp lock xchg mov roll lret or mov sbb lahf js (bad) (bad) jle pop int test mov add sub dec inc stos daa sbb hlt add subb dec dec mov mov in (bad) and xor jae xchg push inc xchg or mov pushf and imul push movsl popa out negl clc outsl fbld rep or fst loope int3 int3 repnz enter inc cmp in sarl adc cmpb stos adc push bound xchg jbe stos out push adc mov loop mov int in hlt sbb push andl out mov test inc fs je mov bound addl mov (bad) adc xorl mov lret bound push mov ljmp cwtl xchg xchg adc mov aas jae loopne test adc std (bad) fld xchg inc test ljmp mov pushf adc xchg pop js es mov or push enter (bad) icebp xchg xor out movsl addr16 call rcrl idivb in stos jle sub mov addr16 jmp fcompl mov xlat adc xrelease gs lcall fs movsb in int sbb lea (bad) adc cmp mov (bad) stos (bad) ja (bad) mul gs (bad) or pushf mov push gs mov lcall fnsave and outsl push cmp push ds pop std ret and mov insb popf mov mov push out xor sub imul inc fs insl sti sub in loopne fwait add daa gs mov aas ljmp and hlt sub jne loopne popa je outsb out push or shr cmp ss mov sbb enter push lahf inc (bad) push nop in add movsb and dec cmp scas mov inc lret (bad) enter not int3 jnp inc xlat cli cmpsl mov dec stos fcoml jg xchg outsb adc das or imul int pop out push mov lret mov loope jecxz inc iret insl cmpsl or incb sarb scas cwtl adc inc loopne out push cmp pop jno (bad) aaa or loope mov lods shrb data16 scas mov lods inc cmpsl fwait std (bad) cli insb pop nop mov insl fs adc lock fs pop xor pop adc inc or faddl mov out lcall xchg outsl dec in insb rorb lods or dec gs clc leave push and fcomi ja xchg outsl dec in mov mov ret push sub cmp pop dec jns out paddusw js fwait repnz stos xchg cmp mov push pop mov test xchg sarb std es out cltd pop fisttpl xchg lods test enter addr16 xchg out ja mov mov mov ljmp dec sbb fsubr add pop movsb shlb cmpsb out cmp lods push xor inc call lret xlat and dec sbb mov dec adc sub jno das sbb enter test jg fcoms cmpsl pop mov shrb cmc and in jg out xchg jo xchg stc fidivl iret outsb jmp dec dec mov nop cmp dec leave push call mov decb lcall dec out mov mov xor fisubrs sbb mov fisubs loope daa adc sbb aaa js push sbb mov ret sbb pusha cmp inc clc cmp andl sub pop fs pop je,pn fildl and pop imul repnz pop push mov aam push cs iret shrl out iret test andb push add aaa fimuls pop mov sar jecxz xor mov aad js cwtl jo dec rcrb cs inc in mov (bad) sbb adc dec inc jae adc nop sub sbb aaa aad sbb push sti inc pop jle stos xchg mov pop cmp mov mov mov outsl cmpsb and outsb fwait nop mov sti inc pop mov loope mov ja lret sbb shr daa inc out push sbb adc mov add sbb outsl fisttps and mov sub lds ja push add xchg and shlb fwait insb mov and sub dec xor (bad) (bad) mov outsl shrb push rcl xchg test cld inc fs adc push out cmpsb jle mov fildl adc xchg cltd sbb sbb push arpl push add cmp fistpl je jnp mov sbb in andb (bad) push add adc clc cmpsl mov jl adc sbb pop test sahf jecxz sub mov xor mov xchg dec sbb mov (bad) jp pushf adc sub mov and (bad) lods jge popf push mov xchg (bad) jmp jecxz into pop push clc arpl or push mov and imull or mov mov xchg arpl mov fcompl gs hlt mov faddl (bad) fsubs jmp add jno jae ret gs mov adc mov mov add dec cmp (bad) push mov (bad) mov push push adc jg lock int jno mov inc sbb inc cmp dec sub push cmpsb movsb jecxz arpl mov xor and gs sti lods out mov cmpsb push mov or pop cmc in cltd fsubrp cmpxchg lods test cld shl fsubrl clc cmc cmpsb ja sbb fiadds xor cmp popf mov lods fdivrl jg pop daa add sbb adc aaa sub fcmovnbe pop les setae test test adc stos xlat mov mov fmul inc fbld sbb fsubrp mov push xor xchg add mov or sub int clc test sbb aam add ja (bad) loopne rcl sbb ja sti mov clc imulb cmp insl mov fistpl dec jge and sbb pushf mov das imul leave outsl ja clc and ja xorl add nop sbb push (bad) push add lock (bad) mov (bad) cmpsl mov ss rclb xchg inc loope lcall xchg les pop fistl shll outsl ja sbb stos jmp mov sbb test (bad) xor cli mov fisubrl xchg mov loopne fcomip pop dec sbb (bad) cs pop lcall arpl lret pop mov mov out scas cmpsl push rcl ffreep cmp sbb divl push mov fiaddl inc push add xchg aas sbb push popf cmp push sub pop out xchg mov out sbb in dec cli ja adc mull sbb iret pop pushf int ja fisubs in cld int sbb or movsb mov mov ja mov and xchg sbb scas (bad) loop jae xor (bad) cmc movsb stos repnz xchg pop gs jle jecxz cmpsb enter adc out add inc and insl mov pop subb jmp and dec sub imul pop jmp mov pop pop addb xor test imulb mov adc jmp xchg shl dec shll dec mov cmp add push dec (bad) push and push dec dec shll (bad) sbb rcl (bad) pushf shlb sbb mov in mov mov (bad) adc dec and pshufw push call and (bad) out notl out mov testb and add dec mov clc (bad) lds pushf jns icebp inc shr fcmovu xlat (bad) cmpb or sbb inc mov loopne sub lahf fisubrl jge lahf ja popa mov push mov mull jnp push inc mov inc loopne fistl inc fucomip adc sbb xchg es push inc call ss mov xchg out in xorb xchg add loopne cmpsb stos out fcmovu lahf fistpl inc aas mov out push fs inc pop sub mov test add fisubrl cmp out and push push ja lret out ficoml cs pusha add in ret pushf sbb or push or mov mov out fildll into nop rcrb sbb clc (bad) xchg sbb lret xchg mov xchg mov sub sbb out test push sub cmpsb ja lret out fidivrl fistpl loop in pop xchg jb and adcb ret pushf adc push add mov pop aaa outsl fistpll mov imull clc (bad) lea mov push test notl pop and ret pushf mov ja out hlt fisubrl xchg pusha lahf fcmovnb bound rcll js lods jbe in gs adc out inc sub clc imul test sbb fs push ja sub (bad) fistpl in cwtl in pop fidivrl add sbb mov lods imul xchg ds test adc enter gs shl sub mov loopne mov out sahf rcrb jae add cmp mov mov ds cmc jne mov push or sbb int stos arpl imul test popa dec sub into xchg xor cmp and aad (bad) in mov lret mov aam fdivl xchg lret sbb (bad) mov cltd mov inc arpl stc aam cld shll cmpsl adcl sub stc sub and xchg das mov lahf mov xlat sub into rcrl insb dec mov pop addr16 (bad) xchg (bad) mov pop in (bad) mov fisubrs push lahf stc mov add jae ds outsl mov adc adc incb jg hlt lods cli cmc (bad) push imul mov cmpsl xor fsubp mov adc push mov lgs fwait lret and std lods lahf ja xchg outsl fucomip pop rcrb lods and (bad) push ja xchg cmc sub stos out out sbb xchg outsl imul sbb fs das fldenv mov mov dec loopne filds xor push mov mov mov mov mov sbb test test xor addb lahf ja out outsl xchg or adc bound sub fnstsw out cmp sub mov loope jns int3 mov rcl fs (bad) mov arpl stc fisubl mov sbb push fistps and std fs mov or je xor push out sbb outsb pop data16 sbb add push clc xchg clc insl inc xor xor push call mov (bad) testb lea cs push mov leave add mov outsl sahf pmaxsw push clc (bad) jb test inc fs mov push xor mov lret ss scas nop rcrb lods fucomi shlb push sub (bad) int pop mov adc pop sub xchg (bad) aam out movsb fdivl cmpsl push into jae xchg bound sbb lds fisubrl lock dec sbb mov outsl lcall xor leave popa mov mov mov mov sub outsl lcall jo xchg sbb test and push mov or xorl popa (bad) pop dec mov ret or data16 adc jne adc movsl call xor pop or cmp std iret lds cmpsl mov testb test pop dec adc lea add xlat or xor imul fistpl pop outsl movb lods and ja (bad) daa lahf cld nop adc out fisubrl inc lret mov xor xor stos lret scas rcl and fstpt xor pop sbb sbb lahf fs adc pop mov (bad) int xchg aas adc shlb mov mov movl or ds std jl xchg xchg dec and push sbb mov jnp notb nop push jecxz jae fistpl gs les push rol iret adc xor mov int and enter and mov lods les rorb mov push out mov ljmp add cmp lods mov lds fistpl xchg pop jge pop decb jp data16 std jns xchg andb mov xor cmpl mov pop add testb sahf mov mov sub call fidivrl mov mov arpl xor out and cltd cmpsb mov aad xor scas or outsb outsb into popa loopne mov arpl rclb mov mov and adc mov mov outsl outsl mov mov mov loope jecxz sub sbb lahf add push lret mov xchg jbe ss (bad) shrl sub pop sub cmp pop ja sbb jno jns cmp fidivrs dec jle fiaddl pop iret inc mov xchg pop xchg test adc popa js out cmp mov sbb test lock stos sub xor cmp fucomip inc inc sbb inc test lcall shl (bad) cs dec cmc jne (bad) push push es lock jae xlat add imul mov jmp cs add xchg dec cmc jmp jl ds mull call sbb cmpsl cmp outsb imul cmc lret mov lods and (bad) jns xchg adc in cs xor lds loopne fnsave mov jecxz inc inc dec mov mov and xor loop outsl sub jno cli pop cmp in sub popa mov adc adc fisttps loop xchg movsb or or cwtl bound ja xchg loopne jnp sub int gs push ja lahf push into xchg fcmovbe mov dec and rcrb pop rclb inc mov fs jns sub xlat xcrypt-cfb cmpsl in mov movsb fisttps int3 adc out xchg xor pushf cwtl cmpsb inc into dec add loopne xor dec pusha addr16 lods and push mov aas push in loope xor (bad) fstpt insl decb shlb and inc dec mov nop adc fidivl cltd jns das inc mov fisubs and and js pusha sub in cs repz add pop test notl add adc out push movsl fistpl outsl loope cmp mov lods push ja into mov jae daa imul fildll cmp mull aam fs xor out jmp mov xchg xor xchg loop cld adc sub es data16 in mov jne dec decl dec cmp xor pop sarb (bad) ja mov mov je ret out sbb js jle (bad) mov rcl sub cmpsb pop xchg fadds adc outsl adc add pop popa insl arpl fwait shrb cmp or sbb adc aaa inc loop and sbb mov mov fildl mov sbb mov into in xchg inc insl sub mov daa les outsl pushf push pop pop xchg pop push or or cwtl ffree (bad) fwait (bad) lahf pop int cld mov cwtl dec xorl mov push outsl fbld push mov dec jns cwtl sub inc mov in nop mov (bad) mulb shl outsl mov pop sub sub (bad) gs mov notl arpl pop lret loopne jns lret dec (bad) lods jmp rcll push lods int add popa fs fs xchg push sub dec idiv rcpps (bad) (bad) pop sbb push lea xchg lods iret lds std mov in jnp jno test adc mov cmp hlt inc jbe cld subb mov mov std sub add push (bad) mov test sbbl mov xor decb mov in pop loopne xor mov xchg sbb or mov or jns cmc sub imull cli and mov add inc lahf ja push (bad) hlt fsubr popf jl jle iret outsb sbb lea aam and adc mov das loopne jbe imul and cltd mov mov orl rcrb (bad) adc lods cmpsb pop xchg fstpl sbb loope fdivs repz mov out aad int xchg xchg sub scas cltd xor call push loope ret sbb loope cltd mov mov xor push mov push loope cvtpi2ps fcompl rcrb dec shll pop mov shr cmp sbb sti jle (bad) mov (bad) out mov and loope xchg xchg pop cmp push loope sti adc cmp jl dec xlat xchg mov inc addr16 loop fmull popa jo mov fdivrs loope test adcb mov jns push or loope and dec lock out icebp mov leave xchg xor in stos addr16 into sbb into pusha jns nop call sub xchg and out stos lret mov test fucomip push or arpl cmpsb in scas hlt pop aaa rcll mov into into cmpsl xchg push dec mov jne in or xchg cmpsb sar dec mov push pop into sbb inc leave ja call pop inc popf inc jno aas aas mov aam push testb les jns loop fmull xor push adc mov test loop mov out sarl pop jnp fchs test cld and adc push xchg push adc dec pop jecxz and out fidivl add pop loope add test int mov jo jo jno add dec nop ficompl add loopne mov movsb xchg mov fsubrl sahf xchg mov ss popa outsb loopew sbb xchg xchg jmp mov inc mov out jne or and push out lods andb jbe pop (bad) js (bad) push push xchg out ljmp push xchg dec dec sub push sti nop insb inc jbe or call push dec mov pop push pop jmp inc dec or (bad) insb repz cld (bad) pop mov fbld test out add xchg cmp lods fucomp sub sbb jb add pop movsl (bad) shrb mov mov fimuls std enter shll push loopne jns add lahf ja sbb std in pop inc test lods and mov cmpsb cmpb lahf adc clc rcl xchg sti adc int fcomps adc push nop xchg pop mov jb imul out mov inc or mov enter inc pop pushf or push in lods dec fmul sub add cmp jge xor shl lods push or mov mov cmpsl pop rcrb lret imull fcomps inc xor cmc mov inc (bad) sub sub adc sbb fstpt scas lret push enter (bad) iret movsl lea cltd add inc mov ds inc inc cmpsb dec xchg ret jl pop xlat mov arpl push and mov and andl mov mov out pop aaa sub xchg subb stc push not jmp ret and sbb dec mov xchg xor xchg pop test xor mov sub scas sti shrb xchg (bad) enter aam mov and lahf jmp push xchg data16 ljmp lcall aam jmp aaa add mov arpl lea rorb xor push xchg rorl (bad) flds pop push add push loopne test jmp jb lock xchg loopne daa es adcb fmuls fsubrl adc add movb push outsl inc insl data16 std pop fisubrl jecxz out enter jle sub rcrl fildl adcb (bad) pop mov loop jp test jns sub mov mov out push xor in and push jecxz jg into xchg mov scas mov dec or sub out (bad) loop out sub lea (bad) arpl ja inc sub and sbb jo xor enter stos ja outsb add inc cs out xchg pusha bound stc adc push push mov xchg mov mov push cwtl xor xchg cmp test cmpsb ja imul push xchg gs shrl aas add nop std (bad) shlb enter mov xorl inc push rorb sbb insb stc out int xchg mov stc push or fidivrs pop push jmp dec ficoms cmp mov daa mov mov cmpsl leave lahf pop mov jmp inc dec filds jnp push and enter leave aad js xorl gs xchg xor inc pop fdivrs inc xor les xchg popl ja inc push fbld (bad) in cmpl mull push jg sub nop push cmpsl push or in cli xchg test enter ficoms (bad) sbb jge push pop aaa (bad) fdiv push push stos in jnp push pop mull xchg add ja adc xchg push inc mov fs xor and insl xchg ljmp inc (bad) es cmc push pop les adc pop pop rcrb es ret lahf fs mov addr16 loope (bad) mov repz pushl xchg adc dec xor xor mov repnz pop test jbe enter mov inc andb out dec add icebp dec jb mov adc loope add test test pop into mov js cmp sbb mov movsl mov repz orb add out gs scas cmc mov inc sbbl adc adcl push inc sub subl mov xorl xor xchg (bad) pop lods adc xchg leave pop sahf dec pop adc cmp outsb test psubd arpl vpunpcklqdq and or jnp inc lock fdiv sub jp xor lret mov popf nop loope pop adc sbb mov in testl adc data16 (bad) outsl sub push mov in test xchg mov in mov jecxz sub xchg push xchg mov jb pop (bad) mov cmp adc pop insl (bad) scas fidivrl push das lret leave repnz cmpsb jnp xlat jns ljmp clc inc in test movsb pusha test xchg shrb xor and add xchg gs pop iret sbb sbb inc sbb mov in mov fmull fcoml and rol mov mov popa add xchg inc outsb pop inc hlt pusha popf cmp lds int inc sbb cmp push mov into cs addr16 cmpsl jp popa aas fcmovb cmp mov testl add js shll adc rcrb dec sbb dec dec pop or cli sbb add aam out pop xchg and jle ljmp leave fdivrl jnp int xor shlb cmp movsl std test adc fcompl inc lods hlt aas push int sbb push ja and dec incb cmp mov mov xorb addb shll mov in adc mov and fmuls ret or out loope stos jo sbb sar and add mov sub enter dec das mov mov cld cli (bad) out filds mov mov cld adcb xchg jecxz and sarb and in mov push add pushf xor gs loop stos jo mov fldl xchg scas cld mov fisubrl pop pushl push mov jg lcall dec add xchg mov mov adc dec mov addr16 in add ja xchg repnz mov test stos loope sbb pop lret movsl pop cmp icebp add xchg ja sub loop xchg inc outsl shlb mov jne cld dec xor jl iret sti push sbb mov and cmp aas (bad) jle scas movsl xor mov cmp (bad) mov call and push outsl mov dec sbb lds sti jnp push xchg cmpsb ja add fcomip add xchg xor fistl pop cmc and imul xor dec mov int call sti and adc mov ja xlat mov lds nop xor mov xchg enter fstpt mov scas mov js pop cmp jge dec cmp aaa es mov mov jecxz sub inc cmp loop lahf jmp push pop out jbe xchg cmc pop mov sub in fstpl jecxz push push mov (bad) shr or rcrb sub adc xor ret sbb rcrb add jbe jns (bad) pop loopne xchg cli cld test sub cli lcall sarl and xchg push fidivrl icebp jo call xchg lcall jge rcrl inc mov jno xchg fcmovne jno aad cld enter jecxz xor lods mov faddl cmpsb in outsl daa xor sbb xchg sti pop popa test pop andl test mov sbb pop ror inc fisubrs inc push mov subl subb push cli loope mov pop adc mov pop mov add ja jbe or mov gs push stos bnd aaa into jle fsubl push mov sbb std (bad) dec adc fistpl sbb packsswb pop fldt mov and outsl mov ja add mov lods adcb push xchg cmp iret jg cmpsb mov fcoml aas cwtl dec sub shl lahf out and ja inc xor test mov lock jno aad adc lods cmpsl arpl out cmpsl rorl scas jae or inc jbe outsl mov jmp les and mov out insb xor inc lret or dec lock pop int push loop jbe negl fcoml stc out mov lahf orb (bad) pop leave or rorl xchg jnp (bad) cwtl add sbb enter mov loope add xchg jge stos or repz fidivrs lahf sub mov cs out mov add mov adc push pop mov (bad) sbb and pop loop add mov int3 and cmpsb sub mov mov pop test stos cmpb mov icebp popa pop stc mov sub out repnz pop stos sbb sub inc jmp (bad) (bad) xor lret lods lods jl int in fidivs test xor mov mov ret xchg mov ror or xor mov outsl (bad) stc stc pop add add pop andb out das outsl scas push jbe ds xlat add clc call fcmovb jo ret ds pop addb call adc push cld adc mov add popa scas mov stos sar dec cld test test shl out cmc test xor loopne adc cmp mov nop dec arpl in lcall add pushl xchg ss icebp (bad) into inc mov mov jmp add iret mov (bad) out jne mov and out xchg or scas sub outsb fistpll dec mov inc xchg sbb dec sub insb pop dec shrb cmpsl imul pushf cmp add xor or dec enter lods mov pushf adc push scas lea loopne (bad) inc dec dec cltd mov adc xor ss dec sub dec sbb rcr bound or loopne insl (bad) xchg cmpsb (bad) lcall cltd push lret jns add out stos sbb mov mov push cmp jge pop mov pop mov fldt cmpsl test or vorps jno std js (bad) gs adc mov mov out incl and xor (bad) mov test ja popa nop add adc pop in pop ficompl xchg adc out jb ficompl and push fdivrs mov sub shll insb lret repz imulb adc jb xchg push enter cwtl adc lods and int3 lods aad jae into xchg jo xchg test sub nop je cmpsl add mov stos out sbb cmp cmp loopne add jge mov (bad) push cld stos pop clc ret push fidivs fsubrl add xchg cmp or xchg lods sbb mov repz dec add je and loope or shlb pop sbb jge ja jbe lahf jns mov (bad) jae lods into ror lret push adc loope jecxz mov xor (bad) cld adc ljmp stc and xchg pop and mov ljmp sub xchg sub arpl cwtl popf pop fsubs sub stc das push jno or xlat push or cwtl sbb sar std jbe ficoml pop aas jmp adc add inc dec adc pop jecxz,pn push push adc daa or pop ret add cltd inc ja pop mov adc cld or lahf in daa pop hlt and subb out imul subl jae imul sub sub rorb jns xchg out inc lcall push and jnp dec push adc jg icebp sbb add inc xlat out ljmp pusha adc je sub mov push pop aam test fstl mov jns rclb test enter (bad) adc (bad) loope pushf sub mov test jecxz,pn cmp and ja nop mov mov or ljmp xor add and in lahf and dec addl int mov lock xor mov add out push pop pop (bad) xchg mov mov jbe cmp mov xorb mov add cmp movsb lahf sbbl ja dec data16 fsubl cmpsl dec push push mov movsl push lds adc loope xlat push jecxz daa pop jb jnp push adc adc sub cmp out popa (bad) mov and xor outsl pop or notl out fbstp scas dec call arpl rcrl inc push mov push mov mov (bad) sub or test int mov xor mov adc addb dec (bad) lods insb sub inc inc rorb mov popl loope jno push sub pop xchg test and mov and mov ret enter call push rorl mov in add xor and das xchg add push lods jecxz and fidivrl pop addl dec pushf or std cmp and shll push enter push (bad) aam lcall mov and sub jmp addb (bad) sub mov cmpsb xchg test out jno sbb mov in loope jb out adc and sub icebp fadds mov pusha jecxz cmp aam ret push xchg mov test sub pushf test fimuls test lods or aas stos test out (bad) shrb cmp cmpsb es and bound scas mov rolb (bad) lds add mov push inc (bad) aam jnp fnstenv and mov int3 enter adc dec (bad) sub or dec lret cltd rclb mov out arpl mov movsl (bad) and add inc dec adc mov push dec dec jle mov outsl stos cmpb pop xchg add mov jae std out pop cmp jmp pop (bad) test or or pop xchg std and xor xor (bad) jp dec push or pop push loop sbb fs aam imul mov pop or sar push inc mov (bad) roll das push and fbld repnz inc lret xchg sti jecxz dec xor pop cltd ljmp cmpb mov sub outsb push inc jo sub pop sahf scas aad pop decl sbb ja add cmc or movsl aam jb adc sub or pop shlb xchg and imul inc test into xor test in (bad) and cmp sbbb xor bound lahf ja sti mov imul adc jns add adc inc dec sbb loope xor aam inc fiaddl movsl inc ret fbstp sbb lods jb sub sbbb and js mov les cmpsb mov in xor push or std push clc (bad) push xor push stos xchg lods add mov cwtl xchg xor or jg rclb scas or imulb dec fstps (bad) jle aas add xor cmp pop and out and dec lcall and dec stos stc mov xchg pop adc or mov out loopne inc std mov xchg aam push lahf pop mov in xchg aad lods cmp xorb sbb inc mov jno jmp xchg mov add xchg or int call dec ss mov jg rorl xchg adc lock adc (bad) pusha lea fwait cmpsb mov ret loope insb push dec inc in pop jge outsl loope ja and jl sub imul ss pop mov dec push sbb xor inc imul push ret pop lock mov xchg sbb pop neg les popa xchg jge fs or cmpsl loopne jl (bad) out cmc pop aam lret xchg xchg imul shrb push fwait (bad) xlat stos jmp adc add fdivrl dec adc jl mov int3 mov rorl je mov pop mov fisttps (bad) xchg in or incb or aad cmp outsl adc mov orb call inc jecxz adc cmp mov sahf popa dec and mov mov pop pop into adc or jge rol mov incb fldcw mov pop and and loopne in adc rcll test into shr mov pop (bad) fisttpl xchg arpl or pop jecxz cmpsb xor aas xorb jge mov pop mov mov insb inc inc cmpsb jp sub jno push out rol int repz aad or lea push (bad) pop ret xlat mov push ret pop ror or insb mov lret jnp les xor dec adc imul je jmp lret xchg iret add lods dec and jns (bad) loop sub pop cli and xchg jl,pn int3 outsb rclb mov inc mov into jmp enter and das pop adc push inc pushf jp xor jns or lods adc jo xor dec (bad) clc imul add sub add sub and adcb jnp xor addr16 in or out mov fcompl or rcrb and data16 push and loopne xchg jle xlat mov mov (bad) mov cmp and push or pop scas ljmp (bad) in roll xchg rclb add sub cwtl lcall imul mov fists faddl dec js xor sbb lds outsb push mov mov lea xchg test mov dec popl icebp and jge push pushf push lea orl xor push mov dec mull mov sub push sub jno ret jne jns insb cld dec pushf repnz fsubp pushf imul mov sbb push mov push cld adc and pop mov pop jnp popa xor das jns adc mov fisttps and mull xchg push nop adc inc pop ss xor inc adc into pop xor pushl adc and lret nop das mov shr fdivrl mov cmpl movsl stos cs mov fadd xchg or outsl dec pop pop hlt pusha imul sbb mov push ja inc sub dec xor out in xchg (bad) xchg cwtl js stos int push sbb jns out mov movsl popa cli cmp outsb mov inc lods pop lret pop mull cltd mov or pop cld cwtl sbb add and inc dec (bad) and pop cmp out ret pop bound sti pop inc xchg inc je and mov mov pop dec int lock pop fstl call (bad) cli enter pop leave lods pop fimull mov insl jne out testl pop (bad) xor xchg cmp ljmp pop int3 and adc and and xchg mov push addr16 or cli xchg decl push dec jae (bad) sbb xchg and test pop dec out les orb iret addb adc orb ljmp inc in pop out shll nop int xor dec xlat xor enter mov jns sbbb mov cwtl inc std sbb es (bad) push xor mov push dec dec push loop xor jg push xchg cmp shrb andb mov cwtl mov or std jno and rcrl inc popa or xor rcrb test inc andb mov int3 or lods sti fs in cltd data16 mov sub int and scas fistps mov roll test lcall jb mov pop cmp enter sti loop (bad) shr cmp jbe stos icebp adc sbbl test and loop shr push jno fstl imul pop stos sbb cltd adc inc outsl aad lods mov aas mov out out push sub push push mov jecxz ss jns dec jne add push push adc sub cmp data16 in push cltd cld and dec xlat jns xchg mov or insl aad pop inc push jg pushf cmp ficoml (bad) fistpl (bad) loop push sbb mov and icebp cli movb add cmp mov fmul mov pop mov sub sbb sbb loope call fisubrl or dec outsl fbstp fwait out cmpsb jge stc mov sub mov xchg jg ja cld dec in mov mov sarl pushf gs std push fwait shlb cmp stos repnz lock dec mov mov xchg fwait sub arpl mov inc push dec cmp mov mov sbb and clc fistps inc pushf xchg (bad) das enter (bad) mov call lahf shlb es (bad) and lahf les add push test orb pop test mov or clc loope mov imul mov movsl mov cmpsl imul fucomip inc stos push leave adc scas dec add pop gs fistl lahf pop or test leave mov cwtl cld pusha sar sbb pop fldenv mov out fnstcw cs aas in or (bad) mov xchg les push call lds ja xorl out (bad) pop add add shr jecxz lods rorb pop adc sarb or and sub cmpsb mov inc nop mov mov jge add setae add in and clc stos ljmp dec int3 jne in fldt jl add push add sbb xchg xchg sbb push lahf outsl xchg shrl cmpsl sarb add pop dec shll loopne jp test push repz push call pop add (bad) xlat aad fdivrs enter imul push cmpsb ja adc mov sti into add sti repnz fisubl mov dec repnz push inc xor sar adc (bad) sbb add xchg lcall stc ret ret fimuls stc cmp sbb inc jno inc pop or add sub ret and lret cltd or rcll mov jns (bad) sub sti pop sarl mov lcall inc lret pop cmc jno out sub cmp sbb xchg shlb lea movsl push dec outsb mov mov xchg sub cwtl jno fists data16 jns sbb mov sub mov pop dec mov jmp arpl xorl (bad) dec xor out aas clc clc repz xchg shl sahf and aam push lret dec lods mov lock lret push push pushf stos pushw test sti xor in imul push subl mov scas jmp push mov daa test mov mov fisubrl mov rcrb adc popa cld ljmp popa mov cwtl cmp repnz addr16 fwait cmp xor in sbb ljmp cmp jl loope fsubrl jge je push les aam rclb add mov dec adc mov arpl int sub ss aam or xlat out ficompl rcrl mov pushl mov adc das xor repz jp iret (bad) lret (bad) push and xor jnp jecxz or test push jecxz dec add or repz leave arpl clc insl cld cmpsb inc sub shrb xor mov sub dec shl and scas sbb push fistps mov ret fcomps mov lds jle repz sub mov enter dec test or adc nop jnp mov cli sbb jle mov inc sbb cmpsl xchg mov call fdivr fdivs fincstp pusha (bad) add addr16 in out dec stos sbb mov cwtl add xor leave ret mov jnp xor mov cmp pop xchg inc mov mov mov pop cmp sbb ds js mov mov sbb pop rcrb gs fiaddl notb je xchg stos xlat ja push scas jb aaa add ss xor push lret loop sbb js mov dec sub jae lcall jle lahf pop push (bad) pop push and (bad) insb movsb push push fistpll scas cmpsl notb into lods ret dec (bad) pop mov xchg test adc daa test addr16 and dec pop or ret inc repnz mov jo jae stc pop sub push rcr ret movsl je mov shrl and cmpsl loopne push repz cmp into pop mov (bad) cmp mov xchg out sbb js cmp rorl mov jmp insb sub ffreep fcomp xor clc ret mov or setae das mov imul dec and cltd push push mov lods push xor ja ja adc pop lods sahf mov push mov xchg adc test loop ja xchg or xor mov jns (bad) stc or lret aad inc bound dec daa cltd cmpsb dec leave mov cld or push out mov pop aad call std mov es enter test xchg popf xor (bad) mov and cmp fwait imul fbld push call es loop test mov clc mov add in loop sub addr16 push and xchg test lret xor aam addr16 int3 jae out adc cs mov jge cmp aad inc adc dec cmp push mov pop and pop out ds aad dec pop inc lahf iret int aam in out jne sub or push jae pop addr16 or xchg mov mov cli nop daa or jno adc push pop cmp jecxz inc sbb adcb and in dec pushf lret test mov xchg aam mov cmp lock and dec jne fsubr xor or clc push daa lret xchg lods mull pop lock mov (bad) or push adc push mov xlat push push mov pop gs cld paddq pop scas push test push arpl add (bad) adc lods test adc xor add jle cmp adc pop xor xlat ss push pop rolb cmc sti test test rorl xchg (bad) iret outsb loop mov nop pop popa cmp test jns jecxz sarb fldt ja jnp add cmpsb movsl test sahf into lret jp int3 lods cs dec ret mov and std push dec lds jb loope mov mov fidivrs scas fprem jle adc icebp or scas call out cmp jg push call add int and xchg stos sbb mov shll rolb repz mov cmpsl sub scas outsb (bad) out scas cmpsl push push stos mov sbb movsb ljmp jns (bad) mov faddp dec std xor addr16 outsb lea lods cltd push addr16 mov stos (bad) jp sbb leave (bad) cmpsl jle add jns fcomp inc dec (bad) stos mov pop pop fcomps jmp mov mov push call out mov movsl lea mov (bad) aas movsl sub outsb push or scas ss sbb ljmp adc xchg xchg adc test mov icebp outsl out int3 fdivrl mov in nop inc frstor dec shlb aam cmpsb inc cmpsb (bad) mov es xchg fidivl pushf add cli test push push pop mov jp push push icebp test test shrl in push fcmovne adc jecxz mov sbb into cmp mov sbb push rorb mov cmpsl test dec mov outsl cmpsb (bad) in pop stos jg sbb hlt insb lods dec popa pop adc repnz add push jl dec jmp pop sub ret add lds xor jecxz mov je in aam lds push stos repnz xor call sbb aas (bad) sbb test andl in cmp je sbb cmpsb popa mov es imul sbb stos out dec mov xchg inc push sbb and hlt cmp push push ja fldt pop adc xor xchg shll jnp,pn cmpsl cld sub sub inc mov jmp fwait and mov xor cld int3 dec pop cmpsb cmpsb mov dec mov jo sub xchg out test jg lea les adc cli push push xchg (bad) sti and outsb jno dec jo adc and xchg je inc mov push jnp mov add xchg pop call and jle mov imul xor push sub jns push dec mov jbe mov pop sarb xchg jb (bad) jp loop cmp mov andb out mov xor idivl nop rcll push pop call xchg addr16 and jecxz push shr fisubrs popf or mov int rclb dec fistpl hlt add dec and xchg jno and fwait shlb push loopne aam sub jecxz loope push into add mov and push sub mov out lods jp sahf dec sbb pop inc dec adc shll clc dec sub or add ficoms mov cmpsl push jb mov lods scas mov pop dec jp (bad) arpl mov jnp add xlat lret scas test test lods add pop stos jae xchg push jno xor or xchg in scas les and call dec ret mov bound or and adc mov mov push (bad) loopne aas inc fstpl cmc ss pop int ja adc movsl mov push xchg sbb enter cwtl push bound mov xchg push add add inc stos (bad) ja loopne frstor sbb add je inc addr16 mov pop pusha pop mov ds adc pushf mov adc pop fidivrl dec aam dec xchg movsl lcall fs fdivrs sub mov outsl loope and fisttpl xchg (bad) and aas inc cmp (bad) xchg sbb mov dec hlt mov jle lds sbb insb ljmp ret lea push adc and (bad) into cmp aas mov sbb repz pop data16 clc cmpl xor dec mov dec in mov lods mov jbe andb mov push mov ret mov sub sub inc sahf xchg aad pop gs rcr imul and or sbb dec xor xchg call mov and clc push mov imul lret jns popf fstp pop outsl shl add jmp cmp xor rcrb sub pop xchg fisubrs jg cmc mov mov pusha cwtl xchg and lea mov lea pop mov jmp xchg mov mov push push aas mull jbe sbb mov sbb pusha out mov xchg mov andb loope xchg fildll inc ret and lcall adc daa test outsb fcoml jp loope pop push mov add rcrb (bad) jbe ss cmp into mov negl loop push jae push mov or pop fidivs test fwait aas inc pop mov arpl or push xor adc shrb sub outsb pop ret sbb or loope hlt pop xchg jge jmp jae inc notl add adcb jae push lods sti jmp movb test jae add push xor dec cmp jae test add sahf and repnz sub dec shl jg mov (bad) mov jno leave lods jbe pushfw xor enter push dec inc int3 aad push mov mov jge push mov cmp repnz mov jg or dec aas ja lcall and test addr16 lods cmp push loope mov stos ja or cmp xor stc xchg xchg jmp inc pop add imul jg or mov push inc and xorb sub mov lcall dec add cltd scas roll jo clc fdivrs lods xchg pusha (bad) cwtl mov mov mov add adc mul cmpsl or and lods in fwait bound or je cltd xor pusha xlat (bad) in fsub sbb xor out cmp fst pop lods cltd dec mov stos pushf loope dec xor jmp adc or and or scas not mov and mov pop cmpsl idivl cmp nop outsl jae inc jns fisubrs jb imul (bad) (bad) imul cmp les inc jg jb lret dec pushf adc mov std xor decb lcall in xchg les xor pop or aad add adc push sbb (bad) jmp aas jle (bad) mov sbb inc mov jne scas jle jecxz mov cmp jmp xchg fidivs xchg cld sub mov push mov sub movsl aam push adc in movsl arpl roll and ret mov imul std cmp or int3 mov movb jbe jp and es push arpl fnsetpm(287 scas mov xor cmp int xor shr ret aas mov cs loopne or fstl adc ret xchg lock or mov enter cmc lea jl test imul (bad) pop adc adc xchg dec xor les sbb mov push aas cmp jge sbb push push cmp push aas fstpt imul mov fs cmp out xchg fs dec or scas mov mov push pop xchg dec pop jg dec dec add inc adc push ja clc xchg sahf push xchg mov lds frstor jmp dec jno adc andb rclb shrb repnz cmp cmp jle scas sbb or inc (bad) aaa (bad) cmp inc sub and jg sbb fistpl gs (bad) dec mov mov arpl ss sbbb stos addr16 jae lea ss pop pop popa fcomi lahf adc push fstl andb or insb aam sub ret stos in cmp push pop adc jle aaa das sbbl imul mov fadds xor int cmpb mov xor cmp test (bad) push mov push jae cmp (bad) shlb mov pop pop testb sbb in loop dec xchg and xor das rorb mov roll and mov js gs lock into adc mov xor jp mov push cs out js popf push sahf test cld ja mov movsb cmpsl roll enter xchg mov aaa xor ret or scas cwtl sub fistpl hlt int sbb add mov repz and mov adc inc out mov sbb mov clc daa rorb jecxz add pop divl pop or dec sub idiv stc jbe ljmp add add xlat pop ss lods or xchg (bad) (bad) and sbb ret gs shlb repz pop test in call das and jecxz pop (bad) lods or inc int3 mov sbb sbb or les pop jae test dec mov sbb cmp mov rcll popa mov int xchg cli push xor mov (bad) xor xor sub add xorl jb mov mov insl les addr16 out call jno inc add add sub adc xlat out push or stos idivb pop bound lods mov jnp addl movsb push fdivrs pop add cmp mov (bad) xchg ret xchg fcmovnu out adc in xor xchg cmp data16 fwait rcrl loope mov xchg push cmpsb pushf idivl aas mov cmpsl in out cmp inc sub sbb sub xchg ja jo out ret dec ljmp decb (bad) sti pushf loop outsl cmp mov ja inc out stos outsl loopne mov lock rcr mov enter cld push iret dec adc dec call add (bad) roll cmp ret lcall daa adc xchg test lahf pushf mov gs les mov adc (bad) dec out mov ljmp xchg dec repnz xor jmp or mov cli imul mov in add and cwtl xchg adc jo cs cmp test shlb loopne pop cs inc adc outsb jb xchg inc adc in int3 dec cltd add mov enter sbb fldt inc push mov shlb jns mov pop and lock lock cmp repz xor nop push xchg aad jno fs sbb xor jecxz mov mov and rolb pop push xchg fists cmp mov lret lea xchg lock mov and mov fwait sub rorl out mov mov push into cs mov popf nop (bad) cld out mov push adc xor dec loope jge mov sub mov cld shlb xchg mov arpl ljmp pop add negl sub mov fdivrl jb jmp pop and into call add outsb cmp and dec pop loop fcoml jb xor adc mov adc sub xorl loopne popfw inc dec addr16 sub (bad) cld inc pop das fs add mov insb fsubs cmpsl sbb dec hlt pop fdivrl pop addl jbe cld cmp ret fbstp imul mov inc xchg mov inc mov scas jb dec pop mov test sbb outsl push mov cmpsl pop (bad) sub popf mov gs mov into out loop test add in xchg mov xor push inc gs xchg or push fwait je scas fwait push xor adc dec faddl push shl lock pushf mov call sbb js xchg add fstpl lret call fisubl pop divl mov movsb pop test fnstsw (bad) sub in xchg (bad) lock pusha cmp push mov cli mov cmpsb out popa js test fbstp int push in insb call iret sub leave and push rorb data16 xchg imull xchg jb push jl fldenv clc (bad) or add and pop lahf mov add mov outsb mov add iret add add fldt adc sbb adc jl es add ret adc ficoml orl mov inc push pop xor pop sub adc loope mov aaa cmp add mov andb in jae and rol outsb outsb pop mov fcomps pop or lods call call stc and lods negb pop xchg xchg sbb jns shrd sbb daa jo push sarl sbb fimuls pop rol (bad) hlt push outsb and adc pop rorb fimull adc and or jl jle (bad) jo lret pmullw xchg mov or xlat push (bad) sub mov jecxz adc sbb repnz push add pop loopne fstpl add inc push nop adc cmpsl jle sbbl (bad) adc adc fcmovb sahf (bad) mov mov xlat mov inc fs ficomps aaa call xlat mov mov enter jge sbb jle loope jmp lahf (bad) imull pop ficompl clc test movsb aas dec and xchg pop adc sti fiadds push add jae or mov stos xchg pushf leave sub lods jbe cs push lods add sbb cwtl add mov adc nop call insl sub jmp adc mov mov jg leave mov lods and mov les in mov or dec hlt outsb clc cmc mov lods call or std sti cmp insl ss pop dec fdivrp push sub (bad) inc add ljmp test in xchg sbb outsb pop sbb mov stos insb shll jl push mov mov clc xchg mov adc push xor jns call and sbb (bad) je lock js test push ja jb lea test jle jl sub ret push mov mov jl ret repnz jnp out push xchg mov inc mov mov fistps cmp jns mov insl mov rclb out cmc inc xchg pushf inc and xchg imulb loop push jle dec and out cmpsb dec sub pop add into mov adc pop mov in jle fistl stos jg loop mov jecxz fadd mov fs int3 lods pop neg cmp mov cmpsb sbb (bad) sbb adc inc arpl and lret clc test bound sbb inc dec in mov push push loope adc aad ret call clc test lock add stos adc mov or adc stc mov push push imul dec mov in sbb adc aad movsl sub ds fldcw and lcall lods movsl pop inc sub jo adc and push ficoms (bad) sbb pop pop das inc data16 cmp cltd (bad) sub loope arpl mov push pop repnz aam cmpsl out mov repz in or outsl pop inc pusha jbe dec std push call popf das push inc setae mov add push pop sbb pop mov (bad) out iret call mov idivb xchg mov lods and (bad) xor mov out (bad) hlt mov enter aaa dec repz (bad) movsl insb cwtl xchg mov xchg je bound adc pushf pop adc jmp enter lahf jnp xchg in adc iret jae mov xchg or dec mov xlat dec into aam out or out pushf dec lods or cmp push in popa int3 sub loop rorb mov iret sub stos scas test push out pop addr16 (bad) push notl and cld imul push (bad) adc out xchg inc les mov sbb fnstenv pop sub shrb clc sub hlt call inc shlb or addr16 push xchg aaa xor ret xor xor je aas stc pop movsl mov cwtl rolb dec (bad) (bad) mov xchg add and sahf inc jle dec leave fmull mov (bad) mov popf dec dec xchg cwtl jnp push jns icebp mov xor adc adc lret add mov fs (bad) mov call divl lods dec jl shl inc pop mov ret add scas fstpt pop not mov jmp xchg sub adc into dec stos jo push pop cmpsl mov test sbb cld push or rorb xor dec and inc std add call out push hlt cld mov xor fimull in icebp stos pop cld cld mov dec stos sbb mov inc sub jne adc xor gs rcrl shll (bad) jo sti ljmp cmpsl bound adc lret mov rclb inc mov sub cmp rorl test lahf ja xchg adc sahf sbb shll cwtl xchg test fsubl rolb pusha xchg lds push and dec dec pop imul clc les out jne mov mov loope xor stos push je loop jle cld pop inc lcall mov mov xor sbb (bad) (bad) adc xchg mov lret subb shll testl sub jns or loope int3 pop sarb push jbe jp std mov xor into cmp (bad) pop cmp add es mov adc or jecxz push xchg std inc push sbb push adc adc nop push imul and fcom gs clc cmpsb ja testb js xlat add js pop rcl xchg or xchg cltd mov fstpt icebp sub aad push in mov loope sbb jp outsb lods inc lahf mov push shlb das dec or and adc test fistpll and mull mov mov mov mov inc js push outsl adc or lret cmc push rolb dec cmp sub dec fwait sub dec pop fwait add insl test dec xchg jne popa mov cmpsl pop jecxz cmp cmpsb inc xor dec sti movl adc xor and sbb dec addb xor faddl mov call frstor (bad) mov mov arpl mov scas mov push ljmp clc mov sub mov movsl das and fisttps aam ret lds cmp (bad) aas pop ficoms ret mov adc lahf ja data16 fists test clc (bad) and push das movsl ja adc inc cs mov mov mov movsl adc inc int (bad) out fcompl push pop xchg (bad) out mov cmp dec push sbb jbe or nop fsubs loop pop testl push in pop shlb dec data16 int pushl inc jmp leave mov mov test sub push aam and sbb add sbb mov jg shll sbb out shll xchg lods scas imull xor pop out aad popl test subl push push cmpsb nop outsl movsb lahf pop adc imul or mov fmuls movl ljmp ljmp mov mov inc fs out pushf adc push loopne js jl call ss shll dec add aam push inc add movsl push shll repnz lea (bad) mov in pop lods sbb mov lcall or scas push xchg jp icebp testl sbb jbe or jb jo and push repz dec inc sbb pop nop ja sub or jg je and gs push push (bad) (bad) jbe ja call pop add lds pop enter adc popa mov fistl pop insl jbe and push call jno lret (bad) lret gs sub je mov push pop nop fnstenv test dec hlt out pop sub lds pop cwtl int and clc lods push jle in lods jle fadd xchg imul inc rcl sub aad pop adc mov and push ficoml lahf dec sub (bad) sbb cltd xor inc xchg xchg pop fcomip (bad) push xor or cmpsl incl cli and adc add adc adc in push ja adc sarb inc dec loopne es pop popa mov and and sub out pop data16 push pop add pop cmpsb jbe and adc xchg xchg and dec adc fcom cs shrl cwtl xor shll mov jae sub or test nop int mov mov jno nop dec mov and leave cmpsb scas dec mov lcall push add shl stc lods scas sbb cmc loope sub mov push pop pop ror pop adc cwtl insb js pop push push dec adc out or arpl mov push xchg pop lret call (bad) sbb aas divl sub aaa jp jno sbb repz push ljmp mov in mov (bad) test dec aam mov cmp cmp adc cld push jp sti dec aaa inc scas cmpsl add outsb push out stos lcall xchg and dec sbb jle xor out leave mov push out push ja in (bad) stos push movsl ja lds xchg fisubs add xchg addr16 out pop cmp mov in fdivrl push mov lea outsl loope loopne mov mov imul mov jmp or ficompl jnp inc cmp add jnp jge cli daa mov icebp loope push out jb cmc or fnclex lcall aas call push inc repz mov fwait mov cmpsl dec lret xor stos mov and fwait das cmp pop inc aas call push pop pop push fmull xchg xchg int3 pop notl ret pop jne pop pop stc dec pop adc imul dec add outsb adc ret jbe xchg notl cli or jo mov add jbe imul je loop lcall jns pop mov pop cmpb sbb out fucomip ljmp pop cmp mov test imul add or fdivs fs mov push mov aam dec ret xor pop dec pop fdivr cmpsb dec and scas test xchg std cmp ret sub test push adc dec sbb data16 aam ja pop fwait push out fwait push xor (bad) and add loope mov faddl push mov negl or sarl add dec mov mov popa cmpsb in (bad) aad and repz inc xchg xor pop xchg inc loop mull hlt xchg mov aas insl cmp popa jg mov fisubrl pop cltd jb popa int popf loope inc pop xchg xchg sbb pop scas mov loope xchg mov dec inc sub cld sub dec divl stc ja dec fmulp push dec pop or cli jnp jmp add dec addr16 push int popa (bad) mov stos cld cmp or pop imul stos aaa pop pushf dec inc sbb imul add into (bad) dec in add xor xchg into cmp data16 xlat adc gs cwtl adc leave add vmfunc jbe xor xchg pop testl repnz ljmp test add add lret (bad) xchg mov or dec js xor push jo cmp loopne lret inc xchg or test add call mov mov push inc fwait push cwtl jo das mov add cmpsl in push xchg xchg orb cwtl mov sbb int sbb xor sub push sbb adc sbb xor sti adcb cmpsl sbb xchg xchg mov or je adc int dec dec sub add or push and fnstsw out xacquire out push jns das xchg xor adc jnp test or or dec push clc xor or mov rcrb jp mov mov scas mov mov (bad) pop insb mov jecxz adc add cs add js mov out mov xchg sahf or int lods pop gs mov in iret loopne stos cmp rolb mov adc push movsb movsb and (bad) mov clc mov inc jno mov xchg subb pop cli (bad) push clc test pop out mov add mov mov test shrb ja ret push or cmp sti call inc (bad) popa shl lret int adc shll push loop or xchg (bad) and pop xchg inc jo ljmp hlt adc out mov xchg gs mov xchg mov scas jns xchg xchg movsl adc xchg sbb stos addl xchg jge aam inc mulb push inc (bad) adc xchg sub call (bad) pop add mov (bad) das cmpsb filds movsb in pop into daa test add ficomps xchg sub push mov loopne in xchg mov xchg loope test and cmp outsl aaa and add sti fdivl sub adc lods cltd dec xor pop push outsb add sbb push pop and mov xchg pop pop into push gs rclb test inc cmpsb add mov dec xor and rcll popa jle lods fmul testl inc imul mov fcmovu cmp push das adc jb loope sub inc and jg mov push dec fdivrp push fnsave sbb stos in jmp and pop clc repz adc stos fcompl nop test and add insb dec insl push jmp ss mov rol jo orl fucomip shlb ljmp mov ds ja addr16 icebp call dec push fcmovu call cmp xchg cli call in les jno (bad) mov lds xchg jns jb rcl ljmp mov mov clc adc add out add out enter add cld sub pop lea jl cmp (bad) bound sbb sub sbb out fidivrl into inc mov mov ds and and cwtl cmp es loope jnp lahf je in shl test fisubs adcl cmp xchg notb cmp dec test ret cmp imul sub cmp sub addr16 or iret push fildl or cli inc andl (bad) sbb mov andl jge cmpsl dec sbb call xchg sbb push fdivs testb push les inc clc int mov stos data16 xor jnp (bad) lret xchg pop filds inc mulb jnp enter dec pop inc push inc add adc push mov test jbe mov push mov lods popa sbb rorl jns mov mov jb popf jl inc jo mov mov xlat jg sahf push mov dec mov (bad) outsl loopne sub pop inc or push inc cmp js sbb loope,pt (bad) popf ret nop cmpsb stc popa push scas add call in divl dec cmp (bad) jle fldl jno push jbe loop cmp mov loop xchg cmpsb aas mov sti fsubs cs pop and rol test pop jnp sbb je std out adc inc sbbb fcoms cmpsl les and inc repz in mov cld cmp int nop (bad) sub or inc call fcompl inc loop fcmove clc into rcr fs daa adc iret pop adc lods (bad) insl rorl push imul pop loopne xchg (bad) xlat jle scas or lds (bad) adc pop or push xchg mov mov mov test push dec and push xor xor out enter inc jp,pn sbb xchg stos ds out out cmpsb or adc cmpsw enter inc dec leave mov jo (bad) inc insb cmpsb pushw bound xlat (bad) mov dec (bad) faddl cmp mov dec sub cmp pop seta or mov outsl (bad) fists fstps adc push sbb push addr16 dec jmp mov adc jb cmc in lock cli lea ja cwtl shlb jo stos notb (bad) fistl pushf xchg jle xchg jb lret mov xor faddl scas jo cli imulb into sbbb stos cld scas int repnz stc enter jmp jno jbe mov mov test jb loopne xor lahf test add jle push push pop mov data16 test adc stos adc jns dec sub mov xchg and xchg rorb adc leave imul sbb das and adc bound (bad) jle or mov xorl rclb sub ret cmp or aaa stos insl or mov cmc jbe test int3 mov in mov pop cmp test fisttps cmpsb sbb inc cmpb add sti lods shlb mov fwait pop xor test pop das pop lea mull push jge fistpll add call fdivrl ret in stos cltd call dec xchg imul push pusha sbb jbe or ret pushl pop out call mov addl jecxz pushf push popf jbe int push jns and mov sbb jp and dec sbb mov in push addb pop or jecxz mov dec and cwtl mov xchg iret mov sub mov imul sub aam sbb inc dec ja inc xor stos std int mov mov (bad) pop popa fisubl push popa dec popl test mov and loop push mov xor push (bad) rolb test stc inc fcompp pop sbb or mov mov fucom xchg push inc pop aas mov out jnp popf int3 (bad) cltd testb movsb push cmpsl adc data16 lods outsb icebp cmp jno sahf arpl cmp inc imul or stos lahf sti fstpt jo xor lahf sbb cmp pop mov jmp push jecxz fnsave cmpsl (bad) xor in sbbb addl xor adc repz pop cmp loope add lds outsb add or cmpl jae dec fs leave addb fsubrp in cmp adc xor paddsw pop (bad) out dec std mov xchg out stos cld mov out lods mov loope lahf and mov cmp jns and and das mov sub push fst sbb cwtl mov in mov sbb or adc cltd cmp cli sub xor cltd lret mov push push pop jbe jnp cmpl inc mov mov in sub outsb mov (bad) popa pop enter jo pop lods sbb lret sub add test xchg shll pop jno test out pop leave ret int3 cs scas sbb dec hlt dec or out divl cmpsb xchg ljmp mov aad rol test cmpsb or pop mov aam xchg pop pop add and sub cmp sahf hlt rcrb stc sbb pop cmp mov adcl sbb fldenv pop outsb mov jg loope xchg mov cmpb ret (bad) mov xchg add cs mov mov inc addr16 push cmp mov nop ljmp cmc jecxz sub fs sub adc out sete jbe pop cmpsb loope adc dec cmp cld mov ret out xchg popa fisubl jle xor or sahf xchg out pop push roll je (bad) js or pop xchg cltd mov and setbe push shll inc popf pop test dec xchg pop pop loop ret scas dec jns xor das pop push jle popa into subb cmpsb inc jne aaa rorl call xor xchg jns int3 test pop mov xchg stos sub dec sub xor pop lods or lea mov sub xchg in jnp jns xlat stc js cltd lret loopne loop and out sub rolb aas aam jle insl pusha imul pusha std pop (bad) out xchg out sbb ret insb stc mov sbb lea int fisttpl push or (bad) int3 pusha mov enter gs in cmovbe push mov jle jmp movsb mov jo sbbl push sahf out cwtl fstpt es or mov cmc push call mov aad mov mov movsb in lds xchg int3 or and and sub sub lods clc notl scas cmp mov dec lods jle push pop fincstp in fdiv cmpb int3 shr clc mov insl test out adc out lret sub sbbb (bad) std inc cltd adc fmull (bad) das mov loop cmpsl adcl sbb add rcrb adcl (bad) dec and mov (bad) mov mov jmp mov add insl xchg test cmp aam xor popa xchg jbe jnp push dec mov mov rclb pop outsb sbb int sub lret mov cmc ljmp push sub jnp adcb test xor loope mov stos push repnz mov out roll mov mov fcmovnb xor (bad) loope jecxz xchg adc or mov loopw ljmp fs shll push sti aaa mov push mov or or lret xor das mov lret ja sub push mov iret dec jne mov dec (bad) lcall mov jae negl xchg orl dec pop lea sbbl jno xchg into sbb mov mov lea dec jl (bad) lret xchg or jnp mov movsl int jae cmpsb fldt cmpsl sub add pop lods daa dec xchg lods mov mov mov int pop pop dec dec mov int3 dec sbb xor xor mov fstpt mov sub cmpsb mov mov mov or fisttpl test (bad) or fwait mov (bad) int mov dec dec fistpll dec popl outsl pop xchg repz (bad) sbb sub les std sub andl inc inc adc jae sub rcrl popa in addl jne dec out adc mov xor shrl sub pop test or insb pop cmp push jns cmp push pop push (bad) cmp fstl sub xchg jecxz popl dec fdivl idivl sbb lahf ja cli dec dec outsl sub das mov std mov or les imul sbb (bad) cmp ljmp sub out cmpsb cs and xor mov jbe jns jb dec mov push xchg cmc mov mov mov cmpsl pop or into (bad) jns loope mov fcmovu sbb and mov sbb rol mov xor sbb adc or lahf push daa ljmp pop les icebp pop pop or (bad) and mov in addr16 cltd sub lcall push xchg dec jmp test fsubs add mov adc sahf cmpsl inc cwtl addl mov sbb bound movsb jno data16 adc (bad) rclb into and adc push cld fdivs cmpsb inc push sahf outsb repnz daa jp cmpsb out into or push push sbb stos jnp pop inc out add push adc into in cs aas cmp ljmp ja icebp xor lahf or in or (bad) ficoml imul insb pushf aas js or rorl (bad) inc loope sub ss sub test push sar ficoms outsb jns or pop dec push mov pushf out enter and add push mov rol adc add shlb dec mov mov fs movsl imulb inc arpl jg int3 xor ss aad adc mov and adc rcrb inc in in jg (bad) lret loope cwtl jne mov arpl add fildl pop cmp cld clc add sbb push sub xchg jmp inc mov sub and sbb xor movsl dec push out in fstpt xor outsb lret xchg mov mov (bad) push stos pop jbe pop mov cmp inc mov fisubrl test insb inc xbegin loope or adc pusha imul adc xor mov pop xchg dec mov and mov xchg push mov xor ficompl ljmp rcr into stos sarl jle pop cltd sub dec das add enter pop enter ja sbb inc fcmovb negl add and push in jno or sub out mov xorb xchg sub imul push fisubl adc div decl xor repz mov xor das push mov sbb insl int cmp fwait mov or lahf aad mov insl dec loope (bad) aas stos xor xchg adc stos inc call out lods jb cmp xchg into pop jb cmpsl sbb lahf pop fstpl and pop mov enter into or or add adc lret jbe add add (bad) movsb stos icebp cmpsb pop xchg and sbb sbb into cld dec fbld shr pop xchg xor negb call insl cltd mov out (bad) sbb outsl cmp cmp popf or clc mov jnp and jno (bad) sbb add pop pop sbb sub pop pop lcall dec mov (bad) adc fldt and jno add xchg mov fnstenv shl enter mov movsl push je mul or jns push push jb jp lea addr16 (bad) sti aaa nop aas into xchg push aad mov mov fisubs adcb call jmp (bad) pop shlb lock lcall fwait mov les adc pop loopne sub lret cmc ja mov sbb cli das sbb or pop xor adcb pop leave dec mov cltd xchg pop cmp insb and or inc mov out sti lods imul jnp fbld sub cmp test sbb clc mov add test imul push stc pop pushf mov cs (bad) lahf inc jne fst lock out add inc and push icebp mov fsub add mov push adc pop rcrb stos pushf jg lcall dec sub adc int cmp jnp cmp js sbb stos pop add fldenv nop push test fldcw adc (bad) xchg fcmovnbe arpl test add (bad) stos js mov or loope jmp adc aam sub cmpsl sbb idivl sbb aam aad pop xor (bad) lahf jp lods aaa (bad) jb cmp pop sub sti jb lea pushf add aaa ret lods and push lock xchg jb dec sbb test jns repz jb hlt ja std mov inc andl dec aam and add test sub imul aas test (bad) mov adc (bad) (bad) and mov insl jmp dec sahf shlb sbb aaa fs mov out in mov dec xor inc mov (bad) or xor jmp xchg mov pusha dec xlat mov mov pop movq enter mov cmpsb cmp pop cs gs arpl xorl pusha les inc repz stos cwtl sub cmp int3 xchg fldt mov pop and mov push push je sub dec xchg shll inc lods jae adc adc or or push add mov (bad) xor aas mov cmp mov and xchg in (bad) out hlt sub and out add lea out cmp mov and insb jne int3 sbb test mov inc repnz out xchg pop int3 jo into fisttpll mov push ljmp fisubs mov aam cmp fsubs xor push stc xchg ret mov inc je and stos push loope and lahf dec inc loop or ret add fcoms fucomip lods add inc andl ret push je xchg scas add cltd sub push outsl pop mov data16 add in popf outsb or push mull lods decb sub mov clc and ljmp into lret sarl fadds mov fsts mov pushf test xchg xlat popa pop or popa or push xor pop neg pop data16 xchg test push dec push xchg push adc out int3 movsl xchg or (bad) mov cmp fistpll dec or pusha jnp es popf fsubs or outsb cmpsb ror adc jp (bad) (bad) jge gs jne int3 (bad) dec inc fsub pop xchg mov aaa out iret lods cmp fisttpl mov in in into inc sbb rclb repnz movsl sbb cmpsb jl pop out cmc dec sub pop int out push out loope int3 test sti cmp ss and pusha aas pop mov mov out in xchg das dec into mov incl jge sahf mov mov inc (bad) lret jmp push test test (bad) out addb dec test push push (bad) outsl mov cmpsb jmp mov cmp cmpsb fnstcw cmp enter outsb mov mov pusha mov test add add je loopne arpl mov or mov sub outsb mov mov jp jecxz test xor ja jmp popf pop rol pop dec out out push jno aam and rol test (bad) fnsave add cmpsb mov sbb aas scas lds cmp and pop js mov push frstor xor out jnp mov call adc mov lcall pusha push and lock cmc xchg int3 test add push jb push sub xchg lret fxam add jno fidivrl fsubrs das sub cmp or loope mov mov sub repnz out xchg insl push cwtl mov fcmovnu insb mov sub mov sbb push loope orl (bad) cwtl mov insl jb gs jecxz push sbb push mov inc fcmovne pop into pop aam pop hlt pop cwtl xchg jle adc ret adc rorb xor outsl jmp dec sub xor or stos sub mov jp ja out sbb push add dec mov js ret and pop and sahf out jl mov lods mov jb dec push jg push fcompl or inc fldl test iret jg mov sub or lret sbb fldt cld cmp insb inc cmp inc xchg stos lods lea (bad) jbe jmp mov adc cmpl add add clc mov mov mov clc jecxz mov dec arpl (bad) jmp les sbb (bad) int mov push pop pop scas and outsl test std push cmp pop mov stc pop cmp inc (bad) (bad) sarl inc xor lods and sti fs inc xchg scas imul ret or mov or pushf cltd dec mov or dec push aas aas or or xchg jnp ret outsb outsb pop or jbe ljmp pop and sahf mov pusha lods movsl repnz cmc mov cmp and add sub push pop push add jp mov (bad) jno out add jno mov sub fwait pop in cmpb cld adc xchg fists imul push rol test lret adc push lea pop or fdivl cli ds sbb sbb mov in lahf mov insl push movsl daa cmpsb lahf sub adc in shll xchg xor xlat xchg mov movsl inc jnp push add lahf dec cmp sbb cmpsb lods pop pop (bad) rcrl cld bound jg mov jmp xchg aad xchg jbe rol and sar cmpsb mov xor cmpsl (bad) push sbb xchg dec movsb cmpsb js mov xchg jle sti into fisubs xor stos ja fsts and subb adc pushf jbe outsb cmp cs add aaa inc or loopne (bad) sub cmpsb fsubl clc mov mov pushf mov xlat movb out or (bad) aas stos add cmc std je mov dec ret fwait ss (bad) or xchg dec mov add mov sahf dec mov add nop notl push pusha inc jp clc scas inc aad pop (bad) repz jmp mov mov movsl jecxz sub jae out shl lods xchg xchg sbb pop jo xchg nop adc fdivrs aas sbb lods xor or jne cwtl sub jge pop enter cmp xchg repnz fldl adc test std clc inc movsb pop push sbb or sbb mov jb mov out iret xor inc cs mov decb lods and out orb data16 xchg lock xchg in push push and fists adc inc sarl cmp movsl int dec arpl ret pushf adc pop sub mov cld mov dec rclb adc lock mov xorb push iret movsb out add stos scas and sub test in inc sub mov xor sbb inc inc cmp mov or fsubrs and add jae add sbbb add fsub pop mov clc push aas mov sub stos int cmp jge je movl inc pop sbbb into push enter adc into lds rorb sarl movsb jp push in push (bad) pushf into mov mov mov and mov test in push mov jle cwtl push push mov cmc pop rcr les push and fstps adc fdivrl rcrb lods loop outsb (bad) jecxz add fldt push or jno mov push inc adc dec aad pop xchg xor push sahf loope mov int xchg dec push pushf inc inc ss outsl mov pop pop adc mov in and das aas call cmp xchg sbb push jno jmp lcall xchg and addb sbb jo hlt fisubrs dec xlat mov mov inc or imul sub sub (bad) mov test jne ficomps divl mov flds fcmove mov xor ret je aad mov daa cmpl inc mov cmpsb lods rorb outsb mov mov jg jmp pop (bad) int aas dec mov repnz xor push or loope jmp jle stos and mov add das in lret fimull mov sbb push pop ljmp scas jg enter mov mov out jno pop push or push lods mov repnz adc pop push xchg int sarb mov jns movsl sub (bad) stos scas rolb dec (bad) pop xchg (bad) addr16 int nop outsb in outsb (bad) jbe sub leave mov lahf mov or cmpsb loop ret outsb (bad) nop popf cli mov push push xchg jecxz cmpsb call add jge push fwait xor mov lods mov cmc dec add push imul andl mov xchg fisubrl subb sub in mov and cmc movsl jg stos inc pop xor fbld pop cmp cwtl int jmp mov pushf push adc sub insl cmp fdivl popf mov insb loope out cmp in and and cltd (bad) xor divl lret pop insl jmp dec xchg push fisubrs fisubl (bad) pop outsb out adc mov lock jae sbb inc mov xor stc outsl pop pushl lret inc rcl and jg (bad) sub lea in es std cmpsb add out lret sti xchg in xor (bad) sub mov mov inc imul out or add xor sbb lods push ret mov sbb mov fsts scas cmp decb dec fcoml neg subb ss dec ja (bad) (bad) shlb out sub xchg aaa adc jle pop pop out add out dec rcrl ja adc xlat xor ret adc push inc sbb xor into xchg test and or insl and loopne mov push and adc mov cmpsb testb mov jmp inc mov shlb sub out inc into cmpsl mov pop jl outsl cltd push stos repnz aaa and cltd xchg add rcl (bad) negl mov add dec push imul hlt xchg or (bad) mov and sub popa lret call xchg and inc xor call inc shlb mov mov cmp inc mov les mov iret pop loope ret fisttps arpl dec dec pop nop cmc pop and ds popl jb mov js xor adc mov push sub pop sub adc cmp (bad) and fldl fistl (bad) dec jle mov mov xchg insl ret neg jno dec test and xchg fnstsw adc inc xchg out sub mov repnz es push sub fisubl or cmpsb sbb lods inc xor mov nop mov cmp xchg mov mov mov cs ss xchg rcrb ds rolb add add in pop leave sub jg fsubl cmc gs out incl jne adc mov sbb push pop mov xchg inc pop div ss incl test xlat sbb ret sbb push mov jp sbb xchg fcoml fdivs mov adc idivl pop adc jge xor lret mov ljmp jecxz movl (bad) cmpsl movsb ja mov and push or dec jne shrb sbb or mov adc cmp jbe ja push daa (bad) repz adc int add sbb jno jbe es cmp push push xor (bad) rcll outsl mov popf sbb notl call int xchg sbb lahf movsb or out mov std inc jg lds movsl cmp aad in adc cmp out orl pop add inc cltd outsb insb sub (bad) sbb (bad) cltd xor int3 push inc mov fists ljmp bound into pop loop mov dec dec cld add mov mov icebp mov cmpsl adc xor neg popa es aaa sbb or lcall mov cmp sub std fucom add loop adc mov repz shrb lds and adc sub (bad) scas lods out adc or lods in loopw fcmovne in ss or add jg or test push in xlat out lock add ret or dec fstpt cmpsb rclb test or sbb ljmp repnz mov pushf sahf and adc mov sub cmpsl jns inc xchg mov sbb or fs dec jne pop sbb jl xchg push ret and push dec popa jle inc subl xchg xorb outsb cmp call in in out fcmovnbe call sbb sbb sahf cmpsb fxch mov and push scas cmc aaa aas insb and sbb mov xor mov jecxz inc (bad) pusha mov adc pop insl adc mov stos sbb popf mov divl mov mov or dec adc and cmp pop fucomip lods cmp mov cwtl subl xchg je aas out shll dec pusha jns jno mov cmc test xor xchg in js sbb fisubrl call push add add (bad) pusha fs ljmp in push (bad) pop or int es jo or pop shlb insl sbb pop adcb shrb inc sbb out mov cmp dec (bad) arpl ljmp sub mov into pop stos push arpl test dec xchg out jne or fists dec lods inc jecxz test out inc (bad) std mov push fs xchg or fdivrp dec (bad) lret xor pop js xchg test push or inc dec mov sbb jecxz push shrb adc cmp imul (bad) push sub ja dec mov shll fdivrl push xlat jo mov mov fstp jmp int3 (bad) scas xchg xor clc jns ja fdivr mov sbb lahf xor addr16 and pop mov mov push mov fadd scas jae fidivl push js sbb aaa sub pop jno cwtl aas add jge enter scas sbb xchg xlat sub nopl xchg cwtl sbb bound inc stos daa fwait mov loop fstpl xor out mov data16 dec cmp je dec push arpl mov push ret test cmp iret mov jns stc pop (bad) insl xor fsubl mov and xor mov mov mov les stos sbbb lahf pop mov sbb mov loopne or add xor fdivrl daa sbb stc inc test xor (bad) adc testl jmp das push dec repnz lods add js sub bound sub jno lods cmpsb fmull pop stos or popa leave sarl into lahf enter xor add pop cwtl test cmpsb cli into sbb addl cmp shr xor test enter xor scas mov pop jns (bad) repnz pop mov push and mov xor (bad) lock or sub inc dec xchg xchg movsb mov adc roll fs mov ret xchg push cwtl inc ja fimull repnz push les lret in hlt jbe out (bad) (bad) cli jne and add sub cld ss scas out push dec ss test out ljmp cld push pushf mov jno lcall rorl out mov and repnz mov cwtl ss xlat loope dec aad fwait repz punpckhwd sub (bad) pushl divl lcall sub xor jns cmp stos addr16 jecxz cltd mov pushf pop fidivl xchg ret inc mov popa push cmp cmp popf mov add jns int scas xchg sbbl std mov ja call js ds rol sbb mov mov pusha sub in jo mov insb call add imul mov and insb aas stos fcompl dec xchg into and xor sbb fisubl cwtl mov mov inc sbb sub sub ljmp xchg ja (bad) addr16 push sar shlb inc mov cli out push add push xor dec mov add dec les test in les icebp or filds xchg push aas imul mov cld mov jns sub jecxz sbb (bad) in sti enter xchg aaa call orl push rcll jg mov pop sub bound cmp cmpsb xor call (bad) stc jge push dec clc sbb (bad) in cwtl pop hlt rep idivb scas mov ss push xchg cmp sub mov leave loop add inc fcmovne scas addb aas lret jl mov sub sub dec dec (bad) es or push jbe jb pop lcall xchg cmp push jmp call je stos (bad) jg mov pushf jne push sub jne outsb xchg lahf xor xlat jle dec push cmp imul mov dec or fucomip out mov std inc ret jbe ret fistpll sbb fistpll push inc sub xor gs jg ljmp or int3 push pop add mov psrlw cmp fwait cwtl mov push xor adc mov (bad) mov push push pop dec cmpsb rorl nop (bad) jle push scas cmpsb dec sbb xchg fbld popl dec cmp and sub outsl and mov push and xchg dec push ja mov fistpll stos test mov dec xor inc jns shlb push rclb dec xorl cmp cmc or out mov gs adc faddl add (bad) add std fstps adc (bad) daa sub jb fs imul pop jne push push or ret popl jle inc fmuls xor mov push shl xchg rolb daa xchg push sub iret loope sbb inc cmp xlat in insl pop loope jae jle dec cmp push lret lret xor outsl mov mov push shrb push pop jb sub addb adc cmp stc jp roll cmp dec (bad) jae sbb movsl jb or mov mov imul and sbb xchg pop pop jae ret inc insl fs (bad) sub jb lret ret mov push int ds test push adcb sub test push dec cmp out dec pusha mov les imul mov mov push ljmp dec bound jnp movsl lds or adc pop aas mov dec ret (bad) xchg test imul xchg sbb push mov mov mov xor adc mov aas shll jb je int3 jae and aam outsl dec push mov fs scas lea and fnsave andl int cs rcr mov gs arpl inc and jmp in cs pop dec mov cmp insb xlat jle dec lret ret loope js les sarl aad xchg rcrb out cmp xor rcrl shlb and push mov mov icebp xor xchg mov and jp test push shl popf scas xor inc je (bad) sbb cld icebp jl stc stc push fabs pop xorb pop push mov mov scas pop xchg and rclb xchg gs add mov push aas jb out je cmpsb and cmpl mov or push adc fwait out imulb fs loopne xchg ret sub shlb fisttpll xchg jno in shrl and in out fdivl clc (bad) stos mov lods xchg out comiss sti ficoms (bad) pop cmp xchg (bad) dec and dec aas adc sbb (bad) pop shl fwait mov pop adc fadds jb add mov repz add loop xor call rcl dec jae inc or sbb ss shlb (bad) fsubl int3 imul pop mov add nop lret pop xchg mov loopne push xor inc and clc fbld push pop sub test addr16 imul orl loop movsl jns push inc shrl out sbb lahf adc inc cli lcall xchg mov inc daa mov mov or stc and rorl ss sbb mov dec xchg test sub es fisttpl lcall aad xlat mov adc arpl out aad xchg and xchg jecxz in hlt call xchg orb loop (bad) push adc jle or pop cmc cld aaa sub sbb and shr and add fcmovnbe mov test jmp push dec test xor xchg or mov cmpsl mov fbstp sub addr16 xlat sbb pop jae clc lods in add (bad) jo jb in ds les int xchg inc sbb outsb iret xchg inc fistl insb xchg mov jg xchg mov (bad) push jns xlat pop repz ret lods xchg pop jmp pusha ret pop std sar ret (bad) rorb test in outsl cs mov lret in cld lds repnz (bad) push lock mov mov psllw popf inc cli jo shl out aam sub (bad) sbb leave mov mov sbb xchg mov push xchg pop lahf (bad) pop test out cmpsl jle xor (bad) cmp aam fistpl (bad) lods (bad) or inc or push jns xchg out sti shlb jge fwait adc out xor jg and pop add add roll jmp test cmpsb imul dec fsubrs aas inc xor cli mov fstps in or sub test fsub (bad) pop mov dec push (bad) stc adc popa dec jle es adc sahf rcrl subl jmp add mov clc sbb cmp popa scas pop cmpsl xchg pop cld imul pop mov lret cmp adcb xor jecxz and sbb int loop insb xor cli cmp popf shrb sahf adc inc inc push int3 outsb cwtl pop scas add (bad) and out cmp xchg mov fwait cltd sub fdivrs in inc dec cmc popa pop pushf inc push (bad) dec xchg shll fsubp aad adc sti insb or rorb rol dec add outsb xlat fwait out nop (bad) fmulp daa mov xchg push repz jmp popa mov cs jge out push fstpt out loope jmp xor pop mov push lods sub and jno aam xchg mov dec jmp test jp dec scas inc cmp sub icebp cld out pop shr rorb inc and das sub pop cs cmc je ljmp fdivl nop xorl add sbb imul push mov and add andb outsl clc mov inc jmp out subb dec lods push sub pop mov test jbe clc out jge cmc lret mov mov push addr16 cmpsl inc jae scas mov arpl push xlat push mull mov das das push xchg addr16 (bad) fucomip pop mov ja sarb cwtl inc adc or fldt ret ja popa loop test jle mov xchg fninit std push sbbl mov iret test mov xor out outsb in clc out mov stos out out or data16 idivl adc sar add dec mov sbb jmp lahf mov jg je mov cs dec sbb jb in loopne adc sbb hlt fidivs dec lahf pop mov xchg and push (bad) int stos fwait movsb mov shrl fiadds ret jnp add and mov js mov jmp jno ds jne mov xchg mov pop mov test and pop pop xchg mov sbb mov xchg dec push lock dec das hlt js insb stc sbb xor or fst ja mov imul (bad) daa (bad) aam mov fisubrl add mov or nop shll (bad) out pop shl jg in es icebp jle and js jecxz jle sbb das shll jo add out stc iret xchg sbbb dec addb mov dec xchg sub push lea mov sub xor mull jl cmpsb andb cs cmc and nop stos les push dec jp outsl filds call sub out ss aaa call lock pop mov or adc push cld ljmp aaa sbb push or out and (bad) bound jmp push int cmpsb xchg xlat or fnstcw sti jns xchg jbe jae mov pop sub xor mov cmp ja adc aas imul in dec add lods addr16 add lock cmp out (bad) data16 ss push mov (bad) push cmp adc mov xchg ja jne outsl fistpll mov sbb mov mov pushf adc push js mov mov outsl fbstp mov (bad) xor adc hlt std cs les outsl fbld mov testl push mov mov jne outsl (bad) sbb sbb out divl pushf adc mov mov cmp dec rcrb fsub mov (bad) lret adc lds mov mov outsl fistps stc mov (bad) imul xor mov mov popf cmp xchg (bad) sbb lods insb inc mov push ja cmpsb out fidivl neg lahf sbb or sbb adc fs mov loope and dec cs fsqrt outsl fistpll ja sbb mov (bad) addr16 pushf adc icebp dec cs movsl cli outsl fildll lret gs (bad) push orb js add mov sbb test iret cmp fiaddl jmp loopne or pop test mov push ja adc xchg stos mov xchg xor bound sbb stos notl inc (bad) sub test adc fisubrl lahf lock loopne fistps and pop imul push or add dec aaa scas adc rorl lods je testl ja push jno sub lahf add mov sub fcmovnbe stos xor ja dec cmp xlat adc sbb std movsl (bad) jae inc icebp imul ror sbb xor aaa jmp fbld rolb push testb arpl xchg xchg pop xor xchg callw pop cwtl mov sub bound rclb ret inc push pop jae fs jns and shl xchg fmuls loopne xchg mulps add int ja (bad) fisubrl or ja xor mov sbb je das jo adc add xchg cmpsb sbb sahf scas fidivrs or xchg fucomip mov adc icebp in lock arpl inc pop clc lds adc test sbb adc cmp adc push push out pushf adc mov fidivl int3 push js push pop shrb movsl clc (bad) mov cmp xor pop sbb js sub (bad) loop add pop sub int3 dec out xor aaa push or pusha lea call and xor mov int ficoml fsincos (bad) jg mov push rorl jg int3 xchg mov or cmc adc and add mov (bad) mov xchg mov or cltd sti sub outsb xor xchg push add jp iret test cwtl cmp or cmpsb sbb sti insb insl cmp mov dec cwtl cmpsl or cwtl sahf mov mov mull mov pop push (bad) push pop cli (bad) xchg jmp shlb loop jecxz inc push es cmp lret stos addr16 mov add xchg loopne out into mov jmp lret cs or outsl mov cmp pop dec cmp adc jno lcall pop jecxz pop xchg shll insb mov adc cmp mov adc (bad) sub fistps int3 imul out xchg or jg jmp idiv mov sub jg inc in aas mov xor loope in or and xchg daa test cli gs mov scas movsl aas xchg (bad) add sbb hlt fwait rcrl neg mov add mov test sbb push xchg ja cmc loop icebp clc adc mov scas and push add in inc add mov (bad) loopne in jg sbb fs inc add nop cmp push and sar cwtl (bad) mov xor aas movsb sahf sbb bound iret ja (bad) scas nop dec iret arpl add xlat sbb movsb and dec (bad) jns cmovg mov pop icebp xchg mov jno xchg test jno mov gs insl (bad) push ja adc (bad) mov mov insl (bad) pop fcompl shll mull sub adc stc fidivl in in push push pop mov mov ds dec dec push xlat sub (bad) cmp adc lea ds jo mov mov fucomip inc stc dec and test sub inc out ja sub lahf ror loopne sbb pop nop cmp movsl pop jg push inc sub daa int push sarb ljmp fidivl or jno test adc outsb push repz pxor pop ds cmc jne mov push xor mov stc sub sti fldenv rorb ds jmp dec mov xchg lods insl cld arpl popf pop std adc mov fistpl ret pop mov ret aad mov cmp mov lret adc mov push pop xor lds dec clc pop push ja xchg insb pop in pop adc xchg outsl cmpsl in mov out jp cmpsb out push jl pop sbb cld push xor fcomps sbb fs mov out adc fisubrl mov inc imul test xor pop stc jecxz fistpll out (bad) pop dec int gs fdivs xchg adc jecxz pop sub xchg jecxz push lea cld fisttpll outsl and and sbb ja cmp imul mov jmp sbb rclb push pop and data16 pop mov pushf inc aas add sbb cmp jno mov out lret pop adc fcomi movsl fs mov push arpl xchg and rorl jg cmp cmpb loope test and das ret xchg dec ja add pop dec sbb push cmp divb sub adc pop enter test cmp mov jge pop sbb pop jmp sar scas mov shrb xor sub (bad) add in test lds in mov jp mov cmp and leave sbb cli adc sti (bad) out xchg or movsl or inc inc mov sbb lods mov xor jg push out and jg stc jecxz pusha lods sub lret cmp fstpt stos outsl fisubrl inc cmc rclb pusha cmp sbb (bad) (bad) dec mov dec xorl test mov lods and test sub ja addr16 out ja jae jp sbb dec pop int3 sbb dec clc into mov int xchg sbb mov add jg lea and dec adc mov std stos adc push (bad) enterw lahf cmp rolb pop rolb js out pop clc (bad) sbbl xor mov xchg loope (bad) sbb dec sub push stc insl mov fisubrl fistpl inc fstl rolb and (bad) cmpsl adc mov add mov jl jns xor int3 mov (bad) cs sub cmovle das insb cmpsl add mov nop lcall mov subl and or mov add xor andl clc scas fstps mov sbb jnp pusha (bad) movsb xlat sub lcall in enter mov and cwtl imul cmc adc popw and inc xlat sub cmpsb pop rorb (bad) insl fwait jp add sbb and lahf js sub arpl mov fmulp repz ljmp adc lcall adc sub in cld aad push mov or mov and mov repz out dec dec mov push xchg lcall clc data16 dec (bad) mov mov scas add lea xchg mov dec push stos xor and sub xchg dec xchg sarb lea pop and sbb inc xor cmpsb ja data16 popa cwtl andnps or pop dec or andb imul icebp mov and dec fiadds push outsl imul test in (bad) pop imul loop test pop push pmullw out sbb lods and std dec jno outsb pusha pushf icebp cmp cmpsb adc pop mov test loop scas push mov (bad) jae rdpmc sbb mov cmp repnz jns fbstp shlb aad dec push or test lret aam adc adc mov mov pop fildl fstpl dec and pop add lahf loope xor jae and (bad) sub loop lods stc (bad) lock in lret jle mov (bad) int add ljmp xchg xor jge outsl xor add pop add nop (bad) push xchg xor arpl pop mov cmc (bad) loope in jnp,pn inc stos and xlat stc js adc or mov add loopne icebp lahf adc push int3 and popa in sbb in ret dec sbb push jmp xchg jo mov dec inc outsb sbb test ss das sub shll jno das jns xor fisttps outsl cmp sbb test call adc (bad) mov push cld aas lock and aad adc push and adc pop push imul ret mov outsl dec mov jo jge pop push and cld or mov ds loopne inc in xchg ja jno inc (bad) imul cmpl xor pop std jg testb cltd dec dec add call daa int decl xchg in dec push push mull mov adc sbb ret (bad) insl jnp cld push scas cmc xchg mov insb cmc fs stc hlt das sbb mov lahf mov cmp pop fnstenv push and xchg mov push xchg adc sarb pop jbe mov sub pop push xlat add sbbb adc pop in dec inc xchg ja inc dec int3 int fwait mov mov sbb dec mov inc arpl xchg int aas lea adc cmpsb and lods in int test shr rorb daa pop call fcmovu lahf scas shlb dec inc (bad) dec pop stc dec push sub mov lahf and out sub mov dec sbb adc sbb cmp add cmpsb mov jecxz cs jno mov rsm dec cmpsb outsb xchg (bad) fidivrl (bad) enter imulb xchg movsl fisttps ja shlb push outsb xchg stos mull popf cli jbe and mov jmp cs loope mov nop testb jo mov imul xchg inc dec cmp iret mov bound es stos js push scas jb clc adc adc push sub sbb fs shlb mov sub cmpsb push (bad) (bad) fdivs fadds nop adc es cmp and sub cmpb inc sarb or outsl data16 sub and jbe sub out fisubrl mov xor inc xchg outsl call lods and cmp pusha enter inc jg fstpt fmul mov shrl jg xchg adc loopne push jle sub xchg aaa inc lahf ja scas jp popa jno rcrb pushf sti jmp mov jns xor and add sbb orl and (bad) dec aas (bad) fisubs jl adc sbb rcr imul in pop lret loope je or xchg jbe ja in ja adc mov aam xchg mov lods and fsubrs sub inc imul jb xchg mov jae or ljmp repz in fisubs (bad) scas mov push nop add fidivs xlat pop xchg int sub cs xor pop push push loopne loope jno gs and push arpl sarb push mov fisubl push icebp mov outsl add mov lods and into cmpsb xchg imul dec add push xor outsl filds mov mov (bad) sbb jle inc das out xchg leave repnz ljmp sub dec push xor dec loopne cs push mov push int3 (bad) hlt jl out out (bad) push jns jp inc ret int3 daa cs test add (bad) jae adc xchg jge push push sub test push mov jae push mov jno in pop xor sub mov push sbb add pop ja mov lods pop neg in pop aas enter mull mov inc xchg dec adc and mov xlat pop mov in pop xchg xchg add aad gs cmpsb ja mov ja mov xlat pop loop in pop adc cmpsl adc mull ja sti lock adc inc rclb fistpl mov bnd cld mull loop stos lock adc mov mov fistpl jp in pop sahf push jmp fs ja movsl jns pop jns lahf ja mov sti sbb mov cltd aam ljmp inc mov cs into xor fucomip mov adc std jmp and mov mov test mov mov pop xor push xchg pop mov out and inc int dec mov mov bound rcll dec imul jecxz inc cmp xor xor out int3 shrl das leave mov mov mov dec jns loope cmpsb adc pop pop add or std xchg fidivrs filds push inc (bad) adc jmp in negl cmp xchg dec out xchg ds push add cs push cltd xchg adc lds and test outsl rclb loop ret loopne fbld jecxz jp cmpsb mov adc dec jle,pn lahf sub mov pop push cmp mov rolb notl or arpl repz loopne ljmp push mov push sbb sub sub not mov notb or cld lods jmp dec imul mov imul or cli push mov loop inc and pop insl fdivp cltd push repz in jne bound cmpsl push ret fnstsw push shlb sub fimuls sub push pop gs rorl mov lahf outsb outsl fcoms mov jge sarl pusha inc mov lods addb daa dec bound adc or xchg adc mov add dec in cmpsl pop dec sub out out xchg rcr push adc andb js push jnp jb repnz icebp pop rcrb cmp outsl into adc test andl in jp jle fsubs lahf fnstenv rcrl outsb push xchg mov push daa mov outsb arpl push pop in add cmpl dec lcall pop lea mov cmp push in or xor ret popa jns jo push fxch adc int loop push mov lods test adc cltd cli add sub jmp fdivrp fucomi out mov xchg nop in push shlb fs (bad) jo ret ja adc dec cs popa lahf popf imul lret sbb outsl cmp outsb ljmp dec or push loopne fistps mov movsl arpl mov cmp fstpt fimuls mov and and or lcall or lea fisubrl aam lahf adc test in lods lahf xchg loopne xchg xlat aad jne fisubrl adc mov push jae mov xor in or je repz imul fimull add mov loop pushf jl out movsb cmc cld xor lret inc lods enter lret popa mov pop mov pop cmp push push lods pop addb fcmovbe xor jecxz mov mov sbb sahf shlb mov mov add cmovno cltd lahf or in pop rcrb jo mov pop add mov mov aam call pop add ret mov add sub cs daa cmp insb sbb inc push add es jb gs or call adc dec cs xchg inc fildll sub xchg mov sub mov jp sub xchg add pop jmp (bad) enter fldcw sub dec shr push jmp or xor ja mov ficoms and xchg test pop push mov xor jecxz cmp in push mov loopne and cmpsb ja testl push dec sbb notl push enter cmpsb mov mov pushf frstor dec fs pop in add mull jg mov or inc mov or cmpsl and cmp and les or data16 inc inc xor cmp lods sbb out out loop dec push push pop fisubl fldl mov leave stos stos gs gs pop xchg ss dec ss fistpl adc test jne xor rcll mov fidivrl fistl and movsb xchg mov xchg mov xchg addb cmp rorb popf negl jo hlt loope jae or fnstcw lods xor adc pop cs movsb sbb and mov and push push test mov and dec pop sub jmp lods (bad) xlat sbb xchg sbb popf call sbb rorb fs fcomps movsb and data16 popa cmp repz sahf add mov paddd out jb pop icebp adc enter inc ja and movsl aad add stos push fucom lock inc rcll (bad) push rcrl leave mov (bad) xchg lea pop push rclb mov or mov iret dec adc cs imull xor ret lcall fistps cmpsb out out loopne loopne (bad) xchg jb jb pushf add sub ljmp cs outsl or rep rcrb xchg out movsl sub push push fimull push fistpl xchg push shll mov inc lret out inc lcall je dec adc inc mov rorl mov pop clc fcoms mov push (bad) sbb pop cli outsl pop or xchg out outsb roll cmpsb out insl mov dec lcall sub stos data16 pop movsb in adc lods iret push mov push jns test cmpsb out inc inc std repz cwtl push rorb mov imull and rclb gs (bad) or rolb jl add mov sar outsl enter rep cmp idiv sub repz out out mov in dec pop xor cli add mov js mov in cmc mov jo cld ss push dec xchg scas pop dec lods mov mov mov push sbb mov xor roll mov cmp cmpsl insl mov push sbbl mov and lods and (bad) out fnstcw imul inc shl ret jb dec ret nop xor fldenv iret mov scas out add in outsb adc jmp icebp mov and lods xchg mov movsb xchg or and sub fildll fistpl sub dec loope jl hlt pop clc fdivrs data16 adc push lret mov outsl push xchg test stc and stc cwtl mov mov lea fisubrl dec shll aam shll je xchg test push mov or xor bound js push das icebp call pop sbb stc popf fldenv cld cld fistpl mov xchg mov pusha jbe jbe test cli ja adc push insl adc mov sub xor imul xchg cmp sbb lock cmpb sbb and (bad) push loopne mov xchg mov fs lock aam push pop push popf adc rorl fnstcw jno and and popf xor push cmp push pusha out pop or pop pop push push mov mov sbb lahf rcrl or and jge cwtl jns lock ret xchg gs fbld xorb enter divl pushf and jmp in fisubs aad test jno or rclb roll cmp fs (bad) rep sub ret fxtract flds fidivrl sbb xor cwtl add pusha jns int cmpsb ja sbb jle mov push aam fucomip pop xor add into stos or test push add pop add mov aad les dec mov dec mov push sbb xchg inc mov arpl clc outsb xchg scas (bad) hlt push outsb pop testb dec neg xor and sbb lock xlat jecxz lds movl shrl add xor mov mov pop movsb xchg fisubs jle nop ljmp shr pop fcoml test popf jmp or mull jle loop outsb adc mov aas mov dec (bad) mov and test aam out pushf adc inc xchg cli sbb mov dec and aad mull cmpsl bound cmp adc push lock mov in popa cmp enter cmp out push inc xchg or sub out cwtl mov ret daa xor xor and inc imul sbb xchg outsl in bndldx lods and sbb sub test rcrb add in pop mov testb pop mov pusha cmp mov pushf inc pop jbe in fistpl es call fs or jno in daa dec cld xchg outsb mov adc mov jge gs mov fwait jecxz mov clc in rolb sbbl and cld out jnp push push mov mov cmpsb xchg or xchg push or pop popa cli xchg ss sub push clc and cwtl pop (bad) imul jecxz fisubl cmpsb shrb pop das sbb inc inc cmp fucomp mov scas mov mov ljmp sbb fiadds loope cli or cs mov pop cmp push add mov cli popa mov stos inc out roll mov sbb ret fnstenv out push xor aad jbe and aas dec sub test mov daa in and mov les sbb nop cmp pushf adc imul rcl push les seto xlat clc and mov inc push shlb mov push adc aaa cmp pusha or pop dec mov adc xchg ffree sbb mov (bad) cmp mov jo aas stos pop xchg and aas mov adc fldl (bad) ljmp imul mov jmp and aad clc shrl test add hlt mull sub into adc jp cmp in popa dec aas lock fisttpll xchg lods leave jb out test add subb ret popa fiadds unpcklps xchg dec incl lea adc mov and lods and push dec mov rorb (bad) jmp cmp bswap gs inc popa fldt leave mov fiaddl out ss out xchg subl outsb std cld or jecxz adc es mov add push push int3 mov out scas dec jg scas idivb xor mov mov stc loope jecxz mov bound les loopne movsl mov aas lock into hlt mov insl add or mov push jmp lahf jp shll fs mov mov pop out inc fucomi mov add add dec add out ds pop ficomps (bad) push loopne add popa fbld dec movsl addr16 mov enter int3 imul sub jmp test into mov xchg xor pushf fiaddl test add xchg (bad) shlb mov push sbb fisubrs add imul xor (bad) loopne sbb aaa (bad) mov push mov icebp mov enter inc xchg sbb inc and call add xor sbb mov pop (bad) loopne stos lahf into shl push xor addb test mov cmp jae pop cmp movsb fists xchg imul or test mov into cmp pop and mov fbstp imull pushf gs xlat xchg cld cmpsl xchg cmpsb leave inc mov mov clc jno js xlat add sarb sub mov adc sbb scas inc cwtl or clc sbb fs push dec sbb sbb scas jge mov ja adc mov mov xchg outsb fs and mov jbe in adc mov test fstpt push (bad) pop inc loopne test dec ljmp inc jecxz pop stos lea push lahf scas loopne sbb add mov test jecxz push int dec data16 and loop mov dec ljmp call pop mov cmp mov mov call xor sub pop test pop push ficompl sbb aaa push mov test cmc test add idiv dec test push jp sub sbb inc mov test ret icebp mov in dec enter shll stos lods inc mov push shrb fidivrl pop outsl clc outsl jno xchg mov push mov test pop xor mov mov movsb fcomip push add xor mov mov fcmovnb jp push jbe and movsb es xchg fs out jg push ja mov int ja lahf mov pop js push loopne test cmp fs out arpl jecxz icebp fistpll int call mov or mov jbe mov lods aam xchg ficomps ja fbstp lahf in mov (bad) pop xor inc je pop sar es mov mov popf hlt mov adc xor clc xor fadd popa mov fdivr in or xor mov adc xor adc cmpsb addr16 and leave sbb mov mov lret mov xor dec outsl dec sub pop call fisubrl imulb or rclb adc cld adc mov xchg push xchg mov fidivrs stos shll imulb pop fstpt dec das sbb in nop andb adcl dec xchg jno cmpsb xor ds mov dec addr16 dec into mov insb cmc test ret jp fs add lahf fidivrl loopne mov lods and movlps icebp mov sbb out xor adc mov ret divl sar adc and mov and cmpsb push fsubrl int sub xchg (bad) sub inc arpl dec pop or scas movsb fists sbb imul xor std out cld push sbb ds aaa add lcall inc xor test js int3 and ret lock dec push stos lods push clc (bad) test jp aad sub int popf or inc movsb (bad) shrl gs mov adcl cmpsb dec jno out lods popf sbb xlat test scas loopne xchg dec jno sub jbe inc xchg popf nop jbe xor cmp fstpt jp dec mov fidivl mov insb mov or mov cmp push push js shlb stos jbe cmpsl inc pop adc push adc sbb in or sbb (bad) cld mov jbe lods xchg push cmpsl fisttpll mov dec mov cs cmp pop or andb call sbb cld and fisubl xor inc lahf idivb jg movsb fucomip xor cld cld lcall jo dec jecxz sahf adc or push pusha push fcomip push daa sahf stc (bad) cmp mov xchg out fisubrl jmp pop dec push pop (bad) into rolb dec mov mov outsl adc push mov or test xsaveopt fsubrp das jbe lahf push clc cltd mov sub popf mov and (bad) cmp fbld stc arpl fs test stos push add mulb repnz scas loopne xor enter (bad) pop xchg clc insb ret push jns call push or (bad) dec jno nop gs jmp cmp xchg rolb sub (bad) cwtl jecxz push xor mov fists sbb gs mov xchg out mov xor sub inc xor sbb and int push mov and lret in out sub icebp xlat or loopne xchg dec mov cmp test aas dec xchg fistpl movsb push fstpt dec mov xorb jle gs adc mov imul mov fistps xlat xchg lock push or imul enter mov pop mov xor (bad) jl pusha cld adc xor adc loop lahf xchg mov mov dec (bad) lods orb test and jp adcl jp fnstsw je xor notb adc xchg ficoms xchg out sub mov loopne xor je sub lret sbb fsubl push test sbb movsl idiv cld and mov insl jmp (bad) stos adc hlt or movsl insl out mov xchg int sub push cli das xchg std popfw fdivp xor aaa jmp daa lahf rorl (bad) xor imul cmc adc aaa clc inc mov xchg daa push mov (bad) mov dec mov outsl fidivrs fisubl stos inc pop cmp dec xchg fs and mov xchg (bad) adc data16 stc inc mov jo call xchg mov sbb shrb pop in lret ds adc ljmp test testl leave ret ja aam xor (bad) ss jbe outsl (bad) ror sbb jae int or clc clc xlat mov cmpsb mov aaa xchg and mov aam jg sbb call push mov hlt out cs pushf pop xor mov xchg sub call or js cwtl inc mov cmpsl insl outsl jecxz add dec out cmp adc cmp scas sbb pop push sbb and negl fs outsl sub adc enter push lahf cmc add pop fisttps jge mov pop (bad) in pushf bound xor jl call and sbb mov mov jmp mov (bad) xor dec add in pop dec jecxz fisttpll cmpsb ret pop push jl sbb fcmovne jnp xchg xlat xor xchg cli (bad) stc cld adc aas push ss push push ljmp aad sub fisubs adc inc push mov movsl ljmp push imul idiv repz cmp mov int lods xlat flds adc cmovnp fisubs (bad) sub inc jmp cmpsl cli pop enter enter dec pop lds mov pop and call leave push cmc (bad) cld xorb outsl out loop cmpsl scas fistpl in fisttps mov or cmc movsl adc mov cmp js mov loopne jg jno fadd call cmc jbe push pop dec lea mov nop aaa imul pavgb add mov smsw sbb shlb sbb fucomip call pop movsb cmpb sti push imul das jns jno inc sti mov lods xchg insb sub or test cmp fisubrl cmpsl lahf inc add enter sahf xor addl jecxz,pn andl pushf stc popa pop cmp add mov dec js in movb xchg push pusha in pop lahf pop cmpsb nop stos push in jl mov stos sub test sbb rcll and int ljmp movsb xor insl and mov jbe jmp (bad) lret dec movsb add jb dec xor (bad) out xlat nop mov or addr16 adc in aas cmp dec and idivb (bad) jmp add jecxz sbb add or xchg lret jb xchg and xor test xchg xor lret fcomi mov popf mov ret xorb insl lock test fdivl aad cwtl cmpsb das lcall rcrb lods and (bad) push loopne pop out fimull fistpl out mov or mov repz cmp sbb lea and std jp insb push sbbb in mov bnd (bad) imul mov mov arpl xchg addb xorl sub jae gs push clc test out int jo adc mov movlps in sbb dec dec lock fucom xor push fsubr push sub inc loop push jo or jae mov mov sbb mov iret je imul add cmpsb push fwait sbb cwtl repnz push outsl pop outsb add (bad) pop dec andb test loope push and bound cmc jno or repnz and jno push xor push cmp add nop lret sub lret jl arpl xchg das push xchg and pop xchg adc pop or (bad) fisubrs ffree insb rcll jne and pop xor (bad) jo test les sub imul jne inc sbb xchg jno adc jmp and cs fistpl lcall or mov sahf shrb cmp sbb jns push or pop insb addl mov loopne jnp (bad) xlat dec adc shlb xchg cmpl push into clts mov mov testb xlat shl test rcll xchg inc imul out jae dec pop pop inc lret arpl dec sti outsl push jb or ret sbb out mov pop jmp mov (bad) or pop bound jge add push lret movsb jmp add out cs xchg fwait push or pop lcall pop mov adc mov push pop cmp inc add pop jno adc cmpsb push pop push cmp lcall sub pop scas push mov sbb pop movsl add in add xor pop sbb jp fwait ret clc sbb int3 test adcb sbb and orb test mov aam ss add push push (bad) push dec cmovne xor xlat cli in test xchg shrb mov pop fstp jo or jae dec lods pop mov mov iret fimuls xchg dec push adc xchg test push pop ret sbb add (bad) inc dec sbb loop pop push mov rcr sbb and pop lret adc in dec popa jb add call data16 cmp mov into test xor data16 ljmp add outsl and pop xor shlb and mull xchg fwait cmp sbb push fsubrl jnp sub aad jne pop test cmp mov jo adc cmpsl jns cmp out xchg mov jge shlb (bad) shrd pushf xor loopne jnp movl xor leave lahf mov (bad) sbb push loopne addr16 scas mov xchg (bad) push add jl aaa jno jne and pop pusha adc mov (bad) mov call add adc sbb pop inc add pop jno adc cmpsb mov ds mov xor dec pop sbb call mov cmpsb ja push int3 scas fimuls shr test mov push sti scas test imul lcall (bad) sub aam ss jmp lods sahf xchg ret fcompl mov int3 push dec xchg xlat shl mov push (bad) in iret sub inc or in movsb cmp mulb repz aaa fsubl bound mov sbb sub jns fwait cmpsb inc popa mov xor repnz xchg mov stos xchg jge add and in (bad) jmp add out mov rorl mov pop in adc test js jl lcall aas xchg xor pop gs movsb add nop push sub push cmpsb jle pushf movsl sbb lahf ja xchg sbb pop mov movsl jp fwait jno dec clc lods flds int3 pop mov lds (bad) adc mov pop mov loopne data16 mov in test shr (bad) sub inc (bad) jo or jae dec mov mov iret mov mov jge orb dec sbb (bad) loop inc sub mov imul push ljmp add pop jno rcll gs dec bound inc bound pop outsl adc or shlb gs push aad clc dec fldenv or out inc test jg mov or mov test pop cmp and and or fistl cmp mov iret jnp (bad) dec dec scas mov (bad) xor subl dec lahf (bad) mov dec hlt movb lahf aas mov ret jo adc rcrl cmp sbb sbb inc loopne and push fimull xchg push and aas aaa inc into js lock mov sbb mov mov stc mov jge andb sbb ljmp pop pop add (bad) pop dec or mov xlat mov aaa sbb andl cmc cmp ds mov jno aam nop mov stos aaa push and idivb add push lret dec jmp mov out pop repnz stos add int hlt or pop clc mov imul in pop sbb jne and pop mov popf mov (bad) loopne sbb nop mov adc test ss in add sbb mov in popf xor pop pop push push jbe mov rcrl jmp mov fistpl (bad) cmp fnstcw fwait (bad) aad clc fnstcw mov sbbb mov mov stos add pusha (bad) pop dec pop inc jmp rcrl inc xchg (bad) adc pop fistl btc push xor loopne jnp (bad) insl clc aad xlat enter xor push lods int xor test pcmpgtd insb hlt enter mov aas dec adc rclb inc popl popa dec flds jecxz cmp pop sti int3 push xchg cmc fwait test or adc add (bad) mov gs mov sub insl push push sbb cmpsb pop jle pop (bad) cmp mov xor shlb mov pop mov sbb sub fs cmpsb scas popa mov jp das xor aaa imul bound jge add jge mov inc xlat jl arpl mov lret push and add xchg lret aas mov imul (bad) lahf rol or and pop (bad) adc cld (bad) pop pop push mov imul (bad) mov push fs mul fdivl shll jno mov adc adc rcrl pop inc add outsb jno sarl mov insl cmp ds adc or loop jbe pop mov xor pop cmpsb ja in out fisubrl or out xchg test mov mov fiaddl subb (bad) mov cmpl mov lahf adc (bad) mov scas mov and clc hlt mov sti xor leave das mov push bswap mov sbb dec xchg xlat cld in test dec nop jmp inc dec sbbl adc jge xor mulb scas mov scas fcmovb push mov inc repnz sbb mov sbb mov iret mov dec insl shll bound pop inc lds or sbb jnp js jbe mov in lods push aas cli xor pop ret pop imul shlb or lcall or push pusha lods fs sbb mov jmp jle cs xchg imull data16 mov adc mov xchg or jp insb xchg orb cmp daa jnp (bad) jae insl aam cmp arpl (bad) push or mov loopne sub js hlt dec mov jne (bad) test and mov or fisttpll sbb dec xchg pop xchg lret loopne,pt iret push pusha sti test test ret dec push inc pop and (bad) pop dec xchg gs mov test and (bad) xchg push lret push jmp push mov (bad) mov xchg add int sti adc cmpsb or xor stc movsl adc lcall test clc pop push push shrb pushf inc cmpsb ja in out fidivl gs lods test mov (bad) cmp sub aad clc stos fsts mov jecxz out and mov and shrb cmp xchg cmp push or repnz int faddl jl shrl scas dec push jnp (bad) daa dec or pop ss imul mov dec clflush repz pop cli clc add xor xchg dec push xchg andl (bad) scas (bad) and sar mov loop sahf jo adc stc push nop cmp inc sbb mov in test xlat nop subb fwait lahf inc ljmp dec aam sub ja outsl addr16 scas shlb (bad) cmc ret xchg aaa sub mov mov sbb gs mov ret mov jge sbbb sbb (bad) mov les push pop mov jl arpl push loop rol mov sbb jne and pop rclb fnsave push mov imul mov (bad) loopne xchg add and rcl gs mov add call pop aas shll addps pop mov mov call adc cmp outsb adc add or pop and jne sub cli mov out fisubrl sbb lahf push add sti jmp and shll xchg sarb add jns arpl push imul push add std add add pop cmp lahf jo xchg pop (bad) adc adc sub stos inc in mov aas sbb sbb mov shlb ja xchg mov in pop pop xchg and mov fbstp dec fldl mov mov xchg pop push mov repnz cwtl sub mov mov fidivl dec cld nop sbb lret fwait leave inc push addl adc xchg cli call xchg outsl fucomip shll test (bad) push ja adc fisubrl mov xchg shlb scas push or out (bad) dec sbb pop rcr dec test mull cmpb pushf adc int fcompl in or sbb lahf scas andl imul xor sub adc lret add cld sub mov push call pop sbb dec jge and fucomip imul rorl pushf add ja in stc dec push mov lret dec cmp mov shlb xor loope addr16 jl add adc cmp pop rcrb or (bad) add sub xchg ja adc fisubl mov sbb push fistps and jb and rcr testl sbb rcr in pop mov int jp sti std jle mov (bad) adc cmp pusha sbb nop adc xchg call (bad) push mov lods movsb mov mov aas loop sbb jbe nop stos (bad) jmp or and sbb push pop add mov rorb adc lds jmp adcb xlat cmc in xchg mov out ljmp pop add sbb sbb call push adc pusha adc test push aas mov add mov and fiadds aam mov test repz mov push test push ja clc adc fisttpl into cs adc sbb push push loopne dec sub loopne ffreep lahf or (bad) xchg cmp inc adc add xchg xchg jno,pn jle cmp inc jle mov mov push cmp aad xor jne aas dec inc test adc and ljmp ret mov or sub call imul sbb call bound xchg lret cmp loope ds lret adc lretw xor fistpl xchg jl hlt mov inc fisubrs push leave daa dec loop mov xor mov inc add push mov (bad) sbb adc leave iret fsubrs mov cmpsb sbb pop pop push push jge dec xor popa (bad) (bad) jbe ret mov aad xchg rolb adc xor mov stos insl ljmp sbb icebp negb xor push lods adc mov jo and repz or shll enter aad negl sub push fcomps andl out mov add aas mov fldt arpl pushf cmpsl mov es cmpsl jge dec scas push sub nop in in pop in mov call mov testl in imul pusha pop cmp stos adc fdivs les xchg es add (bad) mulb xchg push lock xor push mov mov pop xchg out (bad) mov lahf cmc (bad) adc inc xor stos cmpb je sbb jg subb rorl mov fdivl xchg daa inc lahf ja mov pop popf push lods and test push push sub xchg test mov xlat sub lret ds xlat in dec jg and insb imul push push loop push ja clc rolb mov jne or cmp pop sub or cltd js pop aas push inc or sbb enter in mov frstor adc mov dec (bad) int3 nop adc sbb jge fs lret int lock outsl fcmove jge lock dec pop mov cmp mov cmc fcoms push (bad) rclb push mov add shlb pop ret enter int pop jnp mov fcmovbe push iret mov push cmp ja xchg repz test test sub xchg xor sub fiaddl mov gs out mov and subl fwait and stc xchg dec mov sbb mov int pop jg mov (bad) in add pop pop lret mov sbb and jp (bad) stos aas or decb test pop stos js movsl cs scas (bad) shr jb imul sbb xor fisubl out mov shr pop shlb xchg cld divl sub xorb xchg repnz aad loop ja jae out sub pop and jno xchg in inc mov sbb jecxz sbb ret iret or mov daa or sbb xchg movsl jecxz push ret arpl fxch inc fcoms pop (bad) int mov push loope sub or adc mov ja add xlat dec cmc into inc push lods pushf sbb imul (bad) and pushf adc out (bad) push or cs test mov fbld test mov dec cmpsl mov dec int3 sub adc outsb adc sbb jbe adc adc mov int cmp pop int3 loopne xchg inc das gs mov adc mov lahf pop stos push out hlt out call pop sahf add mov adc ret dec fistpl outsl fucomi pop rol lods and cwtl jo int3 fsub icebp mov mov dec (bad) outsl loope adc xor push ret xchg xor movsl cld dec lahf ja cmp fbld popf inc idivl cmp jmp jg (bad) cmpsl inc nop lahf roll sbb xor sarb mov push ret fnstenv (bad) push and aam setae iret dec out cltd call jae ss dec mov imul fidivrl fidivrs hlt stos pop (bad) adc rcrb lods js push jb leave cld (bad) aam aam ja (bad) push mov jcxz sub sbb rcrb mull cmpsl shlb dec mov imul js pop js and in repz pop mov sub (bad) notb int3 and and cmp adc mov sbb cmp and (bad) xor push push iret pop loope mov jg mov (bad) iret mov cmp push scas push lods movsb arpl push es jmp hlt add addr16 adc and das es dec sub iret sti push sbb inc sbb add sub xchg xor mov ljmp nop addb (bad) and rorb adc push mov mov cltd scas cmp sbb (bad) (bad) mov cld (bad) jg adc and stos pop mov mov addr16 cmp insb out inc mov pop stos sbb addr16 xchg pusha jne scas bound mov fwait add roll decb push lds jecxz in pop jne iret lret cmc and dec call xor xor mov int3 (bad) jge aas lods bound pop addr16 test int push test mov mov mov sbb add (bad) jmp outsl mov adc lods sub mov jmp scas ljmp bound mov cs mov xor pop in mov xchg sbb cmp sub mov arpl add stc xor dec in mov outsb mov jb and shll xchg push mov pop stos mov nop test jo (bad) fisttps std in mov push lods rcl push mov ds pop jge mov or jecxz dec adc insl sbb add in les or hlt fs cmp mov and ljmp mov jmp cmp cmp mov mov ja push xchg jg test xchg push (bad) dec push repz cwtl arpl pop or in or mov mov (bad) fcmove lret test daa push pop cld xor fldt (bad) pop add add add out mov das cltd mov pop arpl mov push and inc rcll mov pop shrb loop popa ss in pop or (bad) dec int fs adc jp mov sahf jbe outsb sbb (bad) sub adc mov rorl adc test sub jp insb jnp stos test xor pop sbb inc outsl inc cltd scas inc cmpsb insl push add dec rolb pop sbb iret sbb sub inc lret fs es or fstps (bad) pop or jne cmp pop enter sub adc dec (bad) adc mov mov mov inc xor lahf xorb push add add into sub dec jmp push (bad) movsb out rorb xchg clc insb xorb ja das and cwtl push mov movsl imul add dec jmp sbb cli ret xchg call imul inc inc cltd fldt cmp fmul mov ljmp lods adc setl icebp outsl cmp adc bound das pushf ficoml push mov jnp mov pushl arpl xorb jle aam mov fsub sub mov stc (bad) addr16 mov mov lds and jecxz adc rorb inc stos stos es sti aad lahf sub cmp lea inc ficoml inc cmp lcall pop jmp dec es ret incl outsb push xorb nop mov add (bad) ja and mov push push pop adc cmp stos arpl orb mov adc stos fucomip adc fwait out dec mov mov pop mull sub adc icebp dec mov leave js adc push add sahf sub cmpsl dec jecxz fs xorl pop xor pop xor push pop dec push stos scas pop les lods jnp adc sub inc inc adc es jge mov mov jecxz in xor lock and (bad) iret std cli pop push push in repz lds es xchg insl outsb call or adc andl add insl ret xor (bad) in fsubrp enter jecxz adc sahf sbb xor xchg cltd in rclb xor lcall mov lahf fs push adc mov dec pop ja push mov sarl movd xchg cld fildl and fbstp cld push hlt pop push cwtl (bad) xor cmp outsl sti xchg sbb mov xor pop inc out and out push xor push cwtl daa nopl mov in ss inc leave stos xor cmp mov sbb test pop jbe sbb cmp es mov xlat adc cltd mov sbb or icebp mov pop push cmp pop add lcall in sbb or negl push adc xor (bad) jo repz (bad) out and sahf int xlat sbb ljmp jo inc psadbw lods mov ret mov das xlat arpl jmp mov add or mov inc mov inc ret cmpsl jo imul dec and push xor scas jns add dec sarb mov cmp sbb popa (bad) aas or inc mov (bad) sbbb adc sbb cli je mov sbbb icebp mov ret ja push ljmp or xor and inc out fisubrl fcompl mov push cmp jae pusha (bad) xchg fbstp xrelease fwait mov and cmp adc shlb arpl add mov add inc addl shrl cmc dec ror cmc inc (bad) aam (bad) mull and repnz push (bad) mov cmp and pcmpgtd ss jns push ds push scas pop (bad) fistpl mov dec xchg push jle pop insb int3 push push jb addl and pop or cmp sub (bad) iret js mov xchg jb push cmp in push jb negl lcall xchg call push sub xor dec scas mov add test scas clc das adc mov cmc aad and loop loop in adc les iret mov adc outsb inc sub test xor dec mov jae lods pusha arpl and imul push xchg dec mov xchg (bad) pop mov adc das aad out or lea push pop mov jp out xchg push lahf lock cs push cmpb jmp (bad) roll call fildll dec adc lods push fists sub repnz xchg mov mov fsubp negl lea mov sbb fbld leave scas stos jo xor mov mov inc test jno pop gs loope mov insb xor aam add xchg jb aad aad mov mov push int3 mov mov (bad) sbb pop loop ret pop sbb ret test in fsubs pushf adc jno arpl iret mov outsl fucomip xchg push inc push pushf mov arpl stc mov repnz add xchg push int jp xchg push movsb xor ret scas dec sub test sbb jns ss adc pusha jnp gs push cs cmp lret inc mov mov ja xor mov jbe inc lods pop xchg jp cld dec xor pop ret jg pop mov nop adc popf je scas or ss mov (bad) jo mov shr mov fisubrl in loopne inc mull test xor mov fs mov add inc lea sti (bad) pop pushf jb adc repz sub jbe imull rcl dec or lcall and add or fidivl mov and mov push test lea or (bad) push inc cltd xchg dec ret or cld ljmp out sarb xor cmp fildl mov idivl andps stos adc jp int3 in popa test xchg jmp in icebp inc and aad lahf adcb pushf or in or stos js in in ja mov jg ljmp clc (bad) lret js pop jae cmc xchg add js (bad) in ja sub lea repz in int3 hlt xchg out das sbb out pop test inc ljmp test nop int mov jns pop imul iret mov negb std jno lock inc mov adc push rcrb shll paddb sub xchg xchg movsl aam test lds jne test or dec xlat fistpll pop bound pop rcll sarl fucomp xor loop pop pop or xchg sahf pop shl pop or lock adc mov add cmp sbb mov dec adcl pop mov popa dec and test dec mov inc sub bound es xor jp scas push dec pop in mov and lret loopne pop cmp nop mov mov pusha inc push sub lahf jno mov and mov sub cmp push xor or add inc xor jmp pop addl repz addr16 inc xor stos outsb popf push (bad) and inc sbb std jne jb lahf lret mov ss add xor xchg sub and mov sub push pop mov scas or lret mov fdivl cmp xchg outsb dec xchg lret out ljmp fists or adc jle mov addr16 in gs repz ja inc movd pop ja mov lret add jg int add add mov jns xchg dec pop jbe fiaddl pop adc add loope cwtl mov cmp and rolb ja test les scas cmp sub movsb add dec mov inc mov mov jecxz imul sub aad (bad) rorb movsb aas inc mov cmc cs and fnstsw add jp test lahf mov fwait mov js popa stos subb dec inc aas mov cmp lds negl outsb rorb shlb add add xchg popa xor aam jne scas adc push in loopne cld mov call aam xchg in xor lret add adc leave daa mov into xchg sbb aaa sub movsb (bad) cmp pop cmp xor repz xor xchg mov mov push jecxz out in mull xor pushf data16 out scas sub into xor (bad) xchg pop and or mov clc sub pushf mov addb jg mov shll popf das xlat adc jg pushf jecxz mov xor pop inc fs push push movsb inc pop cwtl adc outsb inc stc inc xchg in push addl addr16 sbb jns jge mov add jbe jp add mov mov push nop shrl repnz mov out cmp ret mull scas inc ja (bad) scas jp adc push ret fistpll (bad) xchg andl adc push pop into pop ljmp xchg push sub sbb and outsb ret out jnp out mov iret xlat jb stc inc adc sbb or sti sbb add mov xchg test fldcw mov test pushf pop testb fidivs mov mov aam imul push pop xor and aaa insb out cmpsb leave daa enter sbb into xchg sbb dec sti inc mov and mov js fs jg xor in sub mov mov cmp push and pop lods pop sbb mov imul pop fildll xorl mov inc insb cwtl es lcall xchg insl mov push pop mov loop inc out and inc inc insb std cmpsb xlat sti adc (bad) ficompl jo mov (bad) jo in out push pop cmp out pop mov test mov mov push sbb outsb js stos fwait jno and jl (bad) decl xor fdivl rcrl pop nop sbb test cld mov popa push adc sbb sbb jle cmp dec dec ja pop sahf mov adc inc sub lods in or pop mov fwait cld xchg mov jb out jo cmp jg add (bad) mov xchg mov icebp add idivl (bad) jne lret or fsubrl arpl or hlt fildll dec ret or cmpsb sub mov inc pushf push test lahf movsb pop stc add mov call fbstp iret cmp fidivs xlat int jge adc popf inc iret sahf sbb movsl (bad) popa xor inc test (bad) adc mov or rcr mov loopne xchg iret cmp jl xchg fucomip mov ljmp pop pmaxub aas jno mov push jle lock xchg jae mov pop cwtl mov push or mov mov adc ficomps mov sbb mov andps push cltd add or ret push cmp sbb mov push dec mov mov out pushf mull push out cmp cmp xor push dec arpl (bad) cltd lret mov jecxz add popa and ficompl sub dec loop ret notb adc push lahf jmp jns imul outsb fsubrp jns mov cli cwtl ja (bad) mov ret jns xchg lcall sub out and push std idiv in dec push std mov out or cmp dec and fbstp imul shl push int sti xlat mov push dec sub mov cwtl lretw cmp mov fstl fistl loop popf shrb data16 insl push cmp or les xchg jg cmp mov fldt sub pusha dec inc add lret and aad ret cmp clc push cli sbb hlt sbb push gs mov flds in lea mov xchg add leave xchg fnstenv stos lcall aam cmc in push aas fildl outsl sub (bad) gs das gs lock xor and jnp push rcl ja pop pop mov sbb xchg jl and out jno insl mov xchg (bad) mov add pop dec push dec sbb mov mull sbb cs repz push and into fdivs (bad) movhps and and push sub jne xchg rclb addl xlat outsb nop ljmp lods cmp xor cld into cmp mov add test jno bound pop fstpt xrelease mov lock mov ljmp and and popf jnp scas outsb mov add push adcb mov jnp hlt lds xor and push xchg sub mov mov sbb movsl pusha ljmp jmp jge cmp imul rclb lahf in mov adc add dec jne cld mov nop mov seta push notl repnz fs dec add push idivl (bad) or ja mov mov mov jno movsb int3 out test xlat fsubrl pop or xor xchg stc inc xchg push xor jecxz pop sub push sbb out std stc lret xor stos cld ret push aam jg dec es data16 pop addl (bad) dec xor inc es idivl xchg jecxz dec push mov xchg ficompl sub loopne in call arpl lods cli cmpsb out sub fisubs sub out ret mov mov push adc bound stos inc stos pop aas mov popa xor push les daa pop jg sbb sbb xchg js (bad) fs jg pop inc or ja in cmpsb cmc sbb out clc jle loope fistps lcall inc pop shll imulb imul fildl in repz jns xchg pop sbb int imul add rcrl push gs xchg out push call aad stos les mov inc mov adc xor popf jne mov xor mov out inc mull pushf mov jecxz sub cmc cmpsl loop xchg fs lods loop test jno and sti fisubs jo fisttpll jp and dec setae test push bound add std cltd bound enter mov ds (bad) out int3 lea clc in imulb inc lret cmp fiadds cmc push out arpl imul jmp push xchg sbb push in lret dec bound mov jns orl dec loop test push enter push lea mov dec fadd cwtl cld stos xchg lods push iret dec push sbb pop mov loopne sub (bad) jg int fwait xor jge div jns test jno lret jb js pop outsl mov roll xor insl ljmp dec mov mov mov mov aam fisubrl adc test mov adc mov mov mov testl jmp add leave out lret adc sub stos rcrb xchg push sbb test movsb xchg clc cld xor jno jmp (bad) in sbb sti inc arpl dec sbb cmpb xor push push out push pop cmp (bad) arpl pop push jecxz mov xorb icebp mov loope in imul and aaa cltd mov adc push and pushf ja dec in jno jmp ljmp scas (bad) rorb pop test adc rol scas mov adcb jmp jnp mov in cmp push xorb mov jno jmp (bad) or lahf cmpb mov popf xchg xchg les mov shll in xchg test roll mull mov jmp inc inc orl test xor sub adc out idivl roll jae pusha stos (bad) sub ss add sbb cwtl pop stos add fisttps cmpsb mov in cmp data16 push push inc fcom (bad) add test add add pop add jmp lods or pop xchg sbb xor sbb mov loopne mov mov lods sbb dec orb cmp popa adc fstps dec mov cmp jp inc test adc pop or (bad) mov sub mov (bad) push push test cmp mov cmc jg out adc or jns jp loopne adc jecxz push and das addl lods rclb pop mov inc mov add sub iret mov mov lahf pop loop test (bad) mov (bad) imul insl mov xchg sbb out xor negb iret add out cld std and movsl scas shrb mov hlt insb mov in push bound cmp cmpsb cli andb pushf adc lea pop fwait jecxz movsb mov arpl lahf ja sbb shr out mov or push in xchg sbb lods mulb xchg lret test add aas (bad) scas fwait mov btcl mov xchg push cli ret imul adcb test jae inc mov xchg push adc cld cltd dec mov cmpsb xchg ret push ret mov ret lret sbb cli or popa shlb repnz xor cmpsl adc loopne addr16 cwtl mov lods fisttpl fwait xchg sub inc mov fwait and add pop pop das in mov loop rcrl add adc je (bad) lahf mov add sub in pop stos fdivl lds jo sbb adc call setae call (bad) aas add push push ret sub int3 insb push idiv enter add mov call add xchg loop xlat out or mov mov dec stos fcmovu push stos or test push (bad) mov adc mov push add call loopne arpl rorl pop mov hlt shll xchg cmpsl inc mov imul adc mov dec sbb mov fldt mov adc pop in idivb int mov out test shlb and rcl pushf jecxz insl xor push paddusb push and inc xor inc jb in movd cmpsl pushf out mov cld mov leave daa or sub push pop fsubl xchg fildl add inc mov cwtl scas in pushfw and mov lods nop jb push mov cmp out fiadds popa cwtl das (bad) out aas (bad) xlat pop shll jmp push test outsl fbstp mov dec xchg cli push mov add rcrb inc imul xchg out sub fadds inc (bad) adc fistl inc insl lea rcr adc xor add in jmp cwtl jne xchg imul mov jo lea or inc iret mov das mov sub push (bad) pushf mov inc (bad) jo mov jl xchg sti mov addr16 out cmp sub and out jnp fldt pushf cmp sub and (bad) ljmp ret sbb push scas mov out loopne inc sub xor and add push (bad) cld enter mov fsubrs jbe in pushf or imul pop lock arpl in push lea cmp je,pt push cmc sub mov push aam mov hlt pop mov mov mov mov push xlat sub mov les out test into call addb sbb pop push ljmp in dec (bad) into in xchg call cmp fs scas mov adc rol (bad) cmp adc mov cmpsb sbb out sbb push push sbb mov dec and into pushf mov gs aad sbb jg mov jae pusha pop cmp lret dec jle pusha mov push cmpsl stc mov lret mov js mov fnsave push (bad) aad push xor fsubrp divl fidivrl mov mov pop xor jg push into imul dec adc ret in sarb pop jg cmpsb jl and mov out cmpsl repnz cmp jno repnz (bad) sbb je dec push mov sub dec sub pop fucomi idivl in aad aaa pop adc cvtps2pd outsb in out push mov ficompl mov mov sbb mov gs mov lods lcall (bad) cmpsb inc loop pop xchg cmpsb xchg jle cmp push out mov adc jg mov sahf iret or repnz add inc jns hlt lods jo ret and sbb loope mov adc adc sbb in inc pop dec cmpb loopne ljmp push inc aad shll test or rcl outsl adc and lahf inc mov xchg sub das movsb sbb add (bad) cmp aam ljmp add cmp popf insl inc cltd in mull add sub mov cmp and and mov iret pop ss sbb and add lock in add mov test outsl mov repnz sahf fbld mov push bound aad lret xchg adc mov mov jg xor jo sbb jno pop dec inc sbb cmp inc ss jp push xor pop xchg les jno fsubs lahf push pop or xchg xor jp,pn jb out fidivrl jg insl mov lds lods int lret inc mov or shll in sbb fs mov mov rorb bound sbb dec xchg adc mov call sbb aas mov sub lret xchg xor (bad) fistpll sbb mov scas ljmp cmpsb mov jg dec in cmp ljmp hlt fwait mov call push (bad) rclb mov add pop aaa fildl addl pop dec mov adc nop scas mov arpl pop sub ja popf fisttps mov loope sub and xlat mov inc pushf ljmp movsl mov adc out sub int3 int3 dec sbb fimull pmaxsw arpl jb and movsb pop clc imul push jmp punpcklwd cmp aas jns mov gs fwait ds into popa ljmp inc xor mov divl mov xor xorb in (bad) mov fsts push lods sbb push les jg lock enter out aas add mov popf outsb inc and or sbb mov les fbstp ret les push sub in push push pop (bad) mov into sahf ljmp popa jno mov arpl insb jle dec mov add jb (bad) addr16 xor dec out or xchg in loopne mov mov xchg test or cmp mov and add decl out mov xchg fwait cmp fldenv jb mov repz in nop inc cmpsl out outsb stc fstl push mov divl or fnstsw dec clc mov cmpb call out rcrb leave scas mov xor and and add test leave cld adc jne imul outsl aas cmp push ret mov cmp jo sbb jbe mov push shl push ja add push loop and stos cmp nop dec lock inc push int3 ficompl rcrb inc fcmovnu lahf and adc mov fwait in aaa movsl or pushf scas mov bound cmpl lcall mov sub add add shrl rcrl sbb and and dec mov in inc inc pop in cltd outsl cld icebp cmp fcoml sbb add and mov jle mov cs mov add fstl mov aaa adc or into movsb adc lcall adc clc adc cmovg or sahf data16 jb pop sahf inc add adc addb dec inc cmpsl fwait mov stos xor lahf fmul clc mull loop repz lods or (bad) (bad) lods insl iret (bad) cmp dec mov fisttpl push mov fcom idivl xchg lcall push repz add fisttps dec mov cld subb mov xor adc mov scas fisubrs xchg pop int mov push fsts add xchg arpl cmpsl sbbl mov (bad) sub mov sbbb (bad) xlat push outsb test xor xchg dec inc xorl add inc lock push xchg std gs mov cmp dec xchg push xorb (bad) ds out cld mov aam loope mov data16 sub push inc jbe ficomps stos shll xchg repz lds out sbb and outsb scas push repnz stos icebp inc pop in mov add stos adc lock (bad) ja xchg cwtl mov push sbb or mov in outsl adc and mov cld lea out cld ret into nop shll data16 lret repnz inc (bad) xchg ret and xchg std push in mov call sbb xchg dec fst and out ss or ret mov xchg arpl ret lret repz push enter fwait daa mov mov movsb jmp das mov mov mov lods adc mov ror lahf mov test adc pop out int3 sbb std push mov mov or jnp (bad) stos adc jecxz scas push cltd (bad) test into (bad) leave push mov pop xor jl negl and pop pop loope xchg or sbb dec dec lahf repnz in sbb ret aad cmp leave gs mov mov push movsb mov test mov mov or or mov pand imul jo shrb jnp scas mov push ret enter dec andl dec sbb mov insb xchg ret cmp adc xor sbb add mov into (bad) pop mov loope pop mov jg adcl jnp jbe pop add or adc fs stc shlb popaw insb or xchg inc je mov pop les push and push adc pusha scas inc or cmp cmp sbb lods call cmpsb adc dec ret outsb sub mov pop pop xchg push add xor mov lds arpl test jmp push int3 insl mov lcall psrld nop sbb mov jne and cmp jmp popa ja adc adc mov jecxz fisubl les or bound outsl dec ljmp (bad) push pop pop incl pop mov push push fcomps scas mov inc shrb add inc test movsb push push popa jnp adc mov fiaddl xchg jmp mov push (bad) xor xchg push mov add mov shl push jno jbe and movsl mov pop in sbb out xchg add icebp mov (bad) jno sbb cwtl dec push dec adc cmp aas mov jge xchg xchg xchg and adcl pushf leave cld (bad) mov push gs in inc cwtl andb nop ror xor and cmp or in movl (bad) scas outsb xor mov mov xor add clc in les shll lock insb sub cld enter inc jp fmull cltd data16 fsub faddl jmp ret ss out mov pop out rcrl push into (bad) je dec ljmp jne cmp in outsl je cld jb cmpsb ja adc mov enter clc xor pushf or push scas fs loope or add mov shlb rcll mov pop cwtl inc jmp popl adc mov mov stc test ja pop pop sub jnp orl cmp push jmp iret aaa push decb mov pop into mov jl or cmp aaa dec test and xchg mov into cmp nop sub cmpsl mov cmp negb cmc jbe cld call xchg loop mov pop xchg out popa sbb pop aaa sbb adc into in sub jns xor (bad) jo xor fs pop or adc and cmp mov rolb mov out nop in pop sbb add jecxz mov xor xchg shlb mov push pop inc push (bad) push cltd fistpl test dec ret in fldt icebp mov mov imul and lahf mov into add pop cmp xchg je int3 inc lret xchg mov ja fnsave addl jmp mov pop sub jecxz push mulb lea mov or sub scas cmpl testl js sbb jle sub mov fistps sbb jo pop jl int lahf icebp test pop push inc (bad) fcompl out dec sub movsl cmc jg pop bound lahf jno dec lods js cmp popl popf ja ds aas cmc push fs mov lcall cli cmp pop inc imul push bound scas xlat mov loopne arpl mov stos rolb add idiv adc cmp pop addr16 xor push inc aam loop pop jns ss inc jb pushf fidivs aas daa add push adc and nop and mov jmp loopne mov sub inc jecxz testb icebp or out inc cmp fsubl inc fisubrs les xor jge mov (bad) loope or (bad) sbb fimuls jnp stos es sarl scas test loope push cmp (bad) lahf dec ss aas and aas sarl mov adc (bad) js stos dec inc faddp in addr16 shrl in inc mov das stos add fistps push or xor adc cmc pop adc pop inc addr16 add test mov cltd inc adc pusha int xchg jecxz sub cmp nop in pop and rep push sahf insl outsl fistps sbb adc pop add jge shlb push inc jae orl gs mov mov andb pop shll cmpsl addr16 pop shlb arpl enter mov jle out cmp fwait xchg stos icebp cmpsb lret and shr out mov test jae jno dec xor cli mov jecxz pop add or sbb adc mov inc pushf insl push mov imul movsl mull test fs add out adc push pop jmp sti xchg pop mov call les xchg xor and push mov shl pusha scas mov addr16 cli mov jecxz or dec adc add xchg ficoml fnsave (bad) xor sub gs pop arpl push insl adc cmp pop ficompl (bad) in roll mov cmc xchg out repnz imul aam fs leave sbb sbb dec add cld and mov xchg ja adc (bad) les insl ja adc xchg cmp push and lods enter lahf scas adc (bad) divl flds test and mov xchg iretw adc outsb xor cmp sub xchg pushl fisubrl and jo repnz mov int3 inc aad cmpsb sub mov sbbl les std jge fistpl test add mov mov jbe mov or pop aaa out inc xchg adc cld testb or je sbb imul leave cmp cmp mov jb or push mov sub mov push and cmpsl testl sbb and mov push jle sub test sbb leave add daa int3 add bound jbe and adc into mov mov div inc cmpsb dec movsb and ljmp test cmp lds (bad) xchg (bad) or rcrl dec in iret dec xor cli push data16 add sahf sbb mov nop fidivrs (bad) stc ljmp add push (bad) in in (bad) in or mov int3 cmp add xchg or inc and incb pop fmull sbb xchg lds mov jle xor aam sub xchg or fldl and add dec (bad) enter ljmp xor in jmp mov mov call nop rcrl cmpb adc push into mov or imul test cld call or out cmp xchg mov (bad) insl mov mov pop fwait call xor repnz div mov std adc jb es inc xor and aam ficoms test pop lods mov pop cwtl xor out sub adc mov mov fisttps add mov xchg adc (bad) mov (bad) xor sbb movd pop cmp push orl mov (bad) and data16 ja sbb dec mov jmp sbb test ljmp sub (bad) xchg mov pop and ss ret xchg mov dec int push pop imul mov jbe fninit xchg mov test mov imul mov and test sbb dec cmp out push mov dec scas lahf or movsl xchg loop mov add dec sarl out ss ja jp lea dec push push or adc es sahf lods cmp int3 jbe icebp rclb lea in aam cmc or test add mov call bound aad xchg lahf pushf loope inc ja adc fiadds imul jge xchg sbb dec sbb incl es and add mov insl (bad) lods jae mov xor cmp outsb push xor mov popf xor arpl fistpl sti fmul popf enter add push mov mov xchg lcall or pop mov cmp inc arpl lods mov imul adc jo dec xchg adc (bad) bound cmc pop fisttps test lret pushf data16 rcl fildll test pop mov cmp and ljmp fsubrs cld dec adc sub rclb sbb or cltd fistpl dec lds cmpb xchg pop cld pop roll mov dec lods mov add in imul jecxz adc dec stos and push fs xchg cs aas mov es dec xor xchg xchg testb dec lcall inc lods jg aad insl daa aas or mov fs pop add mov push add and fcompl and out jmp outsb into mov fnsave lret (bad) pusha nop adc ret enter mov repz ja insb aaa into add fstp jge aam add in lcall addr16 out test push orl mov rcrb sbb xlat xor add pop xor mov loopne jmp mov sub fimuls fdivrs rol or sbb push fistpl and push pushf cmp xchg pop sar rcll or pop out lret loope mov ds mov pushf js pop xchg push (bad) repnz inc push out push lret stos jbe cwtl loop les (bad) repz and mov or and xchg push xchg pop adc shl es pop xor xchg out je push repnz dec dec roll xchg lds xchg mov aam xchg or adc pop lcall loopne mov mov xchg xlat pushf jmp (bad) xor clc lea adc movl sub ret movsl sti call fmulp jbe jae xor dec nop das cmp pop mov aam sub xchg jge jecxz insl int3 mul clc in pop nop push inc cmp sbb mov inc or sub test std inc or aaa pop sbb xchg inc sbbb test jnp cmp push or push cmp frstor and fcoml mov outsb lds pop add insl add jecxz mov cmp mov lds sub mov push mov pop pop adc sti mov or bound and loop repz xchg sub lahf ficoms mov incb xchg xchg fadds stc aam sahf inc scas leave pusha cmp xor inc shl mov mov sub dec int3 iret lea adc xchg inc mov cmp aad shl aam pop mov push (bad) insb dec push xchg out lea xchg iret (bad) push sti xchg (bad) in mov jo dec adc jg repnz adc loop cs mov or xchg cwtl insb in pop add sbb call pop icebp leave imul ret xor fwait cmp add test in and push or daa inc mov arpl es enter loopne cli mov inc mov daa sbb dec pop push pop xchg sbb cmp lods jg xor je jle sbb jnp or dec stos push add cld mov pusha je dec es jge cmpsb jp pop push insb jecxz xchg dec pop cmp pop mov repnz sub notb mov cld outsl loopne sbb jecxz dec nop mov jg adc mov dec and or pop nop bound jecxz push xor rcrl setae or and dec cmpsb mov gs sbb mov into cmp adc pop clc repnz fisubl jne imul lea dec test js aas lcall mov xlat fs inc jecxz hlt inc (bad) xor jo cmp add out dec jmp ret (bad) (bad) bound and xchg cmp add outsb xor cmp nop mov jg pop xchg pop les inc mov jmp jg xchg push jno xor and lock pop bnd int3 call jmp push in pop mov fstpl int3 mov out rcll int mov jae pop fstpl xor and lds in mov jp jle rorl or sbb fiadds or adc ret cmp mov int ficompl ret stos xor mov pop (bad) lret dec jge out pushf xlat aad loop mov cmpsb out test fstpt sar jbe cltd imul cmp bnd lcall imulb neg jmp jmp or adc and or out xchg loope (bad) dec loop lcall xchg mov add jb dec cmp enter outsl lcall or out mov adc mov popf rcrl loopne scas dec psubsb shl test adc jp int3 xor test out or mov ds mov rcrl test push push sbb idivb inc cli ljmp xchg pop call (bad) and xchg fsts (bad) xor pop lret std fimull out add movsb push adc cmpsl or cwtl xor mov insb pop jns scas movsl mov addb imul std jbe push ds xchg jg mov mov in ljmp lahf adc in or and jg mov mov xor jne mov xchg cltd pop sbbl adc lahf stos addb imul (bad) pop jg cmp and mov lock push movsl pop mov call jg push movsl popa mov push ficompl xlat ja mov fisubrs imul xlat das out jbe hlt imul repnz lock cmp sbb mov sti data16 pusha lods mov loope sbb cli negb es mov pushw lahf and movsl bound call cmp cmp pop sarb mov push iret loopne mov (bad) jg jle lret adc lods dec or add stos adc lret cmp out fwait adc pop lahf ja xchg cmpsb cmp cli les pop fdivr or mov cmp or mov jl lea (bad) jo push jb scas hlt cld dec push adc xchg pushf cmpsb sbb xchg push iret pop stos sub popf insb (bad) ljmp add mov rorb mov jb cmpsb in stos rorb add push lods pop shlb mov mov and cmpsl ds ss in data16 push jecxz (bad) xor mov rolb dec push pop cwtl mov mov hlt cmp push stos shl leave mov sub mov sub in loop cmpsl (bad) lods outsb sub sbb sbbb sub push jg inc pop cmp or push mov shrb push cmpsb pop and sub jl iret bound (bad) aaa inc outsl mov lret xchg jmp push push movsb lock arpl test dec popf bnd jmp add pop push movsb xchg dec push (bad) (bad) into pop (bad) cmp sub mov inc sbb popa xor test fcmovu and sarl jecxz mov jae push jo xchg add cltd add xchg dec int (bad) jo push or cs xchg cld dec arpl inc inc sub dec mov aad clc dec js test mov xor lods mov cltd and out adc mov mov pop mov and int3 ljmp mov es dec adc add ja pop shlb lret lahf fisttps bound rclb mov and dec aaa (bad) lahf adc sub or mov sbb notl fs cmp jno cld sbb mov std sub mov pop xor mov pop (bad) out out push ja inc addr16 hlt xchg (bad) mov lahf iret pop jg data16 jbe fsubrs mov xchg pop cmpsl out xor (bad) ljmp das jg je mov sub (bad) sbb sub int3 sbb xor mov xchg aas and insb popa das jg lea (bad) lods xchg andb push push dec addr16 hlt call out rcrb cmpsb mov mov out mov mov out sub xchg test movsl sub ret loop (bad) lret (bad) push popa dec xorb out jp cld fsubrp pop sbb ficomps xlat pop inc sub mov ljmp fldcw sub arpl and xchg xor xchg in inc dec sbb jp pop ficomps mov push xor int3 mov inc js dec lcall es lods and mov dec ljmp aas test loop data16 mov jle sbb sbb stc inc aas inc xor push call or in pop into jno (bad) and push sub repz ret iret movsb push mov loope clc dec mov cmp (bad) ljmp call cmpsl cmpsl aas adc int mov cmc test and xchg pop loope pop add cmp (bad) mov fstpl push jns mov mov or xchg push xor xor mov add pop add cld scas xor icebp ficompl xorl movsb fs mov movsl outsl jg je push ficoml sbb mov in mov pop sahf lahf ja ja andb push dec mov clc std (bad) repnz out push call fstp push mov inc lds cmp fildl data16 mov mov inc into mov fdivl jo cmp fnstenv xchg mov jno add mov add shlw cmp push push iret cmp ficomps shrb mov mov xchg loopne clc popf and sbb cmp sbb (bad) xor xchg mov andps pop bound clc daa test add xchg and mov inc ja call ss dec stos lds sbb mov ss sub loope (bad) xor xchg lea in (bad) xchg adc mov add xchg (bad) loopne mov rolb nop jo into out xor jmp inc sbb rcrb jecxz sub nop and xor cmp mov sbb pop sahf in (bad) sti loopne xor mov popa sbbl in jge sub xor enter outsb or fistps xchg insl inc mov push mov loope mov mov sbb mov aam (bad) dec rorb cld xchg std out xchg fdivr pushf call (bad) faddl call sub mov nop inc data16 mov mov sbb pop xor add push pusha mov dec lds mov mov inc inc jecxz mov sbb jae mov call sub sub lahf idivl aas out lahf (bad) call inc mov aaa xlat mov inc sbb sbb int loop bound sub inc ss loope aas (bad) stc mov push jae cmc ds mov pop and xor push push aas dec nop (bad) sahf pushl je lahf (bad) lds mov cmp xchg aam iret mov jns (bad) imul das cmp xor push push negb cmp (bad) into jmp or dec in dec test add ret pop sbbl ficompl scas lea push insb jge push jle (bad) lods outsb push ss lods and popfw lahf or push mov cld pop outsb addr16 dec rcr sub inc adc sbb jne cmp jo negb xlat and mov add fisubs mov inc loope popf push cmp aad cltd fiaddl shl dec dec mov adc test xchg add movsl mov arpl mov shl inc jge int3 orl or sbb pushf inc adc xor fimull and cmp lea add fwait push push cs sti fsub out lret and cmp mov pop push popa clc pop scas rolb pop xchg xor lea and mov (bad) sub jno xor js ret lds out pop (bad) rcr and adc mov mov sbb arpl push or arpl test popf mov mov inc inc out out and sahf nop jecxz pop pop (bad) mov push push xchg sub lret pop sub inc insb in push sarb pop pop cmc mov ja repz inc dec xchg clc int xchg or xorl int3 sbb les add jbe sbb mov jle sbb cmp xchg nop fiadds cltd or gs (bad) out insl cmp jle jle mov (bad) out xchg ficoms testl orb shr repz sbb add xchg push (bad) sub xor scas loopne stos jo jno in les lret adc les and rorl sub add rolb lret mov jns test pop mov sbb push movsl sbb shl aam adc adc lcall mov subb jge and insb cmp add sbb mov sub fwait adcl sbb push xrelease mov int (bad) paddw std and jp sarl adc je (bad) outsb jns xchg subb aad xchg (bad) adc add or xchg xor sbb fnstsw dec mov ds xor data16 out and jbe outsl mov mov mov loop not imul mov or sahf out adc cwtl dec or dec mov jnp popa cmc fidivs (bad) fldcw fdivrs je jmp push sub dec mov in push xchg int call scas pop push inc dec loop jl push adc enter ljmp sti push xlat mov inc (bad) jo jmp jnp inc fiadds scas std or sub push test mov test int or int xchg inc mov jle call xchg adc imul mov mov pushf mov frstor and xchg movsb (bad) fsts sbb stc aam mull cmp push cli mov test cltd cmp mov stc push add lods mov inc push gs int pop ja popaw rcrb cmp mov push xor cmp psrlw pushf jecxz aam cmp movsl out dec pop mov cltd adc rcll data16 jne xchg mov cmp aas popf cmpsl mov cld xor cmp shll pop (bad) pop cmc mov fcomps pop push lods stos insl ret mov or sub int3 cmc pop mov gs xchg mov pop mov insl mov jbe scas mov js ljmp clc jg outsb in aam jnp xchg repz push xorl ja xchg mov mov xchg and cmp push je test mov mov and notl mov xchg addr16 repz xchg pushf in add adc adc push pop cmp adc adc shl mov sub aam jle shrl cwtl (bad) adc or adc xchg and jnp sub notl nop xchg insl ret mov jns push fildll mov test insl and dec jp daa sarb in ret lods lahf enter inc lcall lds cmp push cmp push push into addr16 loop (bad) sarb stc inc lret mov mull or sub fcmovnbe cmp dec fadd fisubrl movsl pop cmp nop jae mov dec inc xor sbb pop mov add negl pusha xchg ss loope inc add les rcrl push cltd jae pop mov sub cmp or adc jno mov loope and xchg adc xchg (bad) jae and cmp fisubrs mov lock push mov sub and movb mov jbe shlb subl push cmp cmpsl and sbb popf inc notl cmp clc (bad) add leave jbe (bad) rorl repz mov lahf lods xor mov arpl cwtl xchg inc xchg adc es mov jns hlt pop push (bad) std add cmp xor jb xchg cwtl push fildl lahf push jmp (bad) pop lcall leave imul xchg out icebp into adc shll mov shll sbb push fdivl add aaa adc mov sbb and lods mov and scas xorb pushf xor outsb rcrb add dec dec nop insl jmp mov fbstp add test (bad) jns sub in icebp fbld pop gs sbb dec push cld mov aad ret mov mov test inc cmp movsb les stos jecxz int fdivs movl jp push lods mov in pushf jbe adc fbstp sub ja adc inc cs cmp test test fucomi leave vpshad push mov nop insl lcall cwtl jnp imul call dec call loope mov call jp xchg das gs scas outsb out repz push loope push and notl std dec sbb jns inc and lock adc inc push js out call loope and lock xchg xchg mov pop stos out cwtl pop stos into add sbb add es add lds cmp add imul adc cmp insl lret cmp arpl dec and jnp into push cmc addr16 cmp outsl push es sahf jp cmp fcomip fisttpl sbb dec mov lods fistpll push pop pop jg pop repz cmp cmp std jge cwtl or push (bad) push out jecxz (bad) mov in ds pop scas xchg sub imul pushf loope inc push fs lret fs inc or cmpsl push and sub mov dec hlt xchg lods fisubs mov adc push sub stc jecxz jle in loop data16 cli and (bad) xor imul or or mov or mov inc out test mov sub cwtl cmpsb ja xchg mov fdivs xchg aad mov xchg movsb daa pop hlt and (bad) stc xchg mov test push emms pop or leave adc add aad mov sbb sbb cmp movsl jp adc test or pop push pop sbb cmp stos loop sti jae push inc mov inc call mov fisubrl pop mov adc xchg push mov mov hlt idivl pop popf xor mov scas mov xchg xchg jl in ljmp gs (bad) push ja js fisubrl (bad) fcmovnbe add sbb mov jmp data16 cwtl push stc push xchg sub pop sbb fsubl outsl cmp mov sbb add and or mov push shrb sarl adcl mov mov dec pop mov clc push popa xchg sbb xchg fdivrs push iret cld push sbb inc mov data16 jnp push mov mov shlb inc mov jecxz fisubrl xchg call push imul aas pop push iret dec jne mov cmp into aas cmp call push mov mov sub fbld pop js aas xor vpavgb pushf pop xchg sub sub ds dec xor mov or sbb (bad) mov rorl rorb lcall pop sub sbb mov push jb mov in inc mov aam frstor iret lahf pop rcrb aam xor mov inc cmp mov (bad) out push shrl shl push push pop mov lock adc icebp lods jecxz aaa popa pop in mov fs movsl mov out bound xchg xchg dec sbb sub xchg adc mov xchg call dec adc mov jecxz xchg incb out push xlat adc inc shlb pop jns jecxz mov pop mov mov and sub fdivrs insl mov dec cmp addl mov test mov popa add sub int jnp cmp jg inc test int into sub push ja sub cs sub outsl fildll mov or aas pushf xchg cmp xor jecxz push popa arpl ja leave dec outsl and add (bad) stos sti call pop out jno emms mov mov lret xor cmp lods dec and adc repz pop mov mov pop jl nop jbe inc sbb test cwtl jo xchg dec mov mov mov xchg jbe mov inc jns cmpsb (bad) cmp xchg icebp nop pop fiadds mov pop cmp push cmp dec aam xchg mov into xlat repnz cld or es pop lahf ja push mov mov xchg fcoml (bad) push cmp mov inc ret imul mov ret jnp ds pop mov call stos movsb (bad) lods cwtl enter outsl in loop and dec pop test adc mov sbb mov iret sub pop ja call scas jge sub test test sub add inc jae ljmp outsb mov xchg pop cwtl xchg sbb int xor xchg push aas jle in add mov mov dec sub fimull lods repnz xor mov or add popa (bad) mov xor xchg cmpb daa adc xchg push loope mov pop cmpsb out xchg and mov or inc lods les mov mov das cmpsb aaa outsl xor rorl mov lea xchg sbb push or fsubl ret mov hlt into rcrb xlat fcoml cmp test rol iret mov enter dec mov sub js ljmp addr16 nop mov jbe pop imul push inc in mov push test arpl (bad) and adc int cli mov sbb jp les sbb pop push or test or or jae in fcomip bound into mov pop pop fistpl outsl fdivrs cmpsb andb clc movb lea jmp bound je jmp (bad) sahf fldt leave xchg adc adc jae hlt movsb iret fsts push pop mov push inc stos mov in cli mov outsb outsl in pop loope jbe lahf scas adc jno cltd (bad) push mov jg hlt jae or stc mov (bad) mov into pop das ljmp fisttpl cmpsl aad aas cli pop jmp adc dec movsl push addr16 inc mov pop adc jle rcr movnti in mov inc pushf adc and dec out cmp mov push out mov xchg and mov cmp inc xchg (bad) push nop dec xchg std jne (bad) push sub lea fisubrs test outsl adc mov test (bad) into decb and fwait repz nop in js mov cmc push imul push (bad) xlat (bad) mov jmp and pusha xor jne dec das xlat out negl notl aas mov aam push inc mov dec std fisttps pop push mov test fsubrs fwait or adc add mov call xchg xchg jecxz into adc or mov enter push pop inc mov jb mov mov clc pop int jae sbb jno pushf out mov test popf in dec sbb sub or xchg inc orl iret sbb dec dec cmpsl xchg and addr16 (bad) mov xchg mov (bad) sti sbb aam add lcall add fwait aam and icebp sahf insl ss pop test push loopne sti sti dec mov mov iret push bound sub ja jp jmp mov dec jle pop push pop push iret sbbb jmp push dec mov cmp popf shr mov in loop mov ret dec into cltd push call sbb mov call adc and pop (bad) jp jl mov int3 sub inc sub test or push shlb mov mov faddl push iret dec loope into xchg xchg jp cmp sub repnz cmp dec icebp dec imul xor jo,pn xchg add xor sti push add push sbb fdivs push and xchg or mov scas shlb dec cmpl (bad) sub in xor cmp mov not cmp sbb punpckhdq je cs subb adc inc lret pop scas adc mov add add loope aad fbld jecxz (bad) pop cmp (bad) and fistpl scas loop cmp (bad) scas movsl mov sub movsl ja adc xor cli cmpsb andl xchg jbe leave mov or stos hlt jno lea push aas sub inc adc xor idiv sub and cmp mov mov lahf jbe jb cmp into rorl jnp int3 movsb mov mov ret mov cmp rep call ljmp mov jbe xlat and ds push dec ret pop test push inc lahf stc push xchg orb and xor mov sbb push data16 push add shll push or adc in gs loope fwait jmp inc pop cltd gs fwait imul fdivrl push out int les outsb popa pop pop out xchg sbb sub or outsb xchg aas sbb push xchg mov enter fnstcw outsl xchg je cld xchg dec dec xchg adc adc (bad) call jbe dec jbe inc dec pop mov icebp cld pop sbb popa adc push adc mov rcr xchg popa outsl fs sbb push ss rcrl mov xchg xor add xchg xlat mov sbb out mov push shr mov fiaddl and jmp mull push dec and lods jp stos pop sbb mov mov and xchg dec mov rcrb cmpsl enter loope cmp cltd or push mov jmp popa push sti sti dec add sbb addb jg aad dec ljmp ret imul cmpsl mov imul sbb clc push mov movl dec sbb cli outsl fcoms int xchg lods dec ja xor sbb and clc adc int ss mov addr16 xchg fwait mov arpl int mov adcb shlb sbb cmc fmul lret mov jns inc jne xor jae negl sbbb fists mov push ja dec jno roll int repnz inc cmp nop and and jae cmpsb add ret pop xchg jg mov int pop push mov jecxz pop vmwrite enter mov subb daa ds push (bad) popa mulb pop out cmpsb jns (bad) pop cwtl add (bad) (bad) nop mov dec arpl xor mov adc dec inc roll mov xor leave mov mov or lods iret test push shrb xor sbb mov lock shlb sub mov mov mov xchg (bad) adc into add clc (bad) popa push inc (bad) sbb cs mov mov mov sbb call (bad) cmp lea push in mov or inc dec pmaxsw sbb lea cmpsl sub pop out jno (bad) imul psubq and outsb push or loope xchg sbb leave fimull cmp add xchg jae iret rcrl lret and das jg jnp into adc repnz mov xlat lock pop popa or (bad) pop stos mov ljmp push jo ss paddusw push movsb mov gs push or sbb mov pushf mov dec std insb adc mov cltd adc xor jp dec sub push pop lock sbb push ret popa cmpsb xchg daa xor add pushf cmpsb xor out lods sahf ja into xchg lret xor jge dec stos icebp mov es and pop or xchg rorl sub scas jecxz xchg (bad) sbb or ljmp out insb outsb pop mov mov push or adc (bad) data16 clc pushf xor fidivl xor sbb jo and (bad) repnz imul popa xchg (bad) cli int3 inc in ja sub xor sti mov pop cmc outsl cs les aad jg xor clc outsb jp push fiaddl aaa aam test add mov fwait pusha jno sbb sbb adc mov outsl push ret xlat aas add in xchg cwtl sub xor imul negb dec nop insl dec rcll mov fsub mov ja cmpsb rcll scas test addb lret lcall in aas arpl xor addr16 ficoms outsl pop aas mov mov jecxz out loope movb xor mov mov out bnd mov into pop xor or stos mov ljmp test xlat notb insb mov pusha inc dec fwait movsl ljmp xchg inc and add mov (bad) mov and shl mov mov aam rorl cmp aaa loopne repnz data16 addr16 repz sbb jecxz and or imul (bad) ja xor or imul dec cmp std cmp add sub jo in fcompl fisttpl cwtl dec push and in rorl mov sub jg jmp cs ffree sahf inc cmp mov popf inc cld cmpsl pop shlb fistpl dec or sub fistpl rcl mov test mov shlb push scas mov ror popf push jle (bad) add loope jb jbe rclb addr16 xor or in mov dec in or add jb inc mov mov jb icebp ljmp rcrl test adcl pushf mov scas fcom sub in sbb cmpsl mov pushf jnp xor loopne sub cmp or stos js imul pusha in lods mov xor sub test decb cmp push mov loop adc pop ret xor sbb ror cld lods leave fiaddl cmp mov pusha mov in dec sub inc (bad) out push (bad) fdivrs xor inc pop and rcl mov and es fsub dec mov sbb subb in push rorb jne pop in and push sub insb mov cs decl jbe xchg inc xchg xor in sti mov mov mov xor outsb outsb push mov out cmp push or mull leave adc cmpsb ja pop jae std cli add dec push push popa mov pop inc es push xor xor mov xor cmp pop call in jg loope push cmpsb ja cld sbb or ljmp les pop add enter bound data16 dec add mov sti inc pop xchg mov sbb fdivl cmp mov jno xchg push loop out scas (bad) jg aad stos push sbb push sbb sub fwait aam aam add ljmp xchg movsl xchg inc mov push (bad) push add sub or jns mov lds in or jne (bad) jmp and add push add (bad) popf sub push mov pushf adcb cmpl jg jno lret cmpsb fcmovnb cltd fdivr cltd pushf jecxz je loop jge mov sub loopne adc pushf sbb push call ret push cmp dec or jmp xor push jns mov cld add cmp rcrb je mov pop rorl dec dec (bad) lret (bad) popf cmpb push mov divl sahf mov xchg dec cmp sbbb push jno inc shll iret cld push (bad) call xchg jns andb (bad) std adc jmp rcr push rcrl dec ja jle dec (bad) cmp adc clc and jg xchg rorl cs (bad) cmp push or mov imul sbb loop mov add cmp push mov or vmovhpd cmp cmp jp push leave push sbb and (bad) push sbb mov jns sbb add jbe dec stc aam imul movsb cld pushf lret int3 insl lahf and push pop and inc push push popa jg add cmp out jmp ljmp push push and mov (bad) iret cmpsl jnp loopne mov in adc gs cmp iret dec mov mov jne cmp xchg or xchg adc mov push lods dec mov pushf (bad) aad iret push ja cmpsb cmp rorb push (bad) adc push (bad) incl mov xor dec inc lea push sub mov inc movsl insb add push lahf pop lret flds cmpsb (bad) add and bound add loop xor ret sbb xor add arpl lods sub test out jecxz sub rorl (bad) jge cmpsl pop inc clc call xor pop mov pop gs pop inc push xchg and ds arpl or cmp shlb jecxz dec loope repnz rorl test outsb jne jmp inc aas xor int3 inc add inc jbe cmp lods addr16 pop dec dec lods adc shlb push add rcr xchg cli jnp loop es idivb mov pop xor adc ja mov jg es fcmove sub mov stos push pop aam dec jnp (bad) xor (bad) xchg je sarl adc icebp sbb add (bad) mov aas xlat cmp inc in fisubrl (bad) mov out mov mov mov push cld pop bound mov push mov xor jle popa repnz sahf add mov adc daa mov test push mov loopne push push lods push bound push jp test scas push or and xchg sub lret add scas xchg push enter jns in je negb or xor aam mov into inc neg popa adcl and pop mov das cwtl add cmp inc cltd push adc (bad) out mov mov push mov xor sbb repnz sub push orl les push pop out sbb int3 mov (bad) jne imul repnz cmpsb sarl insb outsb aaa daa movsb xor add popa jbe or push cmp fucom out sbb (bad) mov xchg adc aaa xchg fucomi or or sbb mov inc mov popf out and cwtl mov in mov (bad) popa pop rcr arpl shrb dec inc cltd ds popa sahf in int3 pop jbe pop mov xlat in and nop mov pop cwtl pop fwait and aam push (bad) pop gs iret js push sahf and sub les xchg xor jmp in sbb adc ficoms pop daa dec sti lahf mov scas (bad) popf adc xor aas and mov jle addb test pop in sbb push mov jo adc lea xchg xchg sbb adc dec add mov enter outsl lea fcoml (bad) cld hlt xlat ljmp fidivrl sbb out adc or loop jne pop pshufw cmp out sub sbb mov out pop sbb cli pop dec push outsl lcall (bad) add mov cwtl cmpsb xor cld hlt mov into adc cmp lcall imul xchg add jbe sbb mov mov das ror les jg fildl jns rclb test les pop xor and cmpsb rorb or mov inc mov pop shl test fmuls mov mov out push clc lahf std insb add mov into dec icebp fisubs mov sub (bad) (bad) fmuls jbe cmp xor mov adc ja cmp mov cmp in outsl add mov push fs loope (bad) jmp addr16 and cs jno jmp js leave push pop push ret xor outsb adc and iret adcb sbb push xchg inc mov cmp sbb call rorl xor outsl xchg in inc adc or inc sub in mov add aad rcrl aas ret xchg sub clc mov andb lea pop aam test jecxz cmp mov jae pusha (bad) jo cltd dec cld sub ljmp pop xchg mov dec loopne insl sbb (bad) mov call or popf fisubs je rorb sbb inc inc mov es lcall cmp cld leave (bad) js arpl leave cmp and insb mov xchg lea ss iret cld jmp loopne sbb cld dec mov xchg pop and inc test test stos lret add fdivrl stos repnz pop cmpl jp or add push jnp dec scas jmp dec xchg xchg adc ljmp sbb pushf mov addr16 dec hlt push mov les add mov test jbe mov lea jle fildll jecxz mov (bad) jg mov mov sbb sub inc jbe fisttps iret cmp fs fcmovnbe pop jbe shlb adc into aad add xchg add into jge int3 pusha test test ret in or mov cmpsl mov popf out push fldenv xchg outsb jae pop int mov lahf pop dec in jg inc js (bad) das mov pop dec nop push xor cmpsb xor ja jecxz scas push mov lods in mulb cmp mov ret inc add into inc mov out lods in fiaddl repnz xchg mov lods hlt dec nop in lcall sbb out pushf inc loope jge add enter mov js mov xor xchg cmc jecxz sub xchg xlat pop (bad) and cwtl sub sub and mov cmpsl xor lds pop into jo sub int3 popf popa push fisttpll inc fists cmp lods adc lods push int xlat sub add test sbb stos cltd dec out cmp cmpsb movsb leave popa jae xor fsubr daa add push cmpsl hlt (bad) aam lret jb imul sbb xchg orb push xchg mov jbe cmp push das add pushf cmp cmp push shlb sar scas add push pop inc arpl mov cmp outsb test sub ficoms pop xchg cmp (bad) mov aad ret mov les pop out push adc push stos js test push cmp push stos stos arpl dec mov and je cli mov sbb (bad) cmpsb out adc out sti fistl xchg adc ja mov ljmp ja test cld jb addr16 mov push addb rcrb imul push enter sti mov dec push mov mov add mov jge mov and jge (bad) (bad) mov int ljmp adc mov xchg mov call ds out push mov adc xor xchg jo pop mov cmp jb pop cwtl cmpsl and in ret pop out mov mov inc pop ficoml sbb fsubs cld dec jne flds xor aam mov mov or push outsl mov cmp add out repnz jg in int add mov pop popa dec push jg pop sbb icebp dec ss pop sbb xor cmp int3 jle test mov lods and (bad) cld xor pop addr16 das push test mov cmp (bad) pop or or mov loop les stos cmp inc sti mov stos out xchg xchg adc mov sbbb jbe lcall dec xchg xchg jne mov mov subb inc data16 hlt js stos xorb loop sub sub and outsl outsb enter cld rclb cmp scas insb jle dec je push out andl mov ret sub xchg push sub sub cmp push ret daa imul mov cmpsb movhps lods xchg lds dec xchg dec mov faddl lahf pop mov arpl jecxz adc mov imulb out pop mov pop enter scas int daa xchg in and popa or xchg fs (bad) mov stc xchg iret (bad) out cltd jo ret ds out aam daa scas pop push xor or rcll out jno sbb dec imul out xchg pop cltd push jecxz inc dec gs mov fisttpll sub xor fwait subb (bad) test lds xorl cld adc sub cmp mov and dec pop xor lret or mov outsb cmpsl jge add rclb test nop or and push popf pop imul imul stc repz and repz cli lea adc push push inc repnz fwait mov add adc lahf sub mov sbb inc jle mov ss ficompl and call cltd push sbb mov jo dec aam mov xchg hlt mov cmpsb inc inc or int add lea cmp inc sbb and cmp out xor repz jg loop jns imul jl lds mov ret (bad) and jo add lcall gs adc mov imul andb inc dec ljmp pushf ljmp ret sub clc jl inc fs mov mov test and pop cmp inc subb testl js sahf outsl mov mov push scas jb lret stos test mov daa xchg push add cld xchg fimull and fwait out dec or lret sub inc inc dec repz ret pop sahf movsb sarb adc bound test push ja sub add adc aas shrb push cmp insb lret pop lcall rcll pop jg add mov nop or inc xor sub leave js xor pop rcll das (bad) (bad) cmpsb and jnp (bad) stos jle repz lahf ds and add addr16 dec cmc in inc jb ficomps pop pop jg int dec xchg jl mov jecxz mov rolb inc mov andl jno insl pop cmp inc repz fsubs sub and sub gs ss insl sub mov sbb mov sahf or insl popa (bad) into add xchg lcall xor jno add sbb push repnz cltd rolb in mov pop rcl jae jmp pushf in fistl jmp cwtl mov and loope xchg ret in cmpl pop int and mov dec aam sub orl sbb pop cli int xor loopne mov inc or xlat and adc cmp mov xor adcb inc add cmpsl stc pop les jmp xchg xor mov add mov aam ret push fcmovnb jns add ret pinsrw or sbb xchg lods loopne in dec or cli mov mov jo xchg xor jmp mov pop jne sub sub in jmp sti int3 bound sub mov push add jbe xor mov cmpsb jecxz in push ja je dec and push scas dec mov bound push or sub cmpsl push es jae daa pop out in add das jb pop shrl xchg cld int3 push hlt jg sbb ja inc mov mov clc or cli mov xor sbbb cs adc push test adc (bad) lret fmul out mov and pop sbb cmp cmpsb bound sti add enter lea ret inc test or lods xor test loope in icebp push xchg add scas sub and jmp sbb xor jle mov push pop or data16 insb adc adc fnstcw or add and push in out inc xchg adc es call shl sbb pop lahf imul adc ss mov loop nop xor int3 and and jo shll gs loop xchg imul cmp mov sbb js test mov rolb mov mov xchg test pop pusha sbb pop mov push js pushf dec add (bad) push mov xor ja not push or scas lretw ret push sahf sub xor pop or xchg dec ljmp cmp push add pop test xchg rorb push lods sub into xor imul out rolb mov imul cmp cmp pusha sub xchg out pop xchg push (bad) aad es arpl sbb out subb (bad) pop sbb int jb cmp sbb mov out mov mov xchg mov or aam inc dec fldl2t mov sbb jne inc mov xor stos or sub mov push xchg lahf subb aas inc pop es js jge test jno popa pop into in mov pop rorb dec push xchg jg repz adc and adc adc fdivl fwait push pop adc stos mov sarb mov lret pmullw add dec push and mov mov cld mov adc adc xchg scas cmp xlat xchg adc mov push dec inc push ds xorl jp aas sbb fs cmp dec pop gs rcrb jne mov stos xor mov clc mov je mov cpuid jmp push subb inc mov scas inc or outsb jnp pop loopne mov pop pop jb stos ds mov pop inc mov lods mov ja mov push xchg or push mov sub in xchg imul push iret mov cmp test data16 inc xchg mov cli pop mov insb pop clc jae aam dec gs test arpl cmp lods pop inc enter xchg iret adc push pop or sar loop ss decb (bad) (bad) xchg cld jl test ret jae stc mov jo ret rcr movsb repz sub add ljmp ret ss xchg push or jbe pop roll mov mov lahf fistpl nop in popa mov (bad) ds daa iret sbb and inc stc pop popa jae es imul cld and movsl leave cld (bad) faddl das rorb cmp xchg push call orl push sub push dec inc repz das clc adcb mov int3 pop jecxz setbe cmp arpl add mov jne lret outsl call lret popf aam cmc sub testb lahf jb incb out idiv and pop outsb nop push add mov ret out push add cmp gs ret shll cwtl sub inc je adc ret (bad) insl xor cs je mov js mov add test inc mov cmpsb adc mov (bad) or xor dec xorb ljmp loopne mov inc (bad) jo push xchg cmp xchg jbe pop mov mov dec sub mov and sbb popa mov fisttps jg inc xchg mov mov repz xchg aam fucompp ljmp mov and adc ss inc sub aas ds cmpsl icebp dec pop jge inc shlb mov cmpb ds push lcall mov add dec jns adc out test sti and mull mov mov xor cmpsl mov (bad) loop add outsl cmpsb and rcr and into in rclb out shrl push cmp ds jb xchg pop dec stos fs xchg lea daa inc mov mov negl push push mov adc cmpsl test pop ret adc adc pop daa pushf cmp dec cmpl sbb sub sub xchg lcall xchg sbb cs inc fstps cmc repz inc gs dec ret adc iret sbb ds jmp dec pop nop pop jb call rolb or arpl jle dec sub cmpsl mov sti and insl das mov ret push dec out outsb daa int3 mov pop mov lods dec push clc insl ss call mov sti or add push test iret addr16 loopne ljmp mov je es lcall and int clc rcrb adc clc jg or lods test imul test mov pop push xchg scas push dec sbb dec iret fdivl pop test mov sbbb dec pop mov repnz (bad) in sbb adc lret jae daa (bad) out xlat xchg mov pop iret sbb (bad) jmp adc lea dec sbb xchg outsb loop repnz sahf jp pop xor pop fnstsw dec or or in mov hlt push add inc mov fcmovnbe jp inc dec pop das xchg rcrb sbb shll mov mov jb (bad) rolb enter (bad) movsb cltd (bad) and cmpsl es mov in push adc repz push sti rcrb shl inc fidivrs inc lahf ja sbb out fs or test (bad) into lahf mov sub mov cmpsl mov lret stc mov fidivrl sbb ds out xchg repz push inc cmp and pop paddd scas subl cld lods sub jae push sbb and test fildl mov push leave lods cmp es ret pop pop jae mov mov cmp cmpsl inc orl or (bad) stc adc (bad) xchg orps mov jbe or arpl in adc mov inc and movsb push jp imul xchg xchg (bad) lods das sub xorl pop and jle ja out mov mov dec outsb imul rolb pusha mov pop ja add push rclb cltd je cmpsl iret mov insl loopne insl xchg xchg mov scas xlat mov ret (bad) into into mov rorb lock std sbb sub adc mov mov or outsb imul mov lret stos scas sub out jne les or popf or out mov inc hlt dec push jne imul mov rcr lea popf push orl aaa jnp das jae in mov out jle js sbb mov pop add shrb cmp cltd jmp mov adc rorb lods mov pop and add adc jl imul idivb push popf lods pop and mov push jbe (bad) mov arpl out inc jnp mov shrl pop jb outsl xor jne cmpsb jbe pop or leave (bad) out or faddl push in inc cmp mov pop pop out movsb mov push (bad) rcl into dec jge jge dec mov mov jns std sub jae jbe fsts ret dec jp or scas fisttpl xchg mov in pop in test xchg mov add and xor dec imul inc cmpsb sub xchg xchg inc idiv ret sbb fsts xchg mov add jmp dec ljmp and aad jo ret add ret cmp js or mov sahf jns push mov sti sahf sub (bad) push mov test jbe sub popa jg mov pop xor insl sbb xchg pop xor xchg fsubrl push aas jge mov cmpsl stc js scas mov (bad) jo fildl xchg fprem xor leave xchg ljmp loope cmp outsl (bad) cld test add adc pop data16 push add lret mov or add ret fildll and mov push and outsb data16 (bad) mov mov inc (bad) (bad) enter fsubl mov add mov push leave pushl dec stos sub and pop cmpsb xchg into xchg je,pt jne jle lds sub xchg das fs push repnz push into sbb pusha add pop jo push cmp repz pop mov mov jno push jno inc arpl mov sbb mov stc lret sbb pop out sub jecxz mov pop push in sbb or out rcrl (bad) leave out fidivl enter pop jbe xchg mov xchg aas or mov data16 or ss add outsl clc or out mov pop sbbl adc lret std call in xchg dec sbb xchg cli push and dec add cmp add push popf imul test mov xchg jmp xor inc daa add test std jnp push mov decl inc sti scas popf fiadds test outsl cld addr16 pop or adc pop popa pop loope (bad) call outsb jle xchg mov das jp dec push sub jg test enter or xchg sub movsb ret or cmp rorl sbb and test and rcll andl (bad) cmc dec ret pushf fadd mov mov fs repnz popa inc pop jae cmp jb push cli xchg test mov lcall adc rcl das test add push xchg inc imul mov imul lret push cmpsb cmp in ljmp pushf adc lahf lcall dec sti mov jae pop int bound adc sub filds add xchg add sbb xor mov lds cmp push pop sub mov jbe sbb scas pop call mov fimull pop ffreep rolb jno mov xchg xor repnz imul testl push cmp xor daa and xchg enter jnp popa dec sub clc lds test movsl pop das and inc jp sbb subl inc xchg les jb push into add mov adc dec test out ljmp mov or xchg jl adc mov jns faddl ljmp movsb shl ret inc cmp andl dec push popf out loope out popa ret lods out scas aam mov notl mov mov mov jne out fidivl push add push pop movl mov je push and add mov fwait xchg jns idivl xchg (bad) jb mov jne sbb mov push cmp fisubrl xchg fbstp or dec xchg add rclb push or mov xor movsb pop filds add and mov xchg add cli scas int sbb push mov inc dec pop jns cs sbb shll cs lea incb fiaddl les push cmp cmc fimuls xor jmp and out adc mov or rcrb repz sbb je mov cmp and adcl add aaa (bad) (bad) iret scas jb clc daa dec sbb rolb pop lock shlb jg xchg cmp divl cmp adc popa jno jo fsts add sub mov sbb popf cld testb and cmp lcall jp,pt frstor push repz les mov into clc and lea enter inc (bad) push icebp jp mov jne iret lret push cltd aas sbb out or push decb orb xchg lock lcall xor inc fwait push xchg pop mov dec loopne insl leave jnp xor (bad) cmp test sbb dec adc jmp sti push mov pop push rcrb sahf movsb mov aas (bad) push aam jo mov dec in (bad) aas fistl sbb cmp cmp cmpb and outsb jp cs dec repnz cmp stc mov and mov gs cmc jg jg pop loope mov ss imul aad adc mov subb in imul testl hlt test mov dec dec pop jge ljmp insb cmp mov cs and jne loopne scas nop outsl pushf xchg pop (bad) jge orb xchg int sbb jle adc jne rcrb sub adc mov sbb in mov push mov sbb sbb es mov and repz push addb pop jns push jg aas add nop mov xor pop add cmpl insl inc (bad) lock jmp fidivl leave insl clc scas push fsubrl (bad) (bad) or jnp add (bad) mov jmp rorl (bad) cmp inc pushf out fisubl loop loopne es jecxz shll (bad) gs daa add add sti dec out ds push ficomps jbe js daa rclb mov scas outsl mov cwtl and mov cmp jbe push inc ljmp push lods mov pushf lcall dec jl mov jnp adc in leave out sahf adc mov lods dec ret cs add gs in psraw mov sarl cmp or cltd loope mov and mov fs xchg add pop mov icebp xor ljmp enter ja test test imul push cmp lret rolb arpl xchg xor add add and add fdivp add cmp int3 lds lea pop dec inc adc adc dec das mov test jns dec xchg test or sbb outsb data16 je into in jae or inc hlt and ss add xchg paddusb fwait jge mulb cmc fiadds adc lock adc jae mov (bad) xchg test sub push jmp filds movsb xchg mov test out cmp adc dec dec mov pop (bad) popl cmp lods pop mov or cmp push fs lods stc mov cmpb dec cmp jo dec je add stos clc test js sub rcll inc out dec hlt call mov arpl loopne int3 push cmp and dec ret jno or sbb adc js roll jo fidivl xchg adc pop stos cmpsb add fs jmp arpl and push xchg or cmp jbe inc push jge iret push lret mov cwtl das das fildll aam mov addl sub test jns mov xchg dec pop movsl rclb pop mov (bad) mov inc enter outsb shrb out cmpsl jne sti xchg pop xchg scas jns adc pop mov xchg imul inc jbe scas mov enter adc imul das jne pop cltd push lds in jbe imul pushf mov sti jge adc rorl mov mov lahf popf adc pushf mull lods mov xchg inc cmp mov dec push sub jae std lahf scas insl or sbb (bad) data16 insl mov shrl test orl ljmp add mov push mov sbb out add je sub es fcompl jne cmp hlt xchg cmp xor jecxz push mov inc setae fsub or (bad) jne push jbe mov mov iret cmp and and imul jb repz xor inc lea enter cmp xchg loopne jne sbbb xlat mov ja popa (bad) dec aam push dec sbb call fsts (bad) jg out or push pop sbb dec xor repnz mov push fcompl or nop xchg loope and (bad) loop stos js pop dec cmp (bad) in sbb push xor cmp push adc leave shll test mov pushl imul pop sub mov or push aad shlb jns repz mov sbb (bad) sbb mov into push cmpsb adc ss int xchg int sub loope sub out loope fildl pop jp rorb mov call jg jl repz mov out lret add enter sbb sbb adc cwtl das insl lcall push dec (bad) push fmull and lods xor and int fnsave push shl in les outsb in push fs xor lods test out or push cmp mov push pop mov call sahf lods and out push pushl lods mov mov mov pushf and xchg lods and int dec ja push mov mov jl jl outsl (bad) mov js leave and mov iret push cmp push add jecxz loope mov lahf add push adc test notb xchg es pop mov aaa push sbb lods test (bad) push ja adc sub pop jle or dec pushl push cmp push mov mov mov mov xchg cmp test pop mov mov xlat sbb sub jne add outsl clc adc xchg or jg xor cmc ret xor das cmpsl dec xlat dec mov out mov sar lahf pop mov jecxz imul push sub jbe outsl addr16 or or int jle jg xchg fists insl int insl mov loop std ret xor cmp (bad) test pop in (bad) leave jbe inc outsb xchg mov jmp popf pop div fxch pop subl out xor jecxz repz and mov ja push stos jno orb cmp test pop sbb (bad) sbb (bad) out and pop mov and cmc mov or or into ja (bad) jns andb lahf ja or data16 shl roll cld adc pushf std push ja mov ds fldt push jecxz out out jo das xchg addl aas jp mov mov sub into rol out xchg jno sbb pushf adc lods mov or xchg outsl pop test mov lahf cltd ss xor push mov lret add jbe fisttpll out pop add mov sub cwtl cmpsb ja inc out fisubrl imul or adc push and fmulp mov adc loope add stos jg divl out (bad) (bad) ret mov or nop jg push mov js ja sti xchg daa scas in pop loopne jne hlt adc mov push add xor (bad) mov xorl lea gs add (bad) addr16 (bad) xchg fists push xchg sbb mov and mulb andb incl or dec hlt cmp int3 mov sbb xchg cmp shrb fdivrs shlb xchg leave cwtl das loop outsb inc mov rcrb pop fildl push ds push or cld outsb inc add mov ds pop sub jecxz ror sbb cmp leave xchg or mov mov lea stos loope loopne (bad) mov cld scas bound dec push outsb stos pushf lret add aaa pop test setae add add imull (bad) push mov pop les xchg (bad) ja adc cltd rcrb mov cltd mull clc mov cmpsb xor xchg pop sbb bswap jo leave add test or call dec mov call cmp jns fidivs add mov sbb jne negb out test mov adcl out out divl into repnz cltd stc sub loopne cld adc cmp add inc outsb out ja pop mov pushf adc les jg push insb jecxz cwtl js jbe mov pop data16 andb (bad) mov rcl pop repnz scas aaa aas shl cmp cmp addr16 out pop xor sbb jbe pop gs xchg shll push (bad) es jo imull dec sub mov je test mov adc fildll imul mov stos push dec les xchg jle into push in xchg les andl pop push mov insb stos js pop inc dec loop ret add bound outsb jae insl aad lahf scas mov aad aam push mov aam js fwait push aas nop insl mov xchg mov push xchg je cli push push adc ss dec and push xchg inc pop cmp jl pop mov lcall loopne add in pop mov test sbb psadbw or das fxch mov push dec scas add inc ret sti iret bound (bad) and ss aas int pushf cld lahf ja mov xchg sub stc adc cld cmp jmp jle sbb dec pop es fisubrs sbb std push (bad) (bad) iret (bad) jmp pop dec xor shr clc xor scas outsb in stos mov int3 les mov dec mov je mov shrb jbe leave jo push cmp mov out xchg pop int imul pop jne inc js xor fistpl in mul sarb lcall ret mov xor lret cmpsb repnz xchg pop sbb out push xchg enter test sbb jne (bad) test cmp imul fdivrp (bad) cltd aaa shrl mov cwtl push dec mov lods aas (bad) cmp es insl adc repz (bad) setae dec adc loopne,pt and push fs pushw lods in ja mov push push loop push or dec adc in dec adc rcrb repz popa sbb sbb fcoml inc cmpl push mov insb cmp xchg test fistpl cmp gs lods frstor test or or repnz insl cmp loopne (bad) mov cmp fnop adc not shr sbb pop test add xlat lds incl mov imul clc dec sbb pop outsb cmpsb es jg fdivp inc or lods and in push insl shll roll pop pop push decl test mov mov movsl rcr cmpsl cmp pop sbb adc xchg ja xchg (bad) clc frstor mov aam test outsl addl adc mov std or xchg push mov out lahf jb jnp iret xchg out test out sub test xor loop inc push jae adc popa xor notl dec adc mov add xor imul sbb das roll das xchg lahf pop adc lret cmp mov mov or jl ljmp sbb or sbb in and adc in aas pop and cld out cmpsb pop das les and push pop cmpsb fcoms dec dec in sub cmp aam aas loopne nop hlt lahf icebp out and cmc dec scas fnstsw cmp fistpl jmp xchg ss js inc mov inc push lcall xchg lea mov mov fimuls mov loop sbb repnz pop dec loope push mov sbb fs push adc (bad) lods or sub pop shl xor lods push pop mov sub in pop int3 inc scas cld add pop push xor cmp inc lahf ja lea mov shl scas gs pop call mov in add fsubr (bad) ud2 xchg push xchg sbb jnp (bad) sbb frstor dec mov cmp fiadds dec stos sub mov inc in adc and aas notl add testb stos in hlt pop dec cld cmpsl push dec pop inc inc xchg jp aam sti cwtl inc adc clc arpl mov sbb js in cmpsl imul cmp jg inc inc notl add adc dec fistpll dec mov (bad) lods test sbb test jnp sti sub dec push lods outsb jecxz daa sbb shll push sbb push ljmp shrb int imull xchg xor out bound cmp iret repnz mov lock lds in int pop cmp sub and push or push pop mov sbb add fdivrs push pop ret jne test out mov push jle rol ficompl out ja inc xchg adc and and call pushf out gs outsb test sarb mov push sbb ss dec mov aad ret push pop push decl sahf ficomps inc push ljmp xor lea addl iret outsl mov scas sub pop xchg (bad) stos cs cmpsb das pop std and hlt not imul lock aam jbe imul push mov jle cmc mov loopne mov push loope lea mov out adc xchg popf cmp pusha call popf xor dec stos cltd fldt clc pop popa imul ljmp push out test ljmp or mov int3 lods imul lahf jecxz or repz mov sub outsb mov mov xchg bound push pushf adc loope push cmp out shll mov inc inc es movsl xchg ror mov xchg sbb cmpl adc sbb les mov mov or dec (bad) cld jmp mov mov add fsubs jnp xchg mov xchg and fildll pushf adc add arpl add test bound jno mov (bad) mov pop xchg loopne in ja dec dec icebp enter push mov add cld hlt shrb mov jge hlt call xchg xchg fimuls mov hlt fs into mov lahf iret (bad) idivl xor xor mov dec ret enter sahf les in xchg lock mov mov mov pop es push lea dec shlb adc xor lahf jge xor pop not (bad) cmp adc jecxz mov shrl daa into je or aad stos add mov mov bound repz jns mov mov testb rcrl xor negl jns idivl mov sti iret fildll leave pushf adc mov movsl in xchg bound jno inc adc push sbb dec push cmp shlb scas (bad) outsb add xchg jmp add push nop sbbb ja lods in ret cmpsl add fcompl ret push pushf mov adc lret push mov pop lods (bad) js inc outsb int cltd cmp fisubl sbb push iret js sbb sahf fstps add xchg sub mov arpl sub add inc lea int3 inc insl add inc pop enter mov dec cli xchg movsb icebp mov xor test aas leave or adc int cmp lds add dec shrb cmp pop movl inc mov stos in rep in mov clc lret xchg xor cmp xchg xor sub and jp mov push and pop and and je int in movsl dec (bad) out popa clc mov jp pop pop jae inc xor inc cmp into stos inc add test sahf push sbb fimuls mov mov je sbbl xor out fimull push fidivs jne outsl rorb pop jle lods cmc sahf divl or mov idiv adc fwait cwtl mov add cli outsl in pop inc xor mov jp sub adc dec cs mov and es and (bad) xchg repnz mov cmp push fildl outsb cli outsl adc pop push repz push sahf divl sub (bad) jb aad adc dec cs xchg fbld repnz push (bad) adc cmp (bad) push fistpl add pop jns stos mov clc (bad) (bad) sub adc dec or and add gs sbb in mov gs cmp mov fs inc movsb in enter pop sub loopne jne ljmp or push sbb jecxz outsl dec or rep fistps adc cmpsb add jbe,pn lahf jno xchg gs push dec mov rep sub adc sub jb rclb dec adc sub (bad) leave and in push jne pop cmc pushf jns ja sbb mov xchg xor bound sbb stos notl inc (bad) sub test loope ficompl mov fnstsw mov mov in pop pop and fisubrs pusha pop repz sbb dec push in add lahf mov mov pop sarb sub aaa jae jle pop push ja push jno sub lahf add mov sub fcmovnu xchg xor (bad) push and or flds test pop mulb arpl jge stos xchg in out scas outsl adc push rolb iret aaa cwtl sahf sbb jg leave sub mov adc jnp inc adc sub xor adc loop mov movd adc int3 dec rcll adc cmpl mov imul jae ljmp mov mov mov xor outsl lcall mov test test or cltd add js cwtl imul sbb das or xchg test pushf int gs callw xchg shll lds sub out test mov leave pushf adc (bad) int lret jne int3 push js into jns lock orb sub aad cmpsb ja inc mov sbb jne adc sub inc lods sarb add outsl mov hlt mov (bad) inc or notb es cli out cmc pop pop and push mov push cld call sbb or or adc fwait jecxz cmp jmp mov fcompl ret out and out clc mov xor dec sub mov lret iret or data16 cmc jmp fs fistpl daa push dec das inc jmp insl sbbl pop mov mov cmp sbb loop jne stos les pop outsl ljmp fldt adc sub cs mov rcr shrb (bad) xor cmc sbb (bad) xabort or mov xchg pop fisubl fistpl xlat shr pop rolb gs mov cmpsb ja mov fisubl fistpl js lret mov xchg cmp sub and pop pop xor adc push cmp int fildl push jecxz adc pushf adc jecxz das sbb and rorb cmpsl in repnz clc insl sti jg daa nop aam adc scas mov sbb roll inc js jbe pop cmp lock lahf dec mov lret cmp adc jle jg bound push je gs nop shlb xlat daa add pop inc icebp les movsl push cwtl push and jle adc sbb pop (bad) in sub jbe arpl sbb xor mov cltd int3 sub pop mov sub sbb sbb ret push xor out lea mov pop cmp jae rcrl xchg and mov cltd pop clc jl adc mov jmp mov iret sub adc inc aad inc add leave pop xor movl mov and shll ja dec loopne and pop sarb sbb inc (bad) jae sub stc (bad) mov int3 loopne (bad) pop scas sbb and pop popl pop ja pop neg rclb add dec inc lcall and scas clc pop lcall sbb ficompl xchg and add aam stc sbb and ret add int3 or das mov imul cmpsl in sbb add je dec loope,pn adcl sbb pop xor sahf imul push testl nop mov sub sbb int3 aad adc inc daa testl mov (bad) sub fwait test mov stos in stc cwtl sbb push (bad) push (bad) mov pop cmp xchg push add nop pop cmp fs mov lret sbb xchg (bad) aad xchg sbb clc sbb (bad) pushf pop cmpsb jb filds sbb movsb mov aad lods test clc movb add cmpsb inc mov inc adc int inc outsb pop cmp sub ja adc inc pop cmp in mov sub inc fs test ja mov lret cmp mov rcrb mov int mov (bad) inc push cmp push fistpl xor out notb lcall jg adc ds mov clc jae movsl mov mov pop (bad) mov hlt add xchg mov push dec scas icebp cltd fisttps sub push aas lret pop push fcomp adc lahf push adc fisubrl mov inc int3 mov sub fmul mov imulb int3 dec call popl jb in in rorb xor mov arpl inc cmp and out stc clc cmp ds roll sbb aad daa sbb fsubl jle cld xchg lock mull cmpsb pop fs repnz iret in movsl or xchg arpl xchg ret addr16 leave jmp stc in pop mov (bad) and mov fld1 pop add sarl pop outsb rorb mov in mov divl ret ja sub (bad) cmpsb fisttpl push sti in nop (bad) adc (bad) dec mov test sbb xchg xor mov dec lea aas push stos pop mov jbe out imul clc and add rcr xchg mov (bad) push or out pop mov add push pop div or (bad) xchg sbbl fisubrl jnp lahf add jl movsb add mov sbb icebp xor xor (bad) pcmpgtw cmp mov repz movsb ffreep push and mov in out mov pop ficompl cmpsl lahf add dec mov mov pop rorb and add gs pop add sub xchg int3 test and lods xlat sub mov sbb or mov loopne mov and sar adc es cwtl popa ja in in cs (bad) ja fldenv outsl ds popf rcrb in jo (bad) fs pop jne pushf loop (bad) mov cs (bad) ja inc loopne rolb rcl ret in mov mov rolb mov cmpsl iret adc cmpsb cmc lock fsubl pop sub jp mov ja,pn popa ja fldenv dec pop inc enter insl (bad) gs fcomi sub and mov ja flds push jge mov and test in xchg (bad) add xchg pop fucomip jne stos lods and mov push out shr mov jl mov pushf (bad) cmp mull (bad) cli adc xchg push xor ja jbe rcr mov cmp neg pop lahf (bad) aad jno dec pop js mov (bad) movsl movq loope rcrb add and dec pop mov add fcmovb xchg aaa pop aas in rcl js mov and test out lock pushf mov inc lahf sub and mov pop push xchg mov jae add ja ljmp ja es shlb andb sub decl imul rorb mov loopne inc rclb or clc pusha lea push xchg cs mov ret or (bad) outsl cld dec cmp aad and (bad) in pushf mov ja jbe fisubrl arpl lahf ja push and fwait or outsb adc mov pushf orb jg aas mov stc mov outsl fucomip mov sbb aas sarl ja leave decb mov or popa fbld pop movsl xor sub jg sub cmpsb ja data16 xchg fisttpl push xchg xchg daa iret push or das ljmp aam mov mov popa mov jns pop shlb aad mov sbb ja std mov lods enter push fists sarl data16 std jnp fwait out inc cwtl mov jecxz ss addr16 fxch outsl test pop rcl mov mov adc cmpsb ja fwait mov call lock fcmovnbe lock arpl dec adc outsb jge sub out lahf icebp mov fnsave rol pop int sar in std inc outsb int out jg int enter adc add (bad) cmc fwait rcrb insl mov clc pop or mov adc pushf and xlat xor pop mov inc pop mov aam hlt and das stc dec rcrl push pop out fisubrl cs lds push dec cli lods sti inc out fisubrs in out repnz aas (bad) es out fsubl sqrtps outsl and (bad) dec cmp mov inc out pushf mov add mov fistpl cmp push rcrb inc sbb fwait test test dec mov out jge fstpt jbe jno pop dec in cmpsl cmp testl adc mov lahf ja popa mov mov sbb inc js sti inc fs and cli into adc insl shll xchg stos loopne adc inc push jecxz addl push dec or mov test push jbe outsl cs fbstp sub insl (bad) xlat negb and cld lea fsin outsl data16 cmpsl lock repz sbb idiv (bad) (bad) pop xchg mov jae push adcl push ja cmpsb adc out movsl add xchg jns jg sbb jae nop sbb jo fwait pop movsb int cld dec js daa cs pop cmpsl addr16 popa inc mov iret cmp fs push mov and (bad) fistpl xchg jno xchg es das sub lods pusha push nop push ljmp fcmovne push pop xchg jp mov test dec fldenv clc int3 and pushf push mov imul lahf add xor rorl lods (bad) ds xchg fsubs mov mov mov mov faddl mov sbb xor or fisubrl (bad) dec adc stc iret xchg std pop dec or lock rcrb mov cmp mov rorb ror add mov adc mov insl js add ja xor lds lods scas pop fsubrs sub out fidivl gs loopne test inc outsl xchg in push jg test sbb push jecxz (bad) sub loop mov add inc outsl cmp into sarb pop add pop push out pop push daa cs jns jno scas insl cltd xchg pop shlb sti mov stos sub pushf dec adc mov icebp lcall pop dec (bad) stos cmp mov in out pushf jns add fsubs mov jns sarb popf js notl punpcklbw aas add out jmp adc xchg out adc adc xchg gs xor mov dec push out in arpl xor fistpl mov mov sbb fs subl cmpsb les mov popa mov sub pop shlb push fs cmc ja add nop mov push ja,pt xor mov pop pop sub insb test aas lret dec testb out jl ja cmpsl loopne pop cmp mov stos and (bad) out mov jmp fistpl xchg stc mov mov cmp inc mov adc cwtl and loope jp pop dec jae mov mov inc cmpsb jle loope push fcom cmp and xchg loope in pop out (bad) fcomp fs push mov cwtl fists xlat imul addr16 pop rclb xchg pop clc das push push add out aaa fiadds (bad) adc xchg out mov mov pop divl leave nop (bad) mov adc bound std adc inc jns pop rolb and mov xchg repz leave mov sbbl ja jl cmp sbb aaa dec stos insb lahf je sub int mov pop rcll ds testl mov (bad) imul jl jle inc mov test outsb fldt fs ss push ret ja cli out sub mov xchg fucomip push insb outsb adc loop adc mov lock ret aam push loope mov push push les std test mov sbb cs xchg jmp mov fs sar cmp mov or loopne xchg cmp push push (bad) mov jg in pop xor adc shl pop in cwtl or hlt xor jg and out fs int3 sub scas movsl ja in test or pop lahf adc xchg xchg in and inc mov push rorb inc xor outsl and fisttpl iret gs sti push scas ss subl dec daa mov sbb mov push xor adc shlb (bad) dec sbb mov insl mov jne add mov rolb push sbb outsb out and mov fs push ja into int ja mov fistpl outsl pop js daa icebp lods and pop out push stos cmpsb ja fwait mov out mov xchg lahf push dec aad testl movaps adc push push loopne (bad) out (bad) je in and lods xchg push gs cmc test aas add push dec pop pop test popa leave lcall push xchg out cmpb div lock ja jb outsl loope andnps cmp mov pop jne pushf loop add dec mov test lock xchg sarb pop repnz jne movsb pushf mov ljmp fistpl push push lahf sbbl les push mull mov xor clc or inc add xchg in inc in ljmp clc mov pushf inc imul cmpsl sbb (bad) and pop adcl in test adc adc mov xchg addr16 rcrl sbb dec (bad) (bad) icebp stc pushf adc lods shrb mov dec leave (bad) mov neg out (bad) sti inc jecxz test inc jns or dec jnp lock sbb shrl push cmc push push (bad) not sbb xchg lret xchg mov mov and arpl sub ja pop xor add aam sbb popa shlb dec lock push inc xorb and daa xlat icebp add inc mov xrelease clc mov (bad) outsl shlb inc push imul mov dec imul bt popf dec lret jno subl lds lock lahf ja push loopne loope add mov (bad) push ja ret xchg mov push roll xor shll stos push adc push adc xor cmpsl scas sub ja repz enter or pop pop test sub int3 arpl jno inc push ss ja add outsl fbstp and push gs add pop sub dec mov inc dec ret dec cld xchg fxch outsl mov ret inc xor mull test push in into cmp dec dec pop jge jl ficoms and scas gs push add mov imul pop rclb gs pop inc push imul and imul mov lcall stos mov cmpsb leave or add add fcmovnbe shrb mov lods sub inc add fimull fisubrl mov jno mov rcl stos jbe idivl (bad) (bad) adc mov cmp jno std rclb mov (bad) int3 out fucomip mov sbb pushf and jecxz (bad) push mov adc ret (bad) push jbe ss je jo data16 cld sarl int3 adc cmp sar jl ret sarl gs mov push cmpsb icebp sahf push stc lret iret mov dec jl outsl fists mov adc fcoms mov movsl fisttpl inc aad dec in xlat das dec lods mov movsb ror inc cs lods mov loope pop movsl push sbb xchg lods stc pusha sbb mov xchg mov jns inc clc jg ds pop ret cmpsb cli xchg divb push int3 movsb out data16 (bad) mov xor mov push lret mov js lcall jns shlb add lret and sub insb inc xchg cmpsb ja arpl sbb shr outsl ljmp mov (bad) fstpt jbe lret nop jecxz pop dec int3 xor rcr lret sub sbb popa in sbb pusha arpl stc aam sbb xchg push fiadds push fwait je xchg pop gs xlat dec and movsl dec or mov out imul and out imul or sub out imul mov inc jbe mov jbe popa cmpsw in ds mov flds cmpsb cwtl mov cmpsb lods lahf ja rorb inc dec cmp ja push nop stos push aas es jge jne inc xlat adc movsb mov fwait jno stos jmp mov outsb cs outsb imul stc lret inc mov mov lret xor fisttpl nop (bad) loopne xchg sub out (bad) int xchg fistpl or outsl js stos sbb aas mov xor jnp cmp dec shr mov add jnp pop aas xchg pop pop push mov stc push in fwait pop aam lcall push fidivs mov push cmp (bad) adc addr16 adc inc mov inc imul sbb ljmp adc fcoml ds or icebp and add adc xchg fidivrs mov xor mov popa mov sarb iret jmp sbbb xlat hlt jmp pop jmp scas loopne fidivs or fadds ja adc fcmovbe sbb sbb adc out pop pop cmp mov add dec cmp insl out (bad) dec test mov dec shlb das jnp cmp (bad) (bad) das jg sub or xchg jnp je mov insb lock jge cmc cmp xchg (bad) and cmp inc popa pop movsl xchg mov es ja xor insb xor add xchg fistps lods or add rol jecxz or mov add jmp int3 enter sbb sbb popf daa test pop addr16 imul ds imul and das sub sub cmp pop into ret insb sub gs clc in pop in stos sti jo xchg lret arpl sub in hlt mov loope pop test aad test aad add (bad) mov imul out or add xchg ss ljmp pop aas cmpsl jecxz in lea sbb jle idivl add scas jbe and push xlat int ds pushf pushf adc mov lahf (bad) lods (bad) push mov lods and pop xchg pushf pushf imul cmp xchg adc mov mov jbe fs hlt xor xchg dec sbb dec sub cmpsl mov push aad loop cltd ja out (bad) or mov dec shlb imul (bad) je adc std ss shll imul clc mov dec cmp fistpl cmp sbb ret jbe sub xor jo out xor dec push (bad) mov cmp loope adc and fcmovu lahf stc and arpl lahf adc popl mov pop sbb lret or cs addr16 rorb fbstp pop cmc mov adc pushf or imul inc stos sbb jbe outsl fisttps cmp imul mov pushf adc lea (bad) popa dec mov xor sbb (bad) xchg test cltd xchg mov pop xchg lahf ja mov rcrb adc mov xchg fs (bad) testb in cmc cli mov xor fucomip leave cmp lods pushf in gs mov xchg cmpsb adc mov inc mov test push (bad) cmpsl cld dec mov cld cmp (bad) push imul mov xchg in outsl cmp sbb aam (bad) push mov xor ret aas int3 iret fildll jp add clc inc nop fnstenv jns mov and out mov mov lods mov in push pop mov repz mov add mov fisubs inc in cmpsb jns jecxz add xor mov fistpll cs hlt andl sub xor push dec jno pop ret testl rol outsl jp mov (bad) sub fucomip and sub shll repz xor pop pop push inc jg aad jno fsubrl mov addr16 gs xchg popf mov pushf adc sub mov jmp jns rorl jp or mov sahf pop sub les pop fldl fwait and fiaddl push out andb popa mov (bad) xchg addr16 xor pop sar (bad) das push or sub into sarl test (bad) (bad) cli push stos cli xchg push idivl fucomip sub lahf test pop xchg ss push movsl fstl cvtpi2ps mov clc das pusha lock adc (bad) pop xchg mov push std fidivrl pop test sub mov pop ljmp stc jo lds out dec jo cltd lea ficoml gs jmp or adc or push sbb push xchg dec loope jno jmp inc add adc call mov sub mov jb mulb les loop push pop push xchg and add dec cmp loope cmp xchg cmc inc or mov inc jb mov in fcoml (bad) addr16 sub mov std mov test adc cs int3 inc pop fst mov xchg subb dec push xlat xchg std repnz rclb clc nop cs movb nop leave lods and push or lret out fisubrl mov aad cltd inc imul lods and push mov test push bnd out fisubrl sub test sahf aas jb out ds imul mov fisubrl stos ret push outsl fisubs mov pop and shlb pushf adc jg push sub cld xor jnp rcrb lods push push out fs ds dec into gs call sub in pop xchg xchg int3 and xor or ss adc jge sbb jo or (bad) lds ds fldenv and std mov add lods pop and in pop add jae popf jbe mov leave outsl dec mov push nop jns aas dec pop xor jle mov sub or mov enter in pop or jae mull test sbb push adc (bad) icebp mov sbb in pop les push xorl shlb xor adc xchg fimuls cmpsl sbb xchg push aad and mov push repz pop test movsl rorb popf sbb mov (bad) push scas into adc xchg ficompl cmpsb add lds mov sub adc call shlb pop daa (bad) sub mov test out (bad) pop cmpsl lahf or jl sarb ljmp inc (bad) push jecxz lods cwtl testb inc (bad) mov sahf les inc gs test adcb arpl pop add fs cli sbb push lret mov xor mov adc mov pusha cmc daa popa jg stos lods cmp or mov outsb test xchg gs mov shrb cmp push in gs add mov push push sbb data16 add fists pop call fcmovbe mov xlat push fwait insl loopne and mov aaa arpl andb push adc xor sub mov fistps inc lahf lds nop (bad) cwtl idivb push outsl sarl ret inc xlat and dec jno iret pusha test aas fcoml in sub movl xor cmp mov mov (bad) loope ja pop fiadds push int3 int sub sarb (bad) aam mov fdivs inc enter outsl pushf sahf add jb pushf pop daa ds clc filds mov fiaddl mov sbb shll mov test sub mov mov push and inc loopne test jg push gs js into sbb or insl loopne adc pop dec les mov insl ficomps cwtl cmpsb adc and divb ja xchg dec sbb inc lds imul int push into jg mov enter (bad) pop sub aad fdivrp test xor out pop mov xchg xlat or insl loopne mov push dec xchg mov mov xchg fidivs repz mov pop jbe ja xchg mov fimuls sub sbb imul push das cmpsl xchg out xchg cmpl cli aas js dec sbb push xlat xchg cld inc movsl xor xor arpl push adc imul mov xor mov scas dec inc enter dec fidivrs dec push xchg ljmp xor les inc int3 add subl (bad) mov test repz out cmp or push inc fistps cld sbb fnstsw gs sbb cld sub xor inc pop jmp cs mov mov and int3 push cli clc (bad) pop xlat add add or test adc jo mov add dec hlt or out xor divl dec xor jle mov out je adc xchg push mov pop ffreep iret les lock call (bad) leave loope out daa pop loope pop push pop xor sub adc mov test outsl xlat mov dec rcr sbb jb mov fsubrs xor add inc lahf adc sti clc xchg dec push push popa sbb lahf ds pushf clc and sub or jge in mov outsl fucomip imul mov cmpsb out xlat dec pushf adc arpl and jae out add movsb out shlb and mov xor xor imul or mov xchg jae hlt mov loope pushf xor cmpsb or out inc call repz pop cmp xor test pop cmp imulb mov jle loop repz jmp mov (bad) je adc and sti mov test mov or sbb dec stos stos test (bad) (bad) mov ja adc fiaddl adc push clc (bad) push shl in adc or ja adc fiaddl loope emms jge loopne (bad) in ss divl test lods push mov adc ficompl (bad) fldt out mov test adc popa es stc xchg sub mov push or sbb outsl ds inc adc faddl fwait decl add fldl2e fwait repz into idiv test movsl not out lds loopne cmp mov mov adc jbe outsl jecxz sub test sub ror inc dec push mov fmull notb fiadds ja test lods addr16 lods push popf data16 jbe roll jmp sarb jbe cs xor out shlb push mov add jns movsl mov stos out shlb loope pushw sti mov cmpsb lods mov pop stos frstor rorl pop std rep pop sahf imull clc addr16 sub adc out jo lahf ficompl xor sbb enter sbb adc xor rclb add in sbb fldl (bad) int3 add mov popa loopne xor mull mov subl jae ja adc fisubl add enter mov mul mov (bad) mov jb adc xor fistpl rolb xchg mov in incl in adc gs stos push ja xor fisubrl into (bad) outsl fists in negl int3 clc (bad) ja pushf adc data16 mov xchg addl pop inc adc and (bad) gs cmpsb ja loop fiaddl fidivrs mov sbbb lods push pushf ret push clc (bad) in pushf adc out fiaddl mov into pop cmp xor or add out pop sbb (bad) fldl pop mov and gs cmpsl push ja shr xor fisttpll shl mov mov pushf push adc out ficompl int3 xchg loopne adc sbb pop lods and xchg insl (bad) mov mov mov fisubrl arpl mov enter scas stos mov or jecxz repz ja aas out ficoml add loopne pop pop lods mov and mull cmp push addr16 mov into jo fbld mov inc jge push sub clc popa push sub insb fisubrs mov sub filds leave maskmovq mull inc adc cmpsb ja test and decb lahf ja dec mov int daa call mov push xchg mov mov xchg mov fldt imul scas cmpsb ja hlt out fisubrl and lahf enter outsl sub jbe fsubl sub into sbbb fistpl out bound rcrb iret inc mov nop pop sub and loopne,pn shlb dec push fucomip add sbb cltd xchg push push lahf mov out sarb pop push outsl fistpll pop mov icebp and dec dec sub iret sub sub inc outsl fistps rcrb iret and movb mov mov sbb rcrb mov mov mov rcl inc sub (bad) arpl lahf inc dec xchg loope in pop pop push mov dec or lea pushf cs es lahf (bad) loop dec sbb enter inc pushf adc in fisubrl cmp ja dec loopne mov sub aaa sub pop leave (bad) jmp ja in pop xor loopne lahf ja jecxz out in stos sbb iret and mov sub out fisubrl arpl lahf pop es xchg mov inc cwtl movsb cmpl pop cmpsb ja adc xchg pop mov xchg and in std out (bad) and adc cmpsb ja pop pop xor mov push and es lods sbb mov cmpsb ja inc out ficompl add or push inc cmpsb call cmp mov adc out add cmp outsl fistpll jae and outsl push imul add js sbb test or cmpsb jl adc mov xchg scas jbe push xor out mov test sub xchg cs jmp ja mov call es push sti push adc fsubl (bad) fcmovnb xchg xchg or lods fstpl gs (bad) push testl fldt push fucomip stos jnp lods cmp mull js push adc and ret iret sbb aad lods and xchg mov (bad) push add pop out and icebp push mov mov push ja push out fiaddl pop xchg ret cmp pop outsb add gs push lock popa cmpsb ja out fcmovu insl fistpl cmpsl cs pop test in gs push push ja imul xchg stos xchg cld jno xor add adc xchg bound (bad) ja or pop iret fisubrl loopne out frstor pop shr iret lds gs pop push ja pop push test (bad) or xchg mov sbb xchg push and push lahf ja cmp outsl fbstp jb testl mov mov sub dec rcrb jne sub dec int3 and out inc cs test outsl fistpll pop mov and cmp pop mov lea add pop mov (bad) and test or mov addb mov mov mov mov fs push push ja in test mov in ret jne mov xor movsl jns mov out fiaddl pop fistpl jns in loope sbb adc (bad) pop dec pushf cmp sbb movb lahf xchg in loop aaa sbb enter dec pushf adc add mov sub loopne scas insb mov mov dec pusha mov adc mov leave imul pop pop sarb cmp jmp cmpsb ja adc lcall popa loopne adc loope xor mull clc (bad) ja mov mov ficompl imul cmp movsl sbb (bad) rcrb and mov push gs fwait out push addb loopne fsubr pop inc iret movsb fldenv gs (bad) push adc out pop cmp xchg lock gs add pop mov xchg pop push mull sbb adc mov xchg mov fwait clc mov mov adc aaa push adc out inc cs mov push outsl fistpll pop mov sub mov aad adc sbb lahf ja xchg in pop dec fisubrl notb cmpsb iret mov inc jbe ja out outsl in push xchg mov gs adc out inc cs pop ja inc xchg cltd orl mov jmp pushf outsb cmp lahf ja loopne,pn cmp mov sbb and (bad) push rcl adc jge mov pop test lahf mov sbb mov (bad) dec mov adc out inc cs test shlb dec pop lods jmp mull pop (bad) push std mov pop lods push push leave stos loopne pop out sarb xchg clc (bad) sarl stos std fisubrs ja out rcr sbb sbb repz mov inc add pop mov adc lahf push fucomip fcompl jbe push ljmp aad call movsb add inc mov inc rcrb iret and inc fs pop jnp pushf jns mov out fimull xchg fistpl push fucomip xchg pusha sbb mov mov adc (bad) inc ficoms mov xchg rcrb iret and and hlt sub icebp adcl pop dec cmc pmaddwd shlb lock jbe cmpsb gs push fists adc mov ja int3 xchg outsl (bad) iret rcrb push jo negl ss adc adc out fisubl icebp pop rolb shrl pop mov dec ja jge cmp mov mov popa loopne int3 jne shrb and cmc push ja adc and mov xchg outsl (bad) ret fstpl lods aas and gs (bad) push xor out lods fdivrl xchg adc adc dec pop int3 xchg xor pushf jns icebp adc out fisubrl cmp sahf rcr in or sbb (bad) cwtl int3 pushf adc push scas je fildl xchg xchg mov add sub mov (bad) out fisubl (bad) sub mov rcrb dec push mov fisubrs sub aaa fisubrl pushf inc pop stos or mov fists sub mull xchg (bad) push jb adc nop add jbe cli cmpsl xchg idivb add xchg sub shll scas mov xchg xor cwtl push adc fdivrl ja adc pop int3 mov xchg outsl jecxz mov mov aam or mov dec ficoml mov clc test lods clc push mull pop (bad) push or call shll ja xchg out lods and inc test mov imul fisttpl add mov sbb in nop push cmp pushf in divb addr16 jne add push cmpsb jl xchg cwtl or clc (bad) out sub int add add push loope,pt adc mov mov clc rcr push pushf pushl popa push cmpsl push adc cmp out inc xor pop push test int es pop cmp and jbe fstpt xor sahf stc sub sbb adc loope lcall cli sahf xchg pusha flds jo and sbb adc pop ds or adc lahf mov lods pop daa add mull icebp in movsl iret inc pushf cmp xlat cmp add loop movsb mov (bad) adc pop add bound sub pop insl (bad) pop add (bad) aas jno nop mov lock xchg jle xchg lea inc jns addr16 mov cmpsl imul test mov cmpsl sbb inc xchg lea mov (bad) in mov lahf jae xchg loopne fistpl add xor or mov push ja xchg iret (bad) lock and incl mov call jne addps out or mov mov jbe jmp gs (bad) jmp pushf adc out fisubrl mov xor sub out fisubrl mov xchg outsl fucomip pop rcrb lods and (bad) push dec push or loopne,pt in sbb and sbb mov mov mov mov loope out jp repnz mov ljmp adc cli fists and mov jmp je lahf pop jno mov inc icebp or xlat les add int mov inc jg and lods pop dec or adc scas std mov pop dec and jge scas outsb mov pushf xchg imul repz or push pop hlt xchg fcomps clc xchg xchg aaa cmpsl icebp adc ja inc lret call dec add aas xor push daa int cmp mov retw (bad) in mov xor scas loopne mov cltd idivl or fmulp add test mov mov push sub sbbl cmp repz outsl iret mov inc jg ja push pushf sbb inc push lcall mov enter (bad) lret cmp mov call movsb cmp pop mov imull pop addb cmp jno pop adc add mov outsb add adc repnz in cld push adc shl jmp loop xor sub cltd xor rclb push pop test and xor aam movsl movsl lods xchg icebp adc ror ds es testb mov xor push xorb orb xchg out mov and out jp mov jb sub xor orl cmp pop cltd and mov adc cmp out out pop rorb and das xor cmp pop push subb sbb jle shll pop jne in ja jo dec fwait sub or add mov cltd outsb sbb iret sbb (bad) popa cmp pop push lea test negb fisubrl sbb shrl (bad) jp icebp jbe js inc lea and mov (bad) sti icebp and add das xor insl mov push stos fnsave mov icebp add hlt sub stc out and mov lods dec test iret div pop sbb push xor pop jp adc inc lahf add dec xchg xchg inc sbb mov sbbb xor and and sub push lods adc xchg jno in xor imul std in inc and sahf adc out push jecxz (bad) shlb dec cmp test sub mov aam sub loop fldcw sarb jb sub daa xor pop setno sub mov mov inc sub sub mov je adc sub cwtl cmp add test sub lods bound sbb or (bad) fisubs arpl daa mov mov mov or sub jg sbbb repz enter loopne mov push ret inc sub cld daa sub ja mov add sub dec idivb std mov mov outsl jo sub or stc or lds lds sub push and iret imul rclb in dec xchg sti mov popf jae outsb subb (bad) (bad) jne pop push xor push dec pop jno sub cltd mov (bad) ret add mov sub testb xor push test sub xchg inc jne xor or jecxz jl sub ss mov into stos iret push xchg sub sbb jno mov inc fyl2x adc xor xor rcll sub rcrl iret xor leave sub sub mov scas mov sarb jp mov sub (bad) push jecxz dec rcr push fsubrl add js subb loopne (bad) sub test and stc inc lds sub mov aad sub popf jbe ret mov dec das pusha fmuls or insl in clc mov rcrb push jle fwait xchg xor int3 mov push fisubrs cltd lret dec cmp push es aam fisubrs fs cmp (bad) sub jl xchg sub pop add pop push shrl out jne inc inc sbb cltd mov ret lcall fwait pusha and sub xor jge sub and sub push and mov pop jno sub shrb jo sbb cmp scas cs and std aas adc mov mov push dec out xchg sub push jo mov adc sub div xor jb into stc push inc dec mov insl push or nop into sub push jnp jo cltd sub cltd dec or mov push (bad) or sub out gs sbb sub ficompl andb jo jp xor call fildll and iret filds sub in mov cli push enter cmp sub cmp test pusha cmpsl loop jno sub mov push mov fcoml (bad) in pop adc sub xchg add cmpsl lods pusha ja add fwait js xchg das fmuls and inc pop idiv jne cmp jae sub add cld mov dec sub ja jg sub and or movsb lahf arpl imul fisubrs enter adc jge mov repz inc cmpsl sub dec mov pop sub rcl fsubrs popf inc mov sub jns popa int3 loop lods sub arpl test jo xor cmp pop sub cltd pop cli mov ds aaa mov insl cmp filds je stos bound dec add jb ds sub shlb and lds mov or scas jmp dec dec lds adc sub dec (bad) or shrb test mov int ss pop mov mov jl jle pop sub repz or sub and sub lods insb pop repnz dec jns push mov inc sub enter sub lea jo jne out fldcw pop mov mov sti ds rorb jmp sbb outsl int3 jg sub enter push shll sub addr16 jle stc mov sub jge push fsubrl mov in jp mov jge les xor cmp push push sub xor and sub xor ss mov push ss push sub mov decb xor mov sub stc and cmc in and jmp and or jge xor loop push and sub repnz and push mov mov or loop (bad) jl sub mov mov mov sub sub xor mov loop xchg xor xor ss lret mov sub and icebp inc ds icebp stos xor test sbb sub mov aam aam aam aam aam aam aam aam and sub sub sub sub jnp lahf cltd mov jae sub insb leave ds xchg leave sub lahf xor aaa push jp js cs lahf push call jge in push (bad) push call sub sub sub sub sub sub and and and and and and and and aam sub sub sub sub sub sub sub sub and and and sub test test sub or outsl jbe push cltd insl xchg sub test dec sub adc sub rcr (bad) (bad) rorl and add jge es (bad) push popf and out call sub jo xor lods sub nop ficoml in int3 or sub xor xor rorl cltd xchg int3 push sbb inc (bad) jecxz sub out incl adc mov sub mov sub mov or syscall dec sub aas cmp repnz subb adc sub test jmp xchg or jb sub stos ljmp rcrb sub outsb lods insb imul pop sahf lcall dec js stc mov sub orl icebp cmc mov sub mov pop dec pop pop sub dec inc push or sub or inc sub pop dec inc dec inc dec pop sub pop inc pop inc sub add inc pop dec sub sbb or dec inc inc dec dec pop pop jge dec pop pop inc inc inc push movntps daa or pop pop pop fs inc dec inc hlt sub sub sub pop sub cs dec dec pop pop inc pop stos push fldcw cmp pop jge sub inc pop inc inc sbb dec pop jmp les push pop lods and pop dec inc das or or sub inc inc dec pop ud2 lods pop inc push dec dec pop std and dec unpckhps adc cs sub cmc sub add imul sub push outsl (bad) jne test sub sub aam aam aam aam aam aam aam aam aam sub sub sub sub sub sub sub sub aam aam aam aam aam aam aam aam sub sub sub xor sbb sbb loopne das sbb sbb inc sbb test mov sub enter sub sbb mov (bad) sbb jle jecxz sub sbb sbb je sub sahf sbb sbb cli pop enter xor sbb push sbb sub inc push push push (bad) push sub fstpl aam sub sbb sub call or push sbb sbb adc std push test sub dec push sub mov test sub push leave push (bad) push and adc lods and sub sbb cld sbb and sbb sbb mov mov sbbb sbb sub inc pop pop pop sub lods sbb lea cs cmp xor sub sbb push sbb insl push jno dec push sbbb lahf sbb sbb sbb pop sub or sbb or sbb dec sbb stos pop mov pop sub in sbb sbb lret pop ret pop and or or push jge jp and sub push test movsb sbb sbb xlat push sub sub pop sbb (bad) sbb das aas frstor mov sub xchg sbb sbb ret sbb sbb adc sub out adc adc adc gs adc adc adc out std adc adc adc ds or sub adc adc loope fsts and push push sub adc jge js sub pop push push push sub adc push hlt push ficoml sub adc pop xor or sub dec adc sub xchg (bad) pop fcoml sub pop adc and jno push push mov mov mov cwtl adc in push loop les rclb sub movlps sub adc sub mov popf adc lock push adc adc arpl js jo sub pop adc adc adc mov sbb sub sbb nopl imul sbb sub inc sbb sbb sbb xchg sbb sbb ret sbb sbb sbb or sbb add push sbb dec sbb pop sbb sbb push sbb sbb cmp or sub sbb pop sbb sub mov fcomps (bad) sbb sbb sbb push push adc js sub sub sub sub sub sub sub sub sub add sbb iret addr16 push adc fstl scas fstps jp sbb pop scas jg repnz ror dec push push adc push mov mov nop nop nop shll lds xor sahf aam sub xchg xchg les imull mov sub push push push push mov mov add mov add mov mov sub sub jne xor xor mov mov add add nop mov dec dec mov cmp cld dec inc add mov nop jne cmp push sub pop push push push mov pop pop pop or inc dec push push jno cmp pop pop jb jnp sub jno push inc pop jo push cmp pop or jp push or pop cmp add push mov pop lea stc and mov push cltd pop push xchg pop cmp push push or pop pop push jb add pop cmp stc cmc js push push cmp pop pop push add ror test push sub pop push push sub pop pop push std cld pop cmp push test pop stc mov mov mov push mov pop push xor pop cmp sub push push rol pop pop add push add jo push or pop jno rol je jnp or test push jbe sub pop push or pop cld cld mov stc and cld mov nop add xor mov nop add push push cld and cld mov mov add mov xor mov shl nop shl nop shl nop add mov shl jo push push push add pop pop sub jge push xchg xchg pop push xor pop push push jns add pop pop push push test pop pop and jl cld push mov pop add je rol push push and pop pop cmp cld add add push xor pop push push sub pop pop push xor pop test jae and rol jbe ja and ja push jb sub pop jns and push and pop jp push or pop jge push or pop cmc lea mov and test jne pop push push jg sub pop pop add cmc nop pop cmp je inc inc inc inc inc cmp jne mov push dec pop jbe push push test pop pop cmc nop add xor mov mov push jbe push shr pop pop lea and add or push add pop mov nop add mov pop pop pop pop leave ret push mov push push push mov nop mov mov test nop je mov jg test push pop inc dec rol stc mov nop inc rol jbe push or pop and inc nop dec nop test nop jne pop pop pop leave ret movsb and mov and test inc add and in inc add inc add and mov and lock shlb add inc add and cld and mov and enter cwtl and fsubl inc add nop nop nop nop nop nop mov push subl decl xor subl incl incl mov nop nop shrl xor mov mov xor inc cmp jb pop lea dec mov jo push test pop push jo cld pop push mov push mov push mov push call mov mov mov dec dec add mov movl addl xor push shl pop rol xor push lea push push nop push nop pushl nop xor ret mov add mov mov call mov call add jno je push jns cmc pop nop clc push push push push push push push push pushl push call lea push dec inc lea xor std cld test cmc clc mov mov push call or jl mov mov mov add test or push jbe shl pop cmp or mov mov push pushl mov call cmp jge mov add mov jae jnp push push pop pop jle ror mov mov mov ja push push pop pop push dec pop and cmc stc mov mov mov push push lea push ja push push add pop pop cmc sub push lea push mov push push pushl ret test jge mov mov mov add mov lea push push cld push jle push test pop pop add lea push mov push mov push call test jl push mov inc mov push mov push mov push mov push mov call test jl movl jmp mov add mov mov movzwl cmp jae mov push rol pop and or cld mov jle push test pop ror push dec pop clc mov nop imul add nop lea nop mov mov mov inc add mov mov mov nop nop lea push mov push mov add push mov push mov push mov call jmp mov mov add mov lea push mov push mov call test jl pushl mov mov push mov push mov push mov call test je jle push push add pop push push mov pop pop mov push push ret or jnp jo ror stc stc push call ret push mov sub movl mov call xor lea add push pushl pushl pushl pushl push mov call leave ret push push add jle jns or push or pop jo ror test push sub pop add rol push push rol pop pop je jp je push cltd pop call subl jne pop xor ret
 mov test je cmp je cmp je cmp je cmp je jmp jmp ret mov mull test ja cmp jbe mov ret mov mov xor ret cmpl jne call pushl call int3 push mov pushl pushl call test jne pop ret push push call mov test je pushl pushl call mov add and jbe cmp jae dec movzwl lea jne cmp jb xor jmp mov neg sbb and pop pop ret mov shr inc movzwl push push pushl call test jne ret pushl push pushl call add ret lea or lock dec test jg mov mov push mov call ret push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push push push push push push push push push push push push push push push push pop ret push mov push mov mov push push push movl mov mov imul cmp jbe mov add sub cmp jne cmp jbe add sub mov movzbl lea add cmp mov je add sub jmp add add lea cmp jb mov add sub add decl jne mov mov mov lea mov mov lea sub sub add mov inc mov mov cmp je cmp je add add sub mov jmp movzbl movzwl sub add jmp movzbl lea mov lea mov mov imul mov sub lea push push pushl mov pushl call mov lea add movzwl pop pop pop leave ret push mov sub push movl mov sub sub mov lea add dec sub add mov not mov push pushl mov call pop pop movl jmp mov add mov cmpl jge movzbl movzbl cmp jne jmp movzbl imul mov sub mov cmpl jne jmp movzbl add cmp je movzbl movzbl lea mov jmp movzbl movzbl lea mov movzbl movzbl cmp jne jmp movzbl imul mov sub mov jmp mov add movzwl sub mov movl jmp mov sub mov cmpl jle movzwl imul cmp jle movzwl movzbl lea mov movzwl cmp jne movzwl imul cmp jle movzwl movzbl lea mov movzwl mov lea mov movzwl movzwl cmp jne movzwl add cmp je movzwl movzbl lea mov jmp movzwl movzbl lea mov movzwl mov lea cmp jb movzwl mov lea movzwl add mov jmp mov sub mov movzbl add cmp je movzbl movzbl lea mov jmp movzbl movzbl lea mov movzbl mov lea mov mov mov mov movzbl add cmp je movzbl movzbl lea mov jmp movzbl movzbl lea mov mov imul mov sub mov mov add mov mov add movzwl sub mov movzbl mov lea mov mov xor jmp mov pop leave ret sub push push push push push push call mov mov movl sub mov movl mov mov dec mov add sub movzbl add cmp jne mov add add mov mov mov mov incl test mov mov jne mov movzwl cmp je cmp je mov add add sub mov mov jmp movzbw sub jmp movzbw add add add mov mov mov mov jmp mov movzwl mov imul cmp jle add sub mov mov imul movzbl add lea cmp jne movzbw imul mov sub mov call mov mov movzbl movzwl lea cmp jne movzbw imul mov sub mov movzwl lea mov cmp jne mov imul sub mov mov dec jne push push call movzbl pop pop movzwl pop pop add cmp pop pop jne call mov add ret sub movzbw mov push push mov mov movzwl push xor push mov mov mov movl mov imul cmp jbe mov add sub mov mov movzbl lea movzbw add lea mov sub add cmp mov mov jne imul sub mov jmp mov mov add add add movzwl movzbl lea cmp mov jne mov movzbw imul sub mov add decl mov jne pop pop pop mov pop add ret push mov push call test je push call test jne push call push pushl mov call mov pushl push push call pushl push push call pushl call push call test je push pushl call cmpl mov jne mov sbb push dec xchg cmc push or mov add add test add add insb je lcall fsubp (bad) add add or stc in and and add add add or or and add add add test add add add aaa inc push das stos xchg popf aad mov loope push add add pop mov add add sbb mov sbb icebp add add add add add add or add call out mov test pushf or mov lods (bad) incl add add mov mov add adc pop sub ret pop inc mov outsb mov add and mov cs sti sbb das mov and and or dec add add add add add loope call and cld push xor (bad) jb popf sbb add add xchg and jne lea test push mul out bound lea jne jne add push fwait addb add push mov push ds pop add add push add rorb mov cmp dec fwait mov addr16 push push push push lea lea push fcom xor add add js ds sub push mov mov add add add pop lods push inc addl inc add add (bad) lcall jmp stos mov cmpsl lahf sub addr16 xchg mov mov jmp add shll clc push (bad) aam lea test inc add pop adc sti push call cmp je push push mov call jmp push push pushl call mov mov cmp jne push call mov mov test je mov xor cmp sete push call cmp jne cmp jne vmwrite (bad) xcrypt-ecb cmpsl lret (bad) lcall jle (bad) call test xlat popa fisubrl cmpsl cmp mov mov pushf test rolb cmp int3 int3 dec rorl mov cmpsl pop xlat and int3 int3 call dec daa push dec cltd mov call jne add add add scas add add cmp fwait jp lods inc nop xchg mov sbb jge out insb adc mov ret mov add add jne jne mov add (bad) pop and (bad) fcompl lods jne add add add add and lcall ficomps (bad) (bad) cmp incl xorl mov rorb fs mov imul add and pop and and pushf rcl jb pop dec lret rol push add add cmp dec mov movsb (bad) push add jge add mov add xchg add add jne mov jp dec mov dec pop mov or push jmp stos jl ja ja mov push adc dec insb jmp ss or add mov mov jne jne push dec ss add add push push sub mov inc mov lcall (bad) (bad) (bad) (bad) incl addl pushf in ja,pn or or add in dec xor mov add add add insl add add jle lcall jp mov jl sbb stc xchg add add add je call inc add adc test jne push pushl call pushl mov call test jne xor mov test jne cmpw je cmpl jne push push call repnz add add mov or jno cwtl add test add mov flds add add add loop add add add adc js push lods pop inc (bad) mov pop test and add add jmp (bad) mov mov pop lds jne jne loope hlt mov mov shlb inc inc inc inc add add mov jne fnstenv jne add dec mov cld bound xchg insl cld jg in icebp add add repz add add iret cld lds sub add add mov add sbb add ret add jne jne lea push shl add movsl (bad) mov mov lea jne jne add inc inc inc or cwtl subl mov ficoml inc inc add data16 pop pop cmp mov add mov and insb mov pop das imul and adc mov cmp je xor inc call mov mov xor inc jmp push call push push push pushl push push push push call pushl call cmp je push lea push push pushl push call push call test jne movl jmp push pop call mov cmp jl mov push cmp inc loopne inc rorb push sub rol rclb rolb add add mov add fsubr (bad) mov dec popa mov rorb lea sbb add test les popf aam repz lods movl jne adc (bad) (bad) (bad) (bad) fcmovne pop test in add add push push sub adc es es push inc inc inc inc (bad) (bad) inc mov call inc or inc inc inc add add js pop cmp test add xchg adc fiadds fcmovnu inc pop xchg sub add addl rcr push cwtl mov adc lea sahf into insl lea call enter mov ja xchg sub lods loopne hlt imulb imul ja add add add add add add xor mov or add inc inc mov clc adc push xlat dec push pop inc inc inc inc mov mov mov mov adc daa jge mov clc xor jl movsl xor call mov call lea add outsl mov sub and add push push push ja pop iret int3 ja ja mov call call mov push push xchg mov shlb mov add add lea inc popf dec or pop aas fildl push dec add icebp (bad) pop stos popa xchg daa cmpsl add addl addl add add addl fcompl adcb mov mov shrl stc sti and lea mov jne jne add rolb pop pop femms add inc movsb add add mov cmpsb cmovbe sbb dec ret dec add add fstpt test mov call add roll int add enter pusha clc cmp sbb add cmp add add or mov sbb inc add inc incl add jge call mov inc push movups push mov je or mov sbb push mov adc decl inc add mov push add pop incl add xor add mov inc outsb jne add add jne add xor call (bad) (bad) call scas jo push push add add dec jg out (bad) dec sub or add (bad) mov sbb sahf cmp call pop (bad) (bad) (bad) jge lea jge aas jo inc push icebp xchg pop aas aam xchg (bad) cli add (bad) (bad) dec xchg (bad) decl (bad) (bad) (bad) jmp shll mov mov movsl cltd data16 (bad) (bad) (bad) (bad) (bad) incl add and add add inc add add jae add add jmp repnz xchg out push xorl (bad) (bad) (bad) dec dec cs int3 int3 int3 and or in add js add add pop mov add mov rol xchg mov add add (bad) pushl (bad) in into fdivr mov lcall push and ret ss incl adc add add out or inc ja pop cmp sahf addl loope jne jne mov add rcr add call add inc vmread test aad loop addb mov or out add inc inc inc inc inc (bad) (bad) mov add add loopne mov sahf nop in dec sub add xor scas dec xchg sbb or add jne jne push cmp clc push push push push add add in scas xchg enter imul repnz mov and cmp cmp addl inc cwtl pop and lahf jle pop or incb add add (bad) incl dec out (bad) (bad) incl inc mov inc inc ja cwtl and ja lea mov jmp scas pusha adc push lock adc adc add sbb add add ss cmp add data16 lahf (bad) cmc das loope dec int cmpsb sbb sbbl (bad) (bad) incl addl mov inc sti jge xchg gs in das jmp pop ds cwtl jmp or add int3 ja mov lods push mov jl pushf pop pusha sub ja jne mull adc jne jne add add add add je (bad) clc ud0 adc pop add jge adc dec add add pop add adc test xor dec add add test mov inc or addl test push add xchg add add rolb push loope pop cvtps2pi mov inc push add mov clc inc (bad) loopne ret addb incl inc test clts add add add add push js outsb popf cmc jns data16 jecxz lahf inc add int3 int3 int3 int3 (bad) (bad) ljmp add cmc xchg and out popa pop mov outsl add mov aad jg xchg dec fwait xchg mov aas stc fmuls inc mov add std mov add add (bad) fbld fldcw scas or mov xchg gs fisttpll int mov call lea outsl sbb aaa sbb lea add add add add add xchg popl inc inc add shrl iret add xchg fistpl and push add lcall push jb ljmp out mov inc lahf daa mov xlat cmp test add (bad) (bad) shld add add add in xchg add add jne ljmp push ret arpl add aam (bad) jne add add jne inc and or ret xlat pop push jne jne mov mov add add and add ret or lret xchg inc or jno pushf add jne jne jne int3 push jns int3 int3 add add mov push push pop negb cld insl ret jne pop stc aam call aad out jne jne jne stos jl jne jne test cmp sub sbb inc add into sub and add add movsb add jne jne lea in imul xor outsb lea add aad jecxz inc inc inc (bad) (bad) ljmp pop (bad) dec aaa push inc int3 int3 int3 int3 add or xchg sbb pop fadds add add add xor add add loopne cmp fdivrp add call mov addl add rclb adc mov incl scas rcrl decl call inc push incl add inc leave pop push jmp jno clc add clc addl add or adc psubsb sbb xlat mov (bad) repnz loop roll inc jne pinsrw test adc dec dec jne ret and push mov inc int test mov mov dec test ja ja add xchg mov add addl mov mov scas mov lods xchg fcmovb mov dec push mov ja ja add pop stos fimuls pop sbb loop add add or outsl clc cmpsb or or (bad) cmp add add (bad) (bad) (bad) incl add (bad) cld (bad) mov cmpsb cmp mov push test mov jne jne xchg pop nop inc cmp jns loop and mov jmp pop push and mov popa lock (bad) (bad) jnp mov sub lret mov int3 mov push push aas sbb call and and stos mov pop std sbb in scas outsb and add add add push add jne aaa jne mov orl sub aas aas cmpsb test mov mov (bad) (bad) (bad) pushl inc mov clc out add xchg in add add pop inc out jae add inc lds jne jne jne inc inc mov int3 int3 int3 int3 int3 (bad) jmp xor (bad) decl lds fimull test xchg and mov js movsl (bad) (bad) (bad) pushl xor dec decb and scas mov ja add scas movb add add std out sub jne jne jne add cmpb pop cltd mov jns cltd push fmuls mov add add add gs mov call add adc lods push lods xlat inc outsb add add (bad) pop cmp je je add aam add rclb incl inc push adc adc add push inc push dec (bad) fisttps ret add mov add mov mov or pop jo push and add push or incl (bad) jmp add je aam (bad) (bad) decb mov movsl sub dec daa add sbb pop and dec push or or mov add add add add cmp dec sti xchg jae ds adc add call add add or or or add idivb add add or add sub loope xchg stc jle xchg dec sbb or or or fwait or or pop std xchg mov ljmp imul (bad) (bad) call pop mov mov out (bad) (bad) (bad) (bad) (bad) (bad) call es add add mov mov leave sub inc ja test xchg jne push out in jge inc mov add dec xchg into int3 push xor dec jmp jmp mov ljmp adc btr sldt add add repz xor xchg cli mov and add add add add ficoml push xchg ret sub imul and mov add mov add add xchg xor add mov jnp shll sbb test add inc push negb push enter jge addl add (bad) call push (bad) add add xchg call mov je jge inc incl push push add lock push out xor mov mov pop dec sbbl push add je adc add or or add dec pop or cld test inc int3 add add add dec cmpl rol add jmp mov push pop mov add add add sub jbe add add add dec rolb add int3 pop jne jne add clc or es je sbb add insb push push jmp mov sbb lea add add lcall mov arpl add lea lea call (bad) (bad) decb (bad) cvttps2pi ficoml insb xchg cmpsb test adc xchg push mov dec (bad) (bad) je fadds add add pop inc pop nop jg cmp incl jb lea mov add add hlt add (bad) (bad) (bad) incl add xchg jnp mov rcll jbe push pop or add jne jne jne add add add xchg ret cmp or push (bad) (bad) mov mov and push jle and and lea aam lea dec mov add mov xchg movb sbb lock add add jno xor add add add add sbb dec scas dec cwtl fwait hlt pop inc sbb jnp mov add add add add mov add add add mov cmp and dec jo std pop fsubr enter add add add mov icebp (bad) sbb mov add mov orl push or add inc incl add (bad) call inc add inc mov add mov add add xchg stc sub addl roll psubd or idiv mov push mov cmp (bad) cmp pop aad mov push mov cmp mov into adc add (bad) incl (bad) (bad) incl add fs pop sbb sbb test ss std jno ja add cmp inc mov cmpsb es cmp inc fistpll (bad) (bad) ud0 xlat xor lcall add add add popa add (bad) (bad) (bad) ud0 decl aam mov inc xor stc inc sarl mov addl dec add add add sbb lahf xchg dec add mov add jne adc add fbld sub shll add sbbl dec addl add cwtl or popa or out adc mov pop add aam add add insb out add das es fnstenv (bad) cmc jp mov add add add movlhps mov lea lea pop cmp ljmp lret mov or int3 int3 int3 movntq test jno (bad) mov mov add andb and mov call add rep add mov addl inc jge cmp mov cmp ret pop push pop pop push push mov push clc orl add inc out push add cmp pusha incl decl faddl dec lods mov inc sti inc call (bad) or hlt ret jb call dec mov lock add test push sar call jg fnsave incl popf add clc incl (bad) (bad) incl mov lea sub stos push cmp rorb mov cli lea add add inc push incl pop in movsl add nop xchg inc inc inc inc add and add add cmpsl push add add jge das add (bad) (bad) (bad) incl add dec cli hlt adc lret je cmpsl mov (bad) in cmp scas inc mov add add (bad) push je (bad) incl add rcrl or add add push sbb aam xchg xchg push sahf mov push mov jmp bswap (bad) (bad) (bad) (bad) (bad) test dec mov pop int mov fists mov or mov (bad) call movlhps pop filds iret mov add add (bad) incl cmpl (bad) (bad) incl add lahf stos add jne cmp jne jne cmovs stos jecxz jge (bad) xchg (bad) cli cmp add sub add jge jp and inc inc inc inc pop data16 fcompl stc movsl mov and add add add add add add add lea push push les inc stc lret ja mov data16 int3 call call sahf sbb movsb fsubrp std sub addl add mov add add call (bad) (bad) (bad) (bad) incl add testl jle or loop add add add add and mov roll stos mov mov mov mov cltd into cmpsb xor add popf insl call test add add add roll add add mov sub daa or aad cmp cmp call call (bad) and and mov mov popa neg xlat fwait and and add add rol testl ja add inc pop add add add jbe decl ret xchg inc inc test add sbb addl jne incl orl add add call incl push inc decl pushl add jmp mov xor jns movsb add shlb cld call xor (bad) lret inc add shrl nop add test incw adc adc test inc mov out out incl enter por jl add decl jmp add xor call jae addr16 sbb xor flds add add adc add add out testb rorb pop icebp popa mov add jg push or mov xor aas int add add add call call (bad) ljmp cmp push push add sub xchg in or adc push xor pusha gs and mov (bad) fldl jne jne (bad) adc xchg push jb (bad) (bad) sldt or add add testb fs or add add sbb sbbb insl jle popf rolb jne jne add repz add jne jne and ds les les jne push sbb cmp insl (bad) in push or push push mov push add add jne cltd jne jne push pop lcall sbb dec sbb xchg cli lods flds call pop sub add (bad) cvtpi2ps (bad) cwtl pop cmpsl aas cli and out stc (bad) (bad) bswap int3 int3 int3 int3 mov mov xor mov add add mov (bad) jmp (bad) pop sbb mov lea mov arpl add add fistpll push inc fsub test lret push push push push (bad) push xchg push xchg insl inc push add add add (bad) jle add add add (bad) clc (bad) (bad) (bad) incl add mov cmp ja mov cmp je lea add jg pop (bad) (bad) (bad) incl and or ret std (bad) xlat orb addl inc (bad) (bad) (bad) (bad) sar (bad) pushl mov add mov cs jp movsl jge cmpsb or pushf lahf mov and add roll add ja ja rcrl sbb jecxz ja psraw arpl fistps popa or (bad) (bad) ud0 loope (bad) (bad) (bad) incl cld push add add aad mov dec (bad) mov add add ljmp sbb call cmpb push add xchg add decl dec sub repz incl push inc or add dec adc test call inc or mov add add addl hlt add shl in je test (bad) push cmp mov (bad) lock add inc add add decl incl add js pop xor add add fs loope addl add sbb mov enter add add add mov mov mov and call call ret ja sub (bad) in mov data16 daa shll mov adc add add repz daa aad inc jmp (bad) (bad) inc fistpl xor push and cwtl ret inc inc inc inc add add mov add int3 int3 int3 int3 add arpl add add (bad) jmp js sbb jl push les arpl ss lods inc test insb cli cmp dec or cs int3 int3 int3 add jae add adc jl mov add add subl addl ljmp add add call jge or add cmp test mov pushf or add call adcl mov dec inc (bad) call push (bad) popa and outsb addr16 and add cwtl jg add add addl lea or repnz fxam fisubl xchg in pop decb jne jne pop cmp mov mov ja ja ja int3 loopne sub int3 int3 int3 mov int3 int3 lea push lea jne jl xchg mov flds jae and inc clc pop enter add mov dec stos cmp mov jne jne or shrb rclb jne,pt add add add add jne jne jne jne aad jne add add add cli stos cmpsb push fimuls enter inc in dec add (bad) fstl incl lret mov mov fistpll add inc xor add push (bad) mov addb mov add testl rcrb add xor movq push (bad) sub faddl add or mov pop call incl (bad) inc sub rolb inc push add dec add inc je cmp not push lcall loopne adc add or inc cmpsl add or rcll add (bad) incl inc sub or add push mov add jne test cmp jne sahf inc and and cmp add add mov call push xor mov call push lock push add xor dec sbb mov test add stc push outsb dec dec xor (bad) lret addl sub mov sbb mov jnp mov mov sub repnz add add sbb push push push push push add add xor sbbb and or lea add mov inc inc inc inc add inc mov sub movb sbb mov add add mov aad into nop cmp pop call inc mov fldcw out add inc call add (bad) (bad) cmp (bad) decl mov mov add incl imul cmpsl adc cs movsl filds popa lock add repz add inc mov sbb xor scas mov mov inc inc inc inc inc ds push aam inc inc inc rcrb add cld jbe add (bad) (bad) (bad) decl mov out mov frstor push mov sbb mov call call sub sub mov dec call call loop std imul adc call and add dec xor aam or push sub addr16 mov ret mov mov push int3 int3 int3 int3 add add xor jae aam (bad) int add sahf dec add add add add int3 lods aaa ljmp add movsl add push gs (bad) (bad) decl fstps hlt leave test icebp push mov mov lea add add dec jmp lret jb xor dec lds pop icebp pop hlt add shlb and add add (bad) (bad) (bad) (bad) incl add faddl add add add bound nop imul or xor xchg cmp add dec xchg movsl (bad) (bad) (bad) incl cmp repnz xor test loop push add lock push add jmp xchg loopne jo movl (bad) jmp or inc in and pop loopne loopne jne sub inc pushl inc jle rcr ret mov push xor mov ljmp add sbbl (bad) call adc push jne push js cld jge mov push dec cmp adc add ljmp jmp dec addl or jl add add popf inc mov add add sahf and add add out mov test mov jne cmpb push out ss jg xchg xchg dec mov adcl jne and and (bad) unpcklps (bad) sldt add or div icebp xchg sbb push mov lea das dec add mov lea in and and and (bad) (bad) (bad) ljmp ret lea push ljmp jb add mov mov add add push movsb xchg fcmove aas xchg dec mov and add add add (bad) inc jg jns (bad) decb mov lea iret leave pop mov insb xor lahf imul jge pop add add add inc add add cmp sub or insb pop bound pop lock add add stc mov lods pushf out pop jae xchg add lea repnz add add add add mov sbb cmp jno and fdivrl add call call clc push cltd push push mov push xor mov jecxz mov mov add pushf adc add add add add addl mov xor and mov add add add add add int3 int3 push mov mov lret addb jg int3 int3 add sbb sub or add add add add mov cmc sub lret adc push dec mov outsb fucom dec add add and add ds or stos mov mov jne sbb dec jne jne add incl add test or ret movsb out sti aaa mov into xchg dec add add add jbe add add cmp aad scas rorl add add add rep shlb xchg repnz int3 int3 int3 int3 int3 (bad) (bad) inc (bad) cltd (bad) incl add add addl mov lea add rcrl and and add call jge inc cmp add push inc jle inc cmp addb mov inc sbb jne mov and call inc jmp dec jge ljmp incl xor add enter addb add add fdivs clc lcall lahf and and call add dec inc rcrb add adc jge sar or adc cmp add mov jmp push incl add add sbb add sub mov lea loope ret pop inc mov xor mov mov pop fiaddl call sub add add mov add add add test jns popa adc out aam loope jecxz dec mov test ja add pop add add add (bad) xchg dec pop test fs add in aam cmp mov xorb add add add add add incl (bad) (bad) (bad) jmp outsb jb push jne push dec cmp das or push insb cwtl sbb add add loopne aas add add add int3 int3 int3 loope (bad) aam xchg imul jb pop xor int3 mov mov mov mov decl lea mov (bad) lds add and add add sarb (bad) (bad) (bad) pmaddwd fwait lds add add fisubrl jle mov dec dec xchg push add add add (bad) (bad) dec popa cli (bad) incl add add add or add dec mov cld jne xchg (bad) push mov or add pop aaa mov add in jp and or insl jl add add add add add add push add add outsb repnz add jne jne (bad) jno dec cmc add pop and jne add add add add add add lcall aas rcll sub fisubrl and aaa nop roll add decl test (bad) (bad) (bad) (bad) cmp (bad) (bad) (bad) ljmp fsubr xchg addr16 sbb push notb mov movsb mov or addl add adc rorb out push jecxz add lea sbbl addl add add add mov and imul sbb popf mov fidivrl test and call call insb pop inc or mov fmull pop aad xchg jmp push add add add ret mov test (bad) frstor mov or mov add jmp adc add adc push dec sbb in pop call in add add add pop inc incl (bad) (bad) lret add add call rolb or in add add and add negl hlt hlt into pop mov das or hlt pop fnstenv jmp dec repz icebp add add mov cld push sbb xor add add lea lea addl add add add cmc xor loopne imul and mov lea lea add mov inc and xchg fisubrs add fstl bnd jmp mov add and pusha and and add enter add (bad) push push neg inc inc xor push fwait notb ds mov mov mov add add call adc mov ret shlb call add mov mov dec xchg add inc cmpsb lcall ja clc mov lret lahf inc fmull arpl add add add add add fwait dec pusha (bad) lods js rol jns add add jmp sub mov push movl add add add add lea leave add add or or add decl add lock add pushl push jmp xor mov inc mov pushl sub je mov jmp call rclb push mov insb push add push inc test inc je incl inc adc mov push adc test add (bad) xchg sub pop inc inc mov cmc in and outsb mov add mov nop inc popa push negb jmp add inc shrl call inc inc inc add xor add add ja ja (bad) fwait clc mov data16 outsl dec dec imul pop ja add add add add add add add jns pop jp lds scas xchg push faddp add mov rcrb add pop inc push mov insl mov (bad) (bad) xadd rol shlb dec je pop stos inc xor aam mov addr16 call fucomip add add add ds ljmp movsl jo mov mov xchg mov push add add imul add add inc aad sahf inc ja test mov jl cltd sbb addb inc inc cmp (bad) (bad) decl cmc in jge dec jbe mov sbb add add aam push lds add call int3 int3 mov ja int3 jne jne jne add pop add add fwait or ja xor jno dec in imul lea test cmc jne mov imulb (bad) inc call jb xchg mov lea add add lret xor mov addr16 mov in movsb jle mul jne int3 int3 int3 int3 int3 add sub add js loope cs lret dec add bswap xlat pop fistps ds jne sub pop add sbbl ljmp mov inc add leave mov mov add inc loopne rorb push or add push and call mov sti or push pop inc push xor and jge inc data16 inc sar jo je add or push add inc call add jecxz inc add mov (bad) call jl add js mov mov mov (bad) (bad) (bad) loope pop adc rcl shrl out adc inc in loopne subb add hlt icebp push jne jne jne add mov push push shll add add jne fistpl sub jne add adc mov inc cmp aam fldl dec adcb inc inc inc inc and addl iret bound pop popf (bad) lret add add (bad) xorl adc sub xlat add (bad) (bad) (bad) incl add push clc mov ret mov add add add das or push xor popa out nop shlb pop cmp loopne xchg add call call push push and jmp call outsl sbb cmp add add outsb sub fldenv pop bound xor sbb add mov and xor and push push xchg xor out bound dec push xchg loope push aam lret sbb mov xchg mov add mov add add add add mov push sub mov add xchg jp cmp mov ja ja ja ja or in cltd inc popa xchg xchg loop mov stc ja add add add add sbb mov add xchg push mov lea loopne cmpsl clc insb jne mov int3 aaa push or and lea test mov or inc inc inc inc add sub add inc add add add mov jne add add push leave mov je push adc addl or adcb je nop cs inc add cs inc inc inc sldt (bad) (bad) cmp pop or sub adc jmp lea push jg mov or ret xor push dec shlb sldt add add inc push lahf decb xchg push push push xchg test lock aam push push push call cwtl test mov add mov mov (bad) (bad) (bad) incl pop mov add add fucompp add add jg dec add addl xchg inc and and cmpsl pop lret mov add add add add add add add xchg mov pop test add add sub leave and rorb add add and add add add mov add add movsb repz scas add sahf and inc jmp lds or call add add sahf adc or (bad) (bad) (bad) (bad) dec int3 add mov (bad) (bad) (bad) repz jnp mov cmp loope test mov sub cmp and int3 mov pop mov sahf nop iret repnz push ss inc inc inc inc push lret xlat add or xchg adc add add call shr call add add cmp add (bad) (bad) inc std sub and or add cld pop jne add add push xor incl insb inc add je and jne cld adc push cmp inc dec inc add jne addl or lock inc sarl push hlt sub dec mov add and inc je add enter xorl or adc add add (bad) inc pop add mov pushl push ret call call rolb dec mov xor add add leave inc dec sub mov adc adc (bad) pfadd mov in add add (bad) (bad) (bad) (bad) in cld popa incl add add jne jne pop stos js lahf pop fnstsw es repnz add add add shlb push push subl ret sbb pushf push and mov jmp mov mov dec pop jl mov cltd xor call int3 (bad) (bad) (bad) lcall sub jecxz fcompl addb loop ljmp add add fadds add inc inc add add cmp jae fbld aad add addl mov je mov mov add add mov add add scas iret inc xchg and adc loope fbstp jne add dec add add (bad) stc mov xchg jne and imul add test es neg push mov add incl lea xrelease add add add les in adc jp mov fs fistps add cmpl addl fadds sbb sbb mov and test mov and jp (bad) (bad) (bad) call add add add add cmpsl testb dec roll lea add add add and inc xchg insl or popa add add xor jno sti add add add pop pop add add call call pop aas fs sub adc (bad) jmp int3 and in (bad) fldt int3 int3 int3 add add ss mov (bad) mov xchg aas cmp pop mov add add jne addb cltd jne jne add mov or test or add lea incl add add pop subl (bad) lcall add xor add add cmp dec or push mov mov mov sti push pextrw add ljmp jl (bad) (bad) (bad) incl cltd sub ret jle rcrl add add mov mov cs cltd or leave jb add add mov js mov stc (bad) out inc add call int3 int3 dec add int3 int3 add add add add add add pop jo (bad) jne test arpl pop xchg fcomps mov mov call call pop lods sub pop es xlat add add add xchg adc add add pop and and or add add add sbb data16 ss or loope pop enter mov add add mov add add add cwtl push dec (bad) das dec cmp push mov fwait shl mov push xorl (bad) (bad) (bad) pushl pushf (bad) jne jne mov mov mov sub jmp push pop rolb test icebp cmp rol shrb lea lret js (bad) pop es je jge mov jmp pushl repz lock pushf addl test add aam bnd data16 je push orb push in push decl jne or cmp hlt adc in (bad) in je (bad) jmp lock testb cmp inc inc pushl jne call add add aas inc lds add add push test arpl addl adc add add add jl loopne call adc add add add add add gs lret add mov cmp jle (bad) (bad) incl or push jno cmp addr16 dec incl add add lea lea ud0 psrad (bad) incl add pop mov loope sbb je out fistpl call sub test and movsb add add stos pop mov add add mov push push push push jae dec push addl add les cli and movsl andb pop dec decb pop mov add add call call test inc mov xorb (bad) or add jo aad or in int3 leave ja add add int3 inc dec xor int3 int3 int3 add add add mov stc xchg or jp inc (bad) jno and insl push (bad) loop jmp add add or int3 int3 int3 int3 int3 mov mov clc push sbb mov add and add insb mov add (bad) in inc sbb push adc cmp add inc mov (bad) (bad) lcall daa sub jmp and fnstcw inc rcll ret push mov inc cwtl pop inc (bad) (bad) (bad) (bad) incb add xor or or loopne jge inc cld add in push mov add add add sub add inc push push mov sub fdivrs (bad) aam sub lea lock cld push jmp push inc mov add dec jmp add push ret push pop push inc cmp (bad) jmp mov in gs cmp add cmp les add call (bad) add (bad) call rolb addl add cmpxchg8b (bad) into (bad) (bad) sldt add nop insb (bad) div or add add js push xchg pushf repnz add hlt sbb jne ljmp (bad) std and ret jae (bad) (bad) (bad) (bad) inc pop jne (bad) (bad) (bad) pushl mov enter push push add add or pop outsl xor es add call add add add inc fbld sbb add mov jo test rolb mov and (bad) sti (bad) (bad) (bad) jmp in xor outsb fcmovnb pop sub xor mov mov add add mov test ret xchg test mov add add jne stos jmp popa jne jne call call test add dec insb cmp jnp cmp add add ljmp (bad) (bad) (bad) incl mov enter in enter lahf loop push push push nop or stos mov cmp and push test (bad) inc es (bad) dec int3 int3 int3 int3 mov mov add sub sub xor lock and in mov dec mov xchg jl add add add sbb arpl insb adc push cmp ret add add call call lret add push add add add (bad) ljmp cmp cmpsb pop xchg dec or inc jg incl add add mov mov add fistps cmp dec mov add add inc insl aam xchg dec aam movsb add add inc push adc add adc add add mov les add push rcrl mov add lcall add and and push push fisttpl mov inc fiadds sbb add add add rcll test ja jno ja ja add jl add xor mov call mov (bad) incl inc decl add ljmp adc mov ret xchg inc inc push jo inc add lcall jmp incl add je lock push jmp dec fsubrs pop xchg xor out xchg movsl xchg add roll add add push in insb icebp out mov test add add or mov sub das mov add add add xor or or add add add add and (bad) rcrb xor xlat add or dec mov (bad) cmp gs add and add dec push in dec cwtl dec mov ss (bad) (bad) (bad) incl add dec add add ss add (bad) (bad) (bad) incb add mov subb mov (bad) dec cmp lods add (bad) (bad) (bad) (bad) decl lea hlt js ja cmp mov shlb and mov adc sub add add add mov add add mov in test hlt xor sub std repz add add add add add lea inc mov mov stos jo lea int3 add int3 ljmp add mov and jne jne add fldt xor out fstl jecxz xor add add lea out add cmp mov neg inc push iret mov pop insb mov xor inc push or xorb adc shlb orl push test cmp mov dec call add inc add inc ret sbb add push push or add ret xor inc xchg add clc or cld or test or dec pop dec je (bad) jmp jmp lock add xchg push lcall inc test xor pop aad lea add xor add add ja xchg cmp ja ja cs roll aaa lods sbb enter dec sbb ja push ja ja (bad) pop in pop pop fsts gs and movsl je (bad) (bad) incb out inc adc add add aas ljmp jno add add add push imul repnz or mov js push rcrb add jne jne jne call call sub jo inc mov int3 int3 push jge jl fs pop adc mov push push push push add add add or add add pop fcmovne mov popa and mov jge out or int3 int3 jnp lock mov add stc iret mov pop fdivrs sbb xchg pop ds add add add add jns repnz push push inc inc inc daa addr16 inc call call fcmove dec lret add cmp sbb enter mov outsb or or into xchg and adc sub inc mov add lock mov mov mov add movsb dec or xchg mov add test ret lods mov sbb stos aam push outsl ss into test add fildl push int3 clc movnti sub int3 int3 int3 add add add add add pop cli aam test mov daa inc dec shlb lods out daa outsb inc adc xor add addl add add sbb xor addl add pop popa test mov push addb add lea lea (bad) (bad) (bad) fsub push inc pop and insl xchg mov push enter inc cmc lds andb mov (bad) (bad) ficoms mov rorl subb sub mov call call call int3 jl test int3 int3 test pushf (bad) jge js push pushf bound test add add add add je inc jmp sar sbb cmp inc push add lock loopne jecxz decl push jl cmc add enter leave mov and lock jl icebp roll data16 ljmp jle mov data16 jne jne bound inc jnp sbb inc popl add add call std jg jno add add add (bad) lcall (bad) (bad) (bad) (bad) (bad) call call sub xlat aaa mov nop (bad) popf jmp mov bound or (bad) (bad) sub andb and push addr16 (bad) (bad) (bad) jmp mov scas (bad) (bad) (bad) push and xchg std mov jne jne add sbb jg (bad) cmc (bad) mov sub fnstsw cmp xor add push push push add inc inc inc in popf je lock das cmp jno inc add ja ljmp and add iret fcmovu add add add aad add add outsb ret push movsl add inc push ja (bad) jo jl rolb std sub sbb inc jge arpl jae mov inc inc inc inc ja dec push into add ja mov mov filds jne jne add (bad) fdivrs js (bad) shlb cld in add add add add add mov jns xchg test jae icebp add add add shrl jge pop sarb leave add int3 int3 int3 int3 add add out add (bad) (bad) (bad) (bad) sldt js add add add ret (bad) ljmp or inc inc push add jmp decl addb inc add mov sbb add pop (bad) rcrl inc jmp add add mov mov dec inc les add add mov xor lock je inc push add frstor add addl or lea inc insl incl call repnz into aaa stos test stos inc dec push pop add mov jne mov rcrl les inc and jne mov mov mov mov add add (bad) (bad) lcall push cmpb jmp js xchg mov incl add add mov mov add or fstl add add mov jge mov addl add add (bad) test (bad) (bad) decb cmovae add fistl jne stos mov pop dec ja mov add add push push add jne jne inc inc jnp popf cli dec mov fmull pop push inc inc int3 int3 int3 int3 int3 add ljmp add add movl add add add mov push add jmp mov (bad) (bad) (bad) incb add bound lds mov jecxz jne jne xor or cs aas fadd jne add add lea lea add mov and cmp and cmp popa fistps add call call pushf cld add mov mov add add mov and movl sub add add (bad) (bad) movhlps pop int xor sbb sbb loopne jnp inc inc imul lea jle push cmp adc sub and mov iret cmp enter add push scas icebp push push inc jge inc inc rolb pop and adc data16 call add insb mov add push sub push xor lcallw or add add jmp push pushl cmp rolb add inc add loopne push lea decl mov pushl addl cs ret push subb add push call push cmovbe add push sub inc pop mov pop (bad) fcomps pop jo mov xor or mov add outsl lods dec add call rol push fsubrl (bad) fisubs adc rolb add add (bad) cmp and int3 int3 mov int3 int3 inc xchg mov inc and push push xor and int cmp jge cmpsl xor inc inc test test push insl or (bad) xchg jo mov hlt mov mov lea xadd rol (bad) (bad) incl mov decl add inc fwait add add add push add fiadds hlt xchg sahf arpl sub popf sub add mov ja aas add jle cmp xor add add addl add add add add add add sbb leave jnp shlb pop insb mov (bad) (bad) (bad) (bad) dec int3 xchg ljmp adc int3 xor shrl jl push call push pop aaa gs testb call call cmp add add outsb mov sub fs or push adc jp pop add add ljmp add add mov push jecxz mov add add add add (bad) (bad) ljmp lds add fcmovnbe popa out mul jmp pop inc incb (bad) add add int3 sub int3 pushf ds inc mov dec push sbb add add sub or jmp mov repnz add add add ja ss ja mov ud2 les (bad) sldt add int mov lcall jecxz popf lods mov rcrb add push test (bad) out add jge enter add add add call in add add inc mov and mov mov inc incl or push call xor add add lea add add add add movsl cmp xchg adc fucomip add add add mov add xor (bad) (bad) decl add add jne jne xchg cltd mov dec mov out jge movsl xor mov jne add add add out adc add mov loopne test push sbb add xchg push ret sbb add add push push mov push push push push add dec add add mov call scas xlat adc adc js mov jbe push add add add (bad) (bad) pushl lock mov fmuls push daa (bad) incl add add call cs and mov das add sub (bad) fiadds push push push inc and add add add add add ljmp iret adc inc addl pop movsb shll add addl call call add (bad) ljmp mov sub mov jnp outsb fcmovne mov rolb movl sub orl pushw callw call sub or call rolb add add or and fs adc jbe ret adc add call enter push cmp mov (bad) xor add add cmp pop je addl add icebp mov call push test arpl adc adc call xor mulb pusha inc orl pushl inc push mov dec ds xor dec add jne jne add jbe mov movsb loopne (bad) (bad) ljmp cmp mov addl ss jnp jnp add (bad) jmp aad addl add add int3 jecxz int3 int3 int3 add add add cmp or ret pop stos clc add add (bad) inc lds pop mov addr16 add add add add and or and and loop lcall test adc pop ja mov push mov add add mov fs nop lret stos subl ja add fs ja add add mov add test popf mov shll push push xchg imul enter test mov push insb cmp fs pop insb add add (bad) mov adc pop mov add lea lea add repz push call mov lret scas insb xchg mov mulb shrl lods call incb add add mov inc pop and inc jmp jne jne add jmp add push divl push int3 int3 int3 int3 add add in xor aad sub repnz add addl xchg inc and and add xchg icebp xor inc (bad) insl sub sbb sub add push inc movsl adc test test lea pop xor (bad) (bad) lldt add add push mov cwtl mov add pusha (bad) cmc stos mov dec out push sub inc enter int3 int3 ficomps or jne jne and and push cli add mov pusha and add add add add int je add call call adc add add das xor mov inc cmp jg mov mov and test call inc test add ret inc add idivb sarb pop (bad) decl test add mov add lock in cltd xchg jne mov (bad) call aam push sbb cld mov add add push add add cmp cmp inc jp mov (bad) jns rcl push and cmp popf (bad) sldt add add call call mov add add push add sbb dec jle loopne push add sub lea add add jmp mov jo imul psllq add (bad) (bad) (bad) incl push mov add cmp (bad) call out fdivrp add add add call dec mov push (bad) int cli xor sub call (bad) sldt cmp add add int3 int3 leave xchg adc lret sbb int3 int3 int3 leave jecxz subb mov or loope int3 int3 int3 int3 incb loope (bad) (bad) incb enter add xchg fwait xchg lods add fisttpll push outsl sbb (bad) jne jne jne jne add add and and xor cli lahf sti add dec inc cmp jbe and add add add cmp cs add add mov add add add or and aaa jl add add (bad) out fwait lea pop sahf cmp jbe lret daa mov test jmp jmp jge or adc addb add addl adc lret je shrl add mov rcll inc addl rolb mov daa pushl cld inc add adc jne addb add push call add mov mov or incl fildll mov inc or mov push mov pusha push add add add (bad) gs (bad) (bad) call mov mov inc or xor ret cs pop aas ja call add add jne lds cmpsb insb pop das aaa ret push jne jne lds cld jne jne cwtl push lea mov pop mov int3 adc pushf sbb inc js inc dec add add addl jb add add add sub ret adc xchg fwait xchg add add pop (bad) es and add mov add hlt aad add add rcll mov loopne insl mov (bad) fistl ret stc pop shl add add dec loope add and and add mov sub mov add add add add add push incl add lea (bad) call call push adc mov sub ja jecxz fisttpll and jno call sbb addl ret fldenv in mov lcall js sub xor loop int3 and call add add add add add add mov mov call add jmp pop or and lret and call ja ja add adc mov jo (bad) sarl add enter add add jnp add add jp mov shlb stc push lcall hlt push incl je adc andb sbb adc fadds adc dec inc or add add dec jne shr (bad) dec adc add mov mov or cld aam add add add pop (bad) cld push push int scas add (bad) (bad) (bad) (bad) psubsb dec lret call mov fstpl js lea mov xor cmpsb lods add inc inc inc inc add add test xor inc jl (bad) push aaa fwait arpl pushf xchg xchg pop sbb jmp xor xor cmp add add add rcrb das int add add add add call mov (bad) (bad) incl add in add add add jne loope pop mov loop loop out mov icebp push jne jne add add add jl orb ret cld mov add push (bad) xchg or xor ljmp lcall add add test arpl cmp test into (bad) mov pop pop stos ljmp add xchg mov call mov test cltd ja ja add add add mov rorl decl popf rcl (bad) lds mov cmp mov add add mov mov dec add push add add jl orb add cmp movb mov jne call test add add push call add loopne jge add ret (bad) call movb add inc push add mov push push or cmovo in call add addl clc jl test loope pop movsb rcrl test and dec es cmp (bad) (bad) call call filds rcrb push push call inc push add nop cmp inc ret and add inc mov (bad) (bad) incb add jae or push loop inc stos or add add add add call call jne sbb xor mov adc cltd fldenv xlat xor (bad) das js lea add add jl add add or xchg (bad) aam fimull add rcl xor push mov add add add and popa pop and lea ja sbb add rorb (bad) mull test loope shlb pop push call outsb outsl (bad) (bad) incl and push rclb fiaddl add add add iret sahf bound add add repz add fisttpll daa add add add (bad) (bad) (bad) loope cs xchg jne fsubr sbb pop or add add add (bad) jecxz (bad) (bad) (bad) push push mov movsl aad (bad) and sbb fmulp shrl sbb out sub add add add out add add or add add pop adcb movsl lahf adc fbstp cld add call mov add add xchg (bad) (bad) (bad) (bad) decl cmpsb push ret testb enter add add (bad) ljmp (bad) (bad) call call pushf add add push inc imulb (bad) ficomps lods rclb sbb movsl in lcall mov clc mov leave sbb mov add add sahf out jle std inc add pushl add rol shlb inc subb add add add popa rolb add (bad) lcall aaa insb lods ljmp int3 add mov mov incl pushl add xor adc add je push add add sti add scas call dec orb (bad) lods jmp add add dec incl add rolb jo lods add test in jge add jb jmp cmp repz add bsf add lea inc addl add push mov push pop lock inc jns and xchg pop adc pop mov add icebp adc add add lahf pop insl mov sub repz cmp add add lea push push or push jne jne jne jne call fstpl stos shlb mov jne add add add rcl rol test push loop xor test or ja jmp je push inc leave cmp add jne pop mov add or add add pop dec aaa (bad) pop shll mov dec dec jle das add add stos sub add add add call cwtl dec ret cmc scas fs add call lea lods iret or or add iret roll add int ja ja inc mov jge add stos fiadds cmc rolb inc inc add add or xor jne jo add add icebp pop xchg and leave sub ja ja ja mov mov add add add and add add scas add fiaddl sub push sub testl add add add inc mov add mov aad add add add fidivrl add add lds mov add add add add cmp jae sbb hlt xchg mov or lds add int3 int3 int3 int3 int3 mov mov in pop stos out test mov out dec mov les repz sub mov or add test push dec lea rorb dec push scas or dec pushf push push jmp pop adc xor mov (bad) (bad) lcall in jnp cli xchg insb es push notl call add aaa outsl add add (bad) cmovno ltr (bad) out add add add icebp fwait ljmp adc xchg icebp data16 add test add add push dec push mov hlt or add pop incl push dec pop push cmp inc inc (bad) call clc add jmp add or add mov add push addl mov push push push cmp push and push push push jno push insl add add out cmc ret mov add mov add push push add ds movl add (bad) (bad) inc (bad) (bad) jnp jo mov dec lret xor sub sub sbb pop (bad) (bad) (bad) decl into mov (bad) aad cmp insb add mov pop push je int3 int3 int3 push int3 adc (bad) (bad) jne jne mov lods mov xchg add adc jne add add add add add add inc dec imul sub add fwait int3 lods push sbb push es (bad) fistps stc sub mov sbb xchg icebp testb dec mov push in inc inc pop and in in mov orb mov xor vpmullw mov ja mov ja (bad) movups push push or jne add rolb lea call adc inc inc sub push mov add jne add ja or addl xor inc aam icebp add (bad) cld add pop test jmp add add roll call add lcall (bad) push clc jns je add outsl mov decl jnp jbe sub lcall loop lea and and xchg fcomps inc and mov (bad) pmulhrw xchg sbb sub mov mov add fs or add add add (bad) call lret (bad) (bad) (bad) (bad) (bad) call inc mul loop lock push jmp mov (bad) push inc and add incl sahf shll (bad) mov cmp cmpsl cltd hlt sub stc shr lea rclb ja mov mov mov (bad) (bad) (bad) (bad) (bad) (bad) call jne inc push sub pop lret insl and (bad) (bad) call mov mov add (bad) jnp push xor mov add add cmp ret and cmp add call lds (bad) (bad) (bad) decl lea pop es pop or repz sbb out in outsl test addr16 inc inc inc ja jp (bad) fbld push sarl out xchg and loop xchg mov add or or sti or add add mov cmp insl pop rorb inc add jp and xchg mov push (bad) scas push push push push sub sbbb mov int3 loopne addl ljmp shlb mov add add add inc or inc inc (bad) (bad) (bad) (bad) incl addl and ja add lahf mov pop push push insb adc jne add dec cmpsb add add int3 xor fsubp cltd mov add mov adc inc add lock xor mov add cmp xchg std xor mov xor bound push pop or cmpb inc (bad) and or sbb inc lds or clc add adc lcall mov add (bad) roll or call add decl jne ficompl int3 int3 int3 mov subl or or add add call lds int3 mov jg dec and call add jmp stc (bad) (bad) (bad) call xor inc jne push call jbe mov pop dec add call stc jne jne (bad) mov jmp loop repnz cwtl fwait pop iret cmc dec inc dec cwtl (bad) fsubr push ret or inc mov incl add add add add es outsb ret jecxz push add xchg add add add add aad addl mov or or inc and push xchg daa jne mov xchg add int3 mov inc mov mov cmp mov scas add add adc (bad) gs je and add add jne outsb xorb add add add scas out add add add lret out xchg outsl xchg xchg in push iret fistl jbe fdivrs in add push pop cwtl add add mov sbb cltd fildl sub pop mov loope mov (bad) (bad) ljmp and mov rol add shl insl inc jbe into lock jl js pop and mov add jne jne and imul inc inc inc adc out cli (bad) dec rorb xchg pusha jno inc push les mov jl add lds push add add mov in cmp or dec inc mov scas mov sbb (bad) jmp xchg stos incl inc inc (bad) (bad) getsec insl in sub imul mov adc roll mov hlt call xor negb cmp and add mov or push push jne pop push and pop or or aam lock add add scas addl pop inc and aam sbb or je xchg inc jge pop call testl call call add add xorb add add test popf lds shrb dec mov js les add add mov mov jne pop cmp js out ja ja daa pop and add mov add (bad) (bad) (bad) (bad) pushl jne hlt (bad) jne jne jne jne add add add add cmpsl lret xor lcall pop test call inc in add mov aad add add add xlat lods xchg andl add add loop inc inc inc inc test add add (bad) fdivs add add add cwtl dec pop push lds pop mov pop jno dec and mov mov cs and mov mov inc std outsl cltd decl jns mov pushf loop std mov add add pop xchg ja ja ja lea ja das dec test push repnz add lock push add add dec add test stc cmpl adc mov mov ja movsl dec xchg ja ja call call add add add xchg mov gs fwait xchg pop stos and add add inc pop (bad) (bad) (bad) call pusha xor sub (bad) (bad) (bad) cmpxchg8b test cltd rolb or sub add mov sbb rol add xor inc fadd (bad) jmp sbb jmp inc incl mov call inc ret xor inc insb add add (bad) data16 or mov pop nop out dec andl call hlt test mov lea cmp adcl pop mov adc add add push pop or push test leave daa scas push inc xchg dec add add mov sti shrl inc or mov psubsb call jne or int3 int3 int3 add inc popf add add add adc adc ret push or xchg dec incl add in rclb and lahf scas xor adc pop dec sti loop add add outsl push xchg pop add add popa repz add (bad) fdivr add (bad) (bad) ljmp xchg jmp pop mov pushl fdivr pushl jne jne add add add add cmp ljmp in and mov add add or inc mov or add add add sarl add add jo push push push mov mov sub scas out test xchg jb mov mov mov add add add add push sbb cwtl pop int3 push lods insb cmpsb mov add add (bad) incl std fsts (bad) decl mov add add mov dec jmp add (bad) in mov mov add add jmp mov mov mov add pop push inc in push aas or add jne jne add sub adc and and test test lods sahf push jl sub sbb xchg imul sbb mov call repnz int3 leave add and data16 call mov cmpsl inc jne jne andb lea (bad) (bad) (bad) (bad) (bad) incb add fsubr repnz sbb mov outsb sub or jne jne jne xchg jmp lea push shrb xor cltd sub lea adc addl addl inc inc inc mov dec mov (bad) jo lcall mov push clc jne in mov add add add push push push (bad) mov shll in mov mov call add rol xchg out rol or call mov sub dec add ret (bad) lret movsl gs cmp sbb add (bad) push cmp or or push or push loopne add jmp decl push push (bad) jg add les add or incl mov add sbb inc call lea add mov adc incl cmova and incl push pop mov mov clc inc inc pop (bad) verr loopne add loopne push mov add ja ds dec out aad pop scas inc or jo sbb or in inc mov addl ror sub add jne jne (bad) frstor jne cmp cmc inc or inc fstl les pop jne add sbb add add add and sbb xchg and add add add pop lods add add cmp fs mov add add add add cwtl push (bad) cmp insb adc (bad) cltd insl cmc add add add add movsb ljmp mov push test mov sti add sbb lret inc sbb add add and sub pop testb add test in cmpsb pop mov ja and jne sbb xchg cmc addl cmp (bad) (bad) (bad) call insb (bad) xorps test push call add add sahf mov add add adc add mov add add add rcll aad and sarb add add mov add clc aam adc jne jne xor jg xor push std cli xor jne jne jne (bad) (bad) pmuludq decl sldt add add call call mov mov push xor sub and xchg sub addl jne jne fwait inc jo inc cmp jge jge jge mov add add call pushf inc incl add add add add sub push mov enter xchg lret mov mov fwait xlat add add add stos cwtl mov fldenv mov add insb dec in (bad) sub sbb adc add mov push str cmp and jge jno add loopne mov or inc push call add jmp clc dec add cmp jmp inc pop in add push inc cmp cld add add (bad) (bad) jmp xor dec je add xlat pop ljmp (bad) ljmp add ljmp add or xor ret xor sahf or rol xor fsubs jnp cmp mov mov inc pop sbb pop mov add sbb mov sub lods push leave rcrb xchg pop call add add call add int3 int3 int3 xor sbb or add add lds test cmpsl mov sub ror ss arpl (bad) (bad) (bad) lsl mov mov pop push mov jo add add (bad) cmp data16 or int3 add add add call mov call mov add pop add add add cmpsb nop dec mov int jbe gs mov cmp add data16 roll call call loopne sbb xchg jo pushf bound jle imul add add es and and and rol (bad) (bad) (bad) jg inc loopne pushf cli stos aam jo cmp xor sub (bad) jnp add out lea add add add xor fidivl leave call add (bad) loop sbb fidivs lea push add add add add lret push test pop add addr16 add add add daa add (bad) (bad) (bad) incl add les insl std sub (bad) jp mov add add lcall add add scas ja and and and imul push icebp xor aad test popf sub andb and and cmpsb jl mulb repnz sarl into and sbb add inc dec psubsb push shrb push add or fcoms call inc push fadds fadds add call add pcmpgtd imulb add cmp add add adc pop pop call incl jne or call add mov jne jne test hlt test gs rcrl and sbb add ds add add mov aam mov jne or xor fwait cltd mov add mov add add jne jne jp xorb add add rol xchg or test aad lret dec jmp lods std andb xchg mov add add add add add and out xchg addl shlb rolb test add add add (bad) fstpt decl mov dec cmp mov in push xchg adc ljmp int3 int3 int3 test (bad) (bad) (bad) (bad) call sbbl jo mov call incl add je cmp add add add push aaa and add add xchg add pushf sub das push dec movsl outsl mov mov add add xchg mov or adc add add mov push je mov loopne sub or inc mov lea push femms inc add cmp incl add push adc rolb add mov add addb cmp push (bad) fadds mov (bad) mov call add add adc (bad) rdpmc addb add incb xor call test jne push adc add sub inc inc inc rol imul addl add add lcall in loope stc xchg int3 push sbb add roll add add imul cmp pop aaa call (bad) loope mov in jne jne out outsb jne mov add call iret sahf push push outsb dec jecxz enter push lahf add add add add mov add rol sahf addr16 aas pop add add mov jmp cmp add add call (bad) (bad) incl decl imul (bad) jl into xchg dec movsl jne notl lea mov mov jne pushf negl pushf in lret dec test scas es mov jne jne jne jne add add add add pop add add dec pop add add inc push sub and inc inc stos lds subl sub lret inc jae inc inc inc inc add add or insb mov xchg mov pushf add add fcmovbe loop cmp push inc insb scas mov add add add mov add add add add xor xchg repz add jo push inc add aaa icebp or popf repnz mov mov (bad) mov push cwtl loope mov push dec add add add add add add jbe add (bad) (bad) (bad) incl add cltd roll das je pop ficompl adc jle add and and and mov outsb mov dec adc movsb addl fs decl xchg or add cmpsb pop jo mov popf movsb sub add mov call xor mov in sbb dec cmp add xorl ss addl addl add add add xchg adc jnp mov push add mov fadd xorps jmp sbb pushl xor pusha aam push incl call les push subb incl jmp call jb xor or out jne mov mov push sub test mov add rorb push decl adc add inc mov rclb ja adc jne (bad) jmp ret mov (bad) (bad) (bad) jge jg lea xchg add call call les mov mov cmp or enter pop mov push inc inc inc inc cmpsl jb clc xchg or shll push mov add xorb and fidivrl mov add add add add add add add add or les inc (bad) push mov mov dec xchg repz ljmp or cmp add add jne sbb gs and mov jne jne add std add add xchg adc add add scas add add add (bad) (bad) bndstx lcall jecxz or (bad) jns add add (bad) (bad) push test xchg test adc mov inc xchg out pop xchg rcrl mov mov out addl add add xchg mov cmp push dec xor rclb cmp test (bad) (bad) (bad) incb add into pop bound imul sub (bad) (bad) (bad) (bad) decl movups cmp (bad) sldt add add int3 nop adc inc or jge insl fisubl mov (bad) lcall pushl or ret dec sbb add dec rorb inc imul pushl adc add call call add add inc pop push push addl push test mov mov sub stos mov addl add add ficoml addr16 inc es or add add je (bad) (bad) dec es filds mov push sar add push add jne or push add add lods mov mov (bad) call shll and clc dec addl shl add push add call mov je mov pop add or dec add push adc push add inc orl adc addl add hlt add incl popa decl lea sar addl orb aaa jae pop xor mov add call call imul and add int3 movsb jne rcr insl ds in cmp xlat int3 int3 int3 int3 adcl imul orl mov fldl insl or xchg shll adc add add xchg jecxz add add add add add sarb pop adc std cmp stos xchg add call ja pop or (bad) (bad) decl mov test push pop and lds pop adc in push push jmp ljmp lret out mov mov add and and popf push cmc pop sub mov loope and lea inc mov jne jne add jo add add call pop jae dec mov das adc cltd fisttpl fiadds xor call add add add std stos ljmp dec out sbb add add pop lahf mov add add xorl mov lea dec push pop pop test push lea xor (bad) incl add add add mov rol sub stc mov and imul inc or jl and xor cmp rol fistl bound push push jne fidivs jne xor pop icebp daa push movsb fwait xchg push and (bad) cmp xor add add pop int3 add ss fs jl inc xchg add add add push push jbe pop inc push push push (bad) (bad) incl incl addl data16 push popf (bad) and jp inc (bad) (bad) (bad) (bad) jne shlb jne fldcw outsb in fmull (bad) (bad) call push inc adc leave lods out gs push add add add cli rolb repz add add pop cmp ds xchg test jle push dec inc adc ret sbb add out lret add add (bad) dec xor sarb add add and fstpl and push cld icebp rolb mov add push orl mov lea ret call inc add test inc in call xor add inc mov pop push cmp jmp test incl add call mov mov adc mov add and dec inc (bad) cmp call cmp sarb adc push adc inc jmp pushl inc inc dec add xor dec mov add add cmp testl int3 mov (bad) dec cmp cmc xor outsl sub add add add add add test mov into push xchg fwait (bad) out push repnz shll mov ficompl or add mov add add insl jne jne pop xchg pop adc xchg add sti mov xor cmpsl jge jecxz aaa sbb xchg push cmp mov lods mov mov xlat (bad) js fiadds ja (bad) decl jge (bad) (bad) incl add push sbb add mov mov addl out mov rorb decl mov or mov jne jne fistpll jle daa into lea movsl or add add and and add and call jne mov call mov mov adc mov xchg sbb call add add add jge push or or mov orb pop add add add les add add mov ret (bad) sar (bad) (bad) (bad) (bad) jge adc leave adc push mov pop and lea add add mov mov add dec mov pop cs inc sbb add xor sub sub out push push pmullw leave (bad) (bad) (bad) sldt cmp add add test or pop fistpll out dec iret notl popf sub add mov add dec dec (bad) jg dec sub iret jo pop add (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov (bad) decl mov mov xor cmp enter adc dec insl in cmc fwait jne jne call call push or cmp add out mov sbb fistps outsb movsl sbb add add mov push xor int3 cmp and inc jge push mov mov add push mov dec fildl xor (bad) dec test inc mov jne inc jge push mov and add (bad) (bad) (bad) (bad) incl add xchg add add add jno scas in ja jg jmp dec hlt fisttpl sbb aam in add lea cmp sub mov add add jmp rol mov mov or add add pop stos or and js sarl xchg xchg ret or push push push add (bad) int add mov scas adc push xchg sub gs inc jnp lods cmp sbb scas sub sbb mov and decl mov push shrb adc mov leave xlat roll mov mov mov jmp mulb orl add add add add add lea lea mov push xor mov inc pop cmpsb cltd add add and iret and and orb icebp lahf and mov or (bad) (bad) (bad) paddusw (bad) out pop incb add add add inc adc inc (bad) (bad) (bad) (bad) decl cmp add pop inc test loopne test inc mov leave shlb jne add mov in call hlt inc push cmc dec jmp mov call addb (bad) jl mov jno mov jp xorl shrl xchg fdivl inc pop fcmovb mov add mov add and pop dec cli or xchg push shlb mov test and add add add iret int3 int3 int3 int3 push jbe int3 test add pop lahf test jb out iret ret idivb xchg add int3 int3 int3 int3 int3 test test (bad) call test popa in cwtl addl cmp mov adc pusha test add add add add push dec add push push popa adc sbb gs ret mov js jle popa jnp jne jne push push lock mov jmp add cmp inc adc addr16 pop outsl sar add add add fildl add add mov and mov fiaddl xchg cmp fildl xchg call call sbb cmc movsb std push clc add add ja outsb xorb scas (bad) xchg roll push pop je mov or add add call xor mov add lock add or inc (bad) push call add cli push push jb xchg mov or (bad) call add jge (bad) in add push xor incl incl jmp cs je call or jle mov test sub mov scas or jb add je inc (bad) mov inc add (bad) incl inc inc push sbb push push rol aam jb sub mov xchg sbb popa leave push rol je lea pop and insl (bad) lret xchg out ss stos add add add aaa sub add add add add cmp dec add jne jne (bad) cmovs int3 jno (bad) outsb sbb mov jns jne add xchg add add add fistps cltd loopne dec and dec mov add inc or lods lret xchg inc jge inc inc inc inc add add add rolb add add jecxz incl addr16 cmp es mov rol faddl rolb add add (bad) (bad) sub pushl mov popa (bad) sldt add add add jne addb add add lcall sub add add rcr xchg or push mov mov test adc int3 inc adc xor lods jl xor pop (bad) cmp je,pn ja mov add add add lea lea int3 int3 int3 jne jne add mov in add pop adcb daa aad pop cmp add mov add add test mov jecxz jae fldl add add stos mov mov call push jge xor call insb mov shl xchg mov idiv decl call call sbb sbb mov sbb out int3 ror out mov dec mov rol add clc add add add add add jg add std pop ja pop xor and inc js push push push push jecxz das push addl add rcl je inc mov add jne jne xchg inc test add inc inc call sub rcrl pop push jne ljmp loopne and jge adcb add add jmp sbbl add push push add mov add jmp add aas lahf lahf lret add add add lds add add add jne aas jmp into add jge fwait ja jne jne mov mov fbld ror sti cli or adc (bad) (bad) (bad) decl and cli adc (bad) (bad) (bad) (bad) decb adc mov or or lea lea std out outsl mov popf (bad) test xor sbb (bad) cmp addl (bad) (bad) decb xor xchg jp das sub lea jns call bound lods cmpsl andl and (bad) (bad) incb adc pop add push mov (bad) (bad) (bad) sldt mov lea jp sub fs mov mov cwtl (bad) lcall call or or add loope add add out test and mov dec push leave and lret add add xor int3 int3 lea cmp les push push inc call decl push call clc add pop jb xor xor mov add inc push sbb add inc mov inc je clc in in je add mov add jne (bad) (bad) call shrb add inc mov addb je test pushl add add addb sar out ret push jmp add add sbb incl inc add jmp out outsb bswap sti loopne lea int3 add fcompl movsb add add add cmp add add xchg add add push fs xchg fmulp daa cmpsb adc xchg pusha dec jns pop loopne push push pop sahf (bad) (bad) (bad) cmovs mov mov mov jge out push pop negb (bad) xor loope repz add add add fmull mov push mov mov cmpb sti xor mov in sti jmp mov jmp into add add test jmp call mov aad sbb test pushf add add sub mov xor add add xor add into mov cli scas dec pop sub add add add add add add add pusha das jbe inc dec jns into push inc arpl add add dec cli or mov inc xchg aas (bad) (bad) (bad) incl push jp add add js pusha pop push pop int3 jp cmpsb aam stos scas mov add add ja in add ja ja add cmp sub mov loope push (bad) sahf pop int3 jle add mov add add (bad) (bad) pushl mov (bad) incl xchg test roll jne fidivl xor sbb add add xorl xor mov mov es push push pop lcall xchg xchg jp popa mov push jne jne add add push cmpsl add mov add rol ss insb movsl das mov jl fmul dec sub imul and shlb fnstenv jne lcall pushf mov lcall incl sub sarl les sbb jmp and cmc (bad) fs out mov pop stc cmc sbb stc dec and call add add add add rolb and cmc inc mov and xor (bad) out (bad) (bad) (bad) push popa in mov adc jne jmp jg inc jge adc (bad) call inc lea inc stc add leave or adc inc (bad) mov cmp dec push cmovae inc push push xor inc add lock inc sbb test test repnz call push add add add fildl call add je add (bad) (bad) (bad) incl lret add add lahf mov or mov add ffree or push xchg imul add add jnp add add add and and mov pop lock mov and push push push push push add add add add mov add add int3 mov inc insb pop add pop pop cmp mov adc int3 int3 int3 lea lea cld jge sti addr16 jle je add add cmc cld imul je in out ret movsl out test add xchg sarb add add add rol push rol test imul scas lret sub sti cmp xchg test add add add adc adc add add fiaddl test add xorl and and jne ja dec mov mov mov rolb jne mov (bad) pop (bad) (bad) pcmpeqw mov adc mov pop insl sbb dec jne add ja pop mov cmp add add int3 add int3 decl add (bad) (bad) (bad) jns loopne inc (bad) outsb pushf fiaddl cmpsb cmp sbb jg gs mov pop mov add add add add jne outsl or in xor lret and cmp sahf xchg add add (bad) (bad) mov add call xchg dec rcll and cmp add add test add add pop mov pop cmp push mov add add aam and sub aam scas out scas add and and add out push add or jo (bad) cmp inc cmp shrb incl pop mov add std lea addl inc je add sar add mov inc cld add sbb inc push cmp push call call lods loope or inc mov clc inc and incl jmp jne jne jne mov inc mov lret jle daa fs iret xchg popa fstl mov mov jmp add adc or adc mov inc ja add add mov call rcll add (bad) (bad) incl int add test adc dec xchg das mov sub mov decl add dec inc add add int3 int3 and lcall jp jge pop int3 int3 add shl cmp or push das pusha add add add add add add and sbb add sti mov dec mov enter cs add (bad) (bad) (bad) incl add das mov push aam xor pop add push repz jne jne jne test xor jne jne inc jne and dec cmp and call sbb pop (bad) jnp fwait sub push call add add sbb call out mov scas sbb in sub fildl notb xor (bad) ljmp push push xchg mov inc xchg adc inc inc add add inc pop adc imul hlt iret cmp push lret xor lds add mov cmp mov mov aam jecxz out add or jmp incl (bad) call addb inc sbb push addl stos add roll add push adc (bad) cld inc cld xor data16 je pushl enter mov inc clc cld push mov mov add add lea lea call xor mov and inc insb scas dec or push cmp icebp addb lea (bad) (bad) sldt add cltd xchg inc sub or popa mov arpl add add sub xor setl mov add add movd push push cwtl dec negl rcr call lahf mov pop leave and mov pop mov add add add add cmp inc push pushf sbb loop add add add add shrb add mov add add add mulb add mov rclb add add add ret add add xchg xor movsb movsb out fcom mov push sub (bad) (bad) (bad) sysenter cwtl dec jle (bad) rorb cmp psubsb call add ss add add add or gs or or add pusha add push or movsl (bad) cmc sub int lock incl add push cmpsb inc pop jne inc jmp je or add add or call rorb addb fisubs mov jne add xor dec or inc adc rcrl push add add movb add adc rorb add mov jae add mov dec inc push je incl jne mov jae add add cld or add add jb,pn test pop xchg and and lea lea int3 int3 int3 pop sbb int3 call push push dec stc dec sti push mov mov add jb inc push add add add add add add mov dec push scas ds lcall mov insb mov add add inc mov add inc xchg add add dec mov cmpsb push jbe mov mov test fldl shlb jne jne jne add mov jmp orb out shl add test jne rcr jne jne mov ja js ja ja add push lds incb movhps fildll xor add add mov bound mov shll ja ja (bad) adc push daa ja add add add add inc inc inc inc inc add jnp add add add ret (bad) sbb xchg xchg cmpsl das pop pushf ret pop lcall lea xchg lret inc and test sbb sarb mov dec inc add add cmp add add cmp push add sbb dec cmp adc lret add add add add mov movsb dec pop cld jnp push xchg jne add jecxz jae in frstor enter add add add add pusha pop add add lahf adc imul imul xchg paddb inc inc inc mov cmp bnd adc incl dec hlt mov push testl test orps add incl out (bad) pop and cmp add add push mov and test inc loopne add leave call xor inc inc add test orl subl clc add jb ds enter add jo jne push and push jne add mov pop mov add pop orl fs mov jne jne jne add dec pop add add add or add add add add icebp scas ss mov push or jae add add pusha lcall pusha fldcw mov xchg mov dec add add jle daa add xor sarb test push sar push add add add mov dec (bad) push xchg xrelease xchg sub mov lock or xchg es (bad) (bad) (bad) jne xor fnsave mov popw mov aad je jne jne rcrl lea add add push (bad) pop add jne jne add pop fmul insb or adcl fisttpl add add add (bad) ljmp push (bad) incl add leave mov xor ret popl add push mov push inc mov add add add add add add add add sub test jp aaa pop shlb ljmp add add add add add shlb mov mov sbb add push push push push push add push add (bad) (bad) (bad) cwtl cs decb mov pop add popf sbb ret cmp in imul shlb and mov and and mov (bad) mov into int3 enter add add mov test push push push push int3 int3 int3 sub int3 int3 add add add add scas add add add pop xchg divl clc xchg jg cld clc inc movsb or adc add jne fiadds jne jne add bound lods aas lahf or lea and or jmp and xchg pop add add and add (bad) (bad) (bad) sldt add popf cmc lahf arpl and adc add inc push sti add adc call (bad) and xor and xor add or test add call or add call movl add add add rolb cmp cld push add add inc add cmc orl add mov add push data16 add or sub push mov add add into add add add fidivrs dec and outsl xor mov push addl jl dec imul push bsr cmp (bad) (bad) jge lea arpl and inc cmp push (bad) hlt xor inc bsr add add adc add add add jp js jo fwait or outsb in xchg add rol rol add add add add test mov inc imul dec movb inc sbb jg mov add add add sub xchg xor xor add insb shrb sbb inc inc push nop add add add mov mov inc mov mov inc imul adc std data16 (bad) cmpsl jns inc add add add fsubrs (bad) pop int3 cmpsl dec cmp add fcomi das imul add fisttps loopew,pt jne jne jne add xor mov lret xchg jns cmpsb fmulp dec xchg fistpll stos add sldt add add outsl cmpl push out sub mov inc ss sub aam in hlt push jnp jne jne add add add add add pop cmpsb push push pop addr16 push or cmpsl cmp rcr into inc push sbb dec add add cs add (bad) (bad) (bad) (bad) (bad) (bad) decl out jp outsl imul jge inc (bad) incl add add int3 int3 mov sub int3 int3 jne jne add add enter add or int3 outsb imul insl mov mov add add rcr cmp std imul push inc cmp push mov cld call adc sar add (bad) call movzbl push es push mov mov xor add incl add mov adc mov add jne adc in jns loope jmp jmp add add test push cmovs cmp add jge adc add test call cmp fucomi (bad) call add fwait mov decb (bad) ficompl xchg add (bad) (bad) (bad) incl mov addl add pop add add and test adc (bad) fs mov insl ret adc and push and inc inc inc inc test (bad) push js ret outsl test add add add cmp push push push inc inc mov or mov movsb int dec (bad) dec inc inc add add add add add jp icebp sbb or add sbb sbb cmp adc ds add xchg les (bad) (bad) (bad) incl test xor dec push mov std cmpb cmp add add dec incl (bad) (bad) (bad) (bad) dec int3 int3 test pop bound cmp std xchg ror int3 add add add mov ja call call stos add add add (bad) (bad) popa mov rep jl lcall enter cmp xor (bad) in jg rorb add mov jge mov movsb arpl push add call mov mov (bad) (bad) (bad) (bad) call call inc mov dec pop lea add mov and add add jp movsl cwtl cmp testl add (bad) pcmpgtw cmp mov add add add add or jmp cmp sahf jbe add rol rorb (bad) int3 int3 int3 sbb mov shlb int3 mov faddl daa xchg fdivrs mov push and and push dec push push pusha inc mov xchg sbb cmp lea arpl xchg inc ror imul pop sbb add add add and in cmc dec lods idivb xchg (bad) (bad) jmp lds push lea mov add push or cli add add (bad) call add testb add addl add push ret jno mov paddq or pop add inc rorb xchg scas (bad) cmp lea (bad) (bad) cmp cmp adc call add add flds decl decl (bad) cmp dec inc pop inc (bad) incl insb add cmp incl add add (bad) je inc adc add dec push cwtl push add add add sub add inc add (bad) inc inc inc inc inc sbb imul mov leave push pushf cmp sbb andl movl shlb sbb pop sub add xchg add pop js lret add jle jmp pushf test inc inc add add inc or add ja test push pusha push jno sti sti out pushf lcall shl pop dec adc xchg add add add mov aaa jp ss add add mov push mov add add outsl mov call jmp xchg mov imul push pop test cmp (bad) (bad) (bad) (bad) (bad) (bad) decl mov or scas sbb dec icebp adc add cs bound fwait movsl adc xchg add add test and jne pop jne jne and xchg icebp mov xor rcrb jmp add add add add add jmp outsb jmp int popa mov add jne add add xchg add add decl jmp push mov lock hlt cs (bad) (bad) incl stos cltd add add imul cmc cmp mov test (bad) pop repnz mov call and call incl add mov xor cmp or insl hlt stos test mov add add adcl jl insl jbe xchg or or cmp mov add add call push push push add jge mov mov sbb mov cmp add add add add notb and mov and sub mov inc mov nop inc mov cld inc xor and add add add add ret pop push je (bad) loope mov jge sub cmp push mov push push in jo (bad) (bad) (bad) incl add push push cmp inc mov (bad) jmp call rolb clc mov xlat mov adcl dec push push pop and inc add add push jne push or cmp adc and push push jne aam clc inc std cmpsl mov cld incl cmp in xorl mov (bad) mov xchg sti data16 div sti outsl (bad) sldt add add mov mov mov rsqrtps or imul mov ficoms dec adc popf addl add add roll imul jae pop add add pop mov mov xor jne jne int3 int3 int3 sarl pop int3 int3 call add mov test pushf jb mov outsl cmp repnz mov and inc mov imul pop xor enter mov xor add add cmp add add add movsl mov pop movsb ret cmp cwtl mov add add add mov pop dec mov cmpsl dec sahf sub add add dec push lea xchg data16 push clc add add add mov add add xchg push cld test push mov xchg test xor stos icebp cmp int3 int3 mov push int3 or or or lods insb adc lds push pop xor test call jbe jne jne add pop ret add add mov mov dec cmp push sbb test popf mov add int3 mov int3 push push insl imul cmpsl stos or push add add daa push pop fistps sub jp add adc add push add clc add push push addl call mov cmp jge jmp jle call add shll jne incl push xor mov adcb lea inc inc inc shl incl sub lock add in add push data16 cmp jne test add je sub nop orb or inc dec cmp decl xorb or adc inc inc adc call add jecxz add add add add or ja ja add jae dec or jno fistpl sbb rolb imul add jne dec popa jne jne (bad) std fcmovne xadd sub mov (bad) decl mov add add mov test add jmp cwtl inc ror cmp sbb or add add add add jbe cmp repnz xchg arpl into and pushf fwait decl stos js xor ja jecxz push call xchg push push mov ds enter js in insl aam leave cmp xchg ss or dec mov xchg aas insl push adc cmp add add add add insl mov ret mov dec and (bad) (bad) (bad) incl adc cmpsb enter pop dec xor pop lcall mov fimull inc dec nop dec pop dec cmc test aam in add add into out jl mov (bad) sub lea add call addl mov sti mov or movsl or lods std ljmp lretw stos notb sub add add add nop decl and mov imul lods dec add add add add add add mov mov cmp dec adc mov add call (bad) call int3 int3 int3 jnp jle insl mov idivb icebp int3 int3 call jae fwait push jmp sub call mov add add add add jge movsl pop mov xor jmp js add add in call jne jne add sbbb (bad) pusha pop sldt add add add add add add add jle add add mov pop inc rclb add mov xor push mov enter jne sub lods or inc sub add fwait add movsb or (bad) dec add push mov clc mov add call or adc addb (bad) cmp cld jge data16 call inc xchg test push fnstcw jecxz add add mov mov sbb add add lock fs enter add add lea lea add mov cmp xor call mov jo movsb cmp jb aas add add add les xor jecxz mov add add int3 (bad) out xor int3 int3 int3 add (bad) (bad) (bad) (bad) je dec (bad) (bad) (bad) (bad) (bad) incl add pop loope push sub aam mov out xor or add add add add and shll push js dec adc in mov push repnz (bad) test push push lea test lea pop jne jne movsl leave sbbb sti sub (bad) rcl das pop xor cltd xchg imull add add mov add add (bad) (bad) jmp repnz fwait jmp and or int3 int3 int3 int3 (bad) pushl (bad) incl test add add add jne je enter aad jge jp call add add add add add cmp (bad) fimuls fiadds ret adc data16 add xor pop or fmuls shl call add add in cmp add inc mov decl pop add in push aas inc jmp add pushl test dec jne adc pusha sldt call je inc push pushl add add add push push mov push mov call call pop nop icebp sub xchg xchg add fstpl aaa pop das mov push add add mov jg shlb adc pop dec pushf mov scas mov test inc rol rorb add add fimuls enter inc imul imulb cld iret lahf mov add (bad) in push (bad) (bad) incl xchg or or mov add popf sub jae pop sbb mov add add add jecxz add add add add test cwtl sub mov stos inc addr16 orl inc sti adc call xchg call add push mov aaa add dec add push add push push add and mov xchg iret mov inc ret jne add lods and lret out pop lea pushf lea and push xor pushl xchg leave mov or inc (bad) clc mov jns in mov add mov je inc push insb sub (bad) call andl push and add call xor push incl jb add jns inc jae push add lock jge jne add and jge test fisttpl or shlb gs jmp add add add test inc cli call inc inc jge jne or pop mov (bad) (bad) (bad) mov or scas push jg decl add add sahf dec add push push push push push add xor add mov and xor mov pop setno or arpl cmpsb jbe mov mov in clc cmp in cltd (bad) jmp (bad) (bad) jge lea (bad) (bad) (bad) jmp int3 int3 int3 int3 add add pop push (bad) push jmp xchg scas in daa nop jecxz rorl add lea (bad) (bad) (bad) lcall out and xchg dec loopne push (bad) dec push add lret (bad) pop sub cmp int3 int3 int3 int3 and dec je and and cmp test pushf inc hlt into push sub leave add fbld stc (bad) (bad) (bad) ljmp jne jne add add jecxz add push jno push push add call add repz add jne imul call out imul adc xchg cmp movsl cmpsb cmp mov call shll cwtl decb add add jb pop mov dec mov pusha push cs add (bad) (bad) jmp int3 int3 int3 int3 int3 add jg add add add jecxz mov lock cld addb pop stc pop ds add fdivrl dec std cwtl add add call pop push cmp fcomps xchg in (bad) sti (bad) mov (bad) (bad) incl mov add add dec addl sub call add (bad) fs clc insb hlt xchg in mov ja ja push push testb add add rcl cld scas or (bad) or add sahf js aad pop jae or push inc jg add add wrmsr mov (bad) (bad) jnp mov inc push jge pop (bad) pop imul mov mov push (bad) (bad) (bad) (bad) movsl inc sldt add add test test iret xchg push out add lods mov mov push push jb push psllw adc (bad) add je call push mov add add mov cld fsubrs or sub movl sti rorl es xor add test inc gs lock add sub sbb mov add test enter lcall cmp push in (bad) fcoms jne add sub add add inc inc add and and add jne jne mov xor (bad) (bad) (bad) (bad) jne iret idivl icebp aaa fldcw fstpl inc outsl pop push out jnp add add lea shl cwtl mov adc jne jne dec xor mov pop push mov add add add inc mov add add dec add add call fcmovu sub mov cmp (bad) lods int jecxz and mov mov (bad) loopne add jmp rcl pop mov mov (bad) (bad) inc mov rol jbe mov mov call test adc arpl lods dec std jae jno es dec loop test add add (bad) lcall (bad) (bad) incl add push cmp add (bad) data16 push jl add mov mov dec mov lea mov loopne test and outsl xor ja fisttps dec xor jno or push push lods ds add add mov inc jle sbb xor add add add neg push or add ret sldt orl orl divl push js add test mov mov mov test dec xchg pop jl in push jb add add mov pop lods cltd mov cmp add add add or repz lret or add add dec rolb add add add or not leave dec loope test adc xchg push pop xchg flds add jns (bad) add add add pop in outsl test add add dec fisubl (bad) call add sub add add add loopne xchg cld rorl cmpsl push inc xor data16 jmp sub add add call add add sub jle sahf add daa stos or push mov sub je call inc mov adc test mov loope js push cmovbe call (bad) sti jne push inc mov addb add mov jne add xor or add fwait xchg inc cmp or push add add rol js aaa push add jne jne inc jmp inc inc and popa and and lock cmp fimull mov inc cmpsb and xchg add add jg lds sub mov arpl mov add (bad) (bad) (bad) (bad) sldt shr add add add mov add mov cmp notl rcll adc leave fs ja ja mov mov icebp dec push xor add add je lahf sub mov xchg out add add add addl addl add add mov jne jne and mov mov xchg fisubs (bad) fstpt mov pop jge push sbb push dec lahf mov jbe cmpsl sbb fadds cmpb lea jl lea add add rcrl and (bad) (bad) call mov inc pop push mov or cmp (bad) xchg dec pop (bad) (bad) (bad) (bad) (bad) (bad) dec int3 sub int3 int3 add add cmp and and and test mov push cmp ds int3 int3 sub xchg addl dec xor jne lcall mov push add stc (bad) cmp mov call add jge push decl hlt inc push inc lock adc int add (bad) xor add add and cmc test loop cld xchg dec push xor nop ja fdivr (bad) out shrb call (bad) (bad) (bad) (bad) incl add loope cld jmp jbe ss add add add dec or call call add add incl scas jb adc push mov push or out je sbb (bad) (bad) decl mov in jne mov cmc pop (bad) int test pop or pop ds stos xchg aaa mov add add addl addl add add add mov add add add mov or cltd call sbb add shrb add add clc in pop sar mov sbb add add add pop or push repz add pop call and and add sbb sti inc (bad) mov in (bad) push or aad sti add movsl add add add aaa mov jo mov add inc xlat inc jne add push mov adc and adc (bad) lea incb push or push add and call repz inc pop inc je push add push or push add rclb push jno or insb add int3 or iret inc add mov int3 int3 int3 mov mov sbb add add push lock xor xor insl dec jae cmp jb stos (bad) (bad) (bad) inc pop in incl add add mov adc ss add sub add mov mov inc mov push aaa add add int3 aad (bad) (bad) js mov out mov int3 int3 int3 add add pop or mov lcall lea xchg push mov outsl lds mov jg add add add mov mov add mov mov mov movsb and mov push filds and add add lea ret lcall lea fs leave (bad) (bad) (bad) (bad) fsubrs add add pusha fadds add add add (bad) bswap xor adc or jl add and (bad) or or addl (bad) (bad) (bad) insl push popf ds inc jle mov mov or jl push sahf pop test pusha (bad) (bad) (bad) decl enter rolb or mov inc call cld leave sub inc or add je push push dec inc push add data16 add cltd ret (bad) adc push incl xor test push add incl add in push add decl adc lea lea icebp adc push pop dec nop subb pop xor cmc imul ret add add add push jp in loop pop lahf int3 fstp push inc mov push (bad) (bad) (bad) (bad) sldt xlat xor add add add ss imul mov sbb das xchg adc adcb add add (bad) jle in pop xchg push rcl aas popa ss int push insl mov mov repz add add add add add add add in popa or sarb inc nop adc insb sbb fcompl add add fdivrs cmovle lea pop push push (bad) (bad) (bad) punpckhdq ret stc adc push ja add add mov add add add cmp (bad) cli push rclb out loop les mov mov mov vpsubusw push and enter add and add call push cld jg add add add add je add add rolb xchg cmp mov orb cmp add add ja add (bad) (bad) (bad) incl inc push add lea inc dec incl inc fs mov add je push int (bad) (bad) mov data16 cld addl call xorb decl inc or in fiadds mov pushl inc pavgb (bad) decl test sbb add push add xor add inc push xor outsb jne clc push aas mov xor mov push test add rcll call add decl inc insb add movl ret add mov and add (bad) cmovb cltd sub inc inc inc mov mov pushf mov push push push or pop xor nop rolb fs mov or or rcr call jge sub in outsb lret mov sub and dec jbe push dec inc mov mov mov or add push push push jno ss push loop sbb je enter push push add cmp add add mov in (bad) mov lea xchg add add and add add cltd rolb add add add (bad) call scas and jl pop divl incl inc inc inc add cmp lea mov mov test movsb inc das aas lea jge dec xchg jg sbb stos repz ja jnp ja ja (bad) jmp (bad) (bad) (bad) call inc mov fcmove inc add xchg into arpl add int faddl add add add cli jbe jo,pt lcall lea add jne mov pop add add inc add add (bad) (bad) cmp dec cmpsl out xchg ret clc outsb nop sub leave lea bound adcb xchg push sub cmpsl and pop add add jne sub pop out sti and aad dec add push push push add add mov int3 int3 int3 int3 and into adc and (bad) call cld addr16 jno pop outsb dec jmp sub sbb lea test lea inc pushl inc push shrb in pop cltd add add rorb rol mov out add addl enter or xor add add add add sub cltd jle adc pop jne add add sbb addr16 mov subl dec jp call imul jo repz mov shrb inc clc cmp xor mov and inc inc (bad) clc mov jne decl mov push jno push or incl xor add push xor shlb call and decl inc add add inc push shl add jmp add mov cmp inc decl push push lods pushl ds push cmovbe or pop mov sahf mov and and add add repnz add inc je scas xorl add add nop leave cmp (bad) (bad) mov fnstcw cmp jne add inc ljmp sti inc ret dec add add add or add add ret scas and popf jecxz add add ja ret inc xor loope mov daa add add add add add mov add add add mov push mov lds mov adc mov (bad) roll add mov ficoms shl aad xor fs jne add add mov jne adc add add add call xor dec es aam mov add add (bad) incl (bad) (bad) (bad) (bad) (bad) (bad) fsubrs mov leave adc (bad) incl pushf (bad) sti mov inc lret lret add add sti mov call (bad) pavgusb aad out dec in sub adc lds sub (bad) (bad) punpckldq mov lea sbb js pop adc add add add add add mov add push sub push mov mov push sahf iret cs mov subb sub jne dec jne jne sub or adc or movsb mov cmp cmp inc jle addr16 add push test (bad) (bad) (bad) ud0 cmpb incl add popw jae push jge mov mov insb es add mov add add pop push add add test push out scas clc ud0 rcpps sbb mov addl push (bad) push push pushl js push inc or addl sub add add mov addl mov (bad) movl push push cmpsl mov je sub cs add sub lldt (bad) sub test test lea add add add add jne jne add mov mov int3 sub sbb pop andb (bad) (bad) (bad) (bad) (bad) call or (bad) incl add test shl adc cli cmpsb push mov add iret sbb outsb jge inc (bad) cmc sub sub add add je mov cmp pop (bad) hlt notb cmp jno (bad) hlt dec mov int3 orb add call scas sub shll adc jne jne add sbb dec xor mov mov in mov bound fnstsw add stos adc addl add add sbb push inc pop jmp add and (bad) xchg pop or sbb add and add add (bad) (bad) (bad) aas jo (bad) incl inc inc add fidivs (bad) decl xor fmul lahf sbb fcmovb in ljmp adc (bad) incl out jb add add push pop out dec sub (bad) sbb int3 int3 int3 int3 add add add mov pop mov add add add add push mov sti or iret cmpsb push dec insl add add add add jbe inc inc inc add add push xchg addr16 insb call jne iret les shl or xorb push add xor add add dec pop add call inc add cld mov add add mov add (bad) incl add inc add mov add je or decl ud0 inc add mov mov icebp add inc push rol adc les jne add mov call call repz ret lcall out test clc dec add add and add add ja mov repnz mov inc and and and ljmp jg (bad) (bad) decl mov add add and fdivl mov shlb loopne not and and jne pop jne jne cmpsl int xchg mov js or (bad) (bad) pushl jno and fsubs fldcw add call iret call mov (bad) (bad) decl or aaa xor mov push ficoms and out das jo or ja inc shlb ja call test ljmp sub call inc mov int3 bound add add jl (bad) (bad) (bad) (bad) dec int3 int3 sbb xchg xchg adc push sbb jbe int3 add add add add add (bad) (bad) call mov repnz dec and idiv incl mov lods nop mov (bad) in sti inc inc inc inc add lret xchg add add and shlb and mov int jnp mov adc or int (bad) (bad) (bad) incl mov add sbbl imul sti add push add mov incl add push mov inc push jmp add jmp add orl (bad) call ljmp add or push inc jne add pusha or push movl incl adcl xchg rdpmc clc inc sbbb add add add je test add push sub add loopne push push (bad) fldt jecxz add int3 int3 int3 int3 int3 or xlat test or (bad) movntps add add add mov (bad) cmp loopne dec test dec add add sbbl addl push and add je fildll pushf pop std cmp add call movsl call add mov mov in lcall xor mov bound mov add mov add imul mov add add pop add add stos testl shl add test pop xor mov ret pop push add rcrl test inc mov mov jne cmp and daa lock jne mov in mov mov mov or or or add add add jl jnp jns lods cmpsl lds negl and std xchg call pop cli call add add inc shl (bad) lcall add mov addl sbb add add add add mov idivb mov cmc loop shl cmpsb mov fnsave sbb out mov inc inc inc inc mov dec pop stos add sbb addl add or inc mov push dec scas xchg jbe sahf fsubl inc inc int3 int3 int3 lds add add add add add add std (bad) mov js push add sub loop and je ja pop mov cmp mov cltd mov iret jp not (bad) sti stos test jne jne add push xchg add add jp add add xor dec xor fcom (bad) and fwait pushf jg inc jae mov add add inc push lock (bad) inc add adc add cmp add cmp jmp push enter call cmp add add pushw sti lds (bad) call adc pop add call subl adc cld add add add add add add leave lods pusha (bad) xor dec cs add add subl ret add add inc ret add add jb add add out addr16 mov fldt xchg mov (bad) jo das stc cmp lret call sub add add add (bad) call imul inc push les (bad) call rol mov rol mov mov arpl je add add scas add dec cmp and loope push and add out add add fcompp xor movb out lods mov call jne (bad) and ret hlt or call add (bad) movhps nop (bad) jnp lea lea fs ja push inc push adc in pop ss sbb cwtl fxch adc mov push push push push add lds enter add or add add das add cmpsb add add inc cmp add add xchg add (bad) (bad) (bad) decl fadds jbe fucomp test cmp inc cmp add xor add push in incl mov inc mov ljmp mov sbb jmp sub add hlt inc push adcl push add je lea or add add ljmp push test ror in (bad) cld (bad) push add adc in sbb notl mov push mov add call call (bad) sub adc cmp push call push into push mov inc imul addl add add leave pop add add and mov cmp adc pushf cmp insl adc and and lea push push push push push (bad) (bad) (bad) jg jbe orb push pusha push dec (bad) incl add add add push jmp add add cmpsl dec add inc aas push add inc inc or or sbb sub inc xor xchg push inc add or or (bad) mov push cmp jns jb out mov push lods cltd dec scas xchg in sahf test sbb mov add addl xor call sbb insb repz add inc jle xchg xchg or adc call add add (bad) jmp and and addr16 (bad) (bad) incl scas arpl add add fimuls loope addl add add or lret cmpsl out test push pop (bad) mov add int3 int3 int3 int3 push push cmp push push add add imul add mov pop push add add mov pmaxsw push add add mov add add add xchg add add mov loope mov pop fsubp mov sarl pop xchg in testl or mov addl out divl in or cmp xor (bad) (bad) ljmp add mov inc inc dec les pop add inc add incl inc jne add pop add or je add hlt shrb cmc adc pop sub fdivr loope andl add push push loopne int3 enter mov popf or jnp xchg pop mov (bad) (bad) (bad) incl add add int3 int3 int3 push jb int3 mov inc inc mov pop into (bad) mov push xor out (bad) mov or add add dec js cmp cld lret inc inc inc inc push hlt push jo (bad) call pop sub inc add add add fimull add add aaa loopne add ja ja repz leave stos push enter push (bad) pop push add ja add add int3 add js adc mov mov int3 int3 int3 add out pushf push add add rcrb add dec cmpsb add add add mov test adc pushf (bad) xor inc jbe mov incl add add add add cwtl fcoms es jg jae mov cmp add adc cmpsl scas arpl add or lds push push push push mov imul mov add add sub sbb into mov imul test fadd xchg push (bad) (bad) (bad) push sbb test mov mov ds inc inc addr16 push mov mov and and add add add add inc add add add out xor out adc jmp sub mov mov loopne push xor or mov push jno ljmp add and pop cld rolb leave pushl test mov lcall add push add inc jne pop push movntps inc push (bad) decl push jae add jne gs push test inc sbbb add int3 int3 or int3 int3 (bad) (bad) (bad) (bad) incl add call mov pop lds divl cmp mov cmc fwait lret add sbb add add ja mov jo movsl and data16 rorb ja ja pop icebp out push mov call out call add add mov fildll xchg dec int3 jmp mov add push stos mov push add out push popf frstor jbe nop adc add mov jbe jmp xchg fisubrl ljmp repnz (bad) (bad) incl add add add inc xor mov inc das sbb movsl jb jecxz push push push push or add add (bad) inc sahf in pop dec sub int3 jns (bad) or add add add add ss fisubrl add add mov add mov orl sub xor pop dec sbb lea cmp out mov call call cmpsl scas out mulb and and add add pop xor adc xchg divb repnz mov add add pop xorb mov mov add add add pop jmp add add inc add test add add jne mov jmp movl call push hlt (bad) incl add add call call mulb push icebp movsl repnz mov xchg and pushf jg test xlat pop add test imul test (bad) dec xchg sub dec mov (bad) sbb adc (bad) (bad) (bad) idivl shr sbb add and and dec push or xchg sub orb jb or xchg inc and ja ja ja add add add add outsl mov out and mov int3 sbb adc mov cmp xchg (bad) int3 int3 int3 mov loop mov cld add add and std adc cltd sti hlt add jmp mov push jne jne ss xchg jne mov add mov icebp movl add int3 int3 int3 int3 int3 (bad) (bad) jbe push insl (bad) (bad) incb test jne jne call cmp ror rclb stos call inc daa add add push add inc lods add sbb in add pop in pop push lea inc ljmp add add mov inc mov inc add orl push add cmc mov push jmp or (bad) in jne inc cmpsb call shrb push cmp dec or jmp sub cmp inc push decl or add adc and pop dec mov addl cmpsl xchg fwait push arpl repz add add call call mov mov repz jae or lods xchg fcompl sub pop push mov add in flds add add shrb dec sub ljmp lahf jae ja ja test test add add dec add add add add scas jns sub push jns mov lea add mov add add push push cltd ja test push addr16 in jns dec jg push ja pop push pop dec test xchg add ja ja lea stc lea aaa int3 int3 int3 int3 cs add aas nop in cs pushf mov or pop (bad) pop data16 jne outsl pop mov add rol div aaa jmp out mov mov rolb add add int3 mov (bad) out int3 int3 int3 add add jo add mov jg repnz stos imul push xor jp add add and pop and and sub mov xor popf adc and add add je ror jnp dec adc inc mov add mov mov add call call movsl jge sbb mov mov or aas incb add mov xor lahf dec int adc nop mov push add aam lret mov add imul mov jne,pn ss lea add mov inc add sub notl add or add add dec clc fcompl add cmp rcll dec dec add add jo,pt push push lret mov add add add cmp loop push bound daa ds outsb add mov shlb call jmp mov and call icebp jno cmp mov rclb test mov incl test push and popa sub xchg mov mov (bad) (bad) inc jl decl add fisttps jb and mov maxps mov aad add add mov (bad) (bad) (bad) incl xorl push scas das (bad) mov jnp add add call call mov and jno and mov dec ja add adc mov add add dec add add add add add add add add fimull xor add mov pusha stos lock insl mov add lcall (bad) decl sbb aaa sub addl lea fimuls add add mov mov adc add add lods test add dec roll or mov inc clc add je xchg add add lea adc jmp je add add or pop inc add cld mov push mov inc orl cs sub cmpsl movsb int andl add call call add ret popf movsb cmpsl sub sbb add mov lret mov dec mov mov add add add add in xorb icebp inc xor xchg jne or pop (bad) (bad) (bad) decl bound call sbb or mov icebp sbbl (bad) (bad) incl cltd test pop into (bad) ltr xchg lods add add add jg pop xor jg rorb call add add pcmpeqw (bad) (bad) movups dec lods xchg nop cltd dec lods xchg sbb out mov stos sbb mov mov and dec mov push push push add add and add add add add mov add add insb insb mov sbb sbb aaa stc mov popa sub add leave mov add inc cmpl add rolb mov add inc ret lcall cmp mov jne mov sub push sbb ud0 jne push inc sbbb addl or (bad) call add mov push add sbb jo push call cmovo inc or pop lock add mov inc push leave sub enter mov add das inc add add add add add inc mov addb add add add arpl pop sbb ret or sbb cmc add add add add add rorb jb int add mov add es stos add add add add or or or or repz mov hlt lahf and in jnp (bad) scas mov je add addl inc pop sbb mov in addl add pop dec mov addl add fildl add add addr16 push xchg jge (bad) es aam mov add add add add lds insl aad outsb xchg pop ja cmp popf inc inc inc inc lods stc adc dec push xchg (bad) inc (bad) (bad) (bad) (bad) pushl jne adc test add add add rol jg popl int mov movsl rolb sub push enter xchg cmp xchg pusha add add mov sbb adc loopne mov mov xchg stc and jne sub add add sbb push test add insl adc xchg popf xchg inc sub iret and aad ret add add push jmp add add aad stc aas or pop insl inc add xorl cmc and jmp aad mov addl call jecxz add add ss fidivl insb jnp jnp clc addb decl scas jmp cmp add add add add mov cmp popf sub mov push adcl mov in add sub lret mov push les sub pushl mov sti fcmovu incl incl testb mov punpckhbw lea jae add hlt add lock add add push pusha add add push or subl dec inc add dec xor mov mov lcall add cld rcll push add mov mov xor cmp leave call insb cltd lcall mov repz add incb dec inc cmp mov cmp repz call and arpl dec lahf insl call inc add add xchg mov add add add add add add into lret jg sub and dec cli ljmp popl sti add test pop jmp test or mov popa movb add call call fdivl ja pop xchg loop add add add adc call dec bound loop lret add add add add add add add inc call xor mov loope mov adc xchg mov dec adc mov mov pop sub xchg ret stc inc jp or jae adc inc aaa sub (bad) (bad) call ret add add add call jns xchg xchg sbb test rcrl scas call jne and (bad) sbb and (bad) bswap xchg (bad) ltr jle add add popf mov ja stos add movsb mov addl call inc xor mov fldenv andb jne jne pop and add fwait and jne add add add add lock add (bad) (bad) (bad) (bad) (bad) (bad) (bad) repz (bad) (bad) (bad) decl adc scas not popa cwtl inc stos in stc lds cmpsb inc xor xchg (bad) call call fstp in cmp incl pop mov or add add xchg addb mov and lahf push inc inc std dec push inc movl ret sub out add cmp push scas data16 lea or jne mov mov mov jmp (bad) incl inc neg or call inc lcall cmc add hlt ljmp test inc add sub shr and rorb add test cld add shrb or add call or jne jns je add add add rol rclb cmc in mov push popa inc add and lods dec add rolb or sbb or add cmpb push and add xchg mov mov add add add add add add insl mov xor dec leave dec xor enter push je push rcrl lea (bad) (bad) call mov data16 mov dec popf adc lock (bad) call (bad) inc jp (bad) (bad) (bad) (bad) (bad) (bad) (bad) aad (bad) (bad) jne ret jne jne pop aad enter js cwtl adc or jne jne sub addl (bad) xor aam add mov sub inc ficoml mov add add (bad) (bad) incl lds add add add pop add add fwait repnz xlat in or mov lea adc mov mov or test imul jnp int3 int3 int3 add lcall lahf add add sar add (bad) (bad) (bad) decl cmpsl iret or fldl add lea xchg add addl add add xor fdivrs sub imul xchg pop sti cmp sbb js (bad) (bad) (bad) (bad) incl aad int3 add add add jmp add add sub mov lret sbb mov pop mov xor add pusha aaa hlt add add sti cmp add add mov outsl shl xor xchg dec mov add add add add test sub test out aas loope pop jns (bad) adc pop pop in sub lcall or sub in shll in cmp mulb enter dec pop shrl push sahf sbb mov (bad) (bad) (bad) dec int3 int3 push dec xchg int3 int3 add add add jmp sub lock fcoms cld add lock push mov lock add lock add push je decl cmp inc push push mov add sbb xlat out or cmp mov mov call inc adc jb add inc add adc adc orl inc jne inc sbb call fsubrl (bad) data16 or pushl call rorl fidivrl xlat push adc pop jb sbb cltd fmull push mov addl jl cwtl icebp mov or clc inc (bad) or add add add add add lret add mov addl mov pusha mov add pop add cwtl mov mov lea fsubrp js and xor pop in fisttpll dec gs pop add enter mov add add add mov add add lahf ret test sbb mov test fstps repnz cmpsb (bad) (bad) (bad) (bad) (bad) incl add cltd push test dec test or add call add aaa inc add add int3 int3 insb dec int3 subl addl sti dec cmpl inc dec jp jns mov add add cmpsb dec das mov (bad) loopne push adc lea js fildll add (bad) (bad) (bad) (bad) incl add cbtw mov add int3 int3 sub int3 int3 (bad) (bad) decl jmp mov jl add pop imul insb mov (bad) decl lea sar fnstenv jge shr (bad) cmp add add add stos int3 add add mov call lea add fnstcw dec addb pop xor in push pop pop mov add add (bad) cmp add add pushl flds sbb inc jnp and add mov jne mov rolb add add pop add add mov add add ljmp imul or mov cmp pop adc add mov and je add fdiv (bad) add clc add test push or pop push push cmp pushl or inc add or xor jne sbb push pushl add add lea add sbb mov rol add mov add and and (bad) pusha lock insb lods add sahf daa xor add (bad) (bad) (bad) (bad) jnp mov add xor add mov or push inc jmp or xchg inc add add xchg push shrl lret cs insb (bad) call add aam out cmp xlat push call lea add adc push add add add add ljmp (bad) (bad) incl add dec or sbb cmp aad xor add fs push icebp add jne dec sti jne jne add test dec inc fcoms cmpsb (bad) cmp add add insl xor add add bound (bad) add and inc cmc sub in jl push fldcw add call add arpl add add add int jp push sub add add lcall insl enter add add add out add add leave jl add add shrb mov xor lret adc in and add aad add add add in clc mov rorl adc inc outsl jmp mov add add call add call jo add add or or sbb and into jne popl push push push push add mov mov xor das sbb lea fiaddl or outsb cmpsl sbb jmp (bad) (bad) sldt add push push cmp loope push test mov inc inc decl inc je add sub lcall cmp inc syscall mov inc call adc ljmp lea call add push cmp inc xor jmp call cs (bad) (bad) (bad) (bad) (bad) (bad) fdivrl (bad) (bad) incl add mov sbb cli jmp mov jne dec pop movsl add add jo add add pop and imul cmc sbb andb (bad) pop fsubs lea add cmp incl fidivrs mov stc dec inc and addl mov ja call push adc scas icebp in shlb add rorb repnz add add and mov and and pop jno add add pop sbb out cmp xor inc add mov (bad) (bad) (bad) jmp mov mov leave iret pop pop pop shlb mov (bad) (bad) (bad) ud0 sub fldcw (bad) (bad) (bad) (bad) call (bad) (bad) ljmp (bad) incl dec sub add enter ret lods xorb mov add cmp in pop pop inc lcall jg addl gs pusha pop repz mov adc addl add add imul add int3 shll int3 int3 (bad) (bad) (bad) mov sbb inc in loopne mov xchg xchg add incl test add push je jbe adc add call add ret add pop jne ret mov xor mov push ret add pop inc add add push cld cmp push push add mov add andb sbb cmp or add lods inc inc addb test mov and aam push or inc or adc add add lock aaa incl clc add mov ljmp dec orl insl mov and add add add add out add add rorl add (bad) (bad) jmp pop (bad) or sbb adc cltd lods adc sbb (bad) decl jne jno jne jne mov sbb repz sahf mov mov push ljmp mov push jnp inc add add mov pop xchg mov jne add add (bad) sti mov mov pusha pop or (bad) imul or mov (bad) out shlb sarb in inc ja addl mov fistl mov js int3 int3 jmp popf in (bad) (bad) (bad) call push std bnd xchg test cmp popf lret call pop or (bad) (bad) decl sbb adc ret add add mov repz inc xchg add xor add jne jne add addl dec dec ret adc cld stos mov and mov or push (bad) inc pop addl inc inc inc add divl cmp repz add add xlat int3 add add in inc add add inc insl push add jne jne add fcmove lods and add mov push movsl and add add and lods and and add ret cld adc leave les add add mov xchg dec ljmp add add lea jne jne mov inc mov add add mov sbb add add push or add add add or or fistpl int3 in out add or (bad) (bad) (bad) (bad) decl or ljmp (bad) (bad) (bad) mov (bad) (bad) call mov mov mov pop or xchg mov call add add dec inc jl cmp orb sub xchg dec ret mov loop xchg mov cmpsl mov rol rolb add add lock pop push (bad) ja cld cmp out jns pop adc inc enter call lea push incl enter sub incl inc inc (bad) clc test push call rcl inc mov call pop clc or push andl inc cs mov and jge xorb push adc jns mov je push add or push add push push push push push addl add add stc xchg neg adc arpl into xchg in cmpsl xor add add out add add rdtsc out loop fistpll mov lods sbb iret (bad) (bad) (bad) ltr mov add add add jp jg (bad) (bad) (bad) (bad) sldt add pusha int3 dec repnz popf or out xchg lock mov add mov add out out inc lcall mov insb dec ljmp mov jne jne fisubrs test fisubl cwtl loope les dec xor xchg push and jle (bad) (bad) (bad) incl out sub mov add pop mov lock xor xchg insl inc add in mov add add add mov cli inc add int3 int3 int3 add dec popa incl loopne call xor sbb add add add flds add add xchg cmp cwtl lret aam mov (bad) (bad) (bad) cmovl lods mov jl,pn test (bad) (bad) (bad) incl add (bad) xor add jne jne jne add add add addl std xor push inc adc (bad) pop icebp mov mov sub in call rcr cmc dec fisttpl dec jl mov add add mov add add das push mov add call scas pop rcll test add pop call (bad) sldt mov add add (bad) decl ljmp mov (bad) incl lods cli repz mov lds dec lods add add (bad) push pop in (bad) (bad) (bad) incb addl int stc cmp sub dec sbb inc add mov inc call or push inc call mov sbb add call jmp sbb push jmp xor add sti add push and inc or inc call adc mov push push inc sbb sti mov int3 int3 int3 jb jne add add add push dec mov fucomip mov dec xchg mov add add add add add add add xchg add incl (bad) incl xor stos jno int3 mov inc mov mov jmp mov imul pop inc fcompl sub mov push ret add (bad) (bad) (bad) incl add inc out adc add and and push mov push lea xor push jmp pop push xchg mov mov mull lea add add add mov jp scas test icebp outsl add add test test add add dec ss (bad) (bad) (bad) inc rol test sahf xorb stos repnz (bad) rol rol shlb scas jne jne lea push sub jle jp mov arpl stos push fistps push push xor sti inc fidivl addl add mov add add mov sbb icebp incb or int3 jnp sub add jns,pn jno roll inc dec (bad) flds and and add add pop lock call in xor mov mov push lret jne add (bad) faddl pop les cld (bad) lock xor pop jne or iret push subb leave push mov add fldl shlb jb pop xor gs lea push inc rolb add rol xchg rolb and mov jno push adc mov notb mov mov mov add popa movsl iret mov insb cmp nop or mov sbb mov (bad) (bad) (bad) decl ja mov call jmp (bad) (bad) incl add mov nop push sahf and lret xor adc enter lret add add add lea push fdivr (bad) inc jmp cmp ja push lea jp inc addl add add add add add (bad) xor xchg psllw xor add add add add push cmc lret in and dec pop lods add add or jecxz mov hlt testl les add data16 add add insl cmp xchg add add inc mov add xabort test incl test (bad) (bad) incl sbbl jo inc jne negl push mov call cmovo sub shl inc call mov in mov lret lock sbbl add push fsubr aam int3 fidivl and and inc jbe add add add pop imul jmp inc ret or leave dec test call (bad) call mov mov mov ss in and test cltd orb mov add add out push push push imul and nop iret xchg sldt add or xchg jl cmp lods mov jne test test add adc and and add sub movsl int3 data16 xlat mov sbb push jo rolb pop add add add add aas dec push popf xor mov ret mov add add add add add jo add add comiss add (bad) pfcmpeq jle,pt lea add jl mov lea cmp test scas rorl hlt clc call sub xlat inc inc add push xchg int3 js dec clc mov push add add sub inc add add add outsl add add in mov mov fisubs push je adc pop inc inc mov add add add mov mov mov add mov rolb jge push mov or inc idiv add add test adc (bad) call jb add dec add push cmp inc mov or cmovo inc adc (bad) jge sub inc shrb and inc lcall stc cld push jne add add int3 int3 pop addl int3 int3 int3 call call pop ja ja add lret enter sbb rcl xor mov add inc mov imul daa ss sti adc imul add int mov in insb jno ja add (bad) (bad) (bad) mov mov add add add call int3 jns addb das mov and jge call (bad) (bad) (bad) incl xchg sub mov adc (bad) add add call add add add add mov mov cmp jp mov pushf mov outsb sahf (bad) (bad) call add lock add add ja mov pmaddwd sub ja inc xchg mov mov mov add mov add mov mov cmp xor sub jb pop movsl outsl inc adc adc test inc inc inc inc outsl movsb mov mov mov cmpsl movsb xchg lcall or push dec mov inc call fucomp call inc sahf mov (bad) (bad) (bad) incl sub sbb aam add mov rclb sub movl pop movl es mov cmp add add xor mov test xor mov add push leave test inc mov or incl add bswap add jge dec add in inc push test push push push dec jmp pop lea inc rolb cmovl test and std pop adcb add push add mov push or add add jne jmp call mov adc push jl addl jge lea cli fwait mov sub xor mov add add add add cmpsb add add push dec fwait cmp push mov xchg mov stos dec cmp pop test mov aaa lcall jl mov popf mov add add add mov xor push add and adc mov inc hlt jne mov mov mov add add (bad) cmp (bad) (bad) (bad) (bad) (bad) incl sub cltd push test daa add jb imul mov add sub add cvtps2pd (bad) (bad) (bad) mov adc test lret adc pop adc inc inc inc inc pop inc ret inc jne jne jne add adc or mov cmp outsl sti hlt add and and and call call add add and andl and fdivl lcall out stos mov mov add add mulb add add nop jo cwtl inc in int3 push aaa add add jns daa adc or inc mov add add add int3 int3 int3 loop sbb int3 add add add inc stos jne jne add movsl add xor adc sbb repnz cmp add call call daa mov jns mov test mov adc cmp adc add add sbb add inc inc inc inc inc inc cs push cmp scas out popa dec xor xchg pop inc inc and and and add add add rol fsubrl pop lcall sar jg imul mov (bad) (bad) incb test add add imull mov adc push loopne mov repz inc jl outsl jecxz mov cltd mov call lea cwtl mov (bad) aam pop lea sldt cmp pop add add push aad push ss (bad) (bad) (bad) incl outsl sub or stos pop dec in negl add add (bad) cmp add add arpl adc rcl mov mov mov add repnz dec (bad) (bad) adc std loope add pop decl and mul add add push add add ljmp incl adcb (bad) or add call or shr insb jne jg std add (bad) (bad) (bad) (bad) fsubl and and xor jge nop xor incl add add mov mov int3 or mov add add (bad) fsubs out int iret mov popf std scas subl xchg jne jne rcrb (bad) xchg popa xchg (bad) stc push mov lret rol rolb test ja ja test ja (bad) (bad) (bad) incl add fcoml mov pop dec sahf inc jle pop or mov add lea or or or add xchg pop clc mov test into outsl push xchg mov inc in pusha inc xchg insl rorl or or das cmpsl fiaddl add add mov add add xchg in sbbb mov push aam xchg cmp mov int3 int3 cmpb int3 add add add cltd cld jl fists mov mov jne add jo popa add add call call add add add or or int push mov jg add add push les push dec jno andb fs into dec movb jne push insl leave cmp xchg mov jne rol shr call data16 sbb add add jecxz fcoms or (bad) (bad) js add lock jmp inc pop call push sar push push add (bad) inc push jne add adc notl call rol add add add ds xchg cmp gs or arpl add into fists add add ja jge push rclb dec jmp ja mov int add sar (bad) (bad) incl mov mov and xor mov and pop sti sbb lea lea mov xlat decb mov mov cmp xchg hlt neg xor dec cmp xchg or add mov add add jmp rorl xlat nop fstpt outsl push sbb dec insb (bad) (bad) (bad) (bad) jmp mov add (bad) (bad) lcall jns xchg decb push (bad) decl add (bad) mov and add add add scas add add repz add add inc mov sbb pop add jb push inc inc inc add jmp dec std sub decl pop add inc inc ljmp push add push or mov (bad) lcall mov mov jge mov add cmp add (bad) hlt add add jge and sub add lock add add add jl mov incl pop lock cmpsl in mov fists mov xchg mov push push push add add fwait add (bad) (bad) (bad) (bad) incl add add jmp or loopne xor add sub incl les add ss push push add push sub push cltd ror ret popf iret sbb add add add add add popf add add and mov loope (bad) xchg or mov iret pop jmp jne jne jne emms repnz pmulhrw cmc push adc incl jbe mov lret mov pop push mov fidivs (bad) (bad) jne test add add sbb lea and test adc xor mov aad loope and and fdivrl dec sbb fldln2 in je push and push sub add add add ja (bad) sub add add mov cmpsl add add pushl push push mov mov divb incl in add add movsb test and addr16 pop cmp pop addl mov add mov cmp (bad) (bad) incl add fnstsw mov (bad) (bad) incb addl jmp or cmp negb mov test lea jne hlt add sbb add les inc cmp or adc test lods mov add and gs adc incl data16 dec add (bad) call call add jne movl rcll cmova inc add subl mov pop lods mov hlt clc add inc ljmp mov add xorb add add mov aad call push add add add add xor push fs add enter add add (bad) (bad) pmaxsw std shrl mov test jecxz scas sub push push push int3 int3 xchg ss int3 int3 add add mov shl adc out add jne xchg jecxz xchg add dec add pop xor mov mov daa or or mov pop rorl xacquire and mov in adc mov js sahf and push push push mov add add add add outsl jmp jmp jle jo movsb adc pop add lea or jb or or add rcrl mov mov call fdivl sbb stos testb cs and pop adc add add or ss test mov ds cmp xor jb jns cmpsb call incl out insb push inc inc add add add mov subl fwait inc ds test icebp xchg mov stos mov (bad) hlt pop add (bad) mov (bad) pushl aad dec jnp jge scas add jle ja ja mov add add iret lea cwtl lea add add push push push sbb ljmp push dec sbb test dec push push mov int3 mov int3 int3 add add iret lds mov add add pop mov sbb or out add add int3 xor mov mov push sbb mov nop or fadds pop jmp ljmp loopne inc fists dec incl xor lea add dec incl incl sub push inc fsub adc incl or js add add add xor mov mulb je xor add add mov scas pushf or add add add add add inc int sbb cmp ja add inc inc mov add adc add add push stos push add mov add add ljmp (bad) push dec fisttps push movsb lcall scas inc (bad) (bad) (bad) incl pmullw add add outsb cmp divl hlt push and add add ljmp dec loope xchg jb add add add int3 int3 int3 fwait (bad) jnp int3 addl popf xchg jne jne inc inc out mov push (bad) movsb xchg les (bad) aas sarb in jae xor xchg inc inc add push pop add add add push xor lret add add add dec mov add add mov add add stos add call mov cmpl pop insl call ljmp add setb add and fmuls mov in lock mov addl sarb mov in push push push lea lea mov sbb push add (bad) push int3 adc (bad) (bad) (bad) incl inc incl add add addl addr16 jge arpl rolb add adc inc ret addb jmp sub cmp sarl or ljmp pushl xor xor decl add stc inc enter add rolb push adc clc add sbb jo push add lock jne ds add roll test xor incl jmp call inc push push add jne and push icebp out ret push push and inc ret and jne xor add xchg add xor loopne add add mov mov in lods je scas outsb jae out std inc mov add add sub adc nop rep add add add add fimull int3 int3 jne pop icebp jne jne call or adc stc test ret daa lret iret loopne call (bad) (bad) (bad) incl sbb push fcmovnb sub cmp popa add add add jle dec add add icebp and cmc call test inc imul std out insl icebp mov xor cs add add add add mov hlt outsb add inc mov sbb and lods xor cmp into fldl mov add add fs add add add add fbld cltd repz enter push stos cld push ljmp add xchg aad jne jne jne (bad) (bad) mov nop shl insl cmp outsb sbb nop (bad) incl add add add icebp xchg pop hlt add add add pop mov add in mov int3 int3 int3 subl ljmp pop lret loopne aas add pusha addl mov stc cmp rcrb cmp add repnz push clc out xor sbbb (bad) (bad) (bad) bswap int3 int3 mov int3 int3 add add add call call sarl aaa adc and push xor dec mov lcall std xor movsl lret aas xchg xchg ret add add mov mov (bad) (bad) (bad) decl dec push push push push pop out push mov add mov sti add push mov shl mov pop rolb pushl or add (bad) fmuls jne cld testb pop jmp add (bad) push inc xchg jne inc sub sub xorl mov (bad) clc add (bad) incl jne call sbbl call push roll call add mov pop mov or or pmuludq add ljmp idiv or push xchg shrb add (bad) (bad) fsubl add push xchg cmp test push add call loope xchg out dec arpl scas cmp call mov add shll add add sar jmp dec iret mov inc cmp js pop mov xchg mov mov imul and and roll and and addl sub adc add push push dec push sbbl addl adc fdivrs mov sbb mov mov cld lahf mov imul or jp push mov (bad) (bad) (bad) (bad) incb jg orl add add add add mov std cmpb jae push lret cmp loope stc lea ficompl and add add daa cmpsb add add add adc bound movsb test lock add test rcrb test add add lret stc add fsubs mov fcoms add ja ja ja add add add add xor (bad) mov dec add pop pop add jne shll mov lock jne call call mov (bad) (bad) (bad) jnp stos mov pop sub or test (bad) (bad) (bad) inc js incb add add add add sub out iret add decl add add add add jmp out ja and add add add add pushf xchg add add xchg pop icebp sbb rcll fisttps pop and or mov repnz (bad) aas and data16 add xor mov (bad) das mov add add add and and jmp mov setle add incl addl test ret je stc fmull push or inc mov inc and push mov push mov mov jne rorb dec and (bad) aad call dec incb push lock incl add push add jbe xor cmp loopne test adc adc add add hlt stos or mov ret sub xorb add add addb add lcall in and je jae cmp (bad) (bad) (bad) incl imul inc inc xor call fildl inc or fistl je dec pop add add add add lea sbb das aas es jle mov add adcl paddsb xor inc addl data16 (bad) (bad) incl lea add add sbb jne aad scas adc xchg add cmp shr push jle mov mov rol and cltd jmp sbb rorl dec rol int3 int3 int3 int3 test test mov mov add add push xor pusha adcb adc nop int3 mov push aam add add in dec xorl les push (bad) (bad) (bad) inc into cmp out sub add les decl mov jbe lea jnp mov adc es mov jg ret aam inc jecxz mov into and add or add add mov out push pop pop inc push ficomps and fst movsl and and imul xlat nop add inc inc add add imul outsl lret es dec mov push dec add (bad) mov push add pushl add jge inc (bad) jmp xchg pop add call lea lock add shll push add hlt pop call add add or call adc fwait inc mov push mov (bad) mov add mov rorl cmp add add add lea lea add arpl and cmpsb mov pop out cmpsb jecxz add mov add es and roll add add add and add add movsl fdiv arpl cs cli ret addl push push add add aad dec adc mov add add add cwtl insb fldl add lea lea mov mov mov inc push mov pusha push adc xchg daa (bad) (bad) (bad) pcmpgtb (bad) notb adc cmpsl add add adc adc push rcrl sbb addl (bad) cmp (bad) (bad) call add js add add call or repz in xchg mov cwtl movb jecxz call push add inc or cmpsb sbb sbb add shll add add add add mov inc add add add fimull das mov and and add sbb add add add pop das xchg cmp xchg jle add test xor or test iret testl add push adc cld or and je add je adc inc incl add push (bad) jge lods inc mov je xor add push int and inc jb jb inc add pop add call ja (bad) inc inc inc inc fnstsw or ljmp scas fiaddl xor mov and mov cmp test int3 int3 mov adc cs dec arpl popf jnp int3 add add add int3 fcom push call call inc (bad) (bad) (bad) incl mov gs into out add scas adc test cmc int3 add add jmp flds aas inc rorl mov lods fisubrs adc dec mov add add add jne shrl jne mov add add add jne in xchg or xchg loopne aam pop cmc xchg aam jp and xchg imul lret mov stos int3 (bad) push xchg out inc int and and xchg (bad) xchg (bad) (bad) (bad) incl lea add add rol pop jecxz jb and fcomi jne insb mov mov pop sbb rorb add inc add add add jnp in in cmpb testl mov out (bad) cs rolb inc je mov inc incl test mov jne decl or jbe idiv mov cmp inc (bad) push add int3 adc orl jmp mov add add dec jbe,pn inc push xor cmpl mov mov cwtl cmp xchg roll add xor inc push insb rclb or sub test xchg add add add in add and and les mov push mov sbb add add add and inc jne jne mov add add ljmp xor xlat fld out push fs (bad) (bad) decl dec or or fisttps mov or lret stos lods add add push push rclb mov enter add add add add add add movsbl rol ficoms scas jnp jbe lods test punpckldq mov cs rol das or add add nop lret cmp gs int rorl (bad) pfrsqrt imul jne popl xchg fadds jne add test stc mov int mov push cmp xlat adcb add add punpcklwd add add add inc mov cld or stos cli add add jge in pushf xchg push lds mov add jge jmp adcb add mov add adc push inc and clc jne add or in add inc pop mov andl add inc (bad) (bad) pop mov faddl jne add rorb add pop xor add sub jmp int3 int3 int3 int3 lcall (bad) (bad) (bad) incl mov sub push repz or outsb ds (bad) (bad) jmp pop (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc push mov cwtl mov mov jmp (bad) incb add add add jle sbb add add mov mov fcomi pop push ror pop popa pop adc fsubl sbb pop add add lea mov mov xchg fwait sarb lea in mov mov dec or test cld mov pushl (bad) out jne (bad) (bad) (bad) fcomps sbb inc stos adc scas arpl adc test add add add jbe pop push ret cmpsl sub mov or add add decl jg dec (bad) (bad) (bad) jmp add add adc add add add mov xchg mov scas fcom cmpsb dec ljmp into mov mov add movb add add mov xchg cld xor push dec jmp sbbl insl mov jnp fiadds jne xchg add lret add sub xchg jl mov scas mov xorps jge mov ds (bad) (bad) incl jne jne and (bad) rclb popf sbb int3 adc push and add add add ret iret jne jne add in add jmp add pop dec call pop icebp fdivr fdivr rclb push call push adc sbb mov push add push add lock clc adc add dec inc add inc cmp cs je repz addl rol add inc push adc add sub add insb add add add lock dec mov test jo mov call incl adc gs cmp push mov sbb mov test xor out js sub test mov add cli add add mov cmp and mov jge inc ds sbb adc mov int3 int3 int3 out jb add add lcall (bad) (bad) (bad) call xor push jge push test pop js iret inc inc or popf jmp jno mov (bad) leave jg pop pop stc ffree push dec test (bad) (bad) (bad) incl sub add add add add pusha out add (bad) (bad) decl jecxz daa repnz test sbb pop or pop repz sar (bad) (bad) (bad) (bad) (bad) incb stc cli inc inc inc add add in imull add lea jno mov push aad push lea jmp call jle add add dec dec mov adc inc xor in test fimull jae rcll add aaa push add mov int3 int3 jae adc cli cmpsb (bad) movsl and and int3 int3 push push push push push add mov test add add (bad) sldt jnp mov sti sarl cmp mov sub add add decl (bad) (bad) (bad) (bad) (bad) js test sbb aad lods andb call sbb add jb nop mov (bad) (bad) incl add scas insb xchg add (bad) (bad) (bad) (bad) sldt xchg add add (bad) pushl fwait mov (bad) jecxz lret jge mov mov cmp rcr jl rol psadbw jle xor (bad) call sbb syscall mov xor add nop add add (bad) fisubrl test push inc (bad) mov sub jb sbb and push add add add mov sub (bad) adc push in mov xchg mov mov movsb cli ljmp test inc pop test xlat jne jne fcoms mov mov xor wrmsr call call xor pop push pop lods mov push mov jmp (bad) call dec je jge jne sbb pop insb mov add pop maxpd inc inc inc pop ljmp int3 mov jmp decl or mov aad dec test xchg mov jae ljmp mov jmp add mov pslld xor (bad) jae addl add add es xchg xor mov and dec mov stos add add add or add add lret sub jecxz ljmp loop test mov shll jbe mov (bad) (bad) (bad) (bad) incl add js fldl add call add jg add add je jmp pop mov rorb sbb push movsl lcall lods sbb es jle push stos cmp mov add add pop mov jmp (bad) (bad) setge mov aaa add add add call and call leave xchg push test xchg call (bad) incl add add add (bad) movntq mov in data16 clc (bad) (bad) aas dec mov stos fnstenv lea repz add mov mov add add cmp adc push fs cmpsl mov call jg call incl add and mov adc lds into aaa das xchg add add rol sub shlb xorb jne mov in test inc cld jb leave scas pop inc clc xlat xor sbb (bad) jne lea xor add xlat (bad) loopne bswap push push adc rclb add push cltd inc xor sbb popl or push add test adc adc call mov call cld (bad) call pushf or push aam push ret xor cwtl call push add jmp add sbb add rcll invd pushl ljmp lock cmp push inc roll jne jne (bad) out ja ja mov or testl sbb pop and mov adc cmc xchg test rol rol (bad) setp (bad) sldt add add mov mov xchg (bad) flds sub jno cmpsl fisttpll add stos mov add mov into mov das test add add lea ja ja pop flds mov (bad) lcall (bad) loopne in gs mov cmp jg sar incl add add call call sub sar and or add cwtl aaa dec mov push or pop addl (bad) (bad) (bad) (bad) decl negl stc andb iret xchg push adc outsb mov and add add dec pop in lea add daa inc mov imul xchg jne pop fadds add add add (bad) setp fwait or (bad) bswap int3 int3 mov int3 int3 add add (bad) cmp mov sahf sub ret mov (bad) dec xor (bad) (bad) call mov out sbb call outsb (bad) xchg pop sub call add inc xor addl add add pop pop inc sub mov xorl into cltd imul mov in dec popf (bad) loope add push insb add add lds inc lret lea mov addl pusha in out mov or into int3 int3 add add add mov add add test jg in adc arpl add lods push je push adc fwait jo mov add add lea call dec dec aas in mov cmp sahf lock jae dec lea orb lea mov (bad) movsb in xchg sbb lea lea add ja nop add add add in decl inc add cmp add jmp mov inc add jp adc inc add mov loopne push cld and adc inc jne or adc inc push jl addb add orb add jmp or incl out add cld inc or xor lea lock incl add push loopne mov adc orb (bad) push les jne add add add add inc cmpb or xlat adc mov add sub insb cmp ficomps jg daa and inc cli mov lea scas adc cmp lea add add add add add add add add add icebp je xchg adc inc rorb ljmp add add xor add add add stc jmp imul add add add add add ljmp inc add add add mov sub xlat das ss sbb cmpsb mov call add add add ficoms lahf arpl pusha pop sub add lret pop push xor sbb rcrb hlt out sub add add and dec add add add add inc cmp lret fs mov imul loopne pop stos int add add xlat lds lds ss repz dec dec hlt lock in roll add add add cltd addl insb and add push add add push sbb xor fildll mov iret (bad) sbb and push push push call nop in inc sti int3 mov sub add add jle pop mov inc fadds xchg (bad) ret mov add add add add add jne add mov add add scas insb sub xor lret je push sbbb xlat xchg jge add mov jne jne ljmp cmp pop pusha mov idiv (bad) (bad) incl inc jg repz add cmc into (bad) (bad) (bad) call call lea scas sti jle push mov pop xor test jmp (bad) (bad) pushl aaa mov jne (bad) lcall and push mov pop mov cmp loopne sbb jmp testl mov subb mov unpckhps pushl mov inc fsubrs push movsl or adc (bad) call enter minps inc lock add pop add push add rolb jbe and add add or push inc incl dec inc jle pushl and push lods adc add push add inc orb push pop insb adc jmp xchg add daa data16 (bad) (bad) dec pop movsb int3 int3 int3 int3 jne mov jne mov imul cmpsl push mov roll xchg jne,pt jne enter inc inc inc inc inc add add sbb mov dec lretw inc in test (bad) (bad) incl xchg mov mov int3 int3 int3 int3 jne repnz in loop in push addr16 push push inc movsl pop sub inc jne jne add imul xchg stos lods rcrl adc add (bad) xlat pushf (bad) or psubd cmpsl cltd inc ljmp push push push jo lea add add add js jne jne int3 int3 mov scas pop pusha stos adc dec adc sub add jecxz add add add fidivrs xchg ret fcompl scas lea add add add std and push mov jne jne in jne test add cmp lock push ret loopne xor xchg les add inc inc inc inc inc add xchg push add add jne and ret sti mov jne add outsb jne mov add add add inc add add add add test dec insl pop or cmc jle and push imul add add inc xor add add add call mov sub repnz cmc xor jno call mov add add add add fs sbb or push outsl inc addb cmp pop add ret add add je add add fistl xor (bad) (bad) (bad) pushl ljmp push adc push push and and push call rcrb rolb add inc in sti mov add inc add or cli push clc pop rolb idivl call push call add sbb and adc push mov test hlt sub clc add je push add decl clc call add call add incl add add pop add mov add push push inc jo shr add (bad) decl add dec add mov clc or xor incl (bad) out lds sar notb add mov inc add add call push xlat push push jbe call insb scas push (bad) jne adc call mov call and and (bad) fnstsw adc mov bound and mov jae add add stc mov aaa jp jl std mov add push cltd comiss and add add and cmp addl add add popa (bad) cld popf movsl mov mov shll xor push shll jne scas dec mov add lea test ret sub lahf and add (bad) lcall (bad) (bad) (bad) (bad) (bad) jle (bad) (bad) call call clc jns out testl mov loop insl out lea (bad) (bad) jnp mov fmul es into inc aaa int3 data16 add add add pop pushf scas inc and in insl (bad) out dec xchg add rol rorb mov add add rolb add add dec or ss aad or mov fdivrl or out pop add ja aas push ja ja add fst and test add add test insl in fadds xchg push push push push sub (bad) push (bad) (bad) (bad) (bad) incl add inc pop (bad) out mov jl clc fwait adc add add add add mov fwait leave push add test mov (bad) call enter mov add shlb punpckldq (bad) (bad) (bad) movhps fwait popf (bad) call loopne or scas jle mov in inc inc inc inc inc mov push push (bad) (bad) jmp sub popf pop fucomp (bad) decl add mov add add add lahf add inc rolb adc inc mov mov adc push pop jge xor sub push sldt add or inc fwait and out mov subl push add or adc incl jge add leave xor je mov or adc loopne test roll jmp add push xchg add add add mov test sbb call jae add add stos incl jmp (bad) lcall push push mov mov mov orb hlt ljmp sbb add (bad) jmp pop in mov add add test rolb add add add call call push or inc stos push (bad) and outsb push imul (bad) neg insl and and inc sbb xchg cmp add push jge mov sub inc inc inc jne or loopne jne jne insb add add xchg ja ja inc inc push (bad) or xlat pop jnp lock fistpll push dec out outsl inc inc (bad) (bad) (bad) (bad) incl addl cs jecxz push jle push ja call pusha scas ss je and (bad) (bad) (bad) (bad) call call push add add scas (bad) cs inc and mov shr or lods add add cld inc jb test int3 int3 dec cmp xlat aam out rorb insl xchg push int3 int3 add add add je addl add lea test and in aam testb adc int3 int3 add add add add fisubl pop push cltd (bad) sub inc addr16 sub adc lods xor mov dec xor mov test add pop aas mov sti pop push repnz sbb mov leave inc out mov js popa add add add xor dec subb repz add mov mov mov sahf mov lea push addl mov add lret clc add addl add imul add shll aas cmp add jnp mov push fcompl inc inc jne jo jne jne and movsl and and fwait dec pop dec out or sub addb mov or inc inc in mov (bad) call call sub xchg call std addl add add inc loopne cmp jne add add in push inc (bad) and inc inc add add lock push or adc call pushf dec cld add and add lcall call dec decl dec and arpl sbb mov mov pop dec (bad) aam or or xor aad add add add call pop sbb add adc (bad) (bad) (bad) (bad) incl add fidivs call call roll add int3 (bad) mov pop scas fnstenv gs ja push push in stos int3 int3 int3 int3 jne jns jne jne rorl xchg and add lds and jp inc push sbb pop jmp lret add add add movsl lea add add int3 int3 int3 out adc jns ljmp mov fisttps int3 int3 mov mov push fstpt sbb push push add pop push cwtl add add cmp inc inc inc inc ror gs add add add call fisttps xor sbbl push call call mov mov pushf cmpsl (bad) (bad) and lret mov (bad) jmp push (bad) fmull xor fwait cli mov int3 ja (bad) (bad) psubsb (bad) call cmpb dec and test (bad) out aam rorb add add pop add add add inc inc inc std add jg loop dec fwait or inc inc (bad) (bad) (bad) (bad) incl add inc out add add call call and and lea in int3 xchg or xchg push push out in repz mov mov or lods xor mov and and jmp push in xchg lods add jbe add add add push or mov add test cwtl lret mov push add inc (bad) cmc or lahf add jnp add add add test mov subb test loope call add add mov mov add xor ljmp in adc (bad) call add out adc add add add jge sub fsubrs dec push jne add je push call add call and add adc push sbb pop jge inc incl or inc sub mov insl add rclb push mov cld mov add push add inc inc jne push call inc or and jmp ja add call call call mov or jb insb sar jl movsb orb lds xor rcrl sub addl add push xor iret push xor xchg popa mov push dec pop pop test push mov in std jne jne icebp sbb mov sbb shrb into int3 mov jmp inc add add add call call add sbb out add add add outsb es push stos pop mov xchg adc add add (bad) jne jne negb and lock cmpl add div mov pusha or icebp add add add (bad) (bad) (bad) (bad) decl nopl add push push data16 xor pop pop inc inc cmp bound add push dec dec call gs push pop push movsl out popa cvtps2pi ja int add ja push jb add add rcrl add push push push es xor pop (bad) negl push push test add adc add add add sub or ret adcb add sbbb add mov fbstp add mov add fnsetpm(287 (bad) (bad) (bad) ltr je shlb leave mov jge mov push or add add add add call lret stos mov mov add rcrl pusha call call iret xor lea add lea add add lea xchg ffree (bad) daa fsubs mov add mov in dec xlat aaa and fs and and mov cmp xchg fdivrl je add add add and call add add add push pop add add add or adc sbb orb push mov ret sub test sbb push push mov (bad) lea pop adc loope scas mov add add push sar inc (bad) fmuls test mov add inc inc add cmp sldt repz rolb loopne mov push decl (bad) (bad) jmp (bad) (bad) jl movsb cld pushl ljmp push mov (bad) cmovne imul call lea (bad) lea add add add add leave insb jno into or arpl iret enter add add add addl add add sub jmp inc sub test fsubl inc xchg xorl add sub add add pop roll add int pop pop mov mov pop testl push call push dec pusha addl add add add sbb loope xchg shll sub (bad) (bad) (bad) (bad) pushl movsb pop xchg fdivs jne add xorb int3 repnz jb int3 int3 int3 xorl jle rclb dec inc jbe xchg inc fldenv addl or or nop mov out dec imul jbe cmp push jbe pop negb or jecxz lea add add add mov add add add pop xor push lock cmp push jp cs and pop cld cmpsl xchg add push std dec or push push add dec rorb scas cmp dec pushl mov inc call cmp add inc cmp xor mov fcmovne push push mov inc or push inc dec xorb jne fcomps jge push mov sub adc faddl mov inc xchg ret xchg inc inc inc jl jne aas inc add test (bad) sar xor mov jg xchg inc inc mov add jb add inc mov add pop les incl mov dec add add mov push push xchg ja add add cmp or rcrb mov stos cs add add add add fistpl jne add add push dec lods or fdivl xchg add lcall inc xchg in fmull cmp incl data16 dec add add add add mov les repnz mov add add fisubl jne jne and lock mov push jne arpl (bad) (bad) (bad) (bad) sub incb add push and add xchg dec or (bad) (bad) incl pushf je jae ss or cmp addl (bad) (bad) (bad) call mov lea sar cld iret jne jne mov jle mov out shl push jne inc inc inc inc (bad) (bad) (bad) mov ja ja jne das jne jne add test mov mov push push aam mov and add rcll add fsub mov aaa jno mov push sub add std loope push call mov add add inc add jne jne (bad) movntps pop aas and mov je (bad) sldt add add int3 dec xor int3 int3 mov test inc adc mov add xchg cwtl in xchg mov xor add add add add decb add push dec int add inc fnsave mov xstore-rng cmpsl add add jbe dec add (bad) (bad) (bad) decl jp push repz insb aaa (bad) sub mov test add add call call movsb jne jne int3 rclb mov in add add push in adc mov adc incl add cld mov inc cmp push addb inc inc in xor inc add sub lock addl xor call roll lds insb add mov add adc add dec or std add adc incl mov call mov cmp add add inc push lods add clc add add in inc (bad) lock nop sub lahf in sbb and dec and and cmpsl mov mov (bad) shr dec jae mov jne test scas jg inc adc imul mov ljmp test (bad) incl inc inc or lea adc dec mov push jb ret scas pop xor scas rcrl lea add add add cmpsl xchg imul xor add add mov rol shrb rolb add add imul xchg addb mov imul call pushl (bad) (bad) decl lods xchg jo push mov xchg clc test mov adc cmp add add decl (bad) (bad) incl cmc and xchg push lcall sub in inc jl sbb (bad) (bad) (bad) pcmpeqd sldt add add (bad) jmp sbb cs or jbe idiv incl add add add (bad) ss add add int3 int3 das sbb int3 jne cwtl (bad) jne jne add or es push repnz push xor jno daa add add add add cmp jno adc dec inc (bad) (bad) (bad) pushl pop pop xchg cmpsb add adcl dec js add add add rorl jne (bad) ljmp (bad) (bad) incl add mov inc xchg popa mov cmp jno rolb add (bad) aas enter add decl push jecxz and mov push dec add (bad) (bad) (bad) jmp pop jo and and mov enter addl nop xchg push aaa pop fimuls inc add rol rol add add add add (bad) dec rcrb sahf mov ss test mov loopne les jne jne ja add ja pushf outsb add add or xchg aaa jp das loopne jbe sbb loope ja pop push add int3 int3 int3 int3 lods testb inc add push mov add cltd call mov and cld dec push jne or or (bad) icebp (bad) cmp cmp cld add or shr adc rcll inc add push add cld mov push call adc inc call inc inc add pop call mov inc adc decl mov add add add jns,pn mov fldenv rorb add (bad) dec pushf xchg mov (bad) (bad) (bad) (bad) incl (bad) incl and add call repnz sbbb (bad) call test mov xchg xchg jmp adc inc arpl addl dec loope jnp insb and xchg push adcl push push add add add lea add add stos bnd sub jmp mov adc aas jno add lea add add call lret inc mov hlt call add mov ja or or or jne fdivs cmpsb ret inc movsb mov negl push imul call and sbb and (bad) (bad) (bad) ds push lods movsl imul imulb (bad) ljmp and enter add and push add faddl add add cmp (bad) (bad) (bad) inc cmp add cld cld mov push mov pop imul call popf adc add add add ja mov daa lret imul ja add add add add add add cmpsl xlat add inc push sub add mov inc rolb push mov xor add xor add add sub fs mov mov and pop mov fldenv (bad) (bad) (bad) incb add dec nop aas add and and and mov push push movsl xchg push adc and pop push and and sub cmpl test push add lods pushf add add test pop and adc (bad) test push aaa inc or pop add xor add jle push jecxz add xchg push inc jb push mov inc roll jmp mov add cmp or inc decl dec call call fildl add inc cs jns,pn add decl pop std push andl rcrl pushl (bad) pop call sub add jne jne daa add xchg sbb push aad bound into mov (bad) (bad) (bad) (bad) incl test dec sbb lcall (bad) ljmp jg in and popf aaa dec call out pop add add add mov inc loop and mov (bad) push jbe,pt test and ja shlb addl fldl repz xor imul dec (bad) (bad) (bad) (bad) (bad) (bad) incl add mov add pfcmpeq pop (bad) ltr addb add add and jns cltd jno lea sub addl add ss stos arpl mov add add test imul popa dec imul add add (bad) (bad) (bad) (bad) not (bad) incl add add add pusha outsl add add add and out pushf popf imul clc repz cmp xchg (bad) jns add mov lods fisttpll cmp movsl out into push sub iret addl test (bad) (bad) (bad) cli outsb mov fmull add (bad) cmovne addr16 loope (bad) test ror es psubsb call shrb add add add or adc inc add jmp add test jne test sub add call add jmp mov loope mov push jl push add pop add jl incl inc decl loop je add push inc add je add call mov mov lea add pop adcl inc add loop cwtl inc add add jle loopne inc xchg fbld dec adc add add inc dec add add pop sbb add add loopne jne jne add movsb add add cli arpl inc in jge out movsb mov and scas mov adc rcl pop (bad) (bad) (bad) jmp (bad) incl add add mov jmp cmp cmp add rol rorb addr16 (bad) (bad) jae addl addl dec shl lahf stos jnp cli push push sbb in dec add add and inc and and lods xchg xchg sahf jne xor add add stos test sbb and jnp scas add add add jne jne and jne (bad) (bad) (bad) decl mov adc lods and mov fidivl jae add lea add add call add gs bound in jo call mov mov jne pop mov xor or add sub sbb enter fdivrs cmp add call call call mov push test ret push adc daa add add sbbl jp pusha enter cmpsl add add jne lods fs jne test roll bound sahf jne pusha in mov mov hlt or jle jns int3 and add push add mov js cmpsl mov (bad) adc or lcall jne mov mov je inc inc add add jne adc adc out pop ljmp jmp jne push and push sub test mov mov add add adc ret lcall add add jne pop lcall add mov rorb ja enter (bad) call iret mov loope mov out add incl and call add mov add nopl lock push lock incl mov inc mov nop xlat jge and inc aam mov (bad) pushl jmp add push dec pushl incl dec hlt add add xor clc cltd jb cmp in incl insb adc add fs add add or in jmp push js aaa inc idivl lahf cmp addl push add add cmp mov orb add add test jb outsb inc mov jno add ja ja ja mov ja mov inc mov loope pop ss pusha (bad) decb insl cmp js sbb clc jno lea mov addl lea mov outsl std loopne cmp es sbb leave mov loop add add add add int3 jecxz in je (bad) push jmp fs mov dec sbb mov mov cmp addl in add loop adc dec add add lea lea lret jae or in mov mov xchg popa cmp aad inc xchg out mov test call pop call add mov mov xchg push xor scas aad mov lea add leave add add subl loope jle mov xchg clc inc mov addl leave mov add add add jge add lods mov cmp andl add add add add pop add add dec cmp in dec movb mov dec dec out xor pop out mov pusha in add add add add add dec psrlq or adc add loopne cmp addl add mov add decl clc adc test push add shr mov push push add add or push mov clc push push add andb adcl leave mov cs add cmp push je inc xor add or inc jmp add jbe add inc incl pushf (bad) cs add inc cmp xchg jl leave cld jge adc call add pop mov (bad) push xor cmc insl fiaddl or lock enter add roll or add add add leave dec repnz in js inc xor add add add add test test lea enterw xchg jmp dec call call push push push push outsl mov pop push mov xor add cmc pop jle in mov lahf and ja ja mov mov add add add fdivs add and and inc iret leave sub push daa cwtl xchg fdivs xor mov out and inc ss inc inc inc inc add rol add push lock jl add add add lret add add jl add add enter (bad) (bad) (bad) decl or inc xorl push pop pop orb orl mov add add jne fs adc push and xchg push adc cmpsb xor add add add adc add add add add add xchg sbb and popf pop xchg sar push insl sti add repz mov and mov add add int3 int3 int3 aas jnp cmp pushf mov out lahf int mov add add add add add add add mov add add mov cmp or sub add jge mov mov int3 push inc fwait xchg cs roll push jnp sub add add loope sub aaa insb leave inc jg jmp add add add pop inc jmp jne jne add mov mov les jae xlat cwtl mov out cmpsl out mov xchg rolb shrb sub mov pop pop lret add add dec pop or add add add repnz inc (bad) clc (bad) push clc push push inc add jne add inc add inc cmp (bad) cld mov push ret inc je adc les xor rorl or decl add shlb xor (bad) jne cmove and lea mov push or add push add cmc sub add (bad) (bad) (bad) incl add jmp inc stos pop push divb mov dec sub add (bad) (bad) (bad) incl leave inc inc inc add add mov lahf sar popf push add add bt pop jp jo jo sar rclb (bad) sgdtl mov add add xlat mov add add sub push jmp (bad) jns sbb fisubrl add add mov add add int3 int3 int3 push sbb mov movsl cmp sub and lea into adc jne jne add popa stos add mov cmp mov leave ja jb sti dec repnz pop mov les add add sti sub xchg jae sbb sub add add jp int3 push mov cmovne lret mov xor lea add xor add ja ja ss adc mov jns leave dec mulb dec lds add mov xchg ja ljmp (bad) incl in inc adc mov imul sub add add add shrl add add add (bad) (bad) (bad) incl add or aas mov outsb in leave sub incb rorb add add add std add add or jb call mov hlt mov xchg sub int3 int3 int3 fadd and push push add add inc cmp add mov push call sub enter push xor push add ljmp and inc adc bound add add push add cs or add add hlt incl inc stc je call decl sub inc call push mov (bad) cmp xor cwtl add add mov mov inc cmp pop mov inc rorl mov xchg les iret hlt xchg sbb sbb add add push in insb push aad mov (bad) push call rol push jg rol (bad) (bad) (bad) jmp (bad) incl cvtps2pi add cli in inc aad aam popa mov xor aaa xchg add add pushl gs (bad) (bad) pushl jns je xchg xlat (bad) loopne stc lret mov cs sbb cmpsb cwtl int3 sbb jg push push push push push (bad) (bad) cmovnp (bad) bswap int3 int3 int3 int3 jne in jne jne add xchg xchg push and ret push jle fistpl sbb js add mov mov test mov adc test sti fmuls mov (bad) (bad) incl mov add add repz cwtl enter sar xlat adc inc inc inc inc add dec test add dec xor cmpsb dec popa gs bnd sub add and xchg icebp cmc adc testb scas add add add and call call stos iret or mov popa sub push (bad) (bad) roll cmpl fiaddl (bad) (bad) (bad) (bad) in outsb cmpsl ljmp out mov add add add add add mov mov mov aam add add pop dec dec inc fimull lods andl pop icebp aas lret aam pop int3 int3 int3 int3 add add add rclb bound es mov out call add cwtl sti pusha ss mov shr add add lea lea inc (bad) (bad) cmp cmp dec orl testl add pushl jmp je mov dec add add push jne pop jne (bad) clc push add add add adc lret addl push jmp daa or decl or fisttpll jne sub mov mov inc mov cld pop scas or add add jne (bad) fstpt adc inc and das jne jne add jp add add xor int3 int3 int3 int3 and add add add rorl xchg mov mov lea cmp (bad) (bad) decl mov pop push lcall lret call xor int adc (bad) incl mov add xor call sbb rcr inc push cmp add xchg cmc add je scas arpl jo add add mov mov add cmp scas int3 andl nop mov mov add add mov mov add and add add push mov jge (bad) stc adc imul shlb adc jne inc and dec sbb sbb add push mov push das imul add add ja ja cmp ja push push push push push call call repz (bad) js and sti push add push je adc mov jne mov call cld add push hlt inc cmp je call roll add incl push push add cmc decw add (bad) incl adc inc pop add sldt add jne int3 push cmp mov push aad or or add lea xor pop pop add cmp lock orl xor (bad) sub mov aam xlat lret incl add (bad) int3 in add add jo stc sub bound stos aad in add add add add lret add add add add inc jecxz add add add (bad) (bad) subps jl outsb clc sub dec mov dec push int3 int3 int3 int3 (bad) incl (bad) (bad) (bad) (bad) (bad) call test push cmp stos pop jae mov incl les mov jg test fwait clc add add lcall sub (bad) (bad) ljmp ljmp mov adc aam pushf popa xchg mov add add jp mov add add add dec lret add cmpsl cmp xchg inc cmp dec add add add add pop mov push push mov add add jne test call scas cmp stos pop pop push add popa add add push jno or pop mov (bad) roll add add pop push (bad) out dec dec leave inc dec jne add add add lea lea add call call mov scas cli mov iret mov (bad) push movsl aad in outsl add test mov int3 xchg lcall mov or test int3 mov mov mov mov add add push xchg or push mov lea int3 int3 int3 int3 add add add sti das (bad) jmp rorb fcomp add and mov sbb clc sub mov decl js (bad) (bad) decl lea adc aam and cmp scas push lcall (bad) shl add add add (bad) in mov xchg or fcomp mov lcall inc inc lea lea mov lret in lahf lea adc dec push fildl jecxz call lcall shlb mov inc inc incl adc inc and faddl cmp jge push addl push add sbb ret push decl xchg mov add push orl push mov hlt cmp mov add cmpb rolb add out call add add push push add jge sub or cld arpl inc loop mov (bad) (bad) incb shrl xlat aas in adc aad mov ljmp mov pop sub loopne jne add int sbb add add add mull add and and call call sbb mov (bad) call xchg sarl and pop idivb mov jne inc and test inc inc inc add ret flds jnp add add loop jnp call fmuls and add add (bad) incl scas cmp das (bad) xchg fisttpll and sbb (bad) call int3 int3 pusha nop int3 int3 int3 jne jne scas lret cltd dec pop insl psrad dec sbb jne add ja iret sbb clc pusha push icebp add add test test add add ret pop jecxz stc push int3 loopne jle xor dec div sub mov call add imul (bad) sbb in add int3 int3 int3 int3 int3 (bad) jmp or incl add jge add add call (bad) into bound das xor jp ret jb das clc inc int push lea pop addl mov les inc add (bad) (bad) (bad) decl jmp xlat jl mov inc (bad) call push push push mov mov (bad) call call pop cmpsb sbb sahf and sub mov jmp inc test addl ljmp stos cmp ss pusha ja ja and daa pop insb and and add add add dec sahf add add add call rcrb or popa add out xchg add add add mov add int3 int3 int3 sub or pop cmp movsl pop lock int3 sub int3 int3 add or stos push sub push add add movaps (bad) (bad) pfrcp roll add pop dec dec adc cwtl ljmp movsl or mov add add push les loopne add push mov add or push je add inc jecxz inc sub cs or addb test mov inc incl add add mov add mov ja add jmp add pop cmp push add aam rol (bad) sti rolb add add jb shrl xlat iret pop sub insl lret testl xor add call call hlt add add add fst pop ds cmpsl lret js mov add mov cmp dec lahf xchg pop sti test sbb add add inc add sub cmpsb and add ja ja add mov add add test test int3 int3 ret fisubrs loopne xchg jp rcrb mov int pop mov pop inc mov add add bswap inc pop arpl test pop and add add jo lds test mov xor add add add (bad) lcall ret mov divb inc and push push push mov mov or push sub adc sub add mov je push idivb test dec add add and data16 and je cmp xchg xor xchg jmp fisubl mov push (bad) and and in in xchg les mov add jne mov inc sub jmp (bad) incl fsubrl fsubs adc andb adc fidivs incl addb add js call je pop (bad) or inc inc mov add inc push mov inc jl inc push add jmp cmp add jmp add cmp jne call add int3 int3 int3 int3 int3 mov mov push ss pushl adc jne jne mov shlb pop outsl mov aas sbb mov inc test adc dec adc (bad) xchg add add jae jne sub iret sbb sahf jecxz divb or test test jne add add add int3 int3 mov (bad) gs ffreep cmc popf dec cmp nop jge lret xchg lret mov push data16 add mov mov outsl ljmp loope mov cmpsb lret test mov int add add add dec pop xor lret je sbb or test add mov loope in sahf or or push gs cmp int popa inc mov pop jecxz mov aam mov mov jge and and scas hlt pop jnp clc imul xor (bad) jne jne pusha push pop jne addl jmp jne dec xchg imul pop scas add call (bad) mov add add add mov addr16 mov pop fcoml dec or add push aad mov pop (bad) (bad) (bad) decl lea pusha (bad) call repnz mov dec iret inc push orb ss (bad) (bad) (bad) (bad) (bad) incl add sti clc aam add add add mov mov int3 int3 pushf pop xchg add je mov leave fisubrl imul (bad) mov int3 lea lea loopne enter jge data16 jne sar movl stos add add mov mov push and add mov push add pop incl push (bad) incl or incl sete add inc inc pop add inc add push inc mov add jmp jge push mov push xor cld sar add push xor rcpps mov sub out add add int3 mov int3 int3 int3 mov incl add incl add add add sub jns inc aaa cmc push popa jo mov test cs mov mov and (bad) or mov dec add mov out (bad) and push add mov call call negb dec inc scas mov sbb adc mov (bad) mov sub add add add inc loop das (bad) rolb movd inc faddp or add and and movsb and push push dec aam push push push addl cltd (bad) sahf loopne pop xlat mov loope addl (bad) (bad) pminsw rcll sbb or lea arpl xchg add or add add addl pop lcall pop pshufw sub jno push or sarl int inc xor add lea xchg sbb mov (bad) (bad) (bad) (bad) call (bad) (bad) (bad) mov ljmp inc (bad) call add popa scas inc rorb icebp fsub mov jo cli add add add rcrb add add iret xor add lods add add flds je sbb push pop push fldl add add xorl addl rolb add add cwtl and dec loope and xor out andl fld1 push mov test sqrtps adc or test in push inc ljmp or mov ja call call pop xorb je inc adcl add (bad) fcmovnbe xor jmp stos sidtl mov sbb jns mov push push test mov mov pop mov call xchg lcall push stos shll lds push mov incl fadds add add jl inc scas xchg js into stos xchg cmp add add xchg push imul lcall jmp add add add cmp push push push add push push push push orl jecxz es adc add fs adc push push mov arpl mov pop cmp mov jmp mov mov add adc jne jne sahf call inc inc add add in movsb xchg mov xor and and mov add add lods pop pop add pop mov lods lret add adc mov add xchg add add add test addb inc jge push xchg mov add call push pushl incl push add push inc push adcl or add adc rolb incl call fmull mov int3 or call (bad) call imul mov add add punpckhdq call xor bnd jbe inc inc mov push add add and add (bad) (bad) ljmp sub jo (bad) (bad) (bad) (bad) (bad) (bad) incl add sub imul add mov call addb xchg xor out fbstp cmp mov and and push push jecxz dec adc jae push mov rcrb notl and jae int3 int3 int3 int3 int3 add add jne jne jne mov add add in sub test das ret adc cmp cmp add add or adc push imul or or add sub adc dec push add add sbb int add add add adc pop mov mov enter addl add add pushl (bad) (bad) decl loope xorl imul add loop jp mov (bad) and and xchg cmp (bad) (bad) (bad) incl pop hlt add add std sahf sbb and cwtl cmpsb sub sub jl (bad) fmuls sbb jne add add cmp rol rorb adc mov jp mov add add add sub add add add pop out add add movl sahf lcall jo inc out or add add inc dec cwtl inc inc inc inc aaa gs int3 sbb test add incl fadds add add ljmp cmpl mov jne or add mov incl leave or push cmp pop inc inc test add mov add loop pop lock dec add test add lock (bad) cmp sbb mov js cmc or mov (bad) call (bad) out (bad) incl inc inc inc add jne add add loop loopne movsl testl inc insb jle push call call add cmpsl cmp add mov hlt test add add add jne jne aam ja ja xchg cmp addl call xlat sbb fldcw fs call mov mov rolb push jmp loopne mov jne setne stos lahf ret mov xor leave je pop orb pfacc cmpsb filds add add pop outsb add add dec pop jo call orl jns pop sub add add sbb push push push push push jne jne mov lock pop pop scas mov add add add dec mov inc push add add and add add add inc pushf aam and out add outsl emms sbb add add mov add jecxz inc cld mov push in outsl cs mov (bad) jg inc adc pop push js jne add add test test ud0 push xor (bad) decl pop data16 or xor cmp mov lea cmp inc dec rclb in (bad) cmp jb and push push add push inc push sub decl inc push (bad) call sbb add lock inc icebp repz test cmp jmp adc call cmp cmp (bad) or push pop add addl pop add clc add or mov call jne push mov (bad) lock sahf mov xchg xor adc das sub add jb mov insl sub fstpl movsl cmpb dec fadds add add mov add add mov push mov push push push push push push das adc pushf xor push ret shr iret cmp sbb add add add scas movsb add add sub daa sub jne cld mov insb mov dec dec pop xorl mov (bad) (bad) incl and jmp add add sbb call pop loop mov imul sahf pop xchg cli pop or and and xor mov cmp js fisubl mov mov add add (bad) (bad) sub jns (bad) inc rol pop rol pop rcrb add inc xlat int or cmp inc mov mov add add add fwait add add xor xlat ret gs inc xor mov xchg loope call jne jne jne add xchg aas cmp test add loope or cli pop aad mov mov addr16 repz add add es jl adc cmpsl dec adc add add lea fs lea mov add add add add push dec add js mov lods push std ret add call add jbe add add add shr into mov arpl out jo push add mov cwtl (bad) fbld hlt addb mov xor add add mov mov add sub lret push cmpsl cmp test test test and and add xor cmp pop enter add test in add add push mov push push add mov add add inc adc jge daa add push cli test sbb (bad) (bad) jge (bad) inc (bad) cmc push ret inc add sub (bad) incl add and push add add incl mov cmp or mov inc lods test jmp add or or inc testl mov rorb add push inc mov mov loope fadds add jo aas push shrb daa add add bound xchg adc mov add scas in add add add add test movsl aam sub mov insb jns jo fs sub add jne add sbb xchg data16 stc mov jl mov jae (bad) (bad) (bad) decl mov push push push push mov jle (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl pop shrb std inc lahf (bad) int adc jmp (bad) incl add add rol repnz mov test pop push pop push loope mov in aas or dec jo lods clc lret lea xchg add add and fimuls mov mov or stc push add popf out dec mov dec push mov jecxz add add jbe add add add and ds lock rcll push add add add add and add lea jne jne add in jne lret dec sbb and js add add add add add dec push repnz movb add stc (bad) repz push dec cs push add add inc sbb add (bad) (bad) sldt pop add add add add adc mov inc cmp mov loopne cmp xchg add add inc testb push fmull jne stc addb inc test add cmp mov add push je call call mov jne repnz pusha or inc incl inc mov jb add call add jg mov pushf sbb jo xor add (bad) nop add add add mov test dec loopne andb push push shlb add sub add add mov mov sbb xchg sbb rorl int (bad) (bad) (bad) (bad) (bad) (bad) incb add push add add push lods push es push popa sti adc stos push push test lret and testb mov jne jne inc mov inc ret mov dec add stos dec (bad) pop test mov mov lds mov arpl lods add sub roll push push push push push add dec push mov add add addl call iret jbe icebp jle cmpsl (bad) push nop loope imul mov gs add popl mov adcl adc in int xor pop cmp inc inc (bad) (bad) setne pop (bad) bswap int3 int3 int3 int3 ja jle ja ja call fucom out addr16 dec jmp ss rol mov call xchg add add psraw mov and mov and (bad) (bad) verr adc add add push adc add add (bad) sbb call add add xor lods mov pop jbe cmp mov add jne jne shrb rol lea sub lret fdivrs sbb lea sbb (bad) aam (bad) xor dec inc xor add inc add test mov call add jg jne or out pop or inc add paddd incl jne add call call add add add test push testb test call inc decl add add or je push ud0 jne add mov incl adc dec in inc je in push incb sbb jle add add and push cmp push mov add xchg and add add test add add mov inc js xchg rep cmpsb cli dec andb int3 pop std xchg mov inc inc inc inc enter test add stos pop cmp loope sub xchg lret mov add add add add xor in add add add mov add add fsubrl add add mov gs out and push xchg and mov xor es jmp stos inc mov jg ret jge push push push pop daa unpckhps xlat fdivs sbb pop xchg push push add add xchg add and and and add testl decl add ds into mov nop pop imul fdivrl or add add add mov sub sbbb add fisubrs push add add jns add add push or add add add out pop push cmp mov pop mov add add add add xlat pop jne jne call imul pop call in repnz outsb cltd jecxz negb movsb push int3 int3 int3 int3 add add call call add push imul xor mov jecxz fmul ficompl int3 int3 int3 int3 int3 shrb int3 int3 int3 int3 int3 int3 add add rclb ljmp add add add push inc add add addl mov mov add jmp sub and dec les dec add add mov sub out jecxz mov mov test add add pop cmpsl add hlt adc lret into add mov mov add lret or jne add cmp lcall lea pop cmp or add add aad add add mull lcall lea cmp add add push add add cmp add add cs add add test add fisttpll add clc inc pop add jmp add jne adc push pushw or (bad) add call xchg adc cli add push add push add add orl (bad) jne cmp or cmp add rcrb add xor lea sub cvtps2pi jne add xchg adc add clc mov add and add jmp pop data16 add add lds lock or sti jne mov daa add lea ja clc ja ja addl pop sbb out out aaa cmp addl sbb jecxz icebp xchg enter add daa aaa xchg addl call push cmp push scas push movsl pop insl add push ss lds call lea jne mov cmp pop mov jne add add add add scas dec repz add (bad) packuswb (bad) (bad) jns out add add out add mov lea rorb lret into or or hlt jecxz out ja push repnz xor call add (bad) jno jl dec push xor or add add add orl addl or and and cs (bad) jp pop stos sbb stc xchg add and add ljmp inc inc jb or cmp adc add add push sti test add add str int3 int3 int3 mov aad sub jmp (bad) out bound pop data16 int3 lea add out add add add call jl insl or push mov add inc test fldcw cmp inc inc inc inc add add mov mov pusha divb dec shll outsb push loope into ret jns popa push test add add add add add (bad) (bad) (bad) loop (bad) push inc insb hlt jmp cmp decb add fwait jnp xlat add add add xchg push add add std or add add sub aad mov fwait pop add fcomps int3 add add add add dec push jecxz test ret rol scas adc mov rolb jne cs sbb jne or or add out movsl add add mov cmp mov int insl pop xchg mov add cli and inc inc lcall (bad) incl arpl cmp fimull (bad) pop test or add xor movl add mov incl add int incl inc test push je cmp mov div sub add push (bad) mov sbb clc mov or dec add stc sub pop adc add test add add (bad) rorl lea mov inc fimuls cwtl movsl int jmp sbb push (bad) incl add add add add lret sbb in push rorb lods rorl movl fdivrl mov outsb push push add inc fiaddl add add mov pop xlat bound test cmp push movsb js adc arpl push cmpsl ljmp stos lea mov cld push sub daa xchg idivl mov incl add mov add add add repnz add ljmp xchg xchg (bad) (bad) (bad) decl aad aad xor iret mov icebp orl mov add add cmp mov iret inc call lea mov pop sub pop mov mov or adc add add add add add add inc and cmp les dec mov and xchg mov stc mov cmp push xchg enter add add push mov xor add add addl addl add add add dec jne psrlq int3 push cmp jg push sbb add add and pushw (bad) ljmp mov add inc mov enter adc push dec push or dec data16 pop add rclb add (bad) pop or add add addl inc (bad) testl pushl add cmovle add mov (bad) jge sti push incl enter cs mov inc push add adc adc clc or inc add push add pusha inc leave adc enter iret sbb jns in and sbb adc add (bad) lret data16 imul mov add cmp jno idiv (bad) int js pop xlat je mov xor pop jb mov push mov add add ja ja cmp mov jae cmp mov ljmp dec int (bad) (bad) jmp and loop and fidivrl pop insl push mov cli dec sbb adc pop loopne add add in lcall cmp mov loope lcall fisttps cld or mov call push push push mov int3 int3 int3 int3 int3 jne lds jne add subl jge ficoml imul jmp arpl jle add add add inc je pmaxub mov data16 subb (bad) incl mov add add xor add add test jne jg cmp mov sub jne add add add call call bound cmpsl mov (bad) adc push and add call je cmp dec add add test push fiadds pop sub add add xorps or mov popf into sub mov subb add and ss ret std cld (bad) xor inc outsb dec sbbl add add add jns popf add add add xchg out and ja ja addl push ja inc popa pop je sbb rolb add and mov and and mov arpl jbe fucomp (bad) (bad) (bad) (bad) (bad) js jb adc xchg and jne jne jne add jns jle add add add mov mov add decl ljmp xchg adc lcall cmp add mov in xor mov mov xor mov sti test inc adcl inc add sbb add push add testb test cmp clc add incl push add inc jne add add add xchg pop mov xorl mov faddl incl cld or in adc imul push mov add jge cmp (bad) (bad) movd add add mov add (bad) (bad) (bad) pushl jne into pop inc das or jl,pt stc inc nop add add add jne jns jne jne add sub pop xor inc iret addr16 cmp sti inc js in ja mov mov stos add add add adc dec ja sbb addr16 xchg sahf inc or push mov or cmp mov add push add (bad) (bad) (bad) (bad) (bad) (bad) (bad) mov imul jge and or or pop lea outsb mov fnstsw add ja loop nop sub sahf rorl add add shufps (bad) (bad) andnps imul lods or and adc add movsl and ljmp jae mov add inc inc inc jne jne lcall add add cld sbb add add add lods int3 imul sahf aas mov or rcll xchg mov add mov dec mov mov popf leave mov mov lea mov mov das mov add add add add ret leave fsubr fmull pop mov adc add ja push inc arpl xor adc add sbb loope add inc lock add adc or push jne push or xor clc adc push cmp jmp xor push add mov dec push sbbb add mov push fadd adc inc or push mov sub pop dec call and jne push ud0 inc cmp jle mov adc add add add scas add add fildll cli sbbl sub in in in jnp pop add add idivb mov rorb or sub lcall add add add rol in push rol add add mov add addl push add aaa bound lcall dec mov mov (bad) (bad) (bad) in jl dec lahf cmp lods jl add add xchg mov test push and add add add mov mov add add jnp add add add fcom nop cmp testb cmpsb adc add add or add add add repz test aas add add call call adc nop mov (bad) jge mov repnz pop push and lea (bad) (bad) decl (bad) (bad) (bad) incl add push iret push mov pop repz jns push aam add fisubl mov mov adc add add roll add add inc xchg (bad) (bad) lcall mov fstpt jl fisubrl sbb mov push movsb aas call add pop dec cmp or mov sldt pop outsb daa mov jne test jne fucomip test add add jb dec insb xorl (bad) ljmp add add mov xor inc inc dec jmp test add mov mov cmp push je push or jns inc add repz incl sub jge loop inc or adc push add inc push cld mov call je call adc add (bad) mov (bad) fdivl add lret scas andl movsl mov int3 outsl mov rcr ret lods and dec push add stos jno int3 int3 call add scas imul (bad) pop jecxz pop cmp cmpsb lahf jl dec cmpsl ljmp lahf adc imul sub mov aaa mov lock (bad) int3 add add inc ljmp inc push and rcrl call add add push xchg adc jmp ja frstor ja ja (bad) jnp (bad) (bad) pushl jne pop or and jne add je pop sbb add push mov andl add add add scas add add (bad) scas je xor xor aad lret inc js fbstp rorb add add mov cmp lea ja movsb ficoms mov test jp ja add add add mov test and add add insb and and xor fnstsw in lods cmp str add push cwtl mov or sub add fwait fwait daa pop rcll xchg lret xor mov (bad) dec stos cwtl (bad) (bad) call add jg add add mov out outsb fimuls cmp fidivrl mov int3 int3 int3 int3 push adc mov mov insb pop sti les push push push push int3 ds or test add add insl cmp add push or adc add add or inc add jb pushl add add loopne icebp add enter decl inc add or add dec inc in (bad) (bad) pushl shll jne add jne inc mov hlt loop addb adc shll cmc xchg mov nop inc inc add add add add add movb add add adc dec in imul wbinvd sarl cmpsb jnp jae jo movsl mov add add mov add add cmp in cmp outsb arpl rolb mov mov daa mov (bad) (bad) lcall orl pop adc in push push (bad) incl add add add nop jno rolb add (bad) ljmp cmp lea lea push (bad) or jnp ret mov cmp test add mov add mov mov mov jge (bad) mov push inc sbb sub push dec mov jne jne add int3 cwtl xchg add lea add jmp test push loopne subl cwtl cli andl add lds add mov jl js dec out test mov repz add cmp jge jge add inc mov xor add addl (bad) (bad) call and call jne test test decb push addl sbb add decl pop add add insb add rorl inc inc add jbe add lock ret jmp incl incl cmp mov clc add addl lea in sub inc add add ljmp cmpl add add call jne jne mov aaa xor lock outsb jne aaa add mov add add loope add (bad) (bad) wbinvd inc pop test lcall jne jne mov sub rolb jo push inc inc inc inc mov inc lcall lahf push cld lds enter jg mov mov add mov jo inc daa (bad) pop lahf fwait add addl (bad) call mov mov mov and lahf (bad) and and add mov std cmpsb jno clc cld mov test add add pop into add add jae pop stos pop mov sbb jb add add add xchg sarl iret pop add (bad) (bad) (bad) decl (bad) movups (bad) emms ja ja add in pop add add add pop dec push ss fstp mov cmc push sub aad (bad) mov inc sar (bad) (bad) incb xlat ljmp and push xor add add lea add jae add add xchg imul or add add inc out add lret fdivs adc dec outsl add jne jne jne add add cmp std gs cltd dec jns mov bound aas in (bad) mov cmp (bad) (bad) (bad) decb mov (bad) (bad) (bad) jbe dec or sub sbb adc adc call pop push call add add inc mov pop xlat add and cmp jge cmpsb add add add add pop mov (bad) push add add add add or jne sub cmpb lret cmpsb enter add cmp ja leave or pop or pop xchg icebp xchg mov push and es push mov lea call call add inc decl adc add incl add clc add add add imul inc jns add clc inc (bad) repz jmp mov mov mov inc fadds or shlb lret add inc jmp add jl lods rol test ret inc add pushl je fldt les inc call call add xor add push push add add jnp cltd stc push sub (bad) cltd sbb jae push add scas add add mov mov push pop cmp add add mov mov add add int3 int3 int3 int3 lea lret xchg cmp into ljmp jbe cmp lea mov or or or hlt mov push sbb adc mov mov je fwait jo les add add mov add add push jle fldenv outsb in xchg hlt or sbb inc mov mov lea (bad) decl outsl sbb negl (bad) pushl jne jne call call (bad) out and call xlat cld push push push push ja sbb ret cmpsl cld (bad) js mov push movsb fistl ja ja sub mov cli sbbb (bad) mov inc pop out stos hlt cmp pop mov ja ja add sahf mov add add add xchg add add int3 int3 imul inc cmp fwait add mov aas push or dec int int3 add sbb lea outsl mov sahf xchg test in lea inc les (bad) (bad) bswap mov hlt mov add add add add aaa sbb xchg pop mov inc pop filds call add inc add add (bad) call dec (bad) and jb mov mov (bad) pop push (bad) incl add repz mov sub and add add add and add add push add mov jne add add mov jne je test (bad) call inc add cmp inc clc mov jne adc mov psubsb ljmp adcb mov mov add cmp push incl adcb mov aam adc and loop mov add inc jne psubsb (bad) (bad) cmp dec and add popw add add mov dec jne inc test add fbstp (bad) jbe and shlb (bad) paddsw in mov pop or lea pusha mov bound add add testb call mov clc lcall xor sub add mov add add add add hlt add add add add jne out sub sbb nop cmp lock shll jne mov (bad) (bad) (bad) ljmp fcoms push fnstenv add add je jp xchg cmp pop mov test add push add add add jne es mov icebp pop push repnz mov aaa and gs call call ds xor hlt imul (bad) or or mov addl andl and mov loopne ret enter shl mov xor add add add call call cmp mov dec lods popa or push (bad) icebp int3 pop call mov cmpsb outsb inc or call incl addl ret pop (bad) mov daa xchg js pop rorl jne jne push pop in jne add add jne jne cmpsl push repnz sahf gs sbb outsb jne mov add mov add ficoml inc out (bad) (bad) incl inc mov loop sub dec cli dec pop clc add add psraw (bad) (bad) (bad) sbb mov push (bad) out aam add add sbb sbb pop sbb lret add add add cmpsl jl mov inc inc inc jle lds lcall lock gs out adc sbb cltd addl sub or xlat or outsb add add add add add pop add add push pop push add outsl sti sarb out enter int3 add add addl push add inc add test add and addl or add and lods cld adc xor call push addl punpckhbw incl xor aam (bad) psubsw adc add jo cmp add or or add push (bad) (bad) call add push jl xor push add cmp add add inc inc add pop mov add add ud0 pop push sbb inc add ret add add add pushf add add add mov popa mov push adc pop inc mov add hlt add dec mov stos enter call mov mov adc mov outsb mov jne aas addb das aad add add add addl mov add mov arpl icebp into loop jae jne add (bad) (bad) (bad) incl mov add jle add or mov add outsl bound dec rcrb fs add shll add add (bad) mov sahf xor stos fildl int adc and and add mov int3 int3 aad hlt int3 int3 add add add add and add add add jle ffreep push mov loop sbb addb mov test add jnp icebp add add add stos sbb mov (bad) divl adc add add jmp and in (bad) (bad) (bad) ljmp add nop add int3 int3 int3 int3 add add pop jp lahf cwtl lock mov repnz cmp call out mov add xor pop fsubl add clc fistps js rolb mov cmpsb mov movsb int3 cmp mov mov mov add fildl andl jne cmpb bound inc inc inc rcl enter add add add dec cmp icebp popa xor jo cmp scas mov lea xchg rcr add jne jne xor jne cmpsl fcom and and mov imul in in iret inc mov and das mov fdivrl out imul and add add inc ss (bad) rorb mov and and add add insb xlat add mov add mov shrl dec adc ja mov jecxz mov inc mov add add jnp pusha int3 fistps mov cmp (bad) (bad) pfsubr jle mov xlat int3 (bad) (bad) (bad) (bad) std mov decb add add and add add addb push push inc add mov cs leave add xor shlb call mulb add les pusha dec add daa sti mov push sub sarl pop jl pushl add add adc orl jns mov add mov add adc cmp leave push push movsl push add mov xorb lahf jns scas fsubr mov mov addl add add sbb pop or inc mov push jl pop pop notb or lahf jg or add add call cmpsb sbb jne ret jp insb rcrl mov add dec lret add call call rolb sarl into movsl pop adc rcl sti mov popa fiadds add add cli mov stos jne les cltd rorb xor std mov dec xchg add add inc inc inc lods popf addl add add incl int3 (bad) (bad) (bad) (bad) (bad) incl pop dec shll dec das push fwait mov imul decl mov and pop mov add lods aam jb add add jne aas sbb jne jne pop fwait mov lea cmp rorb add addl add je out (bad) ljmp jmp pop add add leave cmp cmp roll jmp sbb add incl je add push push (bad) inc leave (bad) sar add mov (bad) std cs call roll mov add rolb push ud0 add rolb cli aam iret mov add add push xor (bad) xchg push shrb addl jne jne jne incl (bad) (bad) decl pushf lods int3 test lds jecxz or imul les ja ja int jbe add add loopne add add inc iret lcall insl mov dec inc sti or xchg mov sub call cmp push push mov dec add (bad) (bad) (bad) (bad) incl add sbb add add rcrb adc lea loop pop shlb outsl sbb jns les add add js add add and aad inc filds mov fists jbe mov sub test imul ja ja ja rol mov add add ja lcall add jmp dec pop or cmp or mov ret dec dec jge mov add lea fsubr jmp push mov sbb call adc push sbb add add inc inc inc inc lea ss sub inc popf cmp pop mov mov inc inc inc inc inc inc pushf jp inc inc add add (bad) pop adc cmpsl outsb loop add sub and aad adc and add out add add or or into pop rcll popa pop lcall (bad) cmp (bad) (bad) (bad) clc in sldt add add add faddp sbb mov mov mov add add add add int3 int3 adc jp (bad) (bad) (bad) incl daa cmpb sub icebp pop in call out add add push (bad) ljmp (bad) in sldt mov add add add cltd ret add addl adc (bad) punpckhdq add add test je cmp and add call rolb or add mov cmpl roll inc repz add or adc xor inc jne push push and dec sub add add inc clc incl ret xchg dec (bad) (bad) (bad) jmp pop mov dec imul outsl cmp jne jne jne (bad) jmp (bad) incl add add jne sbb add add mov sti push ljmp insl cltd ret push cmp push (bad) jp (bad) (bad) incl xchg stos push int3 mov inc pusha push or mov add add incl (bad) (bad) (bad) in push ja ja sahf insb cmp mov or std xchg push push test lret mov add (bad) (bad) (bad) (bad) (bad) lcall mov sbb fwait icebp es sub mov jae in mov leave pop repz adc (bad) (bad) incl add addr16 mov in lea inc sub pushf jl sbb aam (bad) (bad) pcmpeqw add add or in cmc imul mov add add add sbb add (bad) (bad) mov xchg (bad) lret stc roll mov inc data16 mov and jns lea idivb add outsl xor add add psubusb enter lcall push push inc shrl addl jns jne jne lea sbb cmp pop rcr mov pop dec lea test out std loope dec ret mov adc ljmp add mov add jae add add and add push push jne stc sarb and xor bound jne add add add push or mov inc call jne pop mov add add test je stos xor icebp decl ljmp incl push lods add ljmp mov mov sbb add je add incl mov jl add add jne int3 nop cli int3 int3 int3 add add jbe push outsl sbb cmp add jmp adc pop jmp fcoml (bad) (bad) (bad) incl arpl inc add add mov mov mov pop add in out mov jb pop jns mov (bad) (bad) decb dec add (bad) (bad) (bad) (bad) jmp and outsb inc insb and push pop pop rcll inc lods and add add add scas addl ret mov inc inc inc inc and fwait pop dec rol cmp jb push lahf cmpsb fs arpl and and add lds add add jmp lret sub jne sub lahf mov adcb (bad) lea add push jge add add add and in dec xchg movsl pushf cltd push cmp (bad) dec add cmp shlb add fidivs mov cwtl jl cmpl fstl mov sbb and out add add xor int3 add add add and and pop mov cmpsl add inc jno gs and add add add push xchg ja ja add fadd mov add adc loope iret nop je std int mov add add add add add add js adc cwtl add mov scas and mov add adc nop add je push mov xor sarb push (bad) push add jmp push lock nop cmc push incl (bad) call decl enter lea jmp pop add rcll push loop inc cmp call add add add lea push jno mov jl popf out (bad) (bad) (bad) (bad) (bad) incl add add add add repz test fildl and adc aad (bad) test add add addl adc shll loope ja ja fcoml dec and loopne adc ja add add (bad) add int3 int3 int3 int3 int3 add int add add sub (bad) cs sbb dec mov jg dec push lea mov in dec scas add add add xchg leave push shr mov add add pop jecxz scas add add xchg imul mov push lea mov in scas cmpsb test cs je fs fs add add add mov sbb lods push xorb or cmp ret and xchg inc fldl dec xor ss scas jne jne int3 fs int3 int3 int3 int3 (bad) mov mov test ljmp leave jg add rolb add add sti bound mov insl add add add add add cs add add add inc out add mov dec mov mov int3 push inc lahf js outsl mov add add add add cmp add jge adc adc push rolb add les push inc incl pop add ret testb add mov adc adc data16 inc imul in xchg or push pop jl push jbe add cmp jge incl xor test push inc adc add add add xlat rorl add adc rclb inc inc and add xor push call pop clc lea cmpl fsubp iret jg cmpsb mov mov xchg lret add mov add addl or int3 int3 int3 add aam add add call lret scas and lods outsb mov into dec lcall call test mov xchg mov sbb add add add adc jne aas push jne (bad) (bad) (bad) incb add mov call and hlt or xor fsubs add add add add jo push push add sub jb lods shl add xchg push inc sbb mov cmpsl sbb call jg add add ljmp (bad) decb enter js xorl cwtl mov call sbb jne jne jne add and mov xchg cmp add jne jne jne add add mov mov add popa mov mov jo (bad) mov push and out rcrl sti call add add jae sbb test sub adc add push push push call test add add ficomps mov push mov xchg pop push in or inc repz loopne cmpsb ja mov mov int3 (bad) dec stos js subb enter hlt add add add mov lahf add add xor in xchg mov add add rcr or into push fidivrs cwtl push mov and lds and add jmp cmp adc add add leave lds dec lds and inc jnp scas (bad) (bad) (bad) str rorb mov mov (bad) lret add add sahf ja stos lcall cs add add icebp sti push add add add and cmp shlb mov mov jl cld add add decl push cmp add add jne push mov pusha add jne push jne syscall jne dec add jne call int3 je jne fdivrs add inc add shr test jo testl sub add (bad) xor jne push add call icebp divl call rcll adc call addb movb and add ja ja ja int3 ljmp mov mov mov sub pop wbinvd xor ss sub js add add inc push cmc inc inc inc inc sbb (bad) sub add add jae pop loopne xchg and stos aad es add add add push daa add jne jne jne mov cmpsb mov sbb lods dec xor lahf xchg jno lret clc push pop jne out mov call add add int3 dec mov (bad) and shlb push out insl mov int3 add pop sub add add daa jbe add add add (bad) (bad) (bad) incl add cs adc add decl xchg aaa cmp in add add (bad) (bad) xor adc call add mov inc insb pop jno inc xchg add add add inc add add add add add in add scas (bad) outsl jb pushf lock jg ja cmp iret (bad) mov icebp stos add add inc das sbb test sar in lods cmpsl pop sahf cs call add add add or mov add add add pop add add je add add add mov fnstsw out add in mov call mov aas cmp fcmovne fwait cwtl lcall add xor lcall add add add mov mov add arpl push mov mov push push or movsl shll add add add sbb dec xchg inc sti jge je aaa mov add add add add add add sbb mov test lret adc push push mov pop inc inc (bad) xor add add add add int3 sbbl movsl dec fs bnd pop mov add and sti inc dec or in imul add add ss (bad) (bad) (bad) decl jl (bad) pi2fw add push xchg xor call adc lea inc push add lds in add (bad) in (bad) fdivr add dec dec inc str call incl add jmp add add add add jnp inc orl add add add push inc add inc push je pushw pushl add je xor push je push clc xor ret jo movl loopne inc push push add push add sarb ret add push mov arpl inc popf test (bad) in ja insb test xor inc mov int3 int3 or or xchg imul add add add add jne jne data16 call jae (bad) (bad) decl mov mov jge shl sbb pusha mov adc adcb adc add add repnz push mov push aam add rol rolb add add add add mov mov aaa int mov mov fcmovnbe add add aam add add add lret arpl (bad) cld imul add add mov mov addl and and and add mov subl mov and mov jnp call add add mov mov in jp jb xchg fnsave add stos dec out fldt xchg adc add add mov (bad) (bad) mov int3 and and ret adc xchg cmp xor xchg jmp mov mov (bad) (bad) (bad) (bad) (bad) (bad) incl and jbe sub addl push push or (bad) dec aas (bad) incl xor mov add add iret stos pop push xor pop dec cmpsb enter inc cmp add add add add add push jno mov inc ret mov xlat mov (bad) (bad) pushl adc dec lock rorb fdivrp and and and add add (bad) (bad) (bad) incl add (bad) (bad) movups adc adc in xchg or aaa or (bad) (bad) (bad) jecxz (bad) (bad) (bad) pcmpeqw or insb cmp push lcall shl mov pop iret add add push ret mov add rol int3 add js idiv dec movsw sub imul addl mov data16 lret sub add add addr16 faddp les adcl test shlb (bad) call (bad) sti cmpl add dec jb push or adc pusha fdivrs js add add add call xor cmp test jmp dec xor or inc inc rcll call add rol loop add add pusha sbb mov mov fmuls sub outsb push repz lcall jne out jne add add add add dec mov xchg (bad) add add add (bad) incl (bad) decl lea int3 int3 int3 int3 mov jno in and filds pop sub test pop mov jge add add call in xlat frstor insb sub add add stos jecxz jecxz aad fldl ret (bad) (bad) (bad) (bad) incl add int push add add add add mov adc dec mov adcb stos mov lahf pop mov xchg jae rol mov lea push pop or cmp test call aas lds or add add add cmpsb popf add add add (bad) (bad) nopl iret inc pop or lods ret shrl ud0 (bad) (bad) incl add cli add add jne scas push mov leave fwait mov mov cmp lods pop cmpsb push sahf mov dec in int add add dec das add add scas xor in xchg imul add jno jne sbbb addl cld push adc and je pop fldl je addl jne push cld push add leave inc cmp clc push cld add push or push psllw sbbb add mov (bad) fadds in cmp or int3 loope push mov or and add adc cli push cmp cmpsb call rcrl loope add add in mov cmp add int3 int3 int3 and mov or or decl movsb scas inc lret rorl loop mov (bad) (bad) (bad) dec mov int3 int3 int3 int3 add pushf (bad) icebp xchg orl mov scas mov data16 dec insl out lea add add add add xor int3 int3 int3 int3 int3 test test add jb sub cmp push out pop aam inc hlt mov add push cmp (bad) (bad) decl xor fstpt lea lret (bad) (bad) clts inc mov in inc inc inc inc inc push push push dec pop mov mov cmpsb mull mov inc xor icebp push push mov add mov add mov jl cmp pop jnp dec inc add add dec lahf add shrb sahf xor add add add add add pop add add dec or inc jle pop xchg xor das xor xor daa adc add add cmp add add add scas mov pop lcall add and and (bad) (bad) mov (bad) (bad) (bad) (bad) (bad) mov inc inc incl add push add incl add cmc inc add inc inc xor cmp or incl decl sub (bad) (bad) decl jno call (bad) mov roll push adc addl addb add jns orl add add incl (bad) cmp call lds jge in add incl or add incl push sbb rolb outsl rclb sub inc add lea incl (bad) (bad) (bad) incl sub dec sarb mov push adc or mov call lods notb xor cmpsl sub mov rol mov mov arpl inc adc add add mov (bad) incl add test ja cwtl data16 lret xor sub push push shl scas test lea fidivrs aad sub (bad) (bad) stc call lods arpl mov xorl jne push fidivs add add inc inc inc mov rol dec push mov lock or add add add add jne jne (bad) andnps outsl push and sub rcrb psubsb sub in callw call add add and fsubl and dec fiadds insl xor je movsl sub mov jo lahf add (bad) (bad) decl (bad) (bad) (bad) pcmpeqw add adc or push mov addl or and add add add push fildl add add push jnp cmp fwait mov cmp lea add add mov pushf shrb ret add add out mov imul pminub add add add pop inc add (bad) (bad) (bad) (bad) incl add mov add mov pop ret scas mulb gs ret jnp stos (bad) xchg inc rclb push add mov mov xor mov pushf push dec jecxz add test mov add xchg lea sbb add leave lret pop sbb cltd mov pushfw js lods xchg lea add add add dec dec xchg fwait ret mov pop dec pop push jns add push adc push sbb push jmp lea add push push push push add out ljmp pop test jp adcb sub adc jecxz divb addr16 mov aas mov add add add add and les add int3 int3 int3 int3 int3 mov mov movsl cwtl mov (bad) rcll andb pop add jp mov call xorl add shr xor testb inc push xchg add inc or cmp add add mov (bad) data16 adc fs rolb lea or movsl movl lea jb push push pop cmp arpl ja dec loop rol std jg ljmp imul (bad) (bad) incl add mov fldl sbb add (bad) (bad) (bad) adc push jae out hlt stos xchg or rorl psubsb outsb call cmp daa ss xchg xchg imul jl add add sub andb and rol rol cmc mov rolb inc add add (bad) push inc jb xlat push in imul add mov add add add popa push dec ss lret scas cli hlt addl mov pop mov cmpsb cld add add add add add lret cmc (bad) (bad) lcall cmp mov jns int3 int3 int3 push js add add add and lods mov in pop sbb mov add add add in and add add push cmp rorb push inc mov inc mov lcall inc test add inc adc mov inc adc cld or push incl add add lea add jb popl mov inc add push add jne inc incl dec mov push call push roll decl add lds hlt sbb mov dec or cmp lds inc iret push add add add add or out inc mov add add addl outsb push ja vmread insl insb mov lret sahf mov in fwait mov std mov add add (bad) (bad) (bad) jnp icebp (bad) pushl jne jne add mov mov mov imul mov jge cmpb mov add add add dec movsl rcrb icebp fidivs addr16 incl xchg push (bad) (bad) (bad) decl add add daa lret add add add aaa pop push and addl test inc mov mov or and mov xor loop cmove pop loope mov adc (bad) mov add push add add add jmp add add in lahf ss xchg cmp lcall fnstenv out xchg add add add ja pop sbb jnp jl sbb mov ja push push rol xlat cltd clc rol add add add pmaxsw daa (bad) (bad) (bad) str jne sbb mov ja dec add add add mov mov notb sarb mov test xchg mov out test call add pop pop rolb add add add add add add das negb aas push mov jp icebp xchg pop bound xchg lds cmp add add xchg add xchg (bad) mov adc jne push sub push push push jl ja ja and ja and and add add in cmpsb jae dec stc pusha and sub daa outsb bound call jne iret jne,pt jne add lahf cmp clc xchg addr16 sbb add ja jbe xchg jl mov fsubs shlb ja popf sub jae sub jge jne call lret pop push incl data16 cmp call fcos inc or sbb add cmpsl add ror test lcall push and jmp cs cmp sbbb call orb add push jb sti add add pop mov jne or inc mov add xchg add add pop loopne ds dec pop mov repz loop rorb add add stos mov push push test fimuls lahf cmp mov test (bad) (bad) (bad) jl xchg loopne (bad) (bad) call call popl add add sub idiv or mov pop loope pop cmp add add bound jbe sti leave cmp sbb fmuls (bad) (bad) movhps int and jecxz adc jne jne jne jne insl fistps (bad) (bad) (bad) (bad) (bad) (bad) ljmp mov (bad) incl add mov pop push bound jo sahf xchg test xchg incl sar (bad) (bad) pushl push fdivrs aad lods xor sub add add add add leave add add add mov adc movzbl loop (bad) mov mov jle xor mov (bad) (bad) (bad) incb add sub add add add mov pushf pop jmp cmp fdivl add lret add insl mov je fsubrs (bad) (bad) (bad) decl mov add add mov sub sub int3 or into jmp dec inc push neg add add sub add add add ja ja mov stos push shr add add add add add aas add add add and insl (bad) mov cwtl out arpl outsl cmpb sbb add add mov aaa cmp jle push sahf lret add xchg add (bad) sbb fcom scas fimuls cmpsl or (bad) (bad) incl add incl push mov dec inc loopne call fdivr jbe call pop add decl in rcrb push lock mov push sbb add push incl adc add (bad) cld (bad) or jne add addl add shl push jne add mov or pushl add (bad) pushl ja (bad) ja (bad) (bad) (bad) (bad) jne es jne jne (bad) pushl mov mov sub (bad) clc mov (bad) (bad) incl in xor add add add sbb imul jns sbb add add lea test test add add add add or fwait and mov xor into add mov add aad add add add pop jg xchg xor dec adc add ja sub (bad) mov popa lds add add (bad) aam movsb lea inc and and push cmpsb inc jg inc fadds pop fnsave mov cmp jbe ja ja pop cli ja add add lea ja pushf sarl andb ljmp add add add daa xor add rol mov rorb mov call hlt hlt inc stos inc pusha outsb cmpsb fdivs or aaa sbb (bad) (bad) pushl les pop jae add add adc in push inc ret push add add add add add ja add adc add (bad) (bad) pushl cmp daa xchg or popa push aas inc or push xchg fnstenv push test sub incl test dec test dec inc jno cmpb add add add ja add add ret mov mov add add mov adc push push cli pusha inc xor test push xor faddl adc add and or add test shll xor mov dec add jne pop mov (bad) pushl adc inc in aas clc add psubsb add test inc aaa add add inc lock xor xor add add ljmp loop data16 test sbb rolb inc incl add add or mov pop add or mov sarb sbb stos js jo aam lods add mov add add add jne mov push dec gs inc push (bad) push sbb add mov mov and add (bad) add add paddd (bad) (bad) (bad) nopl scas dec cmp in mov sbb imul icebp lds add (bad) (bad) jmp pop sub add add add int3 int3 shll sti fdivl sbbb mov int3 add add add add inc pushf pop add add add rorb add add add cmp sbb movsb xor (bad) je (bad) arpl add add jne cmp jne sbb inc push xor repnz inc sbb movsb jle add dec leave mov mov add add lea lea add add jne jne or xchg mov ret mov fidivrl xchg movsb inc jne lea sbb cmpsb mov xchg jge xor push add add add nop mov add add or ja ja aam lret (bad) (bad) (bad) incb add testb cmpl push sbb outsb push fcomps call mov mov add dec adc dec lds push mov xchg add add scas lods jnp cmpsb jmp jecxz pop pop xchg inc add add call call dec add add data16 push mov daa cltd loope imul sub dec pop inc repnz rol shrb add add jne and mov mov clc outsb jne add add add add es inc add add add push mov cli sbb (bad) (bad) (bad) jne mov jmp lcall rcrl les jne add add add dec xorb pop enter out add add mov cmp add iret add sahf lret jne jne jne mov mov add mov (bad) (bad) jmp pop lret ret sbb pusha push aam push aas fucomi sub mov (bad) decl mov filds test (bad) push add add jne push add ret dec add add addb or inc inc cld push rolb add loop push jmp push jnp sbb and push xor testl mov add mov push mov jne std jge push adc pop add test add add add adc xor push incl incb sbb mov lahf jge enter add add jae call push push outsb sldt add sbb inc add jne jne mov sub out cmp icebp ds jg pop mov add rclb rol add add fwait xor xorl add lea out mov out add add lods out add add lcall (bad) (bad) ljmp cmp inc fldt into seto jo xchg ss dec add add fbld add (bad) (bad) (bad) (bad) (bad) (bad) jmp dec imul cmp aad incl test test push test add and xor (bad) (bad) incl rclb sub insl (bad) fcoml and add add add jno and and push repnz cmp mov dec dec mov pop (bad) out les shl stos sub mov add add add add push add add in jne jne call daa sbb pop xchg jb pop xchg mov aas and push repz stos call lret add add ljmp mov and adc xor cmp (bad) incl ret aam scas add add mov lret enter (bad) (bad) (bad) (bad) (bad) (bad) pushl push cmp out and (bad) (bad) (bad) (bad) (bad) incb add imul add or data16 sbb add or ret mov aaa add add mov mov add add adc jnp pop and negl pop sub ja call imul call call icebp lahf jmp and mov (bad) (bad) (bad) decl cmovs xchg das (bad) (bad) jae addl test popf cld cmpsl dec push cmpsl cmpsb insb or push add add add lods add add mov fmul and add dec dec (bad) sbb mov or xor mov mov (bad) decl scas (bad) incl inc inc (bad) (bad) sbb aaa or call pop or or incl add inc (bad) (bad) call push or (bad) incl add sar adc add cmp inc cmp sti dec jne lds jne incl aaa int (bad) sldt add lds cltd cmc leave sub xchg test test and xchg sub and and outsb lret out mov xchg stos xchg sub jae and and mov pop mov mov add add pop sbb add and and lock in push sub cmp mov mov fisubl (bad) (bad) (bad) (bad) sldt xor add add add mov pop (bad) pop push iret out and add add je xchg push int push xchg mov mov mov add inc add add add cmpsl xchg sbb cmpsb lea add xchg in pusha nop or add fwait call call jmp in lret (bad) scas cltd pop mov add add (bad) (bad) jmp addr16 (bad) (bad) incl add aam add add xor add add andl push xchg jp add adcb addl rol dec jne das (bad) loopne popa cmp add add mov or pop aam jne jne jne add cmpsl scas addb add inc push call xor jne jmp or inc inc xchg incl inc rolb xchg roll add call add sub mov jne cld in add jne mov push add inc mov pop jl bnd push icebp les (bad) (bad) jmp inc adc cmp add cmp fistl pop orl cmp mov mov or hlt mulb decl sbb inc add fsubrl jne,pn adc lods add test add (bad) (bad) incl adcb push pushf outsb xor cs frstor push sar incl mov add add sub add pusha and add add add add into add add ret sub call fldcw jle gs repz adc add (bad) (bad) (bad) (bad) incb add add add add cmp add xor lods add test ror dec dec shlb test mov add fwait add or or cs cmc push adc inc cltd jle rep mov jecxz and mov mov add add cld mov pop mov cmp pop lahf add addr16 mov add mov mov lea adc xchg mov add out jne jne add add add inc jmp scas fucomip aas and xor addl and dec push fwait movb orl jne mov ja jne jne jne add mov add add sub fdivl cmp pusha dec jle inc filds popf out out dec sub add mov cmp xlat push adc add add mov jae mov xor inc inc inc inc imul push push and and pop add (bad) push stc xchg pop aad sti loop imul jne jne hlt jne jne push push pushf xchg loop push enter mov adcb (bad) xor jbe pop test xlat sub int3 add add (bad) shr lea jmp dec (bad) insl std fadds ljmp lret pop mov xor add mov lahf jl mov outsl jne call add sbb add add lea lea addl jne or leave ja,pn repz (bad) mov addl addl adc sahf mov xchg inc test add add (bad) xchg push lds cmp (bad) ljmp and adc dec add push pushl mov add sbb add add test inc add mov cld adc cs sub paddsb decl je and call or addb popf and outsl call add add add out int add call mov mov (bad) lcall xor push jle or jecxz push mov mov pushl dec jnp jne jne test shlb sbb jae into push add shl add add mov (bad) (bad) ljmp and add add add mov hlt mov scas push lahf dec inc sub int inc jno add (bad) (bad) (bad) sldt jl add add add push and pop xchg sbbl in test add imul adc push push add add (bad) rorb (bad) ja cmp sub cmp lret mull dec dec mov add add (bad) (bad) decl int in and out iret push (bad) dec int3 int3 int3 int3 add mov add rol fwait mov lea int3 int3 int3 push arpl add lea iret mov xorl (bad) (bad) jae addl cli cmp pop push jmp sbb add add and lret jo in add push push incl add je mov leave sti add and add add adc add jle add push rcll add mov inc jmp test rsm add push mov loopne add add add add add add mov mov mov pushf ds inc lret jg and loope in xchg or pop in inc jb pop addl add add lret stos (bad) mov roll or jbe mov repnz pop add add popf add add adc (bad) (bad) (bad) (bad) (bad) call or jae dec (bad) aam ds ljmp (bad) incl add add add sub add add add add fsubrs test rclb aad add call (bad) cltd mov movsl lds call sbb mov mov clc dec mov call adc cld xchg insl inc inc inc inc add stc inc add add add (bad) xchg ret (bad) and mov add add add add add add pushf add mov (bad) mov cmp pop outsb mov cmpsl loopne mov add add add into add add sti mov outsl (bad) daa jmp jmp loopne add add and pop ja xlat loop mov shl jmp push push add popf mov (bad) (bad) incl rcll adc sub adc clc leave push push jne ud0 mov add jmp push (bad) and cld inc rolb incl add cmp jne call push inc lcall call leave and push je iret testb adc jne cmp es add pushf mov cs aaa gs xlat mov sbb in mov add add out mov add lahf leave fs dec adc xchg sbb add add adc inc ja ja iret or mov mov add add add add add jnp cmp inc test mov push aas add mov int3 push pop int3 int3 int3 mov jo xor xchg fstl mov jl or dec enter jp sub add add add pop cmp add add addl pop inc stos jge aad sbb nop fdivrl add add mov orl sub rcll pop jmp call or or or pop out leave js ja or or out (bad) (bad) (bad) (bad) call inc add mul fdivs loope iret call and (bad) (bad) (bad) incl arpl sbb cli xchg pop (bad) (bad) (bad) bts fsubr lock jg sub je fsts (bad) (bad) (bad) (bad) incl add pop jle add and and and pushl (bad) (bad) (bad) incl add loopne cwtl or test ja sbb fdivl arpl out shll add jne fsts jne jne add mov outsl mov mov scas bound lret jg add sub lea add ret add mov mov mov cmp add add mov jne lea call je lods add sar inc jne push mov aam adc jl add std cmp mov add add pop lahf ljmp add add xchg leave rolb jne jne add add or xor xchg fimull (bad) js add and and mov stos mov jecxz fidivl jo ret es enter add (bad) dec jo adc xchg mov mov lds (bad) jle (bad) (bad) (bad) (bad) (bad) cmc mov mov xor in jne xchg stos insl pop inc inc inc inc pop out push inc call add add lret xchg xchg mov add dec xlat add mov inc xchg push pop inc inc inc add add add (bad) push stos and (bad) (bad) incb (bad) mov sbb in cs shrb sub push add add jmp call int3 out sub pop push pop dec scas call popa loopne mov fisubl add add add (bad) (bad) mov add add add add add add and xor outsl jl divl hlt loope orl rorl dec sahf adc dec jge dec shrl test add cmp lea push lea add add add add add inc push inc push mov add add add fmull adc or sbb test in pop inc mov rolb addb push call or adc clc add cmp cmp cmp lock push incl mov lock lea push cli sub ljmp (bad) clc or add push std or leave push lods jbe mov inc inc add inc incb (bad) call adc clc or push call add push lcall sbb (bad) sbb mov inc int3 xchg add add add call call xor sbb xor mov mov std stc inc fwait dec mov ljmp pop filds add add xchg and and (bad) jecxz js mov gs cmp xor cmpsl pcmpgtd mov lea int3 int3 int3 int3 int3 add add fildl mov sub push lahf cli jo add jne jne add add add add add jne dec adc jne lea jg dec sub jge leave sub sub xor test xchg add add cltd das jp adc push and and rolb and sub sub js inc pop add add mov mov push push push add js add add add xor dec lcall sbb roll jae pop mov and add shl sbb add testl sbb add (bad) jp mov and (bad) (bad) jmp add add ja ja cmp mov int3 pop jle loope and push aaa ja (bad) (bad) (bad) (bad) decl punpcklwd (bad) (bad) sldt add in push dec sbb mov popa add add sbb test cwtl arpl jnp add add push loope add add call call js movsl lret sbb imul iret stc js ret jne jne (bad) adc mov lret es cmpb mov shlb jne int3 int3 cmp movsl int3 int3 int3 add add mov add (bad) add add add push insl jne lods adcl popa daa jbe rcrb push adc add add mov sbb test adc divb push pop mov xchg and leave add add add int3 int3 int3 int3 int3 mov mov push rcrb mov scas ljmp mov (bad) sbb shll and push ss xchg xor js lret das sbb push push push push add sbb leave add add inc in call xlat mov or or or jne add inc mov add fadds je rolb loopne add mov add (bad) in or (bad) inc paddb mov add add mov lea decl rolb fdivr push add inc gs or add add adc jge lods add add jge (bad) decl (bad) (bad) jo and inc ljmp or mov lods xor cld mov fbld sub cmp aas add pusha jne mov add add add or andb call and or mov ja or gs into cmp popf mov add mov mov mov cwtl lret dec push imul ret inc clc jg mov mov add add add add mov fwait pop mov call paddd add (bad) (bad) (bad) incl add add add add cmp add sub add inc cs push mov icebp in iret clc insb mov add add add cmp aaa rorl cmp lea or sahf andb dec lea add add add add call and movsl dec and and and adc adc sbb inc jbe data16 push shrb and stos out int3 int3 int3 int3 add and lret adc add add push int3 int3 int3 and add add sbb add inc inc inc shrd xchg sbb test imul inc inc add add add test xlat test imul inc loop aam add xor and in into pop bound add add shrb rol int3 mov int3 pop lahf fcmovne sub mov aad int adc cmpsb outsl testl sti ret call mov pop jmp mov mov add add add add add lods (bad) add add fdivrs push (bad) and ret push flds mov mov int3 aad push andl mov mov pop lods repnz push jge mov call push add inc add add daa ret mov push xorl inc rclb add sbb push adc orl mov add add add push mov inc add enter inc incl inc jne add call mov (bad) cld rorl add decl sub push add incl inc mov leave roll mov lret or dec add add add roll add add add add cmp in mov sub hlt sbb cld lds add jne and jne (bad) or adc or (bad) (bad) (bad) jns mov addl xorl jne add add pop xchg lret aad sahf and mulb sahf xor mov ss add add add jmp lcall adc add pop popa int pusha sbb mov test or or add mov lods lock mov mov fwait add lcall addl lea (bad) pop push addr16 ret jae jg gs (bad) (bad) jne jne jne call call call (bad) (bad) mov (bad) (bad) incl jp test lahf subl push inc lcall add ljmp incl movsb adc mov jne jne fcmovb movsb dec and xor pop jne jne jne add add mov (bad) (bad) (bad) incl addl (bad) lock in imul and cwtl movsl xchg jp xlat add int3 bound int3 int3 int3 int3 and arpl pop cmova fwait cmp push out lds and mov mov add add imul call int mov push dec jne pop je faddl push add add add add (bad) fnstenv add inc stos inc int jmp add xor jg (bad) cmp dec inc int3 int3 int3 int3 add mov add add pop and add add mov and sub pushf xchg sar cmp lahf push add add xchg pop inc add add add lea inc push mov leave cmc cmp (bad) pop jle lea and and or scas mov or add add add lcall inc ficomps test inc fsub sub cmp inc inc inc add add fs xchg out pop add ud0 push add push lea rol or call leave push add pop call addl (bad) call add add and filds and ret add inc hlt or or push insl sbb test ja ja leave xor lods negl xorb pop divl inc inc inc inc (bad) (bad) inc xor add add lea sahf aam repz push sub fstpl cmp insl xor call sub jns les call sbb (bad) (bad) movntq clc (bad) add add add add add aad lret ret push and mov rcrb inc xor inc add (bad) (bad) (bad) (bad) (bad) call call or or insb jge mov clc sub jno or sbb loope add add push or add add sbb movb pop repnz (bad) cwtl out pop push stos sub call jnp call add sbb xorb lock testl inc inc inc inc (bad) decl and lahf (bad) (bad) incl test inc inc inc inc movlhps inc call call icebp (bad) out add adc add add mov cwtl je jmp mov add push les adc sub push sbb pushw cmp and add rcll gs add and addl decl sar orl test add (bad) (bad) stc enter inc call ret icebp data16 outsb dec cld add (bad) pushl add jne pop xor add test int push incl mov mov fwait shll (bad) ltr add add add leave mov repz ret sar xchg mov ret push add addr16 shlb gs shl out add add add add add and add inc add pop push and jmp or adcb cmp push xchg mov add add dec sbb add add and aad fsubr ret and sti mov (bad) (bad) (bad) incl push sbb je jne jne sbb lods jne and and add add mov adc adc inc jmp pop adc rolw add add add add sub add add add cli hlt addb pop lock scas pushf dec stos sub add movsb lods lods jb push fbld mov int3 add imul add add and stos adc out insl imul outsl lahf fs outsl jne clc iret popa add add mov ja ja (bad) (bad) jmp sub sub imul add add add shrl add add sub add ds jmp add add test lea jmp cmp jne mov push imul mov add dec inc lahf clc jbe jmp pusha push (bad) (bad) (bad) pmuludq test aaa dec nop sldt add add stos test inc inc test push outsb push push call rolb int push notb cmp mov call call push pop push shlb ja inc lods xchg xor call jecxz test rol shlb jne jne jne and xor adc out (bad) aam sub outsl mov call mov adc add call mov lock xchg dec ja call and xor cmpsl xchg jns add add call call adc push push loope ret add inc jb cmc ret inc sbb (bad) jns test add add mov add (bad) jo jbe insl xchg lahf cld add or or or rolb rolb add rolb mov or add add jmp (bad) mov dec pop pop cmp adcl push (bad) call add mov (bad) (bad) jmp lea mov jmp xor jne xlat cmp dec mov sub test add jne cld in (bad) add rclb call inc leave call adc jne jmp adc insl pusha out dec shrb adc cmp add mov cmp fadd imul bound jle roll add mov adc pop inc (bad) daa add call int3 int3 xor ja ja (bad) incl pop (bad) (bad) incl xchg xorb mov xor subb inc jecxz jo addl popa lahf add add add jbe aas push and (bad) rcr (bad) sahf lock add add add push sbb add add and and (bad) and test inc fcmovbe fstl fstpl roll scas mov imul sbb inc call add push addl add sbb adc add add pop add das mov call add xchg fdivr add add add add lock sub dec lea mov ret or les mov mov add add add add dec mov (bad) adc add add mov add add mov mov mov push mov rol add andb add add add adc aam inc cmc mov push mov pop mov sahf mov mov add sahf and add call add add push sarl lea sub pop mov jns test add jne adc jne jne mov shll (bad) icebp push pop xchg jmp mov lods add addl imul or inc inc and add add push or clc jmp mov inc decl pushl cmpsb call (bad) icebp push push lods adc mov mov mov orl push adc add mov (bad) incl jl inc jne push sbb jmp or incl (bad) cmp (bad) (bad) (bad) incl add add mov jbe push lds stos or js out sub add addl add add xchg or mov push or ljmp mov cmpsb push stc xchg pop (bad) (bad) (bad) (bad) call call push addl sub sub fmull push xchg stos lcall add add add add add add popa pop stos aad xchg add and add add add add add add and add sbb add or jbe insl cmp pusha mov test inc lahf cltd insl mov call call les sti inc dec scas pusha adc xchg add add push in cmp (bad) icebp or (bad) hlt mov add add add call call call jns mov xchg xchg insl ss adc stc cmc repnz push sub (bad) (bad) (bad) incl lods bound shrl mov leave pop mov add add lods popa mov add add call cmp call mov add notl push arpl adc xchg add int3 int3 int3 int3 int3 add lahf pop add add gs dec sub call test jae aad or jecxz cwtl sub jge add push add decl incl add push test add inc decl inc fadds and call push incl adcb push add add ret sbb add call loopne (bad) inc or add add jmp add lods add add add test add add btc push sub and pop stos or sbbb add add add mov and inc inc inc inc inc mov lret je movsl sub imul inc inc inc rol inc das mov add pop xchg add ja stos into ja ja cmovo int3 or dec push xchg repz xor (bad) jge lea test mov mov call sbbl add add and cwtd and add add add add add add cmp xor cmp or sub add movsl push aaa add add add mov scas pusha aad xor shll add add (bad) fiaddl lea mov jne jne jne jne mov int3 add sahf add lock imul mov lea lea test imul sub push js stos pop mov add mov jne xor jne sub incl fsubr inc push (bad) lcall inc fcoml mov mov mov mov inc mov sub inc add incl shll test add add adc pop (bad) push push mov pop add add mov andw call inc inc call and add push add rolb je inc in rolb call call fsubs mov lret mov (bad) imul call dec call lea add cmp push std mov cmp in ficoml add add add jbe pop add add addl (bad) (bad) bswap add and test xchg or fcoms lds int3 int3 call call clc imul add add fwait pushf movsl or mov mov out jmp mov loope push push (bad) (bad) (bad) (bad) pushl hlt hlt jne jne add jp cmpsb std push daa or adc pop mov out xchg lcall mov cli add add jmp jbe rcr ljmp fisttps add rcrb add je call xchg call add call or pop in or mov aam loope call add lock ja ja add and inc into rorb fcmovnb (bad) movsb int3 add add dec inc pop subb adc sbb mov add add lea in lea jno mov mov stc jb push add mov iret into xchg pusha and mov mov (bad) (bad) (bad) incl add js mov clc pop das insb adc lret int sub add and and test cmc mov test xor add jl roll add add (bad) adc mov push cltd xchg add add add incb cwtl cli sub jbe or leave mov add add push mov sub movb add add mov mov add add jne add and and cmp (bad) jecxz xchg pop inc inc or push mov push add incl leave mov jne adc inc inc mov adc ret pop inc add push push or cmp call call cld add add pop or add lea add add andb cmp add mov add cmp dec and test add add push dec mov push push mov push add add lea xor mov cmp jae in mov (bad) int3 int3 int3 int3 int3 addl add add pop cmp mov fs inc sbb add int3 xor lds popf test inc cltd mov sbb (bad) (bad) incl clc icebp push inc aad mov lods jp add pop les ja add add add add add fstpl sti (bad) xor test add call add test outsb fwait add add push cmpsl or and movsb push and and ja xchg push and sub push xlat xchg ljmp dec push call xchg mov cmpsl jmp cmpsb out add add and mov (bad) fs and inc add jne jne daa test jne add add (bad) pushl jae (bad) incl add jne pop movsb push sbb outsb sub cli cmp lcall call inc and sub mov push mov imul cmp std mov sysexit mov inc or inc andl or shr push inc add xor mov jne inc lock pushl cs add incl push push cmp jo addl cmp dec add add or addb push mov mov and rcl orb loope out mov or or add xchg or add add stc push add add push sbb addl inc cmp je mov inc outsb enter push mov add add add jb jne jne add xchg sarl ret mov xchg sahf add mov lcall out mov (bad) (bad) nop mov push or and and in add add jae lret fisttpl loope imul mov aad add (bad) cmp add cwtl xchg aad add add add (bad) incl push jmp pop (bad) cmc pop sbb inc xor (bad) pushl ja ja test pop (bad) jmp test testl add jo pop ja (bad) adc or add add and add add add sti add adc popa xchg mov sbb (bad) and push cld sub cmp dec add add add mov mov int3 add sbb add add add rolb jmp dec and dec cmc adc iret out movb jnp add add in fadds jnp sub int3 jmp add add into mov lret (bad) lcall lahf add in add jmp and pop in mov jae imul pusha and add add add add add add insb or add out inc pop imul add inc in test sub jne jne subl mov mov inc mull dec pop mov das lock dec sbb fwait pop jb dec adc add add (bad) push jmp leave jmp dec jge test std jne cld addl and jae incl add pushl and lock add add push ret lds fadds jb add sti adc jns mov lock adc jb push or inc test sub inc lds rorb orl adc add sar lea push push (bad) jmp add pop mov stos (bad) push add mov int mov jmp mov pushl les out jne add add insl hlt sbb push push push or pop pop mov popf jno,pn fstpl push push push push (bad) rcll sbb sahf lcall lods movsl push jne jne xor popf mov jno repnz xorb add add add movsb bound add add add add xorl aad aad inc fmuls fcoms jl cmc pushl (bad) add add add pop test mov scas add add push jp cmp push mov add into add push push push inc inc inc jne lret ficomps lds lea cld sbb inc inc test ljmp call cmp (bad) adc js push icebp daa dec call pop rolb pop jno jns dec inc ljmp jno xor mov inc mov ret ret jp dec sbb pop pop xor daa in xchg les lea jmp xchg hlt jl leave dec adc movsb pop and add (bad) (bad) (bad) incl add add mov mov rcll add jns jb es ss xchg lret test add jne jne inc xor fistps fwait pop fiaddl add add jno jae aas inc roll add add add mov mov add (bad) mov rol jno in shll mov leave sbb sub addr16 mov or (bad) roll push add or lea pusha sbb mov (bad) (bad) (bad) call add add add add xchg xchg inc push jg rorl pop sub and add (bad) (bad) (bad) (bad) incl add mov add add mov cmp and ficompl cmpsb add jne stc xor mov sti fbld add add js add xor call addl add (bad) (bad) (bad) jmp incl add inc add cmp jns add (bad) pop push ret dec add leave rorb mov mov leave test clc (bad) push jne lods add adc xor (bad) (bad) ds (bad) push jne dec add xor in or or jae out pop dec cmp rcl sbb cmc and push in cmp add add hlt leave dec add rol rolb add xchg adc (bad) lock imul pop shlb add add or call add fildl add mov lcall pop add add or or or mov gs fiadds scas mov inc add add xor movsb add inc jecxz pop add mov outsb jbe add jne jne call call xchg lods push shl andb in xorl mov inc mov aad mov cli scas sahf mov xchg mov pop outsl xchg and and mov pop (bad) add add out cmp add add add test ret and jle pop nop lea or jle xchg pop test (bad) (bad) lcall (bad) (bad) call push jp jns aas pop (bad) dec (bad) clc adc push add sbb pop xlat pushw pop ror add add push mov incl je add add sbb mov mov dec mov jl dec cmp out add add movsb push cmc add mov int3 mov popa stc rorl cwtl mov add inc pusha call mov call inc mov jp addl jne fs push add push jne jne inc and add inc add push jmp add decl add add jne xor add jmp cmp incl mov and jne inc shlb test adc push (bad) je adc xor inc push inc loopne inc je inc inc and incl and and decl ror mov or lods xchg jl stos add add lcall sbb xchg sbb les (bad) (bad) getsec dec (bad) lret xor adc mov emms ja ja add add mov add rol rol mov mov mov ja adc pop pusha ss xor sbb and xlat dec testl cmp int3 int3 int3 int3 push jb aas outsb test addb push and inc int add add sbb add add sbb add call subb sbb negb es call (bad) (bad) push xchg xchg push push add addr16 push sbb movsb jne sbb shl (bad) (bad) aad and aam add add mov (bad) (bad) (bad) incl jmp loope in pop inc rcll xor (bad) lgs psubsb call xorl pop mov xor addl add fsubp out add add jne mov jne mov add add jmp bound hlt aam add add mov sahf mov inc fsts dec or das lcall test adc (bad) (bad) flds stos icebp push dec out mov jne imul add add (bad) (bad) adc (bad) (bad) (bad) (bad) (bad) lcall sub push hlt fwait xchg shrb lcall incl adc mov add fdiv jo nop adc pop xorl add xor add add mov add add call push add decl pop push rcr adc add call jne lock push test sar lea addw inc call gs (bad) fcompl sbbb inc mov inc xor push or add add orl incl bound mov add cwtl mov xor cltd pop xchg div in pop pop cwtl daa addl mov mov push std push adc adc inc call xor cld fdivs sbb leave das call ret sahf jae add add (bad) and and add jge adc aad mov sub into std hlt and add add rorb (bad) (bad) (bad) sldt add lret stc sbb mov (bad) fwait mov add lea ljmp movsb int3 cltd (bad) (bad) incl add jmp adc add fwait and ds stos jmp aas loope mov add add mov mov and cltd test sub sub (bad) (bad) pmulhrw adc (bad) shr xchg loopne (bad) cmp add mov mov test add add add cmp loop xchg sahf mov inc aad ss shl (bad) out push mov xchg and jecxz xor fucomi arpl add add and popf jnp or or inc inc inc add inc addl ja sub mov dec inc push xchg push ja add push in inc notl cmp clc call loopne call or push mov divb jb orb add add and push hlt je sbb ud0 mov insl or xor inc jl lock add add add add add adc mov out cmpsb or add pop jae mov xlat and addb pop adc mov inc int3 int3 int3 int3 repz or xchg pop dec roll add or iret (bad) add add add (bad) (bad) (bad) incl add (bad) (bad) loopne popa loop imul dec scas dec rolb add (bad) (bad) (bad) incl add or add add (bad) inc dec (bad) decb mov jnp fistpl out imul jge xlat dec add add add cwtl add add xchg repz shlb add add jo addr16 sbb loopne inc inc mov mov add add add repnz icebp add (bad) (bad) (bad) (bad) sldt das (bad) add add and add or aas pop mov aad dec loopne xchg repz roll and or fadds add add adc lds bnd ja add push dec movl mov jne jne sysenter sbb repz mov push je inc sbb mov add call inc call add jmp cs xorl push inc cs inc adc call sar push push xor jmp cwtl or xor inc add push adcl mov add jne lahf add call push and roll inc inc mov rolb mov cmp jne add add ja ja repnz pop test mov adc ja add add (bad) (bad) fstps (bad) (bad) incl add fidivs nop fists mov push xchg add add adc cmpsl adc aad out test sarb add add inc pop add add dec scas cmp cmp rclb sbb fadd jecxz (bad) in cli inc inc sti lret add inc adc add int3 int3 int3 pop pop push inc push jnp std insl and int3 int3 inc inc inc inc inc add int3 jo les add (bad) (bad) andps (bad) sldt add add data16 push adc cmc adc lods popf add add add add add xor or xchg sbb bound add adc lcall jno xlat je add add add add add add add add add call call mov test or shlb dec jns std lea rol rolb sub cmp mov in push cmpsb adc add and shl int3 int3 int3 int3 (bad) xchg add add jg sbb int3 int3 int3 int3 int3 mov loopne xchg cmp out (bad) adc fsubs jb mov (bad) (bad) (bad) (bad) call call js shr outsb clc jmp dec bound jp mov (bad) (bad) ljmp mov popf inc (bad) (bad) (bad) decl mov call push fcoml sbb pop push out mov xchg mov (bad) (bad) call sub decl add add mov jmp or pop lret push add add add add movsb lea int addl jne jne cmp out cmp push pop sbb pushf or add add test test loop dec (bad) add push daa jmp and (bad) pfcmpge cmp sahf loopne cwtl jle mov (bad) (bad) (bad) (bad) incl add or aad jmp incl or insl xor cld add addl adc clc ljmp sti add mov mov or add ret jl xchg add ret add inc push jne add test add outsl add add (bad) lcall pop push lcall mov cs fnsave jnp jne (bad) incl test cmp sbb mov inc out ds lret push outsl test add add scas jne jne jnp shlb add add add add or js enter ja mov add addl or or rcll mov ljmp add repz sbb cmpsl mov add add jne and jne jne pop scas add add or adcb mov imul pop dec imul add test add add add add shll mov xchg add push push push pushl (bad) incl add sarb add add add int3 sbb repz or je inc mov xchg int3 int3 int3 int3 add hlt add add push decl (bad) (bad) jae inc push sarb call xor push clc push ljmp orb mov shll je mov test cmp test add inc incl (bad) incl add push sbb add xadd fs jmp dec add inc jne call addl pop sbb xor popl int3 mov mov mov mov (bad) sbb mov jnp or lahf (bad) cmp fwait inc sahf push xor xor mov xor cli jns push jle fadds add add jge fildl add add jne jne cmp add add add add dec mov hlt inc sahf push enter fldl inc cld add inc inc inc inc inc add cmpsb push add add ja and movsl mov adc and pop sub ja and lret ds imul inc and and mov in mov addr16 leave inc pop sar add push rolb xchg js or jp fwait xor add add jns call int3 int3 int3 imul add int3 mov add and add add inc int inc inc mov scas push mov mov or js addr16 push int jae mov call pop add add repz das pop adc popa icebp enter outsl mov inc push sub jo mov imul jl sbb shlb ja add fs add add add mov add jge dec adc mov jae add pushl add mov sbb and add incl leave clc test push add pop cs pop call jne mov lds inc or or push lea lock (bad) cmp jae mov jbe enter inc add call add clc inc cmp add push adc subl inc (bad) lahf cs mov mov (bad) dec xchg into add add enter add sbbl (bad) js std mov addl push mov jne jne jbe shlb add add add add nop xchg and push pop sbb roll (bad) (bad) (bad) (bad) (bad) jne jae jne jne addl mov frstor sbb sbb xchg or add add ljmp and (bad) (bad) (bad) incl sahf adc add add mov jno dec or in dec insl insb arpl aad sarb jne jne rorb (bad) (bad) incl add cmp leave test fiaddl es call add ljmp add sbb add decl (bad) incl fdivrl mov add insl ret sbbb shrb add add jmp incl push and addr16 inc out add call jg imul negb call add push std aaa push mov test add (bad) pop dec out mov leave push hlt jno mov mov add mov insb out nop shlb push rorl xor add add in jp and add add add lea jne les xlat jne scas shrb test mov call call cmp lea xchg aas sbb sub in cwtl cmovns mov outsl andb add mov mov add add inc jmp int3 icebp lods adc jbe aam bound in add lcall (bad) (bad) (bad) mov subb mov add add add pop test dec and call add add (bad) jno inc sti inc stos pop inc arpl mov (bad) jae addl orl inc add add mov shrb jmp add addl push inc add mov or pushl xor je push add lahf or push movsl mov mov out inc imul sbb inc inc inc add add les mov aad rol push imul (bad) shlb mov insb or popf out push inc imul add add xchg dec push cmpsl notb and (bad) mov ljmp push and push push jmp add pushf add add add xchg mulb inc and test add add add add add add add cmpsb push call mov add psrld push rcrl out pop ret (bad) (bad) pfpnacc inc inc inc inc lea lea adc xchg xchg xchg mull cwtl push mull dec jmp add add mov lea add shrb push (bad) cs sub rcrl add add add pushf and add (bad) (bad) call or or call jne ljmp jne sarb inc inc sub push add xor adc jnp and push incl push add add pushl ljmp rolb loopne incl incl lea or jne add add std cmp add (bad) (bad) decl mov imul add sbb testb add int3 or int3 fiaddl faddl out aam add add xor inc mov negl repz fisubs add add jne jne adc jne call add iret add add add lret popf (bad) hlt dec test cmp loope loopne sub xchg imul add mov inc or mov mov cmc scas push int3 int3 int3 int3 ja movsl pop ja ja imul jne jne add push jne mov mov daa into fisttpll repz fnsave and and add add jne jne subb fdivl pop nop jb xchg movsl cli jne add sbb dec xchg cmp mov xor add add lea call add add push icebp outsb test dec fistpl dec jle test mov add add add add add mov inc jmp xchg mov or add add add mov xorl addl add add in popf mov jae mov push add xor add add push aam push push stc int fcoml ret mov cmp add add test clc jne inc push lcall pop cmp push and cs orl ret or mov enter inc jne dec add ljmp loope inc roll pop add jge data16 into (bad) int add (bad) (bad) (bad) (bad) pcmpeqw inc or jne int3 int3 int3 int3 int3 call call push cltd and pop mov push in (bad) xlat ja inc dec stc add add add ret das pop xchg mov xchg pop jmp aas add add mov push mov or or mov or add add add add rorb sbb jns not push in imul add jne mov jne jne add scas cmc add fcomps insb add add cmpsb cld pop pop into adc jl pop add add movsbl (bad) (bad) (bad) (bad) lgdtl add add xchg cmp mov mov hlt xor dec pop fnsave lret (bad) inc add add or add add add outsl push sub jb adc mov (bad) (bad) (bad) (bad) paddd pop mov incb add repnz add mov add add add icebp daa fcomps xchg test nop lea or add out add add repnz cmc enter jo add add dec pop adc sub sbb add (bad) inc inc aas pushl or loopne and je push mov lcall add mov in xor adc adc (bad) std push decl xor mov mov or push mov add add add bound pop add jne jne jne call call xor rolb (bad) (bad) sarb test psllw incl sbb sub add add mov stos ja pop cli ficompl adc add outsl mov xlat add add sbb xchg leave lcall (bad) (bad) cvtps2pi jmp fadds dec js lcall and and push push or push add add test sub icebp call cmc int add out adc mov jb xlat dec add add add sahf add add mov pop mov jp mov scas cmp lock xchg sub add add imul incb add mov pop leave nop mov pusha in stc add jne jne jne add lock add mov mov push fwait pop (bad) (bad) (bad) (bad) mov nop popa ja stc (bad) outsb sub jb incb add add mov add add ljmp and mov outsb dec xor or add add inc cmp (bad) fadds sub je movsb add inc add call push insl loope inc add ljmp sbb pop mov jb lds (bad) mov inc call addl add pop clc je add dec adc push jb add sbbl cmpb test add add push mov gs sbb mov add add lea lea add add (bad) call and jecxz cmp scas push mov js mov and insb loop and and ret xchg popf and jns fwait rorl (bad) (bad) verr mov add add add call jne call jne mov sbb adc insb xor test mov add aam jne jne add jmp cmpsl jno pop adc inc xor nop add add cs or xchg ds mov add add xchg push add add shr rol rorb (bad) sbb cmpsb cs push jno jne je xor mov int3 int3 int3 int3 int3 add add pop arpl jmp repnz movsl mov (bad) (bad) (bad) incb mov addl add add into pop add add add scas std push sub add jb shl cmpsb add add add data16 inc test xchg rcrb push imul inc inc inc inc sub pop sahf jp xor inc mov mov mov inc inc test test add xchg fwait in cmpl fwait stos scas hlt adc dec out sahf cmp lcall add add add push sbb mov mov add add mov mov mov (bad) (bad) (bad) pushl neg (bad) (bad) (bad) (bad) (bad) incl add sbb cmp loope mov rorl dec pop leave data16 (bad) (bad) (bad) (bad) decb jne add sub add addb add inc je clc mov jne inc add test add push and mov mov pop add add adc jne (bad) incl clc or jmp jne add mov add insb add add (bad) fadds rol add mov add je sub mov or adc dec aam xor mov sub lret in adc call mov xchg mov mov pop dec and fisubrl aad stos jo fcmovb dec add add mov mov add outsb addb fimuls jns or add add cwtl push scas xchg add add call call add add add adc mov call mov or add add and pop mov dec loopne mov or or ds sub outsl sub int3 int3 int3 int3 int3 add add push (bad) add (bad) (bad) (bad) (bad) incl add call jle addr16 jne fstl dec push dec mov call jbe add add lods fcmove xor in test push lods ds (bad) (bad) decl mov (bad) (bad) (bad) decl (bad) (bad) (bad) dec int3 int3 pop imul adc nop sahf imul das (bad) int3 add add add test sbb xchg es adc shr call xchg cmp cli pop ds mov test test push (bad) (bad) (bad) (bad) xor pop dec push cltd gs pop sahf aad push dec and inc inc inc push push jnp add add add pop (bad) cmc pop imul test lea call hlt incb add and and xchg and addb dec add inc add add incl mov mov clc jne adc fadd push push lea int3 mov xor inc cld jge inc adc punpckhdq add adc add push call inc sub add roll or mov sbb imul pop adc addl mov incl and push or and lea ret in add lods inc dec ffree sti lods popf mov lea add add xor inc aaa pop xchg test mov cli sahf push in outsl lret scas mov inc inc inc inc inc rol xor add add lea lea add lods mov stc scas mov lahf ja add aam daa cwtl mov xor adc jne hlt xor fsub aam dec push sbb orl and decb and and push mov adc adc add add add jne mov popf outsl and out inc push rorl add add jne mov jne add add xor mov add mov mov adcl add add test add dec and add add mov pop jmp sub mov fcoms push push push push sbb and and lea dec inc movsl inc movsl out add lret test jne jne add add add add push add jne scas inc jne jne add std imul in pushf inc mov stos add add jne or jne add iret ds je js add add mov add mov add add add or sahf add and and and orl addl mov push dec pushf and daa mov add add rolb add add sahf adc hlt lret mov mov sbb call jne cmp (bad) jne jne pop mov inc or mov decl (bad) jno push dec jle mov add and call add jne call push push pusha jmp dec incl add add shll popl or push test mov test sbb mov incl rolb ret xor fmull and mov add addr16 lret stos or icebp xchg mov loope add sbb add add add imul xlat push sahf pop push add add sbb lea imull add add add add add add add stos cltd sbb inc mov pop aam cmc cmp testl mov (bad) (bad) inc rol add loope mov or rolb jne inc mov jne jne int3 int3 jecxz int3 int3 ja inc dec ja ja add xchg lcall cli fs sub add add mov mov mov lret in mov jecxz ljmp std lret mov sub push jno dec cmp jne jne jne add jnp addl add add adc add push push xlat adcl movsb in aad mov inc mov push add pop add add add push or push icebp pop in lds add add add add mov lea cld lea add add (bad) (bad) ud2 jnp xor sarb inc and aam push (bad) (bad) (bad) (bad) (bad) (bad) jnp mov sahf xchg mov dec lea fidivs call ret or test call imul test and xorb mov xor sahf lret jp jb faddl add lret add add inc mov or adcb ds or jne or rcll add (bad) add incl incl xor in cmp dec add add jmp andb shlb jmpw icebp pop stos sbb inc push mov or add add jne jne shl decl cmpsl inc int in test and and and add divb add (bad) pushl (bad) (bad) call call cld (bad) xchg mov cmp xchg loopne add add rclb cmc mov stos pop inc es movsl adc jne cli pop cmpsb sbb add (bad) (bad) (bad) incl add ja sub add and rorb add add sub mov mov xorl add add or add add mov sub inc in pusha cmp jne jne inc adc sub inc in (bad) (bad) (bad) (bad) cmp imul inc inc inc inc add add cli out repnz in mov mov xchg iret adc add test test add sahf add test leave shll jmp add cmp ret inc pop cmpsb mov inc inc inc add xchg fildl add add inc inc inc inc (bad) push or shl leave outsb mov sub xor std lea mov ja add and xor sahf add int3 int3 adcl dec push add add lock adc fsubrs incb or test add (bad) add rcll add mov or lea test cmp xor add push dec mov lock add hlt add pop add call inc add add test inc ret (bad) (bad) cmp (bad) call je incl add sub add add (bad) pmullw (bad) ltr cwtl add add add into sbb in test add (bad) dec add add add repz add inc popl or insb mov mov das push cmp push lret lods add and lea add add rol outsl xchg sub rolb add add mov inc decb aad fidivs mov test mov sub test add add adc add (bad) jl rclb add add add sbb pop add add xor int3 int3 int3 int3 iret cli imul add add add dec dec dec pop mov dec adc add add add add punpckhdq (bad) (bad) (bad) (bad) (bad) bts mov inc dec rorb inc pop (bad) mov rcrl sbb pop roll or add add add aaa lret add add ja loop ja ja adc mov scas xchg loopne cld sbb test pop inc sub push sbb push push mov or or add add dec adc sbb sahf push and mov loop add add xchg outsl push cmp add add add add (bad) jmp (bad) incl jp inc xor popf jae int3 inc stc roll fdivrp (bad) (bad) ljmp push ret aas inc cld add sti add add cltd rcr out cwtl cmpsl xor loope gs mov jmp cmpsl (bad) dec int3 int3 int3 int3 (bad) (bad) cmp (bad) incl add pushf (bad) sbb (bad) sahf cmpsb add pusha das dec cmp aam mov add out gs (bad) (bad) decb or xor jge lods out movsl push adc (bad) (bad) jnp mov (bad) (bad) (bad) dec jns dec int3 int3 int3 int3 test push out fsubl push in pop xchg outsl push out pop loopne inc lcall mov in lcall adc mov mov decl inc add add shl adcl xor ret (bad) jmp pop in call in inc add add add addl or incl ret pop mov orl and sbb jge sbbl inc lcall cmp add push flds jmp inc incl rolb inc test addl or jne shr test add add mov mov add insl lcall std and xor sub add inc daa mov add mov pop add inc xchg add add add add add adc repnz inc mov sub je mov add add cmp add add add add ljmp mov add inc fsubrs push push lea push mov mov stos inc jmp xchg fimull aaa sub int3 sub call push mov in lret jne out outsb (bad) sarb mov mov jl push xchg push bound out (bad) (bad) (bad) (bad) decl sub add add int3 clc aad int3 int3 call outsl cmpsl sbb popl in add and xchg aaa out faddl call hlt add add mov aaa movsl rorb jbe cmp (bad) and mov jo mov add add hlt jb add (bad) (bad) (bad) incl add fisttps aam call outsb fldt sahf xchg popa inc pop add int3 int3 int3 int3 int3 mov mov xor jnp loope movsb mov rclb mov arpl fisttpl test push adc push push add add add sbb les push loope mov xchg sarb call addl add jae jns por pop sub lea sub and add pmullw add cltd or (bad) (bad) incl aaa cld xchg adc pop mov add jns scas sbb enter add add add add add scas test or mov xchg adc push icebp mov (bad) (bad) (bad) pushl jne test jne add add add pop sbb and jne imul out or adc les shrb jne decl inc (bad) (bad) (bad) (bad) call push push addr16 leave xchg dec dec mov (bad) incl push lahf js add add and add add (bad) pusha add (bad) (bad) (bad) sldt add jo inc add add adc add adc mov jb push jnp add orl mov add inc inc add mov push test add jne add mov inc je mov inc mov pop sub add data16 mov inc je inc inc clc jp stos inc mov adcl add inc (bad) call and or jbe xchg data16 sbb or add add add sahf jno (bad) call add mov daa push mov pop ss fidivs jne push clc std push push add nop add add outsl and cmp (bad) or stos add lock mov addl mov mov adc mov jne jnp mov lea add mulb add add jne pushl sbbl orl pop aaa jbe xlat and xor sub (bad) test mov jns (bad) (bad) (bad) jmp lods xor adc imul mov xor loope dec pop add add add mov mov incl add pop add add ja push pop sbb aam push cmovle push sahf lock inc insl ja add pop addl add add nop and mov push ljmp add add rorl cli pop add add sub add add xlat add (bad) (bad) (bad) pushl jne xchg xor dec push mov dec pushf add cmp aad jne mov add int3 int3 add add pop and push aam sbb add ja lret (bad) in sub outsb fwait cs cmp aaa ja ja mov push push mov add add dec repz xchg dec add les jmp cmp jns pop lea lahf lea add add add add add cwtl scas js stos inc inc lcall inc lea lea pusha push jne or mov or or add popa test adc inc adc sahf fiadds pop cmpsb int3 jae cld rolb clc lock or addl shrb enter cmp add adc call add incl push xor shr add adc out jo incb incl push cmp mov sbb push lcall push sti add lods andb jne add sti adc call dec mov add sbb dec (bad) push jo push or call push lea ljmp jne add add add insb jmp push mov adc shl add add fdiv xchg jo arpl scas and pop mov push push push push add add add add add call call or and mov sub push int3 xor (bad) fadd push xchg add and or and and sub arpl lret push xchg mov add add mov sbb orl (bad) setge call mov jb xchg sub jns mov js or inc icebp push mov incl add add add (bad) (bad) fisubrl insb sub loop xchg jbe shll xor incl or mulb addl push push dec xchg (bad) (bad) (bad) pcmpeqd dec sti lret xchg xor mov pop fists jge add add add add mov pop push and mov inc loop mov add movsl cmp add add addl add add aas (bad) clc adc push sub andl and cli sbb call fsubrl or pop call lcall cmpsb push daa cmp inc cmc add mov movsl pop add add add inc inc mov mov jnp imul dec or mov inc inc jne jo jne jne add mov popa data16 pop in pop add add mov mov and and pop dec and add add lea (bad) into test aaa jb (bad) fmulp (bad) dec call jne jne jne ja fnstenv ja add in hlt adc out push ljmp dec sbb sbb ret add jne mov jne lea mov and in fnstcw xchg test leave jmp sub jbe add test (bad) (bad) (bad) (bad) (bad) (bad) (bad) psrlq sub jne outsb mov mov jne sti mov add add cmp add mov pop add adc jnp lcall mov clc jmp add inc clc add push push ds orl je add mov mov in jne pushl lea xchg add cld add incl mov (bad) mov jge mov inc (bad) sahf ljmp subl add add shlb jno adc inc sub sub (bad) (bad) (bad) incl (bad) or stos add outsl adc dec mov int3 int3 (bad) (bad) decl push (bad) (bad) call add leave mov (bad) call imul cmpsb mov dec inc add pop sub push (bad) decl mov mov adcb xchg out xchg mov out cltd xor add add test aaa mov (bad) inc rol and mov es pop mov add add add add add pop int3 cmp in jne bound add (bad) mov pusha pop cmp rol and mov and fstl shrb insl and xchg rorl arpl js or cmp jno pop out sti add add mov test jne mov xchg stc out subb lahf sub mov int3 mov int3 int3 add add add jne jno jne jne add rcrl jno dec mov inc mov cmc outsl pop aas mov add add lret add push inc cmp push xor cld in push rolb (bad) popf or jne sub mov add movsb mov loopne data16 add decl decl adc jne jb adc add or add inc pop cmp pop mov lea push cmp pop adc leave cmp mov (bad) cld add add push sti cmp add shr add add getsec outsb in push jge push ljmp test xchg jae nop mov dec mov (bad) (bad) (bad) (bad) incl jo or int3 int3 int3 (bad) (bad) cmpsl adc (bad) incb add mov lock out jb mov push jecxz jne lret lods out add add add add popl inc popa push push inc loopne insb lcall in add add add jge call ja call add add xchg cmp std testl pop adc add mov add add add mov xor mov std or (bad) or jns hlt jno divl jb call repz add add je jne jne sahf jl arpl shrb sti jecxz inc fst shlb les mov rorb (bad) (bad) ljmp loopne clc iret sub sub mov call jmp (bad) incl add dec pop add add mov add add xchg mov lea int call xchg push push shll sbb incb add add insb mov or pop icebp fildl mov add xor add add add add add add inc in adc or or scas push inc inc mov scas jmp mov jno mov sarl lahf xor add add adcl jle addl add shlb faddl (bad) (bad) (bad) (bad) incl add (bad) leave sbb jg into nop inc sbb mov into add (bad) (bad) (bad) (bad) decb or or or int3 int3 jp dec push inc roll pop add callw mov dec xor lret jge and inc inc add xor (bad) in out xor mov add push push test mov ds inc add dec incl in sbbl mov adc add ds push shlb jno cmc or add mov add add jmp into lret sbb sbb mov pop add sahf ja pushf (bad) (bad) (bad) decl ljmp add add inc into mov mov sbb add add sbb sbb add add and mov add inc inc inc inc add pop sub arpl movsl cmp add add jmp add xchg fnstsw je test (bad) (bad) pop ficomps fmull js jns dec incb add add add add (bad) cmp add add add jne mov add add or inc and dec js cld xchg mov dec incl and and add loopne xchg mov push lds add add ss add add add dec test add add add (bad) decl ret loop lds or adc add add add (bad) add mov xor decl enter push inc dec xor insb adc push jmp das fdivrl push rolb (bad) incl enter addl in (bad) cmp pcmpgtd sbb add addl xor push ud0 or jmp clc unpcklps pop push je inc or jmp int (bad) fiaddl push add push push incl incl lahf pop enter imul mov int3 pop aad sbb pop push xchg insb cwtl pop mov outsb inc inc inc inc and add and mov sub pop pop scas test shll fstl cmp mov mov int3 int3 int3 int3 jne jne xor div xchg add adc add add add add pop sub add add push add add add add out and clc ror sbb xchg insl push scas xchg adc add add mov add add sbb jl dec mov call add sub lock sahf test in scas aad push and mov push fdivrp (bad) call lea lea add adc aaa aaa sbb mov aaa icebp das pop mov xor add mov scas push sub inc lds mov mov add add pop inc jb add add cmpsl push call pop inc call add call fnsave mov andb cli arpl call lea add add add add test outsl aaa sbbl add add and pop shrl sub dec add add or push mov or or pushf mov call mov nop inc ret shl decl (bad) jne jne push jp jne (bad) (bad) (bad) incl cmp shlb sub add jne call jle call addl add les add pop enter add inc xor inc decl push hlt mov inc add (bad) call decl call add cld inc push add cmova ret inc add xchg cmovbe je call and xchg adc jge add test call add pop push push xchg inc inc inc inc call call sbbb (bad) cltd adc add add imul add cmpsl xor add call lea lea ja inc insl ja ja (bad) ljmp inc test sub leave mov sbbb negl imul mov call hlt cmc lret add dec je,pn rcr lock add (bad) jecxz js (bad) (bad) (bad) (bad) cmp add add add add jne jne cmp mov bound sub jne push push push push push add mov (bad) (bad) (bad) fsubrl call sbb xchg push inc mov sub js jp movsl xchg mov mov jo test jne insb cs and jl push jl cmpl ja sub sahf mov call add pop add ja ja mov mov mov repz call xchg mov add loop add jne inc in jne jne mov movsl enter mov stc or orb (bad) (bad) incl sbb jb rcl daa lods mov push cmp add jmp mov inc test dec (bad) push pop invd add dec mov mov gs or add fadds subl add lock xor mov je rcr adcb add jmp cmp xlat lock imul pop xor add (bad) ret sbb xor add out add scas xor fnstenv add jne jne aam jne add add add add mov add add add testb es mov cmpsb dec mov imul roll lret ret (bad) sti mov (bad) (bad) (bad) incl jecxz aaa std or ja aaa sbb add add call pop fwait cmpsb (bad) (bad) (bad) (bad) ficoml sti pop dec mov add add (bad) (bad) ljmp dec mov std scas or lret (bad) incl add add add mov add add xlat ret lret cmpsb inc sub add mov rcrl cmpl shl mov mov push test mov (bad) (bad) (bad) call mov ss cmp cmc bound xchg cmp add add sub add add add (bad) xor jae xchg mov xchg add add add add call call (bad) jmp lea inc inc inc inc push add shrl cmc and test and push push add add mov shrb xchg sahf (bad) (bad) (bad) call mov out lods gs push mov incl add add add add adc ljmp mov inc jo jmp (bad) (bad) rcrb int3 iret repnz outsb jmp xchg xchg jne jne call add cmpsb cmc int inc mov call rcll add mov lea push incl test (bad) incl (bad) clc incl push pop orl adc inc mov and incl inc add jmp orl pop call addl jmp call cld inc inc (bad) incl push cmp add cmp mov jmp xchg add cld mov incl add icebp mov inc call movzbl mov int3 out xor push movsl jae imul add add mov mov push mov ds xchg loope loop xchg add imul cli lahf stos pusha xchg xchg ljmp pop addl cmc lods add add pop rcrl mov add sbb rorb xchg addl sub call incl mov and fldt (bad) incl add add add sarb outsb add add add test add add loop add add call ja stos cmp test fucom mov call inc sbb jne sub aas jge mov rol inc clc inc inc inc inc int in repnz jnp inc gs add add add add xchg loop sbb add (bad) (bad) dec ret xchg and lret insb addr16 imul aaa cmp (bad) dec fwait dec test add pushf in fcompl sbb add xor lds add add inc pop and and icebp mov and ja ja lea mov and out ja pop jae (bad) fisttpll add add add add add add xchg nop or lret jle aaa insb sbb (bad) pop fidivl and andb rclb add add add es add add jp jbe popa mov dec mov js push bnd and mulb inc (bad) (bad) (bad) (bad) pop or add add add call pop push adc filds add add add and or pop je and add add xchg iret aad add add inc cmpsb lret mov inc jns mov test hlt add add cltd dec cmpsl and fcmovne (bad) test je push call decb je clc decl add add xor pop in fdivr call shl adc data16 add mov hlt push pop push adc je incl mov in dec or incl ss inc or (bad) call add call ret movsb jne jne je sbbb mov adc add add xchg push sbb lea sbb cwtl add (bad) (bad) (bad) jns aas mov add sahf loope and mov cmp fstpt js les mov test cmpsl rol rolb dec dec out fldl push addr16 testl push setl lea inc inc inc inc inc or inc call call and mov (bad) std jl dec fucomip call jne and shll (bad) (bad) jmp out lods pop sub (bad) incl arpl popf mov ss cltd mov add call call or cmpb andl sbb leave out shl int3 int3 int3 ficoml add add add add movsb out and in xchg mov mov add add add gs jle add add add bound add out psubsb call fmuls pusha sub nop pop xchg enter add pop movb add mov inc push mov imul add add pop leave lea mov jp add (bad) (bad) (bad) incl add test lea add add add aaa stos addl aaa xchg nop mov ja icebp mov inc pop xor mov add add mov sbb js mov cmp cmp cmp jne aas add add or push add or or add add test fmul into push sbb imul push call adc add add jne add hlt inc jmp add add or or pop push ja sbb jne mov or jmp add add jbe add add jne jb cld xor shlb inc (bad) call mov inc jne xorb inc dec jb push imul call call js gs push out fcoms add add push push shlb sbb je scas adc std add add push stos push push push int3 out int3 int3 int3 int3 pop jns push push or mov or lock movzbl pop aad inc inc inc inc enter test int3 int3 dec sti pop and adc mov mov add add add add mov dec or push push (bad) ret fwait or out push ljmp fmull lea mov rcl sbb roll (bad) (bad) (bad) jmp test lret sbbb lea mov add add add add add add out (bad) xchg dec push shlb sbbl cmpl inc inc jne in fnsave jne call adc or call xchg mov add add jbe rol rcrb addl int3 inc xlat (bad) (bad) pop in hlt dec jns push in push push jno bswap int3 (bad) (bad) (bad) (bad) incb add push add add add les insb shll add pushl cmpb mov (bad) (bad) (bad) incl in and add add jne dec jne jne dec call (bad) stos (bad) out mov rorb jo xchg mov inc inc inc inc jmp add add ja ja lcall jno sbb sbb inc int3 loopne fildl push subl aam inc fcoml mov sub jne mov jne inc rorb fdivrs dec push inc pop incl add call call add push push iret cmp add add add add int3 jl aam int3 int3 int3 add lock aas ja sbb push lahf jge add add mov inc mov andb les xor add add or dec pushf xor mov lea mov mov add add push shlb push add mov (bad) (bad) dec test add shrl add inc lea jae xor ret adc mov into adc or add add shll add add add add filds sub pop divl xchg xchg divl sub add (bad) (bad) (bad) incl add add add add mov xor dec jnp out in sahf add add cmp mov mov out movsb jae add add inc xchg add add and mov decl push jl scas push inc inc pop jmp add dec push xor pop xor inc or inc add incb je pop jne push inc cmpb add call inc xor rol dec push xor inc mov subb push xor test add (bad) incl push push jo xor addl xor (bad) add test cmp push cld call cmp or add push or call clc add shr cmc mov mov rorl mov add lds add fs daa add lea add dec xor add add (bad) (bad) jns (bad) pushl outsb jns ja ja mov xchg sub outsb scas sti adc out imul (bad) mov mov sbb jp dec mov xchg adc mov cmpsb xchg loop addr16 xchg mov add add jne jne ss jne push push push push push add sub add add add xor cmc sbb loop repz mov cmpsb xchg or insl outsl movsb fiaddl add (bad) adc call (bad) outsb clc ficoml jae mov nop sbb add add subl jae lea lea ja ja add adc push insb cltd popa daa movsb mov xchg adc push dec push add addl add add std xchg das int dec cwtl dec or rclb push sub addr16 rol shlb and cltd out (bad) (bad) inc or adc mov sub in mov and cmp inc inc inc add add sub mov add add and add add add jne movsb inc add add jmp out xor cwtl in aad inc mov or (bad) (bad) incl jecxz add add push jge gs xchg std mov sti outsb add add sub sbb sub lods mov std add (bad) (bad) (bad) sldt add mov add jne jne jne mov mov xchg mov inc add fwait out sbb in ret mov xor add add call pop iret jno jo mov dec rcr call fwait cmp mov add add xchg arpl add add add mov xchg icebp adc aaa ljmp test outsl loopne inc inc test xchg push movsl or lds test push jg sub jge add roll add add mov add add push out movsl pop mov cmp call adc jmp mov scas orl push add (bad) cmp add xor mov or incl add (bad) call jne pop hlt add lcall (bad) loope add inc jmp add inc dec push call add adc adc rolb jno call push inc rolb add rolb leave sub add mov and push sbb sbb addps sbb xor int3 addb in xchg insl pop (bad) (bad) (bad) lcall imul jne jne jne add mov pusha imul add add and and add scas (bad) filds add test test and add das cmpsl sbb cmpsb xchg mov xchg xor xchg ljmp lldt and add add outsl mov sub divl add add dec sub lock aas repz inc inc inc inc inc lea lea call mov add loopne and popa test xor (bad) mov (bad) incl addl add mov or shlb add mov fmul adc inc testl or test in adc inc add fiadds xor ds imul mov or push (bad) decl repz xchg push dec or lea push push push fisttps loopne xchg add add add add jne dec jne jne ret xor sti jg add lret fisttpll add add sub add add add pop adc pop mov dec or mov add (bad) (bad) (bad) decl or and xor or add add xchg add mov mov mov pusha pushf sbb and dec and scas decb add add sarb add add fsubs (bad) xchg mov jbe mov add add lret lahf adc jecxz into inc (bad) ret add (bad) (bad) (bad) incl pop add add mov mov sub imul mov in ret mov icebp imul add addr16 es jns rcll adc add push cwtl add add xchg add add mov ja ja add andb xchg rclb pushf or push out jp dec fucomp mov add add int3 xlat jnp int3 int3 push push sub or mov sub or int3 fstpl call ret add mov add cld add sub push adc (bad) pushl mov xor jno dec jne add xor clc cmp or or inc decl push jne add add call push add verr incl inc push rclb mov addl add or pop push clc rcrb add in xor test (bad) clc dec mov in mov dec jl and imul or mov pop in test shrl arpl pop sub mov mov add add add add btr jmp dec rcr add mov ljmp (bad) incl add nop inc add add in add add test ljmp je adc test loop test mov dec pop jno mov xor loopne sbb mov mov ficoms cmpsb mov (bad) (bad) (bad) incb add addr16 enter mov mov (bad) (bad) pushl ja movsb mov hlt add inc leave inc sub jne leave xor test pop test in icebp cmp mov lahf call push jg sbb add add call (bad) (bad) (bad) (bad) (bad) decl xchg sub mov icebp pop loope test mov add lea repz lea icebp push out dec insb xchg add add jge daa fdivrs test mov add add sbbl mov sarb pop test jb xchg hlt insb pop dec cwtl popa imul lea lea and and jne jbe getsec push jno mov adc jne add add lea lea sub sbb xor add add sub lcall andl add bound add add andl xchg lahf fwait pop add add frstor movsb sbb inc out add add add or or push push push jne shll jne jne lahf inc lods xchg inc dec pop popa stos fwait inc xor inc jbe jbe cmc insl push jp jne fwait mov decl mov js xchg sub test test add test pop mov loopne incl inc add add and add jne ljmp inc (bad) jl jne inc cmp andl add (bad) call add add push add add lods mov add (bad) (bad) call cmpsb pop mov xchg jl out push pop or test add add add or add add cmp push cmp and cmp add jae daa sub cmp fucomp mov (bad) (bad) (bad) incl addl jne jne mov mov pop int sbb xchg xchg jle inc add xor add add stos pop add add add pop xor scas mov les add add add mov mov mov lea call adc aad sahf cmpsl and mov or cli test jne sub fsubl sub std cs and in dec pop lret xchg (bad) mov push xchg fisubrs addl push xlat push add call lea lea insl movsl call mov sbb fcmovu pop (bad) in sub mov add add inc mov adc jecxz fdivr inc popl adc ljmp add push jmp xor jne je call loopne inc inc ljmp push jmp sub push faddl add pop inc add testl adc add cld jne icebp dec addl ret inc test mov pop int3 add stc add inc rolb fimull add mov inc push jne data16 push add push mov xchg inc inc add js,pt add add mov (bad) (bad) incl xchg idiv and and and jne ds cmpsb xor push leave lods mov mov cmc jne add add add add inc add add jne (bad) mov xor out lods aam sbb gs pushf and cmp (bad) (bad) (bad) dec mov and int3 int3 int3 add inc add add out mov (bad) fisttps mov sbb test enter rorl xchg (bad) call add add mov cmp inc dec andl mov xchg push xor mov add test add add imul add ficompl cmp test add test pop and repnz cmp pusha add add cmp mov and scas and add insb aaa add (bad) (bad) (bad) (bad) incl addl mov pop dec push hlt sbb push lds lods aas aam int aad add dec ja and and dec dec loop dec jne shlb cs leave fs add add roll psllw inc inc inc inc inc add add pop jl xor push xorb mov cmp add mov mov rorb mov leave decl jge stos jae sub push ljmp add add ljmp (bad) (bad) pushl decl rclb dec (bad) sarl call jne jne ja xor mov add mov movsb imulb push or aas mov add add add add jbe jmp inc inc add add roll add add push orb in mov inc jp rolb add cmovo pusha or (bad) push adcb cld rorb jmp add add push call call adc push call sbb mov aam lods call sti xor xor addb add inc mov incl loopne testl push pushl mov push add (bad) vmwrite stc sub mov inc inc inc adc and dec cmp mov mov lcall incl lcall out add add adc push xor pop xchg add call call call add mov mov call loopne ret dec sub test push pop test jns call add add rorb cmp xor fsubs push movsl rol rolb addl push push pushf sub mov std add mov lock xorl test add add add dec adc (bad) lods pop scas pop adc add sbb pop pop add pusha out imul jne jne xchg mov and add and les mov nop vmptrld cwtl xor dec fiadds add add add add jl xchg sub (bad) outsb and lods add rol add lods dec add add add stc imul aam test sub cld or xchg sbb jo add add jae and and inc ljmp insb dec int out push push push adc jecxz in cltd mov dec (bad) push (bad) (bad) (bad) (bad) incl add dec jge add or lea jmp mov push dec push enter test and dec sbb and push scas push rorb inc fsincos jl push push or dec dec xchg or or adc movb add add add sti add cmpsb and imul add lea mov test outsl imul test pop test and cmc mov add mov xchg or adc add add adc daa arpl jmp adc test xchg dec or jne jne jbe ret (bad) (bad) (bad) (bad) and mov pushl push lcall add call or test icebp inc inc decl movsb call pop add inc add movsb add punpckhdq add sub xor rolb cld cmpb inc testb push ret dec loop mov out test push and sbb sbb clc inc lods mov jne and jne jne add loopne push test add add add xlat add add add add (bad) mov mov repz mov add add add add add or rolb push cmp test jle repnz push test jnp push test add add add (bad) (bad) (bad) (bad) inc je (bad) incl add sbb (bad) arpl clc cmc mov stos roll adc aas jns add call call insl push ss into repnz iret or sbb jbe test enter (bad) (bad) decl call int3 int3 int3 int3 int3 (bad) (bad) call xlat les pusha pop out (bad) xchg mov (bad) (bad) incl add add mov mov add fs and inc cmp mov add add inc push mov inc adc add add orb add add cmp (bad) (bad) jmp xchg pop ret call (bad) and push jne data16 scas fstpt (bad) stos inc sldt add add jb cmp inc dec fnstenv stos adc cmp mov add push xchg mov mov data16 (bad) (bad) (bad) decl add mov (bad) sub xor sti mov fwait add add sbb pushl add add icebp cmp adc push test (bad) jmp xor mov inc cmc add pop cld jmp add push inc or ljmp push insb inc or call add iret add adc push jne cmc addl add (bad) clc jge les pop or inc incl loopne lahf cmp add xchg mov or or sub in mov insb ret shrb inc or add add add add add add add add mov add cmp xchg mov popa push adc pop int add add add add add push out add xor and int3 add mulb add xchg mov add add add loop add and and add xor or pusha or das and add jne jne add add add les mov dec fisubl mov stos add ja (bad) in adc xor ja ja mov sub mov add add add mov inc mov dec or pop mov and addl add sub jnp xchg lea add call add dec int3 dec add add jne mov add lea sti scas imul push outsl stc fwait sub test dec addl xor out (bad) sbb mov leave inc xchg and data16 mov add add addl addl inc (bad) prefetchw pi2fw jmp cmp bound loope mov sbb jmp add cmp test push cmp out push imul dec test cmp (bad) (bad) (bad) call add add add cmp cld add jne je jne add call or inc add push jge bound add in call movl add inc std sub (bad) cmp add or inc mov incb rorb iret add dec add xor sub jae outsl call add push fwait ret push or jb test jge les mov and push mov (bad) (bad) (bad) dec ljmp add rolb add xchg cmp push mov pop in add add test std inc inc inc inc das sub call jmp test push pop mov lahf mov add add add inc (bad) shrl add (bad) (bad) psubd (bad) lldt cwtl in add add aas push rolb mov xchg push fimuls imul add add add int3 aad repnz add xor add aas jl push add shl or dec xchg repz addl cmp (bad) (bad) ljmp xor mov jns addr16 out mov mov add cwtl mov lea lea mov roll add repnz int3 int3 int3 int3 cmp dec int add subl enter xor push jne add int3 add jne addl test pop jl add push cmc je pop mov add sti incl test cmp jb add and add test add mov mov add je les pop xor inc add push inc xor add add add add push out dec mov leave jns call repz sbb mov (bad) call cmp add add add icebp xchg mov push mov pop pop dec pop out add add cmp stc add add add pop aam insb inc jge outsb add add (bad) (bad) (bad) incl add mov clc add add push in push add test inc in push push lret sub jge inc push sahf inc inc inc inc add add mov jbe pop add fisubrs mov inc in push lods std mov call inc add add ja ja ja call call adc leave fldt cmpxchg stos adc dec in xor push add add inc fiaddl add add sbb loope mov dec pushf out add add mov mov pop mov add add add add call sbb rorb popl add (bad) (bad) (bad) jmp push fisubs and rol cwtl hlt mov mov out cs sar filds (bad) iret mov mov (bad) decl mov int3 int3 int3 int3 rcr mov push mov mov push mov mov add call add add inc call xorl mov (bad) add inc sbb mov add pushf inc jmp (bad) cmp inc push add je add incl cmp mov call inc test push add push xor mov xor mov add push push push dec cli inc in adc mov outsb (bad) push add mov rclb add and and (bad) (bad) inc xor fbstp aas cmp pushl jne jne mov mov aaa mov sbb add inc jl stc inc inc inc inc inc and push add sbb loop cli repnz inc lea (bad) lea les lock cmp add add xor xchg hlt xchg cmp fs dec push or inc inc inc inc inc (bad) (bad) getsec xchg testb and and and add sub add add add mov xor cmp mov xor add or or add mov pop nop ss jg jmp add add cmp add mov jne jne ret mov add dec xchg into mov lret push push jmp dec movl andl addl ja je lock jmp stos inc in incl pop sarl cmpsl filds shl adc fwait xor add sbb dec (bad) (bad) (bad) (bad) (bad) jp (bad) (bad) (bad) (bad) call mov mov test pop dec (bad) pop sbb iret and add add lods dec add clc cmp add movsb xchg sti aaa add add add add call call mov mov imul add add into inc and adc add cmp scas test add mov mov sbb and mov incl call push fisubrl sbb les outsb mov add call call popf test aad pop inc and inc xchg out test inc mov test xlat aad add add pop fldl lcall mov mov add orl jne push pop lock add or mov jo push addl inc pop jne xchg adc push es jo add jge add jne or call adc inc add inc inc out xor incl ud0 mov jne leave cmp and ret pcmpeqw inc pop push push push rclb or stc lret xchg xor ret inc inc push sti adc insl jne mov push sbb fsubr call pusha call push add add inc inc cmp or je pushf push add add add add decl add add mov mov (bad) iret mov int add or sub and or or add add add add add mov mov pop push dec ljmp (bad) fnstsw outsb mov addl cmp (bad) (bad) decl test xor cmp add add add jno add lea call call js rcr js dec je sub jg repnz stos lret call roll add add ja inc andl add add bound xor add add add and lds and mov pop (bad) call add or addl push cmp data16 add add xchg dec or xor push add mov push mov mov mov mov call add sbb dec insb mov test xrelease addb mov (bad) (bad) insb lea dec pop xchg jns into sbb dec or addl test cmp insl lahf ljmp add xor add add add inc mov add add lea sbb xchg cmp dec ret mov pop push orl rorl (bad) (bad) push push mov test add dec incb mov mov or add add add mov mov mov push out (bad) (bad) (bad) ltr roll push mov mov aam push leave lods cld inc pushf add add add jmp enter fwait add pop sub adc aaa add add lahf popf scas icebp test xor lds (bad) incl add enter jne mov or addl cmp cmp clc add push call cmp je add (bad) cld std mov incl and cmp push cmp inc xor adc inc rcll inc sbb add lea mov ljmp add add xor stc push inc je je push inc pop decl dec mov jne mov mov xor orl lea dec loope pushl sbb add add movlps (bad) (bad) sldt add gs pop mov xorl dec pop mov daa jbe add add mov shl mov lahf or je mov mov call add pop sub add inc inc call xor sub lods ror and add ss push call add add lcall add insl jnp adc ds int3 insl into dec scas add call js (bad) push dec mov call fnsave add add cmovo (bad) (bad) (bad) lldt leave push aaa daa cmpsl flds dec lret pushf and ljmp test (bad) call ja call add and jmp add push push cmp and mov add push rolb add test call mov pop add push mov or xor pushl fdivrp (bad) (bad) incl ja rclb add add cmp test adc and inc add add add inc inc inc fcmovbe ljmp add mov sub je mov loope adcb jne adc pop add add add or dec pop icebp notb mov push xchg or or sbb stos and and mov call jl mov add jno push add (bad) int mov es cmp mov add bound jne add add repz lret ja mov add sbb js jo lret outsb mov out movsb (bad) (bad) (bad) pcmpeqw jne mov sub pop lret shr push sbb xor dec push add cmp add add push push add add add or or adc push sbb mov movsl or (bad) (bad) (bad) (bad) incl add ficomps int3 int3 orl test add add push cmpsb mov push add pop mov mov repnz and lea lea xchg add pop shrb into dec call add jne movsb lahf sub insl jne pop push bound inc incl add inc dec je inc test test fdivr ljmp or push je and mov inc sysexit jge push add inc pop inc adc call es add or mov test call test add inc push push scas add mov mov mov call and lret and and addl pop pop mov mov daa or push lods sub add pop roll add add xor cmp inc out out aaa outsl mov dec in add add add add add adc add add (bad) (bad) (bad) decl push inc add jg adc insl aaa mov add add call call dec pushf mov not inc mov push fdivrp incl xchg push mov xchg dec xor inc add or add lea scas xor mov (bad) push ljmp (bad) (bad) (bad) fwait sub incb add add (bad) (bad) (bad) jmp cmp push ss inc sbb test and mov and add enter call call adc addr16 outsl push popf arpl and int test push mov data16 cmp out xchg and add add test add pop pop pop push adc add add add (bad) (bad) call push incl add add add testl (bad) incl arpl (bad) xor ja jg sahf into in call daa mov incl cltd dec and (bad) fcompl test add lea xchg add add inc add push jmp mov inc mov sub jne inc inc add je je push push pop jne add sbb repnz inc decl sbb push add lea andnps add inc jp add push cmc cmp mov je cld pop add xor (bad) inc incl add dec push pop add pop adc inc push add pop mov decl add add add add add add add leave and addr16 adc lahf add add add add lea or jmp stc shll adc enter call mov shlb mull jne jne jne and jne jne add pop add add mov cmp add adc dec inc xchg dec loop lea xlat add add inc into call add int3 int3 int3 mov scas add mov push addl add add add add rol adc mov add add insb pop cmc mov mov sub pusha mov sub add add add add add xchg cmc pop inc out call mov mov push push push push inc mov add int3 int3 int3 int3 add add (bad) (bad) (bad) (bad) incb add xchg add add call aaa push adc test stos outsb cmp jae push ja test call add add and ret inc inc or xchg lret es mov (bad) fmuls lea mov and and and jne push sahf in pop sbb rcll dec js cmp fcmovb jne call add rorl add int3 int3 rorb lock dec mov gs jge add int3 add les xchg xchg mov in popf add add call call mov add add sub out cmc add ret cmp jns sbb imul test add mov adc nop sbb xchg psadbw add add add push shr out push push test add add add push push mov aas (bad) jnp loope pusha mov add add add inc adc or add clc push sar add pop call (bad) cmp (bad) in add inc insb add data16 push add mov add add push add add inc inc andb jne hlt cmp or adc lcall es leave adc mov mov addr16 xchg call add call call (bad) (bad) (bad) (bad) add (bad) sldt add dec arpl mov ret adc aas popa rcr add xorl sub test mov add add and push push push sub adc add add add lock fidivrs add pop add (bad) (bad) (bad) (bad) (bad) (bad) jmp or (bad) decl ss adc minps dec sahf mov mov outsl adc inc or roll add add push hlt inc inc inc inc add cld add add inc cwtl fidivrl dec cltd pop leave add mov lret cs mov (bad) (bad) (bad) dec mov decl addl les adc or addl int3 int3 lcall (bad) pfacc (bad) (bad) jg push add add (bad) clc lret into lods or or pop pop in mov and lea movl sti gs jb rcrb call and push pushl in incl adc push call xor pop push inc inc sbb add (bad) sub push mov inc cmp dec mov adc add push add mov push (bad) cmp lock lea add (bad) clc push add jge dec leave add add call xor jne push inc es cmpsb enter pop dec out mov call ja push into daa into push add jne lcall add sub pushf cmp add popa inc loopne in adc add add ja add add (bad) cmp mov jno sti imul (bad) incl cmp add or jne cmp jne jne jne add add mov and out cmp add (bad) (bad) (bad) ud0 out fs (bad) jmp and bound fidivrl test ja (bad) and cmpl push andl mov stc add add add faddl add add jl push jge push loop iret inc adc ss jno mov and and movb and add add mov push rcrl sbb ret adc mov add cmpsb add add push and jmp and subb jne sub push xor adc jo (bad) (bad) jmp add and and jecxz adcb leave repz fxch lahf inc daa cs add rorb jne jne js jne add add add add add add add adc stos inc lock sub rcl push add add add and add add pop in jmp jle mov out or add add jne mov das jne jne test mov pop mov jne jne add fldcw mov or sub jge add add add gs sbb js mov mov dec jge call in lcall out (bad) jne jne add sldt add leave add push add add mov add add add and add pop test and mov incl fcoms decl call mov dec shll incl add jne pop inc mov (bad) push mov jmp push inc inc rolb (bad) faddl pop cmpsb jmp out into aad cltd jmp pop js add add test add xchg (bad) fs mov mov add add mov mov call lds add add inc out test lcall pop xchg int fbstp jle inc inc inc mov lahf mov sbb pop inc filds cmp test jl cmpsb int inc pop xor nop mov (bad) (bad) (bad) incl add inc add (bad) (bad) (bad) (bad) incl addl xor faddl mov inc mov andl add add lcall movsb mov and add int enter add add add lea int3 pop fadds lcall dec sbb ret adc int3 add add add incl (bad) (bad) incl add mov sbb faddp push shl inc add add mov adc cmc rclb sbb add add push pop mov (bad) mov (bad) stc pushf out mov push xchg sub nop fucom mov inc mov add add add add cmp stos sub (bad) add add add add gs pop inc inc add inc inc mov add inc push (bad) call cld jne incl cld push push cmp lods or inc jb adc (bad) push lcall and add sub int3 mov cltd pop add add and add add xor ret call cld lods push push add add add add sub cmp lock cmp lea dec dec sbb cmpsl cmp dec push pushf jl add add add push add jno push add add add add mov add and and out push ss cltd inc rcrb inc subb insb and add lock add add add push xor mov clc rcrl add add add add sbb lret jne jne jne add inc fwait lock and push lods mov nop sbb sbb add (bad) (bad) (bad) (bad) (bad) (bad) pushl add (bad) jmp and les movsl push sub lcall (bad) fadd scas ja dec das cmpsl aaa jg (bad) (bad) (bad) (bad) (bad) mov (bad) incl daa add add daa dec testl out insl cmpsb pshufw lahf add add add inc inc (bad) lcall or inc sub shlb mov daa test mov lods (bad) cmp test dec add inc mov call incl sbb movl pushl inc xor (bad) clc add inc add sbb add push clc pop test inc add cmp add adc add test call add add aaa pop cld scas das add push mov filds add add add adc call (bad) call out and add add lcall pop mov push stos jbe lahf or inc inc inc inc jmp inc (bad) (bad) (bad) (bad) cmp pusha iret arpl adcl repz add mov pop mov stos inc cmp dec add mov call add dec icebp add lea add les add add add scas sub mov sub lea jb aam ds add mov add mov imul fcmove pop xchg jbe dec mov inc and add add adc add add insl loop add add add adc mov cmpb add add add add add push add add add and dec pop sbb push inc cmp mov out mov adc scas ret add or adc in jne jne add add add inc mov test xchg pop into (bad) notl xchg stos lcall add add add ja ja add daa imul leave shll lahf push fbstp add add add add nop mov add add add das adc lret lea inc lret sub xchg ljmp or add add xor cmp outsb faddl adc hlt sub test jmp (bad) mov add add add add add add add inc xor adcb inc or cld scas inc mov incl add push inc add inc add or pushl add xor leave je jge call data16 or lret add inc add push ret jne mov call add mov pop sub add push push add mov lea add add push xchg jge imul outsb or sbb je or ret add xchg pushf add add add sub je mov push add add (bad) xlat jb out lea add add fwait sbb (bad) decb cmpsb mov fsubl iret push sbb mov (bad) (bad) (bad) sldt xchg push add add ja push adc push cmp addl test (bad) pop dec push jl loopne add add add ljmp aas inc add add adc xchg mov add fsubrl ja mov lret test hlt xor (bad) (bad) (bad) (bad) sldt add dec add and loop push mov lea mov add add pushf jmp add add ja leave cs add loope sbb fidivrl ja jne out jne jne shrl shrl nop mov xchg mov lea push dec cmpsl cld sbbb jae les mov and and and add add mov int3 int3 int3 (bad) dec jp (bad) (bad) jne jne shrl ret push fwait sub fildl mov fistpl call les add add mov movsl roll xrelease mov mov pop add add xchg (bad) (bad) (bad) (bad) ljmp push loope jne jne jne add test dec push aad mov jo adc sub insl pop js mov add (bad) (bad) (bad) incb add add add mov in mov test cmp and in mov pop arpl add and mov xor push lea call mov add mov or and add addb call add adc cmp movb aam icebp inc je scas aam in bound call jmp add addb add rorb xor addb add add jge add lcall incl add pop adcl call add pop add (bad) add add addr16 and and push test push cmpsl pop push inc mov cli mov cmpsb jns stc fcomps ja ja inc push ja (bad) (bad) (bad) pushl ja (bad) adc repnz dec hlt out xchg jp lcall add add ja in push add add (bad) decl pop (bad) decl mov (bad) stos es add sbb stos jo nop add add add add les roll cmpsl rolb add add shrl adc out mov pop pop jb add jne jne add add add add and mov es sbb xchg jecxz ja sbb fwait pusha push sub add add add inc sub icebp xor imul inc inc inc inc add add add add add or add add addl stos mov cmp push lret adc jb addl call call xor inc pop orl cmp xor cmp dec xchg push add add call call scas call jmp push (bad) pop mov pop je stc repz or testb inc and and int dec and add add add add cltd sub repnz int cld inc and add add add push push adc add add mov add add add xchg dec pop test xchg scas mov xor add loop add add daa (bad) mov dec sub mov inc dec adc add ja pop lahf pop push lock scas mov test ja sahf and ja mov or jne jne inc test inc movsl pop jb movsl or adc mov jne sub dec add add add push jae imull push nop dec cmp das mov push inc std incl add mov add jne push test push in add inc addr16 push test adc and sar test cmp push push xlat test add pop push jge adc je rorl rolb cld mov mov add call fsubr call adc mov lock add loopne cmp cmp lret decl call jb adc cmp (bad) mov sahf testl add add ljmp add loop jecxz push fs jae add sbb lds add fcmovu add addl jo call in call push sub pop sub mov and (bad) hlt sub and add add or lea call add xor mov mov add and add add adc add mov call mov dec stos loop ret cmp mov pop push lods mov add imul inc cld xlat push or ss popa add add std add lea jecxz inc jl add add add (bad) (bad) call jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall lcall nop iret jge sarb push aad mov out xor popf pop (bad) incl lret xor add xchg aam loopne insl into mov test add incl add add sbb or or or int3 int3 push loope out mov add xchg inc xchg stc push in int3 int3 add add add scas mov (bad) (bad) xchg pop test (bad) rcl adc xchg imulb push (bad) incb mov inc pushf pop fidivs mov xchg add add add add add add add into inc add dec xchg pop jne bound xor mov enter (bad) imul or incl add add add add dec jl xor jne push mov pushw add push add decw add add addl add add inc je sub mov incl jne add fcoms test add pop mov mov add adc add incl call ret roll xor inc add (bad) push adcb mov add pop enter add shrb add cmovge add int3 int3 int3 int3 int3 and cmp and add add int add mov shrl jne xchg jno or addl lea scas dec mov lods dec dec jmp cmp and cs push mov aas incb inc inc add add add add add test dec pushf xlat jmp adc fs leave pop adc jae mov push push push push add xorb idivb lahf es mov add add adc fwait dec (bad) (bad) (bad) pavgw ja ja call add add add fildl adc jp imul orl ret add addl pop inc add add and mov xor mov inc jmp sbb (bad) mov sbb add call jne jecxz (bad) pmulhrw or inc lahf jmp xchg pop mov lods pop sbb fildl lret add outsl inc sbb (bad) (bad) (bad) (bad) decl out insl lret insb into inc in mov mov addl jo mov push mov add add add xchg pop sub int movsb icebp pushf sbb add add add add fadd push stc imul mov fbstp jne lahf outsl cmpsl xchg push mov inc (bad) js pop and add add add jne jmp jne add add add add add add add mov pop xchg loope push push xchg xchg imul outsl out add add add es movsl cmp mov bound inc add add add out ss ja in emms int3 int3 int3 int3 int3 add add mov xchg mov pop add (bad) incl add inc leave call incb call lea lcall xor adc push pop adc add add push decl adc jmp add add inc adc inc push mov incl push or je or push mov push rorb push xchg add pcmpeqw add inc test pop push call in das inc mov out out add (bad) (bad) ljmp arpl cs jg push jns cltd (bad) cwtl (bad) incl mov movsl xchg in subb add xchg jge inc inc inc (bad) jmp lea jb cmp mov cld lods ds adc and lea (bad) rol rol add adc jmp shr in push pop cwtl push add call add (bad) data16 add add add out add punpckhdq and jne xchg lock (bad) lock fdivl mov lret jmp (bad) aad jne jne ret add add adc js xchg mov dec loop movsb loopne add add add push pusha jno add pop repz adc add add add jne add call add add add push jbe or loopne cwtl sbb and and loopne addb add cld xor add insb adc test out add add lea jnp fmuls mov pfacc push mov sarl jecxz roll ftst rclb adcl add add add inc dec add add adc and imul out jne dec stos out in mov and add add xor push add add inc or (bad) (bad) (bad) arpl pop xchg xchg sbb pop cmp add cmc mov rolb rolb add mov stc mov rol mov add lea add add sub add (bad) (bad) jmp xchg (bad) incl jbe lods add add mov inc inc fadds fwait cwtl pop (bad) popl mov mov or dec jbe and jmp ficoml sahf add add ror mov sbb ss sbb or test mov mov jne jne sar rol add adc mov inc or stos jne (bad) je aam adc mov adc test call add je mov cld roll lock add add icebp rorb or push enter adc rolb jne je fildl incl push add add add push outsb fsubr syscall add (bad) (bad) (bad) (bad) mov pop in jns pop (bad) popf daa (bad) mov add add inc aam pop add add jp add add leave lahf iret add add add and and lods add mov out das adc jns imul and add add add int3 and int3 int3 mov fcomps dec mov mov jno mov insb loope jecxz mulb lds add push cmp push push push add add inc xor out push lahf lods cmpsb push arpl sub stc or or fldenv rorl aad movsl lods (bad) and inc pop xchg out xchg lret mov int3 push popf clc int3 int3 int3 add add loopne add aas es add add (bad) ret dec in imul or push insl movsb icebp mov lods lea repz add pop lret rcll cwtl int3 jmp push call lods push popa (bad) sahf shlb mov add add jne jne cmc ret jne mov shl rol jne jne mov mov fcomps fwait lea cmpb cwtl mov mov cmpsl jbe (bad) (bad) incl lods mov dec inc stos test dec add xor jb mov add add ja add or mov incl jmp dec add add clc push jne adcl add inc jbe push sbb add push jne inc inc cmp ud0 mov xor jne jo or push dec add add push pushl push push jne insb call add mov push inc add fs push add xor data16 inc xorl add jne fadds call (bad) (bad) cmp mov push idiv rorl xchg mov add incl add add add or add add add push aad xchg (bad) jp (bad) (bad) sahf daa movb add daa pop hlt lock outsl std mov add jge add add call call lret pop mov vmptrst xor cwtl add add iret add and and and add sub xchg jle loope scas mov fwait imul (bad) (bad) (bad) (bad) sldt pop test add add call call (bad) (bad) (bad) incl mov cmp push mov addr16 int int3 add add inc and inc inc inc inc sub pushl jecxz xor sub add add mov (bad) mov call insb add movsb lods add add add add addl iret jae out dec dec dec test hlt mov push out xchg mov push jp add sbb push (bad) sbb (bad) mov popa inc test jge (bad) (bad) (bad) str fldenv mov add add mov imul addl add std add popa push cmp pop jecxz add add add add mov or loope ds push add mov or in dec mov lahf mov pop add add add js add add add add add das pop push add dec xchg inc mov cmpl xor rol inc scas leave rolb add add pfcmpgt push mov mov out (bad) sldt add add inc les jge and call call aad add add xlat push imul adc movsl mov mov ljmp add add add push movsl sub pop pop fstpl ds sbb mov xlat pop je arpl cltd inc lods jle ja add add add (bad) decl int3 int3 int3 int3 int3 and pop enter add add or mov inc dec roll fildl ret (bad) xor push mov mov adcb (bad) mov hlt jb sldt push adc add mov mov adc incl decl add push negb cmp enter push mov inc sbb repz or pop push (bad) decl fmuls adc inc or add sbbl push lret test xchg add fsubp sub add add jae push jae pop daa xchg test test sbb add add lea jmp lea sti add add or add add add jbe stos into inc xor cmp shlb add jne jne jne add mov add addl loop add xor xchg mov daa adc xchg pop jno push and mov ss mov add add dec lahf mov xor mov out xor sar (bad) (bad) (bad) (bad) mov call add add dec mov or scas in add call mov mov aam add lea lea jno,pn lods sub cmc dec out xchg fistl add add mov mov js hlt mov xor add aas dec stos repz pop mov and add add mov add add add add add dec push cwtl and or sbb sbb cwtl imul ds (bad) (bad) decl es adc popa ror pop fmull (bad) (bad) verw add add (bad) (bad) (bad) lcall push incl add add add add adc into or sbb add jne jne jne or or or add int or inc pop sbb test dec ss add dec inc loop out pop lcall mov mov inc call add push add clc incl call xor push add stos (bad) call pop cli jle nop add shr int3 or add mov adc in rorl je add ud0 xlat push add add add inc mov (bad) (bad) cld xor cs adc daa push mov xchg pop cmpl lods and add add mov mov xchg add fidivrl pop dec mov or pusha test test daa popf xchg (bad) add je jae daa inc leave cmp xchg cli test cwtl sti icebp testl addl addl mov jne jne call lea std jne mov cld push call int3 mov add add xor dec cmp add add cmp popa and mov add jne jne add sarb add add add add xor out insb cwtl mov sbb ret scas inc (bad) jns push add jne mov jne xor adc in xchg leave dec aaa fimull mov xchg add add mov (bad) (bad) (bad) call lcall add add ret mov jne add jg mov adc add add add mov mov dec mov xchg jg and test addl and repnz pop mov incb add add pop pmulhw add add gs add add test push test xor and inc and rcrl xchg add or das inc cmp (bad) (bad) (bad) (bad) sldt add dec push pop push test rcl int lret popf add inc cmp add add add ja add add or add add decl mov inc lret cmp imul (bad) (bad) (bad) decl mov pusha dec or or jo add and rolb inc cmpb pushl push cmp dec xor push adc add cld jmp add repnz cmp xor xor or push inc add mov mov add inc jmp xor movups add inc clc call add mov clc incl or push imull xor test or pop add dec sbb int add add int ljmp ffree xor add add add addl addl add add int3 loope int3 int3 int3 add add xchg lds xor mov mov add jne jne jne push cmp jge in (bad) push xchg xor push push push push jne shll mov mov mov add (bad) bt pop imul mov loop and inc arpl sldt add add incl (bad) (bad) incl add sbb mov hlt hlt divl call popa inc push jnp jp lea mov ror add add cmp mov (bad) clc or (bad) (bad) lcall sub fisttpll cmp pop or pop enter and mov mov add add push (bad) nop push sub xchg inc lea call push add add (bad) dec jl dec add int3 int3 int3 int3 add movsl ficomps fisubl push push rcrl add add test xchg xchg js jle dec (bad) hlt icebp add add inc std fdivr (bad) mov sar gs push jmp inc inc inc inc inc add add dec pop add (bad) (bad) (bad) (bad) (bad) call call mov and mov ljmp inc pop (bad) clc hlt popf insl (bad) push add call call dec inc popf add arpl mov jne jne loopne sub mov jne jne sub (bad) (bad) (bad) incl add and mov sbb or jp add (bad) (bad) (bad) decl lea mov xor jmp add and xchg movsl mov cmp adc and mov push mov je add add dec fwait adc test or ret dec addb add bound incl add add incl call call movl dec add test sub subl inc mov sti push gs add or adc or pushl getsec or sldt loopne push call rcr rdpmc test add add inc inc jb lret or add and push add xlat call push dec jne cwtl push data16 mov cmpsb test sbb add add add add mov pop dec (bad) push and adc push adc push push push push (bad) pop rclb add mov push push dec je xchg fcoms pop into mov xor decl (bad) (bad) decl inc add add add add mov data16 clc jg fsubl adc add add add cmp add add add add add add in xchg imul mov jnp jmp push sub mov mov add rep and and call mov mov or cmp call iret addr16 (bad) (bad) decl jne jecxz jne test mov (bad) push out sbb in dec and ret test stos outsb xchg or mov add pushl icebp (bad) (bad) incl add (bad) fbld inc (bad) repz pop mov lock or ret cmp and add jge sbb add add arpl (bad) (bad) ljmp into notl sub clc xor dec test mov (bad) (bad) (bad) (bad) movq aam inc call or and (bad) sldt add add add xchg add add and push and or cmp or or fldl test js out fstps clc dec incl (bad) (bad) (bad) jmp and testl imul dec dec fildl add add lret lods rcll (bad) insl sarb or or call call add test test sahf push mov or cmp mov lea mov mov clc cltd pop or pop xchg (bad) (bad) (bad) mov and and insb (bad) (bad) (bad) lcall dec incl add add inc inc inc mov ljmp clc unpcklps xor inc inc inc inc inc inc inc jne cli fbstp jne add js cmpb in inc or adc add sbb push mov mov into out (bad) fnsave jge add aam (bad) call (bad) incl inc inc mov add add rolb je push call (bad) aas push mov decl jb pop incl add mov add mov xlat add sar mov or dec add jmp jecxz or inc iret mov (bad) decl lea add add lds rcll mov lea adc push in cmpsb insl push mov sub jne jne cld mov jne addl (bad) test or add add add add add pop (bad) arpl add add add loopne pop add add add xorl inc xchg orl add add out add add or ja loopne shrb sbb jne jne inc mov push and std xor pushf fnstenv (bad) (bad) (bad) incl add ljmp jne jne mov add or jecxz mov inc popf ret dec or inc push arpl add jns sub call lods int inc or ret ss enter xor pop mov xor add add jp mov test movsb push ja (bad) xor jno adc popf sti jb add add addl loope adc xchg cli mov lea orl pop mov lea insl inc faddl repnz test jp mov cmp adc loopne cmp xlat ss cld into sub add add mov add add lea mov das xchg in adc lea jne jne verr add je pop push rorb mov and pushl addl add push adc dec insb inc add mov xor icebp addb add (bad) (bad) fdivrs ljmp jmp or (bad) jle (bad) fwait jne and ficoml push stos cmp fidivrs jmp add add dec add add daa out add orb dec add add pop in xchg and adc out decb lea push es add add add mov stos adc mov in cwtl jge test adc push mov add add data16 rorl sti popf addb add add incl push lahf (bad) (bad) (bad) lcall add add xchg pop arpl cmp pop jne call movsb sub sbb add add add add xchg xorb add add mov daa rorb add inc mov mov in cmp inc inc inc inc call call xchg rol cmp mov test jo test xchg push add scas push adc divl roll addb mov push incl test push push mov add add decl dec add call add clc jb incl add rolb add in xor inc push add inc and inc inc push inc inc inc cmp call hlt test pop fdivr incl rolb xor add add adc add loopne idiv call cmc je sti mov inc mov add add popf push add (bad) (bad) decl push sub or enter (bad) (bad) pushl jne jne mov int and add orb add movsl sbb add mov fdivrs add pop adc inc add add mov mov stc inc jge xchg jl or repnz test and and mov shlb iret and add xor add add add xchg fildl sub add add add mov jb pushf mov mov outsb iret sub add jne jbe jne jne add add mov jb icebp mov add mov mov add add add add add add data16 and push call add lea push addr16 push push inc inc inc or cmp cmp cwtl jbe mov inc add add (bad) mov cmpsb push xchg dec jo lret add add mov mov mov negb fwait insl cli stos sub sbb push adc dec fisttpll xor arpl adc add add add push dec add xorl push push adc xchg mov add push add inc outsb ja inc mov jecxz mov inc inc je cmpb call roll sbb jne inc jne jne pop add rcrb dec jo mov int3 int3 int3 rcrl faddl pop jnp (bad) add add add jne ljmp mov add add and out xchg adc insb xchg add fcmovne shll dec fld and add add mov pushf movsb xchg sbb mov mov ja (bad) (bad) (bad) jle test push test (bad) (bad) (bad) decl (bad) paddusw mov sahf jbe pop or pusha bound mov (bad) xadd rol or orl or add popf pop sahf dec mov xchg cmpsl pop mov add mov cmp (bad) out xchg mov fbstp add add cmp pop mov lock orb add add fmull jne push add repnz xlat (bad) cld jne loopne add add add push in orl inc je decl add mov push add inc mov test mov add adcl fwait push call xor inc sub push call psllw sbb je inc inc push push dec addb xor push add add imul ljmp add js fwait test push (bad) enter call outsb call ja add test and or push jns push test add add sub jae add add and sbb (bad) and add add sub sub pop out mov jmp add add add add adc xor (bad) pfrsqit1 incl arpl ret nop out xchg sldt add add pop mov add mov and add add into mov adcl imul mov add add add shlb or jns cmpsl pop or rol add add add add es call test mov lret lock ja push test pushl sahf xchg ja addl jle jmp lock adc pop leave adc or mov xchg punpckhdq (bad) (bad) (bad) pand mov sub les mov outsb dec and jnp sub mov ja ja addl into lods insb adc and (bad) add add add les add push xor inc xor (bad) (bad) (bad) decb lds xchg pusha ret mov add add cwtl push and outsl mov adc insb dec pop push and adc insb inc mov stc or xlat in add add add call jg call inc add pop sub add add add lds hlt and jmp lcall xchg cli mov iret add out add cmp and and add sbb xchg dec ret shlb shlb repz mov add add mov das in mov call inc cmp cltd cld (bad) sbb out cli mov dec push clc push (bad) jbe mov push add add add ret add add pop cmp push add add or mov inc push call jne sbb add incl dec push inc mov push rorl cmp adc cmp lea clc sub add push inc mov call add and and add and and out in add fistps in add popa jb and mov cld mov mov lret add add call add ljmp or stos mov jg movsl out mov cli dec or test jne jne jne add pushw adc outsl push out sub fisubrl mov xchg (bad) (bad) (bad) call call shlb ja xorb pushf shll fwait dec sub (bad) add add addl xchg cmp cmp enter rol shrb std and out mov add add add add push add add jne fldenv jne jne push pop out ss sahf movsb adc xchg pop cs push call jno push inc scas or inc inc ret mov test sti jge lock adc inc inc inc inc rdtsc jp loopne (bad) (bad) pavgw lea jne jne add gs xchg inc mov ljmp lret push add add add add adc jne jne jbe test adc pop loop pop cmp jne add lds dec and add add arpl add add add add add call call push add mov inc adcb add adcl add incl test in mov add add movmskps add inc jbe popf scas testb mov add push sbb mov inc or je add call call add cld call sbb (bad) stc in and sbb add (bad) rolb or adc inc outsb into jp ljmp ret xlat aad sbbb call call mov out sbb mov addl (bad) (bad) fmulp fisubrl (bad) (bad) and and sub and sub and and dec jecxz push repnz rorb adc push rol rol and rol push fsubrs fcmovne sbb or jge and fdivl dec xchg jno or add add add add add lea mov inc inc inc mov mov push (bad) jno dec dec fucomi inc cmp fucompp insb add into xchg add add mov sbb dec jecxz dec cmp jmp mov or or call inc movsb call mov ja dec mov jmp add loope in xchg lea and jo and add add and mov into insb mov add add pop cld test jp push mov ljmp add add lcall add add add stos xor adc pop aad stos push bswap pop mov push pop bound lcall add add popa add call mov sbb dec or cmp (bad) emms ja push repz add pop movsl add call test (bad) (bad) decl aaa pop popf (bad) ja pusha shlb pop scas sahf repnz rol dec (bad) pushl ljmp add add dec push int stos add gs add add add in rolb out ret add add xchg sarl mov loope pop adc addl jne jne xor pushf ss pop mov push ret and leave lahf push bound mov add add inc add add add inc xchg jno xor dec imul add add adc add add or movsb divb adc sub mov inc push xchg push and sub dec addl add add mov add adcb or call push (bad) cmp mov decl inc pop inc push jmp incl jne (bad) jge rolb cmp cmp add add inc rolb fcomps add (bad) push add (bad) jne push inc jge add orl cwtl add jne jne push add add loop or fs idivl dec mov outsl xor add jo test cmp inc add add pop jnp pushf popa (bad) in ret mov add movsb mov add add add add push fcmovbe push push add test fcom je fcoms shll jge addl inc fucomi call mov je std push notl out push js sub pop pop mov jp mov jne sub jne mov add add add call adc rcll dec popf xchg push sub lret call dec (bad) (bad) (bad) incl cld mov faddl popa ror jecxz sub add add add pushf call add or xor add add push push mov xchg cmc rorb call out (bad) shrl add add add add clc add add push popf (bad) jge lock push dec sbb shrl push test xor sbb test out add add mov nop mov push xor adc and outsb inc push cli sarb js enter (bad) decl int3 int3 int3 int3 call daa repnz pop mov xor push add add add add mov mov mov int clc sub cltd pop xor mov repnz pushf add add ja add and fldt int3 and add ret pop mov je mov add call test test add popf inc and roll mov add fsubrp add adc jge or or add call add add movl jne lea mov add mov (bad) call mov add push add adc or jmp lahf shl add test add add push sub adc add add jecxz push (bad) int3 int3 int3 aas inc and and inc or add add add mov inc stos sbb jnp jo stos (bad) sti add add add or push xor iret add add mov imul inc add mov add lea mov lea movb push jecxz mov adc inc adc arpl lcall jg (bad) (bad) (bad) (bad) (bad) incl add incb or xchg push lea fsts mov add push push push ja (bad) repz inc nop push add add mov int3 cmpsb mov notb es xor test mov add add add idivb pop shrb lcall pfrsqit1 stos movsl inc push ret inc mov incl shlb xchg call cmp add mov addl test jo and sub inc xor inc jmp and or mov push dec pop enter or inc mov add pushl add incl mov cmp mov ret jne or mov (bad) or or add add mov add add (bad) pushl ja ja push sub jmp movsl add int3 stos hlt xchg scas xchg sub call test test xchg pop push sub addr16 scas sti clc mov xchg adc mov (bad) (bad) jmp incl inc inc lea xchg mov push pop inc sti sbb dec pop jnp lea add insb je jne add add pop sbb int3 fidivrs int add ss mov mov mov mov add add jns (bad) bound scas mov shlb jb mov inc inc inc mov inc jne jne jne jne pop xchg xchg xchg cmp imul sub push jne add add add incl sbb mov (bad) incl add test add add sbb mov sbb push cmp (bad) sbb push sbb push mov add add fld data16 dec xchg xchg push xchg adc jne jne in pusha popa ret cmp inc adc call add mov mov add add add (bad) cvtps2pi (bad) (bad) sldt add imul sbb out fwait xor add push adc cmp ss dec fildl test add inc hlt jne dec repnz push add pop push mov sbb (bad) xor add add mov push addl incb cmp cld adc inc mov push lock or pushl add lahf push push push push add imul push sbb seto bound (bad) sbb push jbe (bad) (bad) dec lock (bad) (bad) (bad) test add add add add (bad) fcompl push insb inc push shll sub add mov mov xchg mov sub test popf loope jns cmp jne push xchg mov sbb jle dec mov add pop ljmp add add add jp mov arpl push shl addr16 mov inc shll add add dec out sbb add add add (bad) lcall ja not data16 icebp mov (bad) decl push push dec out push push push push lea (bad) call call pop lock fwait mov lcall test seta inc cmc jecxz pop sub in xchg add add xchg fcomps into jne cs add add add ror jb add and and mov repz int3 adc data16 sbb mov xlat dec ss movsb aaa mov (bad) call xchg adcl mov loop,pn call bound add fwait push push push push fdivs popa push mov add inc lock push lods push cmpsb mov into out or jbe insl (bad) add mov call call inc mov out or inc dec add adc mov add add inc push or push xor add push mov test mov mov orl rolb call push call mov jge sub inc add add push ud0 inc xorl rcrb push add jne pop mov pop inc push jl add add push roll mov or xor xchg jb outsl pop jne or add mov and sub inc fcmovne mov push iret add add decl icebp (bad) (bad) (bad) ljmp jmp popf pushf mov int3 dec clc mov lcall push testl mov add add add addl pop jle daa sbb sub cmp add add movsl inc repnz add add add loop add add add add test mov pop xchg mov add add add add add add cmp in push jp xchg in add add push inc jle aas xchg ljmp add add add add add lds mov aad (bad) incl add push sbb xchg ja mov or push push sub push push faddl add (bad) adc add add test jnp sub pop xor fbld test inc inc push test add add add add add push push push push push mov mov and sbb scas pop push (bad) (bad) (bad) (bad) sldt outsb addb add ret mov add repnz pop shl push sbb pop aaa or (bad) (bad) (bad) incl jnp xchg add add mov mov (bad) nop adc mov loop dec rclb std add add pusha in pop add (bad) (bad) (bad) decl (bad) montmul cmpsb pop jnp subb jns ja fwait add (bad) jge add call add mov mov lock jne jne inc add and add aad lds call dec pop add add aam test jl pop gs addb mov divl jecxz ds stc aad mov add add call or or call call inc mov js outsl into das es inc cli mov mov leave push aad aam add pushl xchg jne call rcrl mov or call pop call push add add or cmpsb leave push xor pushl call sub adc out je add fildl mov add inc and jmp add mov push add call shlb test push add add (bad) (bad) movntps div pop sub loopne aam adc add add mov mov add mov daa lods mov ja mov int3 std in mov repz xor int3 int3 int3 or or add in add add add xchg push lods xor sub pushf stc data16 js (bad) mov ss insb jne mov add inc pop dec sbb and cltd jbe add call mov mov sub push add add ja push push pop jge inc sahf das mov stc loope les cmp ja mov cmp mov xor or add add push or (bad) jp lcall add (bad) (bad) (bad) psubsb call call add add add add lea mov cmp mov mov popf mov addr16 inc lea (bad) (bad) (bad) (bad) call fstpl mov nop fdivl jmp add (bad) call addl loopne jo mov and andl addb jo push lea jbe incl sbb (bad) clc inc adc add dec test add cmpl add or ljmp add lock call dec add incl les xor subl mov add add test ljmp add sbbb lea cmc lahf push adc inc adc int3 int3 add push addl add add icebp stos push clc xchg cs sbb add add das push add repnz dec cmp mov add add push inc add add jne popf jne jne mov jmp xchg jbe testb push push or or mov and jne test adc sbb mov add add add rcr cmpsl rol add add movb mov sbb add or or jg (bad) push das or mov add add mov lea sbb ret mov subb mov and and add push jno add fiadds add add add daa out fs cld lahf xor add mov jmp add add cmp add add mov (bad) sub xchg fdecstp mov cmovne (bad) (bad) lcall test test call (bad) pop mov jo mov mov ja add jne jne jne add sldt add call mov pusha xchg aad jmp fcmovbe lahf call xchg stc push repz jne jne add gs add add add pop push rorb decb pusha mov pop mov or nop add pushl cmp inc je std test clc inc adc mov adc adc pop mov cmp add jbe out in subb dec push add push sub shr rol sub scas add mov push push cmp fadds add (bad) push stos or adc add (bad) (bad) (bad) ljmp add add add es mov xchg shlb sahf mov jne jne add mov add add push dec add add add add adc dec ficoml outsb and add add and add and addb test (bad) (bad) (bad) lcall (bad) jne adc (bad) push mov decl (bad) (bad) (bad) ja (bad) sldt add add add mov add iret js outsl pop fcoms cmpsb cmpsl scas es push adcb std js mov add lea in lea sub repz sub sub add add add mov add add jmp (bad) (bad) incl gs hlt lcall (bad) jle add test add and inc inc add add cwtl fisubrs dec or add push mov push jecxz negl jne call call das jne jne dec (bad) aad cmp or ds in test test add add fwait int add add add mov xchg push inc push lahf add and and and add mov add mov mov push add inc xchg xor dec or jns out scas lahf inc inc inc inc add add add add fstpt sub jp ja ja adc pop xchg movsb jbe gs dec je inc add sbb add sub adc clc adc or adc pop incl je jne shrl and jo push (bad) jl add mov push call jmp andb data16 xchg (bad) ljmp push in mov or pop jne incl or jmp loopne dec or call loope jb push add or add hlt jne add je decl mov jne jne or or mov and and call call push or xor jg push pop scas mov push or add lea test ffree mov inc daa lcall inc or addl and ljmp add add add ret push loope sub sbb add add (bad) (bad) in push (bad) (bad) decl (bad) paddd leave or pop (bad) (bad) shufps dec ds dec pop push sbb (bad) (bad) pcmpeqw jge jne jne add add test push (bad) sbb dec lods mov pop inc in in adc mov testb int3 int3 int3 stc pop xchg std push (bad) shll aaa mov dec int3 int3 add add add cmp jne jne jne mov add add call sub dec fisubrl out jb (bad) (bad) (bad) (bad) incl popa dec add add orl in sbb push leave mov test addr16 je add pop add add add add repz jne sbb iret lea dec das and jb inc push or ds jne call lods (bad) (bad) (bad) decl int push or test mov and add add and and push cwtl xor add add add add popa jle fbstp pop jmp pop jb add test mov inc mov fsubl sub xchg and add ja jp imul mov jle ja ja mov xor add add add lret mov repnz sbb lea test popf mov add add xor lea mov pop negb adc mov mov jno add mov inc inc add mov add hlt mov jg or inc mov incl jne cmp in add lods sub add js cmp inc cmp inc call add cld mov xor inc ud0 add cld or push (bad) mov je add add add leave mov add xor add inc mov push fdivrp pop inc call jne mov jne add call rcr jmp shlb and lcall stc fstps int adc rolb add ffreep ret dec sub test int3 int3 int3 mov imul mov call int3 int3 int3 insb mov int3 int3 add add add bt (bad) (bad) jae or push adc sbb pop cld sub sub mov cmp (bad) mov test aad cmp mov inc inc inc ja vmread ja ja sub imul bound int3 and sub or inc in mov xchg add add add add add enter test leave mov test push movsl dec mov jle cmp (bad) (bad) decl mov (bad) (bad) (bad) (bad) jb out jg xor jo mov and mov sub (bad) incl add (bad) jmp add movb int3 int3 int3 add ja orl add xchg mov lea mov dec mov and test sbb sbb movsl lock add add int3 ficompl int3 int3 int3 int3 pop aas sar mov xor adc lds add add (bad) js inc fnstcw mov mov call add add add add int3 mov add add fs aad stos push fdivrs jae mov adc lock repnz test xor inc js dec or pop or das push mov in fildl inc inc add sub add add xchg or add add push jg lea add xor outsb imul insb insb sub or xchg add add add arpl inc test push mov push aad add jne (bad) (bad) cmp inc cmp jmp push add hlt fdivrl and sbb incl xor (bad) loop sub roll sub jne les addb add rorb add jne call sub adc test lock jns add mov add jne rcll pushl rolb mov add push inc hlt mov adc call sbb pop add add xchg add add shlb iret mov imul dec iret out or repz sahf icebp xchg pop lea cmp punpckhdq fcmovbe xchg add aad movsl inc adc push add add add sbb mov je jne cmpsl mov and cltd ljmp repz mov (bad) or add sti add add or add jmp and call pop ja fsts push (bad) ljmp inc inc inc aad out inc inc mov add add add jns adc push (bad) add xor imul add es int3 and and aas cld ds mov inc ror and and add add add ja jne jne test jne mov add fcmovu movsb push inc insl test imul add add add or rol lods out xor ror negb cld inc rolb push or test pop add add (bad) mov dec into push mov scas arpl pop popl bound fcoms mov mov sbb push jne jne mov xlat jg pop pusha xor jne mov call call jne add add or add add and inc push outsl negb repz dec enter test add jmp mov mov or add push xor push mov add xor dec cmp jb add inc inc cmp mov mov test je add add add push add inc sbb adc lea aas add add std sbb rolb dec add rol add add jo dec dec jge insl ljmp (bad) (bad) (bad) (bad) ud0 pushl cmc (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl add add pop and mov mov aad dec sbb mov add mov add outsb inc push sub inc cmp xchg roll add add mov (bad) insl add add enter addl (bad) (bad) (bad) decb pfrcp xchg dec std mov xlat jp lea jge les sbb jge add inc cmp add mov add rcl idivl adc pop or mov push jne jne mov (bad) sbb (bad) icebp addl jae pop adc xchg roll inc (bad) (bad) (bad) lcall cwtl decl add add push sbb adc pop fwait add add add add loop mov inc inc inc mov mov fs movsb call xchg je sbb es icebp int xchg mov push xchg jg fadds add add insl lods add add adc rorb call or mov pop js lea push mov incl bound add add and inc add jne mov inc push and test push push call (bad) flds pop decl xor call psubsw jmp sti repz add inc aas xor inc stos or xchg pop das mov add add hlt xor jae fwait lret xlat mov call add add add add add lea adc push fisubrl pop mov dec mov mov mov not xor add add out cltd mov pop push mov (bad) (bad) incl xchg mov add add int3 shlb call (bad) (bad) cmovp mov pop mov pop scas push test xor arpl paddd (bad) (bad) incb add in add add add stos pop or mov arpl and movsb xlat push cwtl into pop jmp out add add call call xor (bad) (bad) (bad) jns adc aaa dec ss pop aam mov fwait mov in lea outsb lea pswapd push enter insb lahf pop arpl (bad) ud0 (bad) (bad) incl add mov add add and adc jmp lahf es fwait out cltd outsb pop sub sub ror push (bad) (bad) (bad) pushl xlat jne jne mov lret lock (bad) (bad) (bad) incl jp and sub incl add add adc ja ja jmp (bad) call rolb jl test (bad) incl into pavgb sub mov clc lcall ret and jne pushl adc addl add add add mov in jne jo add push pop inc add jae push add add inc add orl incl in push incl jmp add and hlt add (bad) call mov add call cmp jnp rorl jmp jp lods sarb call xchg and and add and pop push sub int movsl xchg mov add add add lret mov add lea cmp add add shll sub filds xor jo mov jmp add add add add mov add add cs outsb or cmp inc cmp jl jecxz xor int3 popf iret adc mov mov fstpl call cmove xor mov mov (bad) xchg (bad) fstps and jle push cmp (bad) pfsub int sldt add add (bad) incl (bad) vcvtsi2ssl fs incl add add mov mov xlat or add mov rol ret jb cmp mov rorb dec lret call hlt add add in loopne add push in call add add je xor xchg scas imul int mov add add add (bad) (bad) (bad) (bad) ljmp push push push add jge int mov lock xor icebp push fs ja mov or add stc mov add add jne and out rcll je push mov add add push test bnd add add (bad) add pop xchg and out inc sub and add add add add add add add addr16 sub jb (bad) push mov stos add push xchg into mov push inc inc adc mov jmp jmp push add mov inc fistl add xor xorl jmp rcl adc add adc cmp clc movl mov xor inc or and xor mov imul test incl (bad) mov push pop lret in push inc mov call mov movswl push add out mov lods subl pop clc rolb mov mov ucomiss pusha inc pusha jne aas inc push shlb in test push push push push add out add add add add call lret pop (bad) mov (bad) out xchg (bad) insb test xchg test add add test stos int3 or ss fsts add add add add mov mov jp inc add add add add mov in and push add int3 inc add add pop cmp xor ret sbb add pop hlt inc in ret rcl mov add add lea lea test add (bad) (bad) incb mov mov xor out mov incb push fcom add add mov lea add stos pop test rorl imul and and cwtl xlat insl and int3 int3 int3 int3 add add and or sub sti ss loop add add add rol into rol add add imul filds outsl dec lahf (bad) fldl add cmc xor xorl pop pop cmove add add data16 std add add jne addr16 jne lahf xor add add mov scas sub mov pop mov rorl add int3 int3 shrb out mov int3 iret popa mov mov add movsl inc lahf add add lea (bad) (bad) (bad) decl out aas xchg adc icebp adc mov mov inc and inc inc inc inc stos pop shr dec (bad) add push xchg mov test dec dec dec jno cmp cmp (bad) (bad) (bad) (bad) ud0 call mov addl (bad) (bad) incl inc or into or jne mov mov pop lds jne out cmp jne add rorl sahf jg in pop push add add add nop fnstenv add add lret add jl push add add add int3 int3 int3 pop xchg sbb aas dec lods adc jg int3 and and and call call and add addb pcmpgtd ret sbb sbb dec leave call jge pop adc jae call inc push push and inc mov (bad) lcall push add push mov test fadds mov and ret push adc push add inc in jmp push sbb add adc add inc clc cld pushl adc gs mov mov jb (bad) (bad) mov sub cmpsl test ret xchg pop loop aam add add mov add add fdivs (bad) std in sub lea xchg mov xor mov push in push push lock int3 int3 int3 int3 add add push cli loop sti mov jbe mov mov test andb test (bad) (bad) mov dec dec pop add add mov add aad xor sbb jl sbb pop or cli xchg (bad) (bad) (bad) ljmp bound fidivrs fdivs scas add or or rorb jae,pn push cmp add add add or add ja aas xor ja add push shr xor add push movsl cmpsb sub lret mov negl mov into lret lea xor ss add xchg mov subl or and add add add call add call lea add fcompl push mov sbb push cmp dec (bad) add add add add add (bad) (bad) incl or cmp sbb mov ljmp mov jle lock xor (bad) (bad) (bad) (bad) cmp addr16 (bad) (bad) incb add add add pop dec mov xor subl jmp mov lds (bad) (bad) (bad) (bad) incl add xchg sbbb fsts add call mov adc lods mov cmc sbb fldl mov adc mov lcall add inc mov push incl add rolb cmp push or add rolb mov add push loope call fdivl int3 sbbb jbe push in imul mov add add add dec inc js pop add add add adc pop in (bad) jmp add and and test test add add add add add (bad) (bad) lcall gs jbe into and pop cli ss mov insl (bad) (bad) incl aad cmc add add add pop nop ds arpl lret inc dec xchg add add or rol cs test addb (bad) (bad) (bad) ljmp push in popa notl pop mov fisubs popf xor and sbb int3 int3 int3 int3 int3 mov mov fwait xchg inc pop mov xor jp inc add or rcrl pop add call call imul addr16 cmp addl daa mov loopne aad call lods call inc mov call movsb ja sar cld je test inc add mov addl shlb add incl clc cmp xor add mov add or add test inc xor mov add add clc repnz mov pop movsb mov add add inc or (bad) (bad) (bad) jg (bad) decl test cmp (bad) (bad) jnp jge and js es insb sti imul mov lea xchg jg (bad) adc or call mov imul addl ljmp sbb (bad) (bad) (bad) (bad) pushl mov jne jne lea fldt lahf ret daa shlb xor xchg (bad) call call dec inc (bad) mov fsubrl dec in sub jne push add add add fwait mov or or or add mov out or mov jge jg out sbb gs pop jns add (bad) incl (bad) (bad) decl int3 lcall mov mov mov lock arpl add add jns add add mov mov aaa sub mov sbb push add and or sbbl or or lea mov inc in push add jp loopne icebp orl mov addl push inc jne ja call inc push ja jb add add push add add inc add add push decl jle pcmpeqw or hlt add add pushw out push adc ret sub data16 xchg es fmull add jne jne cmpsl out mov cwtl dec fs xchg into les inc jne mov add sbb add add xor mov add add push bound pop mov (bad) in test add add out and and scas enter mov into bound inc inc inc sub repnz cwtl jecxz je inc pop and call add add mov pop and pop jl dec sub ds sbb mov dec jmp and jle daa testl inc repz (bad) (bad) verr or scas add add sbb int3 int3 int3 mov int3 int3 int3 int3 (bad) (bad) (bad) mov jl iret jb jg push jmp inc rol sar adc (bad) (bad) pushl jne movsb or sbb scas sbb sbb inc mov add pushf cmp mov add add add add add add add add mov imul testl add stos jg fildl add add (bad) add add add add add and fstl jecxz fcomps add mov int3 out test int3 int3 int3 mov mov aam gs (bad) (bad) (bad) call mov fwait cld dec out xchg cmc dec out or call in add add cmpsl data16 sub mov add jmp fbstp pop inc hlt mov (bad) (bad) (bad) incl add jmp inc inc inc inc inc push push cmp test arpl jg cmpsb inc loope pop xchg aas mov pop into push cwtl test inc inc inc inc and pop sti sub out imul dec xor and jmp mov (bad) (bad) ljmp incl gs inc push fnstenv call test movl push lods add pop add mov add push je mov jne test enter xor jl add add jne cmp pushl lock movl call lods loopne add inc sub jmp je cmp test push cmovo xchg add data16 mov push invd mov ljmp daa mov (bad) (bad) (bad) (bad) call push ljmp push into xchg fdivr pop push push add add add test shlb add add mov (bad) or movsl clc loope mov jne mov mov (bad) jp unpcklps mov pop punpcklwd jge pop int3 js add add inc lahf fildl (bad) (bad) (bad) (bad) incl add loope call mov iret add add add add dec sub jb ja mov mov mov dec fcoms sbb mov pop fwait mov call (bad) cmp incb stos imul fcom repnz mov add int3 int3 int3 add add pushf mov add add add xchg add add (bad) ljmp cmp jno xchg in mov mov cmp gs (bad) incl lds add add mov and xlat or jmp mov lea sti add add fdivrs imul add add add add sti idivb in inc rclb and xchg add mov add call test cmp cmpsb lret std dec pop call jnp sub in mov sub inc inc inc inc ljmp (bad) incl pop rolb add add dec fildll movsb adcb pushf test mov je cmp push je sldt add add add in int clc js leave push lods out andl mov add add add dec cmp popf add add add add pop faddl add add and dec (bad) sbb and ja ja add add add or out xchg push fsubr pop ret jbe call inc roll add jmp adc add inc add add incl data16 lock add test xor stc je add loope sub push jmp mov jge add add call sbb fsubrs fmuls xor add inc inc add xor stc push lods jo add add xchg shll in add add add (bad) call mov decl (bad) jmp add add or dec in insl or add sub jmp pop add add add call push lret push fisttps call iret pop add add pop push inc inc inc inc ret inc jne jne jne add sub mov pop sbbl mov add add add add add add fildll cltd test and add add jmp rcll mov mov mov ljmp call outsb push ljmp popa inc sbb (bad) test mov sub push dec jo movsb xor jg pop insl je add add mov jbe add add add xlat testl scas (bad) (bad) (bad) incl (bad) test add lds addr16 hlt fwait popa add add call call cltd imul dec sbb call mov sbb adc test call add add push and pop dec add add add push out cmp xchg mov daa jmp jne inc push sarl add add add dec adc jg loopne sub and and shlb rol std add add pop sbb call add lock dec add mov xor inc push incl cmp push mov xchg pop lea inc push lock stos call jne,pn ret add xor decl add psubsw jne mov inc orl add sti shll decl inc inc inc (bad) incl enter je add (bad) call lock fidivl cli add jne addr16 xor mov add mov mov pop mov loop mov fwait cli int jl roll lret sub mov cvtps2pd or or sbb adc (bad) (bad) incl push add lcall add push (bad) pop jnp out push sub jne mov call jne inc insl or fdivl es test add out add add add fnsave add ss add pavgb out es jns or cli sbb add lea (bad) clc dec bnd jge idiv out loop roll decl or outsb or dec xchg (bad) add incl add cmp int add (bad) minps (bad) (bad) sldt add adc push push add mov bound fildl imull add jne add add cmp das and into sbb add add dec jae fdivrp (bad) (bad) push pop int3 int3 int3 int3 pusha rolb ja inc lock inc outsb add movsl shll sbb add (bad) (bad) (bad) incl add jbe add add add fisubrl add jne add push lods and mov mov out or or jne jecxz jne jne add add add inc adc lods shr add xor ret pop jns ja xchg add add bound add add add addl inc jge je lea addl add loope pop movsl add add add sbbl inc adc (bad) (bad) incl mov into xchg mov sti xor nop xchg js test (bad) (bad) (bad) jmp xor xchg jmp mov clc add add push clc adc int inc sub adc jge push adc incl call loopne addl jne add inc and push add mov and test call mov xor sub adc inc dec or jne push and (bad) movsb call call hlt pop mov jne jmp or insb add out (bad) mov cmp jp enter mov xchg mov add add call cmp add add or or add add rorb jno repnz add nop or add add mov push ss data16 push push push push mov mov add add mov add ja ja out mov lahf repz cmp mov ja add add add lea xor xchg sub ja dec rolb ret add aaa cwtl iret xchg xor adc inc push imul mov jp rol add add add xchg ficomps sahf sbb daa in xchg xchg and ds ss scas cs sti call xchg call call cmp pop mov jbe push push int3 int3 int3 int3 int3 add or sbb add add add push add int3 pop cmp add xchg mov and jno jmp xor add in add add lods cwtl dec les mov sub (bad) (bad) (bad) jmp cmc mov rcrl sub aam mov add push inc sbb add inc inc add sar add (bad) (bad) jmp mov pushf sub or mov mov incl mov add jp in xchg lret xor popa xlat jl add add decl test (bad) std repnz add add add add add (bad) lock or cmc leave shrb add add add add call call xchg (bad) sbb dec xchg (bad) ror adc decl adc push adcb adc mov jge mov fs enter add or and rclb (bad) jge jl xor cld addl notb verw roll inc mov (bad) cmp add add ret pop adc push je add adc sbb repnz test test inc rol add mov sbb mov adc aas orl enter int3 int3 int3 cmc lret (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp scas inc outsb mov (bad) mov add add jmp add pop mov clc push add pop dec addr16 push movb roll pop add add mov mov mov push and add add jg ds movsb mov sub add add push push dec mov jne jne add add add add mov pop fcmove lret incl ljmp sbb lret pop add add mov add andb aaa pop (bad) dec add lret ja add add add inc xchg addl xor add add inc add inc repz jns adc mov aad mov xchg add add add (bad) (bad) jno (bad) (bad) incb add lret inc push gs mov loopne add and movsl mov test out testb or incl sar (bad) (bad) (bad) lcall int dec mov imul loope sub add add add cmpsb add (bad) (bad) (bad) incl add sbb test ss cmp (bad) (bad) cld adc jne inc add inc je pop jge add mov push mov add inc add cwtl rcrb add sbb mov sbb add add inc add pop inc aam sub add pusha xorl cmp enter lock add addl jb adc hlt test dec incl rdpmc push icebp cmp mov mov pushl jmp invd sub lea ret inc add add adc mov in mov add add add (bad) (bad) (bad) incb dec add add add add enter add call push pop sbbl sbb (bad) (bad) (bad) (bad) (bad) jmp test (bad) (bad) (bad) jg testb in add sbb add add scas inc push movsb int3 ret pop mov std xor push add add add bound (bad) (bad) incl add add add add stos shrb add dec pop xchg sbb add int3 dec cmp int3 int3 int3 jne rcrb or cmp gs es dec cli adc jne add movsb aaa aad add add inc inc inc inc fldt mov add add add (bad) (bad) fisubrs test stos repnz lock lahf (bad) incb add add add addr16 add and and loopne mov xor movsl jge cmp xor and and sbb xor cmp jmp push mov (bad) call call je ret loope (bad) pop sbb adc std cmp add add dec pop pusha add (bad) (bad) (bad) pushl ja lcall insb and test add add add add popa pop scas add add push scas cs push inc insb mov inc inc inc inc call xor daa in cli repnz insl dec mov call test or rorb roll add outsl int3 xor nop loope jb or add add add addl addl add add mov and aas cmp add or xchg cmp xlat add inc xchg fnstsw inc inc inc inc add dec int3 pop push mov loope int add add (bad) adc sub (bad) (bad) (bad) (bad) sbb or pop mov (bad) (bad) (bad) pushl ja adc mov adc in arpl push pop add insb sbb (bad) (bad) (bad) (bad) jns mov div (bad) adc shr mov call dec jnp std sbb gs or (bad) incl outsb xchg add inc mov dec pop push ljmp inc sub lea ss push aam jmp lea add add or or ja adc fdivr add add call mov jbe inc adc jo cmp add xor add cmp (bad) mov sbb add adc pushl or push add adcl sub inc jge push mov (bad) insb add (bad) jp (bad) push adc data16 mov add add push (bad) call add ret in xor or add sbb cmc jle test jne jne add icebp inc mov add add add push in adc push push push add ss leave inc out fiaddl dec in movsl ret add add js add add push xchg pop pop cmc jecxz cs lea jne testb jo mov insb jl jne add add add add fiadds push mov add add add jae,pt push test dec xor ficoms cld dec lock push adc imul aad add add aaa add loope adc inc sbb (bad) (bad) (bad) ud0 and (bad) (bad) (bad) inc xor add add loope add jne jne call aaa std mov mov xchg pop addr16 mov call (bad) incl add or add dec int3 jecxz jns jecxz sbb xor add test jnp dec cmp popf data16 shll add add test sub add add mov add add (bad) pop mov adc dec or lods pop mov xlat movsb inc aam xchg es rcl mov add push push push dec inc lea cmp lock mov add add (bad) ljmp scas mov (bad) (bad) decl inc hlt mov and sbb pop cmc ror int3 ret jle sarl sub inc lds and jne add jne mov jo or lds xor lods mov vaddss scas repz mov add add add add mov add popf add add or mov fadds inc xchg jno (bad) sub or ljmp (bad) decl in cmp pushf mov or test (bad) cmp add mov (bad) (bad) (bad) (bad) mov jbe or or or jne add pushf insl fsubrl pop loopne leave jmp adc jne add add mov mov int3 int3 ljmp (bad) pop (bad) xchg int3 int3 mov es and pop inc jbe add mov and and nop in or xor mov add call add call cs je inc or sub roll or push add add sbbb dec inc incl or add or (bad) call inc xchg xor pop incl mov sub mov mov add xchg mulb cltd xor arpl mov mov mov bound lea jne jne mov xchg jle xor ret cmp mov addl out movsb iret add add jne or jne rorb ljmp jae xor sahf aad out movsl test inc mov add mov out fstps icebp pop add add aam mov rcll mov add inc inc lea lea add les inc inc inc add add adc (bad) (bad) inc sbb push ret outsb mov cmp sti add add push add add inc call mov jne jno out inc inc inc add or add add push ja int3 int3 int3 les lret int3 sbb dec add (bad) jg mull lea (bad) cld inc (bad) (bad) decl jo pop and mov mov into inc lds popf cli enter ss add add add xchg testb add test test pushf fisubl mov dec mov test jns mov add sbb add add add add push idivb mov sbb xchg movsb add and and and add jmp add (bad) dec mov incb aam pop add add pushl add add dec dec mov cmp add add push pop inc add push add or push adc inc lock je xor mov pop rolb and xor xor pcmpeqd push rclb or add sbb icebp (bad) incb adc and test add adc add push adc add decl push call adc pop cs dec push int push fisubrl push mov (bad) (bad) (bad) call iret push push push push ss xor xor imul nop inc xchg ja rorl lcall add add stos clc sub repz add (bad) (bad) (bad) jnp popf and dec popa inc and jecxz mov inc (bad) incl test push dec scas pop ror xor jo (bad) (bad) incl cmp call add add add out pusha add jmp arpl inc clc inc pop push mov int lock add add jno add add add mov cmpsb in adc (bad) (bad) xor test push pop mov fisttpll in add add mov movsb int3 int3 int3 int3 add add add sbb add mov sahf test out icebp stc iret aaa add add ds push add call addl pop aad xor add sub call sub lea add add (bad) inc push (bad) incl cmp add add out cld inc dec and mov mov add add add jne and shrb mov fs testl mov inc inc xchg xchg mov jne jne add (bad) add add add data16 mov lret out cmp cmpsb ret mov (bad) icebp mov cmc mov add dec (bad) mov out pop pop add add add add add mov in ljmp add add fiaddl inc lcall xchg add add add lea jnp xchg and xor leave sahf adc out jne push adc pushf addl add pop mov sar push (bad) cmp inc inc inc push add shlb je orps or push jmp pushl adc call jo cs (bad) call incl (bad) (bad) push add leave adc mov les add in add insl call inc add ret inc jo jne pushl flds add comiss mov (bad) (bad) ud0 popf (bad) (bad) (bad) (bad) call lea xchg mov stos add jne jne dec jecxz jne add add add add adc repz jo xchg mov add add add add (bad) filds or (bad) incb add xchg dec add and shrb add out les or stos pop xchg cmp incl add add outsl sub add add aaa loope ds jecxz jg push mov add icebp fstl ffreep movsl (bad) sbb inc inc add add jne jne jne add add add add imul adc mov pop lods repz ss pop push fldl add std sub inc inc jmp lcall scas pop lcall (bad) incl push push ja add add jb add add out mov add and and add pop out ret ljmp or int sub test add add int3 int3 xor inc dec adc fwait dec sahf int3 int3 add add pop dec lret imul aaa add add add (bad) sub add push add add pop pusha jge arpl push cmp adc and add add add addl bound hlt mov addl ja jns pushl ja addl add roll add add dec nop or or cmpsl fwait cs or or addl mov mov sbb add add sub pushf nop lods lds lods shlb xorl or add cmp mov add push call mov push je add or jb mov add loope and stc mov clc add sbb roll add repz idiv addl (bad) cmc std mov sar les and add add add das call addl test xlat jae in sub dec inc adcl pop in (bad) fisttps add xor xchg add add data16 test sarb addl cld inc add add push test into test int3 int3 int3 int3 (bad) (bad) dec mov test fisubs repz rcr adc incb add add (bad) jmp (bad) (bad) (bad) (bad) (bad) jmp call js jbe or xor jae addr16 cs addl sbb add add add add xchg push hlt ja add mov inc stos pop add add add and add add add (bad) (bad) ljmp cltd in pop push cli sub lock incl add add add cmp jno add add and lock mov in mov pop repz adc in jne and mov add add sbb pop jb mov push fdivl sub add add sti pop sub fbld xchg lea cltd or jne add add outsb add cmp add (bad) (bad) (bad) imul dec adc xor pop jmp sarl cmp aas (bad) (bad) call call loope jns frstor xor inc cmc lret add add inc inc xor add add mov enter lock sbb sbb xchg addl add inc add inc ret inc or add lcall data16 add mov inc mov push dec mov mov mov inc mov push add mov add mov mov ja ja aaa bound ja ja lea leave je insl add lods add mov lea inc inc inc mov mov cs rclb xchg mov mov push push xor pop je push inc lea or add out add add adc inc sbb test cli ret pop sbb push cmp shl add add mov add add add xchg inc pop ss gs add rol insb movsb int rol add out sti add push loopne add push push add es shlb mov sbb xor add add loop add add fwait jecxz pop xchg clc cmp adc (bad) (bad) incb aas stc inc xchg ds sub incb add add add add fld add jne jne jne add xor jne aam insl lahf sub scas cmp shlb xchg insb jne add push add add mov aaa mov jns and sub sbbl dec inc mov add mov inc add jb add addl add push inc jne push icebp decl cmpl jne add incl mov data16 mov decl push clc mov dec mov push roll call add mov push or incl or dec push jg aam push rolb dec addl xorl or add decl call call in add add or test inc outsb mov dec nop jne xor stc push call mov int3 int3 int3 call jne jnp jns push mov call adc xchg fs pop jmp add add pushl mov (bad) (bad) incl inc inc inc inc sub pop roll mov (bad) (bad) mov sbb test (bad) (bad) maxps add add call gs mov fsub ret mov add orb add add add imul add add jne bound out dec into sbb repz ljmp mov cmp pop fdivl xor inc add add lea mov pop sbb add add add jl add add add add lea cltd aaa mov mov push add sbb mov jae or mov arpl jne hlt loope lds fcoml ljmp out shl shr call add add (bad) (bad) (bad) incl add push xchg data16 jne and jo into out loopne add push rcrb push mov mov xchg mov mov push data16 es jmp subl adc push mov mov outsb in lods ret jp mov enter xchg (bad) mov add add cmpl (bad) (bad) jmp and xchg daa ss add (bad) nop push xorb pop and add add add into int arpl push add insb sbb add push xchg inc (bad) (bad) (bad) incl pop sub push mov mov pop adc xchg cmpl mov mov cmp mov (bad) ret or call xchg mov str or and mov add hlt cmp in jne mov or push call push jne and xor jge inc decw inc add dec incl adc add (bad) pop mov sbb cld cmp test pop push or or xor push inc adcb cmp xor pushf push cmp lcall in add inc inc icebp add add add dec and fcmovnbe jo add jne jne and mov add jae and inc mov pop movsb cwtl ret jae add adc and cmp add push or push push call insb mov mov test call dec sar (bad) (bad) in ret test or add or adc xchg das xchg inc add and push test test call jb mov fadds jno fcomps call pusha stc (bad) lret shrl mov add add sbb push add add add in ss jecxz sbb insl mov cld add andl test and and push adc and xor xor pop scas push push add add add popa push pop mov add loope add add add add add jne add fbstp sbb pop out andl jne add add push out scas mov mov lea xchg add fcom dec shlb add or or lock or add add add add add add add insb pop jno xor inc pop mov out pop push inc pushf push lret add add add mov mov das xchg lods outsb xor and inc pop mov mov jne jecxz add add pop jg add add add lea clc nop xchg cmp jno sti and pop cmp mov inc inc inc add add ja sbb sbb push jg add aaa in adc data16 xor mov add add add add add add push outsb lcall add mov loope or test pop decl add jo inc inc jmp je cmp push mov ret add add out fldl inc lsl movsb fsubl test popf add or rorb call push fildl into fadds ljmp enter (bad) mov sbb xor sbb cmp jge add sbb xor psubsb cmovl push incl lea adc jmp test test add add add add pop mov push xor insl mov (bad) (bad) (bad) (bad) incl add add add add xchg add call call mov (bad) jp add cmpl push add add leave rolb add into sbb rcll pop mov ja ja push je add cmp ja add add call cmp inc inc inc call call not pop push scas push lahf test fisubrs or nop js push add inc jno add add xor inc lahf popf call push nop dec pop (bad) (bad) (bad) incl lods sbb add add sbb add add pop add push push push lea lahf or pop cmpsl push data16 and aaa pop lea mov bndstx mov sbb push dec adc mov (bad) xlat stc mov ss mov push jne jne add add int3 dec lea stos adc xchg dec pop and inc fildll push push insl mov push addl add lahf ja push xor cmpsl leave pop push fwait dec push mov add (bad) pop sahf sar (bad) (bad) incb add pop xchg add jne out jne jne or adc out lods xor dec or push add (bad) cmp (bad) (bad) (bad) out mov xchg sahf ljmp (bad) (bad) incl pushf ja pop repz push popa (bad) xchg and add add add sbb inc inc push push dec inc push push push int3 int3 int3 sub int lcall fidivrl fstl xor sbb int3 mov sub mov ds cmp and mov add lret push lods push add add loopne or or iret jo or lea pop jl adcl xchg orl add add out adc or inc jmp add jne fsubr jmp or test cs jmp adc add pop xor or mov inc mov push addb call add xor add incl push cmp orb addl push (bad) (bad) inc inc adc rolb xor mov push add adc mov add inc and add add add add fnstenv decl loopne pop push testb and mov mov jg fs push and and jp jbe add add (bad) mov dec mov sbb mov les or cs ficomps leave mov addl add add (bad) pushl xor mov push sar (bad) (bad) (bad) (bad) (bad) dec int3 jo inc jbe int3 int3 add add sbb add add xor xlat cmc jl cmp xor adc add add add add add fwait mov or out inc xchg inc test out jecxz mov add inc inc inc add add test and add add fucomip mov cld push aam call lahf hlt dec out jb add and in mulb and ljmp jp push in inc adc push (bad) (bad) (bad) pushl jo insl jne jne pop aam add add jno add and and add dec stos jno pop add jae,pn push mov sahf inc icebp add mov (bad) (bad) (bad) and and loop mov add xchg enter lret sub repnz add add outsl add add add add add (bad) jmp push cld mov (bad) push int3 sahf aas leave dec sbb enter jmp ss add jne jne inc cmp cmp mov or pcmpeqw jne jne add imul mov int3 rcrl lcall bswap sub pop xor sub (bad) (bad) incl add inc inc add movsl sbb orl into and int3 int3 int3 sub fwait std outsl cmp (bad) incl push ds jp or sub call push xor add icebp dec jmp (bad) push mov clc mov lods addl clc jmp incl jb add decl and addb addb bnd and add call mov mov lea lea add push jle mov push ret outsb dec lahf cmp call data16 lcall cmp add add in mov sub mov push push and js or or cmp pop xchg add (bad) (bad) (bad) xor adc mov add mov (bad) ljmp incl addl mov and inc xchg add add loope mov mov xor test add add and rol and and inc dec push inc inc inc inc int3 xchg cmp mov iret mov ficoml mov or add out popa dec add add add testl lods call add add add xchg add call add addr16 add add jns ss bound mov adc lea (bad) (bad) (bad) mulps mov mov push cwtl andb loopne xchg test cmpsb pusha cmp mov mov stc xlat mov mov data16 mov (bad) (bad) cmp testb adc inc (bad) sbb ja jmp sbb mov add call sub inc add subl or mov addb jle sbbl inc add rol sldt xor add add jne jns lahf dec mov push pop lods add adc mov jne jne int3 sqrtps int3 int3 int3 add cmc push movsb or lods jnp add add inc addr16 sbb inc dec out test test and and add xchg imul loope test jne push xor add add add add add add add pop pop and sarb mov lea ds sub shrb inc inc inc add test add xchg add add scas inc xor mov arpl mov dec mov dec add add adc rolb (bad) (bad) (bad) (bad) incl add pop cmp jne xchg shll add add pop jne loope add mov mov xchg inc push add int dec mov mov in add add wbinvd das (bad) (bad) (bad) paddusb cmp repnz in dec fsubrs mov in pop pop xchg mov daa test add add scas fsubr je jmp add dec (bad) call pop xor and xor addl inc (bad) mov fmull xor or aam add inc add add or xor aam add lea (bad) (bad) (bad) sldt jge add add add fidivrl jp aam leave push push adc add and cmp and and (bad) sti test loop sub hlt pop out aas fcomp loope lea out pop (bad) (bad) (bad) inc mov call cmc call add add mov stc and pop mov push mov mov add add add rol ret push inc dec pop mov push nop inc pop stc xchg rol leave sbbl scas push pop mov jnp lea gs (bad) (bad) (bad) incl in add add mov cmc test or loopne pop lret inc pop leave ss mov adc add add cmpsb lds mov (bad) jmp push scas pop ja div popf adc (bad) call add iret xchg cmp add add add dec add add add pop and cmp mov dec jnp dec xchg add add rorb rol shlb jmp icebp jne add push incl call add push inc (bad) jge add adc call loopne inc push data16 xor add push pop incl insb push jmp add push (bad) fcoml add call cld incl js add mov adc jne mov pusha mov mov jne pop and ret inc jne and rol mov in push xor rorb push sub sbb mov shl add add add add add push add and and and add mov add add add or pop fldt adc aam push movsb nop or add addl jecxz popf mov cs mov push and inc adc and and (bad) call cmp and and (bad) decl push pop pop sbb xchg and dec jge (bad) imul (bad) incl add add add inc push add add cltd scas mov lods (bad) sahf movsb ret lea pusha xchg cmpsb int pusha mov lret into pop add add jne mov jne popf add add arpl sbb add enter or ljmp add add mov mov add sbb add inc adc dec xchg imul add add rcrb jecxz add add add cmpb call mov inc push xor int3 adcb leave adcb mov add add cwtl xor sar dec repnz add nop insb mov fstpl clc mov add and and ja and jne jne add fwait add add add sbb xchg shr imul fstpt mov cmpsb sbb lds push add (bad) cli fwait cwtl (bad) (bad) (bad) (bad) decl in push pop xchg popf in pop testl (bad) (bad) dec outsb in cmp int3 int3 int3 jbe,pn add add add add int3 int3 int3 jle mov outsl outsl test mull adc lds ret js int3 test add xor add push push push ret and aas inc mov add push and incl inc call incl xor and ret inc inc add add push (bad) (bad) incl add cld dec adc or add incl orl call inc (bad) incl mov sub mov leave nopl add add add arpl rcll add into xchg sbb push ret adc add add or or sbb add add shrb jge adc imul cmpsb outsb fistpll (bad) out sub add add pop aam int3 int3 int3 int3 int3 add sbb jbe fildll ljmp (bad) (bad) incl add pop adc add int3 int3 int3 addb xor add add jbe mov add inc mov in jnp add add sbb add aas or xchg cmp mov push or pop add add add loope aad lock add add add int3 int3 int3 adc fmul int3 mov jne sub jne add xchg iret sub pop movsl insl scas xor jbe pusha in sbb out mov add scas inc add add add mov push ja aad push cmp adc add add add add push push mov push add add test scas cmp inc popf fisttpll clc rolb test add mov push jae jp jg inc or movsb mov call cmp sub lahf push xchg add add mov call add add (bad) loopne pop mov push xor enter iret ss xor add add (bad) flds and mov xchg xor xchg xorl inc mov jmp xchg clc cmp mov dec inc add loopne cmc ljmp insb adcb jne add ret loop rolb inc mov inc inc icebp push add cmc test sbb (bad) sarb add add xor or mov testb or adc test push add jne call (bad) adc dec push jns adc insb call ret je and decl rolb xchg fisttpl mov add add add push mov mov jb jne jne add cld dec mov jae sub jecxz and add add mov stos push cmc stos jl push sbb stc (bad) (bad) (bad) (bad) sub push popf push shrb inc mov jne jne add mov add add add xchg ja ja add push or inc movsb loop adc lods add insl mov add call lret (bad) decl or jg push add sbb (bad) shll push pop add (bad) (bad) verr shlb add sldt add mov testb add add add add incl into call jbe add add add (bad) (bad) setl push orl shrl call xor leave mov (bad) (bad) (bad) decl ss insl or or inc mov inc jmp pop fucomip xor mov or sbb add add push add add push xchg jne push repnz sbb (bad) (bad) (bad) (bad) sldt aas sbb sti add add mov call imul lret pop xchg jo cld mov fadd add add add sahf add add and mov pop out add ficoms mov push xor push call adcl add repz (bad) incl add add call call jbe (bad) inc cmpsb cli aaa jbe push jmp and inc stos push js mov inc add add add add add fcoms sahf cmp lahf and xor add add mov (bad) (bad) (bad) call (bad) incl add add add add add out sahf test or add call push cli pop push push push add add ret bound (bad) inc pushf cwtl aaa push rolb add cmp cmp das in or lea xor bound add add addl sahf dec data16 cli jp (bad) mov lock push dec add add in (bad) popf add (bad) (bad) (bad) jne aas pusha jl test push jmp add insb add inc (bad) inc jne je jne test or or inc incl imul call fadds inc decl pop add add add jmp inc je inc jo inc lds xchg jge clc test add call call add add and sti cmp and add (bad) adc popa push xchg stos in mov in mov add add mov push inc shlb jae push mov mov xchg movsb testl fwait nop mov (bad) (bad) jmp lea mov (bad) mov popl pop fsub nop fisttpll mov jns cmp and xorl addl push cli push cld std cld push inc and add add jne or jne sbb call mov fisttpl ja jb mov add (bad) (bad) (bad) (bad) decl lea and shl daa ret enter add fildl xchg popa mov add jne add pop or add add enter add adc loop pop ss and js incb jle push cmp mov int3 int3 int3 int3 int3 add add jbe int call call push inc jmp lcall decl cmp shlb jmp sbb push (bad) call add xor add movswl sub test or aam jmp add add inc psadbw pop push push inc add jne sub push faddl add jne xchg mov or mov add add add add or push mov mov mov ret push lret dec jge sbbl test inc inc inc xorl addl mov xor add add mov lods xor xchg push mov mov add (bad) (bad) int add add lock add add xorb addr16 or clc push cld mov fcomp mov cmpsb in mov mov sahf push sub push dec fcmovne jno mov aaa mov call add and sbb mov mov je sub and cltd jb mov rcll mov add add add cmp add add add pop outsl stc and or sbb add adc xchg lahf pop mov dec (bad) mov xchg call jmp mov add push mov cmp fwait dec lods ja add add pop les inc repz inc inc addr16 pop pop and sbb add add add (bad) jne jge (bad) (bad) decb mov add add or shlb call rorb lret lods or or jne adc jne fidivs hlt insb jnp and repnz push js addr16 int3 ss and push arpl push inc inc inc inc (bad) (bad) decl xlat cmc (bad) pushl jne jmp sarb testb push inc orl cld jmp adc and xor jne call push lock shr pop add mov push inc jne idiv add mov push pop incl pop add add jb leave add add (bad) ljmp or je push inc mov js jne je call push inc xor cwtl add push inc add add rol andb out in xchg or sub add lock push mov or bound lods push imulb push je addl movsb xor add add addl (bad) mov mov aas and add rclb mov add (bad) decl jne jne push xchg xchg enter call jne add in xor cmp imul xor rol add lahf add add jne inc jge lret sbb push mov adc mov cmp add add add add add add mov mov cmp add jne jne add jmp add push popa push (bad) testb lea lret cmp mov movsb fwait (bad) cmp and adc mov push scas cmp mov sbb add add ret stos or bound jo adc pop jb xor add add add add adc add aad push xchg push (bad) lret (bad) pop mov es cmpsl mov add adc add add add xor add xor add add cs cmpsl jne jne mov add add jb xor add add add (bad) (bad) call notl std (bad) cli shl cmp call and mov and and add cmp or xor pop xor xor add cmp stos lret aad repz and rolb pop addl in add add popa dec push sub lods xchg ss adc cmp (bad) lods xor rcrb jge sbb dec mov int3 int3 int3 int3 int3 addl repnz sti scas ljmp addl add add add and add add add pop mov mov jae shrl ror xor or out push incl call mov inc add mov pop incb enter or or add (bad) in inc (bad) jmp mov or call jno push pushl inc call inc add icebp sbb js mov push clc sub shlb push adc jne adc inc test inc adc add mov insb or (bad) dec sahf imul adc mov in adc add add ja imulb cs mov rorb int3 int3 int3 int3 push push push cmp add add call call push push negb mov push mov fnstsw add pop push shr call or or add xchg sub xchg popf sub add add add enter add add add add jno push add pop dec movsl sbb aad nop xor add int3 int3 int3 int3 int3 rol jl rol int3 int3 inc jbe adc jge insb sbb int3 int3 call stos mov pop mov call xchg add add add addb add fcomi inc movsb clc jle (bad) xchg pop daa mov loopne xchg int3 test scas fstps jne pop mov test aad (bad) jmp bound jo je mov add add add add jmp add call call dec add add int3 push push je sub cwtl in jl push push (bad) in sub cmpl addl rorl stc sbb add add ret dec faddp in adc jno pop pop add mov add add add mov mov add outsl (bad) mov imul repnz push sub ret push adc add test add jno imul cmp jne jne add add add add add cmp add jne jne (bad) clc push and ss mov mov jne add add add or int3 int3 int3 fisubs cmp aaa repnz out mov int3 decl jl (bad) lods mov lds (bad) (bad) (bad) decl mov add add (bad) cmp movsl std sbb pusha cmc push add jne sub adc add mov sub loopne test add jne cmp jne add and pushl add ss add sbb shll cmp inc inc (bad) decl add push inc fcompl hlt inc rorl cmp pop pop mov inc call inc mov jbe shlb clc jne test xor cmp pop add add je lea xor icebp ror or aam add add or add add add hlt jge cmp inc imul addl int3 int3 int3 int3 ja ss inc cmp ja add hlt in add sti pop xchg add add jne pop dec enter fsub push das mov xchg imul push jne jne (bad) cli mov mov xor aas fcmovb adc add std jle dec add popa add push add ja ja ja add jne jne lods sbb sub jecxz (bad) into cmc xchg xor and js jne or add fsubrl mov shrb adcb (bad) (bad) (bad) str jle add add imul add push push push push and and dec dec loop dec dec ds push and fucomi popa add insl inc and inc inc inc inc inc add xchg add add add adc pusha pop xchg add mov das (bad) sub stos into jg mov pop mov add add xchg xlat call adc push (bad) lret sub and repnz imul popa mov mov mov add mov nop mov shl cld add add push push or xchg adc or call call add add add adc pop add xor test inc jo ja sarl add add (bad) xchg add add lret mov mov and and push and xor repz inc and add add add add add add pushl jne ljmp mov (bad) sbb or mov mov fisttps xlat jmp cmpsb xchg (bad) pop leave or popa dec xchg add add jne or jne in (bad) (bad) (bad) incl and inc inc inc inc inc lea repz cmp rolb cld push pushl jl roll add incl incl add or push cld inc inc sub sbb inc cmp mov inc add add jmp paddb inc mov je add leave add loopne cmovo incl (bad) decl or inc xor inc inc jne inc inc cli add push add sbb insb or inc or inc add inc inc push sbb push mov add xor pop into push add cmp add pop stos lea pushl loopne ja ja inc inc mov inc pop es pop inc cmp lea xchg mov mov xchg mov lea xor add add ds push dec sub pop xchg stos clc fisubs or insl jl repnz rol and add popl (bad) (bad) (bad) (bad) (bad) (bad) (bad) call dec stos xchg mov enter adc (bad) incl add add add or add add add sbb ss (bad) (bad) (bad) decl test scas push push and fst inc add mov lea jne jne movsb mov mov lret lret add inc dec push sbbb pop mov add add add (bad) jp add add add mov mov add xchg and jmp cmp mov xchg mov add int3 pop jne jne jmp add and xchg cmpsl mov ja sti (bad) (bad) (bad) decl mov (bad) (bad) (bad) call rol add and adc mov and sub jne jne mov test call and mov mov xor call in xchg push sub add add mov add dec and add add loope movsb push cmp inc in pop arpl push xchg enter sbb mov mov add add mov into or xchg push xchg pop popf xlat dec pushf mov add add xlat je add add add rcll sbb test sub divb inc xor push ror push add add jne push jne jne mov outsb rcll fildl inc add add xor push push jo inc filds int3 int3 int3 int3 int3 add add jecxz add pop add add add pushf add outsl in xchg xor mov jmp fcoml loopne add shrb test add mov sub sub addb call add add add or push add push data16 add add int3 add je jge sub cmp fildl add cmp or mov add add lea sarl clc add jne orb lcall mov sub mov hlt call out xchg insl push popa dec mov call mov add add add bound push push push push push add add mov popa js dec and scas int3 shr enter mov incl (bad) (bad) incl add aad lock cli push add lds add insb add pop sarb mov int add add add add jle add add int3 add inc jnp mov xor cwtl mov inc test jno dec int3 add add addr16 jl adcl add lea add add add adc add add scas add add add in inc ret adc jl int3 push (bad) sti pusha lods je add add add add add push cltd ja cld outsl addr16 sti outsb cld push xchg add add push (bad) fcoms add add add int3 int3 int3 int3 int3 inc inc cmp inc inc inc add add mov inc lea mov jne subb leave add add add inc dec jae jb imul inc inc inc inc add jns add add cmp add add popa mov (bad) (bad) jnp roll enter mov out shll addl add add add mov xchg xchg or add add fdivr mov push das mov scas mov add inc inc incl inc (bad) jge sub add add or sub push mov add jg jge push and sub call sar add inc and jmp inc inc jo jmp add add jg mov lcall add adc push push shr jb add add inc pop jno push lods mov push (bad) jmp in lock push adc int3 ljmp rolb dec pop adc rorb mov adc or cmpl and inc fcos (bad) (bad) decl cmpsb mov sub out jno push lea add add add add jne jne or mov jecxz cmp in mov add add mov inc add add sub (bad) push pop jne es push repnz or and insl and and add add mov in add sbb mov xor decb mov (bad) (bad) (bad) pcmpeqw xor sahf jne add add add add lea int3 push jnp mov push jl push sbb dec iret push je lea jne jne call inc out divl rolb int3 call push jae pop add add adcl movsb cmovb lea jmp jle icebp inc lods add lea add addl mov xor outsl aaa jne shrl mov mov push sub mov stos (bad) (bad) (bad) decl mov icebp xchg ficompl xchg xchg push arpl add cmp add add mov pmaddwd (bad) notb cmp add add add add rclb decb bound add or test xlat cmp lods mov mov int3 int3 int3 int3 jne jae jne jne mov mov es xchg mov mov js pop lea add add add or and and add jecxz add add (bad) (bad) out xor out in add mov add pop jg add lcall outsb (bad) (bad) (bad) incl sbb inc out fsubrs aaa xchg dec rorb fidivrl add mov syscall add add xor sub add add add pusha je clc sbb sub divl add loope jmp add mov xor (bad) cld call xor inc int3 mov dec or inc (bad) cmp add jne and add jge adc or add push (bad) adc push inc cmpsb add data16 add add jne push call jne add dec test add or fcompl lea lahf aaa push push add mov adc mov dec mov add ret imul adc (bad) mov out add add maskmovq mull bswap (bad) xor int3 int3 int3 push pop mov je sub jb mov cmpb int3 cmp add add jmp add add add rorb push ds or ror xchg jle or add add loopne mov (bad) mov (bad) (bad) (bad) incb xchg jmp ret cmp push fimull data16 inc inc inc jne mov jne jne daa ljmp mov int3 int3 int3 int3 inc mov mov out int3 jmp add add (bad) (bad) (bad) incl cmp inc inc (bad) (bad) ljmp jp daa xchg push orl mov mov rorl and pop (bad) incl jge testl fstpl lret flds imul (bad) (bad) (bad) (bad) (bad) adc (bad) (bad) (bad) xchg pop jne jne insb pop lret inc inc inc inc jne jne mov int xchg add push in fdivs add add add add lret add add and jl arpl inc xchg dec jle and decb sub xadd (bad) (bad) decb mov call fisubs lret loope sbbl push push pop repnz sub js in into add add popa ja add jne jne test aas test mov lahf xor or add add cmp (bad) into clc lea cmp incl sub and add or jne mov dec add inc (bad) (bad) jns (bad) push addl mov call pushw sldt add sar pop je add mov pop adc mov and add push jge or adc or xor enter scas call lock sub inc orl add cmp decl add push adc add addl jecxz jnp xchg mov ljmp jne add add ror loop pop rcll jl testb mov cltd jo cmp lea add add add add add lea call call dec mov pop xchg rcrl and mov icebp inc pop add add out add add add mov cmp push test add add add add add add je jnp mov add mov jg rcrl adc push mov add add add add xchg fwait adc aam sbbl call jb push mov icebp xor call in or or add mov pop sub outsb dec cmp push jmp test (bad) int3 cmpsb call lea call mov xor sub jo inc mov add iret mov mov (bad) incl xor addl add add rcl xchg imul jmp mov inc add add lea repz add cmpsl fwait push inc int mov mov dec (bad) xchg outsb test inc fmul mov add add add add add add add add inc inc fiaddl inc jne jne jle mov push pop stc bound adc adc cwtl jne mov cwtl jo mov movsl jl fwait aam push pop pop test jmp add repnz call cwtl add add sub push add (bad) (bad) (bad) incl add loope inc sbb cs test jb xchg int add call jne imul lea daa inc pop jo jmp lea push jecxz fidivl int sahf add add add fwait das add add (bad) xchg (bad) (bad) (bad) jb mov iret lret push cmp inc (bad) adc and mov int3 int3 int3 in enter add add add add mov push add es (bad) add or movb adc xchg push roll dec inc inc lea add jle push mov test push int3 leave orl (bad) push add call shlb jmp je inc push mov jecxz mov cs jmp jne lods mov cltd mov inc push (bad) cld je dec incl inc push inc add and push jb jmp mov cmc push adc (bad) fldt add (bad) (bad) (bad) (bad) pcmpeqw insb sarb jne call call jnp mov jg ja mov ret xor mov test sbb ds and das cli test dec call insb and or rolb es add add add call call rol add lret add push scas aad mov hlt xchg idivl (bad) fistl and jp mov icebp int3 inc and and add insl xlat stc insb lods mov inc add add pcmpgtd lret (bad) (bad) cmpps jne jne dec dec jne inc inc inc inc mov push pop cmpsl pop repz sbb adc mov add add dec mov mov add cli jp je xlat mov sub xchg inc dec gs imul add xchg sub add mov dec test mov jp outsl gs stc add lods add add mov dec add (bad) (bad) (bad) decl sub cli inc push push mov enter add add and inc pop sbb and and lea add add add pop mov jmp ret jg pop loope add add test test inc mov sub cmp add xchg enter mov imul jne jne pop sbb add add add call call (bad) rorl pop inc lds (bad) jnp mov add sub push push sub push push push mov (bad) fwait add dec xchg push push push add add pop add add adc cmp jne jne jne add xchg stos lock mov push (bad) adc sub add (bad) (bad) (bad) (bad) incl dec xor add scas ror out xchg lods sbb (bad) adc add (bad) out lock leave or in cld xadd or push cmp andl inc mov push mov mov test subl add inc add lock incl push (bad) pop and incl rclb (bad) mov decl push jmp push mov add cmp incl jge clc test (bad) cld cld data16 subl call rorl lret add call call push int3 int3 int3 int3 push (bad) sbb or mov mov stos cld mov pushf xchg inc or mov stos out and stos cltd jo push adc orb in mov push add add add mov push pop test add add aaa pop mov fldl sarb add add add add add rcrb push (bad) int loop into mov push (bad) mov ljmp xor jne add add add add add add out add add add jnp loope hlt jne repnz js mov ret xor add add add dec xchg outsl inc (bad) dec inc or mov (bad) insl hlt leave add add incb mov (bad) ljmp jmp test mov jno jae push pop rclb push (bad) icebp hlt ja pop loopne call lea add add add sarl lock loopne lea add test mov test (bad) (bad) ud0 (bad) (bad) lcall (bad) (bad) (bad) inc into pop rcl fs loop adc icebp jg into and push xor or test pop lea push push (bad) decl inc jns test fwait stos xchg lea (bad) (bad) (bad) (bad) (bad) incl add pop jmp add jle add int3 (bad) add add and fstpt loope dec in add add add addb add mov xor leave jns pop inc and cmp lcall cli iret jg jle jl cmp (bad) (bad) (bad) ud0 ljmp ja ja ja add add add add faddl sub mov cwtl or das insl push scas add add test add add loope cmp xor clc add jne pop jmp rorb add add adc imul lcall push push add add add leave push inc or add nop mov add inc add add dec jmp inc inc add data16 lock jge sub xor push add cmpl push call rorl add fs clc or (bad) cmp inc call les add add inc lods jae add add fprem1 test rolb mov add fs xchg out les ljmp in add test call call subb push sbb mov add (bad) mov in nop add add add adc add add add add add sbb ja out xchg je dec stc xor lahf fstps cmpsl pop jl (bad) (bad) jmp push call mov pop push jnp leave outsl icebp sbb xor add hlt add add or adc or push in push push ja push (bad) push in mov or jl adcl xor ja ja testb add cmp inc shlb pop xchg lds lds add add fisubs mov adc mov add add add adc add add add add add add add mov dec test mov ljmp out push sub dec add add shlb add add dec pop cli pop push push cltd push leave mov (bad) (bad) (bad) incl sbb cltd xlat add add stos nop (bad) (bad) (bad) nopl adc mov pop mov into int3 inc test or add addl loopne add add dec loopne jmp push pusha adc test inc outsl loopne or xlat or add and lods movsb and and call call pusha dec add das push add subb ret xchg mov mov add add mov push inc or push je push call call push callw mov incl stc push jg push je add cmp adc add jmp inc push inc add inc push inc inc xor add or mov dec add xchg sub add cmp sub add mov add or and je lea push mov inc push jb inc mov in ds and mov (bad) (bad) (bad) incl add add (bad) (bad) dec fwait (bad) pushl (bad) cli jne jne inc dec je (bad) out jmp cmp xor cmpsb mov inc inc inc inc decb (bad) pop nop mov and stos lock clc xor (bad) jle movsl add xchg enter fimuls add add add fisttpl mov add add add xor mov int3 or int3 fmull pusha rclw sub pop push add and insb bound and add dec mov pop jae xor push mov lcall addr16 push (bad) (bad) (bad) call add mov jne jne jne call out push adcl mov add add mov xchg xlat adc sub mov in and add ljmp dec dec ret add add addr16 add push sbb add add jns cs xchg sarb lds xor mov jp add add and mov or sub xorl lea add lahf out add add add mov add pop jle add add add in addr16 adc push jbe mov add add add push add add push ret cmpsl enter mov jge and and cmp insb out pop pop mov je ljmp push push int3 int3 int3 pusha inc xchg int3 int3 mov lar sldt add mov and xchg loope mov add xor add loope or in test incl push ud0 or inc add add inc inc call adc push incl add add add jne dec jne add inc incl or push lea jmp push pop mov (bad) rolb jbe pop add add shrb rol inc ja ja or add add add add clc add lods popf adc push test add addl clc fsubr call scas sahf inc clc and bound sub add or (bad) cmp push pop push lock or or jne push jne jne add add add addb aad insl jne roll or add add out (bad) push add add add add add and pop testl add mov leave loopne add add lea add add decl insb jg shlb mov pop mov (bad) (bad) (bad) ljmp jnp push push push push dec mov loope jnp int3 int3 int3 int3 dec xchg jnp fadds xor (bad) (bad) decl (bad) (bad) dec inc (bad) (bad) and and add pop jecxz add push push push idivb jbe sbb mov cmpsb inc fdivrs aas and and push (bad) and and add fsubs mov cmp xor add add add repnz and int3 int3 int3 or int3 (bad) (bad) (bad) (bad) (bad) jne jne fdivr inc or aas add iret cmp xchg popa int3 fnsave add add and mov add loope add jne push inc inc sbb clc add push push jne (bad) cmpl jmp inc or testb push mov (bad) mov lea aas data16 decl push add push adcl lea and or je add sti or mov addb rolb mov push inc add mov mov add push daa movsb pop xlat sbb xchg lock add sbb or int xchg adc pop addl (bad) or or mov cwtl mov sahf dec (bad) stc out xchg (bad) (bad) into outsl test cld (bad) adc xchg add add (bad) roll add add add add mov lea jle xchg ljmp add add add push sarl add add add and ret scas (bad) (bad) (bad) decl fiaddl mov add rorb loop add add test lods xchg jmp testl add xor idivl pushf and sub add add add push mov add add addl inc inc inc lret shll ds (bad) cmp lds jle xchg sub cmp mov sub push mov adc call mov scas (bad) (bad) (bad) call (bad) (bad) (bad) ljmp xlat incl add add ja ja movsl push mov add xchg cmpl emms ja (bad) (bad) (bad) incl add (bad) (bad) incl mov outsb push inc incl repz (bad) incl pusha sub es mov stos or adc add mov push mov adc push push cmp pop enter (bad) in dec and test push jmp iret out and add (bad) (bad) (bad) pushl jne xchg dec jo mov sub and add add aaa lea mov shll call rolb mov inc add adc mov adc add clc push (bad) out inc sub pushl add mov push mov mov add push push clc (bad) incl add push add mov xorl add inc ss mov jmp je add inc inc sbb sbb mov sbb (bad) pop insb aas enter jle orl add add add adc jecxz mov mov add add fstl fdivrl mov xor call add add mov mov mov rcrb add sbb mov sub cld mov cmp lea mov sahf jp int3 lret adc sbb add add push shlb jne call (bad) (bad) (bad) ljmp (bad) (bad) (bad) decl or xor inc xor nop jmp or fnstenv or add add add or mov push lods leave xor xchg xor mov and pop push mov add iret lret jne jne lea call fwait jge dec arpl cs cmp sbb and mov mov add add add add aad or mov ret daa pop gs add sub jne or add incl add add aam jb adc push (bad) jge std jns,pt pop inc fs add add mov add pop shl mov and fmull sahf arpl insl mov repz out repz cwtl add testl jne pcmpeqb lret add or jne ud0 xor add push add add adc inc add sub adc (bad) je adc insl push xlat mov push (bad) lock add test push add add add and hlt inc cli add sub jno ds xchg adc add pushf add add add lods test inc arpl and ret add add ljmp movsl (bad) xchg (bad) (bad) (bad) pushl inc push push jne jne jne shll sbb and fsub inc xorb dec push mov jne mov cmp add add add (bad) pop cmpsl test (bad) lds sarl add inc add hlt adc clc bnd stos call dec or call or int3 int3 int3 aam outsb xchg addb push dec dec or inc mov jge sbb and fucomip and add add mov sarl mov mov decl adc add add jne call jne mov pushl (bad) or lret add add add add out subb jne jmp jne jne mov int3 lods dec repz jne add add call js call call addl cwtl xor ret dec lahf inc sahf xor push xor inc roll sub (bad) push or lea and call adc cmp add sbb inc add imul inc pop cmp mov add add xchg leave roll inc push mov incl add jmp shrb add mov mov add outsl jo test or mov and insl cs and and mov cs mov (bad) (bad) (bad) incl add dec or add inc add and adc push stos cmp or add add add or idivb or add add or sbb (bad) pop (bad) fldenv add ret movsb dec pop xchg retw orl add add mov ds inc test xchg (bad) mov mov fildl mov roll add add (bad) (bad) (bad) incl add fildll xor (bad) push inc neg lds add add add add add mov add add add adc add add pop aam add add and xchg cli pop out pop jns add xor add add aaa movsl ljmp mov add fisttpll mov pop out in (bad) jne add push push push pfmul sub (bad) cmovb inc inc jne lds jne add jl call es das fs dec and or add pop sub (bad) cmc cltd sub adc jbe rolb mov add pop cmpsb cmp add add pop ljmp call mov adc adc add popf mov jmp jmp jne sub push add call xor inc (bad) cs test inc ltr push (bad) stc jle jne lds push add mov mov push adc cmp jge call cmp mov insl inc sbb jne mov mov add insl add add jne mov add add add lahf (bad) mov dec sbb lods lock add push push push jne mov ja ja (bad) push inc adc xor stos scas ret call pusha enter mov call outsl aas fmuls (bad) sub int3 int3 int3 mov cwtl sub jge xchg movsl mov or mov jnp xor adc add add pop add add add dec mov jae jnp stos add add add add leave mov push mov jg,pn add add dec cs cltd jmp ret xchg jle push test xchg (bad) (bad) (bad) incl fistpll sti mov les fsubl and lcall cmp shll add add jne jge jne call (bad) push pop (bad) (bad) incl add xchg xchg mov sub outsl xchg adc pop dec inc xchg xchg pushfw dec add (bad) mov xor (bad) (bad) (bad) call test or imul and call (bad) in (bad) (bad) (bad) dec pusha add add add add add add arpl fbld aad mov jp sub lds addl push test je adcb loop cltd push repz sahf repz add sub repz sbb jns add add rcrb rol rolb outsb add add dec mov aam sti pushf xor jle push fstpt jb (bad) (bad) (bad) (bad) mov call mov pop imul mov add mov inc inc add add inc add call inc (bad) (bad) (bad) pushl popf jecxz sub sar add mov add push (bad) jne add push cmp add and ljmp inc data16 mov ud0 mov add adcb adc push (bad) decl rolb add add push push jmp dec jo stos jmp into add xchg jne jne push insb push push jns les inc bound lock aaa mov call inc movsl daa adc mov hlt iret call add add mov into add (bad) (bad) (bad) (bad) punpckhdq leave push push add in (bad) std stos neg aaa (bad) lret inc push popf (bad) sbb pop iret add add add andps cbtw xor inc notb jo jno (bad) (bad) (bad) paddd mov mov stc or add add add add mov sbbl mov mov lahf test mov add add add out xchg add add jne xor adc lahf sub and add push mov es imul add push mov push cmpl sub mov dec imul ja inc fcomip inc (bad) (bad) (bad) (bad) adc loope outsl mov cli loope or sahf int scas int add mov add leave pop add add mov push push push push test fistpll dec cmp and rcrb pop das test add add add or mov addl xor cmp inc mov mov clc or push xor xor jmp adc push cmp cmp and imul addl dec push add and (bad) jne add cmp ret xor test rorl ljmp lcall or mov add add and or mov (bad) jl add add add add add xchg add add jne mov jne jne mov or push xchg nop mov sbb ret ja mov add add jne iret xor fwait out lcall jne jne xor jp call add add adc lea add sarl out test jnp xor mov out mov (bad) (bad) incl add add add add jne data16 aam push push mov add mov and add add cwtl add add lea lea test dec jmp rolb cwtl xor mov adc add add (bad) add add add lea shlb movl lea add add mov mov xchg cmpsl cmpsl ja ja add pop mov mov inc fnstcw adc mov add add add add add lcall sbb sub adc cmc ret jge and test jne jne addl call call call mov mov or jb xor cmp insb bound sti sub test test test stos iret mov movsb sahf pusha jns xchg popf or ja iret mov inc add pop push gs adc inc roll add add rolb or add mov call jne stc adc nop and lcall add add ret add or jne add sarb incl or or leave push mov iret mov mov jne jne int3 stos and fadds jae pushf stos pop rorb jne add add add aam add add add mov loop aaa fdivl add pslld xchg cltd (bad) push mov (bad) insl push mov push jmp push push pop cmc rolb (bad) dec hlt xor mov mov add add inc add add add and and lods lds fistpll js out fcmovne add add add add jmp stc pushf imul add add inc adc inc inc add fisubl (bad) paddsb dec in shlb cmpsl adc lahf lock add add dec movl push jns add and dec filds add add jge and or push or (bad) sldt add jl add mov mov mov das jle lcall lods adc lret xor mov and add out xor inc sti clc add add add dec lret add add inc mov pushl jne jne add scas adc lea iret jne cmp fidivrs add add add addl add adc mov faddl or call idiv inc push inc out push pushl pushl rorb push add xor pop inc out js call cmc (bad) pop das sub xlat pop xchg mov lock (bad) (bad) out xor out out out out lock inc (bad) in jb (bad) jmp adcb test les cmpsl test xchg loopne loopne loopne add add in mov xchg stos cltd test add jmp jmp sti sti xlat xor sti sti sti loop loop push loop loope sbb loope loope icebp bndstx mov cwtl ja nop (bad) icebp icebp add push inc or jne (bad) incl jne xchg add xor test sti add pushl push decl cmp or or xor call pushl add roll psubsb dec inc incl lcall jl les inc inc dec pop add push xchg or mov or jb add add xor jmp and pushl add fmuls jmp bound je (bad) pcmpgtd mov jmp sub or movb shr call xor (bad) mov or pop and push push add cmp incl mov lcall mov add inc inc add movl or call psubsw data16 call add cld mov cld sti add or test add add pop mov add inc jge push jne in test call push or jge add add or mov push pop mov ljmp add incl add call inc (bad) ljmp enter add test push add je push push call push add adc add pop bswap add call (bad) in test inc mov leave push xorb jne (bad) add push push cmp sti mov out dec add jae adc call cld inc jmp (bad) pushl subb clc call adcb lret add cmp lds call cltd mov push xchg or add add (bad) inc (bad) incl push sub invd dec stc lcall incl adcb clc incl or push add add push lods jmp inc ror pop hlt add add adc push mov aam inc add inc add ret jge out jne fimull push call or clc push inc rorb push mov decl add inc sub push pop add add rolb adc or incl in inc add call mov add (bad) jmp cmovne adc adc test cmp ljmp jne adc sub pushf clc mov add jne and jae (bad) inc incl cmp inc inc shll cmp incl push sub pop add jno dec les decl inc dec clc mov add add add incl minps sbb inc lods push mov mov push add jmp in xor or add add inc add add (bad) clc jmp add xor sub xor (bad) jl inc cvttps2pi xchg inc or jmp pop inc call inc call sbb lock add xor add mov dec add add pop addr16 faddl call inc dec add inc push js mov inc incl add movsb (bad) decl jne psubsb push clc adc jmp or or add in push incl je push mov pop add incl je (bad) out inc add incl incl divl push dec cwtl or cmp (bad) (bad) mov add jnp xor inc mov add inc mov inc add adc test clc xor (bad) (bad) incl add push sub push data16 push pop inc add push stos add inc add push lock clc rolb je jmp adc rol xor push mov sub sbb (bad) stc cmp cmp push inc push incl add add inc pop add add add add or (bad) inc inc orl mov decl idiv sbbl push push push insb add (bad) stc or decl inc shrb inc push add call mov (bad) clc in inc adc add add call (bad) incl jno js aaa stc add mov dec adc push orb inc inc add add add fadds jne out push mov add (bad) or addb dec adc push mov (bad) incl push incl inc jge sarb add add add jno add push lock inc add add int3 lsl test add inc add test insb cmp or inc add add jne mov mov xor adc add call add push push push push adc push add jge add adc inc rclb push dec push xor jmp in xor ret data16 iret add mov add push inc add inc adc push call jb data16 cwtl in decl xor inc cmp inc add add xor add add je bswap in add hlt movsl lock add add inc add mov or shlb push push add add mov je xor inc or cli inc add or je insl xor incl lea or and and call jne jl or stos and push test jmp adc adc sub addb mov add or push call je lea outsb jmp add incl mov sub inc inc jo mov inc out jb add mulb add pop or jmp pop add sbb xor in dec out orl (bad) cmp call and cld or call adc push dec add or jge xor mov xor add jge inc push in inc cld mov decl inc or add rolb add mov lcall push cmp pop and incl add add push add push add inc pushl xor add in add add add inc mov push add in mov add or pop (bad) in push inc je add jge test add push push mov inc inc add (bad) push call inc (bad) jmp add andb add jo cmp sub lcall jne sti add jp mov pop (bad) faddl clc inc (bad) cmp cmpb sub dec inc add addl add jne je sbb dec add add add add clc add mov and addl call add add inc subl push mov jge cmp je neg inc test call into sub data16 pop ret lods (bad) push push fs sbb inc subb push xor add add pop jns push push xor add mov andb push inc add call dec lcall call add add incl or dec decl push add adc pop or js clc pop and push inc lcall inc call add cld xor add (bad) xor (bad) incl add jne push add push inc incl inc enter pop mov incl clc add jne inc ret inc jmp test add ljmp sub orb adcb incl add add mov push push adc pop ret stc and clc inc xor add inc pop in inc add push mov push xor add call inc cmpsb jne sti push call mov add ja rol add push jo cld add mov xor mov call add decl incl push pop mov addb add inc in je ss add push rorb pop inc add incl rolb add inc jb push or add add add push incl or inc orl adcl pusha jne (bad) jge add xor push incl cmp out jne add jne dec jb add mov (bad) jmp (bad) incl inc data16 jge inc add add pushl jmp dec add push pop jb add add add push and jo jmp or jmp push hlt inc adc jge rcll cmp dec push xor jmp push add push (bad) decl cmp add inc test add jnp les rcrl cmp call add lods add inc add xor inc push dec jb adc add insb mov push add add out cmp push add inc rolb push adc add mov incl add pop add push or mov push add call leave roll mov or add pop add add mov adc inc add psubq add fildl rol incl cmp add add je call xor jne add std add decl jne mov inc test push mov add inc dec jno jne sar add add add add jge je addl add imul in mov xor lcall or sbb jl push dec inc popf nop push pushl jne add xchg inc add xor add add out push pushl inc inc add jne xor push add (bad) add adc les add mov add xchg hlt xor jne push push add add adc in jl (bad) cmp xor orl orl push add out add aaa sbb adcb hlt (bad) or push addl cmp mov or xchg sub pop add xchg aam jg add add inc call push clc inc loopne add incl add add jge roll je ret add or mov inc add jne add add dec add mov add xorl mov mov push xor add sub addl adc (bad) push add add or add add inc push call es decl xor inc add add dec lea sbb add les mov fsubl mov add sti inc call push ret je je cmp inc call inc jo mov push pop fsubrl push push add adc je call mov mov push jne push inc mov cld add clc add notb add incl mov add inc adc jmp mov call incl cmp inc jne orl add shlb mov dec push inc push pop add incl clc ret or test adc incl les adc sbb (bad) ljmp add push push or xor add add push add cld mov add in inc and shrb rol je push addl push loopne mov push test add inc add mov dec incl test incl mov xor inc add pcmpeqw mov decl inc loop mov cmp inc mov fadds jne ljmp incl jg decb add in add stos test inc lcall cmp add push (bad) (bad) (bad) inc inc mov inc lock push mov dec add push push inc lea xor inc fcoml inc repz (bad) call push push or add add add add add dec mov cmp shl add push add data16 inc add inc ret mov push add orl add cmp push push adc add sub incl jne incl jmp test loopne add loopne cmp push loop je in jg in push xor push incl push jbe or decl subw or incl sub repz inc loopne jmp (bad) inc call mov ss call jecxz adcl jge call in call add cmp push in or adc xorl addl pusha push push lock cmp ret add test mov mov (bad) (bad) cmp pop incl scas inc jne addb cmp push add (bad) cld add subl add adc add push (bad) incl add jmp jmp in fisttpl inc adc movsb push add push (bad) jns call test test cld inc push or test pop sti inc data16 cmp mov jne push je clc add inc (bad) jge push mov add and lea mov jmp incl lea and mov or je add push je test inc add data16 add push add push cmp add call xor inc clc add lock cmp add inc call mov add adc add sbb inc add push pop outsl cmp cvtdq2ps pushl mov add push sbb in push mov call mov and inc call adc and lret je,pn movsb add call scas pushl addb inc lret cmp testl fdivr add jne in inc jne xlat je inc add call ja add xor add jb add cli test add sbb mov lldt push mov add hlt mov inc add cld mov add (bad) jl push test inc add pop cmp incl add rolb jmp (bad) cmp and xchg call dec add add addb add add mov inc addl testb addl xlat jmp push fildl pop clc xor add xorb mov (bad) cmp pushl call add mov push lea mov add or add push jne add add jne push incl (bad) adc push adc (bad) incl (bad) call lea add inc push add mov testb inc add add std add call push mov push sub je cmp (bad) jmp inc lea lret adc repnz mov testl adc rcll rolb add dec and ljmp mov mov inc ljmp addl add or inc les adc pushl pop add mov call adc adc inc incl sub mov inc data16 push insb adc hlt inc add clc push mov (bad) or addr16 jno mov sub add adc or aam push push add pop subl adc (bad) cmp adcl add mov cld jge inc push add xchg add call rorb mov inc push (bad) call cmp mov jb int3 jge mov lods pop cmp cwtl mov add lret (bad) mov loopne mov inc add jmp inc jmp mov pop mov add push incl incl call add add mov or inc in movmskps or add adc jmp addl cld add pushl inc add sti cmp lea add mov por jmp mov ret addb clc mov and pop or jo inc add (bad) cmp mov in jmp inc sub add rolb unpckhps addl dec push jo or adc or jne inc cmp mov mov add add adc add jl hlt push xchg inc add clc fadds iret add subl decl add sldt add call decl add add inc inc iret jmp add inc adcl add or adc push testb cmp adc pop add (bad) jmp push jne inc add sbb sbb jb add sub inc mov inc add cmp sti incl mov adc mov pop fadd ret add or push xor pop addb push add jne addb and (bad) (bad) fdivl xor add cmp jne inc lret push adc incl imul leave mov add push pop pop dec adc notb loopne add add jne inc pushl andl add call push inc inc jne (bad) call lahf test add sar movsb test add adc movl add or jmp pop lock inc push popa into add test rclb lret (bad) call jne jne test xorb js add push incl add push inc idiv subl xchg dec add cld add push jge jmp mov call add inc push push mov inc or inc clc add inc in rolb add adc lock mov xlat cmp mov cmpb addl addb add xor xchg and sub dec mov push (bad) leave pop mov ret pop inc push add add add incw lea or clc cmp or movl push push sub adc push jae inc mov incl or testw mov add adc add enter pop or sar call clc inc inc push add inc add add push add decl dec mov jge add (bad) jmp addl and (bad) dec inc dec (bad) inc loopne test jge or (bad) int3 jb addl test cmp (bad) incl add pushl add inc hlt mov add shll adc or push push dec and incl pop fsubr decl add incl push call add add pop (bad) (bad) in incl leave sub test data16 inc subb or add add rclb int3 inc dec sldt lret call call pusha inc ljmp lea ret jne call add or aam add xor jne rcl inc clc jge add add xor rorb punpckhbw addl mov add add jmp decl data16 sbb in add adc movl or inc xchg sar push add jmp lock incl push push mov loop roll lock add lock add je les inc data16 mov ret adc adc stc add jmp inc inc (bad) hlt lea inc push (bad) call push add incl jae inc mov add push or add mov jmp addb add jmp or add inc fwait adc call sbb xchg add call add or incl cwtl cmp add je jg add sbb jne mov push test lds push incl pop incl add cmp cld sub push lcall (bad) cldemote icebp push inc add add pushl adc add adc xlat mov incl adc dec insb add test inc xchg mov inc addr16 push rolb add mov add sti mov add inc inc add or dec inc ud0 jge sub cmp add push (bad) cmp inc xorl inc push add xor mul add inc push dec jo aas push jecxz add (bad) jl nop add xor mov je cld ret dec inc add push add add push add rolb call js mov je (bad) incl decl add or add inc mov jne add fdivs jge add inc and adc lock adc push add add mov xchg adc add push inc push add or call add mov xor lcall orl add inc jo call shr cs add cmp call mov xor jne pushl andl adcb push adc push mov pop xor mov mov push inc add add (bad) jmp call or mov ret into call push or mov add add add add lock add movl add hlt mov push sub sub add insb add and add push add inc inc cmp xor inc jne cmp pop (bad) pushl add lods inc ret xor add addb lock decl adc addl (bad) je call add add cmp pop mov incl call add inc xor add inc add add xor (bad) fildl lea call add inc mov push andl decl add in incl add add mov adc inc sbb movb test xchg pop addl rolb inc call or shl pushl inc (bad) decl xor pop fs adcl inc jmp add lcall push call lea push mov push push movb inc inc push add inc loopne lcall add leave cmp loopne push add push sbb test les sbb xor add adc clc add sar and decl push call (bad) clc push push add inc inc decl inc cld jge dec lods inc inc andb push jns inc add or clc inc movsb decl adc data16 les adcw mov add cs inc add insb popa add clc inc add inc jo add push or xchg sbb jl add sbb shr push (bad) incl push clc mov push jmp mov call mov das add sbbl orl jne inc shll push inc adc (bad) inc (bad) test add add cmp mov jge test xorl jge mov lock clc add add ss incl ljmp push test add xchg add wrmsr call jo add jg push call jne add cmp inc cld jns add cmp xor inc cmp mov add (bad) rcrl mov je add add push enter pushl or cmp add stc inc xor push add addb or add inc inc add push add add cmp add jne ret add decl cmp subl add push add cmp sub adc push sub je add rclb or add add pop call decl adc divb inc subl int3 mov inc inc inc push add add cmp (bad) sub add push cmp (bad) call decl add push or inc dec sub mov dec push add dec sbb into adcl add or add jmp cmp jmp mov jge mov push add pop test inc jne lea push inc jmp add xor call (bad) and subl insb out jg decl or call add test inc push inc iret push xor add add pop in sahf les xor xor clc cmp push add inc lret psubsw mov (bad) decl test add add (bad) cmp in xchg orb adc je add inc add call jmp push sub push add lock faddl jne pop cmovns add or jmp add or dec sbb roll addb inc add adc push loopne xor xor cli sub cmp inc push cmp add mov add mov cmc or inc sbb test inc call sub inc call add orl jne push daa add jb add (bad) lea fs or dec push push hlt adc inc sub dec mov add insb add sub or je test or call or mov (bad) mov pop add add (bad) adc add xor loop add pop add dec add add push decl (bad) cmp incl insb (bad) jg or mov push push inc push lock adcb pop add adc or add incl clc incl add add test inc call add or inc add jmp add push add mov test ljmp rorl push jae jne lcall call mov or inc add inc or (bad) jmp xor in add adc cld mov add xor mov lret add sbb sub incl dec inc decl add pcmpgtw jmp push jmp data16 xor addl cmp xor mov add jmp jne push push or jmp clc mull shlb shlb leave stc (bad) call call adc adcb push je cmp jge cmpl add or shlb dec roll add addb or add push add add incw xchg inc addw decl call inc add mov and loopne sti add add push mov push xor add xor push addl xor cld incl add rolb adc add fs rolb pop sarl subl and pop (bad) call pop push in cmp adc cmp add add add push ja add movl incl test jge push inc add dec lods paddb or add orb jmp push lea clc int3 inc push ret test jne orb lock inc inc inc add incl je fcmovne inc incl mov out (bad) jmp inc jb jmp pcmpeqb movl cs cmp add mov clc jmp dec jne inc add xor or add xor xorl incl sbb and gs add add aaa push rorb xchg ljmp add test add cmp jne push or push jne adc je sub je jge mov call mov push lea (bad) (bad) mov add add add sbb ds mov add mov add in dec ret adc test in xchg pop jg sbb inc test xorb inc adc or mov pusha ud0 mov fsubl mov je add mov add sar add push add lock dec call pop jne call xor test push pop cmp jb and add inc or mov pusha jne add push in pushl jmp add add roll call add add call inc add (bad) push add add dec jmp add add add test clc or lock jge push (bad) decl incl mov test mov inc test (bad) lock (bad) sbb push mov sbb add clc add call cmp ljmp inc cmp clc je call add dec push and or add mov jae (bad) ds (bad) (bad) mov inc add add add lock jne mov push adc orl push je add push pop call push or add add add ljmp push add testl adc jge xchg sbb lods cmp decl add inc std lods sbb clc in dec sub push inc adc push add dec mov test push adc push add add xor (bad) clc jne stc sarb add decl jo rolb incl push jns xchg mov add test incl roll leave ljmp or add ljmp sbbb or jge inc inc pop cmp add add inc mov add inc add adc incl add inc add test test or push dec decl in lea add sub decl inc inc mov and and pop jecxz jmp and push add or shr inc push add inc pop inc mov sub data16 inc call call es push cmp mov jge and incl add xchg cmp add inc decl lock mov push lock jmp or xor (bad) lock add test jmp or add jmp inc or or sbb add and lods clc insb add push inc add xor idiv add push pop and inc inc add incl incl les mov lret data16 add cmp push testb mov call add mov add add mov subl or add cld add add je (bad) jmp addb ret push mov push push push lea push mov call mov movzwl movzwl sub mov mov imul sub cmp jbe add sub mov push lea call sub lea sub mov push mov call mov pushl lea push call mov cmpl pop jle push push call pop pop call mov call mov add call mov add call xor leave ret push mov call mov push mov call andl test je test jne movzwl push push call jmp push mov call mov call ret push mov mov test jne push call mov call add mov mov pop ret push mov mov xor sub inc sub mov sub or jge pushl mov call mov pop ret push mov test push mov jne xor jmp push call pop push push mov call pop pop ret push mov test push mov jne xor jmp push call pop push push mov call pop pop ret push mov cmpl push mov jne call jmp push mov test jne push call mov push pushl mov sub call cmp pop pushl ja lea push pushl push call jmp pushl pushl push call add pushl mov call pop pop pop ret mov mov sub push mov cmp jle mov cmpl jle push call jmp mov cmp jge mov cmp jle add jmp add cmp jge mov push call pop ret call xor push push push push pushl pushl push push call ret xor push push pushl pushl pushl pushl push call push call ret push push push push xor mov push mov call xor inc jmp test jne mov shr inc push movzwl push push push call test je pushl push push call mov add test jne push mov call inc mov test jne xor test jne xor jmp pushl push pushl call pop pop pop pop ret push mov push push push mov mov mov push mov sub mov add push mov call cmp ja add jmp mov pushl add push pushl push call add pushl mov call pop pop pop leave ret push mov mov lea xor cmp push mov je cmp jge cmp jge push call mov mov mov jmp call mov mov call add mov pop pop ret push call int3 push mov push push push push mov mov sub mov mov mov push mov call mov push pushl mov call mov test jne call mov cmp jge mov inc push lea push push lea push call mov add mov mov call mov pop pop mov pop leave ret mov push mov mov sub cmp mov jge test jle push mov push push push call test pop jne call add mov pop ret mov test jl mov cmp jg mov mov movb ret push call int3 push pushl pushl call mov test pop pop je movzwl push push push lea push call pop pop mov mov push call movzwl push push push push call mov add push call xor pop inc pop pop ret push mov push pushl lea pushl push call add test jge push call mov leave ret jmp mov mov mov ret push push mov jmp mov test je push call test pop je push call mov test pop je pop mov pop ret jmp cmpl jle mov push call ret mov jmp push mov sub mov xor mov mov lea push push lea push call test je pushl lea pushl push call jmp cmpl jne movl pushl pushl pushl call mov xor call leave ret mov ret mov ret mov ret push mov push lea push pushl movl call neg sbb neg mov pop ret push mov push push lea push movl call int3 push mov push push lea push movl call int3 push mov call push call mov mov xor cmp mov je call call ret pushl pushl pushl pushl call push call add ret pushl call pop ret mov movl ret mov mov mov ret push push push mov xor cmp mov je cmp je mov cmp je mov cmp jne call cmp je push lea push pushl push call add jmp mov mov jmp xor pop pop pop ret testb push mov movl je push call pop mov pop ret testb push mov movl je push call pop mov pop ret testb push mov movl je push call pop mov pop ret mov ret pushl pushl pushl pushl call push call add ret push mov call andl movl mov pop ret push mov call push call pop mov mov xor cmp mov je call mov orl mov mov push lea push call int3 push mov mov push xor cmp je mov push push lea push push pushl push push call test jne mov mov xor jmp push pushl pushl pushl call add pushl call xor inc pop pop ret testb push mov movl je push call pop mov pop ret mov sub jmp push mov push push pushl mov pushl call mov test pop pop je movzwl push push push lea push call pop pop mov mov push call movzwl push push push push call mov add push call xor pop inc pop pop leave ret push push push mov mov mov lea push call mov mov push mov call pop pop pop ret push pushl mov call test je pushl mov push call pop ret mov xor test je test jne movzwl push call mov ret push mov call mov mov call push mov call pushl andl mov call test jne pushl mov call mov call ret push call push mov call pushl lea call push call pop ret call mov ret push push call xor mov lea push call pushl call mov mov cmp jne xor jmp mov pushl pushl pushl pushl call mov movl call mov call ret xor cmpl je xor cmp sete mov cmp je call mov jmp xor pushl push call cmp je push call ret call test je mov mov jmp xor ret push call mov test je mov mov call test je lea cmpl je mov pushl mov mov call pop ret push mov push mov test push push mov jne call test jne call test jne xor jmp mov jmp push push call test je push call mov test jne test mov mov je push mov call test jne test jne test je push call mov mov test je test je push call test je cmp je push push mov call jmp andl pop mov pop pop pop ret push lea sub mov xor mov mov push push push mov xor push mov call pop lea push push call mov cmp mov je push push call and lea push push call test je call cmp jne push push push push call test je mov jmp test je lea andl test je mov mov mov test je add mov testb jne mov and cmp jbe add cmp ja orl jmp orl test movb je mov jmp lea mov push mov push push call cmp jne movb pushl push pushl pushl call add test mov je mov mov cmpl je push pushl call push call pop mov mov pop pop xor pop call add leave ret push mov call mov test je mov mov pop jmp pushl pushl pushl push call add pop ret push mov call push mov call mov pop ret push mov call call push lea call pushl andl lea call mov cmp jne mov mov push pushl push call lea mov call mov call ret push push mov xor cmp push je mov cmp je call mov pushl push call cmp pop pop jne mov xor pop pop pop ret movzwl push push dec push push push add push push push call mov jmp call int3 call mov ret mov cmp push mov jne mov test je push call pop push mov call pop ret pushl push call test jne call ret cmpl je jmp ret ret push push mov push lea push call mov test jle cmp jge pushl call test je cmp jge mov mov push call mov jmp push call xor pop pop pop ret push mov call mov mov test jne push call mov andl test jne call mov orl push call mov call ret push call push push call int3 push mov push mov test je mov mov mov mov mov test je mov mov push call leave ret cmpl jne call mov add ret push push mov push mov call mov mov mov pop pop ret push push push push mov lea push push mov call mov mov cmp jge mov testb je xor inc cmp jle mov add testb je inc add cmp jl cmp jl lea mov test jne push push call pop pop push push call jmp push call mov push call push push push call pop pop push push call test jne mov test je push call push call pushl call jmp push call mov mov mov sub shl push lea push push call add mov mov cmp jl lea mov mov pushl lea orl lea mov call mov pop pop pop pop pop ret xor push mov mov movl mov movl mov mov call cmp mov jne jmp lea push call mov pop ret push mov push push mov lea push push mov call mov test jle cmp jge push mov jmp cmp jge mov mov test je mov push call mov andl mov test jne mov pushl lea andl call pop pop pop leave ret push mov call mov mov lea push mov call mov xor cmp jle cmp jge pushl call mov cmp je mov cmp jl cmp je cmp jne push pushl call pop pop push push call jmp push mov call cmp je movl mov jmp xor orl push lea mov mov call jmp mov add push call xor push push call push push pushl call pop pop push pushl call cmp jne pushl call call mov mov mov sub shl push lea push push call mov add push mov pushl call mov mov cmp je cmp jge mov mov pushl jmp push call call ret testb push mov je push call mov pop ret push mov call mov xor cmp setne test jne call cmpl jne mov test jne mov mov andl call orl test mov mov je call test mov je pushl mov call mov test jne call mov mov push pushl call mov call ret push mov mov test je mov test je push call andl pop ret jmp mov test je jmp ret mov test je jmp xor ret mov test je jmp xor ret cmpl jne call cmpl je pushl pushl call neg sbb neg jmp push pop ret push mov mov mov push call lea cmpl jl cmp jne xor mov inc lock jmp mov push pushl mov call mov test jne jmp mov mov mov inc push add push push lea push call add mov pop pop ret mov xor xor movl mov mov mov mov ret push mov mov test push mov movl je push call mov test je push call mov test je push call pop pop pop ret push mov mov test push movl je mov call pushl call xor pop mov inc test je mov push call mov test je mov push call mov test je mov push call mov test je mov push call mov test je mov push call mov test je jmp mov call push call mov pop cmpl jne mov test je mov push call mov test je mov push call mov test je mov push call pop pop ret mov mov push sub push mov call add mov pop mov pop ret push mov call testb je push call mov pop ret mov xor movl mov mov orl orl mov movl movl ret push mov call testb je push call mov pop ret push call test je mov jmp xor ret push mov call test jne jmp ret push mov call mov mov movl mov xor inc test mov je mov push call mov test je mov lea push call mov test je mov push call mov mov test je mov push call mov mov test je mov push call pushl call lea mov test pop je cmp je push call orl lea movb call mov sub call call ret push call test jne jmp ret push pushl mov lea movl call andl movb mov pop ret push mov cmpb movl je pushl call mov sub pop jmp push mov call testb je push call mov pop ret push mov call mov push lea call lea xor push mov mov call mov add call movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call ret push mov call mov push lea call lea xor push mov mov call mov add call movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call ret push mov call testb je push call mov pop ret push mov call mov mov movl xor mov mov lea mov mov mov call mov mov orl mov mov mov mov mov push mov movl movl mov mov movb call xor inc mov jmp mov test je call movl mov ret mov xor xor inc push mov movl call mov movl call mov mov cmp movb je call jmp xor mov push mov mov call mov mov cmp movb je call jmp xor mov mov mov mov mov call ret push push mov call movl mov pop ret push mov call push call mov mov xor cmp mov je call call ret push mov call test jne jmp mov test jne push mov call test je ret call mov add call test jne jmp ret push mov call cmpl je mov mov cmp je push push call mov jmp andl mov pop ret push push mov mov mov push call test jne mov push mov call mov mov cmp jne mov cmp jne mov cmp jne mov cmp jne mov xor jmp mov add cmp jne add cmp jne mov cmp jne jmp mov jmp mov cmp jne mov cmp jne mov cmp jne mov cmp jne mov add cmpl jne add mov test jne mov test jne xor pop pop pop ret push mov push push mov push push mov call mov mov jmp add cmpl jne lea jmp mov mov mov test je mov andl lea push pushl push call test jne mov test jne add cmpl jne mov test jne xor pop pop leave ret push pushl pushl call add neg sbb inc ret cmpl je pushl push call ret cmpl je mov mov push call ret add push call ret push mov call mov lea cmpl jne xor jmp push call mov test jne pushl lea call mov and mov call orl cmp je pushl push call mov call ret cmpl je mov mov push call ret jmp push push pushl mov call test mov mov mov je call xor jmp pushl call mov neg sbb and add pop pop ret cmpl je pushl mov pushl mov push call ret jmp push push mov push mov call push mov call push mov call push mov call push mov call mov push mov call push mov call pop mov pop ret push push push mov push mov call push mov call push mov call inc push mov call inc push mov call mov mov push push call push push mov call push push mov call pop pop pop ret push push push mov call shr mov mov call xor mov mov call mov push push call push push mov call push mov pop mov mov pop mov mov mov pop pop ret push mov cmpl push push mov jne push call pushl pushl call pop pop mov push mov call pushl lea pushl push push call add push mov call pop pop pop ret mov lea push pushl call ret push sub lea mov xor mov push mov call mov andl add push call mov mov pop pop pop pop mov xor call add leave ret call push lea call mov mov xor push push lea push mov movb call test je lea push push push push lea push push call add jmp push push push lea push push call add push push mov push call lea movb call mov push mov call mov ret mov ret push mov test push mov jge xor jmp lea imul add push call test pop je andl mov movl mov pop pop ret pushl call pop ret push mov test jge xor jmp lea imul add push pushl call test pop pop je mov pop ret mov movl xor movl mov mov mov mov mov ret xor lea inc lock lea ret cmpl jne push movl call mov ret push mov cmp jb call cmpl jne call push mov push push lea cmpl mov jne push call cmpl jne mov imul add push call incl push call imul add push call pop pop pop pop ret mov cmp jb call imul add push call ret call mov ret mov mov cmp jne or jmp cmp jne push pushl call xor ret call mov test je mov jmp jmp push push mov test mov jne push pop mov test je push call andl pop cmpl je xor push pop mov mul seto neg or push call mov shl push push push mov call add mov pop pop ret push mov mov test je push call andl pop mov andl andl call andl pop ret mov mov mov decl mov jne call ret mov push mov mov shr mov xor divl mov mov mov test je mov jmp cmp je mov test jne xor pop ret test jne call push mov test jne xor jmp push mov mov xor shr divl mov jmp cmp je mov test jne xor pop pop ret mov jmp push mov test jne xor jmp push mov mov shr xor divl lea mov jmp cmp je mov mov test jne pop pop ret mov push mov call xor inc jmp mov push mov test je cmp push jne mov xor test jbe mov mov test jne inc add cmp jb call mov test jne mov shr xor push mov div inc cmp jae mov lea mov test jne inc add cmp jb pop mov mov mov mov mov mov mov mov pop pop ret mov ret mov mov xor cmp movl jg push pop mov movl mov mov mov mov ret movl jmp push mov cmpl jne push pushl lea push call mov mov imul add dec lea js mov mov mov dec sub test jge mov mov incl mov andl andl pop ret push mov push push push mov lea push lea push push mov call test jne cmp jne push pushl mov call mov call mov mov mov shl mov mov mov mov pop add pop leave ret push mov movl call testb je push call pop mov pop ret push mov mov push xor mov mov mov mov call mov pop pop ret mov test jne call mov mov decl mov jne call ret test jne jmp mov test je mov test push mov mov je andl jmp andl push call mov pop ret push mov sub mov xor mov push mov test push mov push jne call test je push call push mov lea push push movb call mov add cmp ja push lea push push call cmp jne push lea push call test je push push call mov pop pop xor pop call leave ret push mov test jne call mov test je push call andl pop ret push mov test je push push call mov and je push dec call test jne push call pop pop ret push call mov test je mov test je push call pop mov lea cmp ja pushl call andl jmp sub sub push pushl call pop pop xor inc pop ret jmp push pushl push pushl push push call dec dec ret push mov sub push push lea push pushl call mov push pushl jmp push call test je push push call test je lea push push call pushl lea pushl push call test jne push push call mov test jne pop pop leave ret mov jmp xor cmp setne ret pushl pushl pushl pushl call push call add ret push mov push push push mov test push mov jne xor jmp cmpl je testb jne pushl push call mov push mov sub cmp jae mov push push push pushl call add add add sub je xor mov divl mov sub andl mov pushl mov pushl mov call add add sub test jbe cmpl ja sub je cmp jne xor cmp jne cmp jne mov cmp mov jbe mov mov mov pushl mov pushl mov call add sub add test jbe cmpl jbe cmp jb mov lea mov jmp mov mov lea push lea push pushl push call mov mov sub cmp mov jae mov push push push pushl call add add sub mov sub pop pop pop leave ret push mov testb mov push je mov cmp je mov mov sub cltd push push push call mov jmp push xor cmp lea mov jne cmp je mov mov sub push push call jmp cmp je mov push mov push push sub push push call pop mov mov lea push push pushl push call mov pop pop mov pop ret push mov push push push push mov testb push jne pushl push call mov mov lea mov mov sub add cmpl mov jne mov cmp jbe test jle push push sub push push call mov lea add mov mov cmpl mov mov jne mov sub mov add pushl mov mov push call add sub add test jbe cmpl jbe mov cmp jb mov mov mov add mov jmp test je mov mov neg cltd push push push mov call mov mov push lea push pushl push call mov mov mov sub pop cmp pop pop jae push push jmp leave ret push mov mov not test jne pushl push call mov inc inc cmp jbe call mov mov mov addl mov pop ret push mov mov not test jne pushl push call mov add cmp jbe call mov mov mov addl mov pop ret push mov testb jne pushl push call mov mov lea cmp jbe sub inc inc push mov call mov mov mov mov addl mov pop ret push mov testb jne pushl push call mov mov lea cmp jbe sub add push mov call mov mov mov mov addl mov pop ret push mov push mov test push mov je cmpl je mov not test jne pushl push call mov mov sub cmp push mov jb mov push pushl push push call add add add sub je mov call xor mov divl mov mov mov sub push pushl call add sub cmpl je mov mov lea push lea push pushl push call mov mov cmp jb call mov cmp jne push pushl push push call add add pop pop pop pop ret push push mov mov cmp mov jae push call jmp push call push mov call pop pop ret push mov push push lea push mov call cmpw je movzwl jmp lea push mov call mov pop leave ret pushl pushl call cmp je push push call ret mov ret push mov call mov cmpl je mov test je mov add mov andl call push lea call lea push lea movb call mov cmpl movb jne push lea call mov mov push add push lea push call push pushl pushl pushl call add lea call mov add call xor inc jmp mov ret xor call ret push mov call mov mov call lea mov movl call mov pushl andl mov mov call mov call ret push mov mov sub movl call testb je push call pop mov pop ret push mov call push call pop mov mov xor cmp mov je pushl pushl call orl mov push lea push call int3 push mov mov test jne call mov push xor inc test je mov mov mov mov jmp mov add cmp push ja jmp call jmp call jmp pushl call jmp pushl jmp mov test je pushl pushl call jmp mov test je pushl pushl call jmp mov test je pushl pushl pushl call jmp mov test je pushl pushl pushl call jmp mov test je push call xor cmp sete andl jmp mov test je pushl push call jmp pushl jmp pushl call mov mov jmp xor pop pop pop ret lea fisubrs add imul stc imul adc push add push add inc add inc add push add in mov cmp push mov jne call cmpl jne call call pushl mov pushl mov pushl mov push call jmp cmp push push jne mov andl test je mov mov mov call mov jmp cmpl jne mov jmp cmpl je cmpl jne cmp jne cmpl jne cmpl je jmp mov test je push pushl call test pop pop je mov mov movl add mov test jne mov test jne mov jmp cmp je mov shr movzwl mov jne mov mov call jmp pushl pushl push pushl call test jne call mov cmpl jne xor pop pop pop pop ret pushl pushl pushl pushl pushl pushl push call jmp xor inc ret mov ret mov ret mov ret mov ret xor inc ret xor ret mov ret mov ret mov xor movl mov mov mov mov mov mov mov mov mov ret pushl pushl pushl pushl pushl call ret push mov call mov xor inc xor mov mov mov mov mov mov mov pop ret push mov lea mov test je call andl pop ret call mov mov push mov call ret call mov mov push mov call ret push push mov mov xor cmp je cmp jne mov cmp jb call mov neg sbb and add or push push pushl call jmp cmp je cmp jne push mov call cmp jne pushl call push call push push push pushl call pop pushl mov call movl pop pop ret push mov mov test je cmpl jne mov cmp jb call mov neg sbb and or push push pushl call jmp mov test je push mov push push push pushl call test je mov push pushl push pushl call pop pop ret push mov test push push mov jne call mov test je cmpl jne mov mov push push pushl call mov and cmp jae push pushl or push push mov call jmp mov test je push pushl call pop pop pop ret push lea sub mov xor mov push push push call movswl shr cmp movswl mov jle cmp jg jmp cmp jle push pop lea cltd sub lea sar mov sar mov shl add sub cmp jle push pop push pop cmp jle mov push lea push push call mov add sar add imul lea lea mov mov movl movzbw mov shl inc not movzwl mov mov add decl jne lea push push push pushl push call test pop pop mov pop jne push push call mov mov xor call add leave ret push mov mov push xor xor cmp setne push mov call cmp je cmp jne mov cmp jb call cmp jne call cmp je pushl mov push push pushl pushl call pop pop ret push mov call mov mov mov push movl pushl lea call andl push lea call lea push mov movb call xor cmp movb jne call cmp je push push mov call mov mov mov mov mov mov mov mov mov mov call ret push mov call mov mov test jne xor call ret push lea call test jne lea push call test je mov add mov cmpl jne mov jmp push call andl lea mov call mov test jne call push call push lea call pushl orl mov call mov add mov cmpl jne mov mov jmp pushl call push push call int3 push mov sub push mov test je mov neg sbb mov je push lea lea push lea push lea push mov call mov add andl cmpl jne andl pushl call cmpl jne pop lea call lea call pop leave ret push mov call mov mov movl movl call lea movb call lea movb call orl lea call call ret push mov call testb je push call pop mov pop ret push mov sub mov xor mov push lea push push call add lea push movl call mov xor cmpl sete xor call leave ret push xor cmp je xor cmp pop setne ret push push call push mov call mov cmp je mov push push call cmp mov je push push call cmp mov je push push call cmp mov je push push call cmp mov je push push call cmp mov je push push call cmp mov je push push call cmp mov je xor inc pop pop movl pop ret mov mov mov mov mov mov mov xor jmp call test je jmp testb push push jne mov xor cmp jle cmp jle mov push call cmp jge push call cmp jl xor jmp mov pop pop ret push mov sub call test je pushl pushl call jmp testb je mov jmp pushl call test je lea push pushl call jmp lea push pushl call test je pushl lea push call jmp xor leave ret push mov sub call test je pushl pushl call jmp cmpl push push jne mov xor cmp je cmpl jb push lea push push push call test je push mov mov push mov call push mov call lea lea movsl movsl movsl movsl xor inc cmpl mov mov pop jb push push push add push call add mov jmp xor pop pop leave ret push mov sub push mov xor cmp push push mov jne mov jmp mov cmp jne mov jmp mov cmp jbe mov jmp cmp mov jbe mov mov mov mov cmp jae mov addl add incl mov mov add cmp jb cmp jae mov mov sub shl add sub lea mov add sub dec jne cmpl mov jne lea mov cmpl jne lea mov lea push call mov add cmp ja mov push pop jmp cmpl jne mov mov sub mov movsl movsl movsl push movsl call jmp cmpl jne mov cmpw mov je push push push lea push call mov test jl lea mov mov mov cmpw je push push push lea push call mov test jl lea pushl mov mov push pushl push call jmp cmpl jne mov cmpw je push push push lea push call mov test jl lea pushl mov mov mov sub mov movsl movsl movsl push push movsl call jmp cmpl jne mov mov movzwl test je test je test je pushl call mov movw mov add jmp mov jmp mov andl mov mov sub mov pushl movsl pushl movsl pushl movsl push push movsl call jmp cmpl jne mov cmpw je push push push lea push call mov test jl lea mov mov mov sub mov movsl movsl movsl push push movsl call jmp cmpl jne mov mov mov add push sub mov movsl movsl movsl push movsl call jmp pushl mov push call jmp pushl mov push call jmp cmpl jne mov mov mov add push sub mov movsl movsl movsl push movsl call jmp cmpl jne mov movzwl test je test jne mov mov andl jmp cmp jne pushl call mov movw mov add jmp cmp jne mov jmp push call lea movw mov mov mov add push sub mov movsl movsl movsl push push movsl call jmp cmpl jne mov mov mov add push sub mov movsl movsl movsl push movsl call jmp cmpl jne pushl mov mov sub mov movsl movsl movsl push movsl call jmp cmpl jne pushl mov mov sub mov movsl movsl movsl push movsl call jmp cmpl jne mov mov mov add push sub mov movsl movsl movsl push movsl call jmp test je cmpl jne mov mov mov add push sub mov movsl movsl movsl push movsl call jmp test je cmp jne mov mov cmpw lea movsl movsl movsl movsl je push push push lea push call mov test jl lea mov mov push sub mov lea movsl movsl movsl push movsl call jmp test je cmpl jne mov mov mov add push sub mov movsl movsl movsl push movsl call mov test jl mov movw jmp test je cmp jne mov mov cmpw lea movsl movsl movsl movsl je push push push lea push call mov test jge mov movl jmp lea mov mov push sub mov lea movsl movsl movsl push movsl call mov jmp cmpl je mov jmp mov mov mov add push sub mov movsl movsl movsl push movsl call jmp mov mov add push push call mov test jl mov movw jmp mov mov add push push call mov test jl mov movw lea push call mov pop pop pop leave ret lea sbb add jne add jne add inc add jbe add jbe add jbe add inc add ja add ja add js add js add jns add inc add in push push xor cmp push push jbe mov movb lea xor pushl pushl call test jne mov mov movb mov add cmp jb cmpb je inc cmp jb xor pop pop pop leave ret mov jmp push mov call mov movl movl movl mov xor mov mov mov mov mov mov mov mov mov mov pop ret cmpl mov je jmp jmp push mov push mov mov test jne mov call mov test jne pushl pushl pushl pushl call jmp pushl pushl pushl pushl push call pop pop ret lea ret push mov call mov test je push pushl call xor pop ret push mov push push push pushl mov pushl pushl call mov test je push push call mov test movzwl mov je cmpl jb mov orl orl push push push push mov mov call test jne orl mov pop jmp or pop pop leave ret push mov push mov mov mov mov cmpl je cmp je add jmp cmp jne cmp jb cmp ja mov jmp xor mov mov pop pop ret push mov push andl push mov mov lea push pushl mov pushl pushl call test jne pushl mov pushl mov pushl call mov mov pop leave ret push mov call movl movl mov pop ret mov mov movl ret ret push mov call cmpl jne and push push mov call push pushl call pop ret mov ret push mov pushl pushl pushl pushl pushl call pop ret mov test jne mov jmp movl xor ret mov ret mov test jne mov jmp andl mov ret lea cmpl jne push push push pushl call test jl xor ret mov pushl mov push call ret mov pushl mov push call ret mov push mov push pushl lea sub mov movsl movsl movsl push movsl call pop pop ret mov push mov push pushl lea sub mov movsl movsl movsl push movsl call pop pop ret mov push mov push pushl lea sub mov movsl movsl movsl push movsl call pop pop ret mov push mov push pushl lea sub mov movsl movsl movsl push movsl call pop pop ret mov push mov push pushl lea sub mov movsl movsl movsl push movsl call pop pop ret mov push mov push pushl lea sub mov movsl movsl movsl push movsl call pop pop ret mov push mov push pushl lea sub mov movsl movsl movsl push movsl call pop pop ret mov push push pushl mov sub mov pushl lea movsl movsl movsl push movsl call pop pop ret mov push mov push pushl lea sub mov movsl movsl movsl push movsl call pop pop ret mov pushl mov push call ret mov pushl mov push call ret mov push mov push pushl lea sub mov movsl movsl movsl push movsl call pop pop ret mov mov push push sub mov pushl lea movsl movsl movsl push movsl call pop pop ret push mov mov push mov push sub mov pushl lea pushl movsl pushl movsl pushl movsl push movsl call pop pop pop ret mov push push pushl mov sub mov pushl lea movsl movsl movsl push movsl call pop pop ret pushl mov pushl mov pushl push call ret mov mov push push sub mov lea movsl movsl movsl push movsl call pop pop ret mov push mov push pushl lea sub mov movsl movsl movsl push movsl call pop pop ret mov mov xor ret mov and ret pushl call pop ret xor ret mov test jne call andl xor inc ret mov test jne call andl xor inc ret mov ret push push call xor mov lea push call pushl call mov mov cmp jne xor jmp mov pushl call movzwl mov movl call mov call ret cmpl je xor cmp sete mov test je call mov jmp xor pushl push call test je push call ret push push call xor mov lea push call pushl call mov mov cmp jne xor jmp mov pushl pushl pushl call mov movl call mov call ret xor cmpl je xor cmp sete mov cmp je call mov jmp xor pushl push call cmp je push call ret push push call xor mov lea push call pushl call mov mov cmp jne xor jmp mov pushl pushl pushl call mov movl call mov call ret xor cmpl je xor cmp sete mov cmp je call mov jmp xor pushl push call cmp je push call ret push push call xor mov lea push call pushl call mov mov cmp jne xor jmp mov pushl pushl pushl pushl pushl pushl pushl pushl pushl pushl pushl pushl call mov movl call mov call ret xor cmpl je xor cmp sete mov cmp je call mov jmp xor pushl push call cmp je push call ret push push call xor mov lea push call pushl call mov mov cmp jne xor jmp mov pushl call mov movl call mov call ret xor cmpl je xor cmp sete mov cmp je call mov jmp xor pushl push call cmp je push call ret pushl pushl call push call ret push pushl call ret push pushl call ret push mov mov cmp je mov cmp je cmp je call mov mov cmp je push call pop ret push mov mov cmp je push call movl pop ret push mov call xor movl movl movl mov mov mov mov mov mov mov mov mov mov mov mov pop ret push pushl mov pushl call mov call mov mov pop ret push mov mov test push push push jne xor jmp mov pushl mov pushl mov mov push mov mov mov sub push sub push push push pushl pushl pushl pushl call pop pop pop pop ret push mov mov test push push push jne xor jmp mov pushl mov pushl mov mov mov push mov mov sub push sub push mov push push or push pushl pushl push call pop pop pop pop ret push call mov mov test je mov test je push push push push call cmpl mov je test je push call test jl mov push mov call pop ret push mov push push mov test push jne call pushl call xor test mov jle mov push mov call test je cmp je push push call test jne jmp push pushl call cmp je inc cmp jl xor pop pop pop pop ret pushl call jmp movl mov test je push call ret push mov call testb je push call mov pop ret push mov call mov cmpl jne mov cmp jne push pop jmp cmp jne xor inc jmp cmp jne xor mov push pushl mov call jmp pushl mov pushl mov call pop ret cmpw jne call mov test je testl jne push call xor ret push mov call mov pushl add lea call andl mov call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call andl mov call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl andl pushl mov call orl cmpl mov je pushl push call mov call ret push mov call mov pushl lea call pushl andl pushl pushl pushl pushl pushl pushl pushl push call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl mov call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl mov call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov pushl lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl mov call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl mov call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call mov andl sub mov pushl lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call mov andl sub mov pushl lea pushl movsl pushl movsl pushl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov pushl lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov pushl andl pushl mov call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call mov andl sub mov lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl sub mov lea movsl movsl movsl mov movsl call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call andl mov call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call andl mov call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl andl pushl mov call orl cmpl mov je pushl push call mov call ret push mov call mov pushl add lea call pushl mov andl mov call orl cmpl mov je pushl push call mov call ret push mov push push push mov test jne mov jmp push mov pushl lea call cmpl mov mov pop je pushl push call xor pop leave ret mov test je mov push call ret push mov sub push mov push mov call mov mov test je mov jmp testl je pushl call jmp push pushl call mov test je push push push push call test je mov push mov lea push pushl call testl jne test je push push call test je test je xor test movl jne call test je mov lea push push push call push call mov lea push lea push call lea push lea push call jmp lea push push call lea push push push call push call lea push lea push call jmp pushl call mov mov lea push push call lea push push call push lea push push push call mov mov mov mov add cltd sub mov sub mov cltd sub mov sar sar sub mov sub mov mov add cltd sub mov mov cltd sub sar sar sub cmp jge mov jmp add cmp jle sub add mov cmp pop jge mov jmp mov add cmp jle mov sub add push push push push push mov push call pop pop leave ret mov mov mov test je and mov xor push push push pushl call ret push mov call push call pop mov mov xor cmp mov je call call ret push mov call mov mov andl test je call call ret push mov cmpl jne pushl call test mov jne pushl call test mov setne mov mov pop ret push mov cmpl jne push call push call mov mov mov mov pop ret push push call mov andl lea push call pushl call mov test je andl lea push mov call mov xor test setne test jne jmp call movl call call ret cmpl je pushl push call ret push mov cmpl jne push call push call mov mov mov mov pop ret push push call mov xor mov lea push call pushl call mov mov cmp jne xor jmp mov lea push mov call mov xor cmp setne cmp jne call pushl call mov movl call mov call ret cmpl je xor cmp sete mov test je call mov jmp xor pushl push call test je push call ret pushl call mov mov call ret jmp push push mov call mov test jne jmp call mov call movswl shr movswl mov mov lea pop ret push mov push mov call test jne jmp pushl mov pushl mov pushl call pop ret push mov call call mov cmpl jne cmpl je push call push mov call pop mov mov andl test je push push push push push call jmp xor orl push mov call mov call ret push push push call pushl mov mov call mov push mov call mov pop pop ret push call mov xor test je add jmp ret push mov test push mov jne xor jmp push push call mov push lea mov call push mov mov call xor inc pop pop pop ret push mov push mov test je push call test je pushl lea call andl andl mov pop pop ret push push mov call mov test jne jmp call cmpb je mov test je push call andl cmpl je andl xor pop ret xor inc pop ret push mov mov test je mov push call mov andl test je mov push push push call mov test je mov push call mov pop jmp push mov sub push push push mov call mov xor cmp je cmp jne call cmp jne call cmp jne call test je push call mov cmp jne mov mov cmp je mov call mov mov xor inc test je mov push call andl test je call mov test je cmpl je push lea push push call mov add mov mov lea push push push pushl movl mov call mov mov push push call mov mov call mov push push call cmp jne mov mov call mov test je push push pushl call mov call mov mov call pop pop pop leave ret push mov mov push xor cmp jne cmp jne xor jmp cmp je push call cmp jne jmp pushl lea call mov cmp jne cmp je cmp jne push call jmp mov mov call mov mov pop pop ret push mov sub mov push mov mov mov push mov mov call test jne call mov lea push sub push mov mov push mov call pop leave ret push mov push push pushl pushl call mov mov test je push call test je pushl pushl push call test jne cmpl push jne call jmp call test jne pushl call jmp pushl pushl push call test jne push push call mov test jne pop pop pop ret push mov push mov call test jne call pushl mov pushl mov pushl pushl call pop ret push mov cmpl je mov mov call test jne mov call pop ret push push push mov call test jne call mov test je mov push call test jl push call test jl push call test jl push push push pushl call xor inc jmp mov call neg sbb neg pop pop pop ret push mov push push mov cmpb jne call jmp mov andl lea push pushl mov pushl call test jge mov jmp mov pop leave ret push mov mov test je push call test jne mov call pop ret push mov sub push push push mov mov mov jmp lea push call push push push push lea push call test jne mov call pop pop pop leave ret push mov push lea mov mov push call test je mov jmp mov call pop pop ret push mov push push lea push xor call mov mov call cmp je pushl call test je mov jmp mov and cmp jne call mov mov call mov mov pop leave ret push call test je movl ret xor ret push mov sub testl jne push mov mov call test jne lea push pushl call mov mov cmp jne mov cmp jne push pushl call push call test je mov call test jne mov mov call test je push mov call pop leave ret push mov call push mov call mov xor xor cmp setne mov cmp jne call lea push mov pop lea rep mov mov cmp mov mov mov mov mov mov mov mov jne cmp je mov mov push call andl cmp jne lea push lea push push call pushl mov pushl mov push call cmp mov jne pushl lea push push call jmp mov add push pushl call cmpl mov je mov call mov ret mov mov push lea pop lea rep call ret push mov cmpl jne xor inc jmp push mov push call test je cmp jne pushl pushl pushl push push call jmp pushl pushl pushl push call pop pop ret push mov call mov mov movl andl cmpl je cmp je cmp je cmp je cmp je call mov test je mov push call mov test je cmp jne andl orl mov call call ret push mov push mov mov test je lea push call test je mov jmp mov call pop pop ret push mov cmpl push mov jne push mov call test jne call mov cmp jne pushl jmp push call push call test je pushl push call test je mov push mov call jmp mov push push pushl call test je push mov call test jne mov call pop pop ret push mov push push pushl mov call jmp cmpl je push call test je pushl pushl pushl pushl push call jmp pushl pushl pushl push call cmpl je push call test je pushl pushl pushl pushl pushl push call push push call mov test jne pop pop pop ret push mov call push call test jne xor jmp mov lea push mov call test jne push call push mov call test je mov test je push lea call mov test je push lea call pushl andl lea mov call andl xor test setne orl mov lea call mov jmp pushl mov call call ret cmpw push mov je cmpw jne push pushl call test jne mov call pop ret push mov push lea push mov pushl mov call test je mov jmp mov call pop pop ret mov cmpl jne mov jmp cmpl jne mov jmp mov pushl mov push call ret mov cmpl jne mov jmp cmpl jne mov jmp mov pushl mov push call ret mov mov test push push jne mov jmp cmpl jne mov jmp pushl mov sub mov lea movsl movsl movsl push movsl call pop pop ret mov mov test push push jne mov jmp cmpl jne mov jmp pushl mov sub mov lea movsl movsl movsl push movsl call pop pop ret mov mov test push push jne mov jmp cmpl jne mov jmp pushl mov sub mov lea movsl movsl movsl push movsl call pop pop ret mov mov test push push jne mov jmp cmpl jne mov jmp pushl mov sub mov lea movsl movsl movsl push movsl call pop pop ret mov mov test push push jne mov jmp cmpl jne mov jmp pushl mov sub mov lea movsl movsl movsl push movsl call pop pop ret mov mov test push push jne mov jmp cmpl jne mov jmp pushl mov sub mov lea movsl movsl movsl push movsl call pop pop ret mov mov test push push jne mov jmp cmpl jne mov jmp pushl mov sub mov lea movsl movsl movsl push movsl call pop pop ret push mov mov mov test push push jne mov jmp cmpl jne mov jmp cmpl je pushl mov sub mov pushl lea movsl movsl movsl push movsl call pop pop pop ret mov mov test push push jne mov jmp cmpl jne mov jmp pushl mov sub mov lea movsl movsl movsl push movsl call pop pop ret mov cmpl jne mov jmp cmpl jne mov jmp mov pushl mov push call ret mov cmpl jne mov jmp cmpl jne mov jmp mov pushl mov push call ret mov mov test push push jne mov jmp cmpl jne mov jmp pushl mov sub mov lea movsl movsl movsl push movsl call pop pop ret mov mov test push push jne mov jmp mov sub mov pushl lea movsl movsl movsl push movsl call pop pop ret push mov mov mov xor cmp push push jne mov jmp cmp jne mov jmp cmp je cmp je cmp je mov sub mov pushl lea pushl movsl pushl movsl pushl movsl push movsl call pop pop pop ret push mov mov mov test push push jne mov jmp cmpl jne mov jmp pushl mov sub mov pushl lea movsl movsl movsl push movsl call pop pop pop ret push mov mov cmpl jne mov jmp cmpl jne mov jmp pushl mov pushl mov pushl push call pop ret mov mov test push push jne mov jmp mov sub mov lea movsl movsl movsl push movsl call pop pop ret mov mov neg sbb and add ret mov mov mov mov mov xor ret push mov mov cmpl jne mov jmp pushl mov pushl mov pushl pushl pushl pushl pushl pushl push call pop ret push mov mov cmpl jne mov jmp pushl mov pushl mov pushl pushl pushl push call pop ret mov cmpl jne mov jmp mov pushl mov push call ret mov cmpl jne mov jmp pushl mov pushl mov pushl push call ret mov test jne pushl call push call ret push mov call testb je push call pop mov pop ret push mov cmpl push mov jne pushl call test je mov push mov call jmp push pushl call test jne mov call pop pop ret push mov push lea push mov pushl mov call test je mov jmp mov call pop pop ret mov push push pushl mov call test jne mov call pop ret push push call push mov call mov test jne call cmpl jne push call test pop mov jne xor jmp push push call test mov jne pushl call andl jmp push call pushl pushl pushl pushl call pop ret push mov sub mov push push push movzwl shr xor cmp mov mov jne cmp jne xor jmp lea call mov push lea push push push mov mov call cmp jne xor inc jmp mov jmp push mov call cmp jne call mov cmp je push pushl call test jne cmp je mov push push pushl mov push call pop pop pop leave ret push mov sub push push mov mov push push mov call movzwl mov mov push mov mov call test jne call mov cmp jne xor inc jmp pushl push call test jne mov push lea push movzwl or push pushl mov mov mov mov call pop pop pop leave ret push mov push call test je mov call test je mov jmp push push call test je push call jmp push push call pop ret test je mov test jne xor ret push mov push jmp mov push call test jne push call pop ret push mov call mov test je cmp jne mov call mov call test jne push push push push push pushl call mov pop jmp push mov call mov test je cmp jne pushl mov call mov call test jne call push push pushl pushl pushl pushl call pop ret push mov call cmp jne mov call mov call test jne call push push pushl pushl pushl pushl call mov call pop ret xor push mov mov mov mov movl movl movl call mov pop ret mov mov mov cmp jne mov cmp jne mov cmp jne mov cmp jne xor inc ret xor ret xor ret mov ret cmpl jne xor ret mov mov push push call ret mov cmpl jne cmpl jne cmpl jne cmpl jne xor inc jmp xor ret push mov cmpl push push push je mov test je mov test jne mov jmp pushl andl call test je mov add mov push call mov xor jmp mov xor test sete test mov jne pushl push call test pop pop je cmp je pushl push pushl pushl call test je cmpl jne test jl add mov test jne mov jmp mov pop pop pop pop ret movl movl movl movl call jmp mov incl mov ret mov decl push mov jne test je mov push call mov pop ret pushl pushl push pushl call ret push mov call testb je push call pop mov pop ret subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp push mov push push push mov mov call test jne push mov call mov test je push mov test je pushl call test je mov call cmp je test mov mov jne and jmp mov mov lea push pushl push pushl call pop pop pop leave ret push mov cmpl push jne cmpl je cmpl je cmpl jne mov call test je pushl call push call mov test je call push call cmp je mov call test je pushl call xor inc jmp xor pop pop ret push mov call mov mov push push call andl andl mov mov xor inc sub je sub je sub je sub jne push call mov lea push lea push push call pushl pushl push push pushl call pushl mov lea push push call mov call ret pushl push push call push push call push call push call jmp push call mov shr push movswl push push call xor test sete jmp pushl call push mov call push pushl push call test je pushl pushl pushl push pushl call mov jmp mov mov mov mov mov mov mov mov lea push pushl call cmpl mov je mov call mov ret push mov call mov mov push mov mov call xor test setne mov test jne call cmpl je push push pushl pushl call jmp mov mov call test movzbl mov jne testl jne test jne cmpl je push push call test jne mov cmp ja push lea push movzwl push movb call lea push push call test pop pop je test je pushl lea call andl push mov call mov mov call mov mov call mov push push push mov call cmp je mov mov andl orl cmpl je pushl push call jmp cmpw jne push pop push lea push push call lea mov push mov push push call add test mov je push push call movzwl cmp jne jmp push lea push push call test je lea push push movb call test pop pop je push push call test mov je mov mov push push call test jne pushl push push call push push call cmp jne push call push push push call pushl mov push push pushl call cmpl mov je pushl call andl mov call ret push push mov call mov test jne call push mov cmp je cmpl jne call push push push push call test mov jne call mov pop pop ret push mov sub push push mov test mov je push push call test jne call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov lea mov mov push mov call test jne mov mov call xor jmp push call pushl pushl pushl pushl pushl pushl pushl pushl pushl pushl pushl pushl call add mov call test jne mov mov call xor test setne pop pop leave ret push push mov mov push call test je mov mov call mov xor push push push pushl call push push push push push pushl call mov call mov cmp jne jmp push push push pushl call push push push push push pushl call call cmp je push push push push call pop pop pop ret push mov call mov xor mov movl mov cmp mov jne pushl mov pushl call test je movl jmp cmp jne mov cmp je mov lea push push pushl mov call test jne jmp cmp mov jne push call push pushl push call cmp jne mov shr push movswl push push call test jne mov test je cmpl jle cmp jb cmp jbe cmp jb cmp jbe lea cmp ja mov mov lea push push pushl push call test jne mov mov call mov xor push lea mov and call imul mov add cmp mov jne mov mov cmp jne mov lea mov call test je cmpl jb jmp mov mov mov mov mov jmp cmpl push push jae pushl pushl call test mov je mov mov lea call mov mov mov lea cmp ja jmp mov mov push push jmp mov mov cmp je push push push add push call mov test jne mov call mov mov cmpl jne mov andl lea call orl lea call xor call ret movswl shr movswl push push jmp pushl call push mov call jmp pushl jmp mov call jmp push call push jmp mov shr push movzwl push pushl call push mov call jmp push pushl call jmp push jmp lea call mov lea movb mov call mov mov push movb mov call test jne mov test je pushl lea call test je mov lea push push lea push mov call andl andl lea mov movb call jmp lea call mov pushl mov lea push mov movb call andl mov lea movb call jmp mov shr push push call push movzwl jmp mov shr push movzwl jmp push call push mov shr jmp mov call jmp pushl jmp mov shr push movzwl jmp mov shr movswl push movswl jmp mov shr push movzwl jmp pushl call push push call push xor cmp sete jmp pushl call jmp pushl call jmp mov shr movswl push movswl push pushl call jmp pushl jmp push call push jmp mov shr push movzwl jmp movswl shr movswl push push pushl call jmp push pushl call push jmp mov shr push push call jmp mov movswl shr cmp movswl mov mov jne push call push pushl pushl jmp push push jmp push pushl mov call jmp push mov call jmp mov push shr push movzwl push jmp movswl shr movswl push push pushl mov call jmp push pushl mov call jmp movswl shr movswl push push mov shr push movzwl push mov call mov jmp mov call test mov je jmp mov lea mov call mov push pushl mov call mov mov test je mov mov orl lea call xor inc jmp nop sub inc add mov add mov add mov add inc add add inc add mov add mov add mov add inc add mov add inc add inc add inc add inc add add inc add inc add inc add inc add mov add add mov add mov add inc add inc add inc add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add inc add inc add mov add inc add inc add inc add inc add inc add inc add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add mov add inc add in mov sub mov cmp push ja je cmp jb cmp jbe cmp je cmp jne mov mov mov mov mov xor push lea push movzwl or push push call jmp mov xor push shr push or push push call test je mov xor inc cmp je mov jmp cmp jb cmp jbe cmp jne pushl add pushl pushl push call jmp lea cmp ja mov push mov add push mov lea push xor push push mov call cmp pop jne xor pop leave ret andl push mov cmpl je mov mov push call push push mov call pop ret push mov call mov xor cmp jne mov jmp push mov movl mov call pop mov mov cmp movb je push call jmp xor jmp mov call mov ret mov xor mov cmp je mov mov mov call ret push sub lea mov xor mov push mov call andl call mov call mov mov pop pop pop pop mov xor call add leave ret call push lea call mov mov xor push push lea push mov movb call test je lea push push push push lea push push call add jmp push push push lea push push call add push push mov push call lea movb call mov push mov call mov ret push mov call mov call mov call mov call andl mov call mov call test jne call pushl pushl pushl pushl call test jne push push push call orl lea call call ret push mov call mov call mov call mov call andl mov call mov call test jne call pushl pushl pushl pushl call test jne push push push call orl lea call call ret push mov cmpl je push pushl mov pushl lea push pushl call add cmp pop ja test jne pop ret mov test je mov xor inc jmp pop jmp push mov call mov cmpl mov jne mov call mov test jl mov test jne lea push call mov test jl andl mov mov andl lea push push push call test jl mov lea push lea push mov mov push call pushl pushl push call mov mov mov orl xor test je mov push call jmp push pushl push call mov mov xor mov call ret mov ret push mov call mov lea push pushl pushl call add test jne push call test pop jne xor jmp call cmpb je push call andl call mov lea push mov call push mov call orl push call xor inc call ret push call push push call int3 mov push mov push mov call movzwl mov mov push push call test mov jne push push call mov push call pop pop ret push mov sub call mov mov not and jne xor inc jmp push push push push xor lea push push xor call mov add mov call testb mov push mov mov pop mov mov je lea push movl movl call test je inc testb je orl lea push movl call test je or testb je lea push mov movl movl call test je or testb je push push lea push mov mov call test je or test je push push lea push movl movl call test je or testb je push lea push movl call or andl testb je push lea push movl call or testb je push lea push movl call or mov test je push lea push mov call or mov test je push lea push movl call or mov test je push lea push movl call or mov test je push lea push movl call or mov test je push lea push movl call or mov test je push lea push movl call or mov test je push lea push mov call or mov test je push lea push mov call or mov test je push lea push movl call or mov test je push lea push movl call or mov test je push lea push mov call or mov or mov mov mov and cmp jne or mov or mov and pop sub pop neg sbb inc pop leave ret push mov cmpl jne push call movl xor inc pop ret mov mov jmp cmpl jne push pushl call ret mov mov jmp cmpl jne push pushl call ret mov mov jmp cmpl jne pushl call ret mov mov jmp cmpl jne pushl pushl call ret mov mov jmp push mov cmpl jne mov test je mov pushl pushl pushl pushl pushl push pushl call pop ret mov mov pop jmp push mov test je cmpl jne pushl call mov push add call test je cmpl je mov mov push push mov call pop ret mov test je cmpl je imul add push call pop mov mov mov mov ret call int3 test je push mov push call test pop mov jne pop ret mov ret mov xor movl mov mov mov mov ret pushl movl call pop ret push mov push push push mov xor cmp mov jge call mov cmp jl mov cmp jne pushl call pop mov mov jmp mov cmp jne cmp ja push call push push push mov call add mov jmp mov cmp jg mov cmp jle mov sub push add push push call add mov jmp mov test jne mov cltd and add sar cmp jl mov cmp jle mov jmp cmp jge push pop add cmp mov jl mov cmp jl pushl call pushl mov pushl pushl push call mov mov sub push add push push call pushl call mov add mov mov mov pop pop pop pop ret push push mov mov push not test mov push mov je pushl call mov test mov jbe mov cmp jae mov push push mov call add sub jne jmp call push push mov call mov test mov jbe mov cmp jae mov push push mov call add sub jne pop pop pop pop ret push call test pop je mov jmp xor ret push mov call testb je push call pop mov pop ret pushl pushl pushl call push call add ret push mov push push push mov test push jne call mov test je andl cmpb mov je mov cmp jne mov cmp jl cmp jle cmp jl cmp jg cmp jle movsbl sub jmp movsbl sub inc inc cmp jge mov test je push call add jmp movsbl push call test pop je incl inc inc incl cmpb jne pushl mov mov call cmpb mov je mov cmp jne mov cmp jl cmp jle cmp jl cmp jg cmp jle movsbl sub jmp movsbl sub inc inc cmp jl movb inc jmp mov lea mov test je push call pushl mov mov inc push push call mov sub add add jmp movsbl push call test pop je mov mov inc inc decl mov mov inc inc decl cmpb jne mov sub push call pop pop pop leave ret push mov call call push lea call pushl andl lea call test jne mov add jmp pushl mov pushl push pushl call lea call call ret push lea push pushl pushl call ret mov mov cmp jae push pop mov cmp ja push pop andl andl mov mov ret push mov mov call andl andl pop ret jmp push mov cmpl jne pushl lea pushl push call mov mov add dec imul add jmp mov mov mov dec sub test jge mov mov mov pop ret mov ret push call test pop je movl andl ret xor ret mov test je andl movl ret push mov call call mov cmpl jne cmpl je push call push mov call pop mov mov andl test je push push push push push call jmp xor orl push mov call mov call ret push call mov jmp push call mov xor test je add jmp ret push mov push mov test je push call test je pushl lea call andl mov pop pop ret cmpl jne xor ret call push call ret push mov movl call testb je push call pop mov pop ret push sub lea mov xor mov push mov call andl movl call mov mov pop pop pop pop mov xor call add leave ret call push lea call mov mov xor push push lea push mov movb call test je lea push push push push lea push push call add jmp push push push lea push push call add push push mov push call lea movb call mov push mov call mov ret push mov call testb je push call pop mov pop ret mov mov ret mov mov ret andl ret andl ret push push mov mov xor test push mov je push call mov mov cmp je push call test je or pop pop mov pop ret push mov mov xor inc cmp push mov je pushl push call mov test je test je pushl push call test je xor inc jmp xor pop pop ret push mov mov or cmp push mov je pushl push call mov test je pushl push call pop pop ret push mov mov or cmp push mov je pushl push call mov test je pushl push call pop pop ret push mov mov xor cmp push mov je pushl push call mov test je pushl push call pop pop ret pushl pushl call ret mov ret mov ret mov ret mov ret mov mov push call ret mov xor movl mov mov mov ret pushl pushl pushl call ret pushl pushl call ret pushl pushl pushl pushl pushl call ret push mov pushl pushl pushl pushl pushl pushl pushl pushl call pop ret push mov pushl pushl pushl pushl pushl pushl pushl pushl call mov movswl shr movswl mov mov mov pop ret pushl pushl pushl pushl pushl call ret push mov pushl pushl pushl pushl pushl pushl call pop ret push mov mov test je mov pushl pushl pushl pushl pushl pushl pushl push pushl call pop ret pushl pushl pushl pushl pushl call ret push mov push mov mov cmp push mov je pushl pushl pushl push call mov test je pushl pushl pushl push call mov pop pop pop ret push mov push mov mov cmp push mov je pushl pushl pushl push call mov test je pushl pushl pushl push call mov pop pop pop ret push mov push mov mov cmp push mov je pushl pushl pushl push call mov test je pushl pushl pushl push call mov pop pop pop ret push mov push mov mov cmp push mov je pushl pushl pushl pushl pushl push call mov test je pushl pushl pushl pushl pushl push call mov pop pop pop ret push mov push mov mov cmp push mov je pushl pushl pushl push call mov test je pushl pushl pushl push call mov pop pop pop ret push mov push mov mov cmp push mov je pushl pushl pushl pushl pushl push call mov test je pushl pushl pushl pushl pushl push call mov pop pop pop ret push call pop xor cmp je movl mov mov mov ret xor ret push call test pop je movl andl ret xor ret mov xor cmp je movl mov mov mov ret mov test je andl movl ret testb push mov movl je push call pop mov pop ret testb push mov movl je push call pop mov pop ret push mov call call mov cmpl jne cmpl je push call push mov call pop mov mov andl test je push push push push push call jmp xor orl push mov call mov call ret push call mov jmp push mov push mov test je push call test je pushl lea call mov mov call andl mov pop pop ret cmpl movl je call push call ret push mov call call mov cmpl jne cmpl je push call push mov call pop mov mov andl test je push push push push push call jmp xor orl push mov call mov call ret push call mov jmp push mov push mov test je push call test je pushl lea call andl mov pop pop ret cmpl jne xor ret call push call ret push mov call testb je push call pop mov pop ret push push push pushl mov call mov mov mov xor cmp je push push call mov test je push push call push call pop pop pop ret push mov push mov mov xor cmp push mov je test je mov push push call mov test je test jne xor jmp mov push push call push call pop pop pop ret call test je mov test je push push call jmp push mov push push mov mov push xor cmp je push mov push call movzwl pushl add push call test jne push lea push pushl call test je mov cmp je push call push push push pushl pushl push call push push call push mov call push push push pushl pushl push call cmp je pushl call mov pushl call pop pop pop leave ret call xor cmp sete mov ret call add push call ret call mov mov ret call cmpl jne push push call call mov test je mov test je call test je mov mov pop jmp call cmpb jne push call pop ret call add push call test jne jmp ret push mov sub mov xor mov lea push call push call mov xor inc cmp sbb xor neg call leave ret cmp jne repz jmp push push call andl mov cmp ja push call pop andl push call pop mov movl call mov call ret push call pop ret push mov cmp ja push mov push push xor cmp mov jne call push call push call pop pop mov cmp jne cmp je mov jmp xor inc push jmp cmp jne push call cmp pop jne cmp jne xor inc add and push push pushl call mov test jne cmp push pop je push call test pop jne jmp call mov call mov pop mov pop pop pop ret push call pop call movl xor pop ret push mov push mov push xor cmp jne xor jmp cmp jne call push pop mov push push push push push call add mov jmp cmp je cmp jb push pushl pushl call add jmp pushl push pushl call add cmp je cmp jae call push pop mov mov jmp push pop pop pop pop ret int3 int3 mov test je mov add test je test jne add lea lea mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret push mov mov push push xor cmp je cmp jne call push pop mov push push push push push call add mov jmp cmp je cmp jae call push pop mov mov jmp push pushl pushl call add xor pop pop pop ret push push call mov test jne pushl call pop jmp mov test jne push call pop jmp cmpl jne xor mov cmp ja push call pop mov push call pop mov cmp je cmp ja push push push call add test je mov jmp push call pop mov cmp je mov dec cmp jb mov push push pushl call push call mov push push call add cmp jne cmp jne xor inc mov add and mov push push pushl call mov cmp je mov dec cmp jb mov push push pushl call push pushl call add movl call cmpl jne test jne inc add and mov push push push pushl call mov jmp mov mov push call pop ret mov test jne cmp je push call pop test jne call cmp jne mov call push call pop mov jmp test jne call cmp je movl jmp test jne inc push push push pushl call mov test jne cmp je push call pop test je cmp jbe push call pop call movl xor call ret call jmp test jne call mov call push call mov pop mov jmp push push call mov test je cmpl jne push call pop andl push call pop mov test je push push call pop pop movl call cmpl jne pushl jmp push call pop ret push push pushl call test jne call mov call push call mov pop call ret push push call mov xor cmp jbe push pop xor div cmp sbb inc jne call movl push push push push push call add xor jmp imul mov mov cmp jne xor inc xor mov cmp ja cmpl jne add and mov mov cmp ja push call pop mov pushl call pop mov movl call mov cmp je pushl push push call add cmp jne push push pushl call mov cmp jne cmp je push call pop test jne mov cmp je movl jmp xor mov push call pop ret cmp jne mov cmp je movl mov call ret mov test push mov movb jne call mov mov mov mov mov mov cmp je mov test jne call mov mov cmp je mov mov test jne call mov mov testb jne orl movb jmp mov mov mov mov mov pop ret push mov sub push pushl lea call mov xor cmp jne call push push push push push movl call add cmp je mov andl xor jmp push mov cmp jne pushl push call pop pop jmp movzbl testb je inc mov cmp je movzwl movzbl shl or cmp jne dec jmp movzwl cmp je inc movzbw movzwl cmp jne movzwl cmp jne cmp je mov andl jmp cmp je mov andl xor pop pop leave ret push pushl pushl call add ret push movl call pop ret push mov call testb je push call pop mov pop ret mov add push add push call neg pop sbb pop inc ret cmpl jne call pushl call push call pop pop ret cmpw jne mov cmpl jne cmpw jne cmpl jbe xor cmp setne mov ret xor ret push push call andl lea push call movl mov push push mov call push call mov test jne push call pop jmp mov push call push push test jne call push call jmp mov mov mov mov mov mov mov and call push call mov cmp je or mov mov shl mov add mov mov mov mov mov call mov xor inc push call pop test jne push call pop call test jne push call pop call mov call test jge push call pop call mov call mov call test jge push call pop call test jge push call pop push call pop test je push call pop call test je movzwl jmp push pop push push push push call mov cmpl jne push call call jmp mov mov mov mov push push call pop pop ret mov mov mov cmpl jne push call call movl mov jmp xor inc ret mov movl mov call ret call jmp push mov sub mov push push push pop mov lea rep mov mov test pop mov pop je testb je movl lea push pushl pushl pushl call leave ret push mov push push mov add mov mov mov mov mov mov mov mov jmp pop leave ret pop pop xchg jmp push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop leave ret push mov sub push push push cld mov xor push push push pushl pushl pushl pushl pushl call add mov pop pop pop mov mov pop ret push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop ret push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop leave ret push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop leave ret push mov push push push push mov mov mov mov mov jmp cmp jne call mov dec mov imul add mov cmp jge cmp jle cmp jne decl mov mov cmpl jge mov inc mov mov mov cmp ja cmp jbe call mov imul add pop pop pop leave ret mov push mov mov call mov mov call mov mov pop ret call mov jmp mov cmp je mov test jne inc ret xor ret push call mov cmp jne call mov mov pop ret call mov jmp mov cmp je mov cmpl jne pop jmp mov mov pop ret push mov sub mov andl lea xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov leave ret push pushl lea sub push push push mov mov mov xor push pushl movl lea mov ret push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov ret push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov ret mov mov pop pop pop pop pop mov pop push ret mov xor call jmp push pushl pushl pushl pushl call add ret push push push push push pushl call pushl mov mov call mov cmp pop pop jb mov sub lea cmp jb push call mov cmp pop jae mov cmp jae mov add cmp jb push pushl call test pop pop jne lea cmp jb push pushl call test pop pop je sar push lea call pop mov pushl call mov add push call pop mov mov pop jmp xor pop pop pop pop pop ret push push push call mov push call add test mov mov jne push pop pop ret andl xor pop ret push push call call andl pushl call pop mov movl call mov call ret call ret pushl call neg sbb neg pop dec ret push pushl mov mov lea sub push push push mov xor xor mov push mov pushl mov movl mov lea mov ret mov xor call jmp int3 int3 int3 int3 int3 sub push mov push push mov xor push mov cmp movb movl lea je mov add xor call mov mov add xor call mov testb jne mov cmp mov lea mov mov mov je lea mov test lea mov mov je mov call test movb jl jg mov cmp mov jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop pop add ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov jmp cmpl je push push mov mov call jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp push lea sub and add sbb or pop jmp mov xor cmp je inc cmp jb lea cmp ja push pop ret mov ret add push pop cmp sbb and add ret call test jne mov ret add ret call test jne mov ret add ret push call mov push mov call pop mov call mov pop ret int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov test jne cmp jb cmpl je jmp push mov cmp jb neg and je sub mov add sub jne mov shl add mov shl add mov and shr je rep test je mov add sub jne mov pop ret mov ret push mov push push mov mov sub je dec je dec je dec je dec je mov mov push push pop jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne add add sub cmp jae add add cmp ja jmp mov jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test jne movzbl movzbl sub je xor test setg lea test je mov jmp movzbl movzbl sub je xor test setg lea mov jmp xor test jne xor pop jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea mov jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea test jne jmp mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp xor test jne movzbl movzbl sub je xor test setg lea test je mov jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg lea mov test jne movzbl movzbl jmp mov mov movzbl movzbl jmp xor pop pop pop ret mov fldl2t inc add in inc add icebp inc add cmc inc add add inc add inc add call inc add hlt inc add in inc add lock add inc add jmp add repz add out add ljmp sub inc add ljmp popf repnz add jmp inc add mov sub push xor cmp jne call push push push push push movl call add or jmp pushl lea pushl movl pushl movl push mov mov call add pop leave ret pushl push pushl push call add ret push mov sub push xor cmp jne call push push push push push movl call add or jmp push mov push mov cmp je cmp jne call push push push push push movl call add or jmp mov cmp mov ja mov pushl lea pushl movl pushl mov push mov call add cmp mov je cmp jl decl js mov mov jmp lea push push call cmp pop pop je mov jmp xor cmp mov setge dec dec pop pop pop leave ret push mov push xor cmp jne call push push push push push movl call add or jmp push mov cmp je cmp ja call movl jmp pushl pushl pushl pushl push push call add cmp jge mov cmp jne call movl push push push push push call add or pop pop pop ret pushl push pushl pushl pushl call add ret push push call xor mov xor cmp setne cmp jne call movl push push push push push call add xor jmp mov cmp jbe call movl jmp cmpl jne push call pop mov push call pop mov cmp je mov cmp ja push push push call add test je mov movl call cmp jne cmp jne xor inc add and push pushl push pushl call mov cmp jne call mov call push call pop mov jmp xor mov push call pop ret push push jmp mov mov call ret push push call xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp cmpl jne push call pop mov push call pop mov cmp je mov sub mov jmp mov movl call cmp jne push push pushl call mov mov call ret xor mov mov push call pop ret push push pushl call add ret mov mov movl movl movl movl mov movl movl movl movl ret call call cmpl mov je call fnclex ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret push mov sub push pushl lea call xor cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne call push push push push push movl call add cmp je mov andl mov jmp push mov cmp jne push pushl call pop pop jmp mov movzbw movzwl movzbl inc testb mov je mov cmp jne xor jmp xor incl mov mov movzwl movzbw movzwl movzbl inc testb je mov cmp mov jne xor jmp xor mov inc mov movzwl cmp jne cmp jne cmp je mov andl xor pop pop pop leave ret sbb and dec cmp je mov andl jmp push pushl pushl call add ret push mov push push mov xor cmp push jne cmp jne cmp jne xor pop pop pop pop ret cmp je mov cmp ja call push pop mov push push push push push call add mov jmp cmp jne mov jmp mov cmp jne mov jmp cmpl mov jne mov mov inc inc cmp je dec jne jmp mov mov inc inc cmp je dec je decl jne cmp jne mov cmp jne cmpl jne mov push mov pop jmp mov call push pop mov mov jmp mov push xor cmp push push je mov cmp ja call push pop mov push push push push push call add mov jmp mov cmp jne mov jmp mov mov mov inc inc cmp je dec jne cmp jne mov call push pop mov mov jmp xor pop pop pop ret push mov sub pushl lea call movzbl mov mov test jne cmpl je mov mov movzwl and jmp xor test je xor inc cmpb je mov andl leave ret push push pushl pushl call add ret push push pushl push call add ret call pushl call pushl call push call add ret push call test je push push call test je pushl call ret pushl call pop pushl call int3 push call pop ret push call pop ret push mov jmp mov test je call add cmp jb pop ret push mov xor jmp test jne mov test je call add cmp jb pop ret mov push xor cmp jne call push push push push push movl call add push pop pop ret mov cmp je mov xor pop ret mov push xor cmp jne call push push push push push movl call add push pop pop ret cmp je mov mov xor pop ret cmpl je push call test pop je pushl call pop call push push call test pop pop jne push push push call mov mov mov cmp pop jae mov test je call add cmp jb cmpl pop pop je push call test pop je push push push call xor ret push push call push call pop xor mov xor inc cmp je mov mov mov cmp jne pushl call mov pushl call pop pop mov mov cmp je sub mov cmp jb cmpl je mov call cmp je push call pop call jmp push mov call pop push mov call pop movl call cmpl jne mov push call pop pushl call xor inc cmpl je push call pop ret call ret push push pushl call add ret push push pushl call add ret push push push call add ret push push push call add ret push call mov push call push call push call push call push call push call push call push call push call add mov pop ret mov push xor cmp push push je mov cmp ja call push pop mov push push push push push call add mov jmp mov cmp jne mov jmp mov cmp je inc dec jne cmp je mov mov inc inc cmp je dec jne cmp jne mov call push pop mov mov jmp xor pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov call mov push call pop push call push call cmpl jne push call pop push call push call leave ret mov mov ret push lea sub mov xor mov push mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea mov movl mov mov push mov lea push push call lea mov lea add movl mov mov call push mov call lea push call test jne test jne push call pop push call push call mov xor pop call add leave ret push mov pushl call test pop je pop jmp push call pop pop jmp push push xor mov cmpl jne lea mov push pushl add call test pop pop je inc cmp jl xor inc pop pop ret andl xor jmp push mov push mov push mov test je cmpl je push call push call andl pop add cmp jl mov pop mov test je cmpl jne push call add cmp jl pop pop ret push mov mov pushl call pop ret push push call xor inc mov xor cmp jne call push call push call pop pop mov lea cmp je mov jmp push call pop mov cmp jne call movl xor jmp push call pop mov cmp jne push push call pop pop test jne push call pop call movl mov jmp mov jmp push call pop movl call mov call ret push call pop ret push mov mov push lea cmpl jne push call test pop jne push call pop pushl call pop pop ret push push pushl call test mov jne ret mov andl andl mov xor mov movl inc ret mov mov imul add jmp mov sub cmp jb add cmp jb xor ret push mov sub mov mov push mov push mov sub add shr mov imul lea mov mov dec test mov jne push lea mov mov mov mov mov test mov jne sar dec cmp jbe push pop mov cmp jne cmp mov jae mov shr lea not and decb jne mov and jmp lea shr lea not and decb jne mov and mov mov mov mov add mov mov mov mov mov mov mov sar dec cmp jbe push pop mov and mov jne sub mov sar push mov dec pop cmp jbe mov add mov sar dec cmp mov jbe mov cmp je mov mov cmp jne cmp mov jae mov shr not and decb jne mov and jmp lea shr not and decb jne mov and mov mov mov mov mov mov mov mov mov jmp mov cmpl jne cmp je mov lea mov mov mov mov mov mov mov cmp jne mov mov inc cmp mov jae cmpb jne mov mov shr mov or mov mov shr lea or jmp cmpb jne lea mov shr mov or lea mov shr lea or mov mov mov mov decl jne mov test je mov mov push shl add mov push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne push push pushl call mov pushl push pushl call mov mov imul mov sub lea push lea push push call mov add decl cmp jbe subl mov mov mov mov mov pop pop pop leave ret mov push mov push xor cmp jne add imul push pushl push pushl call cmp jne xor jmp addl mov mov imul add push push pushl call cmp mov je push push push push call cmp mov jne pushl push pushl call jmp orl mov mov incl mov orl mov pop pop ret push mov push push mov mov push push mov push xor jmp add inc test jge mov imul lea push mov pop mov mov add dec jne push mov push shl add push push call test jne or jmp lea cmp mov ja mov sub shr lea inc orl orl lea mov lea movl mov movl add dec jne mov mov add lea mov mov lea mov mov andl xor inc mov mov mov inc test mov mov jne or mov mov shr not and mov pop pop pop leave ret push mov sub mov mov push push mov push mov mov sub add shr mov imul lea mov mov and dec cmp lea mov mov mov jle test jne add cmp jg mov sar dec cmp mov jbe push pop mov mov cmp jne cmp mov jae shr mov lea not and decb jne mov and jmp add shr mov lea not and decb jne mov and mov mov mov mov mov mov mov sub add cmpl jle mov mov sar dec cmp lea jbe push pop mov lea mov mov mov mov mov mov mov mov mov cmp jne mov mov inc cmp mov jae cmpb jne mov mov shr mov or lea mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov lea mov mov jmp mov lea mov mov jmp xor jmp jge mov sub lea mov lea mov sar dec cmp mov mov jbe push pop testb jne mov sar dec cmp jbe push pop mov cmp jne cmp mov jae mov shr lea not and decb jne mov and jmp lea shr lea not and decb jne mov and mov mov mov mov mov mov mov mov add mov sar dec cmp jbe push pop mov lea mov mov mov mov mov mov mov cmp jne mov mov inc cmp mov jae cmpb jne mov mov shr mov or lea mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov mov xor inc pop pop pop leave ret push mov sub mov mov imul add add and mov sar push dec cmp push push jge or shr orl jmp add or xor shr mov mov mov jmp mov mov and and or jne add cmp mov jb cmp jne mov jmp mov mov and and or jne add cmp mov jb cmp jne jmp cmpl jne add mov cmp jb cmp jne mov jmp cmpl jne add cmp mov jb cmp jne call mov test mov jne xor jmp push call pop mov mov mov cmpl je mov mov mov cmp mov je mov mov and and or jne andl mov lea mov and and or jne incl mov add jmp mov mov imul lea mov mov xor and jne mov and push pop jmp add inc test jge mov mov mov sub mov sar dec cmp mov jle push pop cmp je mov cmp jne cmp mov jge mov shr mov lea not mov and mov decb jne mov mov and jmp lea shr mov lea lea not and decb mov jne mov mov and jmp mov cmpl mov mov mov mov mov mov je mov lea mov mov mov mov mov mov mov cmp jne mov mov inc cmp mov jge cmpb jne mov mov shr or mov mov shr mov or jmp cmpb jne lea mov shr or mov lea lea mov shr or mov test je mov mov jmp mov mov add lea mov mov mov mov test lea mov jne cmp jne mov cmp jne andl mov mov lea pop pop pop leave ret push mov push push push lea xor push mov mov call test pop je push push push push push call add lea push call test pop je push push push push push call add cmpl pop jne cmpl jb xor inc leave ret push pop leave ret xor cmp push sete push push call test mov jne xor ret call cmp mov jne push call test pop jne pushl call andl jmp xor inc ret push push mov push push xor xor cmp je inc cmp jb cmp jae push push call cmp pop je push call test pop jne cmpl je cmp je push mov push mov push call add test je push push push push push call add push mov push push movb call test jne push push push call add test je xor push push push push push call add push call inc cmp pop jbe push call sub add push mov push sub push push call add test je xor push push push push push call add jmp xor push push push call add test je push push push push push call add pushl push push call add test je push push push push push call add push push push call add jmp push call mov cmp je cmp je push lea push lea pushl call pop push pushl push call pop pop pop pop pop ret push call cmp pop je push call test pop jne cmpl jne push call push call pop pop ret mov mov ret pushl call test pop je pushl call test pop je xor inc ret xor ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne pop pop pop jmp test jne shr and cmp jb rep jmp nop mov mov sub jb and add jmp jmp nop jmp nop sbb inc add add inc add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea jmp inc add push inc add push inc add push inc add push inc add push inc add inc mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov add inc add inc add pop inc add inc add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop movsb pop inc add pop inc add pop inc add mov sub shr sub cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea inc sbb sbb sbb sbb sbb sbb sbb sbb inc mov inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov mov sbb sbb sbb inc or leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmpl je push push and and cmp pop pop jne pop pop pop jmp test jne shr and cmp jb rep jmp nop mov mov sub jb and add jmp jmp nop jmp nop mov inc add inc add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov add shr add cmp jb rep jmp lea pop sbb sbb sbb sbb sbb sbb sbb sbb inc mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov je inc add add sbb inc or leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop adc inc add sbb sbb inc add rorl add jmp cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea mov inc add inc add sbb sbb sbb sbb sbb inc mov inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov adc add sbb add sbb add inc add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret push push push push mov mov push xor lea push push call mov mov mov xor lea stos stos stos mov add sub mov mov inc dec jne lea mov mov mov inc dec jne pop pop pop pop ret push lea sub mov xor mov push push lea push pushl call test mov je xor mov inc cmp jb mov test movb je lea movzbl movzbl cmp ja sub inc push lea push push call add inc mov inc test jne push pushl lea pushl push push lea push push push call xor push pushl lea push push push lea push push pushl push call add push pushl lea push push push lea push push pushl push call add xor movzwl test je orb mov jmp test je orb mov mov jmp movb inc cmp jb jmp lea movl xor sub mov lea add lea cmp ja orb mov add jmp cmp ja orb mov sub mov jmp movb inc cmp jb mov pop xor pop call add leave ret push push call call mov mov test je cmpl je mov test jne push call pop mov call ret push call pop andl mov mov cmp je test je push call test jne cmp je push call pop mov mov mov mov push call movl call jmp mov push call pop ret push mov sub push xor push lea call cmp mov jne movl call cmp je mov andl jmp cmp jne movl call jmp cmp jne mov mov movl jmp cmp je mov andl mov pop leave ret push mov sub mov xor mov push mov push mov push call mov xor cmp mov jne mov call xor jmp mov xor cmp je incl add cmp jb cmp je cmp je movzwl push call test je lea push push call test je push lea push push call xor inc add cmp mov mov jbe cmpb je lea mov test je movzbl movzbl jmp push lea push push call mov add imul mov lea mov jmp mov test je movzbl movzbl jmp mov mov or movzbl inc cmp jbe mov inc inc cmpb jne mov incl add cmpl mov jb mov mov movl call push mov lea lea pop mov inc mov inc inc inc dec jne mov call jmp orb inc cmp jbe inc inc cmpb jne lea mov orb inc dec jne mov call mov mov jmp mov xor lea stos stos stos jmp cmp jne or mov pop pop xor pop call leave ret push push call orl call mov mov call mov mov call mov cmp je push call pop mov test je mov mov mov rep andl push pushl call pop pop mov test jne mov pushl call test jne mov cmp je push call pop mov push mov call testb jne testb jne push call pop andl mov mov mov mov mov mov xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp xor mov cmp jge mov mov inc jmp pushl call test jne mov cmp je push call pop mov push call movl call jmp push call pop ret jmp cmp jne cmp je push call pop call movl jmp andl mov call ret cmpl jne push call pop movl xor ret push push push mov mov xor cmp push je cmp je mov cmp je cmp jne mov cmp je cmp jne push call pushl call pop pop mov cmp je cmp jne push call pushl call pop pop pushl call pushl call pop pop mov cmp je cmp jne mov sub push call mov mov sub push call mov sub push call pushl call add lea mov cmp je cmp jne push call pushl call pop pop push lea pop cmpl je mov cmp je cmp jne push call pop cmp je mov cmp je cmp jne push call pop add dec jne push call pop pop pop pop pop ret push push push mov push mov push call mov test je push call mov test je push call mov test je push call mov test je push call push lea pop cmpl je mov test je push call cmpl je mov test je push call add dec jne mov add push call pop pop pop pop ret push mov test je push push push mov push call mov test je push call mov test je push call mov test je push call mov test je push call push lea pop cmpl je mov test je push call cmpl je mov test je push call add dec jne mov add push call pop pop pop mov pop ret test je test je push mov cmp je push mov call test pop je push call cmpl pop jne cmp je push call pop mov pop ret xor ret push push call call mov mov test je cmpl je call mov test jne push call pop mov call ret push call pop andl lea mov call mov movl call jmp push call pop mov ret push mov push push push push xor lea inc xor push mov mov call cmpl pop jle mov jmp push push call mov add cmp movzwl lea jbe push push call test pop pop je movzwl inc add cmp jb jmp andl mov pop pop pop leave ret push pushl mov call test je mov cmp je push pushl call call test je mov jmp push call mov test je call test je push push call test je pushl call mov mov pop ret push call pop ret push pushl mov call test je mov cmp je push pushl call call test je mov jmp push call mov test je call test je push push call test je pushl call mov mov pop ret call ret push pushl call mov test jne pushl call pop mov push pushl call mov pop ret mov cmp je push pushl call pop call orl mov cmp je push call orl jmp push push call push call mov mov movl xor inc mov test je call test je push pushl mov call mov push pushl call mov mov movb movb mov mov push call push call pop andl mov mov test jne mov mov pushl call pop movl call call ret push call pop ret push push call pushl mov call call mov test jne push push call mov test pop pop je push pushl pushl call pop call test je push push call pop pop call orl mov jmp push call pop xor push call pop mov pop ret push call mov test jne push call pop mov pop ret push push call mov test je mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov test je push call pop mov cmp je push call pop push call pop andl mov test je push call test jne cmp je push call pop movl call push call pop movl mov test je push call pop cmp je cmp je cmpl jne push call pop movl call push call pop call ret mov push call pop ret mov push call pop ret push push call mov test jne call xor pop ret push mov push push call push push mov call push push mov call push push mov call cmpl mov mov je cmpl je cmpl je test jne mov mov mov movl mov mov call cmp mov je pushl push call test je call pushl call pushl mov call pushl mov call pushl mov call add mov call test je push pushl call pop call cmp mov je push push call mov test pop pop je push pushl pushl call pop call test je push push call pop pop call orl mov xor inc jmp call xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea pop ret lea lea xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret push push call push call pop andl mov mov test je mov mov mov test je cmp jne mov mov push call pop pushl call pop andl movl call call ret mov jmp push call pop ret int3 int3 mov mov test jne mov cmp jne or je cmp jne or je shr cmp jne or je cmp jne add add or jne mov xor ret nop sbb shl add ret test je mov add cmp jne add or je test je mov add cmp jne or je cmp jne or je add jmp mov mov cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne call xor ret push call xor ret push mov push push push call mov test je mov mov push mov mov push cmp je mov imul add add cmp jb imul add cmp jae cmp jne mov jmp xor test je mov test mov jne xor jmp cmp jne andl xor inc jmp cmp je mov mov mov mov mov cmp jne mov mov mov add cmp jge imul mov andl mov mov inc add add cmp jl mov mov cmp mov jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl pushl push call pop mov jmp andl push call mov pop mov or pop pop pop leave ret push push xor cmp jne call mov test jne mov mov cmp ja test je test je cmp jne xor test sete mov movzbl push call test pop je inc inc jmp cmp ja inc mov test jne pop mov pop ret push xor cmp push push jne call mov xor cmp jne or jmp cmp je inc push call pop lea mov cmp jne push inc push call mov cmp pop pop mov je mov push jmp push call mov inc cmpb pop je push push call cmp pop pop mov je push push push call add test je push push push push push call add add add cmp jne pushl call mov mov movl xor pop pop pop pop pop ret pushl call mov or jmp push mov push mov push xor cmp push mov mov mov movl je mov addl mov mov cmpb jne xor cmp mov sete inc mov jmp incl test je mov mov inc mov mov movzbl push inc call test pop je incl cmpl je mov mov incl mov inc test mov mov je cmpl jne cmp je cmp jne test je movb andl cmpb je mov cmp je cmp jne inc jmp dec jmp cmpb je cmpl je mov addl mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne cmpl je lea cmpb jne mov jmp xor xor cmp sete mov shr test je dec test je movb inc incl test jne mov mov test je cmpl jne cmp je cmp je test je test movsbl push je call test pop je mov mov incl mov inc incl mov mov incl mov jmp call test pop je inc incl incl mov inc jmp test je movb inc mov incl mov jmp mov test pop pop je andl incl leave ret push mov sub push xor cmp push push jne call push mov push push mov call mov cmp mov je cmp mov jne mov mov lea push push push lea call mov add cmp jae mov cmp jae mov shl lea cmp jb push call mov cmp pop je mov lea push add push push lea call mov add dec mov mov xor jmp or pop pop pop leave ret push push mov push push push push mov xor xor cmp push pop jne call mov cmp je movl jmp call cmp jne mov mov jmp mov cmp jne cmp jne call mov cmp jne xor jmp cmp mov je add cmp jne add cmp jne mov push push push sub push sar inc push push push push mov call mov cmp je push call cmp pop mov je push push push push pushl push push push call test jne pushl call pop mov mov push call mov jmp cmp je cmp jne call mov cmp je cmp je inc cmp jne inc cmp jne sub inc mov push call mov cmp pop jne push call jmp push push push call add push call mov pop pop pop pop pop pop ret push push call xor mov lea push call movl push push pop push call pop pop cmp je mov mov lea jmp movb orl movb mov movb movb movb mov movb add mov add cmp jb cmp je mov cmp je mov lea lea mov mov cmp jl mov movl jmp push push call pop pop test je mov lea mov addl lea jmp movb orl movb andl andb movb movb andl movb add mov add cmp jb incl cmp jl jmp mov andl test jle mov mov cmp je cmp je mov test je test jne push call test je mov mov sar and shl add mov mov mov mov mov push lea push call pop pop test je incl incl inc addl cmp jl xor mov shl add mov cmp je cmp je orb jmp movb test jne push pop jmp mov dec neg sbb add push call mov cmp je test je push call test je mov and cmp jne orb jmp cmp jne orb push lea push call pop pop test je incl jmp orb movl inc cmp jl pushl call xor jmp xor inc ret mov movl or call ret push push mov mov cmp mov jae mov test je call add cmp jb pop pop ret push push mov mov cmp mov jae mov test je call add cmp jb pop pop ret push mov sub mov andl andl push push mov cmp mov je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp jne mov jmp test jne mov shl or mov not mov pop pop pop leave ret movl jmp push mov movl call testb je push call pop mov pop ret push push mov mov test je lea cmpb je mov mov cmp je add push push call test pop pop je xor jmp testb je testb je mov mov test je testb je test je testb je xor inc pop pop ret mov mov mov cmp je cmp jne call andl jmp call cmpl jle call add decl xor ret push push call mov mov cmpl jg movsbl jmp mov mov call add incl andl cmp je cmp jle cmp jl call mov shl mov add mov mov movl cmpl je mov push push mov pushl call andl jmp pushl call pop ret mov andl mov mov mov mov jmp movl call cmp je call mov call ret mov mov call cmpl jle call add decl ret mov cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call xor inc mov mov ret xor ret push push call mov test je cmpl jne mov test je mov test je andl push pushl call movl call ret xor cmp setne ret mov jmp mov mov push mov add cmpl jl mov mov mov mov add add pop ret push mov sub test jne call jmp andl cmpl movb jle push push mov mov mov mov test lea jle mov shl mov mov pushl mov push mov add push call add test jne dec add test jg jmp movb incl mov cmp jl pop pop mov leave ret push mov call call cmpl je call andl call orl jmp call mov push push mov call int3 push push call mov mov mov mov andl mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl push pushl push call add mov andl jmp mov call ret mov call andl mov mov cmpl jg movsbl jmp mov mov andl mov cmp jae imul add mov cmp jle cmp jg mov mov push push push push call add andl andl mov movl movl call mov call ret incl jmp mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne mov cmp je cmp je cmp jne cmpl jne cmpl je pushl call pop test je pushl push call pop pop ret push push call xor mov mov mov cmp je cmp je mov cmp jne testl je mov mov test js lea mov xor inc push test je mov pushl call pop pop test je push push call pop pop test je mov mov mov add push push call pop pop mov jmp mov mov pushl test je call pop pop test je push push call pop pop test je pushl mov pushl push call add cmpl jne mov test je add push jmp cmp jne call pop pop test je push push call pop pop test je pushl add push mov pushl call pop pop push push call add jmp call pop pop test je push push call pop pop test je pushl call pop test je testb push pop setne inc mov jmp call movl mov jmp xor inc ret mov jmp xor call ret push push call mov testl je mov jmp mov mov lea andl mov push push pushl mov push call add dec je dec jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov jmp push mov cmpl je pushl push push pushl call add cmpl pushl jne push jmp pushl call pushl pushl pushl push call mov push pushl inc pushl mov pushl mov push pushl call add test je push push call pop ret push mov push push push mov cmpl je push call cmpl je call lea call cmp je cmpl je pushl pushl pushl pushl pushl pushl push call add test jne mov cmpl jne call mov lea push lea push push pushl push call mov mov add cmp jae push cmp jl cmp jg mov mov shl add mov test je cmpb jne lea testb jne pushl mov pushl push pushl pushl pushl pushl call mov add incl mov add cmp jb pop pop pop leave ret push mov sub mov push mov mov cmp push push movb jg movsbl jmp mov cmp mov jl cmp jl call mov mov cmp jne cmpl mov jne mov cmp je cmp je cmp jne cmpl jne call cmpl je call mov mov call mov push push mov call test pop pop jne call cmp jne cmpl jne mov cmp je cmp je cmp jne cmpl jne call call cmpl je call mov call pushl xor mov call test pop jne xor cmp jle mov mov push call test jne inc add cmp jl jmp push pushl call pop pop lea push lea movl call push lea push movl call mov mov cmp jne cmpl jne mov cmp je cmp je cmp jne mov cmpl jbe lea push lea push pushl pushl push call add mov mov cmp jae mov cmp jg cmp jg mov mov mov test mov jle mov mov lea mov test mov jle pushl mov push pushl mov call add test jne decl add cmp jg decl addl cmpl jg jmp pushl mov pushl movb pushl pushl pushl pushl push mov call mov add incl add jmp mov cmpb je push push call pop pop cmpb jne mov and cmp jb mov test je push call test pop jne call call call mov call cmpl mov mov push jne pushl jmp pushl call mov push push pushl pushl call add pushl call mov cmpl jbe cmpb jne pushl pushl pushl push pushl pushl pushl push call add call cmpl je call pop pop pop leave ret push pushl mov call movl mov pop ret push mov push push push call cmpl mov mov mov mov mov jne mov cmp je cmp je mov and cmp jb testb jne testb je cmpl je cmpl jne push push pushl pushl call add jmp cmpl jne mov and cmp jb cmpl je cmp jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl pushl pushl push call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push push call call mov test je andl call jmp xor inc ret mov movl call call ret call mov test je call jmp push push call pushl call pop test je andl call jmp xor inc ret mov movl jmp push call pop mov ret int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call pop pop mov pop mov push mov cmp jne mov push call pop pop pop leave ret push mov sub push xor cmp push mov jne cmp jne cmp jne xor jmp cmp je cmp ja call push pop push push push push push mov call add mov jmp cmp jne mov jmp push mov cmp jne mov call push pop push push push push push mov call add jmp pushl lea call mov cmp jne pushl push pushl push call add jmp cmpl mov mov jne mov mov inc inc cmp je dec jne jmp mov mov inc inc cmp je dec je decl jne cmp jne mov inc cmp jne cmp je cmpl jne lea cmp mov jb lea push mov movzbl push call test pop pop je decl cmp jae mov sub test jne cmpl jne mov cmp jbe lea cmp mov jb lea push mov movzbl push call test pop pop je decl cmp jae mov mov sub test je mov jmp mov cmp je mov andl push pop jmp mov call push pop push push push push push mov call add cmp je mov andl mov jmp mov sub cmp jl lea cmp mov jb lea push mov movzbl push call test pop pop je decl cmp jae mov sub test je mov call mov push pop mov cmp je mov andl jmp cmp je mov andl xor pop pop pop leave ret push push xor pushl call mov test pop jne cmp jbe push call lea cmp jbe or cmp mov jne mov pop pop ret push push xor push pushl pushl call mov add test jne cmp jbe push call lea cmp jbe or cmp mov jne mov pop pop ret push push xor pushl pushl call mov test pop pop jne cmp je cmp jbe push call lea cmp jbe or cmp mov jne mov pop pop ret push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret int3 mov cmpw je xor ret mov add cmpl jne xor cmpw sete mov ret int3 int3 int3 int3 int3 int3 int3 mov mov add movzwl push push movzwl xor test push lea jbe mov mov cmp jb mov add cmp jb add add cmp jb xor pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov mov xor cmp sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret push mov push push mov push call mov mov test pop jne call movl orl or jmp test je call movl jmp push xor test je test mov je mov and mov mov mov and or test mov mov mov jne call add cmp je call add cmp jne pushl call test pop jne push call pop testw push je mov mov lea mov mov sub dec cmp mov jle push push pushl call add mov jmp or mov or jmp mov cmp je cmp je mov and mov sar shl add jmp mov testb je push push push push call and add cmp je mov mov mov jmp xor inc push lea push pushl call add mov cmp je orl or jmp mov and pop pop pop leave ret push mov sub mov mov mov shr pxor jmp lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea dec jne mov mov pop ret push mov sub mov mov cltd mov xor sub and xor sub test jne mov mov and mov cmp je sub push push call add mov mov test je add sub mov xor mov mov rep mov jmp neg add mov xor mov mov rep mov mov mov add sub push push push call add mov mov mov pop ret andl call mov xor ret testb je cmpl je decl js mov mov incl movzbl jmp movsbl push push call pop pop cmp jne or ret incl ret push mov push mov jmp mov mov decl call cmpl je cmpl jg pop pop ret push lea sub mov xor mov mov push mov push xor push mov pushl lea mov mov mov mov mov mov mov mov mov call cmp jne call push push push push movl push call add cmpb je mov andl or jmp mov testb jne push call cmp pop je pushl call cmp pop je pushl call pushl sar lea call and shl add pop pop xor jmp mov testb jne pushl call cmp pop je pushl call cmp pop je pushl call pushl sar lea call and shl add pop pop xor jmp mov testb jne cmp je mov xor test mov mov mov mov je inc cmpl mov jl mov sub cmp ja movsbl movzbl and xor jmp xor xor movsbl push sar pop cmp mov ja jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov cmp mov jge orl negl jmp mov imul movsbl lea mov jmp mov jmp cmp jne add mov mov cmp mov jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je mov lea push movzbl push mov call pop test mov pop je mov lea call mov inc test mov je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl cmp lea mov mov mov jge movl jmp testw jne orl jmp testw jne orl mov cmp jne mov add testw mov mov mov je cmp jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testw mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add cmp mov je mov cmp je testw movswl mov je cltd sub sar movl jmp mov jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb movl je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test jns mov mov add jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call test mov pop mov je mov mov mov jmp movl xor mov add mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call pop call mov add and je cmp jne lea push push pushl call pop call pop pop cmpb jne cmp jne lea push push pushl call pop call pop pop cmpb jne orl inc mov push jmp movl mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je test mov je movswl jmp movzwl cltd jmp test mov je cltd jmp xor mov test je cmp jg jl cmp jae neg adc neg orl testw mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testw mov mov je test je mov cmpb je decl mov movb inc jmp dec cmp je inc inc cmp jne sub sar jmp cmp jne mov mov mov jmp dec cmpb je inc cmp jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub testb jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov test mov je mov mov mov jmp call movl xor push push push push push jmp cmpb je mov andl mov mov pop pop xor pop call add leave ret push push inc add inc add dec inc add dec inc add dec inc add inc add inc add inc or push push mov mov je cmpl jne mov add jmp mov decl mov call inc cmpl jne call cmpl jne mov mov call cmpl jg pop pop ret push lea sub mov xor mov mov push mov push xor push mov pushl lea mov mov mov mov mov mov mov mov mov call cmp jne call push push push push movl push call add cmpb je mov andl or jmp mov testb jne push call cmp pop je pushl call cmp pop je pushl call pushl sar lea call and shl add pop pop xor jmp mov testb jne pushl call cmp pop je pushl call cmp pop je pushl call pushl sar lea call and shl add pop pop xor jmp mov testb jne cmp je mov test mov mov mov mov mov je inc xor cmp mov jl mov sub cmp ja movsbl movzbl and mov imul movzbl push shr pop cmp mov je push pop cmp ja jmp xor orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne or jmp orl jmp orl jmp orl jmp orl jmp cmp jne add mov mov test mov jge orl negl jmp mov imul movsbl lea mov jmp andl jmp cmp jne add mov mov test mov jge orl jmp mov imul movsbl lea mov jmp cmp je cmp je cmp je cmp jne orl jmp cmpb jne inc orl mov jmp orl jmp orl jmp mov cmp jne cmpb jne inc inc orl mov jmp cmp jne cmpb jne inc inc andl mov jmp cmp je cmp je cmp je cmp je cmp je cmp je andl andl lea push movzbl push call pop test mov pop je mov lea call mov inc test mov je mov lea call jmp movsbl cmp jg je cmp jg je sub je dec dec je dec dec je dec dec jne add movl mov orl cmpl lea mov mov mov jge movl jmp testw jne orl jmp testw jne orl mov cmp jne mov add testw mov mov mov je test jne mov mov mov movl jmp sub je dec dec je sub je dec dec jne add testw mov je movzwl push push lea push lea push call add test je movl jmp mov mov movl lea mov jmp mov add test mov je mov test je testw movswl mov je cltd sub sar movl jmp andl jmp mov mov push call pop jmp cmp jg je cmp jl cmp jle cmp je cmp je cmp jne testb mov je orl jmp mov add mov call test je testb je mov mov jmp mov mov movl jmp orl movl mov test jns add mov mov jmp jne cmp jne movl jmp cmp jle mov cmpl jle mov add push call test mov pop mov push je mov mov mov jmp movl pop add mov mov mov mov lea push pushl movsbl pushl mov push pushl lea push push pushl call pop call mov add and je cmpl jne lea push push pushl call pop call pop pop cmpb jne test jne lea push push pushl call pop call pop pop cmpb jne orl inc mov push jmp mov mov jmp sub je dec dec je sub jne movl testb movl je mov add movb mov movl jmp test jne add test je test mov je movswl jmp movzwl cltd jmp test mov je cltd jmp xor mov test je test jg jl test jae neg adc neg orl testw mov mov jne xor cmpl jge movl jmp andl mov cmp jle mov mov or jne and lea mov decl test jg mov or je mov cltd push push push push call add cmp mov mov mov jle add mov dec jmp lea sub inc testw mov mov je test je mov cmpb je decl mov movb inc jmp dec cmpw je inc inc test jne sub sar jmp test jne mov mov mov jmp dec cmpb je inc test jne sub mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub testb jne pushl lea push push call add pushl mov lea lea call testb pop je testb jne push push push lea call add cmpl mov je test jle mov mov movzwl decl push push lea push lea inc push inc call add test jne cmp je pushl lea lea call cmpl pop jne jmp orl jmp mov push lea call pop cmpl jl testb je push push push lea call add cmpl je pushl call andl pop mov mov test mov je mov mov jmp call movl xor push push push push push jmp xor cmp je cmpl jne cmpb je mov andl mov mov pop pop xor pop call add leave ret nop sti pop inc add inc add inc add pop inc add inc add pop inc add pop inc add int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jb mov add pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret push mov sub push push pushl lea call mov mov xor cmp je mov cmp jne call push push push push push movl call add cmpb je mov andl xor jmp cmp je cmpl jl cmpl jg mov push mov mov lea cmpl jle lea push movzbl push push call mov add jmp mov movzbl movzbl and test je mov inc jmp cmp jne orl jmp cmp jne mov inc mov test jl cmp je cmp jg test jne cmp je movl jmp mov cmp je cmp je movl jmp movl jmp cmp jne cmp jne mov cmp je cmp jne inc mov inc mov or xor divl movzbl movzwl test je movsbl sub jmp test je mov sub cmp movsbl ja sub add cmp jae orl cmp jb jne cmp jbe orl cmpl jne mov dec test jne cmpl je mov andl jmp mov imul add mov mov inc jmp test mov jne test jne and je cmpl ja test jne cmp jbe call testb movl je orl jmp mov and neg sbb neg add mov mov test je mov testb je negl cmpb je mov andl mov jmp mov test je mov cmpb je mov andl xor pop pop pop leave ret push mov xor cmp push pushl pushl pushl jne push jmp push call add pop ret push mov sub push pushl lea call mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call cmp pop jne inc inc mov mov mov mov mov mov inc mov mov mov mov inc test jne cmp pop je mov andl leave ret push mov sub push pushl lea call mov mov test mov je mov mov mov cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je mov mov push mov cmp pop jne dec mov inc inc test mov jne cmpb pop je mov andl leave ret fldz mov fcompl fnstsw test jp xor inc ret xor ret push mov push push cmpl pushl pushl je lea push call mov mov mov mov mov jmp lea push call mov mov mov add leave ret push pushl pushl pushl call add ret test push mov je push call inc push push add push call add pop ret push pushl call pop pop ret push pushl call pop pop ret push mov sub push push push pushl lea mov call xor cmp jne call push pop push push push push push mov call add cmpb je mov andl mov jmp cmp jbe cmp jle mov jmp xor add cmp ja call push jmp cmpb je mov xor cmp setg xor cmpl sete mov add mov call mov cmpl mov jne movb lea cmpl jle lea mov mov mov mov mov mov mov mov xor cmp sete add add cmpl jne or jmp sub add push push push call add xor test je push push push push push call add cmp lea je movb mov inc cmpb je mov dec jns neg movb inc cmp jl cltd push pop idiv add mov inc cmp jl cltd push pop idiv add mov add testb je cmpb jne push lea push push call add cmpb je mov andl xor pop pop pop leave ret push mov sub mov xor mov mov push push push mov push pop push lea push lea push pushl pushl call xor add cmp jne call push push push push push mov call add mov jmp mov cmp jbe cmp mov jne or jmp xor cmpl sete sub xor cmp setg sub lea push lea push push xor cmpl sete xor cmp setg add add push call add cmp je mov jmp pushl lea push push pushl mov push pushl call add mov pop pop xor pop call leave ret push mov push pushl pushl pushl pushl pushl call add pop ret push mov sub push push pushl lea movl xor movl call cmp jge mov mov cmp jne call push pop push push push push push mov call add cmpb je mov andl mov jmp cmp jbe mov add cmp movb ja call push jmp mov mov mov mov mov shr mov push and xor cmp jne test jne mov cmp jne or jmp add push pushl lea push push push call add test je cmpb movb je mov andl jmp cmpb jne movb inc movb inc cmpl push sete dec and add mov inc push call test pop pop je cmpl sete dec and add mov movb jmp and xor or je movb inc mov movb inc test sete dec and add mov mov inc neg sbb and and xor add xor or jne movb mov mov and inc or jne mov jmp movl jmp movb inc mov inc cmp mov jne mov jmp mov mov mov mov mov mov mov and mov ja cmp jbe mov movl cmpl jle mov and mov movswl and and call add movzwl cmp jbe add mov subl mov mov shrd shr inc decl cmpw mov mov jge cmpw jl mov and mov movswl and and call cmp jbe lea mov cmp je cmp jne movb dec jmp cmp je mov cmp jne add mov jmp inc mov jmp incb cmpl jle pushl push push call add add mov cmpb jne mov cmpl mov sete dec and add mov mov mov inc call xor and and sub push pop sbb js jg cmp jb movb inc jmp movb inc neg adc neg cmp mov movb jl mov jg cmp jb push push push push call add mov inc cmp mov mov mov jne test jl jg cmp jb push push push push call add mov mov inc mov mov cmp jne test jl jg cmp jb push push push push call add mov mov inc mov mov add mov movb cmpb je mov andl xor pop pop pop leave ret push mov sub push push push pushl mov mov mov lea dec call test jne call push pop mov xor push push push push push call add cmpb je mov andl mov jmp cmpl jbe cmpb je cmp jne xor cmpl sete add add movb movb cmpl mov jne movb lea mov xor inc test jg mov call movb inc jmp add cmpl jle mov call mov mov mov mov mov mov inc test jge neg cmpb jne cmp jl mov mov mov call push push push call add cmpb je mov andl xor pop pop pop leave ret push mov sub mov xor mov mov push push push mov push pop push lea push lea push pushl pushl call xor add cmp jne call push push push push push mov call add mov jmp mov cmp jbe cmp jne or jmp xor cmpl sete sub mov lea push mov add push push xor cmpl sete add push call add cmp je mov jmp pushl lea push push pushl mov call add mov pop pop xor pop call leave ret push mov sub mov xor mov mov push push mov push push pop push lea push lea push pushl pushl call xor add cmp jne call push push push push push mov call add mov jmp mov cmp jbe mov dec mov xor cmpl sete cmp lea jne or jmp sub lea push pushl push push call add cmp je mov jmp mov dec cmp setl cmp jl cmp jge cmp je mov inc test jne mov pushl lea push pushl mov pushl call add jmp pushl lea push push pushl mov pushl pushl call add mov pop pop xor pop call leave ret push mov mov cmp je cmp je cmp jne pushl pushl pushl pushl pushl call add pop ret cmp je cmp je pushl pushl pushl pushl pushl pushl call jmp pushl pushl pushl pushl pushl pushl call jmp pushl pushl pushl pushl pushl pushl call add pop ret push mov push pushl pushl pushl pushl pushl pushl call add pop ret push push xor lea pushl call add cmp pop mov jb pop pop ret push push push xor push call add test je push push push push push call add pop ret push mov sub fldl fstpl fldl fstpl fldl fdivl fmull fsubrl fstpl fld1 fcompl fnstsw test jp xor inc leave ret xor leave ret push call test je push push call test je push call ret jmp push lea sub mov xor mov testb push je push call pop call test je push call pop testb je mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov lea mov movl mov mov push mov lea push push call lea add mov lea push movl mov mov call lea push call push call int3 mov mov ret mov mov mov mov mov ret mov mov push cmp je mov imul add add cmp jb imul add pop cmp jae cmp je xor ret pushl call pop ret push push call xor mov mov mov cmp jg je mov push pop sub je sub je sub je sub jne call mov mov test jne or jmp mov mov jmp pushl mov call mov add mov jmp mov sub je sub je dec je call movl xor push push push push push call add jmp mov mov jmp mov mov jmp mov mov movl push call mov pop xor cmpl je cmp jne push call cmp je push call pop xor mov cmp je cmp je cmp jne mov mov mov cmp jne mov mov movl cmp jne mov mov mov mov add cmp jge mov imul mov mov incl jmp call mov movl call cmp jne pushl push call pop jmp mov mov cmpl je push call pop ret push call pop cmp je cmp je cmp jne mov mov cmp jne mov mov xor call ret mov mov ret mov mov ret pushl call xor inc ret push push call xor mov pushl call pop mov cmp jne lea push call pop cmp je push push push push push call add cmpl je push call cmp je push push call mov cmp jne mov push call pop mov mov pushl pushl call mov jmp mov mov mov mov xor cmp sete mov ret mov cmpl jne push call andl movl mov call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret int3 int3 int3 push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret andl ret push mov sub push push push call xor cmp mov mov mov mov jne push call mov cmp je mov push push call cmp je push call movl push mov call push call movl push mov call push call mov lea push call test pop pop je push push push push push call add cmpl jne push push call push call cmp pop mov je push push call push call pop mov mov mov cmp je cmp je push call pushl mov call cmp pop pop mov je cmp je call cmp je lea push push lea push push push call test je testb jne lea push call test pop je push push push push push call add cmpl jb orl jmp orl jmp mov cmp je push call cmp pop je call cmp mov je mov cmp je push call cmp pop je pushl call mov pushl call cmp pop je pushl pushl pushl pushl call jmp xor pop pop pop leave ret mov push xor cmp jl cmp jle cmp jne mov pop ret mov mov pop ret call push push push push push movl call add or pop ret push mov sub mov mov mov mov mov shr jmp lea movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne mov mov mov pop ret push mov sub mov mov mov mov mov cltd mov mov xor sub and xor sub cltd mov xor sub and xor sub mov or jne mov mov and mov cmp je sub push push push call add mov mov test je mov mov add sub mov add sub mov mov mov mov rep mov jmp cmp jne neg add mov mov mov mov rep mov add mov add mov sub push push push call add mov jmp mov mov mov mov shr rep mov and rep mov mov mov mov mov pop ret mov test je sub cmpl jne push call pop ret push mov sub mov xor mov push push xor cmp push mov jne push push xor inc push push push push call test je mov jmp call cmp jne movl cmp jle mov mov dec cmp je inc cmp jne or mov sub dec cmp jge inc mov mov cmp je cmp je cmp jne cmp mov jne mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp je jle push xor pop div cmp jb lea cmp ja call mov cmp je movl jmp push call cmp pop je movl add mov jmp mov cmp je push pushl pushl pushl push pushl call test je mov push push push pushl pushl pushl call mov cmp mov je testw je cmp je cmp jg pushl pushl push pushl pushl pushl call jmp cmp jle push xor pop div cmp jb lea cmp ja call mov cmp je movl add jmp push call cmp pop je movl add mov jmp xor cmp je pushl push push pushl pushl pushl call test je cmp push push jne push push jmp pushl pushl pushl push push pushl call mov push call pop pushl call mov pop jmp cmp mov mov jne mov mov mov cmp jne mov mov mov pushl call cmp pop mov jne xor jmp cmp je push push lea push pushl push pushl call add cmp mov je mov push push pushl push pushl pushl call cmp mov jne xor jmp jle cmp ja add cmp ja call mov cmp je movl add jmp push call cmp pop je movl add mov jmp xor cmp je pushl push push call add pushl push pushl pushl pushl pushl call cmp mov jne xor jmp pushl lea pushl push push pushl pushl call mov mov add neg sbb and push call pop jmp pushl pushl pushl pushl pushl pushl call mov cmp je pushl call pop mov cmp je cmp je push call pop mov lea pop pop pop mov xor call leave ret push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl call add cmpb je mov andl leave ret push mov push push mov xor mov mov push push xor cmp push mov jne lea push xor inc push push push call test je mov jmp call cmp jne push pop mov jmp mov cmp je cmp je cmp jne cmp mov jne mov mov mov mov xor cmp push push pushl setne pushl lea push pushl call mov cmp je jle cmp ja lea cmp ja call mov cmp je movl jmp push call cmp pop je movl add mov test je lea push push push call add push push pushl pushl push pushl call test je pushl push push pushl call mov push call mov pop jmp xor cmp jne mov mov mov cmp jne mov mov mov pushl call cmp pop jne xor jmp cmp je push push lea push pushl push pushl call mov add cmp je mov pushl pushl pushl pushl pushl call cmp mov je push call pop mov lea pop pop pop mov xor call leave ret push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl call add cmpb je mov andl leave ret push mov test je pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call pushl call add pop ret push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop ret push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret push mov push push mov movl mov test je push call mov inc push call test pop pop mov je pushl push push call add jmp andl movl mov pop pop pop ret push mov push mov movl mov mov test mov push je test je push call mov inc push call test pop pop mov je pushl push push call add jmp andl jmp mov pop mov pop pop ret cmpl movl je pushl call pop ret mov test jne mov ret push mov call testb je push call pop mov pop ret xor inc cmpl jne xor ret int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push mov push push mov push mov mov mov push push mov call or cmp pop jne call movl mov mov jmp pushl lea push pushl push call cmp mov jne call test je push call pop jmp mov sar mov and shl lea andb mov mov pop pop leave ret push push call or mov mov mov cmp jne call andl call movl mov mov jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movzbl and jne call mov call movl push push push push push call add or mov jmp push call pop mov mov testb je pushl pushl pushl pushl call add mov mov jmp call movl call mov orl orl movl call mov mov call ret pushl call pop ret push lea sub mov xor mov mov push xor cmp mov mov mov jne xor jmp cmp jne call mov call push push push push push movl call add or jmp push push mov mov sar lea mov and shl add mov add sar cmp mov mov je cmp jne mov not test jne call xor mov call push push push push push movl call add jmp testb je push push push pushl call add pushl call test pop je mov testb je call mov xor cmp lea sete push mov pushl mov call test je xor cmp je test je call mov mov xor cmp mov jbe mov mov test jne mov mov xor cmp sete mov mov add cmpl je mov mov mov andl push lea push jmp movsbl push call test pop je mov sub add xor inc cmp jbe push lea push push call add cmp je inc incl jmp push push lea push call add cmp je xor push push push lea push push lea push push pushl inc incl call mov test je push lea push push lea push mov mov pushl call test je mov mov add cmp mov jl cmpl je push lea push push lea push mov mov movb pushl call test je cmpl jl incl incl jmp cmp je cmp jne movzwl xor cmp sete inc inc addl mov mov cmp je cmp jne pushl call cmp pop jne incl cmpl je push pop push mov call cmp pop jne incl incl mov cmp jb jmp mov mov incl mov mov mov jmp xor mov add testb je test mov mov jne cmp mov jbe jmp mov mov andl sub lea cmp jae mov incl mov inc cmp jne incl movb inc incl mov inc incl cmpl jb mov lea sub push lea push push lea push mov pushl call test je mov add cmp jl mov sub cmp jb jmp cmp mov jne cmp jbe jmp mov mov andl sub lea cmp jae mov addl movzwl inc inc cmp jne addl movw inc inc addl addl mov inc inc cmpl jb mov lea sub push lea push push lea push mov pushl call test je mov add cmp jl mov sub cmp jb jmp cmp jbe mov andl sub push lea pop cmp jae mov movzwl add add cmp jne movw add add add mov add cmpl jb xor push push push lea push lea sub cltd sub sar push mov push push push call mov cmp je push lea push mov sub push lea push mov mov pushl call test je add cmp jg jmp call mov cmp jg mov sub cmp mov jb jmp push lea push pushl pushl pushl call test je mov andl mov jmp call mov cmpl jne cmpl je push pop cmp jne call movl call mov jmp pushl call pop jmp mov mov testb je mov cmpb jne xor jmp call movl call andl or jmp mov sub pop pop mov xor pop call add leave ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movzbl and je push call pop mov mov testb je pushl pushl pushl call add mov jmp call movl call mov orl movl call mov call ret pushl call pop ret incl push call test pop mov mov je orl movl jmp orl lea mov movl mov andl mov ret mov cmp jne call movl xor ret push xor cmp jl cmp jb call push push push push push movl call add xor pop ret mov and sar mov shl movzbl and pop ret mov ret mov test push push pop jne mov jmp cmp jge mov mov push push call test pop pop mov jne push push mov call test pop pop mov jne push pop pop ret xor mov jmp mov mov add add cmp jl push pop xor mov push mov sar mov mov and shl mov cmp je cmp je test jne mov add inc cmp jl pop xor pop ret call cmpb je call pushl call pop ret push mov mov cmp jb cmp ja mov sub sar add push call orl pop pop ret add push call pop ret mov cmp jge add push call mov orl pop ret mov add push call ret mov mov cmp jb cmp ja andl sub sar add push call pop ret add push call ret mov cmp mov jge andl add push call pop ret add push call ret mov push xor cmp jne call push push push push push movl call add or pop ret mov pop ret mov or xor cmp sete mov ret push mov sub push push mov xor cmp je cmp je cmp jne mov cmp je mov xor pop pop leave ret pushl lea call mov cmp jne mov cmp je movzbw mov cmp je mov andl xor inc jmp lea push movzbl push call test pop pop je mov mov cmp jle cmp jl xor cmp setne push pushl push push push pushl call test mov jne mov cmp jb cmp je cmp mov je mov andl jmp call movl cmp je mov andl or jmp xor cmp setne push pushl mov push push push pushl call test jne jmp push pushl pushl pushl call add ret push mov sub pushl lea call movzbl mov mov movzwl and cmpb je mov andl leave ret push pushl call pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret push push call andl movapd movl jmp mov mov mov cmp je cmp je xor ret xor inc ret mov andl movl mov call ret push mov sub xor push mov mov mov push pushf pop mov xor push popf pushf pop sub je push popf xor cpuid mov mov mov mov mov cpuid mov mov pop testl je call test je xor inc jmp xor pop leave ret call mov xor ret push mov sub push push mov xor cmp push mov jne cmp jbe mov cmp je mov xor jmp mov cmp je orl cmp jbe call push pop push push push push push mov call add mov jmp pushl lea call mov cmp jne mov cmp jbe cmp je cmp jbe push push push call add call movl call cmp mov je mov andl pop pop pop leave ret cmp je cmp ja call push pop push push push push push mov call add cmp je mov andl jmp mov mov cmp je movl cmp je mov andl jmp lea push push push push push lea push push mov pushl call cmp je cmp jne mov cmp je mov jmp call cmp jne cmp je cmp jbe push push push call add jmp push pushl pushl pushl pushl call add ret push mov sub push pushl lea call mov lea cmp ja mov mov movzwl jmp mov sarl lea push mov and push call test pop pop je mov push mov mov movb pop jmp xor mov movb inc mov push pushl pushl lea push push lea push lea push push call add test jne cmp je mov andl xor jmp movzwl and cmpb je mov andl pop leave ret push mov sub pushl lea call mov cmpl jle lea push push pushl call add jmp mov mov movzbl and cmpb je mov andl leave ret cmpl jne mov mov movzbl and ret push pushl call pop pop ret push mov sub push push pushl lea call mov mov cmp jae mov cmpl jle lea push push push call mov add jmp mov movzbl and test je mov movzbl jmp cmpb je mov andl mov jmp mov cmpl jle mov sarl lea push mov and push call test pop pop je mov push mov mov movb pop jmp call movl xor mov movb inc mov push pushl lea push push push lea push push pushl lea push call add test je cmp jne movzbl jmp movzbl xor mov or cmpb je mov andl pop pop leave ret cmpl jne mov lea cmp ja add ret push pushl call pop pop ret push mov sub mov xor mov push push mov push pushl mov lea call lea push xor push push push push push lea push lea push call mov lea push push call add testb jne cmp jne cmp je mov andl push pop jmp cmp jne cmp je mov andl push jmp testb jne testb jne cmp je mov andl xor mov pop pop xor pop call leave ret push mov sub mov xor mov push push mov push pushl mov lea call lea push xor push push push push push lea push lea push call mov lea push push call add testb jne cmp jne cmp je mov andl push pop jmp cmp jne cmp je mov andl push jmp testb jne testb jne cmp je mov andl xor mov pop pop xor pop call leave ret push mov mov push push mov xor cmp push mov jne call push pop mov push push push push push call add mov jmp cmp jbe mov cmp mov jle mov jmp xor inc cmp ja call push pop mov mov jmp cmp movb lea jle mov cmp je movsbl inc jmp push pop mov inc dec cmp jg mov cmp mov jl cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp lea push call inc push push push call add xor pop pop pop pop ret push mov push mov movzwl push mov push push shr and mov and mov mov mov movzwl mov and test mov je cmp je add jmp mov jmp xor cmp jne cmp jne mov mov mov mov jmp add mov movzwl mov shr shl or or mov shl test mov mov jne mov mov mov add shr or add add test mov mov je mov or pop pop mov pop leave ret push mov sub mov xor mov mov push mov push mov push lea push lea push call pop pop lea push push push sub lea mov movsl movsl movsw call mov mov movsbl mov movswl mov lea push pushl push call add test je xor push push push push push call add mov pop mov pop mov xor pop call leave ret int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret push call pop ret push mov mov mov and and test push je push mov xor cmp je push push call pop pop mov call push pop push push push push push mov call add mov pop jmp mov test push pushl je call mov jmp call pop pop xor pop pop ret push mov sub mov xor mov push lea push push pushl movb call test jne or jmp lea push call pop mov xor call leave ret push mov sub mov xor mov mov mov mov mov push mov mov push mov mov push xor cmp mov mov mov je mov lea push push call test mov je cmpl jne lea push pushl call test je cmpl jne mov cmp movl jne pushl call mov pop inc cmp jle cmp ja lea cmp ja call mov cmp je movl jmp push push pushl pushl push pushl call mov cmp jne xor jmp push call cmp pop je movl add mov jmp mov cmp je lea push push pushl call add push pushl pushl pushl push pushl call test je mov cmp je push push pushl push push pushl push pushl call test je mov jmp cmp mov jne push push push push push pushl push pushl call mov cmp je push push call cmp pop pop mov je push push push push push pushl push pushl call cmp jne pushl call pop mov jmp cmpl je mov mov pushl call pop mov lea pop pop pop mov xor call leave ret mov push xor cmp push push jl cmp jae mov sar mov lea mov and shl add testb je cmpl je cmpl jne sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp call movl call mov or pop pop pop ret mov cmp jne call andl call movl or ret push xor cmp jl cmp jae mov and sar mov shl add testb jne call mov call push push push push push movl call add or pop ret mov pop ret push push call mov mov sar mov and shl add movl xor cmp jne push call pop mov cmp jne push lea push call pop pop test jne mov incl movl call cmp je mov sar and shl mov lea push call mov call ret xor mov push call pop ret mov mov and sar mov shl lea push call ret push mov sub mov xor mov push xor cmp je cmpl jne call mov cmp jne or jmp push lea push push lea push push call test jne cmpl jne call cmp jne mov push push push lea push push lea push push call push call mov cmp je push lea push push lea push push call test je mov mov xor pop call leave ret movl jmp push push call xor mov push call pop mov push pop mov cmp jge mov shl mov add cmp je mov testb je push call pop cmp je incl cmp jl mov mov add push call mov pushl call pop mov mov inc jmp movl call mov call ret push call pop ret push push mov mov mov and xor cmp jne test je mov push mov sub test jle push push push call pop push call add cmp jne mov test jns and mov jmp orl or pop mov andl mov pop mov pop ret push mov test jne push call pop pop ret push call test pop je or pop ret testw je push call push call pop pop neg sbb pop ret xor pop ret push push call xor mov mov push call pop mov xor mov cmp jge mov lea cmp je mov testb je push push call pop pop xor inc mov mov mov mov test je cmp jne push call pop cmp je incl jmp cmp jne test je push call pop cmp jne or mov call inc jmp xor mov mov pushl push call pop pop ret movl call cmpl mov je mov call ret push call pop ret push call pop ret push mov sub mov movzwl push mov and mov mov mov mov movzwl and sub shl cmp push mov mov jne xor xor cmp jne inc cmp jl xor jmp xor lea stos stos push stos pop jmp andl push lea lea movsl movsl movsl mov dec lea mov cltd and add sar mov and mov mov jns dec or inc lea push xor pop sub inc shl mov test je mov or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl sub xor inc shl lea mov add mov mov cmp jb cmp jmp test je andl lea mov lea cmp mov jb cmp jae movl dec mov mov mov jns mov mov or shl and mov inc cmp jge push pop lea sub xor rep cmpl je inc mov mov sub cmp jge xor lea stos stos stos jmp cmp jg sub lea mov lea movsl cltd and add movsl mov sar and movsl jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl dec sub test jge mov dec lea mov cltd and add sar mov and mov jns dec or inc push pop sub xor inc shl lea mov test je or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl xor sub inc shl lea mov lea cmp jb cmp jae movl mov mov jmp test je lea mov lea xor cmp jb cmp jae xor inc mov mov dec jns mov or shl and mov inc cmp jge push pop lea sub xor rep mov inc mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl dec sub test jge push xor pop jmp cmp mov jl xor lea stos stos stos orl mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl dec sub test jge mov mov lea xor inc jmp mov andl add mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl dec sub test jge xor pop push pop sub shl mov neg sbb and or mov or cmp jne mov mov mov mov jmp cmp jne mov mov pop pop leave ret push mov sub mov movzwl push mov and mov mov mov mov movzwl and sub shl cmp push mov mov jne xor xor cmp jne inc cmp jl xor jmp xor lea stos stos push stos pop jmp andl push lea lea movsl movsl movsl mov dec lea mov cltd and add sar mov and mov mov jns dec or inc lea push xor pop sub inc shl mov test je mov or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl sub xor inc shl lea mov add mov mov cmp jb cmp jmp test je andl lea mov lea cmp mov jb cmp jae movl dec mov mov mov jns mov mov or shl and mov inc cmp jge push pop lea sub xor rep cmpl je inc mov mov sub cmp jge xor lea stos stos stos jmp cmp jg sub lea mov lea movsl cltd and add movsl mov sar and movsl jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl dec sub test jge mov dec lea mov cltd and add sar mov and mov jns dec or inc push pop sub xor inc shl lea mov test je or shl not test jmp cmpl jne inc cmp jl jmp mov cltd push pop and add sar and jns dec or inc andl xor sub inc shl lea mov lea cmp jb cmp jae movl mov mov jmp test je lea mov lea xor cmp jb cmp jae xor inc mov mov dec jns mov or shl and mov inc cmp jge push pop lea sub xor rep mov inc mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl dec sub test jge push xor pop jmp cmp mov jl xor lea stos stos stos orl mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov lea mov mov and mov mov shr mov or mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl dec sub test jge mov mov lea xor inc jmp mov andl add mov cltd and add mov sar and jns dec or inc andl andl or mov shl movl sub not mov mov mov and mov mov shr mov or mov mov mov shl incl cmpl mov jl mov push shl lea pop sub cmp jl mov mov jmp andl dec sub test jge xor pop push pop sub shl mov neg sbb and or mov or cmp jne mov mov mov mov jmp cmp jne mov mov pop pop leave ret push mov sub mov xor mov mov push xor push xor mov mov inc xor cmp push mov lea mov mov mov mov mov mov mov mov mov jne call push push push push push movl call add xor jmp mov mov mov cmp je cmp je cmp je cmp jne inc jmp mov mov inc cmp ja jmp mov sub cmp ja push pop dec jmp mov mov mov mov cmp jne push pop jmp movsbl sub je dec dec je sub jne mov jmp push pop movl jmp andl push pop jmp mov sub cmp mov jbe mov mov mov mov cmp jne push jmp cmp je cmp je cmp je cmp jle cmp jle cmp jle cmp jg push jmp dec push jmp mov sub cmp jbe mov mov mov mov cmp je cmp je mov jmp mov jmp cmp jg cmpl jae incl sub mov inc jmp incl mov inc cmp jge mov mov mov mov cmp je cmp je cmp je jmp cmpl mov mov jne jmp decl mov inc cmp je jmp cmp jg cmpl jae incl sub mov inc decl mov inc cmp jge jmp sub cmp mov ja push jmp lea mov mov sub cmp ja push jmp movsbl sub je dec dec je sub jne push jmp orl push pop jmp push jmp mov jmp mov inc cmp je sub cmp jbe dec jmp mov sub cmp jbe cmp jmp cmpl je movsbl sub lea mov je dec dec je mov cmpl mov mov je push pop cmp jbe cmpb jl incb dec incl mov cmpl jbe jmp push pop dec cmp jne jmp mov xor jmp cmp jg imul movsbl lea cmp jg mov inc cmp jge jmp mov mov jmp cmp jg mov inc cmp jge jmp decl incl dec cmpb je lea push pushl lea push call mov xor add cmp jge neg add cmp jne add cmp jne sub cmp jg cmp jl mov sub cmp mov je jge neg mov mov sub cmp jne mov cmp je mov sarl add and test mov je imul add mov cmpw mov jb mov lea movsl movsl movsl decl mov lea mov movzwl mov xor mov mov mov mov mov mov xor and and and cmp lea movzwl jae cmp jae cmp ja cmp ja xor mov mov jmp test jne inc testl jne cmpl jne cmpl jne and jmp xor cmp jne inc testl jne cmp jne cmp jne mov mov mov jmp and lea movl mov mov add test mov jle lea add mov mov mov mov movzwl movzwl andl imul mov lea cmp jb cmp jae movl cmpl mov je incw addl subl decl cmpl jg mov inc inc incl decl cmpl jg add test jle testl jne mov mov shll shr mov add or mov shr add or add test mov mov jg test jg add test jge mov neg movzwl add testb je incl mov mov mov shrl shl shr or mov shl shr or dec mov mov jne cmp je orw cmpw ja mov and cmp jne cmpl jne andl cmpl jne andl cmpw jne movw inc jmp incw jmp incl jmp incl cmp mov jae mov mov mov mov mov or mov mov jmp neg sbb andl and add andl mov cmpl jne mov movzwl mov mov shr jmp movl jmp xor mov mov xor movl jmp movl xor xor xor xor mov or mov mov mov mov mov mov pop pop xor pop call leave ret add inc add stos inc add stos inc add inc add stos inc add lods inc add lods inc add stos inc add in sub mov xor mov push mov push push lea lea movsl movsl movsw mov mov mov and and test mov movb movb movb movb movb movb movb movb movb movb movb movb movl mov je movb jmp movb test mov mov jne test jne test jne and cmp setne dec and add mov movb movb movb xor inc jmp cmp jne mov cmp movw jne test je test jne push jmp test je cmp jne test jne push jmp cmp jne test jne push lea push push call add xor test je push push push push push call add movb jmp push lea push push call add xor test je push push push push push call add movb xor jmp movzwl mov imul shr mov shr lea imul lea sar movzwl movswl mov xor mov neg sub cmp mov mov mov mov mov je jge mov neg sub mov cmp je addl mov and sar test je imul add cmpw mov jb mov lea movsl movsl lea movsl decl mov mov movzwl mov xor mov mov xor and and mov mov mov mov and cmp lea movzwl jae cmp jae cmp ja cmp ja xor mov mov mov jmp xor cmp jne inc testl jne cmp jne cmp jne mov jmp cmp jne mov inc testl jne cmp jne cmp jne mov mov mov jmp lea mov mov movl mov mov add test mov jle lea mov mov add mov mov mov movzwl movzwl mov imul andl lea cmp jb cmp jae movl cmpl mov mov je incw addl subl decl cmpl jg inc inc incl decl cmpl mov jg add test jle testl jne mov mov mov shll shr add or mov shr add or add test mov mov jg test jg add test jge mov neg movzwl mov add testb je incl mov mov mov shrl shl shr or mov shl shr or decl mov mov jne cmpl je orw cmpw ja mov and cmp jne cmpl jne andl cmpl jne andl cmpw jne movw inc jmp incw jmp incl jmp incl cmp jae mov mov mov mov mov or mov mov jmp neg sbb andl and add andl mov test jne xor mov shr cmp mov jb mov incl movzwl mov xor and and and cmp lea mov mov mov mov movzwl jae cmp jae cmp ja cmp ja mov jmp cmp jne inc testl jne cmp jne cmp jne mov jmp cmp jne inc testl jne cmp jne cmp je andl lea movl mov mov add test mov jle lea lea mov mov mov mov movzwl movzwl andl imul mov lea cmp jb cmp jae movl cmpl mov je incw addl subl decl cmpl jg inc inc incl decl cmpl jg add xor cmp jle testl jne mov mov mov shll shr add or mov shr add or add cmp mov mov jg cmp jg add cmp jge mov neg movzwl add testb je incl mov mov mov shrl shl shr or mov shl shr or dec mov mov jne cmp je orw cmpw ja mov and cmp jne cmpl jne cmpl mov jne cmpw mov jne movw inc jmp incw jmp incl jmp incl cmp jb neg mov mov sbb and add mov xor jmp mov mov mov mov mov or mov mov jmp neg sbb and add mov mov mov testb mov mov mov je movswl add cmp jg andw cmpw movb setne dec and add mov movb movb jmp push pop cmp jle mov mov shr push sub mov pop mov mov mov shll shr add or mov shr add or dec mov mov jne test jge neg and jle mov mov mov shrl shl shr or mov shl shr or dec test mov mov jg mov inc test lea mov mov jle mov mov lea lea movsl movsl movsl shll mov shll shr lea or mov mov shr add or mov lea shr lea mov shr or mov or lea cmp jb cmp jae lea xor cmp jb cmp jae xor inc test mov je inc mov lea cmp mov jb cmp jae inc add shr add or lea mov mov mov shr add add mov shr or mov inc decl cmpl mov movb jg dec mov dec cmp jge mov jmp cmpb jne movb dec cmp jae cmp mov jae inc incw incb sub sub movsbl mov movb mov mov pop pop xor pop call leave ret cmpb jne dec cmp jae cmp mov jae andw cmpw movb setne dec and add mov movb movb jmp xor test je inc test je or test je or test je or test je or test je or mov mov and push mov je cmp je cmp je cmp jne or jmp or jmp or mov and je cmp jne or jmp or test pop je or ret xor test je mov test push push push mov je or test je or test je or test je or test mov je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or mov pop and cmp pop pop je cmp je cmp jne or ret or ret or ret sub push push push push fstcw mov xor test je push pop test je or test je or test je or test je or test je or movzwl mov mov and mov mov je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or test je or mov mov mov not and and or cmp mov je mov call movzwl mov fldcw fstcw mov xor test je push pop test je or test je or test je or test je or test je or movzwl mov and je cmp je cmp je cmp jne or jmp or jmp or and je cmp jne or jmp or test je or mov mov cmpl je and mov stmxcsr mov xor test jns push pop test je or test je or test je or test je or test je or mov mov and je cmp je cmp je cmp jne or jmp or jmp or mov and sub je sub je sub jne or jmp or jmp or mov and not and or cmp jne mov jmp call push mov call pop stmxcsr mov xor test jns push pop mov test je or test je or test je or test je or mov test je or mov and je cmp je cmp je cmp jne or jmp or jmp or and sub je sub je sub jne or jmp or jmp or mov mov mov xor or test je or pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret xor push push push push push push push call mov ret mov cmp push mov je cmp je push call mov cmp je cmp je push call pop ret push push mov push xor or cmp jne call push push push push push movl call add or jmp testb je push call push mov call push call push call add test jge or jmp mov cmp je push call pop mov mov mov pop pop pop ret push push call orl xor mov xor cmp setne cmp jne call movl push push push push push call add or jmp testb je mov mov call ret push call pop mov push call pop mov movl call jmp mov push call pop ret push push call mov cmp jne call movl or jmp xor cmp jl cmp jb call movl push push push push push call add jmp mov sar lea mov and shl mov movzbl and je push call pop mov mov testb je pushl call pop push call test jne call mov jmp mov cmp je call mov mov call movl orl movl call mov call ret pushl call pop ret push mov sub mov xor mov mov push push xor cmp push movl mov mov mov jbe mov mov mov lea movsl movsl movsl mov shr lea lea or mov mov shr add or mov mov andl mov shr add shr or mov add add or lea cmp mov mov mov jb cmp jae movl xor cmp mov je lea cmp jb cmp jae xor inc test mov je inc mov mov mov lea xor cmp jb cmp jae xor inc test mov je incl mov add andl lea mov shr lea or mov mov shr lea mov or mov mov mov movsbl lea cmp mov jb cmp jae movl cmpl mov je lea xor cmp jb cmp jae xor inc test mov je inc mov decl incl cmpl ja xor jmp mov mov shr mov mov mov shl shr or shl addl mov mov cmp je mov test jne mov mov addl mov add shr mov lea or mov mov shr add or test mov mov je mov mov mov pop pop xor pop call leave ret push push call xor cmp je testb je cmp je mov ldmxcsr jmp mov mov mov cmp je cmp je xor ret xor inc ret mov andl andl ldmxcsr movl jmp andl ldmxcsr call ret push mov push push call cmp pop je cmp mov jne testb jne cmp jne testb je push call push mov call cmp pop pop je push call pop push call test jne call mov jmp xor push call mov sar mov and shl test pop movb je push call pop or jmp xor pop pop ret push push call mov cmp jne call andl call movl or jmp xor cmp jl cmp jb call mov call movl push push push push push call add jmp mov sar lea mov and shl mov movzbl and je push call pop mov mov testb je pushl call pop mov jmp call movl orl movl call mov call ret pushl call pop ret push mov mov test je test je pushl call andl xor pop mov mov mov pop ret jmp jmp jmp jmp push mov mov test je push call andl pop andl andl pop ret push push mov push push call add mov pop ret push push call andl push call andl jmp mov mov mov xor cmp sete mov ret mov movl movl mov call ret mov test jne mov jmp cmpl jne andl lea call ret mov test jl cmp jge mov lea ret push push push push call int3 mov test jl cmp jge mov lea ret push push push push call int3 push mov lea call xor mov mov mov mov pop ret push mov test jne mov jmp mov test je cmp jne push xor cmp jle push lea push mov call movzwl pushl push call inc cmp jl pop lea call lea push call andl pop xor pop ret push mov cmpb je pushl call movb pop ret push mov lea call xor mov mov mov mov pop ret push mov lea push call lea pop jmp push mov push push push mov lea push mov call mov mov cmp movb jg test jl cmp jne mov lea call mov jmp push lea call mov jmp lea call xor pop leave ret push mov call push movl call test jge movb andl mov pop ret push lea sub mov xor mov push mov call mov push mov mov lea push push movl movb call add lea push movl call cmpl jne cmpl jb jmp cmpl jne cmpl ja jne cmpl jbe movb lea movl movl call test jge movb mov mov xor pop call add leave ret push pushl mov push call lea pop jmp cmpb movl je mov test je push call ret pushl push pushl call ret cmpl je pushl push pushl call ret push mov xor cmp jne pushl mov call jmp cmp jne pushl mov call xor jmp pushl pushl push pushl call pop ret pushl push pushl call ret push mov call testb je push call pop mov pop ret mov mov mov movl xor movl mov mov mov mov mov ret mov mov jmp xor lea inc lock lea ret mov ret testb push mov movl je push call pop mov pop ret mov mov or sub cmp jae mov ret add mov mov xor ret push mov push mov push pushl add and lea push push mov call add test jl pushl lea push push call add test jl mov pushl mov call test je dec andl mov movl mov jmp xor pop pop pop ret push mov push mov push pushl add and lea push push mov call add test jl pushl lea push push call add test jl pushl mov pushl mov call test je dec mov jmp xor pop pop pop ret push mov sub mov xor mov push xor call push lea push push push call test je mov test lea je imul movsbl inc lea mov test jne test jne call mov mov mov xor pop call leave ret push pop ret push mov sub mov xor mov lea push movl call cmpl jne cmpl mov jae mov push push call call mov xor call leave ret int3 jmp jmp pushl call ret mov lea mov xor call mov jmp pushl call ret mov lea mov xor call mov jmp mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp push pushl call pop pop ret mov lea mov xor call mov jmp mov add jmp mov add jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp mov add jmp mov add jmp pushl call ret pushl call ret mov lea mov xor call mov jmp pushl call ret mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov xor call mov jmp lea jmp lea jmp mov lea mov xor call mov jmp mov add jmp mov lea mov xor call mov jmp pushl call ret mov lea mov xor call mov jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov add jmp mov add jmp mov add jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp pushl call ret mov lea mov xor call mov jmp pushl pushl call ret mov lea mov xor call mov jmp pushl call pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov xor call mov jmp lea jmp lea jmp lea jmp lea jmp mov lea mov xor call mov jmp pushl call pop ret mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp pushl call pop ret mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov xor call mov jmp pushl call pop ret mov lea mov xor call mov jmp pushl call pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov jmp mov lea mov xor call mov jmp push call pop ret push call pop ret push call pop ret push call pop ret push call pop ret mov call push call pop ret mov jmp push call pop ret push call mov ret mov call xor push movl movl movl mov mov mov mov mov mov mov mov mov mov call pop ret mov call xor push movl movl movl movl mov mov mov mov mov mov mov mov mov call pop ret mov call orl xor push movl movl movl mov mov mov mov mov mov mov mov mov call pop ret mov call xor push movl movl movl movl mov mov mov mov mov mov mov mov mov call pop ret push call ret push mov call andl andl push movl movl call pop ret push mov call andl andl push movl movl call pop ret call mov ret mov call push call pop ret mov call push call pop ret call push movl mov movb call pop ret push mov call push call pop ret movl ret movl ret movl ret mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp movl ret movl ret mov jmp mov jmp mov jmp movl ret
 push mov sub push push push cld mov mov push pop lea rep mov and or mov lea mov pushl pushl pushl pushl mov call add pop pop pop mov pop ret mov push mov call cmpl movl jne cmpl jne mov mov mov pop ret movl jmp mov push mov push pushl mov call movl mov pop pop ret mov push mov pushl call pop pop ret mov push mov pushl call pop pop ret mov push mov sub push lea call push lea push call int3 mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov sub pushl call pop mov cmpl jne pushl call pop test jne mov and jne mov or mov mov call push call pop push lea call push lea push call jmp mov leave ret mov push mov pushl call pop pop ret mov push mov sub mov xor mov mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea movl mov mov push mov call mov xor call leave ret mov push mov pop jmp int3 int3 int3 int3 int3 int3 cmp jne ret jmp push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp mov push mov push mov push xor cmp jne xor jmp cmp jne call push pop mov push push push push push call add mov jmp cmp je cmp jb push pushl pushl call add jmp pushl push pushl call add cmp je cmp jae call push pop mov mov jmp push pop pop pop pop ret push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret int3 int3 int3 int3 int3 mov push mov sub mov push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne lea mov mov mov mov mov cmp je jmp lea lea mov lea mov mov mov test je mov call movb test jl jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je mov push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je mov push push mov call jmp mov push mov push mov call testb je push call pop mov pop pop ret push push call mov mov cmp jne pushl call pop jmp push call pop andl mov mov mov mov lea push lea push pushl call add mov mov mov mov mov movl call mov call ret push call pop ret mov push mov pushl call neg sbb neg pop dec pop ret mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret push call pop mov mov test jne inc ret andl xor ret mov push mov push xor push push cmp jne cmp jle decl mov push mov jmp xor jmp cmpl jne mov mov mov mov push mov jmp cmp je push call push push push call test jne jmp movl mov push pop test je push call jmp push push movl call pop pop test jne push push call pop mov xor pop cmp jne push push call cmp je push call pop test je pushl push pushl call incl jmp push call push push push call test jne mov cmp je push call pop jmp mov test je mov add jmp mov test je call sub cmp jae push call andl andl pop push push movl call xor inc pop pop pop pop ret push push call mov xor inc mov xor mov mov cmp jne cmp jne mov jmp cmp je cmp jne mov cmp je mov mov pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je mov movl pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmpl jne cmp jne movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov cmp je cmpl jne movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov mov cmp je cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov movl call mov call ret movl ret mov push mov cmpl jne call pop jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov push call push call push call push call leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test jbe mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret push push call andl mov push call pop test je mov sub push push call pop pop test je mov shr not and movl jmp mov mov mov xor cmp sete mov ret mov movl xor call ret mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret mov push mov pushl pushl pushl pushl push push call add pop ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp je test jne mov mov not mov pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea push push mov push mov mov mov lea push ret int3 push mov push mov mov lea sub push push push mov mov push mov movl mov lea mov ret mov mov pop pop pop pop leave push ret mov ret push mov sub andl lea mov call lea mov mov call add mov mov add mov call lea push lea push push push call xor cmp setne mov pop ret push mov sub mov push push push mov add mov mov cmp je movl lea mov mov jmp movzwl lea cmp ja add movzwl mov imul and shl add imul xor add movzwl test jne cmp je mov cmp jae mov lea call cmpw lea je cmpw je add cmpw jne xor lea mov mov mov test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne cmp je mov cmp jne xor pop pop pop mov pop ret mov jmp push mov sub push call mov cmpl jne xor inc jmp lea mov call lea push call lea mov mov call lea push call cmpl mov je test je call jmp xor pop mov pop ret push push push call mov mov mov andl andl call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov test je mov mov call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov xor movl inc jmp xor pop pop pop ret push mov sub push mov lea call call lea push call mov mov call pop mov pop ret push mov and sub push push mov mov push test je movzwl mov xor cmp jne mov add mov mov mov xor add cmp jne cmp je mov mov add mov add mov add mov xor mov cmp jbe mov mov mov add movl mov mov mov mov test mov je mov mov mov test jle movzbl mov imul and shl add imul mov xor mov inc dec mov mov mov test jne mov mov mov mov cmp mov je inc add mov cmp jb xor pop pop pop mov pop ret mov mov movzwl mov add cmp jb mov add cmp jae mov xor mov test je xor cmp jne mov inc inc mov test jne test jle mov mov mov mov test jle movzbl lea cmp ja add movzwl mov imul and shl add imul xor inc dec mov cmpb jne mov call mov mov test jne mov mov mov call mov lea push push lea push call test jne lea push lea push push push call neg sbb not and lea push call mov test je inc add mov test je mov mov test jle movzbl mov imul and shl add imul xor inc mov dec mov test jne mov mov mov mov call jmp mov jmp movzwl mov test je sub lea movzwl mov test jne ret xor jmp add cmp jne movzwl mov test je sub lea movzwl mov test jne ret test jne xor ret xor mov jmp lea inc cmp jne ret mov call andl movl orl push call pop mov mov mov pop ret mov call andl movl movl movl orl push call pop mov mov mov pop ret mov call andl movl movl movl orl push call pop mov mov mov pop ret push call pop ret push call pop ret push call pop ret push call pop ret push call pop ret push mov call push call pop ret mov call orl push call pop mov mov mov pop ret ret movl ret push mov push or mov lea lock jne mov call lea lock dec jne mov mov pop pop jmp pop pop ret xor ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret push mov mov mov mov mov pop ret push mov push push pushl mov lea push call mov mov cmp jne mov cmp jne xor inc jmp xor mov pop ret push mov mov cmp jne mov cmp jne xor inc jmp xor pop ret mov ret mov call push andl mov push call andl mov movl mov mov mov pop ret mov call push push mov mov orl testb movl je push call pop mov mov pop mov mov pop ret mov call push mov orl movl mov mov mov pop ret mov ret mov call push andl push xor inc cmp jne mov push call jmp pushl pushl call andl mov mov mov pop mov mov pop ret mov call push push mov mov orl testb movl je push call pop mov mov pop mov mov pop ret mov ret push mov mov mov mov movl pop ret mov call push mov orl push push call mov mov mov pop ret mov ret mov ret mov call sub push push mov call pop mov andl test je pushl mov pushl call jmp xor orl lea andl andl push call movl movzbl push lea push push lea mov push call orl mov test je call mov mov pop mov pop ret mov call push mov orl call mov mov mov pop ret push mov and sub andl push push mov push mov mov lea mov call xor inc test je lea mov call test je cmpb lea mov push push mov je call jmp call test je mov jmp xor push pop mov test je lea mov call mov test je mov jmp xor dec mov jne test je lea mov call test je mov jmp xor cmpb je test je lea mov call test je cmpb lea mov push push mov je call jmp call test je lea mov call test je lea mov call test je lea mov call test je lea mov call test je lea mov call test jne xor lea mov call lea mov call pop pop mov pop mov pop ret test je lea mov call jmp push mov push mov push mov mov sub cmp jae xor jmp mov add push push pushl call add mov add pop pop pop ret push mov push mov push mov mov sub cmp jae xor jmp mov add push pushl push call add mov add pop pop pop ret mov call push push mov mov orl testb movl je push call pop mov mov pop mov mov pop ret mov call push mov orl movl mov mov mov pop ret mov call sub push push push mov xor mov mov mov movl mov mov lea call movb lea lea movl xor movl mov mov mov mov movb mov mov mov movb mov mov mov movb lea movl mov mov mov movb lea movl mov mov mov movb xor mov mov mov movw mov mov movl movb mov movb mov movb mov mov mov movb lea mov mov mov mov call mov movb lea call movb lea call movb lea call movb lea xor movl xor mov mov mov movb mov mov mov movb mov mov mov mov call mov test je push call pop mov movb test je push mov call mov jmp xor movb mov movb andl mov cmp je test je mov push call mov movb lea push lea movl mov call movb lea push lea lea push mov call movb lea call lea movl push lea mov call movb lea push lea mov push call movb lea call lea movl push lea mov call movb lea push lea mov push call movb lea call lea movl push lea mov call movb lea push lea mov push call movb lea call push call mov pop mov movb test je lea movl push lea mov call movb xor lea inc push mov mov call jmp xor movl mov movl test je and lea mov call lea call lea call mov xor push push push call mov orl mov mov pop pop pop mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push push push push mov mov movl lea mov movb xor push push call movb lea mov movb push push call movb lea call mov lea call orl lea mov orl push push call mov pop pop mov mov pop ret mov call push mov orl mov orl call mov mov mov pop ret mov call push mov orl call mov mov mov pop ret mov call sub push push push mov mov mov movl movl movb mov test je mov push call lea call mov mov cmpl je pushl call xor mov mov sub sar cmp mov jae mov push pushl call test jne mov pushl call inc jmp mov movl jmp mov ret movl mov movb lea call movb lea mov movb push push call movb lea mov movb call movb lea mov movb call movb lea mov movb call movb lea mov movb mov movb call movb lea call movb mov test je mov push call movb mov test je mov push call movb lea call movb lea mov movb call orl lea call mov mov pop pop pop mov pop ret mov call sub push push mov lea push call mov lea push call xor mov mov mov mov mov movb movl mov mov mov movb lea lea mov mov mov lea push call test setne movb mov orl lea call mov mov pop pop pop mov mov pop ret push mov and mov push push push mov sub push push mov push mov call test je movzbl mov mov sub je mov mov jmp andl mov lea sub cmpl jb mov lea call mov push pushl push call lea call andl lea call mov lea push push call test je lea call mov lea push call mov sub je mov jmp xor mov mov sub push mov push call test je lea movl push lea mov call movb lea mov push mov call push lea call movb lea call cmpb mov jne call jmp call call test je mov push call pop call orl lea call mov pop pop mov pop mov pop ret push push call mov movb mov push mov call pop pop ret push mov push lea call pushl pushl call mov mov mov test je cmpb mov sete movzbl push call mov test je mov push call andl mov mov call test je call test je mov push call pop mov pop jmp pop ret push mov and mov push push push mov sub push push push mov xor push lea call cmpb lea mov mov jne call jmp push call push mov call cmp je lea movl push lea mov call mov lea mov lea push mov call push mov call orl lea call lea movl push lea mov call movl lea mov push mov call push mov call orl lea call cmpb jne xor cmp jbe mov lea cmpl jb mov mov push mov call jmp mov sub je mov mov mov sub push mov push call test jne mov call mov pop pop mov pop mov pop ret mov call sub push push mov xor push mov and or jne call mov and or je mov lea cmpl jb mov movzwl test jne mov pushl call mov pop test jne mov jmp push call pop mov mov test je push mov call jmp mov orl push lea mov mov call movl lea push lea call orl mov test je call mov cmpl jne mov call mov push pop and or je lea cmpl jb mov mov call push lea mov mov call mov lea push lea call orl mov test je call mov cmp jne mov call mov mov imul mov push push call pop pop mov pop pop mov pop mov pop ret jmp mov push mov call pop ret mov push mov call pop ret movb mov push mov call pop ret mov call push push push push push mov mov mov andl cmpb jne pushl pushl call mov mov cmpb je cmpb jne mov call orl mov mov pop pop pop mov pop ret mov mov push call mov test je mov push mov call mov push mov call jmp mov movb call mov call movl mov ret mov ret mov call sub push push push mov mov mov andl cmpb jne mov mov mov push call movb movb push call pop pop mov movb test je lea push pushl mov call jmp xor movb push lea call orl mov mov pop pop pop mov pop ret call mov call mov ret mov call push push push push push mov mov mov andl lea mov mov call mov push lea call push mov call mov call mov cmp jne movb call jmp call test jne mov call orl mov mov pop pop pop mov pop ret call mov call mov ret push mov cmpb je xor pop ret xor cmp jne mov and or je mov test je cmp je movzbl mov jmp dec mov cmp jne imul push call jmp mov mov call mov pop ret push mov test je push movb call mov push mov mov call pop ret mov call push push push push mov andl mov mov test je push mov call orl mov mov pop pop pop mov pop ret mov ret push mov push xor mov sub sar test je push mov mov shl push pushl call cmp je test jne mov pushl call mov mov add lea sub and push push push call add addl jmp inc mov sub sar cmp jb pop pop pop ret push mov push mov xor mov movl mov mov cmp je mov push lea mov inc test jne sub pop push push mov call mov pop pop ret push push call ret push push call ret mov call push push mov mov andl mov test je mov cmp setne movzbl push call andl orl mov call mov pop mov mov pop ret mov call sub push push mov push mov andl mov mov mov cmp jne cmp jne pushl call mov mov mov mov mov mov andl jmp lea call push lea mov push call mov cmp jne orl pushl call pop mov pop pop pop mov mov pop ret mov test jne ret push mov cmpl je pushl call xor pop mov mov mov pop ret mov call push mov push mov mov cmp jae cmp ja sub sar cmp jne push call mov mov andl test je mov mov orl jmp cmp jne push call mov test je mov mov addl mov pop pop mov mov pop ret push mov push push mov test je lea call mov call push call pop pop mov pop ret push mov push mov push push mov mov cmp je test je lea call mov call push call pop mov pop pop pop pop ret mov test je mov push call ret mov test je mov push call ret push mov push mov push mov mov cmp je test je mov push call mov pop pop pop ret push mov push mov push mov mov cmp jae cmp ja sub sar cmp jne push call mov lea push jmp cmp jne push call push pushl call addl pop pop pop ret push mov cmpl je pushl pushl call pushl call xor pop mov mov mov pop ret mov call push mov orl pushl call pop mov mov mov pop ret mov call push mov orl pushl call pop mov mov mov pop ret push mov mov push mov push push mov mov cmp jb sub cmp jae mov cmp jne lea cmp jb cmpl mov jb mov jmp mov push movb push mov call jmp push push call test je cmpl jb mov cmpl jb mov jmp mov test je mov push add push push call add cmpl mov jb mov jmp mov movb pop mov pop pop pop ret push lea movl push call int3 push mov cmpb push push mov mov je cmpl jb push mov test je push push push call add push call pop pop mov movl movb pop pop pop ret push mov cmpb push push mov mov je cmpl jb push mov test je lea push push push call add push call pop pop mov xor movl mov pop pop pop ret push mov mov test je mov cmp setne movzbl push call andl pop ret push mov push push mov mov push mov cmpb jne pushl mov call mov mov test je call push call cmpb mov pop je pop pop pop pop ret pushl call pop ret mov mov push mov sub sar cmp jae sub push mov sar mov sub cmp jb sub inc sar mov shr sub cmp pop jae xor jmp add cmp jae mov push call pop ret call int3 push mov push mov cmp je add mov test je call add lea cmp jne pop pop ret mov mov push mov sub sar cmp jae sub push mov sar mov sub cmp jb sub inc sar mov shr sub cmp pop jae xor jmp add cmp jae mov push call pop ret call int3 push mov push push mov mov test je cmpl jb mov jmp mov cmp jb cmpl jb mov mov add cmp jbe cmpl jb mov jmp mov pushl sub mov push push call jmp push mov push push mov call test je cmpl jb mov jmp mov test je push push push call add cmpl mov jb mov jmp mov movb mov pop pop pop pop ret push mov mov push mov push mov cmp ja andl cmpl jb mov jmp mov movb jmp test je cmpl jb mov sub je push add push push call add cmpl mov jb mov jmp mov movb pop mov pop pop ret push mov push mov cmp ja cmp jae pushl push call jmp test jne and cmpl jb mov movb xor cmp pop sbb neg pop ret call int3 mov call push push push push push mov mov xor mov mov test je cmp ja shl push call pop mov mov test jne call andl mov sub and push pushl push call add orl mov sub sar cmpl je pushl call pop mov lea mov lea mov mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call push push push push push mov mov xor mov mov test je cmp ja mov shl push call pop mov mov test jne call andl pushl push push push mov mov call add orl mov sub sar mov cmpl je pushl pushl call pushl call pop lea mov mov lea mov mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 movl ret push mov testb push mov movl je push call pop mov pop pop ret mov call sub push push push mov mov mov mov or cmp jbe mov jmp mov mov shr mov xor movl divl cmp jbe push pop sub cmp ja lea jmp push pop andl lea push call mov orl jmp mov mov mov movb inc push call mov movl mov ret orl mov mov mov mov test je cmpl jb mov jmp mov test je push push push call add push push mov call movl test je mov mov orl mov mov cmp jb mov movb mov mov pop pop pop mov pop ret push push mov call push push call int3 push mov push push push mov push mov lea push call mov cmpb je mov jmp mov cmpb je mov jmp mov mov cmp jne cmpb mov jne mov mov mov cmp jne mov jmp cmp jne mov jmp mov mov cmp jne cmpb je mov jmp mov mov jmp mov mov cmpb je mov mov mov cmp jne cmpb je mov jmp mov mov jmp mov mov cmpb je mov mov jmp mov mov mov cmp jne mov jmp cmpb mov jne mov mov mov mov mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov mov mov cmpb jne jmp cmpb jne mov cmp jne mov cmpb jne movb mov push movb call mov mov cmpb jne mov cmpb jne mov cmpb je mov cmpb jne mov push movb movb mov call mov mov mov movb mov mov push movb call jmp cmpb jne movb mov push movb call mov mov cmpb jne mov cmpb jne mov cmpb jne movb mov mov mov cmp jne jmp mov cmpb jne mov push movb movb mov call mov mov mov movb mov mov push movb call movb mov test je call push call pop mov pop pop pop mov test je dec mov mov mov mov mov pop ret push mov mov xor test je cmp ja push call pop mov test je mov pop ret call int3 push mov mov push mov mov mov mov cmpb jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov pop pop ret push mov mov push mov mov mov mov cmpb jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov pop pop ret mov mov cmpb jne mov cmpb jne jmp mov mov cmpb je mov jmp mov cmp jne mov mov cmpb je mov mov ret mov call push push push push push mov push call pop mov test jne call movl mov xor mov lea movb test je mov mov lea movb test je mov mov orl movw mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call push push mov push mov mov test jne or mov andl push call push call pop orl mov push mov call movb movl cmpl jne push call pop test je andl andl jmp xor mov mov orl lea call mov mov pop mov mov pop ret mov call mov sub push mov push mov test jne or mov andl push call push call pop orl push mov call movb movl cmpl jne push call mov pop mov movb test je mov call movb andl movb jmp xor movb mov mov orl lea call mov mov pop pop mov mov pop ret mov call push push mov push mov push mov test jne or mov andl push call push call pop orl push mov call movb movl cmpl jne push call pop test je andl jmp xor mov mov orl lea call mov mov pop pop mov mov pop ret cmpb mov push push mov je call ret call ret cmpb mov push push mov je call ret call ret push mov push push push push mov mov lea mov sub mov call mov test je push pushl mov call mov mov jmp test je mov mov call test je mov jmp xor inc cmp jne mov pop pop pop mov pop ret mov call push push mov mov andl andl mov movb movl movb mov movl mov mov mov mov movb mov orl mov mov mov mov pop ret mov call mov sub push push xor mov mov test jne or mov mov push call push call pop orl mov push mov call movb movl cmpl jne push call pop mov movb test je mov call mov movb mov mov orl lea call mov mov pop mov pop mov pop ret mov call xor mov mov test je push mov mov mov cmp je mov mov mov mov mov mov mov mov pop orl mov mov mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov cmpb jne mov test je mov mov cmp sbb inc jmp mov mov cmp setb mov test je mov jmp mov jmp mov mov test je mov cmp jne pushl pushl push push lea push mov call mov mov mov movb mov mov pop pop pop mov pop ret lea call mov mov mov cmp jae pushl push push pushl jmp mov mov mov mov jmp xor push push call int3 mov cmpb je mov jmp mov cmpb jne jmp mov mov cmpb je mov jmp mov cmp jne mov mov cmpb je mov cmpb jne mov mov ret mov call push push push push push mov mov mov mov mov sub mov cmp jbe add mov mov mov pop pop pop mov pop ret jae sub add push mov call xor mov mov sub add push push pushl call add orl mov jmp mov cmpl je pushl call pop xor mov mov mov jmp xor push push call int3 push mov mov mov push mov sub cmp jae mov sub dec cmp jb sub or sub add push mov shr sub cmp jae xor jmp add pop cmp jae mov push call pop pop ret call int3 mov call push push push push push mov mov xor mov mov test je cmp ja push call pop mov mov test jne call andl mov sub push pushl push call add orl mov sub mov cmpl je pushl call pop lea mov mov add mov mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call push push push push push mov mov andl push call pop mov mov xor inc mov test je movl mov mov movb movl mov mov mov jmp xor mov movb mov test je call mov mov orl mov mov pop pop pop mov pop ret mov test je mov call push call pop push push call int3 mov call push push push push push mov mov andl push call pop mov mov xor inc mov test je movl mov mov movb movl mov mov mov jmp xor mov movb mov test je call mov mov orl mov mov pop pop pop mov pop ret mov test je mov push call push push call int3 push mov push push push mov cmpl jae pushl call incl mov mov mov mov cmp jne mov mov mov mov mov jmp cmpb je mov mov cmp jne mov jmp mov mov cmp jne mov mov mov jmp mov mov mov cmp jne mov cmpb je cmp jne mov mov push call mov mov movb mov mov movb mov pushl call jmp cmpb jne movb movb mov mov movb mov mov jmp cmp jne mov mov push call mov mov movb mov mov movb mov pushl call mov cmpb je mov pop pop mov movb mov mov pop pop ret call int3 push mov test je mov call push call pop pop ret test je mov push call ret mov test je mov push call ret mov call push push mov mov orl testb movl je push call pop mov mov pop mov mov pop ret mov call push push push mov mov movl lea push call movb lea call movb lea mov movb call movb lea call orl mov call push call pop mov mov pop mov mov pop ret mov call push push push push push mov call mov mov xor mov mov lea movb test je mov mov mov cmp je mov mov mov mov mov mov mov mov mov orl mov mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call sub push push push mov mov mov mov mov andl cmp je push push call add mov add mov jmp orl mov mov mov pop pop pop mov pop ret mov cmp je add mov test je call add lea cmp jne push push call int3 mov call push push push push push mov mov push call pop mov mov test jne call movl mov mov xor mov lea movb test je mov mov mov lea movb test je mov mov mov orl mov mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call mov push mov test jne push call mov pop test jne call mov andl test je movl movb movl mov mov mov mov movb orl mov mov pop mov mov pop ret mov mov jmp mov ret lea ret push mov push mov push mov call cmpb je push call pop pop pop ret mov call push push mov mov movl orl testb movl je push call pop mov mov pop mov mov pop ret mov jmp mov call push push mov xor push mov xor mov movl mov mov cmp je mov push lea mov add cmp jne mov sub sar pop push push mov call orl mov mov pop pop mov mov pop ret cmpl je pushl call pop ret mov call push andl pushl mov call andl mov movl mov mov mov pop ret push mov push mov push mov mov call sub mov cmp jae xor jmp mov push mov call add push pushl call add mov add pop pop pop ret push mov push pushl mov pushl mov call mov mov call mov mov pop pop ret mov mov jmp mov call push mov orl call mov mov mov pop ret mov call sub andl push mov lea push call xor inc mov lea push pushl push call test lea push je mov call mov movb lea call mov mov pop mov pop mov pop ret pushl mov call test je mov lea push call jmp push lea movl push call int3 mov call push mov orl add call mov mov mov pop ret push mov push pushl mov call test jne mov mov sub je dec jne push pushl mov call jmp push lea mov push call mov call pop pop ret push mov mov push mov mov mov lea mov mov mov mov mov mov lea push call mov pop pop ret mov call sub push push mov push mov mov xor mov mov movl mov mov movl lea mov mov mov mov call mov movb lea lea call test jne push lea movl push call mov mov mov cmp je lea mov mov add mov lea push call movb lea push pushl mov call movb lea call lea call mov cmp jne movb lea call orl mov pop mov pop mov pop mov pop ret mov call push mov orl add mov orl add call mov mov mov pop ret push mov push pushl mov call test jne pushl mov call test jne xor jmp xor inc pop pop ret push mov and mov push push push mov sub push pushl mov call test je xor jmp andl andl call mov movl lea push mov call pushl lea push lea call mov call lea mov push call orl lea call mov mov mov pop mov pop ret push mov and mov push push push mov sub push push push mov mov push call test jne push mov mov call test jne push lea movl push call lea mov push lea push call lea mov add push call andl lea push push mov call mov mov mov jmp cmp je lea call mov cmp jne jmp push lea mov push call orl lea call mov pop pop mov pop mov pop ret mov call push mov push mov mov movl lea mov mov mov mov mov mov mov mov lea push call orl mov mov pop mov mov pop ret push mov and push push mov push mov sub andl andl push mov call mov movl lea push mov call mov mov mov cmp je add lea push push lea call mov call lea call mov cmp jne lea mov push call mov call orl lea call mov mov pop mov pop ret push mov and push push mov push mov sub push lea push call andl mov mov movb mov andl movl mov movb lea lea movb lea mov call test jne push lea movl push call movb mov orl lea call mov mov pop mov pop ret mov call push push push mov andl andl mov call andl mov pushl movl call mov mov mov cmp je lea add push mov push call mov call lea call mov cmp jne mov mov mov pop mov pop ret mov call sub orl push movl xor mov mov lea push add call movb lea push push push push lea call mov neg sbb xor mov lea push push call inc pop jne lea call mov orl lea call mov mov mov mov pop ret push mov and push push mov push mov sub andl andl push push mov call mov movl lea push mov call lea push lea push lea call mov cmp setne orl lea call mov mov pop mov pop mov pop ret push mov push push lea mov push lea push call mov xor cmp pop setne mov pop ret push mov and push push mov push mov sub andl andl push push mov call mov movl lea push mov call pushl lea pushl push call mov orl lea call mov mov pop mov pop mov pop ret mov call sub andl push push mov mov push mov call mov mov lea mov mov call pushl lea lea call movl lea mov call mov lea push push push mov push call mov add test jne push call jmp lea push call movl movb lea call mov mov pop pop mov pop mov pop ret mov call sub push mov lea push lea mov push call mov cmp je add lea push call andl lea mov push call testb je pushl lea push call movb mov push call movb lea call orl lea call mov jmp xor mov mov pop mov pop ret push mov push push mov mov call cmpl mov je pushl call pop cmpl mov jne mov add push pop rep pop pop pop ret push lea movl push call int3 push mov sub push mov push mov mov mov call cmp jb push lea push push lea call mov call pop pop mov pop ret push lea movl push call int3 push mov and push push mov push mov sub push lea push call andl cmpl je mov lea call mov test je push lea call mov mov mov cmp je movl lea call mov cmp jne orl lea call mov mov pop mov pop ret mov call sub push mov lea push call andl mov mov movb lea andl movl mov movb lea mov lea push lea movb push mov movl call test jne push lea movl push call mov lea call test je cmpb lea mov push push mov je call jmp call test je lea mov push call movb mov orl lea call mov pop mov pop mov pop ret mov call sub push push push push lea call xor mov mov mov movb lea movl mov mov movb lea mov lea push lea mov push mov mov call test jne movl push lea push call mov cmp je movl jmp mov lea call test je cmpb lea mov push push mov je call jmp call test je cmp jne mov mov orl lea call mov pop pop mov pop mov pop ret mov call sub orl push push push mov movl andl lea push call movb lea pushl mov call mov neg sbb movb lea push push call inc je movl push lea push call lea mov push call movb lea push push push push lea call mov neg sbb movb lea push push call inc je push call lea mov push call movb lea push push push push lea call mov neg sbb movb lea push push call inc je movl jmp pushl lea call movb lea push push lea push lea call mov call lea push lea call movb lea call orl lea call mov pop pop mov pop mov pop ret mov call sub push push push mov mov andl movl orl movl push lea call movb lea pushl mov call mov neg sbb movb push push lea call inc je push mov call movl movb lea call mov mov mov pop pop pop mov pop ret lea push mov call movb push push push lea push lea call mov neg sbb movb push push lea call inc je call cmp je cmp je push call lea push mov call movb push push push lea push lea call mov neg sbb movb push push lea call inc je movl push lea push call push mov call jmp lea call push lea call movb cmpl jne lea push mov call movl movb lea call jmp pushl pushl lea call movb lea push mov call movl jmp movl push lea jmp mov call push mov xor mov lea movl mov mov mov mov call orl mov mov mov mov pop ret mov call push mov push pushl mov mov mov lea mov mov mov mov mov movl mov call orl mov mov pop mov mov pop ret push mov push push mov push mov mov lea call xor test je lea mov push push mov cmp je call jmp call test je lea mov call test je lea mov push push mov cmp je call jmp call test je lea lea test jne mov mov push call test je mov pop pop mov pop pop ret push mov push push push mov xor cmp jne mov jmp mov lea mov add cmp jne sub sar mov mov mov cmp jb mov cmpl jb mov test je mov cmp jne add add dec jne jmp sbb and inc test jne mov cmp jae or jmp xor cmp setne pop pop mov pop pop ret mov call push push mov mov andl andl call mov orl mov mov pop mov mov pop ret push mov push mov lea push push push push mov call mov cmp je mov cmp jae push lea mov push push mov call push add mov push push lea push call mov pop lea pop pop pop ret mov call sub push push mov push mov andl mov mov mov cmp jne cmp jne call jmp lea call push lea mov push call mov cmp jne orl pushl call pop mov pop pop pop mov mov pop ret mov call push push push mov push mov lea push call mov cmpb je mov jmp mov cmpb je mov jmp mov mov cmp jne cmpb mov jne mov mov mov cmp jne mov jmp cmp jne mov jmp mov mov cmp jne cmpb je mov jmp mov mov jmp mov mov cmpb je mov mov mov cmp jne cmpb je mov jmp mov mov jmp mov mov cmpb je mov mov jmp mov mov mov cmp jne mov jmp cmpb mov jne mov mov mov mov mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov mov mov cmpb jne jmp cmpb jne mov cmp jne mov cmpb jne movb mov push movb call mov mov cmpb jne mov cmpb jne mov cmpb je mov cmpb jne mov push movb movb mov call mov mov mov movb mov mov push movb call jmp cmpb jne movb mov push movb call mov mov cmpb jne mov cmpb jne mov cmpb jne movb mov mov mov cmp jne jmp mov cmpb jne mov push movb movb mov call mov mov mov movb mov mov push movb call movb lea mov orl add mov orl add call push call pop mov pop pop pop mov test je dec mov mov mov mov mov mov mov pop ret push mov mov pushl call mov mov mov mov mov mov andl pop ret push mov push push mov lea push push mov call mov mov cmp je mov mov cmp jae mov mov lea mov pop pop mov pop ret push mov mov push mov push push mov mov cmp jb sub cmp jae mov cmp jne lea cmp jb cmpl mov jb mov jmp mov xor push mov push mov call jmp push push call test je cmpl jb mov cmpl jb mov jmp mov test je lea push mov lea push push call add cmpl mov jb mov jmp mov xor mov pop mov pop pop pop ret push lea movl push call int3 push mov push push mov mov test je cmpl jb mov jmp mov cmp jb cmpl jb mov mov lea cmp jbe cmpl jb mov jmp mov pushl sub mov sar push push call jmp push mov push push mov call test je cmpl jb mov jmp mov test je lea push push push call add cmpl mov jb mov jmp mov xor mov mov pop pop pop pop ret push mov mov mov cmpb jne mov mov cmp jae mov jmp mov mov cmpb je mov mov pop ret mov call push push mov mov push mov cmpb jne pushl mov call mov lea mov orl lea mov orl add call push call cmpb mov pop je mov pop pop pop mov mov pop ret push mov push mov mov push mov cmp ja andl cmpl jb mov jmp mov xor mov jmp test je cmpl jb mov jmp mov sub je lea push lea push push call add cmpl mov jb mov jmp mov xor mov pop mov pop pop ret push mov push mov cmp ja cmp jae pushl push call jmp test jne and cmpl jb mov xor mov xor cmp pop sbb neg pop ret call int3 mov call sub push push push mov mov mov mov or cmp jbe mov jmp mov mov shr mov xor movl divl cmp jbe mov mov sub cmp ja lea andl lea push call mov mov orl jmp mov mov mov movb inc push call mov movl mov ret orl mov mov mov mov test je cmpl jb mov jmp mov test je lea push push push call add push push mov call movl test je mov mov orl mov mov cmp jb mov xor mov mov mov pop pop pop mov pop ret push push mov call push push call int3 push mov mov xor test je cmp ja add push call pop mov test je mov pop ret call int3 mov call push push push push push mov push call pop mov test jne call movl mov xor mov lea movb test je mov mov lea movb test je mov mov orl movw mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call sub push push mov lea push mov mov mov mov call mov test jne xor jmp mov test je mov mov mov cmp je test je lea mov call test je lea mov push call test je mov jmp xor lea call mov mov cmp jne mov mov pop pop pop mov mov pop ret mov call andl cmpl jbe lea call andl lea mov call test je mov lea push call test je lea mov push lea mov push call mov call orl lea call mov inc mov cmp jb jmp orl lea call jmp mov call sub push push push mov call mov mov xor mov mov lea mov movb test je mov mov mov mov mov add call movb movb movb mov orl mov mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call sub push push push mov mov xor mov mov cmp jne pushl push pushl push mov pushl call mov mov mov pop pop pop mov pop ret mov mov cmp jne mov mov cmp jae pushl push push jmp cmp jne mov mov mov cmp jae pushl push push push jmp mov mov mov cmp jbe mov lea call mov mov cmp jae mov mov pushl push cmpb mov je push push jmp push push jmp mov mov cmp jae mov lea call cmp mov je mov cmp jae mov pushl push cmpb mov je push jmp push jmp mov jmp mov orl pushl push push lea push mov call mov mov mov jmp pushl call push push call int3 mov call push mov lea mov orl add mov orl add call push call pop mov pop mov mov pop ret mov call push push push push push mov mov push call pop mov mov test jne call movl mov mov xor mov lea movb test je mov mov mov lea movb test je mov mov mov orl mov mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 push mov push mov push push mov cmp jae mov inc mov mov mov mov cmp jne mov mov mov mov mov jmp cmpb je mov mov cmp jne mov jmp mov mov cmp jne mov mov mov jmp mov mov mov cmp jne mov cmpb je cmp jne mov mov push call mov mov movb mov mov movb mov pushl call jmp cmpb jne movb movb mov mov movb mov mov jmp cmp jne mov mov push call mov mov movb mov mov movb mov pushl call mov cmpb je mov mov movb mov mov pop pop pop pop ret pushl call call int3 mov call push push push push push mov mov andl mov mov mov mov mov cmpb jne mov cmpb je mov cmp sbb inc jmp mov mov cmp setb mov mov test je mov jmp mov jmp mov mov test je mov cmp jne pushl push push push lea push mov call mov mov mov movb mov mov pop pop pop mov pop ret lea call mov mov mov pushl cmp jae push push pushl jmp call mov mov movb jmp pushl call push push call int3 mov call sub push xor mov mov mov lea push lea push pushl pushl pushl pushl pushl pushl push call add test jne push lea movl push call pushl mov pushl call mov push push pushl movl call mov mov pop mov mov pop ret mov call sub push xor mov mov mov lea push lea push push call add test jne push lea movl push call pushl mov pushl call mov push push pushl movl call mov mov pop mov mov pop ret mov call sub push push xor mov mov mov lea push lea push push call add test jne movl push lea push call mov mov mov lea cmp jbe movl jmp lea mov push push call mov push push pushl movl call mov mov pop pop mov mov pop ret mov call mov sub lea push lea push push call add test jne push lea movl push call mov cmpl je xor jmp testb je mov pushl add lea push call andl mov push call orl lea call push push pushl call mov mov mov mov pop ret push mov and push push mov push mov sub push mov lea push call xor mov lea push mov call test je mov mov add cmp jae mov cmp je mov add add cmp jb jmp pushl lea push lea call movb mov push call mov lea call mov orl lea call mov mov pop mov pop mov pop ret push mov mov sub lea push lea push push call add test je mov push push push mov push call mov pop mov pop ret push lea movl push call int3 mov call sub andl push xor inc mov lea call movb lea call mov lea push call sub lea mov mov push call movb sub lea mov mov push call movb push pushl movb call mov mov lea call movb lea call mov mov mov pop mov pop ret mov call sub push andl andl movl mov mov call lea movl push mov call lea call movb lea mov andl mov mov mov lea push push call lea push lea call mov orl mov add lea push mov call movb lea call movb lea call movb lea call mov mov pop mov mov pop ret mov call sub push push push mov andl andl lea push call movl lea call movb cmpl jne lea mov push call movb jmp pushl lea pushl call movb push lea call movb lea call mov mov add mov add push mov call mov mov movl movl mov mov mov add mov mov mov call mov xor mov add mov mov movl add mov mov pushl pushl push call pushl mov pushl add push call add movb lea call mov lea call mov mov pop pop pop mov mov pop ret mov call sub push push xor mov mov mov lea push lea push push call add test jne movl push lea push call mov mov mov lea cmp jbe movl jmp lea mov push push call mov push push pushl movl call mov mov pop pop mov mov pop ret mov call sub push push push mov xor mov mov test jne call mov mov lea push call mov lea pushl call movb lea mov push pushl pushl pushl call add test jne push lea movl push call mov lea push pushl pushl push call add neg sbb not and mov mov lea call orl lea call mov mov pop pop mov pop mov pop ret mov call sub push push push mov xor mov push call pop mov movb mov cmpl je mov lea call jmp push call lea call mov mov mov lea call movb push mov call movb lea call jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov xor mov push call pop mov movb mov cmpl je mov lea call jmp lea call mov mov mov lea call or push push push push push push lea push mov call movb lea push mov mov call pop movb lea call jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov xor mov mov push mov call mov movb push call pop pop mov cmpl je mov lea call jmp lea call mov mov mov lea call or push push push push push push lea push mov call movb mov call cmp jne movb lea call jmp pushl mov mov call pop jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov xor mov push call pop mov movb mov cmpl je mov lea call jmp lea call mov mov mov lea call or push push push push push push lea push mov call movb lea call test jne movb lea call jmp lea push call lea mov cmpw je lea cmp jb sub jmp add mov call test je pushl mov mov call pop jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov xor mov push call pop mov movb mov cmpl je mov lea call jmp lea call mov mov mov lea call or push push push push push push lea push mov call movb pushl pushl xor call pop pop movb lea call jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov xor mov push call pop mov movb mov cmpl je mov lea call jmp lea call mov mov mov lea call or push push push push push push lea push mov call movb xor mov push push lea push call add lea call test jne movb lea call jmp lea push lea call movb push lea call movb cmpl mov jae lea mov shr push pushl push call test jne movb lea call movb movb push push lea call jmp mov mov movl mov xor mov pushl pushl lea call movb movb push push lea push lea call movb movb push push lea call cmpl mov jae lea pushl pushl call pop pop movb lea call movb jmp mov ret orl xor mov mov pop pop pop mov pop ret push mov cmpl jne lea call mov mov mov xor inc pop ret push mov sub push push push push push mov or call mov cmp je push lea push push call add movl lea push push call jmp push lea push call test je lea push push call test jne jmp mov push call pop mov pop pop mov pop ret push mov sub lea push push push push push push mov call test je xor jmp push push lea movl push lea xor push lea inc push push push pushl mov call pushl mov call test jne cmp jne push pop lea cmp jne lea movzwl test je sub cmp je mov add movzwl mov test jne xor mov mov jmp xor pop pop pop mov pop ret push mov mov call push mov mov mov mov mov push mov mov mov lea push push lea push push push call test jne xor jmp cmp ja lea push lea push lea push lea push call test je push push push push lea push call lea push pushl lea push push call test jne lea mov push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push call test je pushl lea pushl pushl push call test je lea push push push call neg sbb neg pop pop mov pop ret push mov and sub push push push mov call mov call mov call mov call mov call mov xor cmp je mov push push push call mov test jne push xor push push call mov test jne xor jmp orl lea mov push push push call mov test je mov call pushl call lea push push push call test jne lea push push push call test jne lea push push push call test jne push call jmp orl lea mov push push push xor push push pushl call test jne lea push push push xor push push pushl call test jne mov mov jmp pushl call push call xor xor push mov lea push push call mov add test jne push lea push push call add mov xor movl mov movl mov mov call test je push lea call pop test je cmp je lea lea call jmp mov xor lea mov add cmp jne sub sar lea push push lea push push call add xor push lea push push call add lea push push push call xor mov lea movl stos lea add movl lea movl mov stos mov mov movl stos xor mov lea mov mov mov mov mov mov mov lea mov mov mov call cmpl movzbl je pushl call cmpl je pushl call xor test setne pop pop pop mov pop ret mov call push push mov push mov push mov test jne or mov andl push call push call pop orl push mov call movb movl cmpl jne push call pop test je andl jmp xor mov mov orl lea call mov mov pop pop mov mov pop ret mov call sub push push push mov mov lea call andl lea call movb lea mov push mov call movb mov push mov call movb movb mov mov mov lea push mov call movb movb lea push mov call mov cmpb je push mov call mov call movb lea call movb lea call orl mov mov pop pop pop mov mov pop ret mov call sub push push mov push mov movl lea mov mov push call movb movb mov lea push mov call movb movb mov mov lea push call movb lea call movb lea call movb push call movb lea call orl lea mov orl call mov pop pop pop mov mov pop ret mov call push push push mov lea push mov call movb andl movb mov push mov call pop orl lea call mov pop mov mov pop ret mov call push push push mov lea push mov call movb andl mov mov mov mov jmp cmp jae mov jmp mov mov cmpb je cmp je mov cmp jae mov lea mov cmp jne push lea movl push call mov orl lea call mov mov pop mov mov pop ret mov call push push push mov mov movl mov push pushl lea push call orl pushl call pop mov pop mov mov pop ret mov call sub push mov lea push mov call movb andl mov movb mov mov cmp je mov call lea call mov cmp jne orl lea call mov pop mov mov pop ret push mov push mov lea push push push push mov call mov cmp je mov cmp jae push lea mov push push mov call push add mov push push lea push call mov pop lea pop pop pop ret mov call push push push mov mov andl mov push pushl lea push call orl pushl call pop mov pop mov mov pop ret push mov push mov push mov push mov mov push mov mov mov cmpb jne mov cmp jae mov jmp cmpb je cmp jae mov mov mov cmpb je cmpb jne mov cmpb jne mov cmp jae mov mov jmp mov cmpb je xor mov cmp je lea inc call cmp jne mov lea push push push call mov pop pop pop mov pop ret push mov push push mov push mov mov cmp jne cmp jne pushl call mov mov mov mov mov mov mov andl mov mov mov jmp lea call push lea mov push call mov cmp jne mov mov pop pop mov pop ret push mov push push push mov push mov lea push call mov cmpb je mov jmp mov cmpb je mov jmp mov mov cmp jne cmpb mov jne mov mov mov cmp jne mov jmp cmp jne mov jmp mov mov cmp jne cmpb je mov jmp mov mov jmp mov mov cmpb je mov mov mov cmp jne cmpb je mov jmp mov mov jmp mov mov cmpb je mov mov jmp mov mov mov cmp jne mov jmp cmpb mov jne mov mov mov mov mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov mov mov cmpb jne jmp cmpb jne mov cmp jne mov cmpb jne movb mov push movb call mov mov cmpb jne mov cmpb jne mov cmpb je mov cmpb jne mov push movb movb mov call mov mov mov movb mov mov push movb call jmp cmpb jne movb mov push movb call mov mov cmpb jne mov cmpb jne mov cmpb jne movb mov mov mov cmp jne jmp mov cmpb jne mov push movb movb mov call mov mov mov movb mov mov push movb call movb push call pop mov pop pop pop mov test je dec mov mov mov mov mov pop ret push mov push push push mov mov mov cmpb jne pushl mov call mov push call cmpb mov pop je pop pop pop pop ret mov call push push push push push mov call mov mov xor mov mov lea movb test je mov mov mov mov mov mov mov orl mov mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call sub push push push mov mov xor mov mov cmp jne pushl push pushl push mov pushl call mov mov mov pop pop pop mov pop ret mov mov cmp jne mov mov cmp jae pushl push push jmp cmp jne mov mov mov cmp jae pushl push push push jmp mov mov mov cmp jbe mov lea call mov mov cmp jae mov mov pushl push cmpb mov je push push jmp push push jmp mov mov cmp jae mov lea call cmp mov je mov cmp jae mov pushl push cmpb mov je push jmp push jmp mov jmp mov orl pushl push push lea push mov call mov mov mov jmp pushl call pop push push call int3 push mov push mov push push mov cmp jae mov inc mov mov mov mov cmp jne mov mov mov mov mov jmp cmpb je mov mov cmp jne mov jmp mov mov cmp jne mov mov mov jmp mov mov mov cmp jne mov cmpb je cmp jne mov mov push call mov mov movb mov mov movb mov pushl call jmp cmpb jne movb movb mov mov movb mov mov jmp cmp jne mov mov push call mov mov movb mov mov movb mov pushl call mov cmpb je mov mov movb mov mov pop pop pop pop ret pushl call pop call int3 mov call push push push push push mov mov andl mov mov mov mov mov cmpb jne mov cmpb je mov cmp sbb inc jmp mov mov cmp setb mov mov test je mov jmp mov jmp mov mov test je mov cmp jne pushl push push push lea push mov call mov mov mov movb mov mov pop pop pop mov pop ret lea call mov mov mov pushl cmp jae push push pushl jmp call pop mov mov movb jmp pushl call pop push push call int3 mov call push push mov mov movl call pushl call movb lea call orl lea push call mov pop mov mov pop ret mov call push push cmpl push mov jne xor jmp lea push push mov call movb andl pushl push pushl call mov mov test je lea push lea call mov orl lea call mov pop mov pop mov mov pop ret mov call push push push push mov lea push mov call movb andl mov cmp je push mov cmp je add cmp jne jmp push push pushl call push push push call add push push pushl call mov lea sub and push push push call add addl pop orl lea call mov pop pop mov mov pop ret mov call sub push push push mov lea push mov call movb andl xor mov mov sub add shr cmp sbb not and mov je pushl push pushl call inc lea cmp jne mov mov orl lea call mov pop pop pop mov mov pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret mov call push mov movl orl movl mov mov mov pop ret mov call push push mov mov movl orl testb movl je push call pop mov mov pop mov mov pop ret mov call push mov movl andl mov mov mov movl mov orl mov mov mov mov pop ret mov ret mov call push push mov mov orl testb movl je push call pop mov mov pop mov mov pop ret mov call push mov orl movl mov mov mov pop ret push mov push push push push mov mov lea call mov lea push push push mov push call add neg sbb not and pop pop mov pop ret push mov sub push mov xor push push push mov lea mov lea pop rep mov push pop rep mov mov cmp jne push call pop test je andl mov movl jmp xor mov mov movl lea movb movsl movsl movsl pop pop mov pop mov pop ret mov call lea mov movb call mov push pushl mov call pop pop test je push call pop mov test jne jmp lea call mov push pushl mov call pop pop test je call test setne mov lea call mov push pushl mov call lea push push call mov mov add movsl movsl movsl cmpl jmp push lea movl push call int3 push mov sub push mov push push cmp jne mov lea movsl movsl movsl pushl call pop jmp mov test je mov call jmp lea call mov push pushl mov call push mov mov movsl movsl movsl call add pushl call pop pop pop mov pop ret mov call sub push push mov lea push call mov lea push push call xor mov lea call mov push mov push call test je cmp jne xor inc mov mov call mov test je push call test jne push lea movl push call orl lea call mov mov pop pop mov pop mov pop ret mov call push push push mov push mov lea push mov mov call movb andl incl orl lea call mov mov pop pop mov mov pop ret mov call push push push mov lea push mov call movb andl mov test je dec mov cmpl jne mov call orl lea call mov pop mov mov pop ret push mov push push xor mov push push push push call mov test je mov pop mov pop ret push lea movl push call int3 mov call push push push push mov andl cmpl je pushl call orl mov mov pop pop pop mov pop ret mov ret mov call push push push mov mov lea call andl push lea call movb andl movb lea call movb lea mov pushl mov call mov mov mov mov orl mov mov pop pop mov mov pop ret mov call sub mov push mov push push mov movl mov xor mov mov movb lea mov mov mov call mov movb lea mov push call movb lea push lea movl mov call movb lea lea mov push mov call movb andl movb lea call lea andl andl mov mov call mov movb lea push call movb movb movb lea lea mov push call movb xor mov mov mov movb push push push mov call mov test jne push lea movl push call movb lea mov pushl mov call movb xor mov movb mov movb mov movb mov movb lea mov mov mov mov call mov movb xor mov lea mov mov movl mov mov mov call orl mov mov pop pop pop mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push push push mov mov movl mov push pushl lea push call orl pushl call pop mov pop mov mov pop ret mov call push push mov mov andl lea push call orl mov call mov pop mov mov pop ret mov call sub push push push mov mov mov movl push pop mov movb mov sub neg sbb and mov mov call push lea call mov jmp mov ret movl mov movb lea mov movb mov movb call movb mov test je mov push call movb mov test je mov push call movb mov test je mov push call movb mov test je mov push call movb lea call movb lea call movb lea mov movb lea push call movb mov call movb lea call movb lea push call movb lea call movb mov test je mov push call orl mov test je mov call push call pop mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov andl call call test je mov push call pop orl jmp pushl mov call mov ret orl mov mov mov call mov mov pop pop pop mov pop ret push mov and push push mov push mov sub push push push mov call push mov call pop mov andl test je mov call mov jmp xor orl xor mov inc cmp je test je mov push call push mov call pop mov mov test je mov call mov jmp xor orl mov cmp je test je mov push call push mov call pop mov movl test je mov call mov jmp xor orl mov cmp je test je mov push call push mov call pop mov movl test je mov call mov jmp xor orl mov cmp je test je mov push call push mov call mov pop mov movl test je lea movl andl andl push push mov call mov movb lea call movb lea push call movb jmp xor orl mov cmp je test je mov push call lea mov push lea movl mov call movl lea push pushl lea mov call or mov lea call lea movl push lea mov call movl lea push pushl mov call mov lea call lea movl push lea mov call movl lea push pushl mov call mov lea call lea movl push lea mov call movl lea push pushl mov call mov lea call lea movl push lea mov call movl lea mov push add mov push call mov lea call pushl mov pushl pushl pushl call cmpb je mov mov call lea call mov mov lea push mov call movb movl lea push mov call mov lea call mov pop pop mov pop mov pop ret mov call sub push push push mov mov mov andl movb cmp jne andl pushl call cmpl je lea push lea call movb mov call lea call mov movb mov mov cmp je mov mov mov push call pop mov jmp movb lea call lea mov call andl mov test je push call pop andl orl jmp mov ret orl mov call lea call mov mov lea mov push call movb movl lea push lea call mov mov push call pop orl lea call mov mov pop pop pop mov pop ret mov call sub push mov push push mov add push mov call movb andl mov mov mov jmp mov movl mov pushl call mov cmp jne mov mov mov jmp mov movl mov pushl call lea call mov cmp jne orl lea call mov pop pop pop mov mov pop ret push mov push mov push mov mov mov cmpl je call push call pop jmp call push lea call mov mov test je mov mov call mov mov mov mov call push mov mov call push pushl call add pop pop pop ret push lea movl push call int3 mov call sub push push push mov mov andl lea call pushl mov call test je lea call pushl lea push mov call movb pushl pushl lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov or test jne mov mov mov jmp mov mov mov mov mov test jne mov mov jmp mov mov mov cmp jne mov mov lea call pushl pushl push pushl push push lea push mov call movb pushl pushl lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call push push push push mov andl mov mov call jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov lea call lea push mov call movb push push lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov lea call lea push mov call movb push push lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov lea call lea push mov call movb lea call mov call mov push lea call movb lea push pushl lea mov call push lea mov call push call test jne movb lea call movb lea call jmp push push lea push mov call movb lea call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov lea call pushl pushl lea push mov call movb push push lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov lea call pushl pushl lea push mov call movb sub mov mov lea push call movb lea call lea push movb call movb push push lea push mov call movb lea call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov sub mov mov pushl pushl call movb lea call lea push movb call movb push push lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov sub mov mov pushl pushl call movb sub mov mov pushl pushl call movb lea call pushl lea push movb call movb push push lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call push push push push push mov mov mov andl mov cmpl je cmpb jne mov mov mov mov push pushl call jmp orl jmp mov ret orl mov lea push call push call movl cmpl je cmpb jne push call jmp orl jmp mov ret orl mov mov mov mov call mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov xor mov cmp jne mov movb mov call mov mov push call pop mov movb test je push push lea push push mov call movb mov orl mov mov pop pop pop mov pop ret cmpl jne mov mov mov lea push mov call mov ret andl jmp mov call mov ret mov call push push push push push mov mov andl mov call orl mov mov pop pop pop mov pop ret mov call mov ret mov call push push push push push mov mov mov andl mov call mov mov mov call orl mov mov pop pop pop mov pop ret mov call mov ret mov call push push push push mov andl mov pushl call orl mov mov pop pop pop mov pop ret mov ret mov call sub push push mov mov andl mov mov xor inc mov movl movl mov mov push mov mov lea push push call orl mov orl mov mov pop pop mov mov pop ret mov call push mov orl movl orl movl mov mov mov pop ret mov call push push mov mov orl movl orl testb movl je push call pop mov mov pop mov mov pop ret push mov and push push mov push mov sub push push mov mov andl mov mov xor inc mov movl movl mov push lea push push call orl mov orl mov mov pop mov pop mov pop ret mov call sub push push push mov mov mov andl cmpb jne lea call movb mov lea call test je movb lea call orl mov mov pop pop pop mov pop ret lea call mov movb mov mov lea lea call mov mov call mov mov mov call mov movb lea call mov lea push push mov call jmp mov call mov ret mov call push push push push push mov call mov pop mov xor mov test je mov call movb movl movl movl mov jmp mov orl mov push call test je lea mov mov pop pop pop mov mov pop ret add mov jmp add mov jmp add je mov push call ret mov call push push mov mov orl call testb je push call pop mov mov pop mov mov pop ret mov call sub push push push mov mov andl call cmp sete pushl pushl lea call movb push call pop mov movb test je pushl pushl lea push pushl mov call jmp xor movb andl andl push lea call movb cmpb je push call pop mov mov movb test je push push push lea push mov call push mov pushl call push call test jne movl push lea push call mov test jne xor jmp xor call push push mov call movb movl movb jmp xor movb mov mov cmp je test je mov push call mov lea push lea call movb cmpb je movb lea call movb mov test je call movb lea call mov jmp push push mov mov lea push call movb mov movb call movb lea call mov cmpb je mov call jmp testb je movb mov test je call movb lea call xor jmp push pushl call lea call mov mov mov movb mov test je call movb lea call mov jmp mov mov neg mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov andl pushl pushl lea call movb lea push movzbl push pushl sub mov mov lea push call movb movb lea call movb mov call movb movb lea call movb lea mov movb movb movl andl pushl lea push pushl pushl pushl mov call mov lea call movb mov test je mov mov call push mov mov call push lea call movb push lea call movb lea call mov mov call lea call movb pushl pushl lea call movb movzbl push lea push lea push lea push lea call movb pushl pushl pushl call add movb movb mov mov movb movb mov movb lea call movb lea call movb lea call movb movb mov mov jmp mov mov neg mov mov ret orl mov mov mov pop pop pop mov pop ret mov call push mov movl andl mov movl mov mov mov mov orl mov mov mov mov pop ret mov call push push mov mov andl lea call orl mov orl mov movl pop mov mov pop ret mov call sub push push push mov mov mov andl cmpb jne mov lea mov push call movb movb cmpl sete movb lea call test jne mov call test je jmp mov call mov ret orl mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov lea mov push call movb andl lea push mov call movb movb movzbl push lea push push lea push lea call mov inc mov lea push push lea call movb lea call mov testb je cmpb jne xor jmp xor inc push pushl lea push pushl push mov call mov testb je andl jmp lea call cmpb jne movl push lea push call lea push mov lea call mov mov mov mov pushl call lea push lea call movb lea call movb mov test je call orl lea call mov jmp lea push mov lea call mov mov neg mov mov mov pushl call mov mov mov call mov ret andl mov test je call orl lea call xor mov mov pop pop pop mov pop ret push mov and push push mov push mov sub push push push mov movl andl mov mov movl movl movl mov mov mov mov mov mov mov call mov lea mov mov call movb lea push lea call push lea call pushl mov lea push push call movb lea call orl mov orl mov pop pop movl mov pop mov pop ret push mov and mov mov xor cmp je cmp je cmp je cmp je cmp je cmp jne call jmp pushl call jmp call jmp mov push mov call pop jmp push pushl call jmp pushl call mov pop ret mov call sub push push mov push cmpb jne push lea movl push call mov mov call mov pushl lea push lea call xor mov cmp je lea mov push lea call movb lea mov push pushl pushl mov pushl call mov mov mov call mov push mov call push lea call movb mov test je mov call testb jne lea mov push push pushl call movb lea call movb lea call jmp imul mov movl movzbl mov movb movl mov mov movb movzbl push sub lea mov mov push call movb movb lea call movb mov call push lea call movb lea mov movb cmpl movl je pushl push pushl call add lea push lea call movb lea call movb imul mov movzbl mov movl movb movl mov mov movb lea movzbl push lea push lea push lea push call movb imul pushl mov pushl pushl mov call testb je movb mov mov movb mov movb lea call movb lea call movb lea call jmp pushl lea push push pushl mov call movb mov mov movb mov movb lea call movb lea call movb lea call mov mov orl lea call mov pop pop mov pop mov pop ret mov call push mov orl mov orl movl mov mov mov pop ret mov call sub push push mov lea call andl movl movb movl movb movl movb mov mov mov cmp je mov mov call mov mov mov lea push lea call push lea call mov lea push push push call movb movl movb movl orl lea call mov pop mov pop mov pop ret mov call sub push mov lea push movzbl push pushl sub mov mov pushl call andl orl lea call movl mov call movb lea call movb lea mov movb lea push pushl mov movl pushl call orl lea call mov mov pop mov pop ret mov call sub push push mov push cmpb jne push lea movl push call mov mov call mov mov mov andl lea movl mov mov movl lea pushl mov call mov lea push mov call movb movb lea push lea movb call mov mov push mov call pop movb lea call orl mov pop mov pop pop mov mov pop ret mov call sub push push mov mov push mov mov call mov mov mov mov movb mov call cmp jb cmpl je pushl lea push lea call andl lea mov andl mov lea movl push movl movl movb call movb lea call mov lea push pushl call mov test je push call pop movb lea call orl lea call mov call mov test jne push lea movl push call lea mov push mov call cmpl lea pop push pop mov rep push lea pop lea rep jne mov push mov call pop cmpl jne push pushl call test je pushl mov call mov pop pop mov pop mov pop ret push mov push lea call pushl mov pushl pushl mov pushl call add neg sbb neg mov pop ret mov call sub push push push mov mov andl lea call movb lea call lea push pushl mov call test jne mov lea call jmp pushl pushl lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret push mov and push push mov push mov sub push mov push mov andl mov mov xor inc mov movl push pop mov andl mov orl mov mov lea push push push movl mov call orl mov orl mov mov pop mov pop mov pop ret push pushl call xor cmp setne ret mov call sub push mov mov call test jne xor jmp mov push pushl call mov test je push push xor lea push pop rep push pop lea lea rep and mov cmpl mov mov setne mov mov mov mov test je push call neg sbb and mov lea add push call andl lea pushl push call pop pop movzbl orl lea call pop mov pop mov pop mov mov pop ret mov call sub mov mov call test jne xor jmp mov push push pushl call mov xor test je cmpl push push push pop lea rep mov lea push pop lea rep mov lea mov setne mov mov add movl push call andl lea pushl push call pop pop movzbl orl lea call pop mov pop pop mov mov mov pop ret mov call sub push mov mov call test jne xor jmp mov push pushl call mov test je push push xor lea cmpl lea push pop rep mov lea push pop rep mov setne mov mov mov movl mov mov test je push call neg sbb and mov lea add push call andl lea pushl push call pop pop movzbl orl lea call pop mov pop mov pop mov mov pop ret mov call push push push push push mov andl movb movl lea push call orl mov mov pop pop pop mov pop ret mov ret mov test je mov push call ret push mov test je mov call push call pop pop ret mov call push push push mov mov andl mov push pushl lea push call orl pushl call pop mov pop mov mov pop ret push mov push mov push mov push mov mov push mov mov mov cmpb jne mov cmp jae mov jmp cmpb je cmp jae mov mov mov cmpb je cmpb jne mov cmpb jne mov cmp jae mov mov jmp mov cmpb je xor mov cmp je lea inc call cmp jne mov lea push push push call mov pop pop pop mov pop ret mov call push push push mov mov movl movl lea push call movb lea mov movb call orl lea call mov pop mov mov pop ret mov call push push push push mov andl lea push mov call movb movb lea mov push pushl push call mov mov mov sub cmp jae call inc mov mov mov mov mov push mov call pop movb lea call orl mov pop pop test je call mov mov mov pop ret mov call sub push push xor mov mov lea mov push mov call movb movl cmp jne push lea movl push call mov mov push mov add push call mov movl mov mov mov mov mov mov mov decl mov test je call push call pop pop cmp je mov push mov call pop mov lea call mov mov pop pop mov mov pop ret push mov mov push push mov push andl andl mov mov test je xor lea inc lock mov test je call mov mov pop mov pop pop pop ret test je lea ret xor ret push pop ret push pop ret push pop ret push pop ret push pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push push mov push mov mov cmp jne cmp jne pushl call mov mov mov mov mov mov mov andl mov mov mov jmp lea call push lea mov push call mov cmp jne mov mov pop pop mov pop ret mov call push push mov push mov andl mov mov mov mov mov andl cmp je push mov mov test je call push call mov pop cmp jne pop orl pushl call pop mov pop pop mov mov pop ret mov call push push push push push mov push call pop mov test jne call mov test jne mov mov jmp mov movl mov movb lea movb test je mov movb orl mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call push push mov mov andl andl mov movb movl movb mov movl mov mov mov mov movb mov orl mov mov mov mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov cmpb jne mov test je mov mov cmp sbb inc jmp mov mov cmp setb mov test je mov jmp mov jmp mov mov test je mov cmp jne pushl pushl push push lea push mov call mov mov mov movb mov mov pop pop pop mov pop ret lea call mov mov mov cmp jae pushl push push pushl jmp mov mov mov mov jmp xor push push call int3 mov call push push push push push mov mov andl push call pop mov mov xor inc mov test je movl mov mov movb movl mov mov mov jmp xor mov movb mov test je call mov mov orl mov mov pop pop pop mov pop ret mov test je push call push push call int3 push mov push push push mov cmpl jae pushl call incl mov mov mov mov cmp jne mov mov mov mov mov jmp cmpb je mov mov cmp jne mov jmp mov mov cmp jne mov mov mov jmp mov mov mov cmp jne mov cmpb je cmp jne mov mov push call mov mov movb mov mov movb mov pushl call jmp cmpb jne movb movb mov mov movb mov mov jmp cmp jne mov mov push call mov mov movb mov mov movb mov pushl call mov cmpb je mov pop pop mov movb mov mov pop pop ret call int3 mov call push push push push mov pushl pushl call mov mov andl lea movb test je pushl call movb orl mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call push push mov mov movl lea call movb mov test je mov push call movb lea call orl lea call push call pop mov mov pop mov mov pop ret mov test je push call ret mov call push push push push push mov call mov mov xor mov mov lea movb test je pushl call mov orl mov mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call mov push mov test jne push call mov pop test jne call mov andl test je movl movb movl mov mov mov mov movb orl mov mov pop mov mov pop ret mov ret mov call push push mov mov movl orl testb movl je push call pop mov mov pop mov mov pop ret mov call sub push push push mov xor mov mov mov mov mov mov mov mov movb lea mov call movb mov movb lea mov movb movl movb movl movl mov movb mov movb lea push push call movb lea call lea push call orl mov mov pop pop mov pop mov pop ret mov call sub push push mov push lea push mov call movb andl lea push call movb lea mov mov call mov xor mov sub add shr cmp sbb not and je mov test je mov push call add inc cmp jne movb lea call orl lea call mov pop pop pop mov mov pop ret mov call sub push mov push push lea push mov call movb xor mov mov mov mov mov movb mov mov mov sub mov add shr cmp sbb not and mov je mov mov mov mov mov jmp mov cmp mov je add cmp jne jmp lea sub and push push push call addl lea add lea push call mov add inc mov cmp jne mov mov lea mov call mov xor sub add shr cmp sbb not and je mov test je mov push call add inc cmp jne movb lea call orl lea call mov pop pop mov pop mov pop ret mov call push push push push push mov mov mov xor mov mov mov mov mov sub sar mov mov mov test je cmp jbe call push call mov mov lea mov mov mov mov sub and push pushl pushl call add add mov orl mov mov mov pop pop pop mov pop ret mov cmpl je pushl call pop xor mov mov mov jmp xor push push call int3 mov call push mov push mov mov cmp jae cmp ja sub sar cmp jne push call mov mov andl test je mov mov orl jmp cmp jne push call mov test je mov mov addl mov pop pop mov mov pop ret mov mov push mov sub sar cmp jae sub push mov sar mov sub cmp jb sub inc sar mov shr sub cmp pop jae xor jmp add cmp jae mov push call pop ret call int3 mov call push push push push push mov mov pushl call mov mov andl mov sub and push pushl push call add orl mov sub sar cmpl je pushl call pop mov lea mov lea mov mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 push mov mov xor test je cmp ja shl push call pop mov test je mov pop ret call int3 mov call mov push mov test jne push call mov pop test jne call mov andl test je movl movb movl mov mov mov mov movb orl mov mov pop mov mov pop ret mov ret mov call push push mov mov movl orl testb movl je push call pop mov mov pop mov mov pop ret push mov mov pushl mov add call pop ret push mov cmpl mov push mov jne mov jmp pushl call lea lea push call mov test je pushl push call mov pop pop ret push mov mov pushl mov add call pop ret push mov pushl mov pushl pushl mov pushl pushl pushl pushl pushl call pop ret push mov pushl mov pushl pushl mov call movzbl pop ret push mov pushl mov pushl pushl mov call movzbl pop ret push mov pushl mov pushl pushl mov pushl pushl pushl pushl pushl call xor test setne mov pop ret push mov pushl pushl call pop ret push mov pushl mov pushl mov call xor test setne mov pop ret push mov pushl mov pushl mov call xor test setne mov pop ret mov ret mov ret push mov pushl mov pushl mov call movzbl pop ret push mov pushl mov pushl pushl mov pushl call movzbl pop ret push mov pushl mov pushl pushl mov pushl call movzbl pop ret push mov pushl mov pushl pushl mov pushl call movzbl pop ret push mov pushl mov pushl pushl mov pushl pushl pushl pushl call movzbl pop ret push mov pushl pushl pushl pushl call movzbl pop ret push mov push lea call mov mov mov pop ret push mov mov mov mov mov mov pop jmp jmp push mov pushl mov pushl pushl mov pushl pushl call pop ret push mov mov mov mov mov pop ret push mov pushl mov pushl mov pushl pushl call add pop ret push mov pushl mov pushl mov call pop pop pop ret push mov pushl mov pushl mov pushl pushl call add pop ret push mov mov test je cmp ja pushl push pushl call mov add cmpl jae mov mov add push push pushl call xor add inc pop ret xor pop ret mov call sub pushl lea call andl mov cmp je push push push call orl lea push push call mov mov mov pop ret push mov mov mov pop jmp jmp push mov mov mov mov test je lea add push call pop ret xor ret push push push mov mov push call mov pop test je push xor push push call add jmp xor mov test jne xor jmp mov movl mov mov mov mov mov mov movl movl movl movl movl movl mov movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov movl movb movl movl movl movl movl movl mov pop pop pop ret mov call push mov movl xor mov movl movl movl mov mov orl mov mov mov mov pop ret mov call push mov movl andl movl movl mov mov mov movl mov orl mov mov mov mov pop ret mov call push push push xor mov mov mov pushl mov pushl call mov mov mov mov movl mov pop pop mov mov pop ret push mov push push mov call mov mov mov call mov mov mov call mov pop pop pop ret mov call push mov mov movl andl movl movl mov movl mov mov mov mov orl mov mov mov mov pop ret push mov sub mov push push mov movb push mov lea mov mov lea mov mov cmp jb mov test je sub mov mov inc dec jne mov jmp cmp jae add mov cmp jne mov xor inc mov mov inc jmp mov test je movzbl movzbl mov shl add or shr and mov sub add mov cmp jb dec js mov cmp jae mov mov inc mov inc dec mov jns mov cmp jb sub mov pop pop pop mov pop ret mov mov inc inc jmp push mov sub andl mov push mov mov mov push mov mov push lea mov cmp mov mov jae add mov cmp jne lea add cmp jae mov movb inc movl lea add cmp jbe mov mov inc inc jmp lea mov mov mov mov mov mov movzbl movzbl add sub xor movzbl and xor movzwl sub mov and mov mov mov sub mov cmp jb cmp je cmp jne mov cmp jne mov cmp jne mov mov push pop or lea sub mov cmp jne inc inc cmp jl mov lea mov shl sar or mov mov add mov add mov jmp mov mov inc mov lea cmp jae mov jmp mov test je sub mov mov inc dec jne mov jmp sub mov pop pop pop mov pop ret mov call push push mov push mov push push mov mov xor mov lea mov mov mov mov call mov movb xor mov movb mov movb mov movb mov movb mov movb lea call movb lea lea movl push push mov mov mov mov call mov movb lea call movb lea push call movb xor lea push push mov mov mov call mov movb movb orl mov mov pop pop pop mov mov pop ret mov call sub push push push mov mov mov push pop mov movb lea mov pushl mov call mov mov mov mov mov mov andl lea call test jne lea call mov mov movb lea call movb lea push mov call movb lea call movb lea call jmp mov jmp mov ret movl mov movb lea call movb lea call movb lea call movb mov test je mov push call movb mov test je mov push call movb mov test je mov push call movb mov test je mov push call movb mov test je mov push call movb lea mov movb mov movb call orl mov test je mov push call mov mov pop pop pop mov pop ret mov call push push push push push mov xor push pop push mov mov call pop mov mov test je pushl mov call jmp mov orl lea push call push call pop mov movl test je pushl mov call jmp mov orl lea push call push call pop mov movl test je pushl mov call jmp mov orl lea push call push call pop mov movl test je mov call jmp mov orl lea push call push call pop mov push pop mov test je pushl mov call mov orl lea push call mov call mov mov call mov push push mov mov call test jne mov mov call mov pop pop mov pop mov pop ret mov call sub push mov push push mov mov mov call mov mov mov call mov movl lea mov push lea call andl lea push mov mov add call push mov call orl lea call mov lea mov lea push movl call movl lea push mov mov call push mov call orl lea call mov lea push lea movl mov call movl lea push mov mov call push mov call orl lea call lea movl push lea mov call movl lea mov push mov call push mov call orl lea call lea movl push lea mov call movl lea mov push mov call push mov call orl lea call lea movl push lea mov call movl lea push pushl mov call orl lea call mov pop pop mov pop mov pop ret push mov and push push mov push mov sub push push push mov movl mov andl movl movl movl movl lea mov call movb mov mov mov mov call cmp jbe mov mov call push xor pop div mov mov mov call add lea add push call movb lea push call movb lea call mov mov mov call mov mov mov call push lea mov call pop test je lea mov mov call cmp jae mov mov mov call mov lea orl push call lea mov mov mov call push mov call mov pop mov movb test je mov call movb lea call push pop mov andl movb jmp xor movb lea andl andl push call movb lea mov mov push call push mov call mov lea push pushl push call mov mov mov sub cmp jae call inc mov mov mov mov mov call cmpb je movl lea push push call cmpb je lea call cmpb je movl lea push jmp movb mov test je call movb lea call orl movl orl mov pop pop movl mov pop mov pop ret push mov and mov push push push mov sub push push push mov jmp mov lea mov add push call andl mov mov call mov mov mov mov call mov mov sub mov mov mov call test je cmp jbe mov jmp mov mov mov push mov mov call add mov push call test je mov mov add mov call cmp jne mov push mov call mov pop mov mov mov mov mov mov mov decl mov test je call push call pop orl mov test je call cmpl ja jmp push lea movl push call orl mov test je call mov pop pop mov pop mov pop ret mov call push push push push push mov mov andl cmpb jne call orl mov mov pop pop pop mov pop ret mov call mov ret mov call push mov push mov call mov test jne push lea movl push call push call pop mov mov xor mov test je push call orl mov pop mov mov pop ret mov call push push push push push mov mov mov andl cmpb jne cmpb jne call cmpb jne mov call test je mov call orl mov mov pop pop pop mov pop ret mov call mov ret push mov push push push mov mov mov call mov mov mov call cmp jb mov lea push push mov call cmp jne lea mov cmp jne movb jmp mov mov call pop pop mov pop ret push mov push push mov push mov mov call mov mov mov call cmp jae xor jmp mov lea push push mov call cmp jne movb mov pop pop mov pop ret push lea movl push call int3 mov call sub push push mov push mov mov call mov mov mov call lea mov mov mov call mov sub cmp jbe mov mov call mov sub push lea call andl mov pushl pushl mov call cmp je push lea movl push call lea mov push call mov mov call cmp jne testl je mov call push call mov pop mov movb test je lea call movb jmp xor movb mov movb mov mov mov lea push call movb mov mov mov mov movb movl movb xor push lea movl mov call mov mov mov push mov call pop mov lea call orl lea call mov pop pop mov pop mov pop ret mov call sub andl push push lea mov mov push mov call cmp jae movl lea push push call mov mov call mov mov mov mov call cmp jb lea push lea call andl mov mov mov call mov mov lea call mov mov push push lea call pop pop test je cmp jne mov push pushl call orl lea call mov pop pop mov pop mov pop ret movl lea push jmp mov call push push push push push mov mov mov andl mov mov call mov mov call test je mov mov call mov mov call test je mov call orl mov mov pop pop pop mov pop ret mov call mov ret mov call push push push push push mov mov andl mov call orl mov mov pop pop pop mov pop ret mov call mov ret mov call push push push push push mov mov andl mov call orl mov mov pop pop pop mov pop ret mov call mov ret mov call push push push push mov andl movb orl mov mov pop pop pop mov pop ret mov ret mov test je mov push call ret push mov push mov push mov mov cmp je test je mov push call mov pop pop pop ret mov call push push push mov mov movl movl lea push call movb lea mov movb call orl lea call mov pop mov mov pop ret mov call push push push mov push lea push mov call movb andl lea mov push pushl push call mov mov mov sub cmp jae call inc mov mov mov mov mov push mov call pop orl lea call mov pop pop mov mov pop ret mov call sub push mov push lea push mov call movb andl cmpl jne push lea movl push call mov mov mov mov mov push mov mov mov mov mov mov decl call cmpl pop je mov push mov call pop orl lea call mov mov pop pop mov mov pop ret mov call push push push push mov lea push mov call movb andl cmpl sete orl lea call mov mov pop pop mov mov pop ret mov call push mov mov test je orl lea mov orl movl orl push movl call pop mov mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push push mov mov andl mov mov mov mov mov andl cmp je push mov push call pop mov cmp jne pop orl pushl call pop mov pop mov mov pop ret mov call push push push push push mov push call pop mov test jne call mov test jne mov mov jmp mov movl mov movb lea movb test je mov movb orl mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call push push mov mov andl andl mov movb movl movb mov movl mov mov mov mov movb mov orl mov mov mov mov pop ret mov call push push push push push mov mov andl push call pop mov mov xor inc mov test je movl mov mov movb movl mov mov mov jmp xor mov movb mov test je call mov mov orl mov mov pop pop pop mov pop ret mov test je push call push push call int3 mov call push push push push mov pushl pushl call mov mov andl lea movb test je mov mov mov movb orl mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call push push push mov mov andl lea mov movb call orl mov call push call pop mov mov pop mov mov pop ret mov test je push call ret mov call mov push mov test jne push call mov pop test jne call mov andl test je movl movb movl mov mov mov mov movb orl mov mov pop mov mov pop ret mov ret mov call push push mov mov movl orl testb movl je push call pop mov mov pop mov mov pop ret mov call push push mov mov push mov call mov test jne push lea movl push call mov mov push call push call pop mov xor mov test je push mov call jmp mov orl push mov call pop mov xor inc mov test je push push pushl mov pushl call mov orl mov mov mov pop pop pop mov mov pop ret push mov push push push push mov mov push lea call mov lea call mov mov call mov push push call call pushl push pushl mov call add test setne pop pop pop mov pop ret push mov push push push push mov mov push lea call mov lea call mov mov call mov push push call call pushl push pushl mov call add test setne pop pop pop mov pop ret push mov sub push push mov mov push lea call mov lea call mov mov call mov push push call call push pushl mov call add test setne pop pop pop mov pop ret push mov push push push lea call mov lea call mov mov call mov push push call call pushl pushl mov call add neg sbb neg pop pop mov pop ret push mov pushl mov mov call pop xor test setne mov pop ret push mov pushl mov mov call pop xor test setne mov pop ret push mov push push push lea call mov lea call mov mov call mov push push call call pushl pushl mov call add neg sbb neg pop pop mov pop ret push mov mov mov call xor test setne mov pop ret push mov push push push lea call mov lea call mov mov call mov push push call call pushl pushl mov pushl pushl call add neg sbb neg pop pop mov pop ret push mov push push push lea call mov lea call mov mov call mov push push call call pushl pushl mov pushl pushl call add neg sbb neg pop pop mov pop ret push mov push push push lea call mov lea call mov mov call mov push push call call pushl pushl mov pushl call add neg sbb neg pop pop mov pop ret push mov push push push lea call mov lea call mov mov call mov push push call call pushl pushl mov call add neg sbb neg pop pop mov pop ret push mov pushl pushl pushl call add pop ret push mov push pushl call pop pop pop ret push mov pushl mov pushl neg pushl sbb and add push call add pop ret push mov pushl mov pushl neg pushl sbb and add push call add pop ret push mov mov pushl neg pushl sbb and add push call add pop ret mov xor push push push push push push push push push call add ret mov call sub push push push mov xor mov mov mov lea call movb lea call lea push mov call mov movb lea cmp je mov call mov mov mov mov mov mov mov mov movb movb lea call mov mov mov xor mov push pop mul seto neg or push call pop mov mov xor mov mov mov mov cmp je imul mov mov mov mov cmpb setne mov mov mov add mov call mov mov inc mov lea call mov jmp mov mov mov mov mov push xor push push push lea push push push push push call push call add movb movb lea call orl mov mov pop pop pop mov pop ret cmpl je pushl call pop mov ret mov call sub push push push mov mov andl xor xor mov dec jne inc mov sub je dec jne xor inc jmp xor pushl push lea call movb lea push push cmpb setne movzbl push push pushl lea call movb lea call lea push pushl mov call movb movb lea call movb lea call xor jmp mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov mov andl pushl pushl lea call movb lea call mov movl movl mov xor mov mov mov lea push lea call movb movb lea push push mov call movb movb lea call mov mov call movb movb movl xor jmp mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov mov andl lea call push mov call mov mov mov mov call xor jmp mov movb mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov mov andl lea call push mov call mov mov call xor jmp mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov mov andl lea call mov call mov mov call xor jmp mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov andl mov push push call pop pop xor jmp mov mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov xor mov lea call mov mov mov mov mov cmp je lea mov call add mov lea call mov jmp mov lea call mov call mov xor jmp mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov andl lea call mov pushl call test jne movl push lea push call xor jmp mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret push mov mov pushl mov pushl pushl mov call add pop ret push mov mov mov lea mov push push mov call pop pop pop ret push mov mov pushl mov mov call pop pop ret push mov mov mov call pop ret push mov mov call pop ret push mov mov mov call pop ret push mov mov push push mov mov pushl mov sub mov movsl movsl movsl movsl movsb call add pop pop pop ret push mov mov mov mov call pop ret mov call push push push mov mov movl andl mov mov movl mov call mov mov mov call mov orl mov mov pop pop mov mov pop ret mov call push push mov mov call xor mov lea mov movl movb movl mov mov movb mov mov mov movb mov mov mov orl mov mov mov mov pop ret mov call push push push mov mov movl call movb lea call movb lea call movb lea mov movb movl orl mov call mov pop mov mov pop ret mov call sub mov andl push push push mov mov call pushl lea call xor inc mov lea mov mov mov mov andl mov pushl movl call push push pushl mov call andl mov pop mov mov pop mov pop mov pop ret mov call sub push push push sub xor mov mov mov mov mov pushl mov call xor inc mov mov lea call movl lea call movb lea movzbl push call push lea mov push call movb jmp lea mov push lea push lea push lea push call lea push lea push lea call test jne mov lea push call mov movb movl movb mov mov movb lea mov movb mov mov lea mov mov pop mov mov mov pop mov pop mov pop ret push mov and push push push mov mov push call movzbl xor add cmp ja movzbl jmp mov xor inc cmpb je push call mov push mov pushl call mov mov mov call mov mov mov incl incl jmp cmpb push pop je pushl mov call mov mov push pushl call mov movzwl mov call mov mov mov add add jmp cmpb mov je push push pop call mov mov push pushl call mov mov mov call mov mov addl addl jmp pushl mov pushl pushl call jmp pushl mov pushl pushl call jmp pushl mov pushl pushl call jmp pushl mov pushl pushl pushl call jmp pushl mov pushl pushl pushl call pop pop pop mov pop ret adc adc adc add test add fists add sub adc adc adc adc adc or or or or or or or add or add add add add in push push mov xor mov mov div test je sub add mov pop pop pop ret push mov push push mov push cmpb je pushl push pop call mov mov push pushl call mov mov mov mov call mov mov mov mov addl addl pop pop pop pop ret mov call sub push mov push push mov mov cmpb je push push pop call mov mov push pushl call mov addl cmp jne mov mov call mov xor mov addl jmp mov add lea push lea push call andl mov mov mov push push pushl call push push call mov add xor mov lea push push pushl call mov add orl movl orl movl mov pop pop pop mov mov pop ret mov call sub push mov push mov push cmpb je push push pop call mov mov push pushl call mov addl mov cmp jne mov mov call mov xor mov addl jmp add mov push pushl mov call pushl xor mov mov mov mov lea push movl call movl lea push lea push call movb mov mov lea push lea push call movb cmpl mov jae lea mov add push push pushl call mov add mov xor mov lea push push pushl call mov add movb movl movb movl movb lea push push call orl lea push push call mov pop pop mov pop mov pop ret mov call sub push mov mov push call cmpb mov je pushl mov call mov sub mov mov push call andl orl lea call movl lea call movb jmp pushl lea mov pushl pushl push call lea push lea push lea call test jne cmp je pushl mov call movb lea mov movb mov mov orl lea mov orl mov mov pop mov pop mov pop ret mov call sub push push push mov mov call cmpb mov je push mov call mov mov push pushl call mov sub mov mov mov mov addl mov push call andl orl lea call movl lea call movb lea push lea push lea call movzbl lea andl push call imul mov push lea push call movb lea mov push push push call mov mov call mov mov mov addl test je pushl lea mov push lea push lea push call dec jne movb movl movb mov mov movb lea mov movb mov orl lea mov orl pop mov mov pop mov pop mov pop ret push mov push mov mov mov call test jne mov mov call mov mov andl jmp mov mov call mov mov mov call mov mov mov addl pop pop ret mov call sub andl push push push mov mov push call push mov push push call add movl movl movl movl movl mov mov movl lea lea push mov call xor mov movl mov mov sub cltd push pop idiv movl imul mov add add mov push call mov mov pop movl mov pop pop mov mov pop ret push push mov xor push push pop mov sub cltd idiv test je xor mov add mov call push call mov inc sub pop push pop cltd add idiv cmp jb mov mov jmp mov mov push call add cmp jne mov pop mov pop pop ret push mov push mov push mov call mov mov add cmp ja mov mov call add pop pop pop ret push lea movl push call int3 mov call sub andl mov push push push cmpl jb mov call mov mov test jne movl lea push push call movl xor mov call mov mov test je movb mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test sete mov test je push call mov pop mov mov andl test jne movb inc cmp jl movl lea push jmp lea push lea call movb xor mov xor push push mov movl mov mov lea push call movb xor inc mov movb lea push push call mov push call pop mov mov pop pop mov pop mov pop ret movl lea push jmp mov call push mov push mov mov cmp jae cmp ja sub push mov push cltd pop idiv mov cmp jne push mov call mov imul add andl test je push call orl add pop jmp cmp jne push mov call mov movl test je push call orl addl mov pop pop mov mov pop ret push mov push mov test je push mov jmp mov mov push call add cmp jne pushl call xor pop mov mov mov pop pop pop ret push push mov push push pop mov mov mov sub cltd idiv cmp jae sub mov cltd idiv mov mov sub cmp jb sub lea mov push cltd pop idiv mov shr sub cmp jae xor jmp add cmp jae mov push mov call pop pop pop ret call int3 mov call sub push push push mov mov xor mov mov test je cmp ja imul push call pop mov mov test jne call andl pushl push push push mov mov call add orl mov mov mov mov sub cltd movl idivl mov test je jmp mov push call mov add mov cmp jne pushl call pop imul add mov imul add mov mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call sub push push push mov mov mov mov mov andl cmp je movb test je push mov call movb add mov add mov jmp orl mov mov mov pop pop pop mov pop ret mov jmp mov mov call add push cmp jne push call int3 mov call push push mov mov movl xor mov movl mov mov orl mov mov mov mov pop ret push mov push push mov mov mov cmp jbe cmp jne mov mov call mov cmpb jne mov pop mov pop ret cmpb jne mov mov call mov cmpb jne mov jmp push lea movl push call int3 mov call push andl pushl call andl mov movl mov mov mov pop ret mov call push andl push mov mov call sub mov push mov call mov inc push call andl mov movl mov pop mov mov pop ret int3 int3 int3 push mov and push push mov push mov sub push push mov lea push call xor mov mov call movzbl add cmp ja mov jmp orl movl orl xor inc jmp orl movl orl push pop jmp orl movl jmp orl movl orl push jmp orl movl orl push jmp orl movl jmp orl movl jmp pushl mov sub mov mov push call movb mov lea call movb mov call mov lea mov mov mov orl movl orl mov mov pop pop mov pop mov pop ret push lea movl push call fstpl add fstpl add adc add adc add and add and add and adc and adc pop add dec and adc adc and adc add push add push mov and push push mov push mov sub push push mov lea push call xor mov mov call movzbl mov sub je mov dec je push call jmp sub mov mov push call movb mov lea call movb mov call mov lea mov mov mov jmp push pop orl movl orl mov mov pop pop mov pop mov pop ret mov call push push mov mov andl lea push call movb lea mov mov mov mov call orl mov mov movl pop mov mov pop ret mov call push push andl push push sub mov mov mov push call xor inc mov movb mov call mov lea push call andl mov mov mov pop mov pop mov pop ret push mov cmpb je push mov xor mov divl test je sub add mov pop pop ret push mov and mov push push push mov sub push mov mov call movzbl add cmp ja jmp push mov call mov mov pop mov pop ret push jmp push jmp push jmp mov call jmp mov sub mov mov push call andl orl mov call jmp mov sub mov mov push call movl orl mov call jmp push lea movl push call nop pop and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc and adc in push mov push push mov call push pushl lea call add pop pop pop ret mov call sub push push push mov call mov cmpl je pushl lea call andl lea mov mov lea push push call cmpl mov jae lea mov add push push lea call orl lea push push call jmp orl lea push push lea call addl mov pop mov pop mov pop ret mov call sub push push mov xor mov sub lea mov mov push call movb mov lea call movb lea call movb lea call push mov call jmp lea mov push call lea push lea push lea call test jne movb lea mov movb mov mov mov lea mov mov mov orl mov mov pop mov pop mov pop ret mov call sub push push push mov andl push call mov push mov add mov call mov push mov call mov mov mov mov test je lea mov lea push lea call movb lea push lea call movb mov movb lea push mov call movb mov dec jne mov mov orl mov pop mov pop pop mov mov pop ret mov call push push mov mov andl lea push call movb andl orl mov mov movl pop mov mov pop ret push push mov xor mov mov div test je sub add mov pop pop ret mov call sub push push push mov xor and lea mov call and lea push lea mov push call mov jmp test je lea call lea cmp jne sub lea mov mov push call movb movb lea call movb mov call mov mov call movb lea mov movb mov movl jmp call mov xor mov div test je sub add push lea call add mov lea mov push lea push call test jne test je mov call mov xor mov div test je sub add orl lea mov orl mov mov pop pop movl mov pop mov pop ret mov call sub push push push mov mov xor and mov mov mov call cmp jb xor jmp mov test jne test jne mov cmp jne mov mov mov cmp jne inc mov cmp jne inc cmp jne dec mov cmp jne dec test js test js lea mov mov mov call cmp jb mov mov sub push mov call add lea push call andl lea push lea call orl mov mov movl mov mov mov mov mov orl lea mov orl mov mov mov pop pop pop mov mov pop ret push lea movl push call int3 mov call sub andl push push mov xor lea inc call andl jmp lea call cmp ja mov lea mov push lea push call test jne orl lea mov orl mov mov pop movl pop mov mov pop ret push mov sub push push push xor or push push push push push push push call mov cmp je push mov lea push push lea push push call test je cmpl jne mov cmp jne push push pushl push call cmp je push lea push push lea push push call test je cmpl jne movzwl push call mov pop pop pop mov pop ret push mov sub push push mov xor push lea call test je mov mov mov call mov mov mov call mov mov mov mov call mov mov test je test je test je push push call mov cmp je push lea push push call add movl lea push push call test je mov push push lea mov push lea call add lea push push call test jne xor inc push call mov jmp xor pop pop pop mov pop ret push mov sub push push push mov mov mov mov lea mov call pushl lea push call test jne pushl mov mov call pop test jne add cmp jl xor pop pop pop mov pop ret xor inc jmp push mov push push push push push mov mov mov mov mov test je xor cmpl je mov push push lea mov call pop pop test jne mov inc mov imul cmpl jne xor pop pop pop mov pop ret xor inc jmp push mov sub push push push xor mov push push mov mov lea push call mov add cmpl je lea xor push push mov inc call pop pop test jne lea mov push push xor call pop pop test je cmpl je lea call mov lea lea call mov mov test je push push push lea call add test je xor inc jmp mov test je push push push lea call add test jne cmpl jne mov mov test je push push push lea call add test jne xor pop pop pop mov pop ret push mov sub push push push xor mov push push mov mov lea mov push call add xor mov lea push xor push push call add lea mov call cmpw lea je mov call lea lea call jmp lea call push lea push lea push mov call test jne xor jmp lea push call cmp je lea call mov cmpl je cmp jne mov mov cmp jge mov test jne cmp je cmp jl mov test je cmp jne mov mov mov mov lea mov add call xor inc pop pop pop mov pop ret push mov sub push push push mov mov lea mov call mov lea neg push sbb lea and add push push push push call test jne mov lea movl call mov lea push push lea push push lea push pushl call pushl mov call test jne cmpl je cmpl jne mov call test jle cmpw je mov mov call xor inc jmp xor pop pop pop mov pop ret push push mov mov mov mov call mov test jne call test je mov mov call mov mov mov call mov mov mov call mov mov mov call xor mov cmp je cmp je cmp je test je xor inc jmp xor pop pop ret push mov sub push push push xor xor push mov mov lea mov push push mov call add lea mov call mov mov mov call mov mov mov call mov mov mov call mov cmp je mov test je test je cmp jne lea push push call push call test je mov inc lea movl push lea push push call test je push push push lea movl push push pushl call test je xor inc cmpl je test je pushl call mov jmp xor pop pop pop mov pop ret test jne xor mov ret mov push push mov xor xor mov cmp je sub cmp je add mov xor mov cmp jne pop pop ret push push push push mov push push call mov test je lea call mov test je push push push call test jne push call pop xor pop pop pop ret mov jmp push mov push push push push push xor mov push push push mov mov lea mov push call test je push push pushl call test je inc cmpl je push pushl call pop mov pop pop mov pop ret push mov sub andl push push mov mov push pop lea call lea push call imul neg sbb and add call imul mov add test jne cmp je sub xor inc div lea pop pop mov pop ret push mov sub push push mov push mov cmp jbe test je mov lea push call mov xor div lea push mov call mov xor div mov mov mov cmp je mov mov mov mov mov dec jne pop pop pop mov pop ret push mov sub push push push xor movl push push push push mov mov mov mov lea mov push call test je lea push push push push pushl call test je push push push pushl call test je push lea push pushl push pushl call test je inc cmpl je pushl call cmpl je push pushl call pop mov pop pop mov pop ret push push mov call push call push push call push call pop ret push mov push call pushl push call push call pop ret push mov push xor cmp jle mov mov inc cmp jl pop pop ret push mov push mov test je sub mov dec cmp jne inc test jne xor inc pop pop ret xor jmp push mov xor push mov test jne xor jmp lea cmp ja imul movsbl add add inc mov test jne xor mov inc pop pop ret push mov xor push mov test jne xor jmp movzwl lea cmp ja imul mov add add add movzwl test jne xor mov inc pop pop ret push push push push pop mov mov call mov test je push pop mov xor push pop div dec mov add mov test je test jns sub lea push mov call add mov pop pop pop ret push mov push push mov mov push push mov call push mov call add cmp jb xor jmp push pushl call xor inc pop pop mov pop ret push push mov mov push call push push push call push push push push call sub neg pop sbb inc pop ret push mov push mov push push test jne test jne xor inc jmp test je mov xor jmp movzwl test je movzwl test je cmp jne dec add add test jg cmp jne cmp je xor test sete jmp xor pop pop pop pop ret push mov push push mov mov test je mov test je cmp jne dec inc inc test jg cmpb jne cmpb jne xor inc jmp xor jmp xor test sete pop pop pop ret push mov sub push push mov mov push mov test je mov movl sub test je mov test je movsbw movzwl lea cmp ja lea movzwl jmp mov mov movsbw push pop movzwl lea cmp ja lea movzwl jmp mov mov movzwl movzwl sub jne inc cmp jne cmpb je mov inc inc mov test jne xor pop pop pop mov pop ret mov jmp jmp cmp je add movzwl test jne cmp jne mov ret xor ret push xor mov jmp cmp jae inc add cmp jne pop cmp jne or ret push push mov push call lea call mov test je push push call mov pop pop ret push push mov push call lea call mov test je push push call mov pop pop ret push push xor mov push push push push push push push push call mov test je push mov call mov xor test je push push push push push push push push call test jne push call pop xor jmp mov pop pop pop ret push push xor mov push push push push push push call mov test je push lea call mov test je push push push push push push call test jne push call pop xor jmp mov pop pop pop ret push mov sub lea push push push push xor push push call add lea push pushl lea push call mov lea call mov test je lea push push push call push lea mov call add mov pop mov pop pop mov pop ret push mov push push push push push pushl mov mov call mov cmp jbe xor jmp sub xor mov mov mov push call pop test jne mov inc inc mov cmp mov jbe jmp mov pop mov pop pop mov pop ret push mov push push lea movl push call int3 movl ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret mov call sub push push push mov mov movl andl lea mov mov movl mov movb test jne mov mov lea push push call movb mov movl movb test jne mov mov lea push jmp mov push call pop movb lea movl movl pushl call movb lea pushl call orl mov mov pop pop pop mov mov pop ret push mov mov pushl pushl mov push call add test setne pop ret push mov mov pushl pushl mov push call add test setne pop ret mov push mov call pop ret mov push mov call pop ret mov push mov call test pop setne ret mov push mov call pop ret push mov mov pushl push mov call test pop pop setne pop ret mov push mov call pop ret lea ret lea ret mov call push push push mov call pop mov mov xor mov test je push pushl call orl mov pop mov mov pop ret mov call push push push mov mov movl movl movl lea call movb lea call movb lea call orl mov movl pop pop mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call sub push push push mov mov movl andl lea mov mov movl mov movb test jne mov mov lea push push call movb mov movl movb test jne mov mov lea push jmp mov push call pop movb lea movl movl pushl call movb lea pushl call orl mov mov pop pop pop mov mov pop ret push mov push mov lea push pushl mov pushl push call mov add mov pop ret push mov push mov lea push mov pushl mov pushl push call mov add mov pop ret push mov push mov lea push pushl mov pushl push call mov add mov pop ret push mov mov pushl push mov call pop pop pop ret mov push mov call pop ret mov push mov call pop ret mov push mov call test pop setne ret push mov mov pushl push mov call test pop pop setne pop ret mov push mov call pop ret mov push mov call pop ret mov call push push push mov call pop mov mov xor mov test je push pushl call orl mov pop mov mov pop ret mov call push push push mov mov movl movl movl lea call movb lea call movb lea call orl mov movl pop pop mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call sub push push push mov mov movl xor mov lea mov mov movl mov movb test jne mov mov lea push push call movb movl mov cmp jne mov mov lea push jmp movb push movl lea movl pushl call movb push pushl lea call movb lea pushl call movb mov push mov call pop orl mov mov pop pop pop mov mov pop ret push mov mov pushl push mov call pop pop pop ret push mov mov pushl pushl mov push call add pop ret push mov mov mov movzbl push mov push call pop pop pop ret mov push mov call test pop setne ret mov push mov call test pop setne ret mov push mov call pop ret mov call push mov push push mov call mov pop test je push push call pop mov xor mov test je push mov call mov orl mov push call pop mov pop mov pop mov mov pop ret mov call push mov push push mov call mov pop test je push push call pop mov xor mov test je push mov call mov orl mov push call pop mov pop mov pop mov mov pop ret lea ret lea ret mov call push push mov mov movl lea call movb lea call movb lea call movb lea call orl testb movl je push call pop mov mov pop mov mov pop ret push mov push push call mov sub mov mov mov dec mov cmpl je mov test je mov lea push call mov pop ret push lea movl push call int3 mov call push push push mov push mov movl xor mov mov movl mov movb test jne mov mov lea push push call movb lea movl movl pushl call movb lea pushl call movb lea pushl call movb lea pushl call movb lea pushl call movb lea mov mov movb mov movb mov pushl mov push call pop pop mov orl mov mov pop pop pop mov mov pop ret mov call push push mov push mov movl movl movl mov test je mov push call pop movb lea call movb lea call movb lea call movb lea call movb lea call movb lea call movb lea call orl mov movl pop pop mov mov pop ret lea ret push mov push pushl mov pushl mov push mov call add test jne xor jmp mov push mov call pop mov pop pop ret push mov push push push lea mov mov lea push call pop test je cmpl je mov mov push pushl pushl call pushl mov call pop mov pop jmp xor pop mov pop ret push mov mov mov movzbl push mov push call pop pop pop ret mov call push push push mov xor mov cmp jne xor jmp push call pop mov mov test je mov pushl mov call mov orl mov mov pop pop mov mov pop ret lea ret lea ret lea ret lea ret lea ret push mov sub mov push push push mov lea push call mov lea pop mov pop push pop rep mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop mov mov mov pop mov pop ret push mov and sub mov push push push mov lea push call push pop mov lea push rep mov push push call mov lea mov mov mov mov mov shr mov mov lea mov sub add push push push call lea mov sub push lea push push call add mov pop pop mov pop ret mov push mov call pop ret mov push mov call pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push push mov mov movl andl mov movl mov movb test jne mov mov lea push push call movb lea mov movl movl pushl call orl mov mov pop mov mov pop ret mov call push mov push push mov call mov pop test je push call pop mov mov xor mov test je push call orl mov pop mov mov pop ret mov call mov mov push movzbl mov push push call mov pop pop test je push call pop mov mov xor mov test je push call orl mov pop mov mov pop ret push mov mov pushl pushl mov push push call add test setne pop ret mov call push push mov mov movl lea call movb lea call orl testb movl je push call pop mov mov pop mov mov pop ret mov call push mov movl andl mov movl mov movb test jne mov mov lea push push call movb movl movl orl mov mov mov mov pop ret mov call push push mov mov andl lea call orl testb movl je push call pop mov mov pop mov mov pop ret mov call push push push push push mov mov push pop call mov test je mov call mov test je lea mov mov push push push push call add test je cmpl je push call pop mov mov xor mov test je push call orl jmp push call pop xor mov pop pop pop mov mov pop ret mov call push push push pushl mov mov call andl movl orl mov mov pop mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push push push pushl mov mov call andl movl orl mov mov pop mov mov pop ret mov call push mov push push mov pushl mov call andl movl orl mov mov pop mov mov pop ret mov call push mov movl orl call mov mov mov pop ret mov push mov call pop ret mov call push push mov push mov call push mov call andl movl orl mov mov pop mov mov pop ret mov call push push mov mov orl call testb je push call pop mov mov pop mov mov pop ret mov call push push push push mov xor push push mov mov lea call movl mov movb pop test jne mov mov lea push push call mov movl mov cmp jne mov mov lea push jmp movl lea pushl movl call orl mov mov pop pop pop mov mov pop ret mov call push push mov mov andl lea call orl mov call testb je push call pop mov mov pop mov mov pop ret push mov call test je mov push push call pop pop pop ret push mov mov pop jmp mov call push mov push mov mov mov movl mov mov test jne mov mov lea push push call andl test mov sete movl mov test jne mov mov lea push jmp test je mov push call pop orl mov mov pop mov mov pop ret mov call push push push push push mov mov mov movl andl movb call andl jmp mov ret andl mov orl mov call mov mov pop pop pop mov pop ret push mov push pushl mov call mov mov movb call mov pop pop ret mov push mov call pop ret cmpb je push lea push call push mov call pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret push mov push mov mov call mov movb mov mov mov pop pop ret cmpb je push lea push call push mov call pop ret mov call push push push push push mov mov mov movl andl movb call andl jmp mov ret andl mov orl mov call mov mov pop pop pop mov pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret mov call push push mov xor mov mov mov mov mov test jne mov jmp cmp mov jne push jmp push call mov orl mov mov pop mov mov pop ret push mov push mov test je mov call mov pop ret push lea movl push call int3 mov call push push push push push mov mov mov movl andl movb call andl jmp mov ret andl mov orl mov call mov mov pop pop pop mov pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret mov call push push push push push mov mov mov movl andl movb call andl jmp mov ret andl mov orl mov call mov mov pop pop pop mov pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret mov call push push push push push mov mov mov movl andl movb call andl jmp mov ret andl mov orl mov call mov mov pop pop pop mov pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret mov call push push mov mov andl mov test je mov cmp setne movzbl push call andl orl mov test je mov cmp setne movzbl push call andl mov pop mov mov pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret sub jmp sub jmp sub jmp sub jmp sub jmp sub jmp mov call push push push pushl mov mov lea call andl lea mov mov pushl push call pop pop mov orl mov mov pop pop mov mov pop ret mov call push push mov mov andl mov test je mov push call pop andl orl lea call mov pop mov mov pop ret push call ret push mov mov push mov push mov call movb mov pop pop ret jmp push mov cmpb je pushl call movb pop ret mov call push push mov mov movl xor mov movl movl pushl movl pushl movl movl mov mov call orl mov mov pop mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push mov movl xor mov movl movl movl movl movl mov mov orl mov mov mov mov pop ret mov call push push push mov mov movl andl movl movl mov movl push movl movl call pop mov mov orl mov mov pop pop mov mov pop ret mov call push push mov mov movl xor mov movl movl pushl movl movl movl mov mov call orl mov mov pop mov mov pop ret mov call push push mov mov movl movl andl call orl movl orl mov movl pop mov mov pop ret push mov push mov push mov mov mov call push mov mov call push mov call mov pop pop pop ret push mov push mov push mov mov mov call push mov mov call push mov call pop pop pop ret push mov push push mov mov push mov lea push call mov push pushl add push call add pop pop pop pop ret push mov push push mov call mov push call push pushl mov push mov call add pop pop pop ret push mov push push mov mov test jne call jmp push pushl call pop pop mov mov pop pop pop ret push mov cmpl je pushl push pushl call add cmpl je pushl call pop andl andl pop ret mov call sub push push mov push mov push mov mov test je mov lea push call test je pushl mov pushl call test je mov jmp xor jmp xor lea mov test mov push je call jmp call test je pushl lea call mov mov pushl pushl call test je lea mov push lea call orl lea call mov mov pop pop pop mov mov pop ret push mov cmpb mov mov je pop jmp pop jmp mov call sub push push mov lea push mov mov add mov call test je testb jne mov test je cmpl jb mov pushl mov push call mov jmp pushl lea call andl mov pushl pushl call test je mov xor shr xor mov inc push pushl mov mov mov lea movl call movb lea cmp je push push push mov call movb lea push push call orl lea call mov jmp orl lea call xor mov pop pop mov pop mov pop ret push mov mov lea sub push push mov mov push push pop mov lea rep push lea call pop xor mov xor mov inc cmp jb pop pop mov pop mov pop ret push push push push mov call mov push sub pop mov xor inc dec jne push mov call lea mov push mov call pop mov inc mov call and cmp jbe lea mov push call push mov mov call push sub pop mov xor inc dec jne push mov call lea mov push mov call pop mov inc mov call shr cmp jb mov mov call test jbe mov call push mov mov call pop pop pop pop ret push mov push push push push mov push mov mov call test jbe mov call push lea mov call pop mov mov call mov shr dec jmp call push mov lea call pop lea mov push mov call push mov mov call sub mov mov mov xor inc dec jne mov test push pop push mov jne call push lea mov call pop push mov call sub mov xor inc dec jne pop pop pop mov pop ret push mov mov mov call mov shl add pop ret push push mov mov mov call mov mov mov call add pop add pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret push mov push mov mov call mov cmpl jb mov push push pushl push pushl pushl push call xor mov cmp pop setne pop ret push mov push mov cmp je push mov lea push push push pushl push call test je cmp pop je movl jmp mov pop ret movl push lea push call int3 push mov push push mov mov push mov mov mov call push mov mov call push mov call pop pop pop pop ret push mov push mov cmp je push lea push pushl pushl push call test jne movl jmp mov mov pop ret movl push lea push call int3 push mov cmpl je pushl call orl pop ret push mov push mov cmp je push push call cmp jne movl jmp mov pop ret movl push lea push call int3 push push call ret push mov pushl push call pop ret push mov push push push push mov call pushl call pop test je mov pop ret push lea movl push call int3 push mov mov cmp je pushl push pushl push call cmp jne movl jmp pop ret movl push lea push call int3 mov call push push push push mov andl pushl call pop orl mov mov pop pop pop mov pop ret mov ret push mov mov push mov mov mov lea push call int3 mov call push push push push push mov mov mov xor mov movb cmp jne mov jmp push mov call test jne push pushl call pushl call mov jmp mov ret andl mov orl mov call mov mov pop pop pop mov pop ret push mov push push mov xor cmp jne push push push push push push call add mov pop test je mov pop ret push lea movl push call int3 push mov cmpl je mov cmp je imul push pushl call test je cmp jne xor jmp mov pop ret push lea movl push call int3 mov call push push push push mov andl push call push call push call call mov mov call orl xor mov mov pop pop pop mov pop ret mov ret push mov push pushl call mov pop test jne xor jmp mov pushl push call pop pop test jne mov push call pop jmp mov pop pop ret push mov push push push mov mov push pop call mov test je lea movl push call lea push call movl xor mov movl movl call mov test jne push call pop xor pop pop mov pop ret call mov mov mov mov mov mov mov jmp push mov push push mov push mov call pop lea push call pushl push call pop pop push call mov push call pop pop pop pop ret push mov push push mov push mov push lea push call lea push mov call cmpl je cmpl jne mov push call mov lea mov mov pop push call pushl push call pop pop pushl call mov push mov call pop jmp mov push call pushl call pop pop pop mov pop ret push mov push mov push xor lea push call cmp jne mov push mov push mov push push call add test je mov push push call pop pop test jne mov push push mov call pop pop jmp xor inc pop lea push call mov pop pop pop ret push mov push push mov lea push call cmpl je push mov push push mov call mov push push mov call add pop push call pop pop pop ret push mov push mov push lea push call mov push mov call pop pop pop ret push mov push mov push lea push call mov push mov call pop pop pop ret push mov push mov push lea push call mov mov mov mov mov push mov call pop pop pop ret push mov push mov push mov push lea push call lea push call mov push movl call mov test je mov push call pop jmp call mov push push call mov push mov call add test mov push mov jne call andl pop lea push call mov push call pop pop pop pop pop ret push mov push mov lea push call lea push call push call pop pop pop ret push mov mov call test jne pop ret push call mov test jne call mov call mov mov call mov pop pop ret push push call mov mov mov call test je mov call mov mov call mov pop pop ret push push push mov mov mov xor call test je mov test je mov push push call pop pop mov mov call mov pop pop pop ret push push mov xor push mov call call mov test je call mov test jne mov push push call pop pop mov call pop mov pop pop ret push push call mov mov mov call test je call test je push mov test je mov push call mov push push call mov push call add test jne mov call test je mov test je mov push call andl pop mov call pop pop mov pop jmp pop pop ret push push mov mov mov call test je mov call test je mov push call pop mov pop pop jmp pop pop ret push mov mov call test jne pop ret cmpl jne call mov mov call mov pop ret push mov push andl push mov mov call test je push call mov test je push mov push call push push call add pop test jne mov push call pop jmp movl mov call mov pop pop mov pop ret movzbl push push movzbl shl push add lea movzbl shl push add pop mov and jns dec or inc mov mov cltd and mov sub lea sar dec jne pop pop pop ret push mov push push push push push mov mov push pop xor lea div lea call mov mov test je push pop cmp jb mov xor div mov mov mov call push pop sub add add decl jne test je xor movb push mov mov lea call add mov call push pop mov cmp jne mov add xor mov mov pop pop pop mov pop ret push lea pop cmp ja movzwl sub ret lea cmp ja movzwl sub ret lea cmp ja movzwl add ret cmp jne push pop ret xor cmp setne dec and dec ret push mov sub push push push push mov xor mov mov pop mov call mov inc cmp jl mov mov xor mov inc cmpl jge test je cmpw jne andl dec jmp xor dec jns test jns xor mov shl add shl add shl add cmp jge sub mov cltd and lea sar dec jne lea test js mov mov and jns dec or inc mov mov cltd and lea sar dec jns mov pop pop pop mov pop ret or jmp push mov sub andl mov push push mov push mov mov push mov call lea call pushl mov mov call mov call mov test je test je pushl push call push push call mov push xor pop jmp call test jns add movzwl cmp jne mov add mov inc cmp jb lea lea call mov lea mov push mov add call mov add add mov cmp je mov mov push mov call xor pop inc jmp push call pop cmpl je pushl call andl pop mov andl xor pop pop pop mov pop ret push push pop call mov test je andl mov push push push push mov call add test jne push call pop xor pop ret mov pop ret push mov push mov push lea push call andl push call pop pop pop ret push mov push mov cmpl jne push lea push call mov test je mov push push call pop pop push call pop pop pop ret jmp push xor push push push push call mov test jne pop ret push xor mov call mov test jne push call mov pop pop ret push push push mov mov push pop call mov test je push push push push mov mov call add test jne push call pop xor pop pop pop ret mov jmp push mov mov pushl call pop ret push mov mov pushl call pop ret push mov push mov pushl call push call pop pop pop ret push mov push push push push mov mov call mov test je push pop call mov test je movl lea movl mov push movl movl call pushl mov mov call mov pop test je andl andl mov push push mov call pop pop test je mov mov jmp push call pop xor pop pop pop mov pop ret push mov push mov push lea push call call add mov mov movl test je mov push mov call pop push call pop pop pop ret push mov mov mov pop ret push mov push mov push lea push call andl mov test je mov push mov call pop push call pop pop pop ret push mov push mov push lea push call andl push call pop pop pop ret push mov push push mov push lea push call xor cmp je cmp jne mov inc mov mov push call mov pop pop pop pop ret push mov push mov push lea push call mov lea push push call pop pop test je mov cmp jb andl mov test je mov push call pop push call mov push call mov push call pop pop jmp push call pop pop pop ret push mov push mov push lea push call mov push call pop mov movl test je mov push call pop andl mov test je mov push push mov call pop pop andl push call mov push call pop pop pop pop ret push mov push mov mov test je mov push call pop mov test je mov push push mov call pop pop lea push call push call pop pop pop ret push mov sub andl push xor push push mov lea mov movzbl mov and mov mov inc neg mov sbb add and xor xor cmp jl xor mov inc mov movzbl shl mov mov and add neg sbb add and xor cmp jl andl movl movzbl lea sub mov mov rol xor rol xor rol mov rol xor xor xor movzbl mov mov inc cmp jl mov xor mov mov mov mov mov and neg sbb add and xor movzbl movzbl mov shl xor shl xor shl xor xor mov ror mov ror mov ror mov test je movzbl movzbl movzbl add cltd idiv movzbl mov jmp andl test je movzbl movzbl movzbl add cltd idiv movzbl mov jmp andl test je movzbl movzbl movzbl add cltd idiv movzbl jmp xor test je movzbl movzbl movzbl add mov cltd idiv movzbl jmp xor shl xor mov shl xor shl xor mov ror mov ror mov ror mov add cmp jl pop pop pop mov pop ret push mov sub cmpl push push mov mov mov je call andl mov mov sub je sub je sub je xor inc jmp movl jmp movl jmp movl andl mov sar push mov test jle mov add mov movzbl movzbl shl or movzbl shl lea or movzbl shl or mov inc cmp jl mov mov sub je sub je sub jne mov mov mov mov shr movzbl mov mov shl shr movzbl xor movzbl shl xor mov shl shr xor xor xor mov mov xor mov mov xor mov xor mov mov mov shr mov mov shr shl movzbl shr xor shl movzbl mov add mov xor movzbl shl xor xor mov xor mov mov xor mov mov xor mov add cmp jl jmp mov mov mov shr movzbl mov mov shr shl movzbl xor movzbl shl xor mov shr shl xor xor xor add mov xor mov mov xor mov mov xor mov mov xor mov xor mov mov add cmp jl mov jmp mov mov mov shr movzbl mov mov shr shl movzbl xor shl movzbl xor mov shr shl xor xor xor add mov xor mov mov xor mov xor mov mov add cmp jl cmpl je xor mov mov mov mov mov mov mov mov mov add cmp jl andl mov lea mov mov mov mov mov mov add mov xor inc add mov cmp jle mov mov shr mov shr movzbl shr mov xor movzbl xor movzbl xor mov mov mov shr mov shr movzbl shr mov xor movzbl xor movzbl xor mov mov mov shr mov shr movzbl shr mov xor movzbl xor movzbl xor mov mov mov shr mov shr movzbl shr mov xor movzbl xor movzbl add xor mov mov add inc mov cmp jl mov mov mov mov mov mov mov mov xor pop pop pop mov pop ret int3 push mov sub movzbl push push push mov movzbl movzbl shl or shl movzbl lea shl or movzbl shl or movzbl xor mov movzbl shl or movzbl shl or movzbl shl or movzbl xor mov movzbl shl or movzbl shl or movzbl shl or movzbl xor or movzbl shl or mov movzbl shl or mov shr xor movzbl mov shr movzbl mov xor mov shr xor movzbl xor mov xor shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor xor mov shr movzbl mov mov shr mov mov shr xor movzbl mov shr xor movzbl shr xor xor movzbl mov mov mov xor mov shr movzbl xor mov movzbl xor mov shr movzbl mov xor add shr mov movzbl xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr mov mov xor mov shr movzbl xor movzbl xor xor shr mov shr movzbl xor mov shr movzbl xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor add xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr shr mov xor mov mov mov shr mov movzbl xor mov movzbl xor mov xor shr movzbl mov xor mov shr movzbl xor movzbl xor mov xor add shr movzbl mov mov shr movzbl mov xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr shr mov xor mov mov mov shr movzbl mov xor mov movzbl xor mov xor shr movzbl mov xor mov shr movzbl xor movzbl mov xor mov xor add shr movzbl mov shr movzbl mov xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov mov shr movzbl xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr shr mov xor mov mov shr movzbl mov mov xor mov movzbl xor mov xor shr movzbl mov xor mov shr movzbl xor movzbl mov xor mov shr xor add movzbl mov shr movzbl mov xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr mov movzbl mov mov shr shr xor mov mov shr movzbl mov mov xor mov movzbl xor mov shr xor movzbl mov xor mov shr movzbl xor movzbl mov xor mov shr movzbl mov shr xor add mov movzbl xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr mov mov movzbl shr mov xor mov mov mov shr movzbl xor mov movzbl xor xor mov shr mov mov shr movzbl xor mov shr movzbl xor movzbl mov xor mov shr movzbl mov shr movzbl mov xor add xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr shr mov xor mov mov mov mov shr movzbl xor mov movzbl xor mov xor shr movzbl mov xor mov shr movzbl xor movzbl xor mov xor add shr movzbl mov mov shr movzbl xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr mov shr xor mov mov mov shr movzbl xor mov mov mov movzbl shr xor mov mov xor mov mov movzbl mov xor mov shr movzbl xor movzbl xor mov mov xor mov mov cmp jle mov mov shr movzbl mov shr movzbl mov mov xor mov shr xor mov movzbl xor xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor movzbl xor xor mov shr movzbl mov mov shr shrl mov xor mov mov mov shr movzbl shr xor movzbl shr xor xor movzbl mov mov xor movzbl xor mov movzbl xor mov xor add shr movzbl mov shr movzbl mov xor mov shr xor movzbl xor mov xor shr mov movzbl mov mov shr movzbl xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr shr mov xor mov mov mov shr movzbl xor mov mov mov movzbl shr xor mov mov xor mov movzbl mov xor mov shr movzbl xor movzbl xor xor mov mov cmp jle mov shr movzbl mov shr movzbl mov mov xor mov shr xor mov movzbl xor xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor movzbl xor xor mov shr movzbl mov mov shr mov shrl xor mov mov mov shr movzbl shr xor movzbl shr xor xor movzbl mov mov xor movzbl xor mov movzbl xor mov xor add shr movzbl mov shr movzbl mov xor mov shr xor movzbl xor mov xor shr mov movzbl mov mov shr movzbl xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr shr mov xor mov mov mov shr movzbl xor mov mov mov movzbl shr xor mov mov xor mov movzbl mov xor mov shr movzbl xor movzbl xor xor mov mov mov shr mov mov shr movzbl shl xor mov shr movzbl shl xor mov movzbl shl xor xor mov shr mov mov mov mov shr movzbl shl xor mov shr movzbl shl xor movzbl mov shl xor mov xor shr mov mov mov mov shr movzbl shl shr xor mov shr mov movzbl shl shr shl xor mov movzbl shl xor xor movzbl mov xor mov shr movzbl shl xor mov movzbl shl xor mov xor shr mov mov shr mov mov shr mov mov mov mov mov shr mov mov shr mov mov shr mov mov mov mov shr mov mov shr mov mov shr mov mov shr mov mov shr mov mov pop shr pop mov mov mov pop mov pop ret push mov sub mov movzbl shl mov push push lea movzbl movzbl or shl movzbl shl or movzbl shl or movzbl xor mov movzbl shl or movzbl shl or movzbl shl or movzbl xor mov movzbl shl or movzbl shl or movzbl shl or movzbl xor or movzbl shl or mov movzbl mov shl or xor add mov mov mov shr movzbl mov shr movzbl push mov xor mov shr xor mov mov mov movzbl xor mov mov mov xor mov mov shr movzbl mov shr xor mov mov shr movzbl mov xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov shr movzbl xor movzbl shr xor xor movzbl mov mov mov xor mov shr movzbl xor mov movzbl xor xor add mov mov mov shr movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl shr xor mov mov mov xor mov mov shr movzbl mov xor mov mov mov shr movzbl xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov shr movzbl xor movzbl shr xor mov xor movzbl mov mov xor mov shr movzbl xor mov movzbl xor xor add mov mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl shr xor mov mov mov xor mov mov shr movzbl mov xor mov mov mov shr movzbl xor movzbl xor xor mov mov mov shr shr movzbl mov xor mov shr movzbl xor movzbl shr shr xor mov xor movzbl mov mov xor mov shr movzbl xor mov movzbl xor xor add mov mov shr movzbl mov mov shr movzbl mov xor mov shr xor mov mov mov movzbl shr xor mov mov mov xor mov mov shr movzbl mov xor mov mov mov shr movzbl xor movzbl xor xor mov mov mov shr movzbl shr shr mov xor mov shr movzbl xor movzbl shr xor mov xor movzbl mov xor mov shr movzbl xor mov movzbl mov xor xor add mov mov shr movzbl mov shr movzbl mov mov xor mov shr xor mov mov mov movzbl shr xor mov mov mov xor mov mov shr movzbl mov xor mov mov mov shr movzbl xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov shr movzbl xor movzbl shr xor mov xor movzbl mov mov xor mov shr movzbl xor mov movzbl xor xor add mov mov shr movzbl mov mov shr movzbl mov xor mov shr xor mov mov mov movzbl shr xor mov mov mov xor mov mov shr movzbl mov xor mov mov mov shr movzbl xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov shr movzbl xor movzbl shr xor mov xor movzbl mov mov xor mov shr movzbl xor mov movzbl xor xor add mov mov mov shr movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl xor mov mov mov shr xor mov mov shr movzbl mov xor mov mov shr mov movzbl xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov shr movzbl xor movzbl shr xor mov xor movzbl mov mov xor mov shr movzbl xor mov movzbl xor xor add mov mov mov shr movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl shr xor mov mov mov xor mov mov shr movzbl mov xor mov mov shr movzbl mov xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov shr mov movzbl xor movzbl shr xor mov xor movzbl mov xor mov shr movzbl xor mov movzbl xor xor add mov shr movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl shr xor mov mov xor mov mov mov shr movzbl mov xor mov mov mov shr movzbl xor movzbl xor xor mov mov mov shr shr mov movzbl shr xor mov mov mov mov shr movzbl xor movzbl shr xor mov mov xor mov mov movzbl xor mov shr movzbl xor movzbl xor mov xor mov mov mov cmp jle mov mov shr movzbl mov shr movzbl mov mov xor mov shr xor movzbl xor mov xor shr movzbl mov mov shr mov mov shr xor movzbl xor mov movzbl xor mov xor shr movzbl mov mov mov shr shr mov xor mov mov shr movzbl xor movzbl shr xor movzbl mov xor xor mov shr movzbl xor mov movzbl xor xor add mov shr movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl xor mov mov xor mov mov shr movzbl shr mov xor mov mov mov shr movzbl xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov mov mov mov shr movzbl xor movzbl shr xor mov mov xor mov mov movzbl xor mov shr movzbl xor movzbl xor xor mov mov cmp jle mov mov shr movzbl mov shr movzbl mov xor mov shr xor movzbl xor mov xor shr movzbl mov mov shr mov mov xor shr movzbl xor mov movzbl xor mov xor shr movzbl mov mov mov shr shr mov xor mov mov shr movzbl xor movzbl shr xor movzbl mov xor xor mov shr movzbl xor mov movzbl xor xor add mov shr movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl xor mov mov xor mov mov shr movzbl shr mov xor mov mov mov shr movzbl xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov mov mov mov shr movzbl xor movzbl shr xor mov mov xor mov mov movzbl xor mov shr movzbl xor movzbl xor xor mov mov shr mov mov mov shr movzbl mov shl xor mov shr movzbl shl xor shl movzbl xor mov xor shr mov mov mov mov shr movzbl shl xor mov shr movzbl shl xor movzbl shl xor mov xor shr mov mov mov mov mov shr movzbl shl shr xor mov shr movzbl shl xor movzbl shr shl xor mov mov xor shr movzbl shl xor movzbl mov shl xor mov movzbl shl xor mov xor shr mov mov shr mov mov mov shr mov mov mov mov mov shr mov mov shr mov mov shr mov mov mov mov shr mov mov shr mov mov shr mov mov shr mov mov shr mov mov pop shr pop mov mov pop mov pop ret push mov mov add push call pop ret push mov push mov push lea push call test jne push push call pushl call pop pop pop pop ret push push mov mov call mov test je lea push call mov movl movl mov call test jne push call pop xor pop pop ret mov jmp xor jmp push mov call mov mov call mov mov test je test je xor inc or mov or mov mov mov mov mov pop mov ret test je call andl mov test je call andl xor pop ret push lea xor pop testb je inc add cmp jb call test jne ret orl ret movl ret testb je push call pop ret push mov xor stos stos stos stos pop ret mov jmp cmp jne testb je mov test jne ret push mov push push push push mov mov xor lea push call mov test jne mov jmp mov call mov test je mov call mov test je andl mov mov mov mov mov mov mov mov lea incl push call xor inc jmp lea push call test je mov call xor pop pop pop mov pop ret push mov and sub push push mov push xor lea push call cmp je mov mov lea call jmp pushl pushl call pop pop test je mov lea push lea push mov call pop pop test jne jmp mov mov mov push call pop push mov call pop mov pop pop mov pop ret push mov push mov push lea push call mov mov call test jne xor jmp mov call xor inc push call pop mov pop pop ret mov push mov push mov mov mov mov mov call decl pop pop ret push mov push mov push lea push call mov test je push testb mov jne mov call mov test jne pop push movl call pop pop pop ret push mov push push mov push xor lea push call mov mov testb jne mov push call mov pop pop pop pop ret push mov push push mov push xor lea push call mov mov testb jne mov push call mov pop pop pop pop ret push mov mov mov call neg sbb neg pop ret push mov mov mov pop ret push mov and sub push push push mov lea push call mov push call pop mov mov cmp ja mov mov mov mov lea call lea push lea push mov call pop pop test je xor mov mov mov lea push lea push mov lea call pop pop test jne push call xor inc pop pop pop mov pop ret mov shl call mov mov test jne push call mov cmp je test je push call andl pop mov andl xor jmp push mov and sub xor push push push call mov test jne jmp mov lea push call mov lea call lea push lea push mov call pop pop jmp mov push pushl push call lea push lea push mov call add test jne push call mov pop pop pop mov pop ret push mov push mov push mov call mov pop call mov call lea push call push call pop pop pop ret push mov mov mov movl movl mov mov pop ret push mov mov mov mov mov test je testb jne test je mov mov mov mov andl xor inc pop ret xor pop ret push mov mov mov testb jne mov mov mov mov pop jmp pop ret push mov push push push push mov call mov call mov cmp je xor jmp test jne call sub cmp ja inc push push push call cmp jne jmp pushl push push call test je push call xor jmp mov incl xor inc pop pop pop mov pop ret push mov call mov decl jne push push call pop ret push push push push pop call mov test je lea movl push call call xor mov call xor mov call xor mov call xor mov cmp je cmp je test je mov mov mov mov call test je xor call xor mov call mov cmp je test je push push mov mov call mov pop pop test je call mov test je mov jmp push call mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop xor pop pop pop ret push mov push push push mov lea push lea xor push mov mov push push mov push call add test je cmp jbe mov mov push mov call inc pop cmp jb pushl call pop mov push mov call mov push mov call mov push mov call mov push mov call mov push mov call mov push mov call mov push mov call mov push mov call add lea push call push call pop pop pop mov pop ret push mov push mov push mov push mov push push mov call add test jne xor jmp mov push call pop cmp je mov push push push mov mov call pop push pushl call add pop test jne mov push push mov call pop pop jmp xor inc pop pop pop ret push mov push mov push push mov push mov push mov call pop pop test je mov push push mov call mov push call add cmp je mov push mov mov call push pushl call add cmpl je lea push call mov push push mov call pop pop push call pop pop pop pop ret push mov push push push mov xor lea push call mov pushl push mov call pop pop test jne mov push pushl mov push call add test je mov push mov call pop xor inc push call pop mov pop pop pop ret push mov push mov push lea push call mov pushl push mov call pop pop test je mov pushl push mov call pop pop push call pop pop pop ret push mov sub push push xor lea xor mov stos stos stos stos call mov call mov cmp jne pushl pushl call pop xor pop inc jmp cmp je xor jmp push push push push call mov test je mov push mov lea mov mov mov push mov call mov lea push push push mov call add push test jne call jmp call mov push call pop push pushl call test jne mov cmpl pop je pushl call mov pop pop mov pop ret push mov push push push or call mov xor mov test je push push mov mov call mov pop pop test je jmp call test je mov call mov cmp je call mov mov mov test je mov push call pop mov mov test je mov push call pop mov mov pop pop pop pop ret push mov push mov push mov call pop pop test je push mov push push mov call mov pop pop test je mov push call mov push call pop pop mov push push mov call pop pop test jne pop mov pop jmp push mov mov push mov call pop mov pop cmp jae jmp push mov sub push mov lea push push lea xor mov push push lea mov push push call add test je mov push mov test je mov mov push mov call mov inc mov pop cmp jb push push lea push push call mov mov dec pop cmp ja mov pushl push mov call pop xor pop inc lea cmp je pushl call pop mov pop pop mov pop ret push mov and sub push push mov mov call test je mov lea xor call jmp cmp jge mov mov mov inc lea push lea push mov call pop pop test jne push push lea push push call lea cmp ja mov call xor inc jmp xor pop pop mov pop ret push mov sub mov push push push mov xor lea mov mov push lea mov push push lea push push call add test je mov push push call mov pop pop test je movl mov mov call mov cmp jbe mov mov push mov call pop mov mov incl cmpl jne pushl call push pushl call mov push push mov call mov pop pop test je movl inc cmp jb pushl call xor inc mov test je lea cmp je push call pop mov pop pop pop mov pop ret push mov sub push lea call lea push lea push mov call pop pop test je mov mov pushl call mov push pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea push mov call lea push lea push mov call add test jne pop mov pop ret push push mov mov push call mov test je mov xor push push push push movl call mov xor push push push push call mov xor push push push push call mov xor push push push push call mov xor mov cmp je mov test je cmp je test je push push push push push mov push movl mov call mov test je push pushl call pushl call mov jmp cmp je mov test je push movl call push pushl call mov mov test je push call mov test je push call mov test je push call mov test je push call mov test je push call push call pop xor pop pop pop ret push mov push push push mov jmp pushl call push pushl call pushl mov call pushl call test jne and lea push push push pushl call test je cmp je cmp jae cmp jae mov mov push push mov mov call pop pop jmp call xor cmp jbe mov cmp je push pushl call test jne mov pushl push mov call pop pop mov inc add cmp jb cmpl je xor pop pop pop pop ret xor inc jmp push mov push mov push mov pushl movl call pushl call push pushl call pushl mov call pushl call pushl call pushl call pushl call push call pop pop pop pop ret push mov sub push push mov lea push call mov lea push lea push mov lea push push push call add test jne push call jmp mov push mov call pop push call xor cmp jbe mov mov pushl pushl call mov pop pop mov movl mov mov pushl call inc cmp jb lea cmp je pushl call pop pop pop mov pop ret push mov mov push mov call pop test je push mov push mov call mov mov push push mov call andl add pushl call mov push mov call pop test jne pop pop ret push mov mov pop jmp push mov push mov push mov mov movl mov pushl call pushl call pushl call pushl call pop pop pop ret push mov mov push call pop pop ret push mov mov push mov movl call pop pop ret push mov mov movl pop ret push mov push andl lea push push pushl mov mov push mov call mov pop pop test je mov push push call pop pop jmp cmpl jne mov call test je mov call cmpl je mov push call jmp mov push call pop push call pop pop pop mov pop ret push mov mov mov push mov call pop pop ret push mov sub push push mov lea push call mov lea push lea push mov lea push push push call add test jne push call jmp mov push push mov call xor mov pop cmp jbe mov mov push mov call inc pop cmp jb push call mov mov call cmp jbe mov mov push mov call mov mov push mov call mov mov push mov call add inc cmp jb lea pop cmp je pushl call pop pop pop mov pop ret mov call test jne ret movl movl mov mov mov mov ret lea cmp jb lea cmp jae andl ret push call pop ret push mov push push mov push pushl call pop mov lea mov mov and xor cmpl je inc add cmp jb push pop call mov mov jmp imul lea add xor mov stos stos stos stos stos movl test jne xor jmp mov mov mov mov xor mov mov mov mov incl inc pop pop pop pop ret push mov push push mov pushl call and pop mov jmp pushl pushl call pop pop test jne mov test jne xor pop pop pop ret mov jmp push mov push mov push pushl call and lea pop lea jmp mov pushl pushl call pop pop test jne mov add cmpl jne jmp mov mov push mov call decl mov pop pop pop pop ret push mov push mov push push push pop lea mov cmpl je mov mov mov call mov decl cmpl jne mov add dec mov jne andl pop pop pop pop ret push mov mov mov pop ret push mov mov lea sub call mov test jne lea push lea push mov call pop pop test je push mov test je lea push mov call pop mov xor inc pop mov pop ret push mov push mov push mov call push call pop pop pop pop ret push mov mov andl andl orl movl movl pop ret push mov push mov push mov mov test je mov test je mov mov jmp mov test js cmp jge cmp jne mov mov decl mov mov call mov andl mov decl pop pop pop ret push mov mov push mov mov test je mov mov test jne andl mov cmp jge inc mov mov test je mov pop test je mov mov mov mov mov mov xor inc pop ret xor pop ret push mov mov shr pop ret push mov mov xor cmp sete pop ret push mov and sub push push push mov push mov call mov pop mov cmp ja mov mov mov mov lea call lea push lea push mov call pop pop test je xor mov mov mov lea push lea push mov lea call pop pop test jne xor inc pop pop pop mov pop ret mov shl call mov mov test jne and jmp push mov push push push push push mov mov push push call add lea push call movl movl call mov test je xor call mov test je mov movl mov movl movl andl mov mov mov mov mov mov mov mov mov test jne mov mov mov push push call pop pop test je xor inc jmp cmpl je push call mov test je mov push call pop xor pop pop pop mov pop ret push mov mov push call pop pop ret push mov mov push call pop pop ret push mov mov mov pop ret push mov mov xor push call pop pop ret push mov mov mov push call pop pop ret push mov sub push mov mov cmpl jne push lea push call mov lea push lea push mov lea push push push call add test jne push call jmp push xor cmp jbe mov mov push mov call inc pop cmp jb push call xor cmp jbe mov cmpl jne cmpl mov mov mov jne push call jmp push push call pop pop mov mov push mov call inc pop cmp jb lea pop cmp je pushl call pop pop pop mov pop ret push mov push mov push lea push call mov mov mov push mov call pop pop pop ret push mov push mov push lea push call mov test je mov push push call andl pop pop push call pop pop pop ret push mov push push mov lea push call push movl call mov push call pop pop pop pop ret push mov and sub push push mov lea push call mov lea call lea push lea push mov call pop pop jmp mov push push mov call lea push lea push mov call add test jne push call pop pop mov pop ret push mov push mov mov call mov push mov call push call cmpl pop pop je lea push call mov test je push call pop pop pop ret push mov push push push mov lea push call mov xor push pushl mov push call add push test jne call xor jmp call push call cmp jne mov mov test je mov push call push call pop mov jmp push call test je push call pop xor inc pop pop pop pop ret push mov push mov push lea push call mov pushl push mov call pop pop test je mov pushl push mov call pop pop push call pop pop pop ret push push mov xor push pop mov rep and movl mov mov push push call pop pop pop pop ret push mov push push push mov lea push lea push push call mov add test jne and and jmp mov andl mov mov mov mov mov pop mov mov mov pop ret push mov mov mov pop ret push mov mov mov pop ret push mov mov cmpl jne mov movl test je push call pop pop ret push push pop call mov test je lea movl push call xor push push push push call mov test je xor call mov test je mov pop ret push call pop xor pop ret push mov push mov push push lea push call mov push mov call push pushl pushl call add test jne push call xor jmp pushl call push call xor inc pop pop pop pop ret push mov push mov xor push mov neg sbb test je lea push call push pushl call test jne lea push call mov push mov call pop push test pop je mov push mov call mov mov push push mov call mov push mov call add test je pushl call lea push call mov jmp xor pop pop pop ret push mov push mov push lea push call mov pushl push mov call pop pop push call pop pop pop ret push mov mov mov push mov call pop pop ret push mov push mov mov test je mov push call pop cmpl je pushl call lea push call push call pop pop pop ret push push push pop call mov test je lea movl push call xor call mov test je xor push push push call test jne mov jmp mov call mov test je push push mov mov call mov pop pop test je mov jmp push call pop xor pop pop ret push mov push mov mov test je mov push call pop jmp call push push call mov push mov call add test mov push mov jne call pop mov test je mov push call pop mov test je mov push call pop lea push call push call pop pop pop ret push mov push mov push pushl mov push mov call add test je mov push call xor pop inc pop pop ret push mov push push push mov lea push call mov mov push push mov call mov push call mov push call add push call pop pop pop pop ret push mov mov push mov push mov call pop pop pop ret push mov and sub push push push mov xor and lea push call mov push mov call mov pop test jne push call jmp mov lea call lea push lea push mov call pop pop jmp mov push mov call lea push lea push mov call add test jne push call mov lea mov call lea push lea push mov call pop pop test je mov mov lea push push mov call pop pop test je test je mov sub jns mov xor inc mov push mov call lea push lea push mov call add test jne mov mov mov push call pop call cmpl jne mov push mov call jmp sub mov mov test jg push jmp push push call pop pop pop pop pop mov pop ret push mov sub push push mov lea push call mov lea push lea push mov lea push push push call add test jne push call jmp push xor mov cmp jbe mov mov push mov call inc pop cmp jb push call call mov cmp jbe mov push mov push mov call mov mov push mov call add inc cmp jb lea pop cmp je pushl call pop mov call pop pop mov pop ret push mov push push push mov mov push pop call mov test je xor movl movl call xor mov call cmpl mov je test je andl call andl mov mov mov mov mov mov mov mov jmp push call pop xor pop pop pop pop ret push mov push mov push mov push mov call pop test je mov push mov call mov pop test jne xor jmp mov push push mov call pop pop jmp pushl call mov pop test je mov test je pushl pushl push call add mov push push push mov call add test je mov push mov push call pop cmp ja mov push call pop mov mov incl push mov call pop mov pop pop pop pop ret push mov push mov pushl mov push mov call pop pop test je mov pushl push mov call mov push pushl mov push call mov incl push call add pop pop ret push mov and sub push mov lea mov call lea push lea push mov call pop pop jmp mov push pushl mov push call lea push lea push mov call add test jne mov push mov call mov incl push call pop pop pop mov pop ret push mov mov mov push mov call pop pop ret push mov push push push mov mov push mov call mov mov sub push call mov pop pop add je mov push mov call pop test je mov push mov call mov mov push push mov call add dec test je pushl push call pop pop test jne call andl mov mov push mov call pop mov pop pop pop pop ret push push mov mov push mov call pop test je push mov push call mov mov push push call add test je mov test je pushl push call pop pop mov push call pop test jne pop pop pop ret push mov push mov mov test je mov call mov push mov call pop mov test je mov call mov push mov call pop push call pop pop pop ret push mov push mov push mov push mov push mov call mov pop pop mov mov mov pop mov movl pop pop ret push mov push push push mov push mov mov call push mov call mov push push push mov call mov incl push call add pop pop pop pop ret push push mov mov call pop pop ret push mov mov pop jmp push mov pushl call pop pop ret push mov pushl push pushl call add pop ret push mov mov cmpl je mov test je pushl andl pushl call pop pop pop ret push push mov push pop call mov test je push push push push mov movl mov call add test jne push call pop xor pop pop ret mov jmp push mov push push push push push xor push pushl call push push push mov lea push push mov mov pushl call pop mov pop ret push mov mov pushl call pop ret push mov sub lea push push call neg sbb inc mov pop ret push mov sub push push push mov mov call test je mov call mov test je mov push mov call mov pop test je mov mov push push push push mov call push pushl call orl lea add pushl push call mov lea push mov mov mov push push push call add test je mov mov push push push mov mov push call push pushl call add cmpl je mov jmp push call pop xor pop pop pop mov pop ret push mov push call mov mov test je push push mov mov call mov pop pop test je mov mov movl movl mov call test je mov movl jmp mov andl pop pop ret push mov sub push push push mov movl push push push mov mov push mov mov call push pushl call add lea lea push pop push lea mov push push push push call test jne movzwl push call push push push mov call mov cmp je pushl lea push push call cmp mov mov mov mov movzwl jne push push push push call push pushl call add mov cmp je push call orl xor pop pop pop mov pop ret push push push push call push pushl call add push pushl call cmp je mov mov push push mov mov movzwl push push call push pushl call mov add mov push push call pop push pushl call cmp je xor inc jmp push mov push push mov mov push push push mov mov push mov call push pushl call mov add test je mov push call pop mov cmp je push call orl call mov test je mov push call pop mov test je mov push call pop push call pop pop pop pop ret push mov mov push push mov test je mov push push call add pop ret call pop pop pop ret push mov and sub push push push xor movl push mov xor lea push push call add movl call test je mov lea push push push lea push pushl call mov cmp je lea push lea push push pushl lea push call mov mov push mov mov lea push movzwl push push call push pushl call pushl mov mov call add mov test je mov mov push push push mov mov push call push pushl call mov mov push push mov call add test jne mov push call pop jmp push call pop pop pop mov pop ret push mov and sub push xor mov push push mov lea stos mov xor stos stos stos call test je mov call mov test je mov push pop push mov call mov mov mov jmp lea cmp jbe cmp jne inc mov test jne push call mov cmp je push push push call mov cmp je pushl mov mov call mov pop test je cmpl jne mov movl call test je cmpl jne push lea movl push push push pushl call push lea push push call cmp jne call cmp jne mov jmp push call test je mov mov test je mov mov jmp mov mov push mov mov xor push push push call push pushl call add mov push call pop jmp push call xor push call pop pop mov pop pop mov pop ret push mov sub push push xor lea stos mov push stos stos stos andl pop mov mov test je mov dec mov lea call movzwl push call mov lea push push pushl call test jne inc jmp xor pop pop mov pop ret push mov push push push push mov mov push mov call mov test je mov push mov call mov pop test je mov mov push push push push mov call push pushl call mov lea mov lea mov push push movl mov call add test je lea push lea mov push call pop pop test je call mov test je push pushl mov mov pushl push push call add test je mov call mov test je mov push pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov push push mov call pop push pushl call test jne mov jmp pushl call test je push call pop xor pop pop pop mov pop ret push mov mov pop jmp push mov sub lea push mov push mov push mov call pop push pushl call test je mov push call pop jmp mov mov push push push mov xor push pushl mov push call push pushl call mov add test je mov mov push push push mov mov push call push pushl call mov add push cmp je call pop jmp call mov pop test je mov mov push push push mov mov push call push pushl call add mov call test je mov test je mov mov push push push mov mov push call push pushl call add mov call test je mov test je mov mov push push push mov mov push call push pushl call add mov call pop pop pop mov pop ret push mov mov call push push push mov push push lea push pushl call mov test je cmp je mov push mov call pop cmp jae mov push mov call add push pushl call add mov lea push push push mov call add test je cmp jne mov push mov call mov push mov call pop pop mov call pop pop pop mov pop ret push mov mov push mov call pop test je mov push mov call pop test je mov push call pop pop ret push mov mov pop jmp push mov mov call push mov lea push push lea mov push push mov call add cmpl jne xor inc jmp push push pushl lea push pushl call mov mov push push mov mov mov push push call push pushl call mov add test je cmp jne mov call cmp je call cmp jne xor inc jmp mov push push mov call xor pop inc jmp mov push call xor pop pop pop mov pop ret push mov mov pop jmp push mov mov call push mov mov push mov call pop mov cmp jb mov test jne inc jmp push push push push lea push pushl call mov test jne mov push push push mov push mov mov call push pushl call add jmp cmp jne mov call cmp je call cmp je mov push push mov call push push jmp mov mov push push push mov mov push call push pushl call mov lea push push push mov call add test jne mov push call pop xor jmp xor inc pop pop pop mov pop ret push mov mov add pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov add test je mov push call pop mov test je mov push call pop cmpl je pushl call orl mov test je mov push call andl pop mov test je mov push push call pop pop pop pop pop ret push mov push call cmpl pop je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov call mov call pop jmp push mov sub push push push pop call mov test je xor push push push push call mov test je lea mov push push lea mov push push push push call mov test je push pushl call test jne cmp je pushl call mov jmp pushl call cmp je pushl call push call pop xor pop pop mov pop ret push mov push push push mov pushl mov push mov call mov mov push push push mov mov push mov call push pushl call mov push mov call add test jle mov push mov call pop pop pop mov pop pop ret push mov push andl lea push pushl push pushl call mov add mov pop ret push mov and sub push push mov lea xor inc mov mov mov add push mov mov call pop mov mov push push push mov mov mov push mov call push pushl call add pop pop mov pop ret push mov mov mov call mov test jne pop ret pushl mov pushl pushl push call add pop ret push mov push push push mov xor push push push mov mov push mov mov call push pushl call mov push push mov call add jmp mov push call mov push push mov call add test jne mov push mov call pop jmp mov push mov call mov mov push push mov call mov push call mov push mov call add test jne mov push mov call pop jmp mov push mov call mov pushl push call mov push mov call add test jne pop pop pop pop ret push mov push mov push push push push call add lea push push call mov push mov call pop test je push pushl call mov call push pushl call pushl call mov call mov call mov call push call pop pop pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop cmpl je pushl call pop ret push push call xor mov mov mov movl or xor call and mov call mov call mov call mov call mov call mov push mov mov call pop mov mov call mov call mov call mov push push push push call mov push pop call mov test je movl xor call mov test je mov call mov test je xor call mov xor call mov cmpl je test je mov jmp test je push call pop xor mov call mov push pop call mov xor test jne mov jmp movl mov cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je test je mov push call pop mov test je mov push push push push mov mov call push pushl call add movl movl pushl call call test je mov push call pop call mov mov push push push push mov mov call push pushl call add jmp mov call mov call mov call pushl call jmp xor inc ret mov orl xor call ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov pushl mov pushl pushl push call add mov pop pop pop ret push mov sub mov mov mov mov mov mov lea push pushl push pushl call add neg sbb and mov pop ret push mov push push mov mov mov mov lea push pushl push pushl call add mov pop ret push mov mov mov mov mov mov test jne movl pop ret mov pop ret push mov mov movl pop ret push mov mov push pushl mov push mov call add pop ret push mov push mov push mov push mov push mov call pop pop test je push call pop mov push mov call pop test jne pushl call pop pop pop ret push mov push push push mov mov push pop call mov test je mov mov push mov mov mov mov mov push push push mov call add pop test jne mov push push mov call push call add xor pop pop mov pop ret xor inc jmp push mov and sub mov lea andl push mov call lea push lea push mov call pop pop test je mov mov cmp je lea push lea push mov call pop pop test jne jmp lea push mov call mov pushl call pushl call add pop mov pop ret push mov mov pushl push mov push push call add pop ret push mov mov mov mov pushl push call pop pop pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov mov mov pushl push call add test je mov push push push call mov pop mov push call mov pop pop test je mov push push call pop pop test jne mov push call pop push push call pop pop xor pop pop pop pop ret xor inc jmp push mov push push mov mov push push push mov mov push mov call push pushl call mov mov mov pushl push call add pop pop pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov mov pushl push call add neg sbb neg pop pop pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov mov pushl push call add neg sbb neg pop pop pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov mov pushl push call add neg sbb neg pop pop pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov mov pushl push call add neg sbb neg pop pop pop ret push mov push push mov mov push push pushl mov mov mov push mov call push pushl call add test jne xor jmp mov push push mov push mov call add test je mov push push push pushl mov push call add test je mov push push push pushl mov push call add neg sbb neg pop pop pop mov pop ret push mov push push mov xor push push mov mov cmp setne or mov push push mov call pop pop test jne mov push push mov call mov pop pop test je call sub test jle pushl mov mov call mov pop test je mov push push push mov call add test je cmpl jne pushl mov mov call pop test je mov jmp mov push push mov call mov push push mov call mov push push mov call mov push call add xor pop pop pop mov pop ret push mov and mov lea sub mov call jmp mov cmpl jne lea push lea push mov call pop pop test jne xor mov pop ret push mov mov cmpl je xor inc pop ret push call neg pop sbb neg pop ret push mov mov pop jmp push mov and sub push push push mov push mov call mov lea mov call mov lea push lea push call add xor jmp mov cmp jne mov push push call pop pop lea push lea push mov call pop pop test jne mov test push push mov mov mov push je push jmp push call push pushl call add pop pop pop mov pop ret push mov push mov push push mov mov push push mov call mov push push mov call xor add cmp jne mov push push mov call pop pop test je mov push mov call mov mov push push push mov mov push call push pushl call add jmp mov mov push push push mov mov push call push pushl call mov push push mov call add test jne mov push call pop pop pop pop pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov push push mov call mov push push mov call mov push call add pop pop pop ret push mov and mov lea sub mov call jmp call sub js lea push mov call pop lea push lea push mov call pop pop test jne mov pop ret push mov and push mov push push push mov push call mov xor cmp setne or mov push push mov call push push call mov add mov call add push push pushl call mov push push mov call add mov call pop pop pop mov pop ret push mov push push mov mov push mov mov push mov mov push push mov movzwl push push call push pushl call push mov mov call add mov pop pop pop test je pushl mov pushl push call add neg sbb neg mov pop ret push mov push mov push push mov xor push mov mov sub je dec je dec je dec jne mov mov push push push mov mov push call push pushl call mov push call add xor inc pop pop pop mov pop ret mov mov push mov mov call push push mov mov pushl push call push pushl call mov push pushl pushl mov pushl push call jmp mov mov push push push mov mov push call push pushl call mov push call mov push pushl pushl mov push push call add jmp pushl mov pushl call pop pop test jne jmp push mov push push mov xor push push mov xor mov cmp setne or cmp jne mov push push mov call pop pop test jne lea push push pushl call add mov pushl mov mov push pushl push call add neg sbb neg pop pop pop mov pop ret push mov push push mov mov push mov mov push mov mov push push mov movzwl push push call push pushl call push mov mov call add mov pop pop pop test je pushl mov pushl push call add neg sbb neg mov pop ret push mov push mov push push mov xor push mov mov sub je dec je dec je dec jne mov mov push push push mov mov push call push pushl call mov push call add xor inc pop pop pop mov pop ret mov mov push mov mov call push push mov mov pushl push call push pushl call mov push pushl pushl mov pushl push call jmp mov mov push push push mov mov push call push pushl call mov push call mov push pushl pushl mov push push call add jmp pushl mov pushl pushl call add test jne jmp push mov push push mov xor push push mov xor mov cmp setne or cmp jne mov push push mov call pop pop test jne lea push push pushl call add mov mov mov push pushl pushl push call add neg sbb neg pop pop pop mov pop ret push mov mov mov push mov call pop pop ret push mov mov lea push push push mov push call add neg sbb and pop ret push mov push push pop call mov test je mov movl mov movl movl movl movl movl mov push push mov call mov pop push test jne mov call pop jmp mov push call mov push call mov add mov pop pop pop ret push mov push push mov mov push mov movl movl mov call mov test je push xor pop mov mov call test je inc cmp jb mov movl jmp add mov test je call add dec jne mov andl pop pop pop pop ret push push push mov mov mov call mov mov test je mov push push push pushl mov push call add test je mov call test je xor inc jmp andl test je mov call xor pop pop pop ret push mov mov push push mov xor push lea cmp jne andl mov mov call mov inc add cmp jb push lea push lea push pushl call test je mov mov mov call orl mov test je mov push push mov call pop pop test jne push call pop pop mov pop pop pop jmp push mov push mov push lea test je push push pop mov test je call add dec jne pop mov test je mov push call pop cmpl je pushl call pop push call pop pop pop pop ret push mov mov push push mov test je mov push push call add pop ret call pop pop pop ret push mov sub xor push push push mov lea mov mov mov mov stos push stos stos stos stos stos lea push call test je xor lea push push push push call test je lea movl push pop mov mov call mov test je lea push push mov push push push push push push call mov cmp je call mov test je mov push call mov mov pop jmp mov call xor pop pop pop mov pop ret push mov lea push pushl call test jne call cmp jne mov push mov call pop jmp call cmp jne xor inc pop ret xor pop ret push mov cmpl je cmpl je pushl call mov test je mov push call pop push call pop pop ret push mov sub andl xor push push push mov lea push pop rep mov mov call mov test je push pop cmp jne cmp jne lea cmpw je call mov test je lea call test je push xor push mov call test jne push push call andl lea push push pushl mov push call test jne mov jmp push call pop xor pop pop pop mov pop ret push mov push push push mov mov mov or call mov test je pushl mov mov push call pop pop test je mov jmp xor pop pop pop pop ret push mov push mov mov test je push push call pushl call andl cmpl je cmpl je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov push pushl mov push call add test je mov push pushl mov push call add test je mov push call jmp push call pop pop pop ret push push call xor mov mov pushl mov mov call pop mov push push push push push push pushl call mov mov mov mov push call pop jmp xor inc ret mov orl xor call ret push mov push mov mov push call mov test je mov test je push call test je mov call mov test je mov test je push call test je mov call mov test je push push push push push push call mov test je xor inc jmp mov test je push push call pushl call andl xor pop pop pop ret push mov and push push push push mov mov mov call mov test je mov call mov test je mov call mov test je lea movl push push mov lea call pop pop test je push lea lea push call pop pop test je pushl mov mov pushl pushl push push call add call mov call mov mov test je test je mov push call mov mov pop push mov call pop mov mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je cmpl je push push call pop pop jmp mov push pushl mov push call add test je mov jmp push call pop jmp push call xor pop pop pop mov pop ret push mov push push mov xor mov test je push push call pushl call mov cmpl je pushl call orl mov test je push push push call pushl call pop mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov mov test je mov push call pop mov mov test je mov push call pop mov test je mov push push call pop pop pop pop pop ret push mov mov add pop ret push mov push mov mov push mov call pop test je mov push mov call pop test je push call pop pop pop ret push mov push mov cmpl je cmpl jne mov lea push push push mov lea push push call add cmpl jbe lea push push pushl push pushl call test jne call cmp je push call pop jmp movl pop pop pop ret push mov push mov cmpl je cmpl jne mov push mov call pop mov mov cmp jb mov test je lea push push push lea push pushl call test jne call cmp je push call pop jmp movl pop pop ret push mov push mov lea push push andl lea push lea push call test je mov lea pushl push mov push call add test je push push call pop jmp push call pop pop pop ret push mov push mov lea push push andl lea push lea push call test jne push call pop jmp mov pushl push mov call push push call add pop pop ret push mov test je push call cmpl pop je mov push call pop mov test je mov push call pop mov test je mov push call pop pop ret push mov test je mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop pop ret push mov test je mov test je push call pop mov test je push call pop mov test je push call pop pop ret push mov mov call mov call mov call pop jmp push mov mov push call pop pop ret push mov push mov push mov movl call mov mov push test jne call pop xor jmp mov push push call mov add mov mov mov mov mov mov mov mov mov xor inc mov mov pop pop pop ret push mov mov push call pop pop ret push mov mov push call pop pop ret push mov mov push call pop pop ret push mov mov cmpl jne movl mov push mov call pop pop ret push mov push mov mov test je mov push call pop andl pop pop ret push mov sub mov push call mov test je push mov lea push lea push call lea push movzwl push movzwl push movzwl push movzwl push movzwl push movzwl push movzwl push push push call add mov pop pop mov pop ret push mov and sub push push push mov mov mov call mov test je lea movl push sub pop mov mov inc dec jne push mov mov call pop push mov mov mov call pop push mov mov mov call pop push mov mov mov call pop mov call mov call mov call mov call mov call mov call cmpl mov je cmpl je cmpl je cmpl je cmpl je mov test je cmpl je cmpl je cmpl je test je mov push push push call mov add mov push push push call add lea lea mov push push call pop pop test je lea push lea mov push call pop pop test je mov xor cmp mov sete inc push mov pushl pushl call add mov test je pushl mov mov pushl mov pushl mov mov pushl mov call add mov test je mov mov mov mov mov test je call jmp call test je mov push mov call pop mov push mov call pop push mov mov call mov mov mov pop mov pushl push call mov mov mov mov pushl push call mov mov mov mov pushl push call mov add mov test je cmpl je cmpl je test je mov mov pushl push call pop pop test je mov mov mov pushl push call pop pop test je xor call mov test je call mov mov jmp push push call pop pop xor pop pop pop mov pop ret push mov mov mov pop ret push mov mov movl pop ret push mov mov mov pop ret push mov mov mov pop ret push mov mov push push pushl mov mov call mov pop test je mov push push mov call pop pop push test jne mov push mov call mov push call add xor pop pop pop ret mov call mov push call incl xor incl inc pop pop jmp push mov mov pushl decl mov push mov call pop pop pop ret push mov mov push push pushl mov mov call mov pop test je mov push push mov call pop pop push test jne mov push mov call mov push call add xor pop pop pop ret mov call mov push call incl xor incl inc pop pop jmp push mov mov pushl decl mov push mov call pop pop pop ret push mov mov add pop ret push mov mov push push push mov push call add pop ret push mov push mov cmpl jne mov movsbl mov movzbl cmp je mov mov push mov call pop mov pop pop jmp pop pop ret push mov mov mov push mov call pop pop ret cmpl jne mov push push push add lea pop mov mov inc inc dec jne mov and movl push mov call pop pop pop ret push mov mov mov movzbl push push mov call pop pop pop ret push mov push mov mov movzbl mov mov push mov call pop mov pop pop jmp push mov push push mov xor push mov mov push mov cmp je push push push push call mov test je pushl lea mov push mov call mov pop pop test jne pushl call and mov push push push push call add test jne cmp je pushl call jmp cmpl je push pushl call pushl call test je mov push call pop pop pop pop mov pop ret push mov mov pushl call pop ret push mov push mov xor cmp jne cmp je cmp je mov push mov call pop test jne mov movzbl push push mov call pop jmp mov push mov call pop pop pop ret push mov cmpl jne mov movl test je mov push call pop mov test je mov push call pop cmpl mov je call jmp call mov test je mov push push call pop pop pop ret push mov sub mov xor mov mov mov mov lea push pushl mov push pushl mov call add neg sbb and mov pop ret push mov mov cmpl jae andl pop ret mov mov cmpl jne pop jmp pop jmp push mov and sub push push push mov mov push pop mov mov mov mov mov cmp jb mov mov movzwl mov movzwl mov mov mov mov movzwl mov mov mov mov movzbl mov mov mov mov mov mov mov lea push mov mov call pop test je andl xor cmp jae cmp jae push pop call mov test je pushl mov lea movl mov movl mov push movl movl call pop pop test je mov push mov call pop push push pushl call mov add inc mov cmp jae mov jmp push call pop mov cmpl je mov call andl pop pop pop mov pop ret mov add push sub pop mov mov inc dec jne mov movl jmp push mov and sub push push push mov mov push pop mov mov mov mov mov cmp jb movb movl movzwl mov mov mov mov movzwl mov mov mov mov mov mov mov mov mov mov mov mov lea push mov mov call pop test je cmp jbe push pop call mov test je pushl mov lea movl mov movl mov push movl movl call pop pop test je mov push mov call pop push push pushl call mov add cmp jb push pop mov add sub mov mov inc dec jne mov movl jmp push call pop mov cmpl je mov call andl pop pop pop mov pop ret push mov mov mov call mov test jne pop ret pushl mov pushl pushl push call add pop ret push mov mov push push push mov push call add pop ret push mov and sub push mov lea mov call lea push lea push mov call pop pop jmp mov push mov call lea push lea push mov call add test jne mov push mov call pop pop mov pop ret push mov call mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop cmpl je mov call mov push mov call pop pop ret push mov push push mov mov call mov call cmpl mov je call jmp call mov call push call pop pop pop pop ret push push push mov xor push mov mov mov call push mov mov mov call pop pop mov cmp je test je mov mov movl movl call mov push push mov call mov push mov call add test je push pop mov lea push push push mov push push call xor add inc jmp mov call xor pop pop pop ret push mov mov test je mov push call pop mov test je mov push call pop push pop add xor rep pop ret cmpl je mov mov push imul mov push push call pop pop pop ret push mov mov pop jmp push mov mov push push mov movl call pop pop pop ret push push mov xor push mov mov call mov pop test je push mov mov call push mov mov mov call pop pop mov cmp je test je xor inc jmp mov cmp je call jmp call xor pop pop ret push mov push mov test je mov push call pop lea mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push push push call add pop pop ret push mov push push mov mov movl mov mov mov lea push push mov call push pushl call add test je mov lea call xor movb mov call test je mov call test jne mov pop pop pop jmp pop pop pop ret push push push mov mov test je andl lea mov lea push push call pop pop test jne test je movl cmpl jne xor jmp mov mov call mov lea push push movb call pop pop test je incb xor andl andl inc pop pop pop ret push mov push cmpl jne or xor call mov cmpl je movzwl mov imul mov push push call pop pop mov andl movzwl mov mov mov movzwl movzwl imul movzwl add movzwl add mov mov mov mov mov mov push mov call pop mov mov add mov adc mov mov mov mov call mov test je mov pushl push mov call pop pop test jne mov push call pop xor xor mov test pop setne pop ret push mov mov cmpl jne pop jmp pop ret push mov push mov cmpl jne mov call test jne mov pop pop jmp pop pop ret push mov push push push mov push xor mov mov push mov mov call pop mov cmp jne cmp je incl jmp incl mov mov mov sub mov sbb add adc movzwl mov test jne movzwl cmp jae movzwl cmp jb movzwl shl cltd cmp ja jb cmp jae lea mov call test jne mov push mov call pop mov call jmp mov mov movzwl shl cltd cmp jb ja cmp jb andl andl test jne movzwl jmp cmpl movzwl je imul add incl mov imul mov push push call pop pop pop pop pop mov pop ret push mov sub push mov mov push mov call cmpl pop jne push mov mov testb je mov call test jne and mov call pop jmp mov mov testb je cmpl jb lea call test je testb je mov call pop mov pop ret push mov push mov push mov mov testb je mov call cmpl je mov test je mov mov test je push push call pop pop mov pushl push mov call pop pop pop pop pop ret push mov mov cmpl je mov test je mov mov test je pushl push call pop pop pop ret push mov cmpl je mov cmp jne mov push xor inc mov test je mov push call pop mov mov push mov call andl pop pop mov pop jmp cmpl je movl pop jmp pop ret mov mov mov mov mov mov mov mov mov mov xor inc ret push mov sub mov cmpl push mov jb lea mov call test je cmpl je cmpl je mov cmp je mov push push movl call pop pop xor pop mov pop ret mov mov mov push push mov call pop xor mov inc mov call lea sub testb mov mov je mov testb je mov call mov pop jmp cmpl jne mov movl push push mov call pop pop ret xor cmp je cmp je cmp jne ret push mov mov mov push mov call pop xor pop ret push mov push mov xor push push pop andl lea andl rep mov push push push mov push call add mov pop pop pop ret push mov push mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push mov push push andl lea push call mov push push push mov push call add mov pop pop ret push mov mov mov pop ret push mov mov mov pop ret push mov mov push mov mov push mov call pop sub mov mov mov inc dec jne pop pop ret push mov push mov push mov push push mov push mov call add test je mov push push push pushl mov push call add test je xor inc jmp mov push push mov call mov push call add xor pop pop pop ret push mov push mov push mov push mov push mov call pop pop test je mov push push mov call mov push push mov call mov push call add pop pop pop ret push mov push mov push mov mov push mov call mov test je mov push push push pushl mov push call mov push call mov xor push push push mov call add test jne mov push push mov call mov push call add test je mov push call pop xor pop pop pop pop ret xor inc jmp push mov push push mov push mov call mov push mov push mov call mov push push mov call add pop pop pop ret push mov and mov sub mov push push push mov xor push call mov pop test je mov push push mov call mov pop pop test je mov push movl mov call mov lea mov mov pop push push mov push call add test je mov push pushl mov push call add test je mov mov call mov test je mov push call pop mov xor push push push mov call add test je mov push push push pushl mov push call add test je xor inc jmp test je mov push call pop test je mov push push mov call mov push call add xor pop pop pop mov pop ret push mov and mov sub mov push push push mov xor push call mov pop test je mov push push mov call mov pop pop test je mov push movl mov call mov lea mov mov pop push push mov push call add test je mov push pushl mov push call add test je mov mov call mov test je mov push call pop mov xor push push push mov call add test je mov push push push pushl mov push call add test je xor inc jmp test je mov push call pop test je mov push push mov call mov push call add xor pop pop pop mov pop ret push mov push mov push mov push mov push mov call pop pop test je mov push push mov call mov push push mov call mov push call add pop pop pop ret push push mov mov push mov call pop jmp mov push mov call mov push mov call mov push push mov call mov push mov call add test jne mov push mov call pop jmp mov push mov call mov push mov call mov push push mov call mov push mov call add test jne pop pop ret push mov push mov mov push mov call pop test je push mov push mov call mov push mov call mov push push mov call mov push mov call add test jne pop mov call mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push mov and push push push mov mov push mov call mov test je pushl xor lea stos mov mov stos stos stos stos call pop test je mov call mov test je mov lea sub mov mov mov inc dec jne mov push call mov pop push mov call mov mov mov pop push call mov pop cmp jae mov push push mov call pop pop test je mov mov push mov pushl push call add test je mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov jmp mov push call pop xor pop pop pop mov pop ret push mov mov pop jmp push mov cmpl jne mov test je mov push call pop mov test je mov push call pop mov push mov call pop mov test je mov push call andl pop mov test je mov push push call pop pop pop ret push mov mov call push push mov lea push push push mov lea push xor push mov mov call lea add xor mov cmpl jne lea mov push call mov lea pop movsl movsl movsl cmpl mov je lea push pushl lea push call mov add mov mov cmp je xor inc mov jmp mov cmp jne mov jmp mov mov inc add mov cmp jb test jne push pop mov call pop pop pop mov pop ret push mov sub push push lea mov push push mov call pushl mov lea lea push pushl movsl pushl movsl movsl call mov add test je mov push push mov call pop pop test jne mov push call pop jmp movl mov call pop pop pop mov pop ret push mov push mov mov call cmpl je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push push pop call mov test je movl mov movl mov movl movl call mov test je mov push push push push call add test je mov pop ret mov push call pop xor pop ret push mov mov xor cmp setne pop ret push mov and mov lea sub mov push call mov lea push lea push mov call pop pop test je mov cmp jne mov mov cmp jb mov push call mov add mov mov xor inc jmp xor pop mov pop ret push mov and sub push push push mov xor cmp ja mov call mov mov call mov cmp je test je mov lea mov call jmp push lea push push call mov lea mov shl push call add test jne mov mov push call mov lea push call pushl mov mov sub add call add test jne lea push lea push mov call pop pop test jne jmp mov xor mov inc mov pushl call pop test je push call pop pop pop mov pop mov pop ret push mov push mov cmp jbe xor jmp mov push mov push mov call pop pop mov test je mov mov push mov mov call xor add inc pop pop ret push mov mov push mov call pop pop ret push mov push mov mov test je mov push call pop push call pop pop pop ret push push push xor mov mov inc mov call xor mov mov call xor mov call xor mov call xor mov call push push mov mov mov call pop pop mov mov call push pop mov call mov test je xor movl call push pop mov call mov mov test je test jne test je mov push call pop mov test je mov push call pop push call pop xor mov call mov mov call xor mov inc mov call push mov mov mov call pop mov call mov call mov call pop mov movb pop pop ret push mov mov push xor mov mov pushl push call mov mov mov mov pushl push call push mov mov mov call add mov mov cmp je cmp je test je mov mov pushl push call pop pop test je mov mov mov pushl push call pop pop test je xor inc jmp xor pop pop ret push mov mov push mov call mov push mov call mov push mov call mov push mov call add pop ret push mov push push push mov mov push mov call mov test je movl mov mov mov push call mov pop push call pop mov call xor cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je mov call test je mov mov mov mov mov mov mov mov mov movl movl mov call mov jmp push call pop xor pop pop pop pop pop ret push mov push mov push mov push push mov push mov call add test je mov push push push pushl mov push call add test je mov push call pop mov call lea add sub mov mov mov inc dec jne mov push mov call xor inc jmp mov push push mov call pop xor pop pop pop pop ret push mov push mov push mov push mov push mov call pop pop test je mov push call pop test je mov call mov push push mov call mov push push mov call mov push call mov call mov push mov call add pop pop pop ret push mov and sub mov lea andl call lea push lea push mov call pop pop jmp mov push mov push mov call lea push lea push mov call add test jne mov pop ret push mov push mov push mov push push mov push mov call add test je mov push push push pushl mov push call add test je mov push call pop lea add sub mov mov mov inc dec jne mov push mov call xor pop inc jmp xor pop pop pop ret push mov push mov push mov push mov push mov call pop pop test je mov push push mov call mov push push mov call mov push call mov call mov push mov call add pop pop pop ret push mov push mov push mov call mov call mov push call pop pop pop pop ret push mov mov push push mov call pop pop pop ret push mov and mov call push push push mov push mov call movl lea push push call mov lea add push push call mov jmp mov add lea mov adcl mov xor inc mov test je mov lea push push call mov pop pop testb je test je mov mov mov push mov call pop cmp jbe mov lea push push push mov push call add test je mov push mov call pop mov mov push call pop cmp jae mov call mov call mov testb je pushl mov pushl pushl mov push call add test je pushl mov lea pushl pushl mov push push call add test je mov xor add mov adc push push pushl mov pushl push call add test je mov call testb je lea mov call testb je cmpl jne mov mov mov call testb je cmpl jne push lea lea call mov add mov push call pop push lea push push call mov lea add push push call pop pop test jne mov call mov push call pop pop pop pop mov pop ret cmpl jne cmpl jne mov movl push push mov call pop pop ret push mov sub push push mov xor and push mov testl jbe mov mov inc push push mov push call mov add shr cmp jb mov lea call jmp mov testb je mov xor add adc cmp ja jb cmp ja lea push mov call mov mov push push mov call add test jne mov push push push mov call add lea push lea push mov call pop pop test jne jmp mov push mov call mov mov push push mov call mov push push mov call mov add mov test je mov mov test je mov lea push push call mov pop pop testb je mov add adcl testb je push push call mov pop pop mov call mov push mov call pop test jne mov mov mov push mov call pop cmp jb ja cmp jb mov push push push mov call add mov push mov call push push call add pop pop pop mov pop ret push mov and mov call push push mov lea push push lea xor mov push push mov call add test je mov push mov call pop cmp ja jb cmp ja mov mov push mov call pop cmp jb ja cmp jbe mov push mov call pop mov sub mov sbb mov jne cmp ja mov push mov call pop mov sub mov jmp orl mov push mov call pop cmp ja mov cmp jbe mov mov test je mov lea push push lea mov push push call add cmpl je mov lea pushl push mov push call add test je mov add adcl xor mov inc push mov call pop cmp jb ja cmp jbe jmp push call pop jmp test je mov movl call mov call pop pop pop mov pop ret push mov mov pop jmp push mov push mov push mov call pop pop mov test jne pop ret mov mov mov movl incl pop ret push push push mov mov mov push mov call testb pop je mov pushl push mov call pop pop mov push push mov call mov push push mov call add pop pop pop ret push mov and mov call push push push mov mov mov push mov call pop mov mov push mov call pop cmp jbe mov cmp jbe mov test je mov lea push push push mov push call mov lea push push lea mov push push call add test je mov call jmp push call pop pop pop pop mov pop ret push mov push push mov mov push push push mov call add test je testb je mov push pushl mov push call add test je mov call xor inc jmp mov push push mov call mov pushl push mov call add xor pop pop pop ret push mov sub push push push mov mov push mov call jmp mov push mov call mov pop cmp jb mov mov push mov call pop mov push push push mov push mov mov call add mov call mov test je mov mov mov mov mov movb mov mov mov mov call test jne mov mov call push call pop mov push mov call pop test jne pop pop pop mov pop ret push mov mov andl pop jmp push push mov push mov push mov call mov mov pop cmp jb mov mov and sub jne cmp je andl mov call mov test je mov movb mov mov mov mov mov push mov call pop mov mov mov push pushl mov push push call add mov mov call test jne mov mov call push call pop pop pop pop ret push mov mov push call mov test je mov mov mov mov push mov lea push movl sub movb pop mov mov inc dec jne mov mov mov mov call pop test jne mov mov call pushl call pop pop pop ret push mov push mov mov push call mov test je lea movl mov mov mov movb call test jne mov mov call push call pop pop pop pop ret push mov mov push call mov test je mov mov andl movb movl call test jne mov mov call pop pop jmp pop pop ret push push push mov mov call mov test je mov movl mov movb movl mov call test jne mov mov call push call pop pop pop pop ret push push mov call mov push mov call pop jmp mov push mov call pop mov mov mov call test je mov push push mov call mov push mov call add test jne pop pop ret testb je ret push mov push push push push push mov mov testb je mov push mov call mov pop xor add adc cmp jb ja cmp jb mov mov call xor inc jmp mov push mov call mov pop test je mov lea push push push call add test jne xor test je mov cmp je push mov mov call pop test je mov mov test je mov lea push push call pop pop testb je mov imul mov push push call pop pop call mov mov push push call pop pop test je mov mov add mov adcl incl call jmp xor pop pop pop mov pop ret push mov push push push mov mov push mov call mov test je mov test je mov mov mov and mov sub mov xor mov mov add adc mov mov jmp test je mov xor mov mov mov add adc mov mov mov mov mov sub mov mov push push mov push mov call add test je xor mov inc jmp mov mov call xor pop pop pop mov pop ret push mov and sub push push push mov xor lea mov mov mov call jmp mov test je testb je testb je cmp jne cmp jne mov cmp jae xor add adc cmp jne cmp je mov lea push lea push mov call pop pop test jne jmp mov mov mov add cmp jb mov sub lea mov mov sub mov add adc mov cmp jne mov call mov call pop pop pop mov pop ret push mov push mov push mov mov mov test je mov lea push push call pop pop mov cmp jb mov mov pop pop pop jmp mov push push push mov call add test je mov pop pop pop jmp pop pop pop ret push mov mov add pop ret push mov mov cmpl jne push push movl call pop pop pop ret push mov push mov cmpl jne mov movl push mov call mov push mov call mov pop pop mov call mov pop pop jmp pop pop ret push mov mov xor cmp setne pop ret push mov cmpl jne call push mov mov call pop mov mov test jne push push call jmp mov push push call pop pop pop ret push mov xor cmp je cmp jne cmp jne mov push mov call pop test jne mov push mov call pop test jne mov push mov call pop test je mov push mov call pop test je mov push mov call pop test jne mov movl push push mov call pop pop pop ret push mov and sub push push mov xor inc mov mov mov push mov call mov pop push mov call mov pop push mov call mov xor pop lea mov call jmp mov mov push mov call pop lea push lea push mov call pop pop test jne mov lea call jmp mov push mov call pop lea push lea push mov call pop pop test jne mov lea push lea push mov push push push call add test je cmp jbe mov mov push mov call inc pop cmp jb cmpl je pushl call pop mov push mov call pop pop pop mov pop ret push mov and sub push mov push call pop push push call mov lea call lea push lea push mov call add jmp mov push mov call pop lea push lea push mov call pop pop test jne mov lea call jmp mov push mov call pop lea push lea push mov call pop pop test jne mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop pop mov pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov push mov mov call mov call mov call mov call push call pop pop pop ret push mov push push pop call mov test je mov mov push call mov pop test jne push call pop xor pop pop ret mov jmp push mov push mov xor mov mov mov add stos stos stos stos pop pop ret push mov push mov mov push mov call push call pop pop pop pop ret push mov mov mov test je xor inc pop ret mov push mov test jne test jne test jne test jne test jne mov and je test je mov cmp ja jb mov cmp jae xor inc jmp test jne test jne mov cmp ja jb mov cmp jmp xor jmp movzbl shr jmp movzbl shr jmp movzbl shr and pop pop ret push mov sub push mov push mov mov mov movl test je mov movl mov test je push lea movl lea movsl movsl movsl movsl mov pop cmpl mov mov mov mov mov jbe xor jmp pushl lea push push call xor add inc pop pop mov pop ret push mov sub mov push mov lea push push lea push push call add cmpl jae xor jmp mov push mov test je cmpl jb test je cmpl jae xor jmp mov jmp mov mov mov mov mov mov mov test je add lea movsl movsl movsl movsl xor inc pop pop mov pop ret push mov sub push xor lea push push mov lea stos mov push push lea stos push push stos stos stos stos mov call add lea mov call test jne xor jmp lea push push lea lea call mov neg push sbb and call add cmp jb mov push push call pop xor pop inc pop pop pop mov pop ret push mov push push mov mov push mov call mov test je movl movl mov movl movl call mov test je mov push push push call add mov mov pushl push call mov mov pushl mov push call push mov mov mov call add mov cmpl mov je cmpl je test je pushl mov push call pop pop test je mov pushl push mov call pop pop test je push pop call push pop mov call cmpl mov je test je call mov test je call mov call mov call cmpl mov je cmpl je test je mov call mov test je call mov test je push mov mov call mov pop test je mov push push call mov mov mov xor mov mov mov mov mov mov call mov mov push call mov add push call mov pop push mov call andl pop mov movb call test je mov jmp push call pop xor pop pop pop pop ret push mov mov pushl pushl mov mov call movzwl push push call add pop ret push push push mov lea push lea call mov pop test je mov mov mov mov mov mov call test jne mov push push mov call pop pop xor pop pop pop ret xor inc jmp push mov mov pop jmp push mov mov pop jmp push mov and push push push mov push mov push mov call pop test je mov push mov call pop test je pushl pushl call mov movzwl push mov push mov call add test je movl mov mov mov call mov mov call mov call pop pop pop mov pop ret push mov push mov mov push mov call pop test je mov push mov call pop test je mov call mov pop pop jmp pop pop ret push mov and push push push push mov call test je cmpl jne mov push mov call pop test je mov call mov test je mov push call pop jmp mov push mov call pop test je mov push call pop mov mov push push call mov mov call mov push call add test jne mov push call pop pop pop pop mov pop ret push mov sub push push mov push mov push mov call pop jmp mov push push mov call mov xor pop pop test je pushl lea pushl stos stos stos stos stos stos call push pop push lea mov mov mov mov movb call add test je mov push push mov call mov push mov call add cmp jae mov push mov call neg sbb inc pop pop pop pop mov pop ret mov push call xor jmp inc jmp push mov mov call push mov push mov mov movzwl mov cmp jbe xor jmp push push pushl lea push call lea mov push mov call lea mov push mov call mov lea add lea push push mov call pop pop test je pushl mov lea push push call add test je mov movzwl push lea mov push push call add test je xor inc jmp xor pop pop pop mov pop ret mov push push push mov mov call pop mov push pop cmp ja mov sub push pop cmp ja mov sub mov push mov call pop cmp jbe mov mov cmp jbe mov pop mov pop ret push mov mov call push mov push push mov mov push mov mov call pop cmp jb mov mov call cmpl mov je mov cmp jbe mov sub mov test je mov lea push push lea mov push push call add cmp jne xor lea stos stos stos stos stos stos mov movb pushl pushl call mov lea lea mov push mov call add test jne mov push call pop pop pop pop mov pop ret push mov and sub push xor mov mov push push lea stos stos stos stos stos stos jmp mov call mov lea call test je lea push push lea lea call mov neg push sbb and mov call movzwl add add cmp jb mov test je lea mov call test je jmp test je lea mov call jmp mov call mov movzwl push push mov call pop pop cmpl je pop pop pop mov pop ret push mov push push push mov mov mov cmp ja cmp ja mov call mov lea push movzwl push mov pushl push call movzwl add cmp jne pushl mov mov call pop test je pushl mov call xor inc jmp mov push call xor pop pop pop mov pop ret push mov mov call push mov mov push push mov mov movzwl push push mov call mov pop pop test jne mov lea push mov call pop xor jmp cmpl mov jne movzwl mov push mov call pop mov push mov call pop movzwl cmp jb lea mov push mov call pop test je mov movzwl push lea mov push push call add test jne mov push call jmp xor inc pop pop pop mov pop ret push mov mov call push push mov mov cmpw je mov call mov movzwl push push mov call pop pop jmp lea push call pop test je mov cmp jb mov push call jmp mov test je lea push push call pop pop mov call mov call pop pop mov pop ret push mov push push mov xor push mov push mov call pop pop test je mov movl mov call mov pop mov pop pop ret push mov push push mov xor push mov push mov call pop pop test je mov movl mov call mov pop mov pop pop ret push mov mov push mov call pop pop ret push mov mov push push push mov push mov call add pop ret push mov push mov cmpl jne mov movl call mov pop pop jmp pop pop ret push mov and sub mov lea call lea push lea push mov call pop pop jmp mov mov push mov call mov mov push mov call lea push lea push mov call add test jne mov pop ret push mov and sub mov lea call lea push lea push mov call pop pop jmp mov mov push mov call mov mov push mov call lea push lea push mov call add test jne mov pop ret push mov mov push mov call pop test jne mov push mov call pop test jne mov push call mov push mov call mov push mov call add pop ret push mov and sub push push mov xor call mov test je mov lea call jmp push pushl push call add test je lea push lea push mov call pop test mov pop jne push call pop jmp mov push call mov pop test je mov push push call mov mov call mov push call add test jne mov push call pop pop pop mov pop ret push mov push mov push call mov push call pop pop pop pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop cmpl je mov push mov call pop pop ret push mov push mov mov call mov call mov call mov call push call pop pop pop ret push mov push mov push push mov test je mov push push call add jmp call pop pop pop pop ret push mov push push mov push push mov push mov mov xor mov mov mov push push mov call mov pop pop test je mov lea push push mov call pop pop test je mov lea push push call pop pop test je mov mov push push mov push pushl push call add test je mov mov push push mov push pushl push call add test je mov mov push push mov push pushl push call add test je mov mov push push mov push pushl push call add test je mov mov push push mov call mov push push mov call add mov jmp mov mov mov test je mov push call pop mov test je mov push call pop test je mov mov call xor pop pop pop mov pop ret push mov push push mov andl push lea mov push push push mov push call add neg sbb and pop mov pop ret push mov push push mov push lea movl push mov push push push mov call add neg sbb and pop mov pop ret push mov and sub push mov push push mov cmpl jne mov call mov test je mov mov mov mov mov call test je mov mov call test je mov mov mov mov mov push mov mov mov push mov call mov pop pop test je pushl andl pushl call add mov mov mov mov call test je mov mov push mov call pop jmp mov mov call andl pop pop pop mov pop ret push mov push push mov mov push mov push mov mov movzwl lea cltd idiv movzwl cmp je mov movzwl push push mov call pop pop test je lea mov cltd idiv movzwl cmp jne xor pop pop pop mov pop ret mov mov xor mov inc jmp push mov mov sub je dec je dec je mov pop ret mov add pop ret mov pop ret mov pop ret push pushl pushl call mov push movzwl push mov push call add pop ret push mov sub andl lea andl mov push push lea mov push push mov call mov mov mov pop test je mov mov mov pushl pushl pushl call add mov test je mov push call mov pop push call pop mov jmp test je mov push call pop test je mov push call pop test je mov test je mov push call pop mov mov call xor pop pop pop mov pop ret push mov push mov push mov push andl push mov push mov call mov pop pop test je mov push mov call mov pop mov push call pop test je mov push mov call pop pop pop pop pop ret push mov push mov andl push lea mov push push push mov push call mov add pop mov pop ret push mov mov mov push mov call pop xor test setg mov pop ret push mov push push push mov mov push mov mov pushl pushl mov call movzwl push push call mov push mov push mov call mov push push mov call mov add test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov push push mov call pop pop pop pop pop mov pop ret push push push mov mov push mov push mov call pop pop test jne mov push push mov call pop pop xor jmp mov call xor inc pop pop pop ret push mov push push push mov push mov movzwl push mov push mov call pop pop test jne push mov call mov test je movzwl mov andl cmp jb push add pop jmp xor inc mov mov mov mov mov mov mov mov mov call test je cmpl je mov push mov call mov pushl push mov call add test jne mov mov call pop pop pop mov pop ret mov push push mov call mov push mov call add jmp push mov mov movl pop ret push mov push mov mov andl call mov pop pop jmp push mov mov push mov mov mov movzwl push push call mov pop pop test je mov push mov call mov push mov call pop pop pop pop ret push mov push push push mov mov push pop call mov test je mov movl lea cmp ja mov mov lea mov add mov cmp ja call mov test je pushl lea mov add call mov add add add mov jmp cmpl je pushl call pop push call pop xor pop pop pop pop ret push mov push mov pushl call push call pop pop pop pop ret push mov push mov xor push xor cmp jae mov mov push mov call movzwl inc pop cmp jb pushl call push call pop pop pop pop pop ret mov mov movzwl add mov ret mov mov inc mov xor cmp sete ret push mov sub push push mov mov push xor mov call mov test je mov mov add cmp ja mov mov call mov mov call mov mov call mov mov call mov mov call mov mov mov call mov mov call andl mov xor movl cmp jae xor pushl mov call mov pop test je mov push push push call add test je mov movzwl inc mov mov cmp jb jmp xor movzwl shl call mov test je mov lea call jmp mov mov mov lea lea push lea push mov call pop pop test jne mov push call xor pop inc jmp mov lea call lea push lea push mov call pop pop jmp mov push mov call lea push lea push mov call add test jne mov push call pop xor pop pop pop mov pop ret push mov sub push push mov mov push xor mov call mov test je mov mov add cmp ja mov mov call mov mov call mov mov call mov mov call mov mov call mov mov mov call mov mov call mov mov call andl mov xor cmp jae xor pushl mov call mov pop test je mov push push push call add test je mov movzwl inc mov mov cmp jb jmp xor movzwl shl call mov test je mov lea call jmp mov mov mov lea lea push lea push mov call pop pop test jne mov push call xor pop inc jmp mov lea call lea push lea push mov call pop pop jmp mov push mov call lea push lea push mov call add test jne mov push call pop xor pop pop pop mov pop ret push mov push push push push mov mov push push xor mov call pop push pop mov call mov test je movl call mov test je xor call mov test je push mov mov call push mov mov mov call pop pop mov cmp je test je mov call mov test je mov mov mov push mov call pop cmp je inc mov push mov call pop test je or mov push mov lea push pushl pushl mov push call add mov call test je mov jmp push call pop xor pop pop pop mov pop ret push mov mov cmpl jne pop jmp pop ret push mov push mov mov mov push mov call mov mov movzwl mov imul push push call add pop pop ret push mov mov mov testb je mov andl pop ret push mov mov mov testb je mov mov incl movzwl cmp jb pop jmp pop ret push mov and sub andl xor push push push mov lea push pop rep mov lea mov push sub pop mov mov inc dec jne mov xor xor cmp jae mov xor mov mov mov cmp jne mov lea push push mov call pop push mov pushl pushl call add mov test jne mov cmpl jne mov add cmp jb jmp push pop call mov test je mov mov mov push push push pushl mov push call add test je mov push push push mov call add test je mov inc movzwl cmp jb mov push mov call pop test jne mov call jmp mov pushl push mov call push call add mov call xor jmp mov mov movzwl mov imul push push call pop pop xor inc pop pop pop mov pop ret push mov push mov push mov push mov push mov call pop pop test je mov push mov call pushl push mov call mov push push mov call push call mov add cmpl jne mov push mov call pop test jne pop mov pop pop jmp pop pop pop ret push mov push mov mov movl push mov call push push call add pop pop ret push mov and sub push mov cmpl jne mov movl push mov call mov lea call lea push lea push mov call add jmp mov pushl push mov call mov mov push mov call pushl call lea push lea push mov call add test jne mov push mov call mov push mov call pop pop pop mov pop ret push mov call mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop push call pop pop ret push mov mov call mov call mov pop jmp push mov push push mov mov push mov call mov test je movl mov movl mov movl movl call mov test je call mov test je mov lea push sub mov mov mov inc dec jne mov mov mov mov push call push mov mov call mov pop pop pop test je mov push push mov call pop pop mov call mov jmp push call pop xor pop pop mov pop ret push mov push mov push mov mov mov pushl push call add test je mov mov push mov pushl push call add test jne push call pop pop pop ret push mov mov mov push mov call pop pop ret push mov pushl call pop pop ret push mov mov push mov call pop test je xor pop ret mov push mov call pop test ja jb cmp ja mov push call pop jmp xor inc pop ret push mov push push push mov push mov test je mov mov mov push mov call pop mov push add pop adc mov jne cmp ja mov push mov call pop sub cmp ja mov mov mov push mov call sub pop cmp ja mov mov pop pop mov pop ret push mov push push mov mov call test je mov push push mov mov push mov add mov call xor pop cmp jb ja cmp jb mov push mov call pop cmp jb pushl mov xor mov inc call pop pop mov pop pop mov pop ret push mov mov mov push call pop pop ret push mov mov call push push lea mov push lea mov push call pop pop test je cmpl lea mov push push push mov jne call add test je cmpl jbe mov lea pushl push mov push call jmp call add test je cmpl jbe mov lea pushl push mov push call add test je xor inc jmp mov push call pop xor pop pop mov pop ret push mov push push mov push mov push mov mov mov mov mov mov mov cmpb mov jne mov mov call mov testb je mov lea mov mov mov pushl mov pushl push mov push push call mov add cmp je xor jmp testb je mov push mov call mov mov mov push mov call pushl mov lea pushl push mov push push call mov xor add mov adc push push mov push call mov add cmp jne testb je mov push mov call add testb je xor push mov pop mov mov inc cmp jl add mov mov mov inc cmp jl add mov mov mov inc cmp jl mov mov mov inc cmp jl add mov mov inc cmp jl add testb je mov mov xor inc pop pop pop mov pop ret push mov mov movl mov push mov call pop pop ret push mov push mov mov push mov call mov push push mov call add pop pop ret push mov push push mov xor inc push mov push mov call or pop pop je cmpl je xor pop mov pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push mov sub push push push lea movb push push mov call mov push pop push mov call add cmp jbe push jmp mov push mov call pop cmp jbe push pop mov push mov call pop cmp jbe mov push pop cmp jbe mov call push lea mov mov movb call pop pop pop mov pop ret push mov push push push mov mov mov call mov test je movl mov movl mov movl movl call mov test je call mov test je mov call mov test je mov lea push sub mov mov mov inc dec jne mov mov mov mov push call pop mov pop jmp push call pop xor pop pop mov pop ret push mov push mov push mov mov mov pushl push call add test je mov mov push mov pushl push call add test jne push call pop pop pop ret push mov mov call push push mov push mov push mov call pop test je mov mov push mov call pop test je mov push mov call mov pop cmp jb mov mov lea push push lea mov push push call mov lea pushl push mov push call add test je mov push mov call pop test jne mov call pop pop pop mov pop ret push call pop jmp push mov sub push mov lea push push lea mov push push mov call add cmpl jne mov push mov call pop mov add cmp jb mov push mov call xor pop inc jmp xor pop mov pop ret push mov sub push mov lea push push push mov lea push push xor mov call add cmpl je xor jmp testb je mov lea push push lea mov push push call add cmpl jne push pop mov push mov call pop mov add cmp jb mov lea push push lea mov push push call mov add mov sub mov mov mov mov mov mov mov test je mov mov test je mov mov mov lea push push lea mov push push call mov add pop cmp jne mov call push push call pop pop mov call xor inc pop pop mov pop ret push mov mov pop jmp push mov mov push mov call pop test je mov call test jne push call pop pop ret push mov push mov mov push mov call mov push push mov call add pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push push push mov mov call mov test je mov movl mov push mov call mov pop push mov call mov movl push mov call mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov mov pushl push call add test je mov jmp push call pop xor pop pop pop ret push push push mov mov call mov test je mov andl mov push mov call mov pop push mov call mov movl push mov call push mov mov call add mov test je mov push push mov call mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov jmp push call pop xor pop pop pop ret push mov call mov test jne xor pop ret call mov test je mov call xor mov test pop setne mov ret push mov push push push andl mov mov mov mov pushl push call add test je mov mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov push mov push mov call mov push mov push mov call xor movl add inc jmp xor pop pop pop ret push push push mov push pop call mov test je mov call test je mov mov call test je mov jmp push call pop xor pop pop pop ret push mov mov pop jmp push mov mov call push push mov push mov mov push mov call pop test je mov mov push mov call pop test je mov push mov call mov pop cmp jb mov mov lea push push lea mov push push mov call add cmpl jbe mov lea pushl push mov push call add test je mov mov push mov call pop test jne mov call neg sbb neg pop pop pop mov pop ret mov call xor jmp push mov mov call push mov push mov push mov call pop cmp jb mov lea push push lea mov push push call mov mov push add mov call add cmp jb mov sub je dec lea dec mov push push push mov je call add jmp call add mov call xor pop pop mov pop ret mov push mov call pop cmp jb mov lea push push push mov call mov lea push pushl lea mov push push call mov lea pushl push mov push call add mov call test je mov call jmp xor inc jmp push mov push push push mov mov mov push mov call pop cmp jb mov push mov push mov call lea mov push mov call pop pop cmp ja mov mov cmp ja mov mov pop test je mov lea andl push push mov push mov call mov lea push mov pushl mov pushl push call add pop mov pop ret push mov push push andl andl push mov movl mov mov push mov call pop cmp jae mov push mov push mov call add push mov pushl call add pop mov lea push push mov push mov call add pop mov pop ret push mov push mov mov mov push mov call pop test je mov mov push mov call pop test je mov call test jne mov pop pop jmp pop pop ret push mov push push andl andl push mov movl mov mov push mov call pop cmp jae mov push mov push mov call add push mov pushl call add pop mov lea push push mov push mov call add pop mov pop ret push mov mov pop jmp push mov cmpl jne cmpl mov push je mov call jmp mov call mov pop push mov call mov movl push mov call pop pop pop ret push mov mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop cmpl mov je test je mov push call jmp test je mov push call pop mov pop test je mov push call pop ret push mov mov call mov call mov call pop jmp push push push mov mov mov call mov test je movl call mov test je mov call mov test je mov call mov test je mov mov mov push call mov mov push mov push mov call mov push mov push mov call mov mov push mov mov pushl push call mov mov mov push mov mov pushl push call mov mov push mov mov pushl push call add mov jmp push call pop xor pop pop pop ret push mov sub push mov push xor cmp jne mov mov push mov call pop cmp jb mov lea push push push mov push mov call mov push push mov lea push push mov call mov add mov mov mov mov mov dec je dec jne mov call test je movl cmp je mov call pop pop mov pop ret mov call jmp mov call jmp push mov push push push mov lea push pushl lea pushl mov call pop pop test je mov push push mov call mov lea mov push lea mov push push push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov push call xor pop inc jmp xor pop pop pop mov pop ret push mov push push push mov lea push pushl lea pushl mov call pop pop test je mov push push mov call mov lea mov push lea mov push push push call add test je mov mov push mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov push mov pushl push call add test je mov push call xor pop inc jmp xor pop pop pop mov pop ret push mov mov pop jmp push mov mov call push push mov push mov mov push mov call pop test je mov mov push mov call pop test je mov push mov call mov pop cmp jb mov mov lea push push lea mov push push mov call add cmpl jbe mov lea pushl push mov push call add test je mov mov push mov call pop test jne mov call neg sbb neg pop pop pop mov pop ret mov call xor jmp push mov mov call push mov push mov push mov call pop cmp jb mov lea push push lea mov push push call mov mov push add mov call add cmp jb mov sub je lea push push dec je dec mov push mov je call add jmp call add mov call xor pop pop mov pop ret mov push mov call mov push mov call add jmp mov push mov call pop cmp jb mov lea push push push mov call mov lea push pushl lea mov push push call mov lea pushl push mov push call add mov call test je mov call jmp xor inc jmp push mov push push push mov mov push mov call pop test je mov mov push mov call pop cmp jbe mov push mov push mov call lea mov push mov call pop pop cmp ja mov mov cmp ja mov andl lea mov mov push push mov push mov call mov lea push mov pushl mov pushl push call add pop pop mov pop ret push mov mov push mov call mov push mov call pop pop pop ret push mov mov pop jmp push mov push mov mov mov push mov call pop test je mov mov push mov call pop test je mov pop pop jmp pop pop ret push mov push mov cmpl jne mov test je mov push call pop cmpl jne mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push mov mov xor mov mov mov sub je dec je dec je dec je dec jne movl movl pop ret mov movl pop ret movl movl pop ret movl movl pop ret movl movl pop ret push mov mov push mov push xor inc movl mov mov mov mov movl call mov push test jne call pop xor jmp mov push push call add mov mov pop pop pop ret push mov mov mov pop ret push mov mov cmpl jne movl mov push mov call pop pop ret push mov push mov push mov call mov push call pop pop pop pop ret push mov push mov mov test je mov push call pop andl pop pop ret push mov sub push push mov xor push mov mov mov cmp je orb push pop mov cmp jne push pop lea call mov lea mov lea mov mov lea push mov call mov lea pop push sub pop mov mov inc dec jne mov orb mov movl movzwl mov cmp jb lea mov lea mov mov sub mov mov mov shr mov mov lea mov movsl movsl movsl movsl mov mov xor inc cmp jb mov lea mov push call pop push pop mov mov mov lea mov mov inc dec jne mov mov add sub mov decl mov jne mov jmp mov test je orb lea xor lea stos push mov stos stos stos call mov add push pop mov sub mov movzbl add mov lea mov xor inc cmp jb lea push lea call pop sub mov mov inc decl jne pop pop pop mov pop ret push mov sub push mov push mov mov mov test jne xor inc jmp and mov push test je lea lea push sub pop mov mov inc dec jne mov lea push push push mov lea push push push call add test je mov lea mov shl push call pop test je andl jmp movl andb cmpl jne xor jmp movzwl mov cmp jb lea mov mov lea mov mov sub shr mov mov lea push call mov pop xor mov xor inc cmp jb mov mov mov push pop lea mov mov inc dec jne mov lea mov add decl mov movsl movsl movsl movsl jne mov mov test je mov and mov movzbl movzwl mov cmp ja mov sub mov xor inc pop pop pop mov pop ret push mov sub push mov lea push lea movl push mov pushl push mov call add test je mov lea shl lea push call pop test jne inc mov jmp xor pop mov pop ret push mov push push push push mov mov mov push mov call mov sub mov push mov call mov add push mov call mov add cmp jae push mov mov call pop mov push mov call pop imul xor push pop div cmp jb call mov pop pop pop mov pop ret push mov push push mov push mov call mov pop test je push push mov mov push mov call mov mov push call pop pop sub pop pop cmp jae cmpl je mov push call pop test je andl call sub cmp jl mov mov call pop mov pop ret push mov push mov push push mov mov push mov call mov mov add pop mov cmp jbe push call mov push mov call pop pop jmp push push call pop pop test je cmpl jb cmpl jne mov push movl call pop call mov pop pop pop pop ret push mov sub push mov mov push mov push mov call mov mov pop cmp je push mov mov push mov call mov mov push call pop pop sub mov cmp jbe mov add push mov mov call mov mov push call pop pop mov sub cmp jb mov mov push push mov call pop pop pop test je call mov mov pop pop mov pop ret push mov mov mov push movzbl mov push push push mov push call add pop pop ret push mov push mov push mov push mov mov push mov call pop pop test je mov movl pop mov mov pop pop jmp pop pop pop ret push mov mov mov mov mov pop ret push mov sub push mov cmpl jne mov call mov mov test jne xor jmp mov push call mov lea call lea push lea push mov call add jmp mov mov push mov call pop test je mov push pushl mov push call add lea push lea push mov call pop pop test jne mov pop mov pop ret push mov mov mov test jne xor inc pop ret mov mov test jne pop ret mov mov cmp jne call not and pop ret sbb neg pop ret push mov push push xor cmp jne mov xor inc movb xor mov cmpl mov sete mov and and cmp sete and dec neg sbb jne mov mov pop ret push mov mov call push push mov movl mov cmpl je call pushl movzwl lea mov push lea push call add test jne movzwl mov cmp jae push lea push pushl call add mov orb pop pop mov pop ret push mov mov call push mov movl testb je call movzwl lea push mov push lea push call add test jne push mov lea push push pushl call add mov andb pop pop mov pop ret push mov cmpl push mov je cmpl jne mov call mov xor cmp setne mov jmp mov test je push call andl pop andl pop pop ret push mov push push mov mov mov mov mov push lea push mov push push push mov call add pop mov pop ret push mov push mov push mov mov mov call mov mov push push mov call pop pop test je mov movl pop mov mov pop pop jmp pop pop pop ret push xor mov push xor cmp sbb mov neg mov mov je cmp jne push mov mov call mov pop test je mov push push mov call pop jmp mov test je mov push call mov pop pop pop ret push mov push mov cmpl je mov mov mov push push mov call pop pop mov call mov pop pop jmp pop pop ret push mov mov mov mov pop jmp push mov push mov cmp jae xor jmp push push mov xor mov mov div imul add add cmp jne xor inc jmp mov push call cmp ja mov push mov mov call pop test jne push pop jmp push call add cmp jb push call xor lea mov mov div imul xor add add cmp setne inc jmp xor pop pop pop pop ret push mov push push mov call mov test je pushl mov mov call pop test je mov lea sub mov mov mov inc dec jne push mov mov call mov pop test je mov mov mov mov mov push call mov push call push mov mov call add mov test je mov mov pushl push call pop pop test je mov mov mov pushl push call pop pop test je mov call test je mov jmp push call pop xor pop pop pop ret push mov push push push mov push push mov movb mov mov lea push push call push lea push pushl call add mov push call cmp jne push call push mov lea call pop test je mov push mov call push pushl call pop pop mov push push mov call mov lea mov push pushl call add pop pop pop mov pop ret push mov mov pop jmp push mov mov test je mov push call pop mov test je mov push call pop cmpl je mov push call pop mov test je mov push push call pop pop pop ret push mov mov push mov call mov pushl lea mov push mov call add pop ret push mov push mov mov call cmpl je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push mov cmpl jae xor pop ret push mov mov push mov call pop test je mov add cmp sbb inc jmp push pop pop pop ret push mov and sub push push push pushl lea push call mov lea xor push push mov push push call add cmpl jb xor jmp mov lea push pushl push push call mov lea push push push push call mov lea push push push push call mov lea mov lea mov push mov mov call pushl mov lea orl mov push call add pop pop mov pop ret push mov mov call push push push mov lea mov mov mov xor mov mov mov lea push pop mov lea mov lea push lea mov push lea mov push lea mov push push push lea mov push push push mov mov mov mov mov movl mov mov movl mov call cmp jne movl cmp je test je cmp jne xor inc lea push call pop mov pop pop mov pop ret push mov sub push push push xor lea push push push mov call mov add mov mov cmp jb cmpb je push pop jmp push pop cmp jb cmpb jg cmp jb cmpb jg cmp jb cmpb jne cmp jae xor jmp mov cmpl jne xor lea call test je lea push push push lea lea call add test je xor inc jmp mov neg sbb and add cmpl je pushl call pop mov pop pop pop mov pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop cmpl je mov push call pop mov test je mov push push call pop pop pop ret push mov mov push mov call pop test je mov push mov call pop test je mov push mov call pop test je mov push mov call pop test je mov pop jmp pop ret push mov push mov mov push mov call pop mov pop pop jmp push mov push mov mov push mov call pop mov pop pop jmp push mov push mov mov push mov call pop mov pop pop jmp push mov push mov mov push mov call pop mov pop pop jmp push mov push mov mov push mov call pop mov pop pop jmp push mov push mov mov push mov call pop mov pop pop jmp push mov push mov mov push mov call pop test je push lea cmpl je mov lea push pushl lea call pop pop test je cmpl je jmp mov push mov call pop test jne push pushl lea pushl push call add test jne pop mov pop pop jmp mov push mov call pop test je mov mov push mov call pop pop pop pop ret push mov mov call push mov mov push mov call mov pop test je push mov push cmp jbe mov mov lea push push lea mov push push call add cmpl jbe mov lea pushl push mov push call add test je mov mov push pushl mov push call mov push mov call add test jne mov push mov call pop test je push push call pop pop cmpl je mov push mov call pop test je pushl mov lea call pop test je mov push mov call mov pop test jne jmp mov call pop pop pop mov pop ret push mov push pushl call pop pop pop ret push mov push pushl call pop pop pop ret push mov push mov mov call cmpl je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop lea call push call pop pop pop ret push mov push push mov mov mov push push lea call pop pop test je push push lea mov call pop pop test je xor inc jmp xor pop pop pop ret push mov push push mov mov push mov call mov mov push mov call andl andl pop pop pop pop pop ret push push mov push mov mov mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je xor inc jmp xor pop pop ret push mov push push push push push xor xor mov mov mov call mov test je pushl mov mov call pop test je lea xor call test je lea mov push lea call pop test je pushl mov mov pushl mov mov call mov pop pop test je lea push lea call pop push pop call mov test je mov call mov test je mov lea push mov pop rep mov orl mov mov mov mov push call mov push call pop pop mov call test je push mov mov call push mov mov mov call mov mov pop pop test je test je mov push push mov call mov pushl push mov call add mov jmp mov mov push call pop test je mov push call pop test je mov push call pop xor pop pop pop mov pop ret push mov and sub push push push lea movb push push call andl lea mov add xor cmpl push pop rep jb push mov mov call pop test jne push mov mov call pop test jne push pop jmp mov mov call test jg xor jmp cmp jae push lea push push call add lea lea call mov test je push lea push call neg lea mov sbb not and call neg lea mov sbb and call test je lea push lea mov call pop test jne xor lea call xor test sete inc pop pop mov pop ret push mov push push mov call mov test je pushl mov mov call pop test je mov lea sub mov mov mov inc dec jne mov call mov test je push mov mov call mov pop test je mov mov mov mov mov push call mov push call mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov jmp push call pop xor pop pop pop ret push mov sub andl lea push push mov push lea mov call pop test je mov push mov lea push call push lea push pushl call add pop test je cmpl je mov lea call mov lea pushl push mov push call add test je movl mov call push push push call mov add pop pop mov pop ret push mov sub push mov mov push mov mov push call mov mov mov call mov mov mov call mov mov mov call mov mov mov call andl lea mov xor push pop rep cmp je mov lea push push call test jne push push call test jne movl jmp push push call test jne and cmpl jne andl mov test je lea push lea call pop test je lea movb cmpb jne cmpb jne xor jmp xor inc mov lea push push movl call xor mov mov cmp je mov test je cmpl je lea mov call test je cmpb jne mov test je push push call test jne movl push jmp push mov mov call pop test je push pop mov call push mov mov call pop test je push mov mov call pop test je mov mov call jmp lea mov testb jne mov cmpl jne push mov mov call pop test je testb je cmpb jne cmpb jne xor inc jmp xor mov test je push mov mov call mov movl mov call pop mov call test jne andl lea call xor pop pop pop mov pop ret cmpb jne cmpb jne xor inc jmp xor mov test mov jne mov push mov mov call pop lea mov call test je xor inc mov jmp push mov sub push push mov xor cmp je mov push mov call pop cmp jbe mov push mov call mov mov push mov call sub pop pop cmp ja mov test je push push lea push push call mov add mov lea push call push lea push pushl call add pop test je mov push push pushl mov push call mov push push push mov call add test jne mov call jmp cmp je mov lea push push pushl mov push call mov push mov call add or jne mov mov cmp je call jmp call pop pop mov pop ret push mov sub push mov mov movl push mov call push lea push push call lea mov push lea call add test je mov call test je push push call pop pop jmp mov call pop mov pop ret push mov mov pop jmp push mov sub push push xor lea push push push mov mov call mov lea add mov push push lea push push call mov lea add call mov test jg xor inc jmp mov mov push push mov call pop pop lea lea call test je lea mov call lea test jne call jmp call cmp jne xor pop pop mov pop ret push mov push push mov cmpl je mov lea push pushl pushl mov push call mov add test je sub jne mov call test jne jmp andl mov cmpl jne call jmp call xor inc pop mov pop ret push mov and push push mov mov cmpl jne call test jne mov call pop mov pop ret call jmp push mov push mov mov test je mov push call pop test je push push call pop pop pop pop ret push mov push mov mov push mov call pop test je mov pop pop jmp pop pop ret push mov push mov mov push mov call pop test je push push call pop pop pop pop ret push mov mov movl pop jmp push mov cmpl je mov push mov call pop test jne mov push mov call or pop jne mov push mov call pop pop ret push mov push push push mov mov mov mov mov call mov test je push call add push pushl push call jmp cmp je inc mov test jne cmp je xor mov mov test je movb xor inc pop pop pop pop ret push mov push push push push push mov mov xor mov mov mov push mov call pop mov cmp ja mov jb cmp jae mov jmp mov push mov call pop mov lea push push mov call pop pop test je mov mov push push mov push pushl push call add test je mov mov push push mov push pushl push call add test je xor inc jmp xor pop pop pop mov pop ret push mov sub andl mov push push push mov mov mov call mov test je lea mov call mov test je mov mov call test je lea push push lea lea call pop pop test je push lea mov push push pushl lea call add jmp mov lea push push mov call pop pop test je mov push call xor pop inc jmp test je mov push call pop mov test je mov push call andl pop xor pop pop pop mov pop ret push mov push push andl push push push mov mov cmpl je mov lea push mov call push push lea mov call add test jne mov test je mov push call pop mov test je mov push call andl pop xor pop pop pop mov pop ret mov mov call mov mov push mov call pop mov or test jne cmp ja mov push mov call pop cmp jbe mov lea push push lea mov call pop pop test je mov push push mov call pop pop test je mov push push mov call pop pop mov xor mov push push mov push pushl push call add test je mov mov push push mov push pushl push call add test je mov mov push push mov push pushl push call add test je testb lea pushl mov mov mov push je call jmp call pop pop test je mov push call xor pop inc jmp push mov push mov test je mov push call pop mov xor mov mov test je mov push push call pop pop mov test je mov push call mov push mov call pop pop mov mov test je mov push call mov push mov call pop pop mov pop pop ret push mov mov test je mov push call pop mov test je mov push call pop cmpl je mov push call pop mov test je mov push push call pop pop pop ret push mov push mov mov call mov call cmpl je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop lea call push call pop pop pop ret push mov cmpl jae xor pop ret push mov call mov test je pushl mov mov call pop test je mov call mov test je mov push push lea mov push sub pop mov mov inc dec jne mov lea push pop pushl rep mov call pop pop pop test je mov jmp push call pop xor pop pop ret push mov mov push mov push mov mov mov mov shr call cmp jne xor jmp push lea lea push pop mov add sub mov add mov mov shr mov call cmp je add add add sub mov add mov mov shr mov call cmp jne xor jmp lea mov sub lea add mov lea shr call xor cmp setne mov pop pop pop pop ret push mov push push mov mov push pushl mov call cmp jae pushl call cmp jae pushl call cmp jae pushl call cmp jae movzbl pushl mov mov movzbl mov movzbl mov mov mov mov push mov call pushl lea push call pushl lea push call pushl lea push call xor inc jmp xor pop pop pop pop ret push mov push push mov mov push pushl mov call cmp jae pushl call cmp jae pushl call cmp jae pushl call cmp jae movzbl pushl mov mov movzbl mov movzbl mov mov push mov call pushl lea push call pushl lea push call pushl lea push call xor inc jmp xor pop pop pop pop ret push mov push push mov push pushl mov call mov cmp jae pushl call cmp jae pushl call cmp jae pushl mov push call pushl lea push call pushl lea push call xor inc jmp xor pop pop pop pop ret push mov sub lea push push lea mov push lea push lea push mov lea add push call add test jne xor jmp movzbl sub je dec je dec je dec je dec je dec jne push jmp push jmp pushl mov mov pushl pushl pushl call add jmp pushl mov pushl push pushl call jmp push pushl mov mov pushl pushl pushl call add pop mov pop ret push mov and sub push push xor mov push push mov mov lea push call add lea mov push pushl call pop pop test je mov test je cmp je cmp je jbe cmp ja pushl mov lea push pushl lea call add mov mov test je mov lea push call pop sub mov mov mov inc dec jne mov mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov push mov pushl push call add test je xor inc jmp mov lea push pushl lea call pop pop jmp pushl lea push lea lea call jmp mov test je mov push call pop xor pop pop mov pop ret push mov push push mov mov mov mov lea push push call pop pop test je mov call test jne mov call pop pop pop ret push mov push mov mov mov push mov call mov mov push mov call mov mov push mov call add test je mov mov push mov call pop test je mov pop pop jmp pop pop ret push mov mov test je mov push mov call mov mov push mov call pop pop cmpl je mov push call pop mov test je mov push call pop mov test je mov push push call pop pop pop ret push mov push mov mov call mov test je mov push call pop mov test je mov push call pop cmpl je mov push call pop push call pop pop pop ret push mov push push push push mov or xor call mov xor mov mov div imul add add cmpb mov jne mov push mov push mov mov call push mov push pushl call add pop test je mov lea push push mov push mov call add test jne xor jmp mov lea pushl mov lea push call pop pop pop pop mov pop ret push mov sub mov xor push push push movzbl mov pop div movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov push call mov mov lea push call add xor inc pop pop mov pop ret push mov sub push mov lea push push push call add mov lea push call cmpl ja jne cmpl jae xor jmp push call test je mov call mov test je pushl mov mov call pop test je pushl mov mov call pop test je mov lea push push pop lea mov rep lea push sub pop mov mov inc dec jne mov lea push lea call pop pop test je mov call mov test je push mov mov call mov pop test je mov call mov test je mov and movzbl neg sbb and add mov call mov test je mov call mov test je mov call test je mov jmp push call pop xor pop pop mov pop ret push mov sub push lea mov mov lea mov mov push movzwl lea push movzwl mov movzwl mov add lea add cmp jb mov cmp ja mov cmp ja mov movzwl cmp ja lea lea push sub pop mov mov inc dec jne mov lea mov mov mov mov mov mov mov mov add mov mov movzwl add push call mov lea mov movzwl lea movzwl add push call movzwl lea add push movzwl lea call xor add inc jmp xor pop pop pop mov pop ret push mov sub push push push xor xor push mov mov lea mov push push mov call movzbl add sub je dec je dec je dec jne xor lea call mov sub je dec jne push pop jmp push pop lea call mov test je jmp xor inc lea push lea call pop test je mov test je push push push push lea push push push call call mov test je mov test je push mov push push push push push push call call test je test je push call pop push push mov mov call pop pop jmp mov call test je push call pop xor pop pop pop mov pop ret push mov push andl push mov push mov test je push pop call mov test je movl mov mov mov mov push mov mov mov movl lea push push pop call test je mov test je push push push push push push call call cmp je mov jmp mov call cmpl je pushl call pop xor pop pop mov pop ret push mov mov sub push cmp jne mov mov test je mov push mov call pop push call pop jmp mov cmpl jne mov lea mov mov mov mov mov mov mov push push mov push push mov call add pop mov pop ret push mov mov cmpl jne mov pushl pushl pushl pushl pushl pushl call add pop ret push mov push push push mov movl xor mov push mov test je mov test je lea push lea push push push push push call call mov push add push call mov call mov mov mov call pop pop mov pop ret push mov and mov sub push push push cmp jbe mov mov cmp ja je cmp je cmp je cmp je cmp jne mov mov mov push mov call pop mov cmp ja mov cmp jbe mov push push mov mov call test je jmp xor xor push mov lea push push call mov add movl test je mov lea push push lea push push push pushl push push call call test je push lea push call test jne xor movl lea mov mov test je push lea push push push push pushl push push call call testb je push pushl jmp mov call jmp cmpl je cmpl je testb jne mov pushl andl pushl mov push call add jmp mov mov call andl mov call mov call jmp cmp je cmp je cmp jne mov test je push pushl push push call call jmp andl mov call pop pop pop mov pop ret push mov sub push xor mov push push mov lea push call movzbl push movzbl push movzbl push movzbl push lea push push call mov add movzwl test jne xor jmp push push lea push pushl push push call call push push mov mov call pop pop pop mov pop ret push mov push push push push mov movl mov mov testb je mov mov mov test jne xor jmp push push push push push pushl pushl push push call call mov test je push lea mov push push pop call testb je push lea movl push push pop mov call andl lea push push push pop mov call push push mov mov call pop pop pop pop mov pop ret push mov push push push mov mov push push mov call pushl mov call add lea call mov test je pushl push push push call mov add test jne xor jmp push push push pushl push push call call mov push call pop mov pop pop pop mov pop ret push mov push mov mov test je mov push mov sub push call pop cmp ja mov test je mov lea push mov add mov push push push call mov add add cmpl pop je cmpl je mov push mov call pop pop pop ret push mov mov pop jmp push mov mov push push movl call pop pop pop ret push mov push mov cmpl jne mov push mov call pop test je mov movl test je push pushl push push call call test jne mov call andl pop pop ret push push mov push lea push call push call lea push pop lea push pop xor call mov mov lea dec jne xor pop mov pop ret push mov sub lea push push push push mov lea pop mov rep push movsb xor push push call add testb jne mov call lea push lea push push call add testb mov jne mov push push mov call mov pop pop test je lea mov push mov call pop test je mov mov push mov call pop test je mov mov push call pop test je mov mov push call pop test je cmpb jne push lea push lea push push mov call test je cmpb jne lea mov lea mov call test je push pushl pushl push mov call test je pushl call pushl call pop pop testb je mov lea push mov call pop test je xor inc jmp mov test je mov call mov xor pop pop pop mov pop ret push mov call test je testb je mov call jmp mov test je xor push push push push push push pushl push push call call test je xor inc pop ret mov test je mov call xor pop ret push mov push andl push mov lea push push push lea push mov call mov pop pop test je lea call mov test je mov mov call mov mov push push test je call jmp call pop pop test je mov mov push push mov push pushl push call add test je mov mov push push mov push pushl push call add test je mov push call pop pushl call xor pop inc jmp pushl call pop test je mov push call pop mov test je mov push call andl pop xor pop pop pop mov pop ret push mov and push andl mov push push mov mov push call lea push push lea mov call mov pop pop test je mov mov andl push mov push push pushl push call add test je mov mov push push mov push pushl push call add test je mov pushl push mov call testb pop pop pushl je push lea mov call pop pop jmp push lea push push lea call add test je mov push call xor inc jmp test je mov push call pop mov test je mov push call andl pop mov push mov call xor pop pop pop pop mov pop ret push mov push mov mov push mov call mov call pushl pushl pushl push mov call test jne mov pop pop jmp pop pop ret push mov push mov test je mov push call pop mov xor mov mov test je mov push push call pop pop mov test je mov push call pop mov mov test je mov push call pop mov pop pop ret push mov mov test je mov push call pop mov test je mov push call pop cmpl je mov push call pop mov push push mov call pop pop pop ret push mov call mov call mov test je mov call mov test je mov pop jmp pop ret push mov mov test je call cmpl je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop cmpl je pushl call pop push call pop pop ret push mov mov call mov call mov pop jmp push push mov push pop call mov test je movl mov call mov test je push push mov mov call mov pop pop test je mov push push call pop pop test je mov jmp push call pop xor pop pop ret push mov mov push mov push mov call pop pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push mov push push mov call mov test je pushl mov mov call pop test je mov lea sub mov mov mov inc dec jne mov mov mov mov mov push call mov push call pop pop mov call mov test je mov mov mov push pushl push call add test je mov mov push mov pushl push call add test je mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov dec jne mov call test je mov jmp push call pop xor pop pop pop ret push mov mov push mov pushl add push call mov pop pop test je mov mov mov push mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je xor inc jmp xor pop pop ret push mov push mov mov push mov call pop test je mov mov push mov call pop mov push mov call pop test je mov mov push mov call pop mov push mov call pop test je mov push mov call pop test je mov pop pop jmp pop pop ret push mov push mov mov mov push mov call pop test je mov push mov call pop mov mov push mov call pop test je mov push mov call pop mov mov push mov call pop test je mov mov push mov call pop test je mov pop pop jmp pop pop ret push mov push mov push mov mov push mov call pop mov jmp mov push mov call pop test je mov lea push push pushl mov push mov call mov mov push mov call add test jne mov push mov call pop jmp mov mov push mov call pop test je mov lea push mov push mov pushl push call mov push mov call add test jne pop pop pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop cmpl je mov push call pop mov test je mov push push call pop pop pop ret push mov push mov mov call cmpl je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push mov sub lea mov push push mov lea mov mov add mov push mov lea mov lea mov movzbl shl mov movzbl xor mov movzbl mov shl xor movzbl shl xor imul shr and mov cmp jb mov sub mov lea mov cmp mov ja cmp jbe mov cmp je mov and xor mov cmp jb mov sub mov lea mov cmp mov ja cmp jbe mov cmp jne mov cmp jne mov cmp jne mov mov sub je cmp ja or jmp cmp ja mov sub jmp lea movb mov mov inc cmp jbe add xor div inc push push push mov call mov add mov add mov sub dec jne mov mov inc mov mov inc inc dec jne mov mov inc cmp jne mov inc cmp jne mov inc cmp jne mov inc cmp jne mov inc cmp jne mov inc cmp jne mov add jmp mov cmp jne inc inc cmp jb mov mov sub mov cmp ja mov mov cmp ja sub or mov jmp sub movb jmp sub mov mov shr and cmp jbe sub or mov mov mov inc cmp jbe lea xor div lea push push push call mov add add mov sub dec jne mov mov jmp dec mov sub mov cmp ja mov dec mov shl and or shl mov shr jmp mov cmp ja mov jmp sub mov shr and sub or or mov inc mov shl shr mov mov mov add mov jmp mov mov mov cmp jb mov sub mov pop mov sub pop pop mov pop ret push mov push push push mov mov mov push mov cmp ja mov jmp pushl mov push pushl call mov add add mov mov test je sub add cmp jne cmp ja lea jmp cmp ja or jmp cmp ja lea jmp lea movb mov inc cmp jbe add xor div inc push push push mov call mov lea add add sub dec jne mov inc mov mov inc inc dec jne mov movw add pop movb sub inc mov xor pop pop mov pop ret push mov push push mov push push mov mov andl add mov lea mov mov mov push cmp jbe movzbl sub inc cmp jb mov sub cmp jb sub lea cmp jb mov mov inc inc dec jne jmp cmp jae movzbl inc cmp jae test jne jmp add inc mov sub cmp jb cmpb je movzbl add add inc mov lea sub cmp jb mov lea sub cmp jb mov push pop mov add add dec je cmp jb mov sub mov add add cmp jae test je mov mov inc inc dec jne jmp mov mov inc inc dec jne movzbl inc cmp jae movzbl mov shl sub shr sub sub inc cmp jb cmp jae mov sub cmp jb mov mov mov mov mov mov add jmp mov cmp jb mov mov shr and shr sub movzbl shl sub dec inc dec cmp jb cmp jae mov lea sub cmp jb mov mov mov mov add add mov mov inc inc dec jne mov movzbl mov and je mov sub cmp jb sub lea cmp jb mov mov inc inc cmp jbe mov mov inc inc cmp jbe mov mov inc inc movzbl inc mov cmp jb jmp cmp jb and jne jmp add inc mov sub cmp jb cmpb je movzbl add add inc movzwl mov shr sub dec add jmp cmp jb mov mov and shl sub and jne jmp add inc mov sub cmp jb cmpb je movzbl add add inc movzwl add shr sub cmp je sub cmp jb cmp jae mov lea sub cmp jb cmp jb mov push sub pop cmp jl mov add mov add sub mov sub mov add add cmp jae test je mov mov inc inc dec jne jmp movzbl mov shl sub shr sub dec inc cmp jb cmp jae mov sub cmp jb mov mov mov mov add jmp sub cmp sbb sub and add neg sbb and jmp push jmp push jmp push jmp push sub pop mov mov pop pop pop mov pop ret push mov sub xor xor push push push mov lea stos mov mov mov mov push stos pop mov push stos xor lea mov stos mov mov mov stos mov mov mov stos mov stos stos xor lea stos stos stos stos stos stos xor lea rep pop call mov test je push pop call mov test je movl lea mov mov mov lea push push movl movl movl movl call pop pop test je lea movl mov lea lea movl push push movl call pop pop test je lea push pop mov mov mov call test je xor lea mov mov mov mov lea push push call pop pop test je lea movl xor mov lea mov push push lea mov mov mov mov mov call pop pop test je xor mov inc jmp andl test je push call pop test je push call pop xor pop pop pop mov pop ret push mov sub push mov cmpl je xor inc jmp lea push push lea push call test je xor jmp mov add add mov call xor mov test setne mov pop mov pop ret push mov sub push push push xor lea xor mov push pop mov rep lea mov stos push push mov stos mov stos stos xor mov lea stos stos stos stos lea push call add mov lea call test je lea xor mov inc push mov mov lea push lea push push push push push call test je lea movl push movl mov mov call mov call mov mov call imul xor push pop div add mov call mov call imul xor push pop div inc mov call mov call imul xor push pop div xor inc mov mov call mov call imul and add mov call mov call imul xor push pop div mov call mov call imul xor push pop div mov call mov call imul lea xor lea mov div mov mov movsl movsl movsl movsl pushl add lea mov lea push lea push xor push push push lea push push call mov mov test je mov test je push call mov pop push call pop pop pop mov pop mov pop ret push mov and sub push push push xor lea push push push mov mov mov call add movl test je movl jmp call mov test je lea movl movl movl mov push pushl lea movl push push push xor test push setne inc push push push call test jne xor inc cmpl je pushl call pop mov pop pop mov pop ret mov test je push call pop ret push push push push xor mov push push mov call add mov cmp jne push call mov cmp je push pushl call test je call test je mov mov push pop mov lea rep push mov call pop test je xor inc jmp cmp je pushl call mov call xor pop pop pop ret push mov push push mov mov push push mov call mov pop cmp jb mov lea push push call pop pop test je mov push push push call add neg sbb neg pop pop pop pop ret push mov sub mov push push mov xor push mov mov push mov mov call pop cmp jae mov push push call pop pop test je mov push mov call mov mov push call pop pop cmp jae mov mov push mov call push pushl call add test je mov push mov call mov mov push call pop pop cmp jb mov lea mov push pushl pushl push call mov lea add mov mov mov lea movl push push push lea mov push mov mov mov movl mov call mov cmp je mov test je cmp je cmp jne cmp jne xor jmp mov movl lea mov test jne cmpl jne mov test jne cmpl jne mov add decl jne mov test je mov pushl pushl mov push call add mov test je mov mov mov sub push push call pop pop cmp jne mov movl xor inc pop pop pop mov pop ret push mov sub push push push mov mov lea mov push push lea xor push mov call test jne mov lea mov add push pushl mov push push call mov add movl mov movl mov mov mov mov mov mov add mov mov mov lea mov lea push push push lea movl push mov mov movl call test js push lea mov pop test jne cmpl jne mov test jne cmpl jne mov add dec jne test je mov mov mov sub push mov push call mov add add mov push mov mov call add test je xor inc jmp xor pop pop pop mov pop ret push mov mov mov push push mov xor mov push pop mov mov mov mov mov mov mov mov mov mov mov movl mov mov pop mov mov pop pop ret push mov mov call andl andl lea push push lea push pushl mov mov call add mov cmpl jne mov cmpl jne andl jmp movl mov mov mov andl lea push lea push pushl lea push lea push lea mov call add mov cmpl jne cmpl je mov add mov jmp andl lea push lea push lea push mov add push push push lea push pushl mov add push mov call mov jmp cmpl je lea mov jmp andl cmpl je mov add mov jmp andl lea push lea push lea push mov add push push pushl push push push push pushl mov add push mov call mov movl cmpl je cmpl je cmpl je jmp jmp jmp push pop imul cmpl je push pop imul pushl push pop imul mov mov call pop test jne jmp push pop shl cmpl jne push pop shl mov mov jmp andl mov mov cmpl jbe jmp jmp mov sub push pushl mov mov call pop pop jmp jmp jmp cmpl jne mov call test jne jmp mov movl movl push pop imul cmpl je push pop imul pushl mov call jmp jmp mov mov pop ret push mov push call test je dec add mov cmp je cmp jne movb dec jmp pop ret push mov mov test jne xor pop ret xor cmp je cmpb je inc cmp jne push mov test je cmpb je lea add mov jmp andl movb mov pop pop ret push mov push push mov mov push call test je cmpb jne dec cmp jne mov cmp je cmp jne cmpb jne mov cmp jl cmp jg sub mov mov mov sub mov xor inc jmp xor pop pop pop ret push mov push mov lea push push mov mov andl push call mov add test je push call cmp jae push push call mov push push call test je push push call test je push push call test jne mov lea push mov call movl push lea push call mov lea push mov call add test je push push call test jne mov lea push mov call add test je lea push lea mov call pop test je mov mov xor inc jmp xor pop pop pop pop ret push mov push mov push push push andl mov lea mov push mov call add test je push push call test jne mov lea push mov call add test je lea mov push mov call pop test je mov lea push mov call add test je mov call mov test je lea mov call push mov call pop test je mov lea push mov call mov add test je mov call push lea push push call add push push push call mov mov mov xor inc jmp xor pop pop pop mov pop ret push mov push mov push push push cmpl mov mov jae mov call mov test je mov mov jmp cmp je inc mov test jne cmpb je xor test je mov sub cmp jge push push movb call lea jmp cmp je cmp jne inc mov test jne push call cmp jge push lea push call mov call mov mov mov mov xor incl inc jmp push call pop xor pop pop pop mov pop ret push mov push push push mov mov jmp lea mov push call add mov push call cmp jle mov call pushl mov mov call pop test je mov test jne xor inc pop pop mov pop ret xor jmp push mov sub push mov mov movl movl movl test jne or jmp push lea xor push test je lea cmpb je xor pushl call mov mov sub cmp ja push mov pushl add push call add test je inc cmp jb inc lea cmp jae mov jmp mov add jmp or pop pop pop mov pop ret push mov push push push push mov mov push push call lea mov push mov call add test jne xor jmp mov lea push lea call pop test jne mov call jmp xor inc pop pop mov pop ret push mov push xor cmp jbe push lea pushl call inc lea pop cmp jb pop andl pop pop ret push mov sub push push push mov mov lea mov movsl movsl movsl movsl movsw movsb mov lea movsl movsl movsb lea push call lea mov cmp jb xor jmp movzbl push pushl mov push movzbl push lea push push call xor add mov cmp jbe lea mov sub push call pushl mov call add add add mov cmp jae mov lea push push lea push pushl call add push call mov add inc add mov cmp jb mov lea cmp jae push push call xor inc pop pop pop mov pop ret push mov push push push push mov mov push push call lea mov push mov call add test jne xor jmp mov lea push lea call pop test jne mov call jmp xor inc pop pop mov pop ret push mov push push push mov push mov mov call test jne cmpl jae mov push call cmp jae pushl call cmp jae mov call mov test je pushl mov push call pushl lea push call mov mov xor incl inc jmp xor pop pop pop mov pop ret push mov push xor cmp jbe push lea pushl call inc lea pop cmp jb pop andl pop pop ret push mov push push push push mov xor mov mov cmp jbe lea push pushl call test je mov inc add cmp jb xor pop pop pop mov pop ret mov sub jmp push mov push push push push mov xor mov mov cmp jbe lea push pushl call test je mov inc add cmp jb xor pop pop pop mov pop ret mov sub jmp push mov lea push mov cmp ja push push pop cmp ja mov mov xor add mov inc shl movzwl test je or jmp and mov pop pop pop ret push mov lea cmp ja xor add inc shl test je orl pop ret andl pop ret push mov cmp jb push xor add inc shl mov movzwl test je orl jmp andl movzwl test pop je orl pop ret andl pop ret push mov sub push push push mov mov push push mov mov mov call mov movzbl imul movb imul add imul add mov add xor movzwl mov cmp jae mov xor push pop div mov mov jmp push pop xor call mov lea mov push lea call pushl lea mov call push mov call mov add cmp jne cmpl je or jmp and cmp jae add jmp add mov inc cmp jb pop xor pop inc pop mov pop ret push push push xor lea mov imul lea mov cmp ja movsbl add jmp lea cmp ja movsbl add add inc dec mov cmp jb xor inc jmp xor pop pop pop ret push mov push push push push mov mov pop mov lea mov xor inc shl movzwl lea cmp ja mov jmp lea cmp ja add cmp jae test je or jmp mov not and test je or jmp not and inc cmp jb xor inc jmp xor pop pop pop pop ret push push push push mov pop mov lea xor inc shl movzwl lea cmp ja mov jmp lea cmp ja add test je or jmp mov not and test je or jmp not and cmp jne movzbl shr and mov inc cmp jb xor inc jmp xor pop pop pop ret push mov push push push mov xor push push mov mov xor push mov mov mov mov mov call cmp jbe cmpl jne cmpl jne add push call cmp jne mov lea call test je mov lea push mov call pop test je mov mov call test je mov mov movzbl imul imul add imul add mov add xor cmp sete jmp xor pop pop pop mov pop ret push mov push push andl push push mov mov lea lea call pushl mov pushl push call add test jne jmp pushl mov mov pushl call pop pop pop pop mov pop ret int3 push mov push push push mov mov push mov call mov test je mov lea mov mov sub movl mov movl mov mov inc dec jne mov push call mov mov movl push call pop pop mov call mov mov test je mov call mov test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je andl mov push push call pop pop test je xor inc jmp push call pop xor pop pop pop mov pop ret push mov sub push push push lea movb push push mov call mov lea push push lea mov push push call mov add cmpb jne lea jmp mov lea call mov test je mov mov push push mov call lea add sub add push pushl call push push movl call add pop pop pop mov pop ret push mov sub push push push xor lea push push push mov mov call mov lea add mov push push lea push push call mov lea add call mov cmp je mov push push mov call pop pop lea mov mov call test je push push movl call pop pop xor inc pop pop pop mov pop ret push mov sub push push xor lea push push push mov mov mov call add lea mov call test je cmp je mov push push push mov call mov push mov call mov lea push mov lea push mov push push call mov add pushl mov call add push pushl call push push movl call add pop xor inc pop pop mov pop ret push mov sub push push lea movb push push mov call mov push mov call add cmp jb mov lea push push lea mov push push call push mov lea call add test je push jmp push mov lea call pop test je push mov push mov call pop pop push push movl call pop pop pop mov pop ret push mov and push push mov mov sub je dec je dec je dec jne mov call jmp mov call test jne mov call jmp mov call jmp mov call pop mov pop ret push mov sub lea push push push push xor mov push push mov call add lea lea mov push call pop lea test jne call xor jmp mov call mov test je mov mov call test jne mov mov call test je xor inc mov mov call mov lea call mov pop pop pop mov pop ret push mov push andl push push push mov mov mov push mov call pop push push lea lea call mov pop pop test je mov mov push push mov push pushl push call add test je mov lea mov push pushl dec je call jmp call pop pop test je mov push call xor pop inc jmp test je mov push call pop xor pop pop pop mov pop ret push mov sub push mov mov push push mov push mov call jmp mov push mov call pop test je mov push mov call mov pop cmp jb mov mov lea push push lea mov push push call add cmpl je push lea push call pushl lea push call lea xor push call mov mov mov test je mov sub cmp jbe mov mov push lea add lea call pop test jne mov inc cmp jb jmp lea push call mov cmp jne mov movl test je mov push push mov call mov lea push push push mov call add test je mov cmp jne mov push mov call pop test jne xor inc pop pop pop mov pop ret xor jmp push mov mov pop jmp push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push push call pop pop pop ret push mov push mov cmpl je pushl call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push mov sub push push push push lea mov push push mov call andl add mov test jne lea cmpl je mov test je cmp jle cmp jg mov sub je dec je dec jne push pushl mov mov call jmp mov call test jne xor jmp push pushl mov mov call jmp pushl mov mov pushl call pop pop pop pop pop mov pop ret push mov push push push push mov xor mov mov dec je dec jne push pop lea call mov cmp jne push pop mov call mov test je xor push mov call cmp jae push lea push call lea lea call test je mov xor mov inc jmp test je push call pop xor pop pop pop mov pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push push call pop pop pop ret push mov mov pop jmp push mov call cmpl je mov push call pop mov test je mov push call pop mov test je mov push call pop lea pop jmp push mov mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop push call pop pop ret push mov mov call mov call mov pop jmp push mov mov add pop ret push mov push mov mov mov push mov call pop test je mov mov push mov call pop test je mov push mov call pop test je mov push mov call pop test je mov pop pop jmp mov mov push mov call mov mov push mov call mov push mov call mov push mov call add pop pop ret push mov mov push mov call pop test je xor inc pop ret mov push lea push pushl pushl lea push call add test je cmpl je mov push call pop mov push mov call pop test je mov mov mov push mov call pop xor inc pop pop ret push mov push mov cmpl je mov mov push mov call pop test je mov lea push pushl lea mov call pop pop test je cmpl jne pop pop ret mov call test jne mov pop pop jmp push mov mov call push mov mov mov push mov call mov pop test je push mov push cmp jbe mov mov lea push push lea mov push push call add cmpl jbe mov lea pushl push mov push mov call add test je mov mov push pushl mov push call mov push mov call add test jne mov mov push mov call pop test je push push call pop pop cmpl je mov push mov call pop test je pushl mov lea call pop test je mov mov push mov call mov pop test jne jmp mov call test jne mov call pop pop pop mov pop ret push mov push pushl call pop pop pop ret push mov push pushl call pop pop pop ret push mov sub push push mov mov push mov call mov test je push lea push lea call pop pop test je push lea push lea call pop pop test je pushl mov mov pushl pushl push push call add test je mov xor inc mov or mov mov call mov test je push pop call mov test je lea mov call test je mov mov push pushl pushl call add mov test je mov mov push mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov jmp push call pop xor pop pop pop mov pop ret push mov push push push mov mov push mov call mov test je movl movl mov mov push call mov pop lea mov sub mov mov mov inc dec jne mov call mov test je mov mov push pushl push call add test je mov mov push mov pushl push call add test je mov mov test je mov push call pop mov push push call pop pop test je add je movl xor inc jmp push call pop xor pop pop pop pop pop ret push mov push mov push cmpl je mov push mov call mov pop cmp ja mov mov push push mov call sub pop pop jne mov pop pop pop jmp pop pop pop ret push mov mov lea mov push pushl call pop pop test jne mov pop jmp mov push mov call pop mov test je mov push push call pop pop pop ret push mov mov pop jmp push mov mov test je mov push call pop mov test je mov push push call pop pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push push call xor mov call cmp jne mov push push lea push call push mov mov call add mov mov mov mov test je add push mov sub add mov call pop test je sub cmp jae push push lea push call add and lea call mov test je lea push lea mov call pop mov mov mov test je push call pop cmpl je push mov mov call pop mov push test jne call pop jmp movb push call sub lea add push lea push push call push call add call mov movl jmp xor inc ret mov orl mov test jne or jmp pushl pushl pushl pushl call call ret push mov push push mov mov push push xor movzwl lea add xor cmp jae push push call pop pop test jne mov mov add shr lea cmp jae mov cmp je add cmp jb movzwl inc add cmp jl xor pop pop pop mov pop ret mov jmp push push call mov test je push call test je push push call test je mov cmp jne mov lea cmp ja add cmpl jne push mov call pop mov jmp xor mov pop test jne xor ret mov mov xor movl inc ret push mov sub push push xor mov mov push mov mov cmp je call sub cmp jae mov call mov mov call mov mov cmp je test je inc mov jmp mov mov mov call mov mov push push push mov mov call push push push call add push push push push push call mov test je call push push push push push push push pushl mov call mov test je push push push push push push push push call mov test je push push push push push call test je test jne call mov test je push push push push push call cmp jne push push push push push call test je mov test je mov mov mov pushl mov call mov test je push call test je push call mov cmp je mov call mov mov call mov mov cmp je test jne mov mov pop pop pop mov pop ret push push call mov mov andl mov call andl mov mov call mov jmp xor inc ret mov orl mov call mov call ret push mov push push push push mov mov call mov test je mov lea mov movl movl sub mov mov mov mov inc dec jne mov call mov test je mov call mov test je push mov mov call mov pop test je mov push mov call pop pushl mov mov push call push pushl mov call add test je mov call test je mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov push push call pop pop test je xor inc jmp push call pop xor pop pop pop mov pop ret push mov push andl push mov push push mov push mov call pop pushl mov mov call lea lea cltd sub sbb lea push push call mov pop pop test je pushl mov lea push mov call pop pop test je mov push call xor pop inc jmp test je mov push call pop xor pop pop pop mov pop ret push mov sub push push push lea movb push push mov call mov xor call push push call push push pushl lea push push call mov add mov lea push call push lea push pushl call add neg sbb neg pop pop mov pop ret push mov sub push push push xor lea push push push mov call mov add cmp jne mov lea push push mov call pop push pushl pushl call jmp pushl lea push push call mov push mov call mov add mov lea push call cmp jbe mov mov lea push call push lea push pushl call mov push mov call add pop pop pop mov pop ret push mov mov push push movl call pop pop pop ret push mov mov mov push mov call pop pop ret push mov mov push mov push mov call pop pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop cmpl je pushl call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push mov sub push mov movb mov mov push cmpl mov mov mov mov mov mov mov mov mov je movb mov lea push push push call add test je mov pushl push mov push push call add test je xor inc jmp xor pop pop mov pop ret push mov push push push push mov mov mov call mov test je movl mov mov push call pop mov mov test je mov push call pop mov lea mov sub mov mov mov inc dec jne mov call mov test je mov mov push pushl push call add test je mov mov push mov pushl push call add test je mov push push call pop pop test je xor inc jmp push call pop xor pop pop pop pop pop ret push mov mov add pop ret push mov mov add pop ret push mov sub push mov mov push mov call pop cmp jb mov lea push push push mov push call mov add cmp jne mov mov push lea mov xor cmp sete mov mov mov mov mov movzbl and mov lea mov push push pushl push call add pop test je mov test je mov push push call pop pop movl mov call pop mov pop ret push mov mov pop jmp push mov cmpl jne mov test je mov push call pop mov test je mov push push call pop pop pop ret push mov push mov mov call mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push mov push mov lea andl push push push push pushl mov push push mov call mov test jne test jne xor jmp andl push call mov pop test je lea mov push push pushl pushl push call test jne cmp jne pushl call pop jmp xor inc pop pop mov pop ret push mov mov test je mov test je push push call mov mov mov mov mov mov inc inc dec jne mov push pop pop add pop pop jmp pop ret push mov mov push call pop pop ret push mov push push push mov mov push mov call mov test je push push lea push call push lea mov lea movl push mov call pop pop test je lea push push lea mov call pop pop test je pushl mov mov pushl pushl push push call add test je mov call mov test je mov mov push pushl push call add test je mov mov push mov pushl push call add test je mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov pushl cmpl lea jne lea push lea call jmp mov push call mov pop pop test je mov push pushl mov push call add test je mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je mov jmp push call pop xor pop pop pop pop pop ret push mov sub push mov xor push mov mov lea mov call mov test je push movw call mov movzwl push call mov lea mov push push mov push mov call add test je movl jmp mov push call pop test je push call pop pop pop mov pop ret push mov mov pop jmp push mov push push mov cmpl jne mov push mov push mov call mov mov push mov call pop pop cmp ja mov mov lea push mov push mov pushl push call mov push mov call mov mov mov push mov call add cmp ja mov mov lea push push pushl mov push mov call add pop pop mov pop ret push mov mov mov dec je dec jne pop jmp pop jmp pop ret push mov mov mov dec dec jne pop jmp pop ret push mov sub push push movb lea xor lea stos mov push push lea stos push stos mov mov push mov call add cmpl jne mov push mov push mov call cmpb mov pop pop push je call pop jmp movl call pop mov call pop pop mov pop ret push mov push mov mov push mov call pop test je mov mov push mov call pop mov push mov call pop test je mov mov push mov call pop mov push mov call pop test je mov push mov call pop test je mov push call pop pop pop ret push mov push mov mov mov push mov call pop test je mov push mov call pop mov mov push mov call pop test je mov push mov call pop pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop pop ret push mov push mov push call cmpl pop je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push mov push push push mov mov push mov call mov test je mov lea sub mov mov mov inc dec jne push pushl lea push call mov lea mov mov lea push push mov mov movl call pop pop test je lea push lea mov push call pop pop test je pushl mov mov pushl pushl push push call add test je mov call mov test je mov mov push pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov call test je mov jmp push call pop xor pop pop pop mov pop ret push mov incl cmpl jb xor pop ret pushl mov lea push call pop pop xor mov test pop setne mov ret push mov push mov push mov mov push mov call mov push mov push mov call mov mov push mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je xor inc jmp xor pop pop ret push mov and push push mov andl call test je mov call test je xor inc jmp xor pop mov pop ret push mov mov andl pop jmp push mov mov pop jmp push mov push push mov cmpl jne mov push mov push mov call mov mov push mov call pop pop cmp ja mov mov lea push mov push mov pushl push call add pop pop mov pop ret push mov mov pop jmp push mov push push mov cmpl jne mov push mov push mov call mov mov push mov call mov pop pop cmp ja mov mov lea push push pushl mov push mov call add pop pop mov pop ret push mov mov mov cmp je jle cmp jle cmp jne pop jmp pop jmp pop jmp pop ret push mov mov cmpl jne pop jmp pop ret push mov sub push push push xor lea push push push mov mov call mov lea push push lea mov push push mov call mov lea add call mov cmp je mov push mov push mov call pop mov lea pop mov lea call test je mov mov call test je lea mov call mov neg sbb and mov mov cmp je cmp jne movl movl jmp movl mov call jmp mov push call pop pop pop pop mov pop ret push mov push push push mov mov push xor mov cmp jne call mov call test jne mov push call jmp movl jmp mov sub je dec jne lea push call pop cmp je mov xor inc push mov mov call pop pop pop pop mov pop ret push mov mov mov push mov mov call xor inc cmpl jne push push push xor lea pop cmpl je cmpl jne mov add dec jne test pop pop jne mov push call pop pop pop ret incl cmpl jb andl jmp mov test jne test je push push call test je andl mov pop pop jmp mov test je mov push call pop andl mov pop pop jmp push mov push push mov mov push xor mov cmp jbe push lea push pushl call test jne mov mov sub call test jne mov mov sub call test je movl mov mov sub call test je movl mov mov sub call test je mov cmp je cmp jne movl mov inc add cmp jb pop pop pop mov pop ret push mov push xor xor inc cmp je cmp jne mov cmp je cmp jne mov mov pop pop ret push mov push lea mov call test jne xor jmp mov dec je dec jne mov lea push lea push push push call add jmp mov push push call pop pop mov xor cmp je inc mov mov pop pop ret push mov push push andl lea andl lea push call add cmpl je andl xor inc mov jmp cmpl je call jmp xor mov pop ret push mov push mov test je mov mov push mov call pop cmp ja mov test je mov push mov push mov call sub pop pop cmpl jne mov dec dec je dec jne pop lea mov pop jmp mov push movl call pop mov call pop mov pop jmp pop pop ret push mov sub push lea movl push lea mov call pop test je mov mov push mov call pop cmp jb mov lea pushl push mov push mov call add test je mov movl call jmp mov push call pop pop mov pop ret push mov sub push push mov mov movb movzwl push lea push lea push push call add test jns xor jmp push mov lea mov pushl call pushl mov mov call cmpl pop pop je mov sub je dec jne pushl mov mov call jmp pushl mov mov call pop pushl mov mov call pop push call mov xor inc pop pop pop mov pop ret push mov sub push push push xor mov push lea mov push push mov call mov add mov dec je dec je dec jne lea mov lea mov call test je cmp je cmp je mov call mov mov call pushl mov call pushl call pop pop test je test je mov lea push mov call push mov lea call push mov lea call add lea push call mov lea call mov mov call pushl mov mov mov call pushl mov mov call pushl mov mov call add push call pop test je push call pop mov test je push call pop test je push call pop pop pop pop mov pop ret lea call lea mov call mov jmp push mov sub push mov push push mov mov push mov mov call cmpl mov pop push mov jne mov call mov lea pop push lea mov push push call add test je mov mov call mov test je mov call mov test je push mov mov call push mov mov call pop pop pushl call pop test je push call pop pop pop pop mov pop ret push mov sub mov mov push mov mov push mov call mov test je mov push mov jmp cmp je inc mov test jne cmpb je xor test je movb cmpl mov jne push push call test jne mov cmpl je push push call test je mov movl jmp lea call mov test je push call mov call mov mov test je lea mov push lea call mov pop test je mov pushl push mov push mov call add push call pop test je push call pop pop pop pop mov pop ret push mov push mov cmpl jne mov mov push mov call pop test je mov push mov call pop mov mov push mov call pop test je mov push mov call pop pop pop ret push push mov call cmpl pop je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop cmpl je lea mov push call pop push call pop pop ret push mov mov mov call mov pop jmp push mov push push push mov mov push pop call mov test je mov movl call mov test je lea push call mov mov mov mov call mov mov call mov mov test je test je mov mov mov mov mov mov mov xor inc jmp push call pop xor pop pop pop pop ret push mov mov mov push mov call pop pop ret push mov push mov push mov test je mov push call pop test je xor inc jmp xor mov cmp ja mov mov cmp ja mov mov push push mov call pop pop test je test jne mov test je mov push call pop test je mov push mov call pop xor inc pop pop pop ret push mov mov test je mov push call or pop jne mov push mov call pop mov test je mov push call or pop jne mov push mov call pop pop ret push mov mov mov push mov mov test je cmp ja jb cmp ja mov test je cmp jb ja cmp jbe xor jmp mov mov call xor inc pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov push mov call pop lea push call push call pop pop pop ret mov call test jne ret movl ret push mov push push push mov mov call pushl mov call cmp jb push call xor jmp push call mov test jne push call xor jmp mov mov mov mov mov mov mov mov mov mov lea push call cmpl je pushl lea push call push call mov pop pop mov pop ret push mov call mov test jne pop ret push mov xor mov mov inc cmp jl mov pop pop ret push mov push push mov lea push call mov lea mov cmp jae xor jmp mov push mov push pop push mov add mov mov add mov mov add mov mov add mov mov add mov mov add mov mov add mov mov mov call add push mov call add lea push mov call mov add mov mov xor inc pop pop pop pop ret push push mov call mov test jne jmp mov push pop add mov lea mov add mov mov add mov mov add mov mov add mov mov add mov add mov mov mov mov movzwl lea push call add mov pop pop ret push push push mov push pop call mov test je xor movl call mov test jne push call pop xor pop pop pop ret mov mov jmp push mov push push pushl pushl pushl call add pop ret push mov push push push mov push pop mov call mov test je mov mov pushl mov mov mov push mov call mov mov push push push mov call add test jne mov test je mov push call pop push call pop xor pop pop pop pop ret xor inc jmp push mov mov xor push push pushl inc call add pop ret push mov pushl mov xor inc push pushl call add pop ret push mov pushl mov xor push push call add pop ret push mov and sub push push mov mov push lea mov call lea push lea push mov call pop pop test je mov mov test mov je cmp jne cmpl je cmp jne mov test je mov push call pop push call lea push mov call pop pop lea push lea push mov call mov pop pop test jne pop pop pop mov pop ret push mov mov xor push push push xor call add pop ret push mov push mov cmpl je push call mov pop push mov call pop push call pop pop pop ret push pop call test jne ret movl ret push pop call test jne ret movl ret push mov mov pushl push call pop pop pop ret push mov and sub mov lea push push xor mov push mov call lea push lea push mov call mov mov jmp cmp ja jb cmp ja mov lea push lea push mov call pop test mov pop jne push push pushl pushl push push pushl call add pop pop pop mov pop ret push mov mov test je mov cmp jb ja mov cmp jb mov cmp ja jb mov cmp ja xor inc pop ret xor pop ret push mov push push mov mov push mov mov mov mov mov push mov call mov push push mov call add pop pop pop ret push mov push push mov mov push push xor mov push push mov call mov pop pop test je mov pushl mov mov mov mov mov mov mov mov push push mov call add test jne mov push push mov call pop pop jmp xor inc mov pop pop pop mov pop ret push mov sub pushl pushl pushl pushl pushl mov mov call add test je xor inc jmp cmpl je cmpl je mov mov mov mov cmp jb ja mov mov cmp jb mov mov mov mov cmp jb ja mov mov cmp jb pushl mov mov call pop xor inc jmp cmpl je mov mov mov mov cmp jb ja mov mov cmp jb mov mov mov mov mov xor inc jmp cmpl je mov mov mov mov cmp jb ja mov mov cmp jb mov mov mov mov mov xor inc jmp pushl pushl pushl pushl mov mov call add mov pop ret push mov mov mov push mov call mov pop test jne pop ret mov mov mov mov mov mov mov mov mov mov xor inc pop ret push mov push mov mov push mov call mov push mov call push call add pop pop ret push push push mov mov push pop call mov test je mov movl call mov test jne push call pop xor pop pop pop ret mov mov mov jmp push mov push push push push mov mov call mov test je mov mov mov push push mov call pop pop test jne mov push call pop xor pop pop pop mov pop ret mov mov push mov call xor mov pop inc jmp push mov mov mov push mov call pop pop ret push mov mov mov sub pop ret push mov mov cmpl je mov sub pop ret mov push call pop pop ret push mov mov mov mov pop ret push mov mov mov mov pop ret push mov mov mov mov pop ret push mov push mov push pushl mov push pushl mov push call mov push pushl push push call add pop pop pop ret push mov mov mov test je mov mov mov mov pushl mov pushl pushl pushl push call add pop ret push mov mov mov push push mov pushl mov pushl sub mov push push call add pop pop ret push mov pushl pushl pushl call add test je mov xor add adc add adc push push pushl call add test je xor inc pop ret xor pop ret push mov mov mov test je mov mov mov mov pushl mov pushl pushl pushl push call add pop ret push mov push mov mov push pushl mov pushl push sub push mov call add test je mov push push mov call mov sub push pushl pushl pushl call mov add test je mov xor mov add adc cmp jb ja cmp jbe sub xor add cmp sbb and mov push push push push call add mov pop pop pop pop ret push mov mov mov cltd add adc cmp ja jb cmp jae xor inc pop ret xor pop ret push mov push mov push cltd push mov mov push mov mov cltd add mov mov adc add mov adc cltd add mov adc xor mov push mov cmp je pushl push call add add adc jmp pushl push call mov add add mov adc pop pop pop mov pop ret push mov mov cmpl je mov mov mov mov pop ret push mov push push mov mov sub mov sbb mov jne xor cmp jbe xor inc mov pop ret push mov mov mov cmp ja mov jb cmp ja sub mov push push push push call add pop ret push mov push mov mov push mov call push call pop pop pop pop ret push push mov push pop call mov test je inc movl mov call mov test jne push call pop xor pop pop ret andl mov andl mov jmp push mov mov andl andl pop ret push mov mov mov pop ret push mov push mov mov mov cmp jl sub jmp mov push call pop mov sub add pop pop ret push mov push push mov push mov call or sub mov push call pop pop pop add pop pop ret push mov mov push pushl mov pushl push call add pop ret push mov mov push mov mov push mov push mov push push push call lea mov add test jg xor mov push push call mov pop pop pop pop pop pop ret push mov push push mov push push push push mov mov call mov mov mov pop mov cmp jne lea test jle mov push mov call pop mov add cmp jle xor jmp test jne lea test js jle cmp jbe jmp mov sub je dec jne mov mov jmp mov mov add jns add xor div test je sub mov cmp ja mov mov add mov push test je call add jmp push push call mov add cmp ja cmp jbe mov lea sub neg push sbb and je call add jmp push push call add xor inc pop pop pop mov pop ret push mov push mov push mov call pop mov xor mov add div mov pop pop ret push mov push andl lea push mov push pushl mov pushl push call pushl mov pushl push call add pop mov pop ret push mov push mov push push mov call mov pop cmp jbe mov push call pop mov test je push lea xor push push mov call add mov push call pop mov xor mov add div mov mov test je mov pop pop pop ret push mov pushl mov pushl pushl mov push push call add pop ret push mov push push push mov push mov call mov mov pop lea cmp jbe mov push call pop cmp jb mov andl jmp mov push call mov pop sub mov push call mov xor mov add div pop mov test je sub mov cmp ja mov mov add mov push call add cmp ja cmp jbe mov mov sub add push call add mov test je mov pop pop pop pop ret push mov push mov push mov cmp jne xor inc jmp mov push call pop cmp jae lea call mov test je push mov lea push push call pop push pushl push call mov push call add pop cmp je pushl call pop xor pop pop pop ret pushl call mov andl mov mov pop mov mov jmp push mov sub push mov push push push mov call mov mov push mov call pop pop cmp jae xor jmp mov lea push push lea push push call pushl mov lea push push call add test je mov push call pop test jne xor inc pop pop pop mov pop ret push mov push mov pushl call push call pop pop pop pop ret push push pop call mov test je push push push push mov mov call add test jne push call pop xor pop ret mov pop ret push mov mov push mov call pop pop ret mov test jne push call mov test jne ret push push call jmp push mov mov test je xor push pushl pushl pushl push push push push push call call pop ret mov test jne ret push push push call call ret push mov mov test je push pushl push push push push call call pop ret push mov mov test je push pushl push push push push call call pop ret push mov mov test je push pushl pushl push push push push push call call pop ret push mov sub push xor mov push push xor mov mov lea stos xor mov inc mov mov stos mov stos xor lea stos stos stos stos stos mov call test jne push pop jmp mov test je lea push push push call call test je xor inc cmp je mov mov movl mov test je mov mov movl jmp mov jmp mov xor movl inc mov mov test je mov test jne mov jmp push push push push push push push call call mov test jne mov or jmp mov test jne mov jmp lea push lea push mov pushl push push push call call mov mov call xor inc cmp jne test je mov xor test setne jmp mov test je mov mov jmp mov test je mov mov call test je mov call mov mov test jne or mov mov test je push call cmpl je pushl call mov test je push call mov test je push call cmpl je pushl call mov pop pop pop mov pop ret push mov xor push push push mov pop mov cmp je cmp je add cmp jne push call push mov mov call pop test jne push pop mov call test je push pop cmp jne add xor mov cmp jne jmp xor mov mov jmp xor push mov call lea pop pop pop ret push mov sub push push mov movl xor mov stos stos stos stos lea push movl call test je cmpl jne cmpl jne cmpl jne push jmp push call mov test je push push call test je call mov test je xor inc mov jmp push call pop xor pop pop mov pop ret push mov push mov lea push pushl mov call test je xor jmp mov pushl call xor inc pop pop ret push mov push mov lea push pushl mov call test je xor jmp mov mov push push mov call push pop call mov test je mov call mov test jne push call pop xor mov pop pop pop ret mov movl jmp push mov mov pushl call pop ret push mov push mov cmpl je pushl call pop push call pop pop pop ret push mov sub push push xor push push mov lea push call xor push push mov lea push call mov add mov mov call mov test je mov push push pop call pushl test je mov lea push call push pop lea call xor mov add push lea push call jmp lea push call mov lea push mov call mov mov push mov call mov lea push mov call mov xor push pop mov lea push lea mov push push push lea push push push pushl push call pop test jne push push xor mov call pop pop test je mov jmp mov push call pop xor pop pop mov pop ret push mov push push mov push push mov mov call mov test je mov lea push xor lea push push push push push push pushl push call test jne push push xor mov call pop pop test je mov jmp mov push call pop xor pop pop mov pop ret push push push mov mov push pop call mov test je movl mov push push call mov pop pop test jne push call pop xor pop pop pop ret mov mov jmp push mov mov mov mov mov mov mov mov mov mov xor inc pop ret push mov mov mov push pushl call pop pop pop ret push mov sub mov push push xor mov mov push mov cmp je lea mov mov lea mov lea movl mov movl mov mov movl mov mov mov mov lea mov mov movl mov mov lea push lea push lea push lea push push push push push push push push lea push call test js mov cmp je cmp jne mov lea push lea push mov call test js cmp je cmp je xor inc mov xor mov inc mov mov jmp xor pop pop pop mov pop ret push mov push mov mov test je push call pop push call pop pop pop ret push push push mov mov call mov test je movl movl mov movl movl call mov call mov call xor mov cmp je cmp je test je push mov mov call mov pop test je push mov mov call mov pop test je mov push push push mov call mov push push push mov call mov push push push mov call orl lea push push push mov mov mov mov mov mov call add mov jmp push call pop xor pop pop pop ret push mov push mov mov add push call mov lea push pushl pushl push call mov add mov test je mov mov push push call mov pop pop add push call pop pop ret push mov push mov push push mov mov push add xor push call mov mov add push call mov push mov call mov mov push call pop pop cmp ja mov cmp jbe mov mov test je mov test je mov call mov test je mov lea push push push push call mov pushl push mov push call add test je pushl mov push call pop pop mov test je mov mov mov mov mov add push call mov add push call test je push call pop pop pop pop mov pop ret push mov push push mov mov add push call mov push call pop xor cmp mov sbb add push neg call pop mov pop pop ret push push mov mov push call pop test je test jne cmp je mov mov push mov call pop cmp jbe mov push mov call pop test jne mov pushl push mov call pop jmp mov push mov call pop pop pop ret push mov push mov mov add push call push call pop test je mov push mov call pop mov add push call pop pop ret push mov sub push push mov xor push mov mov add push call mov test je mov cmp jne mov cmp je mov sub mov sbb push mov pop jne cmp ja mov sub mov cmp jbe mov mov lea push push pushl mov push call add test je mov mov mov add push call pop pop pop mov pop ret push mov push push mov xor push mov add push call mov push call mov pop cmp jb lea push push pushl push call add cmp sete test jne mov push call jmp cmp je mov push call pop mov add push call pop pop mov pop pop ret push mov push push push mov mov cmpl je push mov call mov test je mov lea push push push push call add lea push push push push pushl call push call pop pop pop pop mov pop ret push mov push push mov mov add push call xor cmp jne mov cmp je push mov mov mov call mov push push mov push mov call mov add add adc mov pop cmp jb ja mov cmp jb mov push call pop mov push call pop test jne mov mov test je mov push call pop test je mov push call pop mov mov test je mov push call pop push call pop test je mov push mov call pop mov add push call pop pop pop ret push mov push mov push xor mov add push call mov push call pop cmp jb inc jmp cmp je mov push call pop mov add push call mov pop pop pop ret push mov push push mov xor mov add push call cmp jne mov cmp je mov push call pop cmp ja cmp ja mov push call pop mov jmp or mov mov push mov call pop cmp ja mov mov add push call pop mov pop pop ret push mov push push push mov xor mov mov add push call cmp jne mov mov sub mov sbb mov add push call pop mov mov pop pop pop ret push mov mov mov pop ret push mov push push mov mov add push call mov push mov call pop mov mov add push call pop mov pop pop ret push mov push push mov mov add push call mov mov mov mov push mov call pop mov mov add push call pop mov pop pop ret push mov push push mov mov add push call mov pushl pushl mov push call mov add add mov push call pop mov pop pop ret push mov push mov mov add push call mov mov test je mov push call pop mov add push call pop pop ret push mov push mov mov add push call cmpl jne mov movl mov test je mov push call pop mov add push call pop pop ret push mov push mov mov add push call cmpl jne mov movl push mov call mov push mov call push call add mov add push call pop pop ret push mov sub push push push lea xor pop mov mov mov push mov xor mov mov mov inc mov lea imul xor divl mov add imul add inc cmp jb mov mov add mov add mov mov cmp jb pop test jne or jmp mov xor div mov pop pop mov pop ret push mov push mov mov push call andl lea push push push mov call mov add cmp je mov mov push push call pop jmp andl mov push call pop pop pop pop ret push push push mov mov call xor xor mov inc cmp jne mov mov mov cmp jne mov sub cmp jbe mov jmp add mov mov cmp jb inc cmp jb sub cmp jb inc cmp jb lea incl pop pop pop ret push mov push mov mov push mov call pop test jne and push push lea push call mov push push mov call add mov mov call mov xor pop pop jmp push mov push mov mov movl push mov call mov push mov call pop pop pop pop ret push mov push mov mov cmp je push call xor push push push push push push pushl call xor mov cmp pop setne mov pop ret push mov mov test je add push call mov push call mov pop andl mov cmpl jne add push call mov push mov call andl pop pop ret push mov mov cmp je push call mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov pop test je add push call ret push mov mov call mov call mov call pop jmp push push mov push pop call mov test je movl call mov call mov mov test je test je mov push push push call mov push push push mov call movl xor mov add movl movl orl mov mov mov mov mov jmp mov push call pop xor pop pop ret push mov push push push push mov mov xor mov add push call cmp jne mov mov push mov mov add adc cmp ja jb cmp ja cmp je mov push call pop lea cmp jae mov push call mov inc add push push call add test je mov jmp cmp jne movl mov push pushl mov push mov call add test je cmpl je push lea push push pushl pushl call add mov adc push mov push mov call mov pop pop mov cmp jb ja mov cmp jb mov push call pop mov push call pop test je mov push mov call pop xor inc pop mov add push call pop mov pop mov pop ret push mov mov mov push pushl call pop pop pop ret push mov mov mov push pushl call pop pop pop ret push mov push push mov mov add push call mov push call pop xor cmp mov sbb add push neg call pop mov pop pop ret push mov push push mov mov add push call mov test je mov push call pop mov test je mov push call pop mov add mov push call pop pop pop ret push mov push push mov xor mov add push call cmp jne mov push call pop cmp ja cmp ja mov push call pop mov jmp or mov mov push mov call pop cmp ja mov mov add push call pop mov pop pop ret push mov mov push push mov call pop pop pop ret push mov push push push mov xor mov mov add push call cmp jne cmp jne mov mov sub mov sbb mov add push call pop mov mov pop pop pop ret push mov push push mov mov add push call mov push mov call pop mov mov add push call pop mov pop pop ret push mov push push mov mov add push call mov mov mov mov push mov call pop mov mov add push call pop mov pop pop ret push mov push push mov mov add push call mov pushl pushl mov push call mov add add mov push call pop mov pop pop ret push mov push mov mov add push call cmpl jne mov test je mov push call jmp mov push call pop mov add push call pop pop ret push mov push mov cmpl je pushl call xor push push push push push push pushl call xor mov cmp pop setne mov pop ret push mov push mov mov add push call cmpl jne mov movl push mov call mov pop mov test je mov push call pop mov mov test je mov push call pop test jne mov mov push mov call pop mov add push call pop pop ret push mov push mov mov test je add push call mov push call mov pop andl mov cmpl jne add push call mov push mov call andl pop cmpl je pushl call mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je add push call push call pop pop pop ret push mov push mov push mov call pop test je mov push mov call pop pop pop ret push mov push mov mov test je mov push call pop mov mov push mov call pop pop pop ret push mov mov push mov mov test jne mov call mov pop pop jmp push mov and sub push mov push testb je lea push push call test jne push pop push movl mov call push mov xor push push mov call mov cmp je push lea push push call cmp jne cmpl je pushl call orl cmpl je call andl jmp orl pop pop mov pop ret push mov push mov push mov call pop pop jmp mov push call mov push push mov call add test jne pop ret push mov push mov mov call cmpl je pushl call orl cmpl je call andl mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret push mov sub push push push movl call mov mov test je mov lea push lea push push call add test je mov mov push mov call mov pop lea cmp jb mov mov lea push push mov push call mov lea pushl push mov push call mov push call add push call xor inc jmp mov push call pop push call xor pop pop pop mov pop ret push mov push mov mov test je mov push call pop push call pop pop pop ret push mov mov push mov call xor pop inc pop ret push mov sub push push mov mov push mov call pop push pop cmp jb mov lea push push push mov push call mov push mov call movzwl add add cmp jb mov push mov call mov push push mov call mov movzwl push push mov lea push push call lea call push push mov call add mov jmp xor pop pop mov pop ret push mov push mov mov push mov call pop cmp jb mov lea push push push mov push call mov push mov call movzwl add add cmp jb mov push mov call pop pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push call pop pop pop ret int3 jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp mov jmp push push push push call pop pop jmp mov jmp mov jmp mov jmp mov jmp mov jmp int3 jmp jmp jmp jmp jmp mov push mov sub push mov push push mov movl mov mov add mov add mov add add mov mov add mov mov mov mov mov mov xor testl mov mov mov mov mov mov jne lea mov lea push push push push call xor jmp mov mov sub sar mov mov mov shr not and mov lea jne movzwl mov xor mov test je lea push push call mov test jne mov test jne test je lea push push call mov test jne push push pushl call mov test jne call mov mov test je lea push push call mov test jne lea mov lea push push push push call mov jmp mov mov xchg cmp jne push call mov mov test je lea push push call mov test jne cmp je cmp je mov cmpl jne mov cmp jne cmp jne mov mov mov test jne pushl push call mov test jne call mov mov test je lea push push call mov test jne lea mov lea push push push push call mov mov mov mov test je andl lea push push mov mov call mov pop pop pop mov pop ret jmp jmp mov and je andl mov jmp ret mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp pushl call pop ret lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov add jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov add jmp mov add jmp pushl call pop ret lea jmp lea jmp lea jmp lea jmp lea jmp pushl call pop ret mov and je andl lea jmp ret mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp pushl call pop ret lea jmp lea jmp mov jmp mov jmp pushl call pop ret mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp jmp mov jmp jmp jmp jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov and mov ret lea jmp mov jmp mov and mov ret lea jmp pushl call pop ret mov jmp mov add jmp mov jmp mov and mov ret lea jmp mov jmp mov jmp jmp mov jmp mov jmp mov and mov ret lea jmp pushl call pop ret mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp pushl call pop ret mov jmp mov jmp pushl call pop ret mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp jmp mov jmp mov jmp jmp jmp jmp mov jmp jmp mov jmp mov jmp mov jmp mov jmp mov and je andl mov jmp ret mov jmp mov jmp mov jmp lea jmp mov and je andl mov jmp ret mov jmp mov add jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov add jmp lea jmp lea jmp mov jmp mov add jmp mov add jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov and je andl mov jmp ret mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov and je andl mov jmp ret mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp mov and je andl mov jmp ret lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov jmp mov add jmp mov add jmp mov jmp jmp mov jmp jmp jmp jmp mov jmp lea jmp lea jmp lea jmp mov jmp jmp mov add jmp mov jmp mov jmp mov jmp jmp jmp jmp mov jmp mov jmp mov and je andl mov jmp ret mov jmp mov and je andl mov jmp ret mov jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp mov jmp mov and je andl mov jmp ret mov jmp lea jmp lea jmp mov and je andl mov jmp ret lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov and je andl mov jmp ret mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov and mov ret lea jmp mov jmp mov add jmp mov add jmp mov add jmp lea jmp lea jmp mov jmp mov add jmp mov add jmp mov add jmp lea jmp lea jmp mov jmp mov jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp lea jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp lea jmp mov jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov add jmp mov jmp mov jmp pushl call pop ret pushl call pop ret pushl call pop ret pushl call pop ret pushl call pop ret mov jmp mov jmp mov add jmp mov add jmp mov add jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp mov jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp mov jmp lea jmp mov jmp mov jmp mov jmp lea jmp mov jmp mov jmp pushl call pop ret mov jmp mov jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp lea jmp lea jmp mov jmp pushl call pop ret mov jmp mov jmp mov jmp mov jmp lea jmp pushl call pop ret lea jmp pushl call pop ret mov jmp lea jmp mov jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov add jmp mov jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov and je andl mov jmp ret mov jmp jmp jmp mov jmp mov jmp pushl call pop ret mov jmp mov jmp jmp mov jmp jmp mov jmp mov jmp mov add jmp mov add jmp lea jmp jmp mov jmp lea jmp mov add jmp mov add jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp mov jmp mov jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov and je andl mov jmp ret mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp lea jmp lea jmp mov jmp mov jmp mov jmp pushl call pop ret pushl call pop ret pushl call pop ret pushl call pop ret pushl call pop ret mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp pushl call pop ret mov jmp mov add jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp mov jmp pushl call pop ret mov jmp mov jmp lea jmp pushl call pop ret mov add jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov jmp mov jmp mov jmp jmp jmp mov jmp pushl call pop ret mov jmp mov jmp jmp mov jmp mov jmp mov add jmp mov jmp mov jmp pushl call pop ret pushl call pop ret mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp lea jmp lea jmp mov and je andl mov jmp ret mov jmp mov jmp lea jmp lea jmp lea jmp mov and je andl mov jmp ret lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov and je andl mov jmp ret mov jmp lea jmp lea jmp lea jmp mov jmp mov and je andl mov jmp ret lea jmp mov jmp jmp jmp mov jmp mov jmp jmp mov jmp mov jmp mov jmp mov jmp mov and je andl mov jmp ret mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov jmp mov add jmp lea jmp mov jmp mov jmp mov and je andl mov jmp ret mov jmp mov jmp mov jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov jmp pushl call pop ret mov jmp mov jmp mov add jmp mov jmp pushl call pop ret mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov jmp mov jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov call orl mov movl mov mov pop ret mov call orl mov movl mov mov pop ret mov call orl mov movl mov mov pop ret push call ret push call ret push call ret push call ret mov test je push call ret mov test je push call pop ret mov call push push mov test je mov andl cmpl je pushl call pop orl mov orl mov call push call pop mov pop mov mov pop ret mov test je push call pop ret push call ret mov test je push call pop ret mov jmp mov call orl mov push push call mov mov mov pop ret mov push mov mov call pop ret
 cmp jne xor jmp test jne or jmp test jne xor inc jmp push mov push jmp movzbl movzbl dec sub jne inc inc test ja xor pop pop ret jmp cmp jae mov inc inc inc inc movzwl test jne andw ret push lea push pushl mov push call push call push push push push call pop ret push mov sub push push call mov test jne push pop jmp pushl mov mov call mov test jne pushl lea pushl mov call mov test jne pushl lea mov call mov mov call pop mov pop leave ret push mov sub push lea push pushl xor call mov test mov je push call mov push pushl pushl pushl call test je push mov lea push lea push push push call test je cmpl jb mov movzwl movzwl push push lea push push call add lea push lea push lea push push call test je cmp je mov test je lea call pushl mov pushl push call mov andw pop mov call mov pop pop leave ret push mov sub push xor push push push push push push pushl call cmp mov jne xor jmp lea push push call cmp mov mov jae dec mov push push push push push lea push push pushl and sub mov call pushl mov mov call cmpl je push push pushl push pushl call pushl mov mov call test jne xor jmp lea push lea pop xor cmp lea jne cmpb jne mov add cmp mov jbe lea cmp jne cmpb je mov cmp ja jmp sub mov mov add cmp jbe cmpb jne cmpb jne cmpb jne lea call push mov push push push push push call andw jmp lea call push mov push push push xor push push call mov jmp cmp jne cmpw jne add cmp mov mov jbe jmp mov lea cmp jne cmpw je cmp mov ja jmp mov sub sar lea lea call mov cmp mov jae add sub cmp jae mov mov inc inc lea cmp jb andw pushl call mov pop pop pop leave ret push mov push push push push push pushl call test push mov pop jne mov call andw mov pushl call mov test mov jne mov call mov andw mov call push mov pop jmp add cmp je cmpw jne add movzwl test je add cmp jne jmp movzwl test je add cmp jne jmp add cmp je mov push call push mov call mov pushl lea call mov add lea lea mov call mov mov lea push call mov movw push add call movw push add mov call mov call mov call pop pop mov pop leave ret push mov sub push push xor push mov mov mov call mov lea push call call mov not xor call xor mov xor push xor lea push push call test jne call cmp jne push call pop movl jmp push push call pop pop movl jmp push call mov add cmpw jne cmpl jne movzwl lea movzwl xor test mov jbe mov mov push mov call test je addl inc cmp jb jmp imul mov test jne push push call pop pop movl jmp lea push push call test jne call push push jmp xor cmp lea je inc inc cmp jne push mov push push call add lea push push push push lea push call cmp je lea push push push call add movl jmp lea push call cmp mov jne call lea push push push call add movl jmp push push call cmp mov jne call lea push push push jmp lea push call add push lea push call mov cmp mov jne xor jmp cmp je inc inc cmp jne lea push push push call add push push call mov jmp push call pop movl cmpl je pushl call test jne call cmpw je lea push call cmp je and push lea push call push pop lea push call test jne call cmp jne push call dec jne mov call pushl call int3 push push call push call ret test je push push call push call ret push mov jmp mov inc mov dec inc test ja pop ret mov cmp je push call orl mov call xor mov mov mov mov ret push mov push mov push mov mov mov jmp push lea push push pushl pushl call test je mov test je add sub jne xor pop leave ret call jmp mov cmp sbb and add jmp cmpl push push mov mov jne push pop jmp test push jbe mov mov sub jne call mov mov sub je cmp jbe mov mov push call add add sub jne xor pop pop pop ret mov push mov mov mov add sub jne call mov mov sub jne inc pop ret mov mov mov mov add xor pop ret push pop jmp push mov test jne push pop pop ret push mov test je mov call mov call mov call andl add call pop xor pop ret push mov sub push mov push pop mov dec movb inc test ja test je test je lea push push push lea mov mov push push movl call add test jne cmpl jne mov sub neg sbb and jmp push jmp push pop pop leave ret push mov sub push push mov test mov mov je test je mov test push je pushl mov push push push call lea push push push pushl call mov test je call pushl call cmp je and push pushl call mov call xor push push push push push push pushl mov mov mov add mov call cmp mov jne call mov jmp mov mov cmp mov mov movl mov mov ja cmp jbe mov mov xor sub cmp jb ja cmp jbe mov sub sbbl mov lea push push push lea push pushl call add test jne cmp jne mov add mov sub mov je push lea push push pushl pushl call test je mov test je add sub jne mov andl mov mov cmpl jne mov xor cmp je push push push push call mov cmp je call test je cmp ja cmp jbe mov jmp call mov jmp movl jmp movl jmp movl jmp movl lea call jmp mov lea push push push pushl call lea call test mov jne pushl pushl call mov test pop je pushl push push push call mov test je call mov jmp push pop pop pop leave ret push mov sub push mov test push mov jne push pop jmp mov test push mov je push push push push call lea push push push pushl call mov test je call mov movl mov call andl mov mov mov mov mov test ja test jbe jmp mov test mov mov ja jb cmp jae mov sub mov lea push pushl lea pushl sbb push pushl call add test jne mov cmp jne mov test je push push push push call mov test je call test je test ja jb cmpl ja jmp movl jmp movl jmp movl mov call mov test je pushl push push push call mov test je call mov pop pop pop leave ret push mov test jne push pop pop ret call mov call xor pop ret push mov sub push push mov xor cmp mov jne push pop jmp push lea orl mov call push push push push push push pushl mov mov mov add mov call cmp mov jne call mov jmp cmp jbe push push pushl push call cmp jne push push pop mov call mov test jne cmpl jne cmpl jne lea push push pop mov call mov test jne mov xor cmp je mov and neg sbb and add jmp lea push push pop mov call mov test jne push pop call mov push lea push push mov call add test je mov jmp mov add mov shl lea call mov mov call mov movl xor jmp push pop mov call mov pop pop pop leave ret push push mov test mov jne push pop jmp mov cmp jne mov cmp je mov mov call test jne mov mov call test je jmp xor pop pop ret cmpl jge xor inc ret push mov mov cmp jb xor inc pop ret mov andl cmp push push jb xor mov mov div movzbl mov add dec jne mov andl cmp jb xor mov mov div movzbl mov add dec jne mov andl movzbl mov xor lea movzbl shl add add inc cmp jl cmpl pop pop jne movl xor pop ret push lea sub andl push push mov mov mov mov xor inc mov shl mov mov push dec mov mov shl mov mov mov dec mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov andl cmp mov je cmpl jne mov lea mov mov mov cmp jne mov add mov shl add je mov mov shr mov rep adc rep mov mov xor mov or mov mov mov mov mov mov mov mov mov mov mov xor mov cmp jne lea push lea push mov push call add test jne mov mov add test mov je mov mov movzbl shl or incl inc cmp mov jl andl mov cmpl je mov cmp jae mov sub cmp jb add mov mov mov mov mov inc incl mov cmp mov jne andl decl jne mov test jne mov mov mov jmp xor inc jmp mov mov lea mov mov and shl add cmp mov mov lea mov jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je movzbl mov shl or shl inc mov mov mov movzwl movzwl mov shr imul cmp mov mov jae and mov mov sub push sar add mov mov movzbl pop sub xor shr mov shl mov inc mov add imul cmpl lea mov jl mov sub cmp jb add mov movzbl mov shll mov mov and mov add cmp lea mov jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je mov mov movzbl shl or shl incl mov movzwl movzwl mov shr imul cmp jae mov mov sub sar add mov add cmpl mov mov jne jmp sub sub mov shr sub cmpl mov lea mov mov je cmp jl jmp mov lea mov add cmp mov jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je mov movzbl mov shl or shl inc mov mov mov movzwl movzwl mov shr imul cmp jae mov mov sub sar add mov mov add jmp sub mov sub mov shr sub mov mov inc mov cmp jl mov mov incl mov mov cmp mov jae incl mov incl cmp mov mov jne andl cmpl jge andl jmp cmpl jge subl jmp subl jmp sub sub mov shr sub cmp mov mov mov mov lea jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je movzbl mov shl or shl inc mov mov movzwl movzwl mov shr imul cmp jae mov mov sub sar add cmpl mov mov mov mov mov mov mov jge andl jmp movl mov add jmp sub sub mov shr sub cmp mov mov mov lea mov jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je mov movzbl mov shl or shl inc mov mov movzwl movzwl mov shr imul cmp jae mov sub sar add mov mov mov mov add shl add cmp lea mov mov jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je mov mov shl mov movzbl shl or inc mov mov movzwl movzwl mov shr imul cmp jae mov mov sub sar add xor cmp mov je cmpl mov setge lea mov mov sub cmp jb add mov mov mov incl cmp mov mov jne andl mov mov incl cmp mov jae incl jmp sub sub mov shr sub mov jmp sub mov shr sub sub cmp mov mov mov lea jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je movzbl mov shl or shl inc mov mov movzwl movzwl mov shr imul cmp jae mov mov sub sar add mov mov jmp sub sub mov shr sub cmp mov mov mov lea jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je movzbl mov shl or shl inc mov mov movzwl movzwl mov shr imul cmp jae mov mov sub sar add mov mov jmp sub sub mov shr sub mov mov mov mov mov mov mov mov mov mov xor cmpl setge dec and add mov add cmp jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je movzbl mov shl or shl inc mov mov movzwl movzwl mov shr imul cmp jae mov mov sub sar add mov shl andl mov lea jmp sub sub mov shr sub cmp mov jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je movzbl mov shl or shl inc mov mov movzwl movzwl mov shr imul cmp jae mov mov sub sar add mov mov shl lea movl movl jmp sub sub mov shr sub mov add movl movl mov mov movl mov add mov add cmp mov jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je movzbl mov shl or shl inc mov mov mov movzwl movzwl mov shr imul cmp jae mov mov sub sar add mov shll mov jmp sub sub mov shr sub mov mov mov inc mov decl jne mov mov xor inc shl sub add cmpl jge addl cmpl jge mov jmp push pop mov shl lea mov xor inc movl mov lea mov mov add cmp jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je movzbl mov shl or shl inc mov mov movzwl movzwl mov shr imul cmp jae mov mov sub sar add mov mov add jmp sub sub mov shr sub mov mov inc decl mov jne sub cmp jl xor inc mov mov sar and dec or cmp mov mov jge mov shll mov sub mov lea jmp sub cmp jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je movzbl mov shl or shl inc xor mov mov inc shll shr cmp jb sub or dec jne mov add shll movl mov mov mov mov mov add mov add cmp jae mov cmp jne lea push lea push mov push call add test jne mov test mov lea mov je movzbl mov shl or shl inc mov mov movzwl movzwl mov shr imul cmp jae mov mov sub sar add shll mov jmp sub sub mov shr sub mov inc mov mov or mov shll decl jne jmp mov incl je mov addl cmp ja mov mov sub cmp jbe mov add jmp mov mov jmp mov mov sub cmp jb add mov mov incl cmp mov mov jne andl mov mov decl mov inc cmpl mov je cmp jb mov cmp jb jmp orl cmp mov jae cmp jne lea push lea push mov push call add test jne mov test mov lea mov je mov movzbl shl or shl mov inc mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov xor pop pop pop add leave ret
 cmp jne ret jmp push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret int3 mov push mov sub mov push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne lea mov mov mov mov mov cmp je jmp lea lea mov lea mov mov mov test je mov call movb test jl jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je mov push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je mov push push mov call jmp mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret push call pop mov mov test jne inc ret andl xor ret mov push mov push xor push push cmp jne cmp jle decl mov push mov jmp xor jmp cmpl jne mov mov mov mov push mov jmp cmp je push call push push push call test jne jmp movl mov push pop test je push call jmp push push movl call pop pop test jne push push call pop mov xor pop cmp jne push push call cmp je push call pop test je pushl push pushl call incl jmp push call push push push call test jne mov cmp je push call pop jmp mov test je mov add jmp mov test je call sub cmp jae push call andl andl pop push push movl call xor inc pop pop pop pop ret push push call mov xor inc mov xor mov mov cmp jne cmp jne mov jmp cmp je cmp jne mov cmp je mov mov pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je mov movl pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmpl jne cmp jne movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov cmp je cmpl jne movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov mov cmp je cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov movl call mov call ret movl ret mov push mov cmpl jne call pop jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov push call push call push call push call leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test jbe mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret push push call andl mov push call pop test je mov sub push push call pop pop test je mov shr not and movl jmp mov mov mov xor cmp sete mov ret mov movl xor call ret mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret mov push mov pushl pushl pushl pushl push push call add pop ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp je test jne mov mov not mov pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea sub push push push mov mov push mov movl mov lea mov ret mov mov pop pop pop pop leave push ret mov ret push mov sub mov push push push mov add mov mov mov cmp je movl lea mov mov mov movzwl test je mov movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne mov mov mov cmp je mov cmp jae mov mov test je lea sub lea movzwl mov test jne mov lea test je cmpw je add cmpw jne xor lea mov mov mov test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne cmp je mov cmp jne xor pop pop pop mov pop ret mov jmp push mov sub push call mov cmpl jne xor inc jmp lea mov call lea push call lea mov mov call lea push call cmpl mov je test je call jmp xor pop mov pop ret push push push call mov mov mov andl andl call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov test je mov mov call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov xor movl inc jmp xor pop pop pop ret push mov sub push mov lea call call lea push call mov mov call pop mov pop ret push mov and sub push push mov mov push test je movzwl mov xor cmp jne mov add mov mov mov xor add cmp jne cmp je mov mov add mov add mov add mov xor mov cmp jbe mov mov mov add movl mov mov mov mov test mov je mov mov mov test jle movzbl mov imul and shl add imul mov xor mov inc dec mov mov mov test jne mov mov mov mov cmp mov je inc add mov cmp jb xor pop pop pop mov pop ret mov mov movzwl mov add cmp jb mov add cmp jae mov xor mov test je xor cmp jne mov inc inc mov test jne test jle mov mov mov mov test jle movzbl lea cmp ja add movzwl mov imul and shl add imul xor inc dec mov cmpb jne mov call mov mov test jne mov mov mov call mov lea push push lea push call test jne lea push lea push push push call neg sbb not and lea push call mov test je inc add mov test je mov mov test jle movzbl mov imul and shl add imul xor inc mov dec mov test jne mov mov mov mov call jmp mov jmp int3 push mov and cmpl jne call push push push push push push call add xor inc mov pop ret push push call xor mov decl jne mov movl mov movl push pushl call test jne call push push push push push push call add jmp xor inc ret mov push xor push push push push call add orl call ret push push call xor mov mov movl movl mov mov mov push push push push push call add push push call mov test jne call push push push push push push call add jmp push push mov call test jne call push push push push push jmp mov xor inc mov mov movl push call push pushl call test jne call push push push push push push call add push push push call push call mov mov test je push push push push push call add push call test je push call jmp xor inc ret mov push xor push push push push call add orl call ret push push call xor mov movl mov mov mov mov mov movl movl movl mov call mov mov call test je mov push push mov push push push call add jmp call mov mov call mov mov push push push test je push push call add push push push call push call mov test jne push push push push jmp push push call cmp jne push push push push push call add mov push call mov mov lea push call jmp push push call add push push push push push call add mov test je push call jmp xor inc ret mov push xor push push push push call add orl xor call ret push mov push push xor push mov mov test je cmp je cmp jne imul imul not not jmp imul imul jmp imul imul mov and cmp jae lea jmp push pop sub mov movzwl and mov cmp jae lea jmp push pop sub movzwl mov add shr shr cmp jl push xor mov pop push mov pop push mov pop pop pop mov mov mov mov xor pop pop ret push mov push andl push mov cmpl je push lea push pushl push pushl call test jne pushl call orl pop mov pop ret push mov push push mov mov push mov mov push lea call push mov mov call pop pop pop pop pop pop ret push push pop push mov pop push pop push mov pop push pop mov xor mov mov mov mov mov mov mov pop ret push mov sub push mov lea call mov push call lea mov lea call pop test je push push xor lea push push call mov call test jne cmp je cmp jne xor inc mov pop pop mov pop ret push mov push movzbl cmpl je call mov cmp jae andl jmp sub cmp jb mov call test je andl xor inc jmp call mov xor pop pop ret push mov sub push push lea movl push lea mov push mov call test je mov mov push lea test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne movzbl lea sub push push mov call xor add cmp setne mov pop pop pop mov pop ret push mov sub push push mov or lea call push call lea mov lea call test jne or jmp xor push mov push lea push call test jne call cmp jne push call jmp push push push push push push lea push call mov cmp jne inc cmp jb mov pop pop pop mov pop ret push push call xor mov or mov mov mov mov xor mov xor cmpb jbe mov jmp call test je mov call test je mov call mov cmp je lea mov movb push lea lea call movl push lea lea call movb push lea lea call add call mov push lea lea call pop call mov push lea lea call mov xor mov push lea lea call andl push lea lea call mov xor mov push lea lea call mov mov push lea lea call add mov mov xor mov mov mov test jne test je mov and mov je shrd shr inc jmp mov push lea lea call pop mov mov test jne test je mov and mov je mov push lea lea call pop mov dec cmp ja jmp add mov pushl call add push mov jmp add mov mov lea jmp add mov pushl call jmp add mov mov mov mov push lea jmp add mov mov lea push mov lea call pop shrd shr jmp cmpl je pushl call pushl call andl jmp xor inc ret mov orl call ret mov cltd xor add mov xor add in add mov add mov add test jne xor mov ret mov push push mov xor xor mov cmp je sub cmp je add mov xor mov cmp jne pop pop ret push mov push push push mov xor push mov cmp jne mov jmp movzwl push test je mov movl sub mov test je movzwl test je movzwl lea cmp ja lea movzwl jmp mov movzwl mov lea cmp ja lea movzwl jmp mov mov movzwl movzwl sub jne add xor cmp jne jmp xor cmp je add add movzwl test jne xor pop pop pop mov pop ret mov jmp push mov sub push push xor mov inc push push call test je push xor push push push push call test je push lea mov push push push call mov mov test je lea push lea push lea push pushl call test je push pushl push push call movl mov mov mov pop pop pop mov pop ret cmpl je call test jne ret andl mov ret jmp jmp jmp jmp jmp jmp jmp jmp
 cmp jne ret jmp push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret int3 mov push mov sub mov push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne lea mov mov mov mov mov cmp je jmp lea lea mov lea mov mov mov test je mov call movb test jl jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je mov push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je mov push push mov call jmp mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret push call pop mov mov test jne inc ret andl xor ret mov push mov push xor push push cmp jne cmp jle decl mov push mov jmp xor jmp cmpl jne mov mov mov mov push mov jmp cmp je push call push push push call test jne jmp movl mov push pop test je push call jmp push push movl call pop pop test jne push push call pop mov xor pop cmp jne push push call cmp je push call pop test je pushl push pushl call incl jmp push call push push push call test jne mov cmp je push call pop jmp mov test je mov add jmp mov test je call sub cmp jae push call andl andl pop push push movl call xor inc pop pop pop pop ret push push call mov xor inc mov xor mov mov cmp jne cmp jne mov jmp cmp je cmp jne mov cmp je mov mov pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je mov movl pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmpl jne cmp jne movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov cmp je cmpl jne movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov mov cmp je cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov movl call mov call ret movl ret mov push mov cmpl jne call pop jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov push call push call push call push call leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test jbe mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret push push call andl mov push call pop test je mov sub push push call pop pop test je mov shr not and movl jmp mov mov mov xor cmp sete mov ret mov movl xor call ret mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret mov push mov pushl pushl pushl pushl push push call add pop ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp je test jne mov mov not mov pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea sub push push push mov mov push mov movl mov lea mov ret mov mov pop pop pop pop leave push ret mov ret push mov sub mov push push push mov add mov mov mov cmp je movl lea mov mov mov movzwl test je mov movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne mov mov mov cmp je mov cmp jae mov mov test je lea sub lea movzwl mov test jne mov lea test je cmpw je add cmpw jne xor lea mov mov mov test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne cmp je mov cmp jne xor pop pop pop mov pop ret mov jmp push mov sub push call mov cmpl jne xor inc jmp lea mov call lea push call lea mov mov call lea push call cmpl mov je test je call jmp xor pop mov pop ret push push push call mov mov mov andl andl call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov test je mov mov call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov xor movl inc jmp xor pop pop pop ret push mov sub push mov lea call call lea push call mov mov call pop mov pop ret push mov and sub push push mov mov push test je movzwl mov xor cmp jne mov add mov mov mov xor add cmp jne cmp je mov mov add mov add mov add mov xor mov cmp jbe mov mov mov add movl mov mov mov mov test mov je mov mov mov test jle movzbl mov imul and shl add imul mov xor mov inc dec mov mov mov test jne mov mov mov mov cmp mov je inc add mov cmp jb xor pop pop pop mov pop ret mov mov movzwl mov add cmp jb mov add cmp jae mov xor mov test je xor cmp jne mov inc inc mov test jne test jle mov mov mov mov test jle movzbl lea cmp ja add movzwl mov imul and shl add imul xor inc dec mov cmpb jne mov call mov mov test jne mov mov mov call mov lea push push lea push call test jne lea push lea push push push call neg sbb not and lea push call mov test je inc add mov test je mov mov test jle movzbl mov imul and shl add imul xor inc mov dec mov test jne mov mov mov mov call jmp mov jmp int3 push mov and cmpl jne call push push push push push push call add xor inc mov pop ret push push call xor mov decl jne mov movl mov movl push pushl call test jne call push push push push push push call add jmp xor inc ret mov push xor push push push push call add orl call ret push push call xor mov mov movl movl mov mov mov push push push push push call add push push call mov test jne call push push push push push push call add jmp push push mov call test jne call push push push push push jmp mov xor inc mov mov movl push call push pushl call test jne call push push push push push push call add push push push call push call mov mov test je push push push push push call add push call test je push call jmp xor inc ret mov push xor push push push push call add orl call ret push push call xor mov movl mov mov mov mov mov movl movl movl mov call mov mov call test je mov push push mov push push push call add jmp call mov mov call mov mov push push push test je push push call add push push push call push call mov test jne push push push push jmp push push call cmp jne push push push push push call add mov push call mov mov lea push call jmp push push call add push push push push push call add mov test je push call jmp xor inc ret mov push xor push push push push call add orl xor call ret push mov push push xor push mov mov test je cmp je cmp jne imul imul not not jmp imul imul jmp imul imul mov and cmp jae lea jmp push pop sub mov movzwl and mov cmp jae lea jmp push pop sub movzwl mov add shr shr cmp jl push xor mov pop push mov pop push mov pop pop pop mov mov mov mov xor pop pop ret push mov push andl push mov cmpl je push lea push pushl push pushl call test jne pushl call orl pop mov pop ret push mov push push mov mov push mov mov push lea call push mov mov call pop pop pop pop pop pop ret push push pop push mov pop push pop push mov pop push pop mov xor mov mov mov mov mov mov mov pop ret push mov sub push mov lea call mov push call lea mov lea call pop test je push push xor lea push push call mov call test jne cmp je cmp jne xor inc mov pop pop mov pop ret push mov push movzbl cmpl je call mov cmp jae andl jmp sub cmp jb mov call test je andl xor inc jmp call mov xor pop pop ret push mov sub push push lea movl push lea mov push mov call test je mov mov push lea test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne movzbl lea sub push push mov call xor add cmp setne mov pop pop pop mov pop ret push mov sub push push mov or lea call push call lea mov lea call test jne or jmp xor push mov push lea push call test jne call cmp jne push call jmp push push push push push push lea push call mov cmp jne inc cmp jb mov pop pop pop mov pop ret push push call xor mov or mov mov mov mov xor mov xor cmpb jbe mov jmp call test je mov call test je mov call mov cmp je lea mov movb push lea lea call movl push lea lea call movb push lea lea call add call mov push lea lea call pop call mov push lea lea call mov xor mov push lea lea call andl push lea lea call mov xor mov push lea lea call mov mov push lea lea call add mov mov xor mov mov mov test jne test je mov and mov je shrd shr inc jmp mov push lea lea call pop mov mov test jne test je mov and mov je mov push lea lea call pop mov dec cmp ja jmp add mov pushl call add push mov jmp add mov mov lea jmp add mov pushl call jmp add mov mov mov mov push lea jmp add mov mov lea push mov lea call pop shrd shr jmp cmpl je pushl call pushl call andl jmp xor inc ret mov orl call ret mov cltd xor add mov xor add in add mov add mov add test jne xor mov ret mov push push mov xor xor mov cmp je sub cmp je add mov xor mov cmp jne pop pop ret push mov push push push mov xor push mov cmp jne mov jmp movzwl push test je mov movl sub mov test je movzwl test je movzwl lea cmp ja lea movzwl jmp mov movzwl mov lea cmp ja lea movzwl jmp mov mov movzwl movzwl sub jne add xor cmp jne jmp xor cmp je add add movzwl test jne xor pop pop pop mov pop ret mov jmp push mov sub push push xor mov inc push push call test je push xor push push push push call test je push lea mov push push push call mov mov test je lea push lea push lea push pushl call test je push pushl push push call movl mov mov mov pop pop pop mov pop ret cmpl je call test jne ret andl mov ret jmp jmp jmp jmp jmp jmp jmp jmp
 int3 int3 int3 int3 int3 int3 data16 cmp jne rol test jne retq ror jmpq sub mov callq mov mov test jne mov jmp andq xor add retq mov mov push push push push push sub xor mov mov cmp jne mov cmp jle lea sub mov jmp mov callq xor lock jne mov cmp je mov callq jmpq mov cmp je mov add jmp mov cmp je callq sub cmp jae mov callq mov mov mov xchg jmpq xor jmpq mov cmp jne mov mov mov jmp cmp je mov callq xor lock jne jmp mov mov cmp je mov callq jmp lea lea mov mov cmp jae cmp jne mov cmp je callq add cmp jb cmp jne lea lea callq movl cmp jne mov xchg cmp je lea callq cmp je mov mov mov callq add mov mov mov add pop pop pop pop pop retq int3 int3 mov mov mov push push push sub mov mov mov mov mov test jne cmp jne xor mov jmpq cmp je cmp jne mov test je movl mov callq mov mov jmp xor mov mov mov test je mov mov mov callq mov mov jmp xor mov mov mov test je mov mov mov callq mov mov jmp xor mov mov mov cmp jne test jne xor xor mov callq jmp mov mov mov xor xor mov callq jmp mov mov mov mov test je xor xor mov callq jmp mov mov mov test je cmp jne mov mov mov callq mov mov jmp xor mov mov mov mov test je cmpl je mov mov mov callq mov mov jmp xor mov movl mov add pop pop pop retq int3 int3 int3 mov mov push sub mov mov mov cmp jne callq mov mov mov mov mov add pop jmpq int3 int3 int3 mov sub lea callq mov mov xor lea mov callq mov cmpq je movq lea mov lea mov lea mov mov mov mov xor callq jmp mov mov lea add mov mov mov mov mov movl movl mov mov mov mov xor callq lea callq callq mov mov callq add retq int3 int3 int3 int3 int3 int3 int3 mov mov cmp je xor retq movslq add xor cmpl jne mov cmp sete repz int3 movslq xor mov add movzwl movzwl lea test je mov cmp jb mov add cmp jb inc add cmp jb xor retq mov retq int3 int3 sub mov lea mov callq test je sub mov mov callq test je mov shr not and jmp xor add retq int3 int3 int3 mov push sub mov andq movabs cmp je not mov jmp lea callq mov callq mov xor callq mov xor callq lea mov xor callq mov xor movabs and movabs cmp cmove mov not mov mov add pop retq int3 sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg lea retq mov mov push sub mov mov mov mov add mov cmp je xor lea mov mov mov movzwl jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne cmp je mov cmp jae movzwl mov test je lea sub lea movzwl mov test jne movzwl lea test je cmpw je add cmp jne mov movzwl lea mov jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne cmp je mov cmp jne xor lea mov mov mov pop retq mov jmp int3 int3 int3 mov mov mov push sub callq mov cmpl jne mov jmpq mov mov xor xor lea mov cmp je mov cmp je mov add xor mov test jne lea callq mov mov xor mov cmp je mov cmp je mov add xor mov test jne lea callq mov cmp je test je callq jmp xor lea mov mov mov mov pop retq mov mov push sub callq mov mov andq andq mov callq lea mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov test je mov mov callq lea mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq lea mov mov callq lea mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq movl mov mov jmp xor mov mov add pop retq int3 rex sub xor mov lea test jne mov jmp mov mov xor mov cmp je lea lea sub sub lea cmp je add mov xor mov test jne callq lea callq mov mov callq add pop retq int3 int3 mov push push push push mov sub mov xor test je movzwl mov xor cmp jne movslq add mov mov mov xor add cmp jne cmp je mov mov mov add add add mov mov cmp jbe mov mov mov mov mov add mov mov cmpb mov je mov test jle movzbl inc mov mov and shl imul add imul xor mov dec mov mov test jne mov cmp je inc add mov cmp jb xor add pop pop pop pop retq mov movzwl mov mov add cmp jb mov add cmp jae mov xor mov mov test je cmp jne mov sub inc mov test jne test jle mov mov mov test jle movzbl lea cmp ja add movzwl inc dec mov and shl add imul imul xor cmp jne mov callq mov mov test jne mov mov mov callq lea lea mov mov callq test jne mov lea lea xor xor callq mov xor test mov cmovne mov lea callq mov test je movslq lea add mov test je mov test jle movzbl inc dec mov and shl add imul imul mov mov xor test jne mov mov callq jmpq mov jmpq int3 int3 sub cmp jne callq mov mov mov mov mov callq mov add retq sub dec jne and movl and movl lea mov callq test jne callq mov mov xor mov mov callq jmp mov xor mov mov callq nop add retq int3 int3 mov push sub xor movl movl and and mov mov mov lea mov callq lea lea callq mov test jne callq mov mov mov xor mov callq jmpq lea mov callq test jne callq mov jmp andl movl andl movl mov callq lea mov callq test jne callq mov mov mov xor mov callq cmpl je callq test jne xor jmp andl lea lea xor lea callq mov mov test je mov mov mov mov callq mov callq test je mov callq jmp mov xor mov mov callq nop mov add pop retq int3 int3 mov mov mov push sub andq lea mov andq andq xor movl lea mov lea mov callq mov lea callq test je mov mov mov mov mov callq jmpq callq mov lea callq mov mov mov mov test je mov callq cmpl je callq test jne xor jmp andl lea lea xor lea callq mov test jne mov mov mov xor callq xor jmpq mov mov callq cmp jne mov mov mov xor callq mov callq xor lea callq jmp mov callq mov mov mov mov callq test je mov callq xor jmp mov xor mov mov callq xor mov mov add pop retq int3 mov mov xor mov mov mov mov mov test je cmp je cmp jne imul imul not not jmp imul imul jmp imul imul mov and cmp jae add jmp mov sub movzwl mov mov and cmp jae add jmp mov sub movzwl add mov shr shr add cmp jl mov mov mov mov mov movl mov mov mov mov xor retq int3 int3 rex sub andl cmpq mov je mov andq lea callq test jne mov callq orq add pop retq int3 mov mov mov push sub mov mov lea mov mov mov callq mov mov mov mov mov add pop jmpq mov mov push lea sub mov mov lea xor movl movl movl movl mov mov callq lea movslq lea mov callq test je lea xor callq mov callq test jne cmp je cmp jne mov mov lea mov mov mov pop retq mov mov push sub movzbl lea cmpl mov je callq cmp jae andl jmp sub cmp jb mov callq test je andl mov jmp callq mov xor mov mov add pop retq int3 int3 mov mov mov push sub mov mov lea lea movl callq xor test je movzwl lea mov jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne movzbl lea sub mov mov mov mov callq cmp setne mov mov mov add pop retq int3 mov mov mov mov push lea sub mov or xor lea movl movl mov lea movl movl mov callq movslq lea lea mov callq test jne or jmp mov lea mov callq test jne callq cmp jne mov callq jmp mov lea xor xor mov mov movl callq mov cmp jne inc cmp jb mov lea mov mov mov mov pop retq mov push push push push push push sub mov mov mov orq andl andq xor cmp ja callq test je mov callq test je mov callq mov cmp je lea movb mov mov lea lea callq mov lea mov lea lea callq mov mov lea lea callq callq mov mov lea lea callq callq mov mov lea lea callq mov xor mov mov lea lea callq andl mov lea lea callq xor mov mov lea lea callq mov mov lea lea callq mov xor mov mov test je mov and je shr add jmp mov mov lea lea callq mov mov test je mov and je mov mov lea lea callq cmp je cmp je cmp je cmp je cmp je cmp je lea cmp jbe jmpq add mov mov mov mov lea jmp add mov mov mov mov lea jmp add mov mov mov callq mov jmp add mov mov mov mov lea jmp add mov mov mov callq lea mov lea callq shr jmpq mov cmp je mov callq mov callq andq jmp add pop pop pop pop pop pop retq int3 cmpw mov mov jne mov retq movzwl test je mov sub mov test je movzwl test je movzwl lea cmp ja add lea cmp ja add movzwl movzwl sub jne add cmp jne cmpw je add add movzwl test jne xor retq mov retq int3 mov mov push push sub lea mov mov mov callq test jne xor jmpq xor xor mov mov callq test je andq lea lea xor mov callq andl andl test je mov lea lea lea callq test je mov xor mov mov callq andl movl mov mov add pop pop retq int3 jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 rex sub mov movl add pop retq rex sub mov mov xor cmpl sete mov mov add pop retq
 push push mov push push mov mov xor pop stos inc dec je dec jne pop pop pop ret pop sub push jmp adc (bad) xor inc mov fcos pop pop jle decl les push and cmp ljmp jge movl inc idiv inc mov out adc sub xchg sbbl fcoml rcr adc (bad) mul out jl scas pop std mov test inc dec adc dec fs int3 js scas outsb iret push lds stos out sub aad in (bad) mov push mov xor sub pmaxub cmpsl jmp in cmpsl inc adc pop stos pusha push les aas repnz repz std jge mov popf bound and stc stos ret inc (bad) in mov cli adc cmp sub and test (bad) outsl cmp ljmp mov sbb pop les adc inc mov (bad) sub cmp les adcb and mov into in popf icebp push add fnsave scas mov imul and test fisttps mov or out dec shrb add adc jecxz test js sbb test dec loopne insl jg mov inc xor push loop,pt lods test es mov xor jecxz shrb add jg sbb inc mov in pop iret mov push enter pop jle and dec in or ret gs insl arpl inc mov inc pop inc push stos xchg inc push or push ljmp xor scas push flds fcoms dec and aas or paddusb and je stos lds fdivrs jo popf imul sbb jno jg pop stos add imul push or xor shlb (bad) repnz gs stc push fstpl lods sub and mov cs call in outsl mov push fnstcw aad insb movsl mov mov and insl std mov loope jnp ds sbbl je jns and lret add cmp cld add fsubl xchg inc dec shl push shrl lcall add aas cmpsl clc push sarl dec (bad) mov scas andl rcll xchg sbb ja lret jne je pusha fstl xchg lret inc ds dec daa sbb push inc testl (bad) sbb leave cmpsb mov push and imul daa loop fstpl inc inc pop mov and add int3 sbb lods test out arpl mov subps jg in xor stos pop fisttpl je movsb jnp mov sti push and scas fwait adc cli repnz and test in mov pop je into pop jmp fisttpll adc adc fisttpl or jge hlt xchg movsb aam in adc icebp jno,pt js jl test sub jp cld faddl jno xchg lods aam rorl out (bad) outsl mov cs in inc jl insl cs repz cmpsb mov push mov push mov inc dec loop pop pop mov mov inc call push call ret (bad) sbb leave cmpsb cwtl mov faddl mov and lret lds pop insb rcl lret fmull out popa jg push push jl lcall (bad) xchg pushf and fsubrl out outsb cmc jne push jb inc (bad) sti lea dec cwtl dec push std cli mov fdivr int mov cwtl inc imul push inc int inc rorb retw cmp test add mov rcll or mov daa xchg out imul and mov jecxz push imul add jns jg sti sbb pop leave push push dec (bad) push mov fistl cld test out and mov stos sahf sbb add repz (bad) pop push mov push jg insl cmc dec rcrb fstpt add dec sub and and pop jmp mov xchg inc adc andb insl mov data16 mull mov outsl aaa mov mov mov js (bad) and outsl or and push push cs push (bad) ds mov jmp into icebp push xor rolb mov push or adc xlat fdivrp mov mov mulb imul mov jle inc dec mov push and adc ret xchg push and and (bad) cmc jb or mov and add mov stc fstpl movsl ja sub mov pop int3 and shl adc mov and insl movl cli jnp xor dec js push cwtl lret or jo lods jge push dec jnp push into scas add bound push add pop and mov dec (bad) xchg and insb stos or mov (bad) mov inc dec ret fld (bad) loope xorb fnstsw add aad icebp xchg (bad) imul stos or leave sub imul movsl jl ja mov mov cwtl push mov dec (bad) push repnz scas add stos add aad fabs (bad) cmpsl dec mov cmpsb mov in sbb lret dec fcoml stos dec jae sub sub cmp dec dec clc and mov js test decl sbb cli jle push sub cmp dec ret fld (bad) rclb and (bad) loop test repz fs pop cmpsl rorl and add jle pop and clc jo scas xchg sub sub insb dec push (bad) (bad) adc in lds cmc xchg cmpsb test and push arpl xchg add add fistl mov add stos xchg das and stos je sub hlt mov dec pshufw out xor dec lea or das mov and into or push ds fldl push scas and (bad) or sti cmp xchg or (bad) int std jge int mov nop and mov daa sub std push cmp dec dec pop test mov sti inc out jb push stos insb and mov pusha push pop cmpsl in jmp sub inc jmp cmp sub int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int mov mov add fnsave mov int sbbl sbb addl leave sub addl int clc cmp dec out mov int xorl jne jns add mov sub xor xchg int orl mov sub and enter sub and or imul andl add cmp int add shr lods adc add (bad) in test cld cwtl addl clc sbb mov les and add or add gs or movsl sub inc aad (bad) daa xchg adc or mov mov int addl mov outsb mov add int add sub and push lret popa andl fst nop add and sub adc addl inc adc push shl test or sub popa sbbb int or pushf pop mov lret pusha int addl jge rcrb and add add fldcw lcall mov cmpl adc das hlt int or add or sbb add andl cmp and mov push popa mov and sbb mov xchg addl insb and addl andl push adc mov out lock jns stos mov andl xchg rolb stc repnz into orb int addl call shll addl mov or int mov (bad) adc xchg inc mov andl (bad) dec mov (bad) mov int add in lods inc insl addl mov xchg loop mov pop mov andl pop or loop andl int add negb outsl pop insb ja movsl movsb out orb add addl push jecxz mov outsb or mov call xchg movsb add int mov mov pusha cmp addl fnstsw test push out orb mov add jbe mov mov lea andl add dec add std movsb sub orb mov addl daa cmp subb or addl mov jmp or int mov jge mov int sbbl addb int add test xchg mov or and int push dec xor add aas jne in or sar int fs add rolb mov mov ljmp int andl loop addl andl sti mov mov sub int add es add sbb add and ret addl xor push into cmpl fimuls inc movsl inc mov mov jle fdivs xor mov addl or addl test mov cmp add mov add pop and mov mov (bad) in mov and mov jo andl test lahf bound repz rolb addl and int mull fs in int addl fiadds int3 in add andl mov arpl pusha aas push addl mov or in or add stc or xchg fstpl in jmp add or loopne and mov shll movsl stos out aam jge mov addl jnp addl inc xor add mov sub je loope int andl dec stos sahf inc mov andl repz jp rorb sahf sbb mov and dec jo or add int sahf popa stos test or xor gs addl hlt xor aaa sub mov int addl mov add int mov mov addl addl or and int int outsb mov jl add addl (bad) fistpl jp or mov cld pop add int mov pcmpeqd adcb mov addl repz inc out mov mov add sarb andl add stos push jmp xorl and pop sub add inc dec popa or int mov dec mov int subl mov addl fsts or and int jbe in lcall mov mov inc fs rolb orl mov adc add add or in push ljmp andl xorl addl andl or mov add mov jbe shll add ja decl andl mov add test iret or iret addl xchg outsl bound addl negb int or jp xchg test addl cwtl int addl push xchg out mov cmp add int add pop and xorl adc or mov addl call or (bad) cmp (bad) fwait ljmp or mov adc int adc mov lods push and int and lea (bad) and add loope (bad) fcomi addl mov sbb or in repz popl das and int mov lret dec adc int add andl addl and mov aas xor and shrl int xorl fwait push lcall andl pop int3 roll or pop (bad) mov pop dec add outsl mov mov andl adc (bad) int3 push and and lock xor addl and gs test mov int mov mov mov fwait dec addl addl dec mov int add cwtl in pusha mov addl mov ret fnstcw mov jge iret ja jg test movsl fisttps andl int add inc adcl cltd imul mov loop xchg icebp (bad) mov or mov addr16 je rolb int mov cmpsb add sub mov addl aam cmpb sarl sti mov mov andl sub andl add add xorl mov or addl mov mov testb addl xchg xchg and sbb or lea inc cwtl push push adc mov outsl mov sbb ja add add inc sub mov mov add inc mov aad addl add mov mov andl xorl dec std loope jge int addl andl add add mov pop adc addl mov sbb add je dec mov mov andl addl add mov xchg inc inc mov mov pop push mov addl add xor dec pop adcl mov jno stos mov xchg add mov add sub (bad) fldl mov mov dec sahf jecxz adc add sbb ljmp andl mov incl int orl mov int lea mov xlat xor andl push jnp or or or out fsubp and jg or add ret repnz mov aad dec arpl sahf (bad) and mov in sahf mov xor andl or icebp repz xorl or add mov shlb cmpl int andl stos mov andl aad inc inc cmp das mov int addl addl xlat cmp sub int mov dec into jge movsl in sbb addr16 andl cli inc jbe mov mov int add frstor mov int inc sbbl mov andl outsb mov push push test sub int int jbe xchg add mov add sub or mov outsb adc orb lods add int mov enter xor addl fwait (bad) sbb int3 int sub mov mov add les jno std and int add cmp jl dec xchg xchg xorl sti insb leave xchg call mov fstp push out inc shl inc dec add push or int mov test adc int addl mov addl (bad) pop mov addl int lods call push inc mov mov andl fisubl add sub cmc jno das fisubrs mov xchg xlat push xorl andl (bad) sbb int mov jmp cwtl mov mov xorl lea sbb and add jns clc xchg jp,pn add and jle inc les addl sbbb out addl add xor and addl pop sahf stos cmpsl cltd iret jae jl mov int add rclb sbb nop mov addl push mov aad lahf jp nop add mov add adc int mov mov xchg addl jb push int mov add mov aaa jge add adcl addl dec (bad) andl cwtl sbb push incl add add add xor xchg addl sbb adc add add cltd sti fistpll insl bnd xchg andl or data16 enter add int subl add out mov addl xor xorl xor addl int out fisubrl mov lods cmpsb dec aam int andl xorl mov andl scas mov adc mov and lea addl and sub sub or subl andl fdivrs mov int add mov add int (bad) fadds gs sahf jge int addl fcomps and andl int and out faddl mov jle mov and mov sbb or mov dec mov mov int3 cmpsl add int mov sbb outsb fs addl mov xorl fdivl pop subl mov std scas pop fbld andl add xorl sbb mov int mov inc out sbbl mov mov int3 ds addl dec mov and mov addl jnp loopne int add inc lret mov sub mov mov andl (bad) ffree add addl outsb popf subl int cmpl fisttpll mov andl add mov inc sub mov addl outsb cld into adc sahf fisttpll addl mov mov mov ror or int addl add mov xchg in push add int addl mov int add int add out imul lock addl shlb xchg call int add mov add dec sub push andl outsl push jne outsl movsl mov stos push add and add or adc add orl int or arpl bnd mov mov sub mov out jns cmpsb addl jge jmp mov fwait arpl int addl std or add push push icebp cwtl xorl add andl movsb test and mov stos xchg or jle mov addl sbb xorl xchg xchg lds int int mov inc scas testb or iret jne sub add int add xor addl fs addl and cmpsl ret mov dec loope lea mov add mov fwait popf jg and addl fdivp cli cmp mov int orl mov int andl mov andl or lock (bad) sbb andl int iret fstpl sub cmp add addl test inc or mov das push rcll add and andl and mov inc frstor addl sbb movsb xor ror xchg arpl add dec fiadds cs (bad) jae and int lds jecxz mov addl pop int fisttps inc or stos pop ds addl int mov mov pop frstor add int xorl sahf addl loope adc int add in mov jbe loopne xor mov andl rorl add mov mov addl add adc cmp cld mov andl bound cmpsb addl andl or mov movsb and stos fcoml int add rorb loopne cmp andl mov xor int add iret popf addl inc out xchg mov mov icebp cmpsl add int3 push sbb int add mov or mov int addl cmp pop into orl and add pop and leave mov add xorl shlb or adc mov add out mov addl addl int or xorl movsb outsb test movsl iret int3 cmpsb jl int int addl stc stc mov andl jl addl mov sahf clc mov cwtl mov add add hlt add andl in cltd pop mov and mov cmp loop mov mov andl sub int xorl and add mov outsb stos or add adcl lret mov mov pusha fdiv (bad) fstp std and and dec mov add add addl cmp shll mov int mov push jbe gs int andl fwait mov movsb out mov int add adc adc andl mov andl (bad) bound pop roll mov adc leave sbb lahf stos subl add addl and andl jg lock into icebp int add int mov push in jns mov push xlat (bad) sbb addl andl enter int mov andl sahf fisttpll and int nop clc call mov lret xorl mov and mov outsb jge or pop cmp cmp int mov mov ror mov int subl je addl fcmove dec jne or and int xchg call xor mov xchg andl mov mov loop adc or add addl je addl add xor jbe (bad) andl orl fisttpl sahf addl andl jmp add cmpl rcll addl mov sahf popf adc add and andl cld out insb addl in push mov and mov stos sub jecxz (bad) rolb int addl sbbb lods cmovns addl sbb and add add xlat mov xchg push shll out or add xorl xor add pop inc or addl les int addl and int fcmovnb jb xchg cld (bad) int addl jnp and add add inc repnz dec mov fs adcb andl cmp int addl xor cmp andl xor leave and mov and mov or int and pop lahf enter (bad) mov scas int xorl inc mov and or rclb jbe xor push faddl mov mov stos shlb int sub jl push mov pop jbe and and jp jge or dec addb andl test lret loope out xchg sub int mov xchg xchg addl addr16 sahf in dec mov int add imul int andl fnsave fwait cli jg (bad) int addl call andl int inc paddsw mov add scas xor and sti popf xorl sub cmp add int mov pusha add es cmp les add addl add cld adc iret pusha xorl int int3 mov pushf and int cld jbe test add jp clc mov xorl mov ja jae jb loop or addl jbe cmp or int mov sbbb in int addl fbstp add addl js mov int add (bad) sbb or jo add add xlat adc add addl fldz addl add ret adc inc jmp andl mov add mov cmp cli or mov in jne mov mov int add or lcall andl mov sub xlat int3 jb mov hlt xlat test adc shll jl adc push push inc divl mov stos mov fdivl ret ss mov and xor loop mov mov mov ss pop lock into fdivrl rcrb fmull mov pop xor pop mov push sbb int loop (bad) sahf push add lods sbb and inc lods pop (bad) jns and sahf popa iret jo imul nop jge imul push call mov loope push inc lea fcom jno test sbb jno rcrl mov adc jno aaa lock mov (bad) rolb xchg jbe mov fsubrp add repz dec dec test xchg movsl or sahf xchg (bad) sarl push jge push mov pop mov je cmpsl or ret xchg insl sahf (bad) xchg mov into insl fs (bad) push test xlat pop addr16 jno xchg insb (bad) push xor aam add xchg push mov pop test xchg or mov jbe pop or fs movsl cwtl das popf sbb cmp pop mov push jge call xor push push movsl loopne pusha jnp (bad) sub mov and sbb lods jg ror mov xor adcb imul sbb jl in sub popf xor stos aad lea add adc sbbl mov cmp (bad) hlt shll fstpt loopne sub stos jns subb adc xchg (bad) (bad) mov inc iret dec ret loop imul stos addb jle incl jne pop fisttps sub stos cld lods dec cmc sti ljmp scas int3 inc icebp bnd add xor cmp or mov dec cli adcb sub cmp movsb mov add fcoml mov inc mov inc sub cli cwtl data16 push mov loop add data16 test outsl sti mov xorl out sub imul sar hlt out jns mov jb in push and shl hlt mov int into push fdivs dec fwait je push mov loop cld mov ret orl xchg xor icebp fisubs int3 cmpsb xchg std inc je nop pop out movsl insl dec aad cmp xor js mov idivb ljmp icebp filds daa push or push out (bad) into lock adc loopne lea int ds push mov mov icebp cld adc faddl push mov pusha fdiv lock dec popf inc add lods cmp call pop mov or cmpsb fisttpll daa mov pusha ljmp scas sub pop adc imul add int fdivrl xor cs rclb mov push dec cmpsl stos xchg adc imul fisubrs mov subl inc cmp scas jno aad push (bad) pop cwtl out pop jge and orb out testl xor movsb gs mov jge loope lods fadds leave stc add dec xor clc sub mov sbb mov add add adcb in push sub lods xchg pop outsl xchg out test push loop outsl test xchg inc loopne mov icebp mov ds sti std pop (bad) push sbb mov into addl movsb jg shrl xor rcrl das cmc pop inc jle cmp mov adc movsb jnp mov loopne push lret or pop pop jnp flds cltd inc bsr ds in lea stos mov cmp xor mov cltd imul sub out addr16 (bad) int into inc dec mov repnz add iret inc cmovne into mov movsb jb movsl setno dec call mov fsubs ret sub cld mov addr16 lods mov sub inc fucomp add test push maskmovq testl mov fsubl add insb pop mov mov stc add sub dec add mov mov sbb fdivr pusha repnz xchg subb dec jl cmpsb push jl cmp mov push fcomip push outsl push stos test fisubrl in inc stos rol test shlb mov fwait cmp out mov dec lret pop je mov (bad) mov fidivrs cwtl mov mov enter xchg movsl lods les mov cmpsb adc pushf cmpsb mov jae mov or push sbb popa mov sub inc push rcrb adc inc stos mov (bad) aas mov fistps lea andl jl mov adc or or and ret call jae or std daa dec pop gs stc cmp pop add or add or add or add or add pop add or add addl or add or add or add or add or add or add or add or add or add jno add addb or add or add or add or add or add or add or add or add or add or add jbe add xchg add lcall or add or add or add or add or add or add or add dec add or or add mov add xor int3 int3 int3 int3 int3 push in fnsave xchg fs sub movsl fiadds xchg (bad) lock mov test mov pop (bad) test lock in lea mov subl nop lock andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl sahf cmpsb cmp je jno xor int3 lock xchg repnz outsb into push popf xorl (bad) mov das leave out push cmp push mov repnz sarb outsb mov lock pop ret jle imul xchg sbb or push mov loop lods add adc cmpl mov mov lret jle imul push test dec out in mov mov incb fdivl pop sbb xor sub sbb adcb das cmp in lds push mov in iret cmp mov mov ja mov popf jno mov addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cmp ss mov adc jbe ljmp and push lea cmp mov xchg jle sbb mov mov or mov sbb push cs adc xchg lret fiaddl leave or mov jle pushf pop cwtl cmp mov mov ljmp stos frstor inc jnp mov ret add cmp dec jbe pop xchg daa or in and fs jne rcrl add xor into movsl test sub test call (bad) xlat jmp mov mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl movsb cld mov sbb xchg inc sar mov xchg rcll jbe std jge inc stc cmp mov (bad) xchg daa es je cmp jne mov addb mov (bad) idivl dec xor imul xacquire lea fidivrl fmuls fldl leave lods imul mov add jbe test fcmovne mov mov pop sbb sti jge lret jbe push xchg test shll xchg std imul cmp mov es sahf jo stc fdivl popa movsl in lcall lret imul pushf sar xchg std adc loopne xor rcl sbbb and test fwait (bad) dec dec sbb fs xlat insb das mov dec push mov adc sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl inc jle movsl xorl cmpsb lock jge ja neg movb mov add lret jne stc clc mov jb repnz mov fimull imul into scas mov iret ljmp dec mov xchg stos mov xor fstl scas sbb scas push (bad) insb and sbb mov rcll add xchg and mov pop cwtl mov sub enter dec cmpb xor sub push fildll xchg push stos pusha cltd and dec jo stc push jb lods xor mov push sub psubsw or xlat (bad) stos (bad) xchg adc ljmp mov into or dec push cmp (bad) loope lret sub gs add loope mov adc xor sbb (bad) adc lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl stos into gs roll inc enter aaa sbbl push xor movsb or xchg shlb cwtl mov insb ja mov jmp gs cld (bad) aas xchg mov cmpsl cmp seto sbb pop and call sahf jmp xchg mov movsl and cltd jo adcb pop xchg dec mov data16 and cmc sbb inc fcoms pop movsb cmp xchg rol and adc (bad) icebp add test lahf xchg dec push (bad) arpl mov jo sahf sbb jne push cmp xorl (bad) lfence fadd lcall cmp fildl adc test adc cwtl pop out or push (bad) lea andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl and pop add or out scas xchg xor push dec lret lock xchg jae xor mov mov sbbb jmp lds mov insb ljmp fsubrs sbb pop pop xchg xlat addb divl push pusha jg in cwtl out std cmpb outsl shlb lea lret std jbe xchg cwtl lahf jle mov (bad) call dec pop dec jmp mov adc test sti mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl xchg dec lret adc ja enter pop push jge dec mov loopne add andl popa jl pusha bound fisttpll test jp leave sub cmp dec dec mov shrl sahf scas (bad) xor es hlt pop ret sub lea in mov or sar jge sahf insb sub mov fmull test push daa lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl les inc and dec sbbb movd insb xor add es in mov fwait (bad) mov fiadds (bad) dec arpl clc shrb jl push hlt mov jmp cmpsb mov xor (bad) shll (bad) (bad) shlb adc movsl jmp pusha rorl sbb lock xor cmp shll pop mov mov std xchg push mull sbb mov mov test lock aad or sbb mov xlat push test rcrl dec jb xor mov addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl cmp pushf aam inc insl sub mov mov xchg mov or xchg mov sub cmc js dec cmpl push xchg push pop arpl jae lea imul daa orb mov lods adc jnp lea push sub imul je cli add arpl sub xor shlb in bound mov outsb sbb out mov sahf bound popa inc adc jge inc mov test inc push rcr xchg pop push (bad) sbb mov ss xchg pop stos pop adc add enter idivl mov les adcb mov nop dec fildl mov xorb insl rcll repz pop mov mov jmp sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl pop test call bnd fdivrl or pop add cli sahf aaa in insb xor cmp mov das test cmpl adc call jbe in or test or jns test (bad) jg (bad) push mov ret pop mov jns push ja mov mov mov adc adc movsl inc addl jecxz sarl mov or xchg pop cmp push mov dec sub fs sbb or out push sti xchg test movsb sub or repnz cmp sbb movsb cs inc add cmp sbb test pop mov inc in push addb popa mov mov sub mov (bad) rorl sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl fidivrl imul int mov mov mov lock jge jl mov add (bad) test cld sbb rorl mov (bad) sub sti sub jmp int scas dec mov adc dec mov mov cmpsl (bad) xor xchg push add fiaddl and cmpl sti add mov loopne xchg jmp add into pop stos cmp push fists xor dec iret popa mov lds lds inc test inc cmp pop mov xor push mov ss xor fnstcw add inc bnd and and inc dec out adc jno jl aad mov inc ss adc addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl and dec int3 sub or sbb test imul mov lcall pop mov repz push movsl pop and mov loopne xchg mov inc xchg sbb push mov pop in enter adc outsl or add popa add cmp lea aad in js ljmp sbb xor lea inc jp and xor cmp clc inc jecxz xchg call icebp aas stc and and out sbb inc add sub mov jns addr16 xor sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl sub fdivl mov sbb loope popa or xchg add mov push mov cmp dec push adc popa cmpl je lea enter fwait imul mulb inc xchg and sbb loope loopne xor adc xor addl mov lea jb push sbb push xor test int3 loop in sahf movsb mull loopne mov push jge mov push adc int3 rdtsc pop pop das (bad) push jl les bound addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cltd mov movb or mov fistl sub cmpl cmpl sbb or call popa mov jecxz and xlat xor xchg sbb daa lods mov jecxz xor jge and loopne iret popf jp out dec imul popf lret xor or jp jo push mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov ds and pop ret lcall push jl rcll dec mov or repz jmp scas es mov rclb decb sub pop stc fildll arpl mov dec xchg push add lods sbbl cmp sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl xchg stos mov dec repz leave aad jge inc cmp int3 mov xorb inc mov sbb mov scas jmp in pop mov cmpsl enter fwait cmp mov loope xor xchg ror dec mov mov icebp inc jecxz lea into pop notl jb lods add ficoml aam pusha xor test outsb in mov loope dec fwait or test out mov adc in enter int out pop xchg cmp xchg insb add into shll mov mov ret lock mov mov icebp lds xlat into sahf cmp xor fists jne fimull inc movsl xchg scas test out jo inc mov pop sbb sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pusha mov pop pusha movsl xchg bound jb sbbl push cwtl outsb pop cld popf ret ds test movsl lock bnd andl cmpsb sbb sbb sbb adc adc push pushf cmp push lahf or pop nop jbe int daa xlat cmc xchg mov sub xchg std mov inc aaa (bad) cmp ret mov xor adc mov test mov test mov xor bnd lret xor (bad) sub or stos inc pop mov pop add mov pop repz lret (bad) mov mov es stc mov pusha into sahf push ret sub pop pop mov addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl jnp mov je push lds add dec inc xchg test leave aas pop popa add ret adc popf mov lahf lea adc leave mov push popf inc in sub cmp movsl fwait pop xor sub jl fs test cltd jg jne mov add aam and cwtl fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl sbb mov add icebp dec fptan xor (bad) fidivrs inc inc out dec pop xor outsb pop pusha dec inc xchg xchg cmpl je addr16 mov adc fwait push test out push xor mov and push cmp in loopne pop mov ja sub stc jo cmp js pop push or mov in iret mov pop outsb addl movsl shrb lcall pop sbb mov jge andb inc mov (bad) aad cld xor push sti sahf pop mov stc cltd cmp lea rol push xor mov inc ret icebp pop cld sub sub arpl dec and or ret mov aas jmp popa andl fcoms or popa rcll lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl and inc pop stc repnz addb add and popf cs test sbb nop loope mov out xlat and movb call cmc jo shll in repnz and leave sahf sarb ljmpw addb mov test dec jecxz xchg pop pop fstl and and sbb stos clc inc xchg popf push leave inc loope sarl cmp jnp pop sub or out test jne dec negl or sub xchg stos push insl mov rol cmp inc jecxz (bad) jns sbb mov mov out cs jno adcl in in mov arpl addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sub test lods push loopne xor xor xor xor pop fst fsubl xor fs jnp add (bad) xor mov pusha jge neg push rclb popf sub sub sbb repnz int andl xchg inc pop adcl sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl rcrb sahf fcomip mov and dec stos adc stc cmc push mov mov loop jle sbb test sbb int (bad) mov lcall (bad) into mov rclb cmp fwait dec or in mov inc popa repz sub cmp push addb ss stos xchg xchg (bad) ficoms sbb ljmp cmp ljmp add lods or lods repnz dec fadd (bad) pop dec loope sti std test test cwtl call xor nop and inc idivl cmp or addr16 mov sti out mov push push add push int cli icebp cmp mov mov push mov jnp ret addr16 lea cltd xchg out mov push in xor aad dec jg test aaa je arpl pop lock addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl movsl popf aad xlat outsl fld nop mov cltd pop test test cmpl push mov xor pop jge test mov cmp mov int inc mov fsubrs ret cmp shrl sbb sub pusha hlt or cmp mov inc sahf mov mov and int3 mov ljmp inc lcall mov mov sbb lret add xchg and (bad) jecxz adc stos or out aad cld mov movl call in mov fldenv addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl rcr sbb hlt sbb sbb rcrl and int ret test imul inc mov je (bad) fbstp jmp jge (bad) xchg inc push jp int test or pop jno ret xor sub mov cmpsb stc test (bad) negb pushf dec mov imul lret dec xor push pop cltd dec cmpsl mov cmp in pop mov mov inc loop ds addl push (bad) mov movsl aam int popa pop leave addb leave repnz andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or mov xchg pop icebp ja lea (bad) out and inc and dec fs or and sub jle cmp and add ret cltd rolb scas ret inc or fcomip enter sub inc sahf rorb out mov mov out ficomps add fmul sbb scas pop inc lods mov dec sar or gs lahf mov and xor lahf sub in arpl repz adc and sub add cs sub idiv nop (bad) push inc push cmpsl push mov jb jb out dec movsl adc stos lods ljmp enter scas dec aad inc pop out scas push pop sbb nop repnz lock sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl push in stos (bad) jne jne push push sbb aas stos push inc cmp std push sub out push fdivrs or sbb sahf bnd sbb ds sub fs (bad) mov stos xlat ret cmp cli movsb push mov jne icebp adcl mov sbb call fbld arpl cmc adc call sbb sbbl sbb jecxz addr16 pop pushl adc loop mov test and out mov lahf adc push jo inc mov int sbbl insl loop rcll inc mov mov xor repnz cmpl lods cwtl sub pop xchg loop mov mov addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl push xchg mov push test xchg in mov lret xor pop unpckhps inc sub andl sbb xor call out out mov cltd adc xchg or sub popa sarl lock pop das sub sub cmp fcoml mov fisubs dec rcrb mov xchg mov test fstl sarl sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xor and pop add popf fwait mov fucomi sub push loop sub test mov lock jp outsb rcll fs sbb je in sub outsb repz ds inc call movsl cmpsl inc popf mov jne gs mov dec add (bad) fldl int3 rcr sarl push or pushf fistl jo aam xor inc das mov (bad) (bad) std (bad) dec xchg xor sbb imulb lock cwtl dec push test icebp xchg repnz (bad) sahf sbb and xchg ss push and out xchg orl or xchg fwait jle xor sub pusha sub addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl ret lods and pop sahf xchg test aas test and push js or jns inc mov lock xor mov mov or push adc sub lea lahf sub outsb in rcrb das dec test lds jb dec and adc aaa lock add fisttps add mov ficoms stos push adc ret mov sbb lea movsb loop dec test jne cli and jg nop add push or dec in jge les into dec ds push sti scas mov addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl lea cmp insl push fildll lods push jg or mov and jmp fcomps mov jnp dec imulb xor adc adc mov pop (bad) aaa and inc pop dec push test push roll mov sub dec pop inc (bad) out fs dec data16 bound push iret dec dec adc mov sbb push rorl fisubrs and ss sbb outsb cmpsb adc cmc dec sbb pop dec rcll dec xlat inc xchg adc and and loope js imul ror testl in test insb jb jle cli mov fstl les jg ffreep cmp mov dec je les add mov rolb sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adc outsl inc mov popl cmp test shll xor xchg addb out lret sbb in shrb pop lcall push lock (bad) adc or lods mov jg ror mov ret mov stos outsl lock (bad) rcr les xchg xor xchg xor loopne dec jg xchg push mov mov iret shlb xor shll pop pop sahf inc lods xor jg pop adc orl loopne andl cmp out ffree adc pop inc inc (bad) in mov stos dec xchg push xchg (bad) push fwait push inc xor mov mov dec (bad) negl cmc cli xor lahf or mov insl je outsl les jmp sbb jle xlat add jb mov movsl popf mov sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pusha rorl xchg sub fisttps es xorl jns xchg int3 mov test insl aad lret sub mov fsubs sahf clc mov add nop mov sti stos or push test add call lret in arpl sbb push adc dec pop push (bad) push adc fsubrl cltd jge stc mov nop out xor adc xor mov (bad) iret in mov xchg sbb pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl test or cltd rol xchg mov nop ret sbb rclb add push shl mov lods cwtl cmpb push dec xor mov int3 fildll add repnz xor insl insb into mov xor xchg adc fcmove fwait movsl bound test (bad) idivb in loop rcr inc jg sub mov rcrb fstl sbb xchg rcll ret mov xchg mov sbb shll int3 mov int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl dec jnp icebp jae jg inc dec movb testb mov xchg push xor or mov xor in jb popa push sbb xchg testb pushf pop add inc je out out or (bad) lcall xchg cmpl mov sbb pushf out add es dec push das push sarb or push sbb and mov rcl aad push xchg cli cwtl inc cmpb push mov out and cmc or popf stc pusha xchg mov add inc lcall call andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl fsubs roll jl push mov jle xchg push nop aas notl test js mov jl push aam ret mov sbb inc mov scas fisttpl dec jp repz and (bad) (bad) push sahf lea addb push subl mov lods mov stc xor cs lea movsb rcll dec mov pop lds xorl sbb leave push jp mov lea addl jb popa xchg xchg addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov xchg (bad) lock icebp adc sahf inc mov jns hlt jge pop pop add inc aaa adc or lea fnstsw mov pushf mov dec in (bad) sbb sub xchg lods dec mov adc in xchg push push sbb xchg mov test cmc sahf push stos lock clc cmp fcoml push cmc aam xchg addb (bad) cwtl movb mov fldl push xchg mov fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl (bad) xor jge adc and pop pop sahf pop add push sbb adc mov mov sti int3 cs lret xor frstor adc scas dec pause loop,pn mov mov (bad) into add scas mov incb jo jge inc mov roll dec lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov lret adcb jle inc inc icebp add and inc cmp sbb dec cmp inc push aaa cwtl filds push mov faddp movsl ret rolb ja mov dec lcall mov loop xor sub dec ss fstpl mov lock cmp push sbb pop das pop pop xchg mov push mov shr movsb stc test xchg mov repnz sbb call mov push xchg shll mov addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl push cli in loope push and les push cmp pop arpl fdivl fstpl sub xor jnp mov stos test jge loope data16 mov cmp (bad) mov daa shrl les outsb popa sbb adc jle sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl fbstp xchg rorl sbb testl fisttpll ret fnstenv stos pop loop sub clc mov ret jl sti jb pop fsubrp ffreep push or jg pushf out fs fistpll xor test mov mov scas stc sbb loop or in mov gs test insl icebp icebp call lret mov jb mov cmpb mov adcb mov xchg (bad) pop mov pop sbb dec lock aam (bad) rep jmp sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl stos lds cmp or xor mov dec mov mov psllq repz pop xorl inc cmp jne mov divb xor mov mov fcmovb mov shll xor add add dec lret mov and addb dec mov clc push shlb ss out popa lret inc addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl fadds jg std cmp popa enter scas xchg mov mov or push bound bnd das add filds imul cmp fst into pop adc sahf xchg sub xchg sbb add jge movsl test sub call mov mov daa xor lea sub mov adc jg and mov (bad) mov and push stos ds pop movsl jo and pop pop out je outsb test aam xor orl fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl mov xchg mov ret push pmulhuw pop add dec je and mov mov jns sbb add cli xchg mov pushf adc stos xchg movsb mov sahf (bad) xchg movsl icebp add loope jnp xor dec mov (bad) fwait in lret and negl lock ficompl pushf mov push sbb mov cmpb lods fisttpl addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xor xor fstl cld aas daa mov frstor xchg mov jl out push stos pop outsb mov ljmp jp push add mov aaa aad (bad) rclb pop outsl mov mov js mov scas xchg inc mov mov mov shrb fists push xor mov or sti jmp push (bad) dec fcoml mov (bad) in pop adc xor inc js mov lcall dec outsb sti adcl mov (bad) btr dec push sbb xlat imul aas or and dec cmpsl jecxz jecxz cltd xor mov pop sahf add scas iret sub mov rcr fcomi mov push int3 jecxz push xor xchg in xchg call and insl mov fstpl call int3 mov or fs insl sub inc mov andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sbb cs je cmpl subl cmpl mov mov xlat add cmpsb nop ret scas stos stc add adc popf outsb fwait movsb inc lea sub addr16 enter mov in pop mov out das xor in mov (bad) mov push pop mov or sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl sahf idivl loopne fsubr clc loopne pop cltd xor xchg arpl dec jg sbbb (bad) push sahf ljmp out push jge lret push leave jns (bad) xor cld adcl movsl mov inc and scas out fisubrs mov mov cmp aam test jmp jnp push mov sbb dec stos push xlat pushf mov push ds stos scas movsb js mulb ffreep add sbb (bad) lret fnstsw flds jnp push mov xchg push hlt cmp mov fmul mov jne lods icebp mov call mov mov cmc xor xchg mov out push xchg int3 or addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov mov popa int push sbbl and mov mov hlt dec ret movsb stc dec fisttpl in jle add imul xor or jp into imul dec rorb jns mov xchg xchg cltd fs pop rclb cwtl xchg out incl test in dec adc ja mov jnp mov jp stos test std jl jmp xor loop xor out out cmp dec dec mov cmp sbb inc nop movsb pop addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov dec imul fstpl sahf push lahf subl sbb push and jns add mov or imul iret mov pop or loope jbe pop test lahf pop jne pop jo in bound fadds pop adc aad subl pop iret mov ss in cmp xchg hlt mov sub popa sbb sahf jb jg mov push add ljmp sahf xlat movsb and cmpsb adc lea inc sbb outsl inc subl out mov xchg lds rclb es xchg sub xchg fisttpll pop enter dec fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl mov movsl repnz mov inc inc cmpsl mov adcl out (bad) lea sbb mov push add test idivl push and aam or xchg or mov roll out sbb hlt mov mov mov out sbb cs movsb stos jb inc mov jbe sub loope les mov cmp sub mov outsb xor popa mov cltd popf les mov fcmovnu enter dec lock sbb jo test mov std rclb and movsb mov out adc sub lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl sbbb test and cmpsl rcrl mov rclb filds and or mov loopne mov sbb std mov push movsl sbb andb lods inc jbe dec pop xchg mov aam push xor jge (bad) cmpsb push xchg xor cli aam (bad) bound xchg sbbl das sahf xchg fcoml fucom pop lods out movsl sbb mov dec push popa daa inc aaa jno ja pop cwtl (bad) test (bad) cltd loop push lahf cmpsl stos lods pop mov shrb cmpl in pop jbe test cmp ret cmpsl notb sbb xchg iret (bad) fdivrl arpl addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sub in test dec lea or cltd xchg push test loopne call adc or bound fwait popf ja mov dec test call and loop pop mov data16 fwait pop lock add int out sbb roll sbb lods js movsb push lods sub aad xor iret sub xchg mov sub mov jbe mov or pop mov stc mov nop repnz xor push sbb sbb cli jne push sahf inc shlb mov mov clc outsb sbbb add popf mov adc aas jl hlt imulb pop fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl cs xchg xchg (bad) subb pop xorl (bad) push (bad) xchg fcmovbe mov imul insl lea test sahf mov cs lock imul mov mov and icebp ret and loopne or outsl cmc inc ret frstor or push or cmpsl je call cmp adc push les movsl data16 test decb mov es mov inc mov out jmp mov push fcompl jo scas pop sahf clc notb mov adc repz dec rcll mov xor enter lods xchg adc out push test push sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl daa addb mov in scas add jb mov mov outsb das or pushf jge outsl mov push adc push mov out (bad) popa sub call push xchg add dec loop sub push and cwtl out lcall add movsb sahf stc sbb inc mov adc cltd nop xor mov push mov lahf xchg add mov (bad) xor sbb jl mov mov xor mov loopne dec mov fdivrs and mov push data16 js mov sahf push cld mov jp mov sbbl xchg enter mov sahf insl and or dec je mov andb lret add pop addl cmpsl loopne hlt push mov push lock push pop cltd (bad) mov xchg pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl fwait xorl push sbb outsb sub fxch movsb adc jp mov adc jmp add sub sahf sbb cs sbb dec pop out hlt scas test arpl bound (bad) nop mov out testl xchg jo nop adc pop insl stc fdivrl mov pop ret shlb cs loope aam jns mov inc call gs xchg in jge add sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmp movsb dec aam push mov (bad) sbb jge (bad) jge mov sbb (bad) loopne bound lahf jmp cwtl jae movsl add dec push jg pop inc xchg push xchg dec xor jge test xor xchg dec orb mov std cwtl mov mov push mov dec sbbl rclb daa push adc adc iret push sbb addb cmpsb and inc jp lods lcall imul popf fistpl inc xor lret jp mov stos cli adc xchg and xchg push add (bad) pushf ss push lahf arpl call push andb repnz sbb mov pop xchg addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xchg je adc inc xlat push jmp aad sub adc dec mov int3 loope out in jl pop cmpl xchg test jno (bad) nop icebp (bad) aam jnp or inc mov mov cmpsb stos add adc pusha xlat mov rcr pop xchg mov cmc push cmp out mov jno jb fcmovnb xchg insb pop movsl mov add push jg cwtl aam repz dec xchg scas xlat pushf add or (bad) sbb mov fucomp sar jo aaa jne in cltd nop rorl movsl inc test pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xchg jmp lret cmp lcall add mov xchg adc fucomi adc lods sub mov test mov mov insl or fcompl ljmp leave arpl mov loope adc sbb mov insb mov cwtl push push psraw arpl mov in mov sbb sti fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl mov sbb xchg add hlt cwtl fcoms or jg jmp jo sub add push cmc test icebp push stos cmp cltd arpl rcrb or outsl in iret jbe xorb jns mov mov adc add test xor (bad) sti int3 ret lahf and lea stc jbe jle shll sub add dec and mov push jl pusha iret adc sbb test adc imul enter test push sahf mov andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl dec push jg les inc (bad) scas mov mov mov xor jnp orb dec scas decl (bad) adc xchg enter bnd push xor aad dec scas mov jbe cmp bnd mov cld xchg inc divb mov jae add pop jp mov jo push cld fistps cmp push nop cli sub push (bad) lock mov mov lods mov repz fs inc mov push xchg xlat jnp pop outsb out xor popa jne jl lods add sub aad sbb dec inc mov lret clc xchg andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl push andb mov gs fiadds repz cld jne (bad) test dec inc jl insb xor and (bad) fiadds test mov (bad) jo subl dec dec xor ret orb mov mov add mov inc sahf xchg xor leave pusha or lock pushf fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl adcb mov cmp push and jnp jo fadd sti adc push dec or mov and insb ss xor cmp (bad) xchg scas pop lcall mov divb or enter jbe lock add es nop mov xchg push fildl stc dec je inc add ret je inc xorb out lahf outsl jp cli xchg iret fwait mov (bad) loop or movsl mov pop (bad) pop lods xor data16 adc push pop cmpsb push cwtl in jne scas jns push lds mov mov jb pop std lock pop cmc mov ret cld aaa mov out jnp mov mov test add dec pop mov addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl loopne and jne add pshufw mov mov (bad) fxch mov or cmpl pop pop test mov lcall (bad) aam pop xchg shll sahf dec mov mov rolb int int inc outsl sbb jp shl mov addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov test scas adc dec jle pop dec mov mov sbb mov pusha jne fs cmp test add dec push sub pop int xchg adc push fmull xchg (bad) into cmp loop lcall or cmpsb fdiv xchg jmp sbb jae cmpb test je outsb add imul orl jne sbb jno scas orl cmpl mov icebp inc mov lea add rorl inc sub les cltd or int3 lock mov ds loope jge inc add mov cmc clc pop stc out stos jl (bad) adc orl mov push loopne mov shrb test cmp sbb orl xor (bad) outsb outsb cwtl pop cwtl loopne jne xchg mov shl repz mov jg fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adc (bad) add push ss repz mov int inc ret jle les or jle ffree cmpl cmpsl jmp inc fldcw (bad) pop cmp fs xor rcr inc movsb xor inc addb add inc ror int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 addl mov addl insb and add add nop xchg xor add int3 xchg js ret addl cmpb or mov addb push ret and and addb and add loope jge flds addl inc dec movsb addb andl mov hlt add addl (bad) incb addl add hlt add andb add rcll jp int3 addl subl cmp addl rcll inc int3 or jns addl sub mov movsl addl andl addb mov loop addl dec adc aad adc cmpsl xor addl and imul addb aam lea sbbl addl orb stos xor addl fucomp orl add push sub gs in mov and packssdw les add addb addl nop dec test andl add pmullw sub addl movsl push aas insl pop pop dec popf cmp addl test rolb add addl aas int3 sbb push add addl movsb mov addl mov cltd in sub addl sub fstpl cs xchg addl addb push push iret fbld addl fldenv addl add and int addl xorl int3 fidivrs pushf xor addl outsb addl rcrb lea add int3 xchg push lods out pop test scas inc xchg andb addl int3 addb addl stos int3 addl addl mov xchg mov and andl cmp addb sbb pop xor int3 andb addb xorl addb addl jl xorl addl pop pop addl and scas imul add (bad) or and adcb addl xor addb popa cld sahf mov addl stos cmp addl add xchg or add add push loope mov fmul sub popl add addl pop int3 int3 and sbb mov addb inc push hlt push andl mov xor das (bad) stos pop int3 sahf jne addb (bad) sbb addl and imul addb sbb pop mov xchg sub add addl mov addl andl aaa in int3 jle sarb addb addl lret push jle lds addl addb adc pop or push and addl ficompl pop mov mov addl or lds addl xchg loop int3 sbbl addl push aad stos addl addl ret out dec addb add sbb addl addb test int3 jecxz pusha sbb addb add adc sub push addl mov scas jge add addl fists or andl add mov std jne addb add int3 add push loopw ret addl addr16 call addb add xor repnz xchg addb xchg dec pop loope testb addl sbbl jge mov mov addl sub imul addl sub add addl int3 rol push cmp mov addb and adc push orl mov addl sarl push test addb sbbl iret dec popf addl pop int3 test addl addb mov push into int cltd rorl adcl lods push int3 cld sbb dec addb addl inc (bad) cmp addb pusha jb lcall and xorl xor gs push addl addb mov xor mov addl add mov push addb addl and stos mov addl cltd lds addl and ljmp add addl and and movsb leave int mov addb loope sbb xor call addl add rcll addl inc std mov pop jb scas add add popa jecxz rcl xor add addl cld aad addl or push dec subb add add inc rolb ds push addl push cmp jp addl and xchg pop xorl and addb arpl out jp addl add shrb call addl addl sbbl icebp addl je subl addl or addl mov je addl addb lahf adcl in andb and pop mov xor addl adcb sub sbb (bad) das addl add popa lret sub add addb in sahf scas or addl sub test loopne sub addl leave xorl addl add test addl test mov xchg addl add inc fsubr movsb int3 aad scas movsl addl mov outsb dec addl xchg addb add test addl push xchg xor mov push pop lds addl lcall es movsl mov addl hlt aad add addl roll addl adc mov addl add and stos or and cmc add addl movb add orl repz addl xor sbb addl scas xchg adcl and jge popa addb addl sbb addl addl xor add and and sbb xchg sahf mov xchg xor addl lods outsb sbb addb sbb aaa addb addl fisttpll addl mov mov int addl and jbe push (bad) loope xchg mov addl mov addl addl xorl subl addl movsb ja (bad) movl test andl leave lea and dec pop jecxz and addl jmp call add jle addl adc jno mov into pushf test addl movsl gs (bad) int and addb and add das xchg leave pusha bound addl sbb mov andl andl lret add adc int out addl add or lock addl lret addl inc mov jno push addl xor addl addb jecxz push int3 add addl (bad) jno addl addb cmp test int3 addl movsb add ja xlat ficomps roll addl xor mov addb sbb nop sub addb add andl addl addb add repnz mov jbe and andb xor subl addl int3 repz xlat pushf in push addl add xor andl add bound shll addb fstl scas add addb add jo das adc aam sub addl cmp addl outsb pop mov add addb xchg push addl addb out subb sub lea addl mov cmp int3 loopne addl add and movsb add addl addl add out (bad) aad addl repz sbb scas mov addl addb mov rclb fists addl push and mov addb addl xchg rcll add addl jbe andb and and cmp mov addl ja jae cld cmc ljmp addl mov ss int3 addb addl cmpl mov andb add xor add addl and in xor mov jne mov addl mov addl clc ror push ret andb addl enter xor addl imul push addr16 addl shlb in ret lock shlb add add int (bad) jbe fmull add add stos orl fnstcw cmp addl subb fwait enter mov inc cmp (bad) fnstenv addl jbe aam sbb mov and popf pop stos insl in ljmp mov addb push insl shlb cmpsl inc addb andl mov jge stos les add or dec pushf (bad) xor addl add or addb addl addl andb std dec or addl mov mov icebp xchg addl add addl sbb add addl addl mov roll addb addl addl repz dec cmpsb mov addl (bad) fsubrl addb jmp pop mov addb add xor addl orl mov lret add add int3 aas jae add nop incl nop addl adc out adc addl sub inc orl add add mov notb addl orl movsl hlt roll addl pop imulb sub add addb inc mov jmp cmpsb addl addb fcomps sahf test clc addl push cld roll add dec and repnz cmpsb sub add addl addl (bad) ljmp addl xor test addl cmpsl sarl icebp mov andb addl adc (bad) addb addl addl addl fdivl orb mov and addl fwait iret (bad) push addb orl int shll fadds andl dec repnz jle lahf pop and addb addl andb and mov jnp mov addl and in sbbl add addl and mov movsl dec jo insb addl cli mulb addl pusha adcb in xchg sbb add mov xor add add dec aad or (bad) cmpsb mov addl cmpb dec lods addb addl mov add add add jns pop nop or addl fdiv pop addb andl andl push ror fwait and addb add dec push clc add addl sbb addb addl addl cmpl inc addr16 addl cwtl jbe addl enter pop (bad) sbb addl mov add subl jne aad addl sub xchg out addb addl out pop (bad) addr16 addl or test subl addl sti clc in fmul cwtl dec xchg addl addb add inc test push jo int and andb xlat repz cld mov push cmp movsb addl addl push sub adc add dec xchg addl push shlb jns cli (bad) rcl addl addb mov cmp fisubs addb add cld mov dec lds mov mov addl andl push addl pop xor addl fsubs dec lock addl push addl (bad) popa inc addl jge movsl (bad) enter jnp lods add addl addl pop xchg xorb mov add sti sbb arpl test dec outsb add add dec fimuls ret test aam andb addl ljmp mov addl push addl add addl sbb andb and and xor mov cmc sti or addl addb adcl xchg addl add test out add and in add mov addl or xor and and fcomip push int sahf xor mov addl addl add cmp push addl adc sahf or rcll addl sbbb out xor add movb add addl sbb rolb addl orb xor mov addb push push or and addb and add scas fsubr pop test add (bad) stos ljmp addb andl and and addb adc xor add jp xor addl cmpl addl andl addl gs cmc or addl cmp mov adc addl (bad) jp pop (bad) push sahf ljmp add subl nop sbb test addl mov sahf addb addl addl andl leave dec cltd lods sti cli int3 mov loop addb add mov das addl addb stc std jnp addb add jmp jnp and andb mov mov subl addb addl pop fcompl addl add subb stos leave cmpl addb add flds cmpl addl idivl outsb cld cltd mov add add addl test pop xchg addl sbb fadd push and addl outsl mov addl (bad) shrl addl addb movntps addl fbld add andl jmp push mov mov addl sahf addl add lea jne add and xorb xor out mov addl test sbb andb addl popf cs mov addl xor xchg repz addb jge addl and cmpl gs andb adc addl addb nop mov mov andl adc lods inc sub push addb addl dec pop mov add addl addl and stc stos insl fmulp sbb out mov addl mov addl fistl addl andl push mov in addl dec rcrb addl mov (bad) cld inc fdivrp mov addb cmpl addl jmp mov notb add addl je test mov addb mov sbbl add add imul addb adc sbb ja sahf mov popa stos jge addl and sbbl addl mov test addl add insl cmp add mov dec inc addl cmpl sbb addl xorl loopne addl cld sar dec pop test daa addb andb addl aam inc movsb mov addl pusha or addl cmp lcall addl and xchg (bad) repnz sbbl (bad) gs jl addl addl lcall add sbb dec fcomp loope jbe push addb add std fmulp fsubr stos pop mov addl leave inc pop push movsl mov adc addl inc pop dec sbb pushf (bad) stos addl add icebp fsubrl addl lea mov in addl lahf jb jmp add add push lods addl addl xor jne bound addl addl movsl bswap xor sub addl dec mov push popa pop or stos addl addb sub sahf hlt pusha addl mov sub addl add and ficompl add addl addl (bad) sbb ret addl cltd inc stos sti addl addl pushf jb stc cmp push andb addl fiaddl addl push addl addl out lea add add lea and test or fdivrl addb adc mov addl adc addl mov add andb and cwtl sub sub mov addl mov addl addl push push sbbl addb mov addl fisubrs arpl add xorl mov add add (bad) stc xchg lock sub add addl xchg test addl mov andb add sbbl and add xlat stos in adc mov push inc lods addl scas inc xor addl and out adc fdivs and addb subb addl add in adcl shll push and push addl addb mov xchg scas sbb sahf std addl out push add or outsb jne test andb addl popf mov add subl outsl sbbb addl mov sbb addl addb sbb repz add jbe cmpsb sub add sbbb cmp sbb xor (bad) cltd addl addb xor sahf lods sbbl addb add push cwtl mov clc (bad) and andb push xchg cwtl iret mov push inc addl addl cs popf or mov addl adc sbb gs lret addl loop (bad) sti addl sahf (bad) add addb add lods mov jns addl xorl jp fsubrl addb push mov movsl dec enter push mov addl cmp (bad) adc pushf addl addb popa test mov addl xchg lcall addl jo repnz sbb mov add addl addl add and add sub test add add gs sbb and addl stos cmpsl or xchg and addl sbbb mov test addb sbb pop mov mov and adc mov nop sbbb addl cli js je rorl imul addb xchg xchg addb addl (bad) sbb add addl xchg push addl and movsl push (bad) inc movsb mov addl mov addl pop addl adc out imul jnp addl frstor fcom lods mov addl dec loop test add mov int cld das add add xor mov add addl orb mov xorb add movb sub add add out dec test push fnsave addl mov fstpl and mov and mov add xorl sar mov addl inc daa xchg addl addb cmp add jno addb push scas sub addl std mov addl mov mov addb xor lea addl addb xchg addl adc addl lock xchg ds (bad) bnd addb lcall and addl movsb jle or add mov adc lea addb add test dec xchg or (bad) addl mov addl addl test loopne loope dec addl add (bad) (bad) sti dec add addb add push cmp mov addb stos int stos cltd mov addb add nop add xor jns subl addl sbbl test addl test stos inc mov addl pmaxub sahf cmc mov sahf jle add addl addl lea inc mov addl add and popf stos or test addb mov into int addl add fmulp stos cmpsb add addl imul inc popf add addl cmp andb addl and add andl addl addl dec push cmpsl push addb and and sbbl stos cmpsl push scas dec popf les and addl dec stos out addl add cmp xor addl push rcrl add addl out addl and push or xor add addl sub cmp addl out dec repnz das (bad) movsb jg jno addb rclb addl push in into cli mov addl add dec jnp (bad) or and addl jns add add addl movsl dec movsb int int3 shrl jl addl pop jmp and addb and add cmc pop pop out and sbb addb rcrb inc les test stos nop addb andl xchg addl out add addl add repz cmpl xor add pop out mov mov add and pop js addl adc addl ret dec shlb addl addb xchg jge xchg jno shrb popf sbb addl dec addb addl addb mov cltd sub pop cmp subl add andb addb push scas push clc xchg decl add addl mov lcall andl cwtl in inc mov loopne repnz addb addl or xchg xchg andl add adc sub mov sbb addl bnd pop sbb andl addl add addl sbb addl orl pop and addl jno mov push mov subl addl out add cmp or test addl addb scas hlt sub nop in and addl adc add ret addl fsubr scas leave lods out mov mov addl mov addl mov mov andl addl xchg cwtl add add jae stos mov testl addl jne out lods xchg addb addl lahf pop stc ret cli jmp addl stc or fisttpll andl subb fistpll iret cld addl addb addl add test add and add add addl gs orb test and xchg fdivl pop mov addl mov addl ljmp add mov or addb and imul add (bad) xchg testl lods cmc add fiaddl and addl sbb push dec add addl movsb xchg addl ds adc add add lea addl sbb sahf cltd push fcmovbe addb andl mov imul add addl sub addb addl sbbb addl call addl adcl mov sbb and shll ret subl addb inc cmp neg sahf addl lds add addl addl ds fisubrl loop addl sub loopne daa mov addl fsubl addl and add pop repnz and addl xchg xchg mov and addl add sti mov es pop lods addl addl sahf xchg mul mov addl xchg addl aam inc mov addl xchg jl dec arpl add addb add jg roll addl orl loopne jp popf xor xchg mov addl lea or addl mov jae add addl addl ljmp add mov faddl addl xchg mov cmpsb movsl clc push sub addb and cmp addl es jbe add add mov addl std lret addl test ret addl addl and in imul and orl xor (bad) out lret incl and jnp xchg andl enter addb addl fdivp jge test and cmp mov addl scas std push mov addl mov addl nop mov fildl addl push xchg ljmp movl or or jmp mov addb add and sbbb addl pop (bad) push sub add add mov adc addl cmpb cmc mov addb rorl addb and add jne push push push lcall addl popa into (bad) mov addl insb pop outsl sbb cmpsb fistpll add adcl cmp icebp and sbb add add jnp repnz dec mov add inc adc scas (bad) jecxz dec mov add repz sahf jmp adc adc addb xchg mov jg std jmp inc call add mov in addl lds insb repnz test add cmpl fisttpll addl sahf jb cwtl into (bad) jmp clc addb addl mov xchg addl orl mov addb add stc push jge sub out addl addb mov lahf xor addl (bad) ret and addl iret xchg in mov add push jl adcl ficomps addb add rolb sbb addl sbb push movsl add addl mov pop pop xor add addl pop lret retw jb addl or cmp xor addl les push sarl jmp mov addl sbb mov shl add addl lea addl ficoml andb loop nop addl sub mov je pushf add addl jecxz add addl push xchg addl vfnmsubps addb mov cmc and sbb mov and addl in addb addl leave cmpsl icebp nop call lret addl lret arpl or and and orl shll mov andl (bad) mov aam mov addl cmp addb addl andb andb add fistps mov outsl addl and (bad) ret xchg adc add rcrl add addl shll push addl andl addl test movsl addb add sti push frstor xchg addb sbbl and addl in mov jmp add addl daa mov in mov addb mov xchg and addb and add sub int mov addl test je aaa hlt jne leave sahf jno lock andl movsb movsl call addl sahf xchg xchg inc add addl mov addl xorl inc addl or add addl rcrl inc xor add lahf mov enter addb add out ret lret sahf or add addl jmp into neg roll addl loop das cmp out addb addl addl cmp subl addl xorb filds addl and nop jmp addb add xchg jge testl and andb jp cmp addl addl andl add imul addl jbe mov dec stos and addl incb xor roll add addl cmpsl mov sahf addl subl addl aad repz sbbb rol ret mov addl pop call inc insl fiaddl and stc jle orl mov push dec addl daa add jmp addl es add lock jp mov addl mov and addl inc out sbb lds addl fs addl fildl sahf inc scas or addl incl addb addl cwtl cmp add addl and subl add cwtl stos test addl addb pushf jge fiadds andl mov test push jnp jg addb addl push test and arpl xor addl (bad) mov addl mov addl loopnew addl subl fldl addb popa nop jmp add addl push ret in cwtl insl cmpsb push xorl add add lock stos and add adc jecxz sbb mov add aaa pop xor addl stos push mov jmp aas stos and add add mov xchg mov addb sbb cwtl mov sbb addl and lahf jne xor pop lods adc mov and addb cmc loop and xchg shl add addl addl mov inc sub addl or xchg addl sbb addl (bad) sti nop stos inc mov addl in jl scas (bad) cmp jge add xorl push or popf dec mov andb addl ss mov ljmp addl dec xchg scas push mov addb mov sub addb add mov addl addb xor addb addl mov andl sbbl add stos andl addl add sub addl add int addl and int sub andl add fadds addl sub shlb call and addl addb xchg adcb addl addb je addb (bad) adc jp aas inc dec addl jl mov add addl addl add cwtl jbe addl xchg addl inc xchg movl addl mov xor add addl xchg (bad) mov addl cld mov movsb push jecxz dec mov and sbbl out cmpb inc mov addl addb jge (bad) addl add and inc addb addl rcrb and or sbb and out in lea sbb xorb test and push fnsave addl and lds mov addl dec gs add add dec cmc add add mov fisubs mov push add addl jmp pop std mov addb sub pop test fs orb and add xchg addl cld cld jge cmpsb push js addl and loop je sbb xchg or add addl cmc (bad) fistpll add xchg push xor add (bad) and pop mov addb lea addl mov dec ljmp addb inc sub sbb andb addl lods mov addl addb imul inc addl imull addl shl pusha mov addb sbb scas xchg cmc sub rolb addl andb xor mov addl push out hlt xchg mov lret cmp addl xor andl xlat mov adc add add xchg filds outsl pusha addl add cmpsb sbbb in addb add repz lcall out mov addl xchg repnz add addb add mov xchg dec inc addl cmpl addl xor mov addl (bad) fstl inc scas cwtl scas addl addb xorb addl (bad) jae repnz addb and scas lods shll addl mov xchg stos push fwait addl add aas mov sbb addl xor iret cmp addl addb mov adc cmpb andb addl adc mov addb addl ss addl addl int sahf int3 add insl mov and cmpl sbbb popf test pop adc cmp andl ja pop nop mov mov addl sub incb addl xchg add addl mov je jl (bad) shlb addl and int mov addl mov addl addl sbbl pop filds addb mov push addl lods pop int addb xor xchg out and addl les add addl sbb mov and (bad) fwait adc addl mov cmpsb mov addb and add inc (bad) sahf adc lahf sub xchg repnz addb xor test mov arpl andl andl adc add sbbl daa loopne jge inc add addl addl addl xchg addl cmpl std movsb addl dec inc mov outsl sarb mov addl sahf popf pusha orl pushf addl mov and mov addl xchg (bad) adc addl pusha imul addl les fwait push jmp addb stos adc mov add add mov push addl addb sub inc lods subb addb add adc subb clc and andb (bad) aam sahf mov addb addl adc pop addl add inc in jo mov jg addb add mov aam dec int addl cld mov pop sarb loope add addl subb addl mov and addl addb rcr mov addl jnp mov addl stos jg imul add xorl sub add addl addl add repnz fwait inc addl addb add add daa jl das dec gs andb addl mov addb addl subl addb add adc jg andb and and subl jg lcall addl jae addl add shl sub addb addl cmp jl addl add lods fisttps andb and sub mov addl mov addl adc mov addl subl addl cmc jl in imul sbb leave jae mov addl add jl inc xor add add fwait inc std imul addb add addl fwait add fnsave addl test orb aaa andb add lcall addb xchg iret sub or addl les inc and addb push fnstcw add addl lods (bad) movsl negl addb addl push test addb (bad) mov cmc fiaddl in cli addl sahf into or out addl ss push in dec addl and addl addb sbb lea addl xchg icebp mov addl push cmp mov movl int3 adc mov mov lods into bound pop addb add or addl addb xor and add addl nop mov and andb xchg adc movsl mov addb addl push xor push sbb addb add add addl aad mov cmpsb fwait xchg addl ret add addb add dec jae cli mov dec shr cmp xorb mov dec and addl push or mov addl mov orl add addl dec xchg lret addl ss lret sahf mov addb and and test mov addl push sub addl add shr and sbb add xor push jle mov pop test sahf add add shl out adcb andl add sub add adcl addl addl xchg in cmp mov and sbb sarl test and mov sub das addl add jno xor jb,pn addb addl xlat cmp sub in add addl add and fiadds dec mov addl mov addl xchg addl mov addb cmp push enter addl add stos addb sbb add add jecxz lea insl lock addl subb xor addl sub inc and addb and add jle adc addl repnz or addb andl push or dec sub addl mov rcll jnp add addl sahf xor add test jne roll addb jmp mov in addl mov addb sbb xor dec push imul addb cmpl movsl nop aad addl addb cs scas addl nop cmp mov addl scas scas out sar mov je addb cltd adc outsl out xchg pop addb add stc les add xchg xchg xchg add mov addl pushf jmp and andb (bad) push push nop addl addl lods or gs addl add xchg movsl push test addl stc dec in outsb fldl addl add addl andl xorb test mov and addl jmp xchg mov addl lods cmp mov addl addb movsb pop cld addl push repnz mov addl out aam int and pushl mov addl scas xor push filds addb orl addl clc mov test addl addb mov adc aad andb addl sub jbe dec addb addl test loop addl addl test dec mov and orl xchg mov and add ds addl add mov fldenv addb addl add addl je hlt xor addl and sahf mov mov mov addl addl std or addb out clc pusha stos inc cwtl rorb jge dec scas addb add outsb addb cmp leave xlat enter push add add leave lret mov inc stc push jl add addl lods mov addb xlat fadds add add cld int3 scas push lret and ds jecxz,pt addb in (bad) jg cmc stos pop mov addl jle aas rcrl addl add addl lahf movl fsubrs cltd dec addl andl cmpsb cmc addl jge mov addb cld mov mov addb or addl addb and and mov addl inc push addb addl mov addl adcl jge std int3 mov addl jae jle adc push cmp addl jmp add add test xor (bad) repnz andb (bad) cltd mov addb addl mov addl add scas subb shrl addl push lods out lock sub addl xor add addb add in shr int xchg imul xorb ret icebp xor addl jno cmp aam lds pushl add addb cwtl mov and addb mov or addl out aas je inc sub addl and lock aad xchg add addl iret incl addb cmp loopne addl push int mov add mov xor mov test andl mov sub add sbbl addb loope (bad) mov and xor mov stc test ja aam movsl addl addb adc addl pandn nop cs jmp addl fldenv push ss add addl std out sahf and sbb pushf addl and mov add addl cmp addl dec repnz shr fstl addl addl gs mov inc jle addl xor imul and addl test ret cmp stos add addl movsl fst mov addb xor xorb dec sar scas and addb and add std mov sbb addb dec and in push cmpsb mov addl les pop push add and addb inc xchg cmc add addl xchg mov add pop push addl shrl push addl subl and imul je addb sahf test test mov cmc adc addl addl xor mov addl addl out cwtl in or rolb addl imul addl push pop jl and push fidivrl addl addb add jecxz andl addl addb push imul addl lods punpcklbw addb into and mov add (bad) testb pop sub and ljmp addl xor mov addb lods push adc jne push adc add addb add int3 fwait mov rolb addb test add addl shrb fbld mov addl xor jne add addl addb das test addl xchg mov rcrl add and test adc xor mov addl add adc pop add addl push lds xchg popf addl cmp shrb addl pusha incb js cmp mov and addl fcmovnb mov add orl addl addl js sbbb xor and orl addl addb sbb addb sub popa movsl imul add and xchg lea add addl sbb addl and aas scas mov sahf test xorb andb into out fsubs andb addl outsb fidivrl pop mov mov addl pop mov addb add dec lods repnz into enter addl testl add add nop leave mov nop std icebp faddl addl andb (bad) push mov int sub add andb in movb add add jmp mov addl jge addb andl inc mov add andl sbb nop add addl fldl addl test addb dec inc or les ficoml mov addl mov out fdivl sahf addl push mov loopne xor cli addl addb sbb scas pusha imul pop sbb std movl out mov addb addl addb ret movsl repz xchg ficoms addb add mov rcr addl addb sub xchg stos stos addb add add les and andb in mov xchg stc (bad) loopne nop inc sahf addl addl ret mov fwait addl add jb xchg int adc addl enter fstl movsb addl mov mov add addb add xchg jp out lret pop es or addl addl addl push add add addb xor and lcall test lret mov addl push into ja aam addl mov adcb movb addl dec lods stos mov addl and or testl andl addl iret xor andb addl ret stos addb addl and add addl and orl push xor andl add lea into adc addl add orl addb addl xchg out addl and addb andl fsubrl test xorb sbb add test andb addl movsb insl xor dec movsl addl out fnstsw adc faddl addl hlt adc or movl (bad) test adc out test and addl out jno add addl dec dec push fs lahf mov addb sub and addb and add loope out fs outsb movsl jmp add aad aaa inc iret addb andl iret adc outsl and addb test push cmpsb sbb addl add xchg mov fnsave or addl call jne addb xor addl or fadds addl mov addb add imul test addl add addl int shlb mov addl add fld jmp addb shll xor daa dec inc outsb test addl andb movsl xchg mov addb ret addl addb bound or (bad) sahf addb add sbb (bad) and andb cmp cmpb addb addl mov lahf mov addb add call shll addl pop test addl xchg add addb add in mov xorb add js addl xchg int xchg add mov addl test mov addl addb js inc scas popa add addl xchg add lret cmp xorl cltd shll addl jge addl popl loopne popf addl icebp test adc call add (bad) stos mov test dec add andl cmp mov add adcl lods mov clc pop addl addl sbb mov and sbbl enter addl addb lahf push jo faddp addl add jno add add and (bad) mov adc roll add addl addl and dec lcall add or sbb outsl addl cmpl addl xor ljmp addl mov stc or xchg shrb sbb add add out fisttpl jecxz inc ret add add sbb mov lods cmpb add lret rcr mov addb (bad) out inc dec (bad) and addb and add fmuls xlat outsl fidivl ja mov add rolb or push iret addb andl stos je adc push mov fldenv add andl into mov add pop or hlt mov or addl mov add adc push addl dec and adc addl addb adc roll addl roll addl xchg rol jmp addb addl addl xchg out inc movsl xor insb addb add jl roll addl mov mov add add bound icebp jle adc addl xchg cmp addb addl adc addl add jle sti repz into sahf addl insb ffreep fcompl addl adc dec sbb addb add mov mov addb fwait adc xchg and addl into fistpl mov addl adc adcb add addl addl dec stc daa xchg shll mov add cmpl mov iret add addl orl addl test lahf addl faddl addl jo inc fld andb addl dec shrl jl mov add subl adc addb sub mov and cmpl sar inc sahf aad cmpsl cld jns cltd addl addb gs inc add andl lret loop or addb addl lret cmp xor add addl addl and and mov add mov mov scas and addl addl mov sbb into mov addb add enter jg mov add mov nop icebp cwtl mov jl cmp add fdivrl pushf rorl add fnstsw xchg lock ret (bad) shll addl insb sbb cmp add add push inc cmp addl and addl and fsubl add or jae jne,pn add addl push jl imul idivl adc addl push jl pusha push addl xchg lret jmp test addl xorb addl stos jo add mov addl mov and fs cs dec cwtl jle addl add sbb addb movsb mov addl addl sbb add addl addb aas rolb (bad) mov add fnstsw andl loopne add pushf addl addl enter and stos cmc rol fsubr arpl addl ret inc test push and loop addl je xchg leave iret out mov addb add aas sbb popf mov dec jle xor xorb or aam addb addl jecxz addl pop push mov cmpsb out addl addb dec or dec jnp mov addl add lcall add pop scas scas push add addl in out daa addl add pushf stos addl test lret jo addl loop mov xchg icebp movsl ds addl sti into xchg xorl addl ror hlt addl addl cmp mov fwait popa sbb and addl sub pop lods lcall addl sbb andl mov jae xchg int adcl addl add addl mov and mov xor and add addl call addl lods xchg addl lods mov stos faddl addl test jo xor inc cmp addl jg mov outsl fnstsw add add mov lahf test mov add addl inc inc testl xchg enter daa and addb and add inc mov rcl test add clc inc les addl and aam sbb (bad) xchg sbbl addl clc pop test addb addl addb addl addl orl cltd addl xlat lret push addl xor adc andb addl hlt addl addb test lods xchg addl addb (bad) cmp or addl dec mov addl cmpl cmp scas or addl addl addb sbb addb add lahf mov movsl or addl and inc movsb ljmp addl cltd sub cli lret jle andl add inc daa cmp std sbb repnz shll addb push mov inc sbb add addb add test mov and iret mov addb imul sub add and addl mov addl push xorl and daa mov and addl mov or add add inc and mov addl adc jo xchg fs addl rclb les and mov test mov add add pusha xorl and or cli sbb addb addl mov xlat sahf mov addl addl mov in add andb and and or aam call sub sbb and in xor addl add adc fsubrs add and mov andb add addl xchg movsl pop jbe addl and dec mov addl mov addl and push imul sub addl in jge adc roll addl int sub mov add or mov ja mov xchg roll add jecxz jle adcl xor add mov mov push movl addb fnstsw add inc ds cmpsl lret addb sbb mov addl jp cmp mov lock addb je test cmpsb add addl push outsl xchg push addl xor mov mov addl xorl pop pop jo imul addl test addb icebp cld jns addl xor addb test mov lcall addl test addb addl push jo xor addb imul addl addl rorl addl addb pop xor mov add xchg mov scas orl addl cli addl addl dec roll inc (bad) adc rolb addb add xchg int3 fs addl in push addl and jnp clc subl add add or dec jbe xchg xorb inc push and addl (bad) mov addl leave xchg jo xlat (bad) (bad) stos adc addl or jnp imul addb lock inc cmpb add pushf jg add mov fadds mov addl pop fldl addb orl sub addl js mov movsl mov add add adc stos (bad) cld leave or clc andb addl aaa hlt inc addb addl and addl addl ja aas jnp andb and and cmpl lea xor addl addb and addb adc int adc addl call popf out add addl movsl sbb cmpsb addl and xlat sahf stc inc or adc xorb add roll addl pop pop pop mov stos addl (bad) jmp mov addl (bad) and mov push addb cmp jne push cmc roll and addl test jmp and push mov xchg movl add mov jg pop cwtl mov addb jle int jmp mov and rcrb push or add movsb jle test out jl sbb addb andl clc leave fisubl add cmpl jb push cwtl lahf add addl addb addl pushf and pop pop fldl addb test nop fsubrl xor add addl dec repnz lret xchg mov xor addl ss cltd addl addb xchg lods ficoms andb addl mov addl andb addl test addl addl test addb addl ret aas test mov addb add and out xchg sub and andb lcall sahf addl addl xor push gs and pop fiadds xor filds addl adc addl cltd popl push jge add addl mov test xorb sub mov and addl arpl adc addl dec jne cwtl inc fcoml addl addb xlat push lods xchg shlb addb pop or xchg hlt jp cltd pusha pop addl cwtl push lcall addb inc addb stos mov addl add inc hlt scas addl into lock or shl pop aad add add rcll jg inc andb addl inc fstpl mov addl mov add addl mov and cmp mov mov addb and addl addl adc cmpsb aad addb addl mov addl repz shrl addl shlb mov addl mov addl xchg add addl pushf fsubp lret dec cmp addb sahf xor xchg rol pop popf addb add pop leave inc or icebp jge ret sahf addb addl dec mov and addl xchg push or cmpsl add addl lea mov addb (bad) adc in and fsubl and addb and add add addb pop dec mov nop fnsave cld addb andl or dec mov add xorl addl add and addl orl addb leave rcr dec mov push nop sbbl add addl les jge push nop addl xor lods stc out jmp andb addl and jge xor addl addb loope,pt mov cmpl push mov addl (bad) fcoms stc addb addl andl addb inc loope dec addb add mov xchg cmc addl addb push mov add addl cmp xor xor addl mov push add addb addl in jecxz adc xchg addl add subl addl xchg or int3 repnz addl jle jmp sbb add addl pop gs push addl cmpl cli pop cld and addl mov addl aaa adc js movsl in addl addb jae xchg add hlt pop xchg addl movsl adc mov jge addl mov inc out (bad) popf lods adc addl cmp and mov cltd mov addl addl addb andl subl jae add add jbe adc popa cmpsb fldl cmp and addl std loop in filds addl les pusha cmpl mov addb jno movsl jge out insb mov and adc mov addl and addl fnstsw stos sarb addl add aam or addl addl xchg sbb cwtl shlb sbb and mov xlat mov mov addl mov addl scas addl addl cmpsb adc addl jg xor mov addl push sbb clc addb cmpl addl addl dec mov adc addl adcb int xor sub addl and outsl jmp and addb and add jg cmc mov add psllq push pop int3 (bad) addb andl ja or xchg test addl in out fadd dec stos add addl fs aaa addl subl addl sub pop mov add addl in mov xchg addl ret cwtl inc xor inc dec addl cwtl adc mov addl out pop adcb addl jo int andb addl popa and fstl addb mov dec dec addl add addb adc addl subl test addb add sahf or ret andl xchg xor add addb addl pop addl add fsubr pop (bad) mov addl adc addl xchg add addb add js inc in sub addl test add and addl dec mov jge mov addl cltd xchg iret addl addb aas jb jle dec xchg cli inc cltd addl mov addl add and inc sbb test jle addr16 add addl iret addl add cwtl xchg addl pop cmp add imul test addl imul add andl addb imul test and subl mov andl stc inc andl addl add lock (bad) mov mov add and test or add addl lea add aas ret jge lret out xchg add addl fwait movsl addl orl shll mov addl or adc addl int3 stos inc shll addl push gs mov add inc ret add hlt std add add addl cmp cmpsl movsb xchg fs mov addb inc (bad) out in pop mov out arpl addb and add jnp lods jmp addl daa jmp inc mov addl and arpl sub xor add addl mov addl fiadds addl adcl addl mov sbb cmp inc addl inc or call addl addb test ja test addl stc outsl rorl mov addl addl mov movl add or inc stc cmp leave mov addb lahf mov inc addb add xchg mov and push mov add mov repz add fldt cld mov pop in sbb addl ja mov addl addl mov shll addl fmul mov addl push sahf mov aaa dec inc addb addb xlat lret push dec sub inc xor add addb add sahf push scas sbb addl rorb lods mov sbbb addl mov add addb lea addl addb addl xor stc lods andl add mov lret das add addl xchg addl add (bad) rcll subb andl adcl addl jle pop (bad) andb addl jne lods or addl cmc cmp addl addl or and adcl xlat mov and addl xchg addb cmpsl stos and cmp addl incl addl jae addl and sbb or jl sbb addl mov addl addl addl add addl mov sbb xor mov addl push and addb xorl add add loopne mov stos imul add addl jge mov mov addb aas push mov mov test addb and add xchg xchg addl out out les lret addl mov dec cmc and addb lock jp xchg and add insl xchg and popl add fldl addl orl addb (bad) cs daa sbbb addl xchg xchg vandnpd out addl cld inc adc jecxz add addl and clc sub addl subb addl sub cwtl aad rorl pop rorl addl addl sahf pop loope dec xchg movb addl fcompl rolb add scas cwtl les xchg or jo and andb jg rorl into pop call add add andb (bad) fldl roll add and fldenv addl push imul scas addl sbb sbb add addl addl sub and addl aad inc and mov addl push mov orb add sti addl addb mov jl (bad) icebp and addl addl add and lea add addl sbb addb mov or std addl test lds addl dec xchg addl test addl test xchg addl addl xchg pop stc js push test lea add add les lods jne addl addb sbb addb mov xor addb addl xor xlat loopne loop addl sbb sub mov andb and inc jmp lahf mov addl mov addl and mov addl cmp test addb add push addb andl lods sbb add add loope out jbe add addl adcb add call and addb and add shll loopne stos cmc adc addl mov addb andl outsb jge orb addl sbb clc out sub addl add lea mov ret pop cmp addl fmull test addl sbb jo addl or xchg outsl xor addl push jns xor mov addb addl mov addl cmp addl sahf xorb stos mov addl icebp inc fldl addl pop stos mov addb add rcr add jb addl addb lea jns jle repz add add enter adc xchg mov and xor xchg into addl addl and push pop addr16 mov addb add jae sahf adc mov addl repnz int sub addl iret jmp adc ds add addb add mov mov addb mov jmp mov addb popf sbb mov addl ret hlt xchg xor addl movsl mov jno sbb xchg in adc addb into arpl jp test aaa addl fdivs (bad) add addl test addl add gs cmpl and push mov filds addl jbe or in and add addl sti mov scas cmc addb addl fadds addb movsl lcall and and subl push jecxz icebp mov addl addb ss sahf addl add lods pop xchg adc pop orb add and mov subb add addl or addl repz cs addl mov addl mov roll add int3 rcll int addl adc (bad) js mov addl jae mov stos pushf out addl aad jbe jg or add add xchg mov cld rolb addl orb movsl in ljmp addl movsb jne sub add and addb and add pop addb addl and addb andl push and addb shrl add addl pushf addl subl lret imul addl leave or lods addl loope mov addl xchg dec out test adcb and addl in jg aam add dec addl addb daa push dec lret sub out addl subb jmp addl andb xchg cld aas loopne addl cmpl lea mov addl out loope addl addb jge movsl adc fmuls add add jl addb and andb adc scas cmpsb mov add or flds jge andl add lea inc jno mov addl push bound fdivrl sub lea addl add addb add sub cli adc and xorb xor addl scas mov andl addl (bad) add addl addb pop jmp mov sbbb add and xlat andb add addl or addl jp addl push mov addl addb mov xchg sti xor mov popf filds andl xor lahf out sub addb addl lock push (bad) fimull addl mov outsl xor or jns andb and and subl leave mov xchg addl pop pop fimuls sub addb insl push or addl add addl jg cld nop orl and jo xchg mov addl mov addl and dec stc push and addl fstpl sub addl out mov and addl faddl (bad) xlat push (bad) dec add add sahf dec inc push add (bad) add addl mov xor addl test addb and add xor jne addl mov fldl addl and (bad) cmp add addl xchg test jnp cmpl addl in test addl testb addl cmc push mov addl inc test cli loop addl out xor addl fildl in je add orl mov addl stos cld sarl test movb addl mov aad addb (bad) loop mov addb add pop pop inc push addl addb cmp pop jmp addb add mov scas and andb dec nop mov xchg push push sahf addl addl mov addl add shll repnz addl mov addl pop xchg push push cmpsl filds add addl inc popl test addl ja inc stc mov addb sbb addb aam jns addl addb adc addl jge pop je addb mov addb and sbb loope add addl test int3 jl addl sbb loopne sahf addl sbbl rol jl push aam addl jae cwtl mov and addl shl loopne arpl addb addl xchg pushf addl addl lahf xchg add faddl jg andb and and adc add shl dec scas or and addl addl or addl rorl andb add cmc jb roll cmp addl and jmp movzbl addl mov addl andb addl mov cmpsl subl addl mov adc addb add mov lods ljmp mov lods addl xchg cmp adc push lods pop add add int fldcw add cltd mov stos inc mov add pop xor loopne and addb and add jmp cmpsl cmc adc mov addl xchg adcl addl lret add cmpl (bad) cli in addl add jbe movnti mov addb addl loopne daa int3 adcl sbbl xor inc mov addl nop lea mov addb jge into nop mov adc xchg mov and addl into test mov addl addl xchg stos sti jmp stos lret sbb stos addb addl addl andl add adcb lods pushf addl addb fs lods xchg jge add add add aaa loop xchg arpl and andb sbb test addl sarb and xchg test pop cmp aad jecxz addb add scas xor mov add movsb lods test lcall dec add addb add inc add cmp push addb pusha xorb addl xor add addl mov movsl jge sbb and addb xor mov sub addl addl add and lahf xor mov addl int (bad) std mov addl mov (bad) mov xlat addl fists aaa add add xlat pop int in xor addl push addb addl fwait scas xlat addl addl fldl andb and and adcl jge jecxz addl addb jl cld mov sub andl shlb popl addl fwait mov out and add addl aas ss test addl adc push hlt mov addl mov addl mov addl and test out sub addb dec loop std addb add push mov test movsl cmpsl addb and lods mov pop js and addl sbb jno mov add addl pusha sbb add (bad) fiadds in fdivs add aam cwtl repz push aam out sahf addl xchg scas sti addb andl das mov push out add or adc add addl push cmp addl adc pusha scas sub addl and and in xchg shrl fwait ret addl in rolb push mov andb addl lret std cmp add addl sbb addl movsb mov gs xor adc addb addl addl icebp xor fiaddl addl sbbb sbb addb lret test pop dec aam add add daa add and int xor mov addl cmpsb push jae inc addl add scas lea addl xorb xor test addl addr16 push scas sahf add addb add xchg mov addl xorb add addl sahf mov out cmc nop mov addl aad je out addl addb xchg and addl ret decb addl xchg jl insl add orl addl adc add addl push add jmp sbb aam addb andl xorl adc addl jle les jne dec mov addl mov cmp adc sahf into rolb addl add mov addb push inc popa stos mov (bad) (bad) andb and and sbbl das and addb subl jge ficompl jb xor addb ffreep and cmc rorb add and aaa nop xchg mov addl call push addl and xchg mov addl mov addl addl lea mov addl adc push mov addb add popf in mov out and add mov aad or dec cwtl pop sub and addl sub cld andb addl sbb cmpsl ror xor addl call and addb and add scas inc aam addb movsb pop stc mov lock xor xchg pop cld addb andl mov push addl mov add addl addl adc lcall cltd addl sbbl mov add addl inc mov addb sar mov mov addb orl aad addl addb faddl addl mov stos cmpl addb addl pop std addl orl push mov lret addb add outsb addl addb pop test rcr sbb addl push jo inc and and mov add addb addl add addl add pop add ljmp addb add aas push mov sub icebp xchg sub addl lods pop lea add addb add loop int rolb addl xchg mov addb jnp and mov add addb scas loope stos and jmp addl addb push fisubrl addl int3 fists addl add and pop add addl mov addl mov andl orl mov orl addb mov mov jno andb addl js repnz mov faddl addl sbbl addl addl hlt scas popa fnsave add add pop adc andl pop int mov or mov addl repnz addl lret test jle es add addl mov rorl add xorl add addl call addl addl arpl stc movsl dec and addl add fcmovne addb add jle xor addl add push sahf jmp and addl xchg inc mov add addl pop xchg (bad) adc mov addl xchg and addb and add addl xor enter addb andl dec and addb mov push mov cmc dec adc addl add lret xchg int addl addl adc addl xchg add and adc addl int3 jo not pop daa cmpl sbb addl addb movsb int test inc addl rcll addb addl addl jge and sbb addl cmpb test addl addb in outsl imul add add test sub mov or addl jl xorl cwtl addl addl int pop addl add int3 lcall addl push or and roll addl out add addb add jmp or aad addl and adc addl mov outsb inc cld mov addl inc faddl and mov fiadds addl sub pop stc push flds add addl addl aam jp mov lret addl add lods jae pop xchg and imulb jmp addl sahf je or andl push and addb addl or addl xchg xchg andb and and sbbl sahf add pop addl addb mov addl lea addl push dec xor addl stos pop sbb mov and addl and cwtl mov addl mov addl fildl xor addl fdivrl scas addl push mov addl and lods mov addl jb xchg pop add add mov xchg addl or cmp std jne idivl addl test into ret push and addb and add lock nop addl movsl or fdivrl andb addl xchg int jmp add and addb (bad) push lock xchg add add xor mov addl lret cmp xor addl andl dec sub fdivr addl shrl test addl mov fwait mov addl rclb mov loop fimull add xorl addl sub xchg loop test addl mov mov addl xchg lret addb add jle xchg addl addb mov scas adc addl int mov std and andb cltd (bad) ljmp call addb addl mov mov inc out aaa jge addl add loopne ja addb add pushl cmp add inc insb lret repz insl jae mov and addl mov addl xorl jb jmp addl dec nop pop subb xor addl addb test and lods icebp lret xchg addl mov in or addl test into cld aad mov addl cmpsb loope addl add xchg and pop les addl sbbb and addl imul pop addb addl push lea enter sahf addl addl cld mov and subl gs pop lret addl addb addl add fldl jl icebp addb addl add addl aam xor addl and les addl mov addl andb addl or jmp mov addl xor cld aad test addl ss andl scas aad addb xorl jg fldl add add aad int mov outsb test add mov sahf xchg push add icebp jb add add add cmpb addl xlat les andl andl pop je add cmpl addl add jbe xchg cltd mov fcoml addb addl addl sbbl sub addb adc outsl addl scas movsl xchg sbb addb sbbl xor xchg addl addb subb addl xchg dec addb addl or ret mov addb loop mov addl lcall sti enter addb aam orl xor add add stos repnz and andb daa xchg js sub mov addl addl jo addl add aam fdivr pop push mov addl das and setg popl addb popf dec mov movsl add addb add cltd (bad) je movsl addl xor std xor addb (bad) cmc dec rorb addl addb pop loopne mov andl leave hlt aam jge lea addl adc jge xchg mov addl add and or and push mov mov addl or mov addb push fcomi fwait scas jo addl adc movl addl into rclb and addl mov (bad) rcrb pop addb addl jge addl addl lds les outsb and andb and and cmpl jl ds addb sbbl hlt mov inc shlb addl imul xorl andb add or mov addl and adc test xorb in jns dec xchg and addl es xor xchg addl std cmpsb sub sti sti push pushf mov addl cwtl push xchg out jle addl testl and addl fisttpl ja clc subb add mov mov flds add cmp and addb and add rorb addl loop popf jge faddl and jno data16 addb adc push jge lret add addl addl xorl ss addl xorl addl stc andl add addl fiadds addb xorl mov cmp addl jmp addl lea addl or pop xchg dec stos icebp sbbl addb sub pop xchg repnz add sahf adc out push addl addb loopne jns stos pop incl addl pop fdivs divb xchg fstl and fbstp std jp mov addb addl push lea add cmc filds addl loop mov mov addb arpl and addb add push mov mov addl andl (bad) pop cmpsb mov addb insb popf dec (bad) cmp je addl lret mov and addb pop and sbb addl shlb jae dec cmp addl lds mov addl addl lods mov addb cmpl xor inc lcall and xchg sbbb dec add add faddp mov pop pushf inc andb addl fstps arpl test addl xchg les mov addb ret mov mov and add lods pop mov xchg addl addb mov addl add enter add addl dec mov mov addl xchg cmp addl and and dec mov addl mov addl jo add andb addl movsl lock push ss int addl outsb xor sub dec cld incb addl addb cmpl and addl lea roll addl cmpb and sbb addl orl sub andl mov and jo inc test xchg not addl xor sbb andl andl or clc iret orb addb mov mov add addl stos cmp xchg addl sbbl repz addb sbb addl pop push mov jl addl fadd addl mov hlt cmp push pop int test addb or adc loop je subb addl mov addb addl pushf cmp mov addl lret cltd mov addl inc enter xor addl mov mov mov add xchg jb push arpl andl mov lods mov mov addb addl add dec sahf daa and andl add stos adc aam nop outsl addl mov mov add add or xchg add add addb add mov rolb addl es rolb addl mov addl addb fucomip addl addb in das stc in addb pop fnsave out jmp add and mov (bad) mov mov addl add or addb addl xchg iret xchg addl cs xchg clc (bad) push cmpsb pop add add mov sub and addl loope andl addl out pop fimuls addl lods pop jg mov and xorl sbb and xchg mov stos sahf addl add jle add inc push addb addl push add addl sahf stc bt addl and outsb popl add or push jl xchg in addl xor mov addl addb add sahf inc jne add filds add les add add sub pop (bad) jecxz addl or push and les addl negl mov add test mov adc addb cmpsl ja inc pop sbb (bad) and addl lds mov addb jp into sbb addl xchg ret rolb addl adc addb push in fistpll mov add addl adc addl addb into popf rorl addb cmpl fiaddl addb lods mov sahf xchg test fldl addl push mov movl addl cmpb jne rolb addl andl sbb xchg in addb add and rol jno sub or addl aad loope sub addl out xchg imull andl addl hlt inc or cltd test add addb addl addr16 mov andl add adc addl (bad) and jmp rcll addl aad sbb add add push sbb lods rolb mov or leave dec push push adcb addb sbb jmp or add addb vandps mov addl addl mov addl sub and add addl imul addl sub addl add mov addl xor mov addl addb mov sub add rolb addl mov addl aad adc add addl andl xorb lahf pop addl addb adc cmp subb and subl mov add and or test and addl mov addl and mov lds test xorb je call and sbb sbb addl lea enter jmp pop lods addb add jo daa addb addl jnp lods test addl dec ror xor nop imul add addl xchg mov mov addb mov mov int3 and addb and add cmpsb xor mov jb (bad) pop mov add pop inc push addb andl jae sbb mov addl cmpl add in aas jb mov adc fdivl sbb addl xorl xchg addl sbb rolb and mov addl outsl out mov andb addl mov addl addb jmp fnsave repz lahf pop addl or clc mov addb addl addb cltd imul mov out mov addl addb pop mov addl fnstsw stos cmp addb add xchg lods mov not gs and andb lods xchg mov add andl andl add adc or add addl sbbb pop mov addl andb shlb add addl daa test sub addl sbbl or leave lods fsubr or and addl mov enter addl clc and filds and ret add pop push in pop addl pop add add test mov mov jp leave cmpsl ret add addl push addb addl rcl faddl cld pop addl mov cld mov dec add add push ja push stos add sbb and addl xor cmpsb cmp addl pop sahf test roll stos movsl addl addl outsl lret icebp mov and orl cmp xchg cld mov mov and addl decb add addl icebp mov addb addl push inc push mov add addl xor stos addl and push mov lock int lods mov addl mov addl insb addl sbbl addl inc mov pop push cmpb addl mov addl add add mov and addl mov cmpsl mov dec pop or addl push cmp mov addb inc repz pop xorl and addb and add andl sub addb js mov fimuls addl xor ja sbb and addb or cmpb add addl pop push mov addl lods jb mov addb jmp xor mov or roll and and jae add addl addb (bad) add sti pop (bad) out mov addl or and xor paddd addb inc ret (bad) loope icebp xchg popa xor addl test add addl or les repnz addl adcl sahf shrl push inc inc addb add out jp pop xchg lods lahf and addl mov push addb add mov mov addl lods lea xor sub add add scas stos cli int3 test sahf mov roll add test addl test pusha dec neg addl out fldl stos movsl pop mov add addl push in outsl addl addl mov hlt movsl and addl aas cmp addl add jb add addl push addl sub stos mov dec movsl fmull addl add and (bad) leave addb addl and call addl subl pop push jl lods jno mov das sti sbb addl adcb cld mov mov addl or fstps xchg addb addl pop adcl addb pop jg xchg jmp xor sahf mov and addl inc push addl addb fadds andl mov stos addb addl sbb shll push add addl nop jo mov cwtl addl and sahf cmp cs jmp mov addl mov addl xor addl or lret mov addl lret je (bad) mov addb add cmp adcl addl add lret cmpsb loopne in xchg test add add lahf jge scas mov add addl sahf rorl repz mov addb push adc call mov and popa in jno mov xchg addl jecxz or test and pop addl addl test enter jmp adc test add aas mov lods mov addl data16 addb movsb and pop addl movsl jns cld jl frstor addb mov jno add loope subl and addl sub jbe leave addl addb stos fcoml cld cmpsb inc xchg addl xor addl orb cli orl mov mov addb add test xor addl addb mov push repz test addl fstl and andb je ror cmpsb fwait jns sub addl lea mov add imul addl cmpb addb add dec push shlb mov add cmp arpl add addl mov addl cmpsl add stc pushf and addl mov addl mov addl addb adc add addl cld lahf orl ss popf add add xor add addl push repnz mov addl out mov sbb mov and sbb test outsb pushf inc add add stc jp xchg out andb addl jmp js ja call addl enter addl cld mov je in jecxz andb and and subl jnp nop mov fildl addb subl cld dec mov mov addl fldcw add and addl addl push orl addl ljmp xor add jl outsb or addl addl xchg je addl shrb mov addl (bad) push aas add (bad) daa addb xorl adcl addl lock pop mov addl sbbb xchg in mov push sub in mov addb testb dec and addb and add push repnz mov addl jecxz lahf mov addl scas and clc mulb add or inc push fldl add addl add lock addl dec addl cmp add jno and cltd jb loopne addl xchg or addl psllw arpl cmp add addl and mov movsl std push in lea addl shlb inc mov xlat pop addl andl pusha test imul addl add es mov addl xor leave movups addb add jg fstl xchg lcall inc and andb call xchg iret int3 mov add addb addl xor mov lock push addl add addl addl add addl addr16 outsl gs cmp movsb addb add add subl xorb test xlat rclb addl mov lea mov addl dec jae sarb pop leave addl addb test xchg addl add addl test jne sti jne mov addl cmpb addb addl add addl cmc stos push stos stos cmp add add adc dec push xor pop push andb addl inc bound xchg push mov addl adc addl (bad) icebp or andb and and orl xchg fistpll and addl fadds andl ljmp addb addl repnz lea xchg adc addl hlt mov sub add pop mov add addl andb addl jle stos outsl add jnp addl sub sub addb add leave addb adcl adcl and addl loope addr16 jg insb add addl pop in xor addl hlt mov aaa adc cmp pushf xchg push pusha ds and addb and add iret sahf mov addl std paddw addb andl and and addb loopne js mov or lcall add pop adc addb addl fsub addl adcl jle into addl daa fsubrs or addb and dec mov int3 addl pop xchg rcr mov addl addl add inc inc lret addb addl addb imul (bad) push dec dec xchg push addb add stos inc cmc fiaddl addl mov add add push leave push cmc cwtl sbb andl ljmp out lds addl addl shll adc mov cltd addl add cwtl mov push and jns addb add (bad) push cmpsl insb addb addl sub roll add addl dec fldl addb addb dec adc test jne int addl loope xor faddl cmp inc pushf jecxz addl inc movsb and add addl addl in xchg fdivrs addl xchg sbb call xchg xchg add addl addb mov in xchg movsl je push addl push push ret xorb add cltd sahf mov and andb addl ss ss rcl addb addl addl addl or cmp mov and sub subl addb cmpl add addb sbb mov add and test addl xorb addl and push jl mov xchg add and lret adc aam lods jo in addl subl das pushf addl sub addl xchg mov adc mov addb xorl add jle or addl or add cmpl addl or jge lds test and addb and add adc addl test addl and xchg cmpsl pushf fnstcw mov addl cmc pop in add addl enter add leave push jl rol adcb imul addl mov addl in lock popa je lcall add leave or cmp addl movsl ja xchg inc stc test addl addb hlt xor push addl adc addb addl jb insl push inc addl andl jle dec outsl pop mov adc addl scas addl addl addb or lret xchg movb add push test mov and andb sahf insl lock cli jge add addb addl inc jmp fcoms addb add ficoms push jbe addb add pop lcall aad mov addl negl out push push add addl in xlat outsb addl addl jne and addl popa inc int adc addl addb push andl test test dec addl lea adc add and call mov addl (bad) and addb or aam push gs push xchg addl cmpsl jno push je loope addl int3 call addl mov addb addl cmp addl jecxz das inc xchg inc in cwtl cmpsl mov int andb and and subl std xor andl into icebp add jl scas and icebp pop xchg addl add fistl add and xor mov andb add insl dec adcl aam addl and aaa add lea addl mov addl xlat stc cmc cld clc addl xorl addl (bad) (bad) cmp sbb addb add faddl add add ror add add inc orl mov in add addl dec sahf call addl mov add mov addl sar je addb andl bound or repnz add addl int stc sahf mov add addl cwtl popa addl xorl add mov xchg addb lock mov xor xorl addl addb sub mov add and ja jge fildl addl jae iret (bad) sbb addl cmp sahf nop addl sbb aad jmp addl addl mov ljmp addl add add xchg inc sahf push out and andb lcall (bad) xchg addl addl xchg push addl add xchg mov xchg les addl mov (bad) cld sub addl inc cwtl sub add addl mov inc mov push addl or mov and addl or mov addl addb addl addb hlt addl es sbb add mov jmp mov push sbb mov addl int3 addl add (bad) out and ror addb andl sbbl xacquire addl rorb je jns jle and addl mov mov addb addl mov lea addl pusha fildl addb andl test sub dec pop add andl popf scas (bad) mov addb sbb fnstsw addl cmp addl je,pn hlt mov xorl add xlat (bad) gs (bad) mov addl mov addl or addl add addl insl inc loop roll addl test addl addr16 andl addl pop mov addl adcb mov addb xchg addb and add (bad) sarb addb jno mov pusha xlat inc jbe or andl andl push jl or jge add cmpl arpl nop (bad) adcb add addl dec icebp bound addl daa divb addb shl xor mov xor addl mov addb mov addl jnp xor movsb mov fsubrl addb ja jnp cmp addl repz lret cld dec aas push mov mov rolb addb addl test addl sbb addl push mov add (bad) sub lods imul addb add rcll andl cld or lea push add addb addl add and dec rorl addl add jle cmp addl fwait push mov addl mov inc mov arpl addb add ds mov outsb movsl addl subl push fstl mov addb pusha lret popa repnz addl mov jecxz jecxz dec cwtl addl addb lcall or addl xchg push mov addl pop cmc push add addl add addl popa subl xchg fldt addl in inc inc add add loopne andb addl loopne aad les addl (bad) xor mov add addl and adcl enter (bad) arpl and andl enter adc addl scas xor pop (bad) jl addb addl test adc xchg sbbl and or in dec addl and dec mov addl mov addl xchg inc test lret addl out fdivrs lahf addl loope push addb add mov addl add arpl add add cmp mov addl addr16 cwtl mov mov addb mov stos lods xchg or and addb and add lea test push addl jle (bad) sahf cmpb addl cmp and addb test adc add addl int3 loope popl addl mov addl sbb cmp cmp xchg adc add and adc nop out sub addl xchg add andb addl (bad) mov xor mov addl xor addl or addb addl test addb and nop mov inc pop adc addl or push cmp add inc insl leave mov push addb add out outsl inc push inc dec jnp cmc (bad) cmpl andl mov push jmp nop addl addl outsl push fidivl sbb fildl addl mov addl in faddl mov add xor jle mov add addb add aas xchg jge pop popa movsb inc pop add xorb les test jae and addl jle xchg add addb cmp jne addl addb inc fists in orl sti addl adc fildll addl add and sbb add addl cltd jns roll add sub adc cmpsb addl jp xchg fs add add jl fnsave and addl jnp mov addl stos inc fsubrp fistps addl scas mov xchg addb and and sbbl sbb cmp addb adc jne jnp lea imul and addl imul andl mov xlat lods aas shrl addl mov addl movsb cmc mov addl mov addl push iret adc nop lret addl xor mov sub addl pop je cld pop fcmovne addb add or movsl je addl bound repz add lods sbb sbb add add addl inc add addb jl out jmp addb and add scas lahf cli rorb pop setbe addl fmull addl rcrb add and addb mov push cmc test mov addl push loop xchg mov mov addl outsl inc mov add xor xor and dec and daa addl std mov addl shlb mov add subl andb addl xor add jl aad push addb addl mov addb push push pop xor ss addl addl jle addl push lea xor addl push into jae leave sub ret ret and andb push cld cmp mov add sbb mov andl add fnstcw std popf sbb mov addl stos jle orb add cmpsb shlb add addb add (bad) out inc ljmp addl mov sbb (bad) and addl or mov addl nop movsl je test addl addb pop clc cli mov addl cld test push mov addb and pop notl addl mov mov jge orl addb sbb addl movsb and addl andl sub cmp andl mov inc add add orl addl addl orb outsl lock and addl push addb addl shl out push addl int add and jo leave push test push mov and push mov sub and push sub mov addl mov addl addl adcl mov addl addl fs add add inc and add adc mov inc add addl (bad) jle add stos icebp push cwtl and int3 jg add add cmpsb push adc addb out push outsb dec int3 jp add push addl ss jae add subl add mov pop add addl sbb addl addb xorl test addl mov mov stc adc addl lds push addb sbb addl addb xchg js pop cwtl addl int jae inc push lea addb addl addl andl scas or addl addl daa (bad) xchg addl addb cmpsb mov jecxz fbstp cltd push add add sti cli jp scas mov and dec aas cmp addb addl stos jo stos addl add loopne push or sbb lcall add add add fistl dec inc addl inc mov mov jmp addb add jo sbb addl out lods nop dec and addl addl testb addl addb ret addb cwtl add jae lock jns rcll add and orl xorl or xchg addl add nop fldl and cmpl adc sub addl push rcrb cmpsl mov jmp andb addl ret (bad) das test addb addl nop addl addl addl and orl xorl andl cmp jne jb addb subl call addl cmp jns push ds addl mov stc lea and mov mov mov addl mov addl call addl leave orl addl cmc lea addl sbb push or addb or cmpl and addl mov subb sub addl or mov leave mov addb cmpl push cltd and addb and add stos push gs das addl out cld leave or mov andl andl test add addl fcompl jge xchg or addl add add jne mov addl sub popa addl sbb or addb cmp (bad) repz (bad) arpl pop sahf addl daa sbb mov adc addl jp in add ret addl addb adcl int3 addl or or into ret addl or xor pop or push les addl or add sbbb push dec push xchg pop ret add addl addb add fiaddl sbb addl push jns addl addl test int andl add test fsubl addl movsl dec test daa lahf dec addl xor addb add stos cli jp cmpsb addl sbbl sahf and addl pop repnz mov addl sub addl fs shl cmp addb out or addl add and clc cmp mov mov addl insb testl addl add sbb mov test addl addb mov fnsave xchg andb addl lds jne call addl int mov xor add addl mov and addl xchg mov and addl lcall and and in cs addb addl cmp add addl jl mov addl and jb in in into mov addl mov addl mov sbb addl in les addb pop and popl addl mov stc or add dec rcrb pop add add xchg dec sbb mov add addl aam addl cmpsb cwtl int add add or or pop ja xchg dec addl dec test addb andl decb and addb adc int das insb add addl pop mov addl addl xchg addb jnp adc add lret insl xchg addl sub inc movsb pop or addl (bad) movsb push test lods (bad) push dec addl push repz or addl addb and mov addl dec in fisttps int addb addl sarb addl addb add icebp cmpsb mov addl addb xor and add addl jae fs sbbb andl nop enter cld and sbb out addl addl hlt adc test scas addl add stos push xchg orl addl test stos (bad) pop and addl and mov lcall add cwtl stos lahf cwtl addl andl addl sub addl push add addl addb mov and addl xchg addl in and push pop fildl mov addl xchg pop sub lea addl add mov fcmovnu addl pop adc rolb addl pop mov or andl call add xorl pop lahf add addl addl cs iret int andb and and addl daa inc test movsl or addl addb clc test mov addb addr16 addb addl add fidivl sub addl xchg jge movsb addl and shll aaa jnp add addl sub addl addl addl sahf nop inc xchg hlt xchg addl outsb rcrl jp addl mov mov dec add add pushf mov stc xor addl sbb cmp fdivl addl lcall jne xchg sbb add add (bad) ret addl sub insl lcall and push adc in test cmp and addb out into jge sbb mov addl test mov fistl adc addl mov addl addl sub xchg jnp mov addl cwtl or addl lods sbbb xor add addl orl sbb addl xchg std enter jg addb addl xchg lcall addl test cld lcall add orb add xchg aad sub addl addb add mov add addl add push mov addb in addl addl aad pop cmc addl add cld sbb pop add addl jae sbb addl outsb ror scas cmpsb orb and orb add jno fwait (bad) in notb clc jl addl add scas push dec and addl addl movsl int3 dec jnp xor addl addb mov scas daa addl or xor mov addb and ljmp addl adc repnz mov fwait addl add cmpsb adc add push push cmpsb or addl mov andb addl out dec addb addl adc nop fdivl addl bound nop sbb push mov and addl mov call cmp and addl popf orb sbbl subl outsb mov cli addb addl xor mov xor addl (bad) jno dec lahf std pop pop addl and les sub dec adc xorb orl add in pop nop addl or cmp addl push cmp stc shlb addl mov sub sub mov rcl addb andl add jle divb inc jne test addl or faddl add mov addb in je and addb and add jb adc mov test addb cwtl jmp sbb sbb addl and and pop fiadds or addl (bad) jecxz (bad) cld xor addl add insb xchg mov addl inc test addb stc addl and ret sbb addl jne outsb sub addl mov test addl pop lock insl adc addl pop cmc add adc add jge and addl cmp out jl addl addl and addl sbb xor addb add mov inc sub addl push aad cmpsb push dec addl addl or and fdivp xchg add sbb sahf testl (bad) ficoms subl add sbb test pop (bad) add addb add gs imul addl js fs addl sub addl addl hlt fucomi xchg inc addl addb mov addl inc cmpb fwait addl sbb addl outsb and outsl stos arpl xchg addl add shl sbb addl andl mov in add addl xor push call addl lret xor add orl incb addb cwtl test and cmp jge xchg addl addb sbb addb cmp dec lods xchg stos addb addl call cld dec leave add addl roll andl pop or addl mov addl addl sbbl pop cmpsl cli xchg add addb hlt cmpsb lcall addl and ja subb lds add add (bad) aas add add imul add addl xchg (bad) fnstenv add stc xchg or jne add add leave mov addl sub xchg fadd mov addb andl mov les add cmpl add movsb mov cmpsb and jmp addl xchg dec pop addl sbbl aad sbb addb jge lea mov pop addl test test jle addb sbbl jnp les addl addb inc push stos repnz addl test addb addl addl orl push xor andb addl addl (bad) addr16 push iret or addl addb outsb add push inc stc addb add xorb (bad) and andb aad stos sbb xchg addl pop or pop lcall add int xchg in addl stos cmpl add repz test pop repnz addb add iret stos push push mov ficoms addb call faddp mov test fsubr and addl mov addl test popf pop pushf int3 addl addb xor addl push and lock fstpt inc add addl sbb aad sbb addl cmpsb addl (bad) stos clc xchg movsb shlb addl addb mov sti iret jge xor inc andb addl sbb fbstp cmp addl xor addl addl in push mov andb and and addl pop scas stos std add and push ret test cmp andl fiadds cmp shlb addl popa call add addl addl and mov leave fldl xorb popa fistps addl xorl addl or addl test addl add sbb add add add mov test addl xchg inc sub mov addb incl xor and addb and add and adc push addl ds sbb addl jl sbb addb or add addl addl cmpl add addl fprem1 addb addl cwtl orb addl and and stos and andb addl test add andl addl aad test addl inc adc in movsl mov addl subl mov cmc jb addb add jb lret jle or addl addb imul addb add divb add lea or and andb movsl (bad) out movsb addl addl jb out addl add sbb cli out addl sub and mov addl adc add addb add lahf pop daa addl subl addb inc adc addl addb movsb sbbb xor movl das clc popa int3 enter mov addb xor inc insl addl push xlat jbe or push add addl sub jae addb and test pop jge addb andl addl jne repnz addl enter out and addl mov sbb addl sarb add addl mov and xor push sub fldl addl nop or xlat cmp andl mov pop jl addb addl sti dec ds add addl addl and adc adc mov addl or addl and stc int3 les mov addl or decb jns addl add addl jge bound mov mov and addl sbbl addl xorb cmc mov add repz call add cmpsb xor mov addl mov addb andl addb add andl xlat add addl mov sub add hlt adc cltd addl xor in mov sbb cmpsl test and and jp addl mov lds addl mov or addb or xchg push js mov sbb addl sbb cmpsl add add outsl xor gs testb addb inc cmc jns repnz testb add add jo test addl xor pop and add fadds addl xlat sub hlt cld jle addl addl or inc mov add mov addl scas out std out and add xor les cltd mov add addl loope or addl addl and addl addl sbb add and addb jbe scas (bad) outsb addl pop int repnz cs out jle add addl addl loopne fisttps push dec addl xlat mov xor mov addl iret icebp mov andl and addl or mov das addl addl mov mov mov mov and xor mov push sbb addl addb loopne cmpsl aaa xchg test andl stc imul add and jge pop or lds and shlb inc addl and mov or mov mov mov addl jle es andb addl sbb mov or addl jbe stos cwtl sbb addb add rolb add dec ficomps add add cmp popa xor adc outsb add addl lret and addb sbb test add add and (bad) mov addb mov cmpl addl cmc mov add adcl add addl push addl adc or addb (bad) adc addb scas enter mov dec in dec adc pop addl sbb cmp and addl iret adc and addl cmpsb addl xor adc addb addl out mov addl aam and jle addl addl dec (bad) movb addl addb add xor add andl into enter mov addl addl mov jg and addb add cld jo jmp aaa addl lret add imul xchg sahf addl nop stos sbbl add addl addl sbbl pop cmc adcb and addl addl fucomp inc daa filds and test mov jp addb mov jecxz test (bad) pop addl cmc imul inc lock addl fisubrl addl cmp outsl out mov in daa addl mov add add adcb addl xor cmp addl push test addl cwtl fidivrs dec mov and addl int loopne cmpsl sbb inc addl addb into jnp stos mov addl mov addl je fs addl add aaa decb mov addl and mov addl mov addl test addl out mov inc push mov addl xor addl cmc cli (bad) xchg inc mov addb addl into or popl and addl fneni(8087 rorb dec loop xorb add lods or mov xchg mov addl inc dec cmpsb cld shrl mov addb and add mov addl mov sub les mov addl mov addl add addl stc xchg test addb addl and addl add sbb leave adc xor and movsl jb ljmp addb dec ja and and addl addl addb inc stc xorb call addl lahf jle scas jb inc addb addl jns addl adcl std push rclb add addb ja addl adc (bad) add add add stos and andl fdivrs mov mov leave addl addl mov mov and test add arpl addl jle jbe lods ret das test addl xorl add addl addl sbbl hlt leave repz and addl addb add xchg and inc lock xchg (bad) out addl or addl add and push add addl addl add loopne int3 in (bad) addl aad or in add add xchg leave jb jb sub and addl les addl je js addl addl cli mov mov andb and and adcl cmp push out mov mov and addl movsl sub sti addl add test add and dec mov lock add addl xchg adc lds or addl fwait lret addb mov addl mov addl addl xchg add aam adc addl movsl lret or out mov addl hlt repz add mov dec sbb xchg idiv hlt movb add bound addl call add addl test js inc mov addb fsts mov and addb and add jecxz cmp jmp or add jae jns push int addb andl loope add xorl addb addl xchg jge mov mov add in push fwait cltd xchg addb out cmc sbb xor cmp addb lahf (bad) fucomi pop inc addl ret and ret addl mov jne jle addl addb mov addl addl addl sbb mov push lea addl addl aam shl addb add or add popf rorl outsl addb add (bad) jp testl xor and jmp push adc pop addl addl lea popa mov stc or andl add fmull add addl mov push addl rcrb xor mov add addl jmp addl sbb fstps (bad) call addl (bad) cmp add addb fs repz addl addb movsb or or addl sbb rolb add or stc int adc out add addl or addl inc jle addl xor add add stos sub dec cmpsb sbb push andb addl xor addl inc xchg test push incb addl mov imul and and sbbl lea (bad) lret mov addl addb or addl xor cmp addl sbb add addl jne xlat xor andb and dec imul ljmp xorb in jecxz addl orl adc addb addb addl push insb mov fsub addb subl sub addb and addl dec cmc pop dec add addl xor mov mov addb cmp xchg cmpsl and addb and add jmp test add mov addl and sbb test das sub and addb sub cltd and add popa out xchg call addl (bad) and jno mov addb xchg cli roll add and fimuls sti addl rcll addl stos addb mov int imul addb inc jb adcl addl and mov shr gs addb addl or addb popa clc roll addl addb fdivl addl addb cld cwtl cmp insl sahf addb add lcall andl ljmp lret sbb mov add addb addl xchg sub addb add mov add mov addl mov dec orl addl push repz add addb add sbb pop xchg lea inc sub addl loopne clc sub addl es dec inc hlt mov addl fdivl mov cld aaa addl addb fadds addl cmp mov add and mov xchg xchg test addl mov mov addl add xorl addl andb add add jns sbb (bad) rolb andl cmpsl shlb add sbbl int addl addl inc std dec addl and and adc imul addl addb (bad) cwtl mov adc addl das xor addl add addl inc xchg loope int3 sbb addl and popf aad clc pop mov test mov addl addl sbb and addl mov addl cmc and addl push xchg mov and addl imul push inc sarb addl subb jae xor inc mov addb or jg lds add add test addl dec adc addb andl mov and fsubrl add sbbl or addl add xor lcall addl sbbl les addb jp pop or and fs addl addr16 sahf pop cltd adc push andb addl pop addl addb adc or popa addl cmp mov push in aam addl orb test jno or hlt movsl addb addl sub addb add scas xor nop mov addl or add add mov and andb enter jb clc pop addl addl xchg icebp mov sbbl add rcr bound addl sbb mov addl out stos dec xchg lcall add mov addb lea faddl insl rorb addl int3 roll addl and aad shlb sti arpl and testb addl ret mov add mov insl add addl fidivrl mov fadds addb sbbl inc add stos addl leave mov add add pcmpgtb andl movsl jns je add orl dec mov addl mov andb and and addl mov addb andl ja lahf mov outsl addl add xor addl add jmp addl xor stos push lcall andb and jmp add addl ds or addl xorl cmpl addl adcb addl addb sbbl add add sub icebp cmc inc subl addl cmp fnsave addl pop test fcomps mov and decl add xchg sbb mov addl jbe pop leave addb andl out add adcl add addl lret mov addl cmp fstl addb inc addl add and cld (bad) inc addl lods icebp mov addb orl filds addl addl fdivr and sub outsl addb addl addl addl not adcl add xorb fwait dec outsl addl addb mov mov (bad) pusha fwait das cwtl faddl addl adc frstor addl pushf sub orb addl addl or adc addl add int paddsw out addl js and addl dec aas sub pop add addb add inc lea or addl fwait repz sahf or addl xchg rcr sbbl sbbl addl addb mov addl pop mov cmp addl (bad) cmp ds and mov addl or addb aaa mov pop lret addl sub add addl push cwtl shlb cwtl andb addl push inc dec addb addl cli sub mov add addl es lods mov mov and subl mov xchg and shlb addl add adc add and incl mov arpl add addl sahf adc and mov dec mov addl mov addl adc addl orl addl and addl mov in sub test add jmp and addl (bad) (bad) cmpsl push ljmp add addl (bad) lods sub mov ljmp add mov fwait inc xchg ljmp es and addb and add stc roll and addl mov int stc clc mov addl lds std mov addb xchg pop adc xchg mov addl add pop pushf mov addl addl orl push xchg mov addl mov stc pop (bad) cmp xor xor mov addl cmc fdivr dec and addl test enter addb vpunpcklqdq addl fimull pop xchg cmp addl sub push adc addb or jns or addb add jno je inc adc addl addb es xchg stc mov adc add addl mov mov and andb in cmp mov add addb addl mov addl in fwait jbe arpl addl addb addl jb nop add addb add or inc lcall addl stc subl addl xchg and (bad) nop mov addl andl addb cmpsb mul inc addl roll sahf (bad) jecxz adc aam addl add and (bad) push adc hlt jg lea mov addl cwtl hlt or xchg andb addb mov adc and mov and pop sahf add add (bad) mov fsubl addl mov loope or addl addl xor addb push inc jp ss and subl xchg fsubrl andl lcall mov addl add int push mov or addb addl inc cmpsb mov addl cmpsl int addl and jns lods push mov xorb mov inc add addl addl addl mov addl cli mov addl or mov mov add cmp addl orb xchg sbb sahf int mov addb mov add add fsubrl sub add or xor leave sub and dec mov pusha (bad) push popa jge mov addb in les loop movsb leave js add addl shl addl xchg or roll addl mov outsl aad push test addb mov incl addl lock rclb addl incl (bad) rcr addl addb and addl sbb jmp adc addl push xor adc addl out nop iret fbstp mov addl and imul sbb fadd int addl addb sbb mov addb add int3 fwait jmp mov addl daa jecxz inc iret (bad) xchg shrb add push test adc andl add sbb in fldl addl movsl addl addl and std flds add add sbb or xchg jl sahf addl cmpl addl inc das jle xor mov addl pop sub add addl addl into aas jo cwtl popf xor addb and into jb cld fwait lds add addl fwait jle addl add sbb addb andl cmpl sahf adc loope arpl addl jbe pop pop dec scas push hlt andb addl mov or sti fnstsw addl or mov addl addl cld call pop xchg xchg mov and sbbl addl addb addl add filds addl daa sbb and push inc adc xchg addl and pushl ror pop mov addl mov addl mov decl andb addl in sub addb mov cmpsl inc stc (bad) mov addl pop jo insl mov mov addb adc movsl sub mov add add aam popf notl mov dec add addl imul add sub pop add addb and add cltd stc or fdivrl add lods inc das aad nop inc cmp addb andl mov and addb jns imul addl adc cmp addl addb xchg sahf movsl jmp mov add addl push sbb aam addl mov popa mov addl je sbbl sbb mov addb stc push andb roll addl jmp dec dec or aas addb addl iret rcrb addb aam ss (bad) addl addl arpl (bad) das jmp addl jnp hlt xchg movsb pop lahf addb add les mov addl pop cwtl out sub add addb addl sub addb add xchg (bad) mov addb add mov lret addl push cmp ljmp cmc int add addb add mov rcrb pop ret addl and fs addl jmp jmp es mov addl cli mov addl addb pushf test shl ds shll addl bound adc addb and mov inc add addl out dec pop test addb add xorl addb addl xchg iret pop insl test addl das leave andb addl jle (bad) repnz add addl add addl je mov and and addl sbb addb orl fists jecxz addl add in add and inc mov andb add add aaa sbb addl and mov or add addl inc adcb and fwait (bad) cwtl push daa cmp addl daa dec test pop mov jb addl xor jmp addl mov inc push mov add sub dec add addl dec jno repnz addl and ds inc les add add fwait cld repnz nop pop dec inc mov push outsl pop addb andl jae add cmpl add addl fidivs mov add mov fucomi addl adcl addl out in add jge addl repnz and sub addb xorl mov addl addl lods pop mov and push add addl rolb out addl subl roll add addb aam add addb mov ja pop cli addb add rolb xchg loop andl andb psubsb sub add test inc loopne fisubs addl int call addl popl addl push orb aas lea add add mov sub addb xchg xchg or jne out and addl mov add addl addb dec push addl addb jbe idivl (bad) mov addl (bad) dec mov addl cmc adc mov push stos add addl ret decb into out addl add sbb add outsl sahf or nop add add and xchg jne faddl andl stos loope sbb les addl cwtl mov addb jbe mov xchg cmc movsl pop nop mov and or dec cld dec jl or addb andl adc int addb cmpl adc addb addl and xlat add and lods adcl addl mov addl mov addl xchg jo addl out in jae addl lret xchg sahf adc addl test stos int3 addb cmpl fwait rorl and addl add popl addl add inc xlat int adc stos stos add addl add adc add mov addb xchg (bad) dec xchg or addl test sub inc dec into and addb jmp xchg xchg xlat out push pop pop add addl or insl addl adcl jle addl sub jge push push addl pop je addl pusha add pop addl sub or and addl addb pop test cmp addl mov dec in pop addb addl xchg mov addl and addl stc ror in into cmpsb and add dec movsl decl icebp mov add addl pop outsb and andb add pop mov mov add add push andl add jbe ss imul add add sub sbb jge addl aas (bad) adc cmp add addb add shr adc addl adc stos fwait shrl addl jo mov push cmp sub addb sahf push hlt mov andl mov jo filds addl inc into test add and shlb addb lods and clc addl add add mov add or in xor mov xor addl subb call addl adc aad addb addl orb xchg in addl addl and mov and addl addb sbb nop int3 or les addl daa xor addl cwtl mov xchg test mov addl (bad) leave std sbb push jmp andb and cmp mov addl mov addl cwtl cmpsl addl sbbl addl sub mov mov addl add mov dec addb cmpl and addl xor push js mov addl orb xchg xchg mov addb mov fildl add div cli mov xor add int xor repnz pop lret addb andl movaps addb scas ljmp mov addb addl inc pop cltd stc addl sbbl add or into xchg loopne cmp addl and mov addb mov shrl addb adcl mov addl addb adc sub andb addl jb addl addb les icebp addl and sarl out pop mov pop incl addl orb repnz addl addb mov mov xor addb add inc aam adc and mov xor add addb addl loop loope les jbe dec addl add jo mov addl mov lods addl scas (bad) sub add addb add push xchg addb add lret xchg sahf and addl enter addl adc adc jmp addl addb js hlt fstl addl adcb jmp addl xchg mov addl xor and addb aas xchg addb addl cmpl add mov mov and addl push stc cmpsl addb addl cwtl inc mov (bad) roll addb mov and addl xchg sub sbb and addl sbb xchg into push addl add adcl add and out adc addl shrl mov xor addl es mov addl mov addl addl int3 fdivr add (bad) addl cwtl je mov mov addb add adc jl frstor addl in aas xor add je dec int addl addb xlat fdivl addl sbbb and addb and add fcomip ror addl inc mov sub addl fiadds stc mov fcompl (bad) and addb jno or test addl add inc mov aad into addl xorl addb mov movsl inc adcb add and adcb sti (bad) fmull push addl cwtl jns add xor lods insl add addb adcl fldl lods addl addb pop stos andl addl sub addb addl addl and (bad) loop mov addb add jmp addl addb add addb add aam cmp dec iret mov and andl js (bad) jmp pop add add inc shrl aam lds add cwtl imul add add test mov addl cwtl ror mov add addl inc icebp mov add xorb xchg adc addl jge jge add mov mov addl lods inc add push mov and cmp sahf and addb xchg mov jo orb addl add and sbb mov jb mov addl nop loope enter push addl add lahf xchg int3 mov jmp adc and addb andl orl lods pop mov imul mov adcl andl dec outsl or add andl lods lds fldl addb mov add iret fisubrl andb and and or push mov rcr xchg push push das hlt out addb addl add orb addl xor mov addb addl dec fstpl mov addl mov addl and das gs leave xchg jl,pt andl mov addl xchg sahf popf pushf stos addl adc in and addb cmp test addl mov addl pop daa mov add add nop fdivr (bad) push add addl popf scas jb addl fldenv data16 jge and addb and add cmp das jle addl mov loope jne addl and dec sar andb addb xrelease pop inc sbbl addb addl addl cmpl jne lret dec sub add clc xor enter stos xchg addl xchg mov addl icebp test and addl addl addb mov lea addl loopne and addb addl xor ds addl addl xchg jne repnz sub dec inc add addb add lods jg lcall addl add add inc jb in aad addl jp aam push push push addl addl mov mov faddl add and std movsl adcb out addl mov mov addl xchg repz and addl popf addb addb scas add movsb xchg and addl inc xchg addl addb pusha cmc (bad) popl and pop mov jo addl sbb (bad) mov add cmpl addl push ja push push addl add addl addl mov cmp add mov add imulb loope mov xchg andb addl sti out add adcl addl addl and adcl mov lea cmc addl addb jecxz addb sbbl lcall addl add addl (bad) fidivrl addl mov addl mov addl and in stos (bad) xchg cmpsl addl xor fldt addl addl jns addb sbbl cmpsl les jnp add add or in mov add adc in dec mov addb jmp repz sbb and addb and add les addl sbb addl int3 push addl sub inc mov aas xchg stos add addl addb addl jbe inc mov addb popa jb rcl addb movsb orb push addl mov roll and addl outsl adc addb cli xchg (bad) repz movsl stc xor addl movb and addl ds (bad) int jp icebp addl adcl arpl sub mov sahf stc testl mov rcrb dec lahf arpl hlt push addl addb mov addl add addb add pop or andl iret outsb mov int3 fisttpl test mov mov add addl inc addl add call sbb jge addl sub addl popf lock ret movsb rolb add addl adcb test addl add and addl cmpsb mov addl mov add addl rolb addl idivl xchg xchg mov and add orl cmpsb jge and addl lea addl add push stos mov add add push fstpt mov addl mov sbb popf mov jmp addl dec adc enter fiadds les addl dec test sahf mov addl addl cmpb cli (bad) loope mov and sbb out xchg sub addb addl sub les addl xchg cwtl rorb addl sbb andb add test sbb faddl and shr push cli mov addl mov addl adc mov addl jge add in inc (bad) stc addl adc cmc es push cmp addl stc std les and rorb add add movsl mov push sahf mov addl out xchg xor addl addb xor addl nop shlb lods mov fldl andl outsl rorb addl arpl inc add addb andl xchg mov add sbbl mov push rcrb addl add clc stos decl gs inc cmp addl pop fsubrl addl adc add and scas stos addl addr16 sar loopne fldcw addb andl mov add orl mov addl addl sbbb jnp shl mov push jmp addl xor scas popa addb add mov addl addb xchg sbb and addb add clc mov adc cmpb andl cmp pop fsubrl daa mov addl rclb movsb mov and addb addb and mov leave dec dec and addb add sub in addl and add addl iret aad cmpsb pop addl xorl fldl and addl mov addl xchg in fmuls movsb cmpsb xchg addl sbb addl sahf pop out xor add adcl jg and xchg mov addl iret popf xorl addb (bad) jge mov fldl ljmp addl out push and addl jno and addl addb add xor addb xchg fistl push cld mov and andl rcll add and addl mov (bad) adc addb adc addb addl add addl xor test mov add mov mov addl mov addl push addl cmpl stos lret addl xchg roll mov addb add loope (bad) mov addb addl addl and andl add addl mov sbbb outsb and mov addb mov mov mov and add xchg sahf xchg mov addl mov inc jmp stos adc addl and nop or add andl jne xchg or jb add addl addl and and add fdivrl xor dec ss or add addl addl inc mov aad addl mov xchg sbb sbb addl addb lds and xchg or loope and addl cltd xor andb addl orl xor addl addl cld cmp add mov addl addb add jle jle mov fadd add add add and and test and andb hlt movsb negl addl addl cwtl mov andl add je (bad) sahf lcall addl fistpll xor pop scas mov addl add addb add hlt add or addl rcr cmp addb cltd or rcl loope mov addl sahf hlt adc addl add out jmp addl and addl add and adc addl mov addl jecxz insl jae push aaa sahf cmpsb or addl mov cmp addl std andb addl ja clc xchg or add addl mov add addl fildl jo loope andb and and and fsin push and das xchg and clc scas sahf in sub movb addb and lahf jmp addl adc and orb addl mov addl mov addl adc addl faddl sahf add addl nop lret and testl pop push test mov add add pushf fldcw sub cmpsb int3 add add (bad) in test mov addl orb xor xchg mov add xor addb and add (bad) repnz push sub jl int3 addb andl push sub add addl addl in mov popl addl addb call rcr jge pop add and int3 int3 into mov dec addl mov in dec fiadds addb sbbl adc addl addb sbbb out addl shrl test addb addl addl mov addb add jae addl loop imul and test andb ret andl pop (bad) or fmull test adc add addb addl ret xor sbb and mov mov sub and addb add xchg jge addl insl and cwtl push stos xlat pusha add addb add cltd addb xchg addl xorl addl movsl fdivl add addb lea add addl addb jecxz addb mov fsubl fucomp vpaddb add addl mov scas inc cmpb addl addb pop faddl inc jp push in addb andl and xor xor add mov xorl addl inc cmc cli ljmp add push stos dec or mov addb adc xor sbb add add cmp addl addb sahf loope inc out idivb movsl loope sub mov in and add call popa mov call mov orl mov or add jnp les leave cwtl pop lea push fdiv mov xchg sbb int test fistpl push or or mov lea movl fucomi lds fwait lret sti aam dec and cmp mov xor cmp testl sahf add xor sub pop stos xchg call sub loopne jb and jle sahf shrl in std mov hlt mov fs aas out faddl push shlb fwait sbb push push push test clc lods imul add aam clc les mov xor aam jo sbb push adc in sbb (bad) leave stc stos (bad) jl cli xchg add fdivl cmp mov mov arpl mov jbe pop xchg orl test cmp mov push imul mov movsb data16 popf lcall cmc pop mov je cmp dec (bad) in cld mov int inc push add cmp (bad) cltd jge jge stos jg mov mov sub jg push lcall movsb les orl inc fimull mov cmpsl mov pop jae mov mov add popa stos int3 push cmpsb (bad) out lea inc sub divb ja xchg (bad) or fimull fwait movsl cmc mov push sbb push sarl dec movsb dec andl int pushf mov call mov fld push lret sarb sbb sahf mov push movsl adc jp xorb mov sub sbb fstps inc mov or dec push mov test jo push pop (bad) jmp aas out inc sbb movsl andl pop cwtl mov test (bad) rolb pop int test xor lea (bad) repnz outsb mov lea jg ror rclb fwait push out xchg addl outsl mov mov mov in and leave xchg cmpb std mov jl scas stos push ror stos movsl jp and pop pop shl mov mov fwait mov mov cltd andb cmp cmp push into pop je xchg cwtl push jp mov andl ret enter jecxz adc mov sbbl addb inc cmp mov mov sbbb adc xchg push cmp cmp xchg nop xchg sahf push inc xchg testb dec pop leave in add lock push cs add lds mov cwtl dec fwait repz (bad) pushf enter xchg fwait clc ret movsb rorl sahf xchg arpl fwait in out sub cmp movb stos mov cwtl sbb pop rorl clc xor aas sahf sbb sub push adc mov dec pop jp loop test jo and mov mov xor jb sti daa shlb popf adc addr16 stos rcll jne data16 and (bad) lea xor mov dec jno dec lea xchg jmp faddl repz jbe jmp stos push inc call inc jl (bad) (bad) mov pop or call mov mov cmc stos ljmp dec hlt add jbe roll sbb xchg ja fbstp das mov dec outsb addl jnp (bad) dec xor mov adc lahf mov dec (bad) fwait and lds lcall repz dec ficoml inc nop insl push xchg lock inc pop je ror rol adcb xor xorl shl les jne dec sbb scas stc cwtl mov push stos mov in test mov push ljmp (bad) in leave cmc imul test popf test xchg sbb add daa mov pop fadds iret dec fwait ret ljmp dec lea loopw push mov call hlt iret mov loope lock push jl popf movb or mov mov lods push roll xchg aaa hlt ficompl mov daa jmp mov lcall loopne mov mov mov cmpl cmp jg test decl jl fwait rcll roll jmp repnz jnp mov xchg mov jae lahf cwtl mov paddusb pusha je jle (bad) jle push enter mov xor push cmp dec je out sub int cld add sahf pop jno scas aam mov and push fistpl int jmp dec jno mov (bad) sahf or imul aad (bad) popa cltd pop mov hlt mov lahf pop dec jbe mov shlb inc xchg mov imul out sahf std pop ds in leave popa ficomps and jns add xchg ja lahf mov subl xor mov cli push and insb shl inc mov (bad) xrelease repnz mov out test (bad) pop mov mov mov push mov (bad) iret mov mov lret cwtl adc xor push mov add ret sarl add rorb xor cltd je int inc (bad) outsb decl outsb dec (bad) leave (bad) mov xchg loopne cmc sbb xor inc cli jle lea mov test aam gs cld repz push subb test push shrl push test xorl test arpl push psrad int lcall sbb (bad) lock and cmpl jecxz jecxz out movsl sbb movsb xchg dec sbb cs jno fadds loope fwait pop sub addb fs xchg xchg lret jp test dec jge jo orb roll rcl ficoml ret mov idivb jmp inc cmp jo rorl insb cltd inc call stos adcb lods xchg stos orb mov sub mov pusha xchg mov add pop adc stc (bad) shl push in std jp pushf xchg ja jb push loopne ficompl roll cmp movzwl cmpsb sub and jp clc sti cs mov aam fcoms jmp imul xchg shl rcl pop add xchg int leave jmp bound sbbb and mulb and repnz fwait (bad) aam sub test (bad) push or nop sbb andl lods cwtl adc (bad) aam hlt mov pop xchg sbb cmp xchg add cmp add add (bad) pop dec jle mov fdivl sub sbb xchg push add (bad) enter mov jge cmpsl lods jle stos mov mov sub and cmp nop push gs fmuls mov xchg fcoms fwait enter mov sbb test xchg in out int rcl jp (bad) movsl or mov push xchg cmpsl aam out mov or (bad) xor in (bad) nop into insb insl cmp add int3 xadd or les xchg jno addb cwtl aad xor mov lods lahf mov xor mov xor sub orl inc in (bad) (bad) out and aam mov out xchg lret lods sbb aam xchg std test rcrl popa arpl int3 cli popf xor sbb inc loope call sbb push jmp inc leave mov pop mov sub mov cld int lods (bad) xchg xchg or xchg jbe fprem xor sahf hlt push mov mov into lret inc pop imul xchg aaa mov jmp pushf cld movsb test mov orb mov std les and sbb jae (bad) dec test xchg jnp call mov cmp mov shll mov test fisubrl push sub sbb cmp fwait stos jo dec xor mov in fstpt or and adc xchg mov das cmc sar pop in mov add mov cli stos int3 icebp mov mov enter in dec iret stc outsb jl pop mov adc scas or xchg leave and jbe sahf iret jo xlat ret cmc int3 pop mov xchg subb pop lods sbb stos inc mov jno add mov subl lcall jb xchg and mov pop shll fucomi rcr jae add dec jnp (bad) lock adc mov sub push xchg and cmpsb xor or adc out jp call les xchg mov mov jmp xor test in shrb call mov sbb mov rorl add cmp cwtl cmp adc pop scas (bad) ljmp cmpb push cmpsl cmp xor jbe push scas xor fisubl pop loope call xor xor push push dec push andl or mov mov iret push pop orb and jle or mov mov nop ja mov int cmc lock dec je orb push lea push cmpsb hlt js mov xchg mov addb jne xor xchg mov test jge jg imul andl mov repz xor jns jne sahf xor aam imul or fs jo adcl pop ret in stos out push in call repnz mov stos nop mov (bad) xor pop sbb repz mov mov lods mov xchg jnp mov test mov xlat xchg cld xor mov or int3 sbbb (bad) adc mov nop (bad) xchg inc jge sbb mov xchg mov mov mov rorb or jae fcompl and sbbl (bad) cmpsl outsl or mov arpl xchg push das lods xor sbb mov stos jge stos jmp jmp dec in addb cmpl das test jbe rcll and mov xor jmp mov data16 aam and cmpsb (bad) loop mov loopne push mov push fisubs sub ss cmp add push xor xchg cs or pop shlb dec xchg incl sub das adc xorb pop andb adcb scas jle mov push pop xorl je jbe mov sbbl or xchg shlb mov jge sub ror fimull xchg xor and push fs cmc stc sub xchg mov xor aad mov sahf subb orb sbb stos jno dec or xchg jns push sbb rolb (bad) test mov (bad) aaa subb shll dec push cli mov pop and and imul xor insl sbb mov aam shl nop in movsb or jb dec push std out sbb inc int fbld stc mov fldenv int3 xlat es xlat scas sub je leave mov jl xchg int3 mov (bad) aam pop in fbld aam or fstpl fidivl repnz jmp sub cmp add sbb cmpl dec push xacquire addl mov push (bad) (bad) push (bad) std nop push push lock inc cmpsl jle jge mov mov stos das jge andb (bad) (bad) lea subl inc sar cwtl int fcmovnu jne lea test outsb (bad) jmp pop (bad) xchg sarb cmc lds ds int in or andb jecxz (bad) and test fisubs into hlt lock inc inc iret cld sbb mov add sbb xchg sub pop mov inc test insb mov mov daa insb int (bad) lret lret sub inc mov and into mov rorl lods fimull hlt sbb int3 in into xchg nop push xchg mov xor jle orl mov xlat fstl mov daa imul xchg sahf cwtl rorl cli test xrelease sub test cli scas into or je sahf xchg cmp xlat rolb jo xchg nop mov insl faddp lret xchg aam pop add lock fadd fstps and mov push fstpl xor sbb in cmpsb aad (bad) sub xor xchg push inc nop sub rol sub add and pop push shlb rol cmp sbb out mov xchg or xchg fisttpll outsl adc xchg xor lea sahf int add out jno iret lcall rolb or push add jne cmc jle xchg (bad) xchg outsb test sarb cltd push pop in xchg jae (bad) push arpl lea xchg mov loope pusha enter fwait nop sub xchg push mov jle sbb jle in cmpsl out mov fld xorb pusha nop (bad) les or test cmpl jae decl stos sarb mov movsl cmpsl push mov mov xorl sar xchg dec bound jmp call fcoms test push repnz xor in (bad) dec ret lret call xchg sar jnp std or (bad) cltd movsl lds fbstp (bad) jmp clc push neg mov mov mov rcrb inc subb xchg rclb pop stos jmp pop mov ret roll addl ja xchg int inc andb addl mov jmp hlt pop rcrl adc cmp mov enter add stos push test pop call mov and mov fbld mov or push test or cwtl mov hlt sbb leave cld cwtl xor push pushf andl adc in jns mov sahf pop xchg mov mov mov subl mov sbb add subb repnz subb xchg mov leave inc pop xlat shl sbb rclb movsb rcll jb mov je mov jo dec sub jmp call xchg mov je outsb jo dec lods test or lds sbb inc in imul negl not dec enter rol aaa iret lea pop xchg mov sbb or lea sub jle push scas rol dec adcl jmp testl outsb scas int3 cwtl jg inc xlat or (bad) pusha push mov test jno or mov sub cmp in push testl jb call jge inc xchg loope es stos fs repnz mov nop push je cmpsl pop fs call andl jmp stos lock je into pop push sahf mov xor fidivrs jge fists out enter add xchg xchg je ja xchg mov xor pop orb sbb xchg jbe jmp loope inc hlt daa jge xchg xor sub mov loop jle jge,pt jp mov stc sbb testl pop add lock or in fnsave xor add jne pop sub insb in mov inc sahf in fadds scas xchg test test dec inc dec in mov mov jge stos orl iret dec mov aad out in push sbb icebp ljmp inc mov jg mov in cmc cs cmp adcl pop cwtl je cmp sub push outsb imul addr16 sbbb or mov stos sahf pop xor in int adc and addl js (bad) lret push imul popf xlat popa cs daa mov (bad) mov and fs and test in jbe iret jmp dec stos insl cmc mov psubw cwtl adc cmp jge (bad) or scas adc mov push scas test add test xchg movsb sbb fnsave call xorl xchg push js les xor pop jbe out or movsb out (bad) jae test cwtl mov xchg test mov ss cltd cmpsl fxch xor push rolb lods movl dec inc cmp mov cmpsb push sub leave push push addl dec or cmp pop xor xor cmp enter fwait nop sarb sbb lods aam mov int sub mov lea add sti sbb mov addb push rol mov lret pop xchg idiv mov jne pusha xorl (bad) shlb lods test xchg xchg ret outsb fsub cmp les pop mov jo bound fdivl or adc aad xchg movb push pop pop addl mov add (bad) test push addb add inc mulb mov sti pusha sbb frstor repz mov adc ja fdiv fbld xchg adc scas scas xchg xor pop fidivs orl sahf rclb (bad) jecxz andl pop xchg frstor shlb hlt roll mov test adc sahf xchg cmp jmp xchg pop outsl mov bound les out divl test je test stos and (bad) mov les in rol loopne pop addl (bad) aad aas outsb cwtl fildl jmp outsl inc add test pop add scas jmp stos es mov aad arpl and gs mov aaa bound xor sbb test xchg lea enter or andl sbbb popf sbb sbb int3 lret aad xlat les push cltd je xchg sbbl xorl out imul stos mov sbb lahf movl fwait lret xchg out jp out loopne xor scas cwtl xchg cmc mov int3 mov mov sbb mov cs fstpl mov (bad) leave aam add (bad) adc loop sub les mov xchg mov add xor scas repz shl adc mov mov std pushf pop add dec repz dec mov in je mov rolb inc cli jne idivl mov clc ds cmc mov rol mov cmp mov add pushf xor jl mov ss pop in sub jecxz pop cld aam push lock es jle addr16 pop or mov pop testb mov fisttpll in iret push int3 icebp cmp stos subb sbb rorb cmp cld daa mull adc xor popa cld and sti sbb xor test mov sub jne loope outsl rolb icebp outsb loope mul repnz es inc adc push cmpsl subl xchg rorl andl int iret xor negb jae sbbl add ret sti push jl xlat cmpb sbbl pop movsb icebp mov jae mov cmp std jbe stos mov out mov and jg dec sbb cmpsl or push xor xchg cwtl and test inc scas and imul pop push mov lock test add out xorl fcompl mov or and in lock addb test test xorl bnd in adc xchg std mov add loopne rorb ds jge arpl insb jae adc mov outsl inc dec adc dec leave sbb lret fimull test jo clc and xlat mov in mov xlat in xor sahf sti mov mov cmp aam cmpsb mov andl jnp mov xorb test lcall add mov popf jge movsl orl jmp dec jle rclb xchg (bad) sub xchg test xor or sub into nop pop jecxz jmp jge aad jae add (bad) dec sub xchg jmp mov inc mov pop sub scas shll mov push jmp (bad) mov mov push cmp mov sbb xchg cmp test inc cmc ficoms mov outsl loop in movsl jnp filds mov test inc jo int out test sahf fnsave xor pop inc test ljmp sbb jmp jbe aad scas fwait sub jne pushf (bad) andl cld int mov dec outsl jmp pop mov int cmp fldenv not pop subb fstp hlt pop add fsubs and pop lret adc push fsubr jns push lods les jmp lahf jg clc les sti popf sbb push fs pop or out fisttps jbe sbb lds mov xor mov fstpl push xchg lahf and xor fisttpll adc les out mov subb cli mov les lods aam popa aam and cwtl ljmp adc and shrl pop lock scas (bad) daa push test jnp roll jp xor add rorb cld lahf xchg lods stc cmp insl popf xorl adc xchg jns test jo test subl (bad) (bad) sbb mov dec in clc jle movsl lea xchg lea mov cltd lcall sti push jno ja rolb cwtl dec adc enter loop cmpsb repz shlb jae add push xor mov mov mov push nop sbb sbb inc sahf or pop or fidivl sub mov lds and fisttpl enter inc lods jbe xchg (bad) movsb or or lret int int3 subl xchg pusha sub ljmp les dec sbb test subb adc mov and iret roll pop call jo lret stos adc push cld mov pop sub addl fcmovne pop je movsl lea add push xchg adc cwtl inc (bad) mov jno sahf rcrb stos lea (bad) push shlb sub adcb sbb (bad) push imull jae mov popf or (bad) rol xor jl ds out call sbb pop call sti in (bad) les push mov or stos lret xchg jge scas lods out outsl test cmp movsb xchg in mov cltd xchg jb jb xchg jo mov into andl mov xchg push mov adc cmpsb cltd pusha mov lcall push mov mov aam jge rcl fstpl xchg sub stos int sahf orl nop push mov jmp lea mov andb into rcrl icebp and jecxz test out xchg lods movsb jecxz jnp test leave adcl daa cltd xchg cmpsb in dec jae lds mov cwtl adcl adc hlt shll push divb aad xchg jp mov adc sbb or fldt or sub jmp repnz (bad) lret mov hlt jo out shl scas xchg in add mov cmp or jecxz fdivrl fcomi pop jp (bad) and icebp xchg fimull dec mov adc add int adc nop sar out adc aas scas xorl call shr movsb cmc daa loope scas dec imul sub pop cmc in imul jecxz ret test shlb int3 lret into das mov xor je mov inc lret ret test pushf sub out loopne shr push xlat cld cmc jbe inc jae icebp mov push and les out rol mov mov andb iret in adc lods push addl fidivrl xchg ret repnz lea fwait jns cli cmovae in loop cmpsb mov jne xlat (bad) in iret dec nop adc scas in adc sbb cld xchg loope adc in mov lahf repz shl dec jmp xchg (bad) dec sahf in pop inc sbbl loope inc pop (bad) loop inc xor xor push out pushl pusha cmp mov xor cwtl rcrl lret cltd cmc dec sti cmp in fwait xchg into jne sbbl jmp in mov std mov add addl test add sbb aad jp adc fildl sbb mov pushf sbbl test rorb cs movsb shrl dec mov aaa fldl lods das xchg xor out jbe imul xor and jnp int sub clc lea adc jge adc lea mov pop sub jge test out sahf sbb shrl jae or subb mov adc inc popa mov shrl loopne mov test popa aaa iret adc sbb jecxz jo lret sbb adc stos pop inc loopne mov pop xchg pop lcall jae test icebp lea push push jbe fisttpll jns orl pop jle pop pop bnd nop cs xor push push test nop loopne mov clc repnz mov fucom stos (bad) lret mov insl adc in fnstsw mov xchg push xchg lock repnz btrl fwait call loopne jnp shll sbbl jbe test inc out testb arpl lock jns int3 pop pushf fwait mov pop movsl les les int3 mov mov testl push cmpsb push push mov push std subl xchg repz and xorl clc out out jge xchg shll outsb rorb imul cwtl push cli sahf cli ffreep hlt out in and jle sbb stc loopne sti pop add cmp les subl jno push fcompl andl lods scas loope lea ds sub (bad) sub lcall ror stos stc mov fs icebp jns mov nop xorl jbe push int jge or test or stos popf xor lods (bad) out mov dec scas cmp cmp jle nop mov mov xchg roll adc clc gs pop mov iret rolb mov scas cltd mov dec push mov pop xor (bad) faddl xchg lock jl pop fmul imul jmp xor clc mov (bad) fcoml out test orb jnp mov test push mov loopne ja ds inc movsl clc mov lock fwait lret fbstp push test xchg xlat mov mov jecxz xor mov cmpl adc xor cmp aaa cwtl and rorb adcl sbb jg out jecxz clc xor pop dec orl jl addb test sahf sbb mov or mov push das movsl inc out (bad) push mov mov jbe andl dec int3 into repz xor mov orl jne mov and dec loope xor pusha mov mov xchg iret mov cmp mov jl xchg clc or inc ds int3 filds stos movsl pop pop ret add xchg addl jae int3 clc jp inc jle jb arpl addl popl int3 jecxz cmp leave push cs fstpt scas fildl sahf cmpsl pushf int3 call xchg sbb je std xor push neg jle sti fcompl subl cli sub rdpmc mov cmpl push inc or xchg cmp int3 adc jle addr16 xchg jns pop data16 faddl int3 sbb lea cwtl mov fdivr mov popa cmc push repz and sti xor push addb int3 movsb int3 (bad) popa daa aad mov mov (bad) sbb jl int3 mov mov sub dec inc push cmp pop int dec or in sub adc adc xorl sub mov notb xlat (bad) icebp lret xorl sbb jge or cmc fucomi gs mov aad mov and and mov pop les int3 cmc stos sbb mov push xor dec fwait dec fwait in int3 fsubr popa and pop into mov lods int3 add dec ficoml out mov cmp adc mov (bad) js xor rorl rcll mov xchg cld mov popa mov sub xor andl xchg iret filds je pop lods test subl repz std idivb pop in lahf push dec xchg mov popa es (bad) test push push and lea push lcall mov inc mov inc xor sub cmpl or sahf pushf movsb push add dec mov int3 xor int jne daa rolb fildl out xchg int3 or push adc pop adc cmp xor addl mov call aad addl pop xchg sub stc cmp rclb ss and adc cwtl mov xorl int3 outsl int3 lahf repnz sub fs sbbl movsl int3 mov shll mov leave pop fwait mov out push repnz cmpsl test je pop mov in mov mov mov push out mov mov and mov sbb xchg cmp pop xchg movsb inc popl adc addl daa cmpsb test inc int or xchg sbbl cmc int3 nop xchg lea mov pusha lock test in fmuls mov mov xchg ffreep or push adcb add inc fcomps mov addl leave xchg int3 dec jge fnstcw stos cmpl mov sbbl bswap mov push jns in repnz stos pop rolb adc int3 sahf lret adc or int3 jns call ds sarl mov jbe out int packsswb ds mov cmp pop andb or scas repnz lock out rorb mov inc test andl xchg jge cmpsl mov cmpl hlt int3 mov pop xchg cltd xchg cwtl imul push sbb leave enter lock cltd out int (bad) cmp popa xchg mov (bad) int3 or outsb pop sub pop cmc nop cltd popf or add inc xchg int3 cli loope in cmp out enter jbe lret sbbl cmpsb int3 inc lea int daa pop out repz add rcrb pop mov mov sti shlb mov xchg int3 lods rcl jbe jo sub pop stos (bad) aad movsl xchg inc test nop addl mov lods inc fwait int3 es adc out add push setle inc orl sub mov add mov xchg xchg addl dec fmul add lea dec push loop aam or out loopne sti mov fistpl (bad) lea mov sbb push stos xor icebp or dec add sub cli xor int3 mov inc shll (bad) pop mov jne add (bad) int3 sbb xchg adc les test pusha int3 sub xchg popf ljmp pushf popf add test test and mov test fcmovne and pop mov lea (bad) push aaa out test out (bad) mov mov rolb rclb mov addr16 aas jo stos mov adcl push sbb mov movb pop shlb (bad) repnz jns sahf out sbb sub xchg (bad) mov sbb jbe roll xorl mov cmc loop xorb sbbl xor cmp mov mov adcb xorl movsb mov cli lea leave scas adc inc xchg loopne lret in cmp adc cli jbe out outsb sahf dec xchg xchg out stos or xchg cli pop mov adc mov inc sbb mov roll ret int3 fwait lcall lods inc add adc mov or bound inc adcb mov gs out popa mov rorl sbbl les nop sbb iret testb sbb scas mov lea aam mov and aad mov fcompl icebp sub sub push cmp and cwtl push mov iret mov pop loope aaa leave cltd push jle sbb gs jmp inc rcl out cmp cmp push jbe imul andl out repnz push mov xchg lret sub scas lods add inc push mov and fimull shrb icebp mov out xchg jbe addl loope jo enter cmp lret mov adc or test imul addl xchg mov addb into (bad) stc ret pop call addb bswap (bad) out mov fisubrl pop adc ret lock xor adc andb in inc push dec xchg push scas jbe mov testl jge push cmp sti inc leave cmpl mov orl insl out andb shrl dec aaa sub insb or test push stos mov cmp jbe adcb push cwtl inc ret orl xor jnp lds mov adcl iret xchg (bad) loope jmp out stos cmp push stos imul das inc in (bad) popf sbb (bad) xchg cltd test and jp aaa int3 fstpt pop adcl shlb xchg mov cld xchg xor incb adc sub sbb repnz push es push ret int rorb movsl sbb mov test xor shll adc popf out lcall addl (bad) push xchg xchg fbld stos push mov roll bound int3 cmc fcoml push cmp adcl addb into xor mov call xchg jns sbb inc iret mov loop clc and loope inc adc test fsubp aad pop int addb loope push inc mov ds cmpsb mov repz pop stc lea and mov and or rorl mov jle xchg insl push popa cmpsb ret data16 add sbb jno popf pop shlb adcb sbb aad lcall movsb mov xor xchg jno jge (bad) xor pop movsl xchg xchg sbb add ss addl ffree popf mov clc and test (bad) testl cmpb xchg sbb popf xchg xor fwait rdtsc mull add jg and pop add push out cmpsb pop iret mov stos fpatan test adc enter xchg andl (bad) push jle inc push cmp popl pop rcll stos sbb jne xor scas ret dec andl mov scas xchg mov sbb cmp sbb mov push movsb and out dec out push mov adc inc inc dec or in pop push mov pop shll cwtl mov lds xchg pop shl fcmovbe mov cmpl ret or push mov lods test sahf data16 rolb inc out andnps sbb leave push lock (bad) out je xorb inc int push int3 rcrl push sahf flds in out pusha rolb sub dec push test mov sbb push mov hlt fistpl call cmpl adc out xchg mov test aam xchg xchg stos arpl fadds inc insl and sub orl add jmp dec arpl mov jbe mov xchg call iret mov rcrl sub lret out mov or int pop xchg cmpsb jne xorl pop orl push les (bad) cmpsb int in cmp sahf xchg shlb (bad) scas (bad) outsl rcll inc out xor pop or std lret jp mov rcl jmp lahf js inc cmpsl xchg push inc loope mov and sbb jmp xorl sbb mov xchg in cmc movsb add jmp adc add popf fmull pop outsb sbbl leave xor mov or xor push aaa jmp cmpl mov gs sahf shl pop mov sbbl sbbl xor movsl addl int3 or sarb stos (bad) je add cmc test pop dec clc pop ficoms enter xchg cmpsb xorl cmc stc xchg rorb adc lods push add sbb (bad) sahf pop movsl sub movsl out shr jl mov int3 inc mov test mov push mov movd test ret (bad) enter sbb in loop pop loopne inc mov and and in lods incb push iret test sbb jl andl fwait insl outsb mov leave adc pop leave pop jbe xor lds inc fld or (bad) push pop cmp sub mov (bad) dec push mov sub mov mov enter pop and cli jne sti mov pop mov fsub or mov repnz je in les int3 insb out icebp orb mov mov fsubp setno push mov stos mov fimull mov stos dec jge push clc fwait out fcomp out add and lods or in jp pop (bad) lock sub insb or sub mov lds xorl lods sub (bad) (bad) shr mov frstor mov int3 sbb or repz push mov pop xchg inc int mov sub lds ret cmc push (bad) mov aaa es insl test push out lahf pop pop (bad) inc mov rcrl nop loopne push push adc in xchg stos jbe roll pop mov scas in cltd addb scas push arpl repz imul and push outsb out lock fwait repz out icebp and jns pop jl add mov subb loop lods push (bad) lahf fidivrl cmpsb xchg aad sahf dec int dec leave mov out movsl pop dec sbb mov repnz stos subl cmp aam orl push sub cmp mov mov or mov jge cmpl (bad) icebp andl jb lcall (bad) cmpsb pop xor insb cwtl mull adcl adc jp cmp jne int addl push ret xchg mov add rcl test andb xor ljmp and mov leave subb fstl int int sbb cmpsb orl add inc xlat and cmpsb imul inc sbb test addb dec adc ret bound int pop jbe jg pusha inc adc pop push call (bad) mov adcl scas popa dec mov andl jmp add push sub clc pop fucomi xor push xorl test push shlb arpl fs sbb xor mov stos cmpb xchg mov aaa jl andl jmp xchg int dec sub or mov scas sbb jnp cmp int or scas sahf cmp leave and lahf ja fsubr mov dec out mov cmp daa je add pop pop sarb mov outsb pop or scas inc pop addb xor and test repz icebp and add notl mov jp adc xor int xor mov mov aaa adc add adc mov pop add or add or add or add or add pop add or add jnp add xchg add or add or add or add or add or add or add or add or add or or add add or add popl add lahf add or add or add or add or add or add or add or add or add push add or add jg add xchg add or add or add or add or add or add or add or add or or add jno add mov add xor int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov inc or inc push mov inc call mov dec mov dec push push mov push push jmp inc mov call pop add ret call mov mov inc mov jmp int3 push mov sub movl movl movl movl movl mov mov push mov push call mov push push call mov movl movl movl push mov push call mov lea push call mov pop ret andl mov add fldl inc sahf inc lea addl sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl ret push push popa xor xor cmp aaa cwtl ds daa xor shlb int (bad) fisttpll add test popa aam mov pop test jne shrb and cmpsl es (bad) movsl lahf andl popl mov aam mov sbb push or xchg add ljmp mov jo shrb push sbb setno inc adcb add ds aaa outsb movsl arpl pushf sbb into movsl enter add push out int3 jle cmp xor je pop jmp and pusha xchg add in popa aad addb push movsb nop cmpb aam push loope loop add out inc dec mov xchg mov or jl (bad) fistpll mov cwtl adc cmp mov mov andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl cmp mov sahf jmp and pop adc ja mov push sub fsubrp in ljmp sbb sahf pop mov cmp sar push sbb arpl shlb mov pop adc or out loope add pop andb dec js mov dec mov push (bad) int3 add xor fists arpl adcl andl jge enter int3 cltd mov jno xchg sahf and pop lea pushf add and int push fiaddl shlb es xor lcall xchg or mov xchg mov and popa mov lret xorb sub mov or (bad) xchg pop rcl enter fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl repnz pop andl cmpsl ficoms in inc cwtl mov call in mov cmpsl ja aam repz in mov sbb sbb fstpt push fsub popl sbb mov xchg notl addl sub test mov push mov stc subl sbb mov jmp sub lds xchg push and adc mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop jbe or mov ljmp mov cmp cmc xor bnd mov add imul inc sbb sub rcl fcomip les pop into add (bad) dec std inc gs sub std dec sub (bad) cmp and pop xchg (bad) lret xor and outsl mov movsl lock lods (bad) push test inc pusha mov lea out cmp test test sub push xor cwtl js and push mov adcl andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl fisttps aam (bad) sub push sub add fisttpl out lods xor pop cmp sbb fwait sbb out mov sbb fbld mov xchg xor and movsl jnp xor pushf and lret inc xor orl push das add sub fstpt mov mov sbb out sbb arpl adc shlb mov add clc jge out cli hlt clc mov (bad) push xchg andl cmp inc pushf push push xor int3 stos mov add cmp dec cs push sub dec enter and xor test andl test imul ja sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or movsb jmp xor loopne or leave fisubl ficoms inc push dec das repnz fsts lcall pop xor lcall jo or cld (bad) outsl fiadds cmp iret add std mov call loop hlt cli scas enter add in je push mov mov pop sbb addb sub push repz out sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl (bad) fmulp ja mov int jnp (bad) int3 test mov xor test mov push xorl and mov xchg roll xchg movsl repnz je adc sahf mov adc xchg mov lods cltd int add ss mov cli jb adc mov ret adc mov and sbbb sbb test aaa mov adc add adcl (bad) int push dec adc out dec stc pusha mov lret fs test test cmpl rorb ljmp aas rclb cltd dec or ljmp pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov stos loope mov mov test int cmpsb mov mov imul andl add out add arpl xchg cmc mov or in stc mov mov sbb add aaa and xchg mov xor das jecxz dec rol pushf ror and push stc gs andb jg push fildll mov push xchg add sbb daa sub int3 add int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or jle xchg in sbb mov sbb (bad) lock mov mov sbb cwtl sbb adcl or push stos stos (bad) push add mov subb loop scas movsl shll jns test or stc into mov (bad) lock or sbb lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl or sbb and es sub push ss jl inc int jmp mov loop add stc shll (bad) int3 cld movsl jbe push cld addr16 sbb lret mov std sub in push pop xchg adcl cmp gs movsl xor repnz dec fs sbb sbb mov add std pop jnp fcmovbe push jae adc ret fwait int (bad) push jecxz dec mov sub movsl inc les jbe push xchg sbb enter pop jp lea andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xchg and push orb (bad) scas fstpt mov test sbbb push fisttpl xchg das dec xlat insl hlt jbe lcall jo cwtl jns ja out gs sbbl mov fists das or sbb testl fdivrs lods pop fisttps icebp pusha test inc adc sub ret enter xchg add xchg mov adc jo cmp mov aaa scas push mov jle andl push jecxz fisttpl ror fldl cmp cwtl fs sub movsb sbb scas cmp ljmp cli push cmpl xor jge mov inc fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl mov fdivrl sbb jp or int3 outsl scas mov cmpsb inc subl pop outsb add mov mov (bad) sbb add fstl add adc dec sub int andl addb cmp (bad) mov adc loopne nop mov jmp xchg decl stos rolb adcl andl add cmp mov dec adc or push int3 sbb xchg mov aam rcrl lods and stos bound mov addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xchg and xor sub testl inc (bad) mov loopne or xchg mov add xor iret cld cld fmull cmp out inc mov add jb test (bad) dec andl inc mov push sub lret popf out jmp dec xchg xcrypt-ofb cmpsl out push stos mov sbb lcall lret sub addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl into repnz xchg push sbb adc nop bound mov out shll cmpsb xor notb adc cmp sbb cltd push sub add cmpsl add out xor mov aas sub push jne lods aaa test (bad) push push scas enter and cmpl mov fbld dec dec mov pusha lods push out outsl mov dec andb push insb jle mov cmpsb push fcomps and pop add stos push adc into xor je nop jo fld inc jno cwtl dec (bad) cld add daa ret jns addb push test cmp sbb or fstl cmp mov mov jmp xor adc out sti cmpsl dec jle sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl lret push xchg inc ret lock mov ret lods fucom jne inc jecxz pop mov repnz jg push movsl fstp (bad) (bad) inc ljmp int3 xor test pop das xorl push sbb add mov repz pop pop out int3 and and push into daa lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl imul ds push outsb jge cltd fsincos inc lret aaa in jmp xor add jns sbb push jbe into inc sahf sbb mov dec jb lcall outsb fld mull xchg xchg push rolb adcl and sbbb (bad) movswl or fidivrl iret popf xchg dec test decb mov pop mov clc addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov stc clts cmpl jbe or scas in cmc cltd mov loop lahf inc and subb push popa sbb mov dec je int test mov mov movsb sbb clc jbe int3 call mov lret xorb fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xor faddl jae into mov adcb leave mov out int3 call int cmp ret cmpl mov repz or (bad) push in andl and stos andb cs jge push cmp cmpsl clc push add stos ds outsb and cmp pop cmp mov adc sbbb imul push ds dec and addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl sahf (bad) pushf dec pop push stos clc fisubs push xor xor std mov mov lcall mov aas push and jo rcrb aad int3 in or (bad) cld aam mov mov jbe mov cwtl scas psllq dec jg lock fisubs movsl jg jnp jl cs pop xor mov inc jb in pop cmpsb cmc pusha cmp cmp popa fldl cmpsl push pop (bad) rolb pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl dec sub inc fmuls stos rolb enter jmp lock sub mov xchg cltd das mov sbb je xchg lret outsb subl shlb jecxz inc xor stc push std cmc xchg andl xchg xor adcl sub xor mov dec nop enter sbb bound shr add cld leave scas xor andb fistpll fists mov xor xor je mov cmp incl fstpt add hlt push rcrl mov scas xor out das xor cwtl pusha nop imulb mov lds xchg dec stos xchg test stos xchg roll repz test xchg stc sub sub movb pop mov dec cld sbb xchg xorl add mov dec sub mov mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl aad jg add outsl clc aas sbb test mov and in les dec mov es and aaa cmpl add inc push push sub inc daa jbe push pop dec test push fmull mov adc inc sbb push sub jge ret imul push arpl clc je js add orl addr16 cmc (bad) loop data16 lret test aas int3 pop xor fildll js jo subb inc negb jno rcrl cli mov mov ja mov sub cmp push fbstp (bad) ds int jl nop movsl mov cmpl andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lret popa out movsl dec test test mov mov add test nop mov in adc mov xchg add lods loope sbb nop cld nop fs and mov mov jecxz out lods cmpsl sbb inc outsb sbbl dec int3 test test out inc je push push xor js cld or push push jnp inc daa sbb stos fwait xchg push mov sahf cmp (bad) and int jns mov and mov xchg sbb mov movsl adc sub or or push out loopne lds push andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl int xor add jg mov push add xlat mov test xchg xchg mov aaa or lea adc inc aam push subb data16 lret xor rcll jmp xchg int3 add roll sbb cmp mov cld add dec test and xor adc insb jbe std leave push jo and dec ss jo shlb lods inc cmc adc xor outsl jbe fwait jp test push dec (bad) mov scas test cmp xchg mov jle sbb mov pop or jl nop js std addl or fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl cli adc nop cmpb adc popf mov shl sub add mov movsl (bad) jne out pop mov incb mov adc data16 dec cmp imul in cmp movsl cmp sbb xchg mov adc dec (bad) xchg andl nop pusha add jo fiaddl roll dec push xchg cltd xchg xor mov jb mov aad orl add and loope sub mov add or jmp addl xor sbb add jns ss hlt cmp pop inc fs mov xlat push orl addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop xor cmp pushl xchg add xchg fwait addl cmp jmp xorl clc sub xchg jnp fisttps daa shlb mov cwtl mov stos icebp sbbb addr16 nop sub stos jne dec xorl xchg notl orl cmp aam sahf dec jge push push inc les mov cmpsb mov cmc mov xor loope xchg jmp or dec orl xlat aaa ffreep push and cld popa mov ds mov stc cmp fstpl cmp or add nop push jl push repnz mov subb fdivl mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl in scas xor pop push orl int3 or andl xor adcl pop adc daa in sub clc roll adcl test ret lret pop fwait out cmp int movsb loopne je rcrb lock xor sarl push add lret cli (bad) xor sbb rolb lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmp mov cmp ret mov and leave dec sub push stos xchg jg inc (bad) mov mov (bad) cmp lea out inc lahf xchg mov xor lcall pop shl cmpl mov adc jbe dec fcomp sub jnp sbb xchg iret jmp ss pop ja test dec repnz fidivrs int3 dec js cltd push sahf cmc loope mov sbbl testb mov orl add arpl xor or or xchg int3 mov (bad) mov in sbb andl stc pop shll imul mov hlt push adc cwtl subl stos xor aaa subl iret scas xchg addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl out push (bad) mov mov mov jmp test in jp cmp xchg hlt and cmpsb lahf gs test sbbb (bad) jg pop int3 jge mov into xchg inc pusha jbe stos lds xor hlt int3 stos cli (bad) aas imul scas jo push add rolb test jbe aam sub or dec vmwrite xchg mov sbb ljmp addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl adc arpl aam test or and subl js (bad) jecxz xchg cmp sub pop mov mov aam pop sti test out or lods dec or jmp adc mov inc add lahf sub movsl fsubl icebp rcrb dec push push in sub imul sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl jmp je stos sbb out push aas push pop mov mov cwtl push cmp pop out (bad) shll mov popa mov sbb cmp std xor jecxz test sar daa sub iret sbbl jb mov xchg jne jae or xchg lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl sarb (bad) or stc and jmp dec sti mov int3 sub fistpll cmpsb adc iret lret adc push inc or and sub neg in jo repnz inc int or faddl ss testl loope pop roll pusha aam outsw lods fstl mov inc ds cltd and orl sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl call sbbl push cmp ret in mov lea cmp or fcompl cmp (bad) xlat hlt imul pushf dec fisubs mov imul imul sti repnz bound dec pusha sti into xchg cld adcb push int3 sti jns subb xchg arpl dec mov int3 test cmc lcall mov pop or fmuls sbb enter rcr andb rcrb test popf mov sbb cmpb addl scas int3 or xlat mov imul xchg fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl cli or cld mov xor addb fcmovne and test mov pop test push and jo mov mov dec lret mov sahf xor int3 cmpl and cld psubsw subb push daa dec xchg std xlat cmc mov mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jne cmpl subb mov arpl call push outsl cmp js orl xchg mov mov dec leave mov bound pop adcb aaa adc test std mov add cmp subl and fucomip shll jl aam xchg popf or fisttps insb faddl jmp sahf mov fs mov adc sbb sahf dec fcompl push push (bad) popa push incl and pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl fsubrl pusha mov xchg cmpsb xor in or or test sub adc dec adc sbbl cmc cmpsl cmp or cmpl xchg mov adc dec into or mov jno cwtl divb jecxz xchg aaa fiadds xchg jp fucomip cmp mov add sub dec sahf sbb ret jno rcrb mov ja adcl pop add add mov pop sub into je dec popf into sar mov imulb fsts sbb loopne scas xchg sti sub (bad) imul ret aad lock add push fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or add enter int out jmp jecxz inc fsubr cmp inc dec dec mull int loope popa stos or push pop sbb popa cmp ret or cld add add push iret fs lods adc pop sub pop jge test (bad) add out lods and cs inc xchg or inc push pushf lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov or and xor pusha dec addl out xor stos cld subb push ljmp int je clc cmpsl cmpsb scas mov mov mov xchg mov int3 add push arpl pop sbb out sub scas icebp push int aad addr16 xchg imul faddl movsb lret add popa into sahf cmpb imul push cmp movsl std frstor jg and jno stc sahf out call rorl cwtl addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl testl lret sub pop and mov and or pop sbb lea adc stos rcll (bad) lret (bad) sahf mov mov add cwtl inc inc push (bad) movsl xchg fcmove xchg add sbb andb jae (bad) inc jbe andl fcomip mov jp jmp icebp mov les push pop mov leave add lahf xor jns in sub bound fmul dec or xchg jnp fs les nop movsl cmp add add or int3 jno xchg add sub sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbb aad stos cwtl movsb sbb adc (bad) fnstsw xchg add (bad) fstpt sahf mov sbb testb int3 je fiaddl mov out subl cld int shrb sbb sbbl fadds mov cltd call andl es mov cld jl pusha fdivr sub cmpl xor lock fildl cmp jge or andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl or insb lock mov add mov loopw negb arpl mov sub lods daa xorl pop out test stos and xor loope std popa ja fisttpl xor mov loopne (bad) fucomip adcb lret test mov dec pop jp leave fst push es andl jmp mov arpl (bad) cmp into or sahf lret sti sbb daa cmc aad outsb jle insb cmp sahf pop int3 lret adcb in outsl mov sbb ret fildl scas pop popa fmull mov lahf and call andl mov inc pop loope push pop cltd out (bad) cmpl push int3 pop xor mov adc (bad) lock xlat mov xor mov xchg jl xchg pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl or (bad) mov mov sub mov sbb (bad) mov inc fistpll mov int pop lahf adc mov andb nop int3 lret fisubl and fistl cltd mov xchg filds out int3 xchg out push push push cwtl fidivl enter mov leave jo fists and je xor jecxz sub into cmpsb call or sub inc fisubrs dec je jg or insl neg mov int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl sbb orl adc ja jle mov mov push enter pop cmpsl ljmp mov mov int3 xor shlb subl sbb sub rcl cld add push pop add cmpb adc subb mov push or add int3 (bad) andb sbbl movsl push cmovae frstor nop ret or repz add mov and push incl dec (bad) lods int3 or arpl mov cmc rcll sbb sbbl lods cld cmp adc mov sbb lea dec hlt jbe push test xchg pop or ficomps mov jge dec data16 lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl inc or add mov mov add mov mov nop jle daa xchg insl jne adc or movsb rcrb and xor adc int daa sub inc sbbl add rorb cmpsl int ja rorb popa or mov ja fimull dec mov addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xor dec and xchg or and pop mov (bad) rolb sahf popa cmp pop adc clc ja and dec and jb sbb into data16 out adcl ffreep scas stos cmp or shll sbb imul xor dec stos ja rclb mov sub call cmpl jnp jae rol inc cmpb int sub mov test lahf mov fistps sbb xorb dec mov mov enter imul int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl adc movsl xor push fisttpl (bad) lahf jg cmp cmp out roll push in int dec (bad) movsb add (bad) in mov xchg test mov mov mov out mov andl mov xor scas sahf es adcb int xor xor sahf sbb (bad) cmp sub andl fcmovne xchg xor out movsb popf cmpl cwtl cmpl mov jecxz lret hlt ret stos mov idivl int cmpsb lcall shrl lea loopne fcmovnu dec fwait mov inc imul xchg sti mov xchg adc push fldlg2 mov sbb inc mov lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lods sub mov xchg test sub xlat lcall ds pop sarb push sbb out dec aaa mov icebp xor sbb pop stos cltd fsubl sub sbb add push dec pop cmp in popa mov outsb fstpt push iret cmpsb fs mov push (bad) lret aas pop push pop and jge sub add mov and pop xorl jp mov and xor cmpsl dec mov out mov mov call orl inc into rcrl xor imul mov mov movsb stos sbb cld sbbl xor test mov stos inc jne or insb stos inc pop in cmpsb jbe fistps add mov loope sub cmp bound addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xor int3 dec fcompl push push cmpsl insl inc sbb mov lods push scas xchg scas mov int3 lret or adc xchg cmpsl imulb mull imul gs jecxz shlb push add adcl aam movsl and fistps pusha xor add sbb inc and outsb lds (bad) dec jge ret inc (bad) mov std call mov cmp jno push aaa je lods pop lret mov (bad) ljmp cwtl (bad) movsl adc cmp lahf xchg sub fsts sbb test sti lea adcb and cwtl add mov and xchg mov jg add out or jnp cmp sbb adc fnstenv mov sbb andl ljmp xchg repz sahf add sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl pop sub arpl push xor sub loope mov or mov js fists inc xchg mov jno xchg dec push movsl int3 leave jno pop scas mov mov xor sub mov filds mov addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl int3 pop rcr xor cmp enter jle lret in xor and imul xor cmpl xchg fucomip xor lods not push mov pop xchg cmpsb out bound cwtl test out cwtl aam test sub out int3 pop mov mov xorb xorl or andb (bad) int lds push jge hlt clc fs lret movsb lret call int3 movsl mov ljmp pusha stos orl nop std xchg rolb sbbb sarl loop mov lret push mov inc imul and xor loop mov xorl andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xchg adcl cmp dec rorl and (bad) pop fstl in scas scas loope cmpsl dec xor pop stos stos mov sbb les xchg out push sub popl xor sahf push sbb xlat xor ja loope cmp adcl aas out mov imull sahf mov rcrb fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl aas decb insb xor push mov leave ret mov loopne jno inc aas or ja cmpsl test mov or fnsave pushf std mov xor pop popf imul sub pop stc out xchg lock and mov (bad) stos loopne xchg bound xchg push mov add sub rcrb or mov jge pop mov ljmp test and jns pop sub loopne xchg gs xor add jbe es cmpsl outsb lock pop mov insb xor (bad) int xor sahf sti jp xchg test lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jle xor into add pusha dec bound xchg xchg mov mov fisubl fsubl movsl jmp push cld push mov rcll add inc or orl sub xor outsl xor movzwl scas sti (bad) xchg cld dec fildl sub push aaa movsl push or mov stos sbb push jne pop cmp mov sahf mov lods into xchg lods in repnz sbbb add ret rol arpl stos aas int (bad) pop jo pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov mov pop mov aas (bad) mov sbbb push and or jno les jnp cmpsl je mov jns jns sti sub sub lods (bad) cmpsl lahf push xchg inc stos cmpsl aas cmp mov iret sub inc into add add lock test mov roll xchg fistps sbb (bad) sub lahf add jbe pop (bad) lret xor inc sahf adc xor aad mov xorl in int3 test sub jecxz mov popa mov sub movsl mov out xor lods je,pt mov push test in sub mov jns enter inc leave test inc xorl addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl (bad) cmpsb mov add sahf pop cld andl jns shrb out adcb into int mov add addb push cmp stos add subb loopne mov or push jge clc ret cwtl fisttpll addb cld cmpl (bad) push xchg mov fimuls jle sahf mov js jle test xchg nop mov push ss xchg mov out xor addb xchg mov mov lcall je add fsubs in in stos lods aad xor mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cld movsb (bad) mov or jns pop mov xor cmp or mov int cwtl jecxz repnz adc divb and push arpl fwait lret dec xlat gs test fidivs pushf insl xchg dec xlat adc lret dec sbb pop orl sbb test cli shl jne adc jne lods adc push fsubr jp popa cmpsb andl mov out test arpl arpl (bad) clc inc xor jns cmp mov pop jmp movsl add fwait mov mov mov mov fdiv sub mov ljmp lods xchg cmp int lods adcl or xchg (bad) sti loop xor std sahf sub daa adc xchg and int sbb into orb mov rcrl loopne and lcall ret inc int cmp mov pop sbbl lods add outsl inc inc mov sbb add popa xchg stc shrl (bad) outsb fldl xchg std xorl fucomip int3 fucomp mov test test in outsb jb test movsl mov cmp es push mov inc dec xchg (bad) fmull fdiv jle jo addl xchg dec xor test mov int3 rcll or sbb cmp popf mov outsl ror xchg lahf ret test push add pop add nop fists inc mov or lock sbb mov imul jge pop sub adcb fsubr fldenv mov sbb xchg sbb (bad) std int3 fisubrs into mov aaa push mov (bad) cmp adcb mov sahf addl (bad) repnz lock mov stos sahf ljmp dec es xchg lret xchg sahf mov sbbl aas jle push cli pusha push mov jne mov pop dec scas xorb push insl sub mov inc fsub mov inc (bad) shlb jo jne mov popa filds pop sub daa (bad) lret or call dec mov int3 outsl lock sub adcl fcompl xlat pop cli shll repz mov sbb out inc out pusha ljmp sbb sbb cmp loopne mov data16 roll scas int mov inc add ljmp nop call mov mov clc mov ljmp sub or push cld xorb dec jnp lds imul cmpsb and out inc and inc sbb pop ds repz sbb adc pop shlb dec std xchg addl cmp add cwtl add test int3 int3 int3 int3 int3 mov sub mov test je mov mov mov push call mov mov add mov pop mov push push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 adcl es cltd xchg fwait hlt sub inc mov and mov popa gs mov cli fisubs mov aam movsl mov jo push rcll loope shll notb mov mov rclb cmpsb (bad) mov scas scas xor xchg ds andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl data16 cmpl stos cmpsl call mov xorb jo cwtl cmc rorb negb mov in mov adc ds hlt jl xorl data16 (bad) mov orl lea paddusw jg cmp mov pop sarl ret fcompl mov ficoml xor and mov into (bad) jg es loopne xchg test clc cmp out scas xor gs nop xor xor leave subb lahf inc (bad) hlt test and mov mov movb jae fisubrl adc test mov fstpt xchg stos fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl repz dec push pop fucomip in mov xchg pop addb mov jmp loop movsl adc dec rorb mov lea sahf std mov mov jl mov ljmp xchg fadds cmp aam gs or lods lcall call jge in addl sbb jbe fbld push inc int addb push mov jae fistpll popa je push dec dec inc or jo lea mov inc jno shrb (bad) mov jns adc lds (bad) fmull dec testl out mov mov aaa test lahf xor inc pop mov inc adc les mov les add addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov push xchg xorl mulb cli les mov inc add xchg sub jmp call sub rol (bad) mov lods sub rol jbe leave mov std or xchg sbb mov or out xchg xchg and xchg mov and stc or loopne mov insl and mov out inc sub mov stos shlb mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl call repz jnp and mov lcall mov cwtl push mov add fptan iret (bad) xchg mov sbb cmpl iret mov adcl jnp xchg push in mov mov stc pushf xchg pop rclb mov mov mov (bad) repz cmp (bad) add in out mov mov lds xchg add sbb clc mov jns movsl lret stos adc int sub xorb ficompl repnz addb call popf loop into fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl mov mov xlat lods mov lods lcall or std hlt cld fnsave popf loop (bad) cmp fnsave dec aad subl push icebp int (bad) outsb fnstsw mov or int3 mov je stos xorb sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl stos push subb outsl rcrb xchg mov pop repnz push jge mov int add lds iret mov (bad) cld test into adc rcrb outsl lret inc pop andl into jno aam sub stos rcrb mov xor fisubrl xchg cmp mov popf or jne xchg add std rcrb and and push lret lock xchg xchg push lret call and test sbb in jno push int mov or sahf push push fildl and andl adcb icebp mov sbb movsl sar ljmp fisubs mov (bad) sbb mov xchg mov push mov mov pop pusha ffree test test aad testl orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl push push fwait lcall popf adc cli call jge ja hlt sbb int sbb and mov (bad) pop mov mov jmp (bad) (bad) adcb rolb lock cmpsl cmpsl aam lret fucomip nop or into movsb fdivs cld xchg push movhps xchg push pop bound je stos lods jecxz sbb and add andl scas jmp xchg std xchg inc pushf nop mov or xchg mov std jbe add or cwtl adcb mov and fcompl roll sti push add andl add dec jge sub inc xor das xor jbe enter shr shlb mov sbb sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl and stos mov popa out inc test adc push xchg mov jnp or repnz cld xlat out stos sbb adc (bad) mov mov xchg jl bswap pop or jmp xchg mov iret es rclb fwait pop xchg cmpsb clc mov cmp push cmp in sub fucom inc fdivrs jns lret add mov rcrb push mov sarl xchg cltd fwait in xor scas out push push mov (bad) cmp push test aad cmp or addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cmp cld xchg fldl mov jmp addb inc xchg mov lods es xlat push jl xchg sbb fcoml mov jmp clc insb out push mov inc shrb dec push mov push mov cmp out xchg inc lock lock xchg jle mov cmpsb sbb inc fists and fsubrl dec mov lds addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov test mov mov shrb lods mov orb pop xchg mov (bad) fcompl cmp sbb mov (bad) ret nop pushf xchg fwait pop hlt lods xchg push mov cmp xor jecxz or je and gs scas lahf lods adc add int sub xor and movsl xchg (bad) xchg mov mov xor mov inc xchg dec pop push rolb mov sahf aas adc test xor mov add mov jnp (bad) pop stos es out out push (bad) cmp mov sbb push adc sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl faddl jns cwtl pop sahf mov outsb daa (bad) xchg dec fcmovnu test mov push push lea lahf rolb int ret idiv out test nop mov ret gs aas fldt pop fidivs jle mov test test stos cmpsb xor lea mov pop inc ljmp cmc sbb adcl jle stos jae imul fst mov or or jbe cmp imul mov xorb ljmp cli pop push mov es sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl arpl das jns data16 repz loop daa pop jle clc mov add int sahf xor mov shlb mov fisubl xor xchg mov dec pop and fldl cmp cwtl mov call orb cwtl in (bad) dec ja mov adc decl stos lahf xor leave cwtl mov mov xchg int3 jecxz rcl test mov sbb mov sahf ss mov and cmp and addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xlat shll mov jg sar adc mul mov mov pop fcoms stos jne jp jge jl add popa sbb (bad) mov sbb hlt lods andl adc lock cmpsl mov fisttpll mov jae les fisubrl (bad) stc pop cmpl mov (bad) out xorb or mov xchg and or addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl lret jle mov subl mov mov stos aaa fimull and int mov loopne leave repz popa and lret and mov xor ja stos xor dec lds or addr16 cwtl sub idivl aam outsl ret les sub leave dec jbe movsl inc sub mov mov insb mov out xor sbb dec mov xchg jp mov rorb xchg addl out mov mov dec push std js push add sbb push das mov fwait cmpsl mov inc (bad) pop and jne gs pop add test fsub sbb repz pushf push lods popa int3 arpl sahf (bad) aad mov pop pop outsl rdmsr jmp ss add mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov jbe out test cwtl shll xchg out out inc shrb mov and fcmovne mov (bad) nop sarl xchg mov cmp mov cld into std cwtl push inc mov jle mov movsl push ret push mov scas lcall repnz jp inc mov cld sti cmp dec cmpsl andl add (bad) jbe pusha popa pop sbbl mov add ja lock mov sub mov cmpl pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov xorl mov data16 fwait movsb inc mov andl cmc ret cmpsb out jae pop sahf rcl mov lea sub sarl mov sbb movsl addr16 in mov repnz scas xor fisubrs push lea fnstsw cmp dec xor fidivrs ret mov xchg loope and flds in cld sahf shrl loop arpl adc lret mov lods mov test mov mov mov in mov addl mov sarl mov pop bound out dec in mov scas jge dec testl jle (bad) jmp inc mov xor xor fwait jecxz inc push xchg cs and movsl mov lods cmp addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl faddl cmpsb icebp xchg and sbbl sbbl xor test imul add ret shlb es fisttpll enter xorl adc cmp push sub push cmpl jmp cld les dec aam stc and dec rcrl mulb xchg insl mov jmp cmpsl xchg lea inc jmp jle xchg cwtl xchg loop shrb mov jge xor add sahf jmp sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl data16 scas lea shrl pop stos aam mov lea cld inc leave inc aas xchg jb pushf (bad) sti sbb mov lds jp (bad) leave ss xchg push push mov mov cmpsl push insl xchg (bad) nop movsb inc std xor clc xor (bad) out mov out (bad) lock into xchg fiaddl test fstpt (bad) ljmp cmpsl push and loopne mov mov cmp test xchg mov aaa rcr mov scas (bad) mov pushf add andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov fwait mov xchg cmp aad scas xorb cmpsl mov and mov loopne and out nop dec push icebp in in aaa popa sbbb (bad) xchg mov jb popf mov std gs dec push mov stos inc (bad) push push pop mov mov inc dec pop dec mov int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl movb cmp or xor xchg aaa or dec loopne daa rolb (bad) test repnz push push lods mov addb mov aam std jle cli xchg dec js test xor cs loopne jge lahf add pop sub mov xor fstpt aam cwtl mov mov mov cmp adcl mov je mov mov adcb inc in mull aaa ret jnp cmpsl sub xchg cmpb mov xchg cmpsl mov enter mov or pushl sub mov sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jns ret iret push scas sub mov ss fwait pop adc pop test xor test sahf loopne lock mov test xor andl mov outsl lea test pop lcall push test xlat (bad) cld (bad) adc addr16 popfw (bad) adc or in pop mov cmp repnz enter popf mov cld dec add mov fwait mov mov imul sub dec shrb test sub mov ljmp leave daa fstpt xchg push je and mov ret inc sbb fsubl inc xchg in in add rorl daa cli push les andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xchg les pop std mov mov mov xor fisubrl std mov (bad) add xor xor scas xorb cmp add inc pushf cmp scas cmp negb test jle sbb insb test rorl jmp mov and cmc popa dec loop ret scas (bad) stos and mov mov test or sahf xor xorl ja inc sahf lock mov fldenv lea iret xor mov adc adc xor adcl es or test mov imul lret xor jle push xchg or (bad) cmc mov and enter lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbb sub inc sbb inc mov sub ror jl in pusha lea jae imul mov cmpps dec cmp rclb xchg lea stos je std push mov push lret mov dec mov mov imul cwtl jbe mov fadds pop push rcrb dec xlat pushf out inc jge scas out dec je mov loopne xchg mov (bad) pop fcompl setnp iret mov insb repnz int nop lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lds sahf lahf imul mov add push xorl sbb cmp ret mov int3 dec sub xor (bad) cld xchg icebp mov enter adc in pop test adcb rclb pushl popa js imul sahf bound (bad) hlt xchg ret shll scas rcr (bad) xor mov sbb mov jmp fisubl andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl cmp sub mov inc pop mov (bad) and and sub icebp call testb test inc xlat loop cmc nop filds sub shlb jle aam cmp idivb xor sbb lock or cwtl int jns clc add imul (bad) into rorb inc mov jns lods mov xor mov fwait mov loope filds cmpsb add xorl add dec dec push push sbb mov int adc mov jbe aas jge call inc cwtl out cmp adc insb mov fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl jb inc ja xor out mov (bad) aam sbbl ds outsl leave (bad) xchg fldl cmpb adc (bad) dec test mov and scas xor add or sbb outsl xchg jbe out lcall cmpb cmp nop sub fnstsw call neg shl enter xor or repz lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl push loopne cwtl mov sub pop xor push mov in addl mov enter add cld and icebp sbb cmpb cwtl sub incb std sub and pop adc mov sbb lret adcb lea repnz cltd subl mov mov xchg fs aad push mov (bad) sti test jl ds lea ds loope mov shlb cmp inc jae mov outsl sarb movsl mov mov push cwtl out mov in lea mov xorb sub pushf loopne int addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov jbe (bad) and mov sub sbb test in in bound mov sub mov mov ficomps aad sub sarl fcompl in mov mov sub jo or mov ja loopne add xchg mov jle jmp les fstpt les insb test repz aas or adc pusha push xor mov les push cwtl call pop mov les dec lea mov xorl sub sahf (bad) adcl pop push mov arpl mov addl lds mov dec sbb pop add inc mov orb pop data16 xchg scas mov out iret rol xor fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl sbb xchg into push jp xor xchg rcl mov adc jge out push mov sub add aam outsb movsl jbe cmc call test repnz (bad) pop mov xlat lahf mov scas test mov mov shrl sti inc lret mov outsl cli lea andl pop decb mov pop adc es sbb push orb xor push xor sbb test push jecxz out xor lods push sbb mov mov stos sahf jmp dec cmc mov test mov das ror mov push cmp bound test imul sub xchg adc hlt jg outsl jno mov xchg daa lea data16 pop xchg mov int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb test mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl rcll mov lods dec rcrb daa sbb into mov repnz mov sub lds add notb mov mov mov (bad) stos aad out insl lcall fdivl incl xor xor mov out cmc cld loope cmp jl lcall add cli shll ja xor xchg inc sbb addl add andl add inc lcall jecxz mov pop out movsb dec popa adcb stos rorl mov fsub cmp sti int jmp aam jg cs push imul cli sbb addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl rcrb mov loop sub lcall (bad) mov sbb add (bad) ret mov push cmpsl inc leave mov (bad) (bad) sub xchg mov daa pop in bound xor dec iret lods pop inc (bad) jecxz fsts sub std outsl in enter test dec popa cmp roll ljmp subl test enter jmp mov filds repnz lcall mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl jae int sub jno hlt or subl xor mov pop sub dec outsl rorl je xchg add mov mov lea inc jae jge pop dec sbb inc pop jo inc push frndint push push mov mov xor iret pushf mov test repnz inc mov (bad) sahf mov add lds mov aas test pop push push call cmpsl negl sbb andl mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lret aas add cwtl pop cmp ds test daa rcrl stc or test nop scas mov sbbl sbb sahf sbb scas mov sahf dec into and sahf cs push cli cmp cmpsl sbb cmpsb imul pop scas push push sub mov sahf dec loope je jecxz mov jle xchg sub loopne xchg xor mov cmp in scas fsts pop (bad) mov xchg (bad) ljmp mov xchg fisttpll addl adc mov andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl add pop roll enter mov das (bad) js push lods mov call popf scas aad add filds (bad) inc ss sub mov out mov nop xchg adc test cmp cli push lea pop pushf in sbb ret pop push loopne ret into inc ljmp adc nop les addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl (bad) incb fnstsw push out mov in pop ret mov imul popa loop dec mov sarb mov push sub scas or pop andb mov int frstor cmp jno sahf inc out test ret call push mov loopne ljmp mov in adc pusha rcl out dec mov sysexit sub enter cmpl sbb cli rorb sahf add xchg repnz cmpl xchg dec xchg cli imull mov in push frndint xor imul in mov popa dec sub add testl cwtl cltd and inc lahf jge mov cmp xor jge add stos (bad) mov js int jbe cmp sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl enter orl insl cmp fdivl xorl sbb lock push test push cmp jg and mov std mov pop les jbe shl jmp roll cmp out xchg inc cmp (bad) in inc lock jbe jecxz cmp lods dec scas je,pt and test sub inc cmp aad or movsl (bad) lea cmp icebp lods cmpsl leave out ret mov xchg jbe xchg ja movsb sbb jge xor xchg mov insl ret hlt ds frstor stos push enter xchg in ja (bad) addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl repz roll std xchg xor cmpsb popf rorl addr16 enter mov mov jecxz xor clc xchg cld mov cmc les stos call cwtl cmc fisttpll int3 int3 loope xor xor push jle (bad) in jnp xorl xadd mov mul dec jns inc sub xchg lcall clc (bad) xorb pop sbb (bad) iret xor cmp xchg fists jbe sub xlat (bad) ljmp jbe (bad) dec cmp stc xor sbb test pop lcall scas mov imul stc push xchg hlt je out pop lret hlt rep mov cmc rcr int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl mov fldcw shll out mov mov jge movsl mov mov jge mov inc mov dec fcmovbe mov test push in mov scas jbe stos cld addb orl pop cld lcall out fistps fldt adc rolb xchg xor mov lea pop xchg cmpsl in push jg call dec xlat dec dec loop add sub in adc xacquire inc add inc in fbld cwtl cmp inc orl out ljmp push mov mov cmpb data16 lea mov dec test jae and scas call dec mov mov sub sahf mov cmc adc adc addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl add adc loopne jbe pop fcmovnb mov orb in (bad) dec cld lret cld fucomip xchg outsb xchg push mov subl push cmc push adcl sbb sub lea test cwtl lea repnz jb cmpsl push sbb int ficoms add cli stos loop insb fdiv repnz movsl mov in xor inc roll leave (bad) repz push stos push arpl insb jo test sbb in ja adc and nop movsl sti loop jmp xor xor inc dec mov repnz je adc xor xor cmp popa xrelease and stos scas mov addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl push test mov scas aam adc sbb sbbb jbe pop or sahf push icebp sbb addl mov push jo cld arpl fadds push cs and pop inc sbb in insb and sub fwait into sbb cmp fnstenv sub repnz loopne out fildl stc into pop sbb cmpsl enter mov rcrl test sahf into cmp mov push and std incl mov add orb mov and int3 adcb push orl sbb stc mov in mov int3 iret stos cmpsl xor mov ffree lcall cwtl lea out adc push icebp sbb sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl loope iret dec sub hlt mov sbb xchg rcll scas sahf bound mov popf enter stc lcall sahf addb ss and mov cmp movsl push mov add mov cwtl icebp mov fbstp imul mov xchg in add cmpl in popa (bad) addl sub push xchg pop jbe mov js inc mov jae fmuls dec hlt lds scas outsl imul sahf sub aaa pop pop mov les mov cld push subb ret jns bound adcl adc inc push in loope ret popa loopne lds pop xchg repnz stos je jge adc add icebp pop lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xor test xchg pop lea (bad) push jl movsl dec popa shlb pop sahf dec lea (bad) and orl jno inc inc mov testb sbb xorl mov sub sti (bad) mov mov pusha sti aam or sahf jmp jmp icebp cmp mov mov mov ficomps jge (bad) into divl add sub ret jmp orb jle dec or data16 fdivl clc push movsl jo lea fwait into sbb test andl into push decb jl mov out movsl mov rolb rcll lret icebp aas inc movsl sbb mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl jge inc xor dec mov loopne pop fwait int sub orb cs pushf xchg addl push xor xchg and push cli pop test rcr (bad) ror ret (bad) aad rolb jnp sbb es pop or or (bad) sbb stc fiaddl mov push into (bad) ds mov push xor xlat adc add jne movsl push int3 popf out fs stc lods fwait repnz push pusha sahf push add les and mov testl (bad) xchg popa ficomps test inc inc add lahf xor adc cmp sub cmpsl jo xchg push insl xor mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl rorb int test jo rcl fisubl fwait mov jecxz sub push sbb fistpll sti les (bad) xor dec gs sti clc dec adcl sarb adc push jmp js jp dec mov ret cwtl dec test sbb loopne cmp cmp imul mov xor inc (bad) addr16 repz into movsb sarl pop repnz mov call sbb fwait mov rclb (bad) xor xor addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov pusha into cs into cmpsb mov cmp sub in in jno nop loope fs lock mov sub lea sti mov into les jbe pop xlat mov push out in pop mov jns roll aas gs cld or stos enter into addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl inc shrl push mov and test sarl push adc into push xorb in xlat jae inc pop and lcall sahf andl jecxz add add jecxz mov or jp rcr mov mov daa stos test sbb and cwtl cmpsb xchg cltd cmpb jno test and mov test sbb adc dec stos aad dec pop mov pop fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl lods insb fs pushf sub aaa lock test or cli jmp push out xor cwtl out test xchg jp mov sarl lock jp in mov xchg jnp mov stc insl stc dec sub push popf pop decb out jg sbb jnp,pt push xchg xchg enter ljmp (bad) movb mov lret sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lds fisttpl inc flds mov sbb mov pushf popa idivl sarl xchg mov adc enter (bad) mov jo mov cmp dec repz addps (bad) dec pminsw xchg pop xchg int3 push addr16 testl aad cli subb loope sbb and inc pop aas inc sub mov jge cmc lret jno sbb mov scas xchg fsubrp ljmp adc cmpsb xchg push and xlat fdivs push sti push imul test stc call test jge cld pusha push fsubs sbb push and jno sub lcall lcall push lods mov ret cwtl pop or xchg in shr pop cmp inc jbe mov add mov popa addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sub lcall fst aad std es (bad) xchg jge data16 int sar mov sub dec fidivl pop gs hlt nop mov in mov fstl fwait adc sti lock aas (bad) icebp mov pop sti cmp gs pop pop mov bound into adc testl mov xor pop jbe in mov arpl sbb inc cmp sbb cmp test xchg add push jl out lds ret jge mov mov push test xchg jae aaa xchg mov sbb and arpl sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl jbe push pop or xor add xchg dec jge outsb adcl insb gs add add fwait loope cwtl lea pop dec scas pop iret sub xchg fnstsw subb add pop mov cli rorl jbe xchg mov xchg dec inc dec sbb cmp pop mov inc mov xchg jb pop je push pop int fimull clc sub test (bad) int sbb je sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl test mov addb sbbl or sub sub pushf sbb and mov sub hlt jbe push out sbb jp loopne dec sub test fwait into sub push call into fdivr popa scas loope mov adc fcoml cmp imul ljmp fcomps jp dec add mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xlat mov (bad) nop push jp out and fstpl outsl sub lret pushf xchg add cmp pop and xor add addl jg nop add cmc aad mov fdivs sub jne sbb xorb add mov jge sub jecxz in jae (bad) jns cmp cmp mov mov sub lods into push xlat ds adc mov sub ds repz stos xor sbb ficomps add sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl jbe movsl jg inc js stos push pop aam aad stos pusha lea lods jbe push sub mov fmul out or lret or sub nop inc test push idivl lret testb or push jp adc sub call push lock xchg sub pop jae in lds mov jmp sbb sbb cmpsl call shrb les mov adc fsubr lock jmp push leave cld lret scas or rolb jbe cmp jbe shlb lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xor les cmpsb (bad) js mov push (bad) icebp pop rcll cmp lcall xchg mov and dec cmp inc add jb andl in icebp lds xchg popa ret mov xchg adc mov aad rolb add jmp icebp pop (bad) sbb fildll dec icebp repnz dec sti jmp andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sub cld cltd mov cmpsb mov adc mov pop rorl or cld aam repz adc (bad) xor or add les cli dec jge imul sbb stc adc xor add fstpt xchg imull rol mov mov sub sbb leave cs fwait adc stos test ret sub xor cs scas xor add cmp aaa jp push lock incl clc cwtl and aam orl sub loop fs pop sub clc xchg mov cmpsb adc fisubrs mov mov jmp push mov mov or xchg mov divl xchg inc sbbb mov push cmp xchg test cltd cs sbb test cmp jno dec sub jmp mov (bad) fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl mov mov leave popf cld xchg dec into inc xchg mov fldenv xchg xlat je out into int addb jge push rolb xor rorl adc xorl push dec int3 lods mov xchg add adc subl dec and out adc xchg xor rcrl into pusha xchg mov data16 mov dec in or push pushf (bad) les adc add mov sbb cmp or pop leave lea nop xchg push adc nop sbb out jnp inc pop dec xor addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov mov ljmp mov push (bad) cmp lret aam lds scas test jle mov lods mov pop mov dec push fimull movsl or mov mov xchg loope xor movswl cmpsb orl jo insl addr16 jae into fwait scas xchg inc dec into mov rorb sbb adc pop cld mov add andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl inc jbe rcll fmull stc push pop mov stos icebp iret (bad) and pop xadd test lock fcmove rcrl pop test int sti fs dec pushf xchg lea addl addl sbb (bad) fnsave orl cld loope fnsave mov push xchg xorl rcrb inc cld inc fbld leave dec sahf sbb ret (bad) roll bnd leave fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl ds add test scas jo in cli lods cmpsl ljmp push clc (bad) clc cmp test pop sbb arpl or xchg (bad) lea or call jnp pop shlb inc xchg inc pop jne push enter lea mov (bad) adc popa out or int rcll mov push pop jb insl ljmp loope add addb jl push shlb arpl dec jae jae lds cmc addb adc pop dec sbb pop mov push les pusha pushf lea xchg ret pop fdivrl add pop lret test mov mov pop adc (bad) sbb push xor flds pop das pop faddp cmp dec int3 test cld mov shll mov popf and sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl imul xchg loopne mov call pop xlat xchg mov inc push ret push ret lds xor jle sub int aas jb sub out sbb inc mov push ljmp pop xorl rolb sub ror sbb dec mov adc dec lret je fmulp adc push and inc lret or sub xor inc lret fists cmp insl sub fwait scas sub pop addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sarb pop js pop lret sbb xchg fadd xor imul and mov xor sub icebp jo xchg or sbb xor popf icebp add out and xchg add pop sahf sub popa cld ficompl cmp cltd int ret icebp mov sbb mov pop outsb sbb cmpsb loopne pop insb sub sbb gs in (bad) vunpcklps lods incl xchg and adc daa pop xchg adc mov or sarb (bad) ffree adc fwait cmp (bad) xchg (bad) scas jb push adc add xor pop popf inc pop adc push cld xchg test xchg sbb xor lods fimull mov not es lock call push mov jns cmpsl lods pop imul lods sahf push movsb in (bad) lcall sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl and mov (bad) (bad) fists lods push or sbb cmc or dec cld flds pushf out or fdivrl mov mov xchg adc adc mov xchg fwait push repz push xor in and xchg jecxz xchg mov test push (bad) roll mov (bad) sbb xchg into jp (bad) or fldt icebp addl mov shl xchg int sahf lds outsl (bad) adc cli push std pop cmpsl out lret xchg cmp rol bswap je outsl mov out sbb and lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xorl jge cmpsl sub jb adc or mov pop sti dec sub ja lods enter jne nop mov pushf scas mov push and lcall pop push jmp out sbb ficompl sbb or lods push shlb mov (bad) inc adc push out add ret mov or addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov fs add jnp sub lock out cmp jg fadd adc push push jno fadds jnp mov std int mov push repz pusha mov into add in (bad) aam adc aam sbb pop call out sbb nop mov sbb sahf mov cmpb xchg pop inc cmp push cltd testl ljmp lds mov ss jp push iret rorb test xchg push sbb rcr adc mov lods arpl cmpsl out inc imulb (bad) or sbbb fwait sbb loop add mov adc or movsl fld cltd cli int3 mov fstl push fistps inc mov stc mov dec add orb mov inc repz testl movsb sbb mov xorb cwtl lds xchg popa outsl sbb pop sub aad roll addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl xor aam hlt jbe pop pop mov data16 int test pusha push mov jp adc and inc pop jo sub out lea divb mov popa push sti adc cmp imul mov les mov xor lret cmp push cld faddl out mov push mov sbb jno push sub add fdivrp shll cmp fsubrl fwait dec stc scas dec loope jnp enter fcomi pop fildl comiss sbb incb loopne xor jns fisttpl nop movsb jae mov (bad) pop leave out sub cmp mov loope and and int ja mov xchg leave lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl scas jg or mov leave insl jbe adc hlt mov cwtl in stos dec leave sbb clts data16 ljmp xchg jbe pop mull mov or rcll add ds xchg enter cmp pavgb adc jb cmpsb mov add mov mov (bad) xor cmp or rcr mov push stos pop mov fisttpl lods leave and stc daa push std pop inc inc ds rorl nop enter out sbb leave push or cld fstl arpl cli mov ss out add addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl scas out pop push pop jb rcl orb mov adc nop enter dec loop fs jle cmp add jne pop xchg fnstenv lods movsl add test out (bad) fstps cli loop push notb test or movsl cs movsl loop fnsave out adcb cmp push lea imul cli push mov (bad) cmpsb lea jmp dec xchg sbb test out inc mov jne cmp mov cli inc fsubrs ret mov sahf dec and insb ret push scas (bad) loop cltd test inc les sbb std imul mov fldl int3 inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl (bad) iret and sbb sub andl ljmp sub rcl sub and cmp andb shll and add fs fadds fwait lret mov frstor sub (bad) aad and lahf sub sbb lock and xchg cmp cmp lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl sbbb push sar aas out (bad) aad mov xor popa mov test mov in adcl jbe sub jmp sub test stos xchg mov jge xchg cli sub push sahf sub hlt mov sub cltd mov adc addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sub inc jp push stos and inc fcmovnbe xchg sub loop jle scas sub hlt or mov stos sbbb inc inc xor inc jbe mov bound sbb and push xchg je jl xor iret sub dec outsl cmp or and (bad) push inc mov movsb jl adc mov test outsb mov xchg sbb cmp add decb adc mov xor sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adc arpl add sub mov je sub shrb arpl fnstsw adc fistps das lret enter testb pop jne stos mov jne sub push add pop into cmp pop adc cmp cltd mov ret mov or xchg imul psllw stos lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cwtl arpl stc mov mov ror push push cmp dec nop in jae jp cmp rol lahf adc jb cmp movsb xor test jo mov mov and fistpll into shrb add shr test das jae (bad) fstl and sbb loop push mov pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl lcall inc call xor push or sarb stos xchg outsl jbe cwtl xchg test push test dec clc lret cmp push adc popf dec sub pusha pop jnp shlb or call cmpb dec lahf xchg push jne fistl insb popl in jne shl loop sbb jnp lods adc push add shl pop fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl sbb inc scas lret cmpsl mov cli mov popf jg mov and mov sub dec nop and rol jae push jg flds add xor jge int3 ret inc iret std (bad) into iret int adc lock inc rdtsc into loop test sub sbb cli test clc fcmovne push push mov sti mov out xchg xchg bound jg sub test and mov ffree mov dec jbe pop cmp cs enter stos int mov iret (bad) xor (bad) stc push lret cwtl inc cmc mov lods dec jecxz ja add iret ficoms rcrb (bad) arpl repnz shll lods cmp lret xchg fistpll inc jno push movsl sbb out push ljmp (bad) fs inc or mov sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jl adc clc fisttpl arpl in and xor test push adc jae mov mov testb scas (bad) or dec rclb xor popl mov jle pop jg xor dec lea test sub mov and cmp push mov xlat or fwait dec popa addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pop lods mov out ret pop test mov les out cmp push xor xchg dec or std push mov std adc dec stos jbe sbb push push adc pop aam es dec ret inc mov cli xorb test xor add mov adc mov add pop sbbl loope ja movsb and pop add (bad) fwait stos lea dec fcmovnbe (bad) cmp xchg pop daa lock fcoml inc sbb rcrb nop loopne jnp push jns jmp scas fistpll insb test test and dec outsb lea mov lods cli push mov or test mov (bad) das inc fnsave addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbb sbb test test arpl sbb adc aad movsl add rorb subl xlat les int3 std mov pusha outsl addr16 cmp sahf add push cmpsb iret lods dec xchg int3 jle loopne fs setno cwtl mov icebp adc fnsave xor sti mov dec adc mov xor xchg xlat andl mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov mov cli cmp (bad) add fbstp xchg inc fdivrl cmc psraw mov pop in jmp ja lea lods or xlat sqrtps out das fidivrl cmovbe test and push sbb mov in loopne mov je mov stos (bad) cmp stos sarl dec movsl stos mov pop enter or jns xchg cmp pop insl mov test int3 btl hlt or mov leave xchg loop sbb fwait shlb pop addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl leave sbb push xchg sub xlat xchg sbb dec and rcl pop push addr16 std lock add mov jns je mov mov xchg ljmp adc cmp fimuls (bad) test lcall mov sahf ret xor cmpl sub popa popl push sbb add ss dec roll add sbb fiaddl lret or jg mov xor test mov clc cmpl mov cmp bound insb test lret hlt in xchg sbb add xor in ret in rcrl in lods jg add xchg inc xor out adc clc sahf fildll lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl mov (bad) xchg ret dec (bad) push or leave cmp fstps push roll pop add sbb leave mov fwait test je les aad fisubrl cli repz std inc and mov (bad) jmp mov inc jge jo cmpl xchg inc jge cmp inc std (bad) or push stos mov adc hlt inc call andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl or ss aaa mov gs pop jae inc test outsl mov cli mov iret mov and (bad) inc loopne sbb sub sbb sbb cmc cmp xor wrmsr out pop scas test stc into movsl xlat xchg not in (bad) (bad) test mov sbb mov test sbb mov mov addb xlat push jmp (bad) xchg int jmp fwait mov ret and nop and andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pop mov mov dec and fwait sti lock push rclb push or (bad) dec sbb sahf ss bound ljmp cmpsl int fdiv pop pop and mov sub add pop jo test xor test cmp jecxz call int push test pop icebp xchg sub iret mov fdivrs divl sti icebp push hlt dec sbb decb xor lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl xchg xor arpl mov sbb test push xor lret push fs aad data16 cwtl xchg mov dec mov out xor test xchg test jb stos (bad) aas rol test pushf sub std pusha test mov aas and outsb mov leave insb adcl xor fwait pop push stc pop add mov jns dec into xchg jno push mov push or iret add jbe mov jecxz jb insb clc xor (bad) sbb cwtl scas jmp adc sub cmc clc adc mov sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cld insb in add pop ja or push cltd mov or testl mov pop insb int addr16 xor mov xchg out inc insb out loopne lds out jp rclb fsubrs in clc adc mov std insb add out clc mov xor and rcrb mov xlat jp stos (bad) jmp mov imul shlb iret mov sbb inc jg pop and pusha insb fidivs int inc cwtl jae cmc sbb insb pop ss les imul add int clc xor sti mov cmpsb and push xor jg mov sti jno leave sub adc loop lea jp sbb sti roll sbb fcmovb xor lods mov jo roll fildl pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pop and loopne and lds call xchg pop cmp nop xor stos xor jge sub inc sbb aam aaa filds mov lcall lods cmp mov cmp xchg pop mov pop jle cmovs mov movsl icebp adc int jae push aad pop add hlt rclb sub jecxz jle xchg leave mov aas je push pop repnz lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl cmc xor push sbbl inc add jbe xor and xabort mov pop push (bad) jns das scas gs negl icebp ror leave dec imull ja sahf mov xchg mov fildl test xchg sub jns,pt shlb pop cld (bad) lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lret add lock sbb sbb xlat mov push mov mov stc mov adc in scas inc lret fstpt loopne aad js mov adc (bad) xor std stos aam and mov pop lret mov mov inc jae mov fisttps test hlt mov or jecxz icebp sbb sbb lds icebp stos dec pushf pop or add test lret adc les sahf cmp mov cmp cmp andl out jp adc cmpsl cs cmp mov pop dec js loopne xor xor mov adc rorl pop cltd push lret stc in outsl xor clc fldl addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl (bad) bound xchg es icebp mov xchg mov sub icebp push pop mov inc xchg stos cmp sub andb icebp inc jecxz pop and daa icebp jecxz cmpsl rol rcl cmpsb repz fstp pusha clc icebp xchg jno sbb xchg xchg sti movaps icebp push imull xor or stos clc enter es lret cmpl sbb push push add xchg mov cmp movsl dec addr16 mov ds add inc cmp adc jo xor mov aam jae shl add inc mov xchg dec in rorl lahf lock mov lret lcall mov adc mov pop xor xchg add insb xchg rcr inc mov cmp inc inc mov mov mov xor test lods adc enter in sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adc imul xchg (bad) jb mov outsb fstpt adc pop adc ljmp or enter xor lret fwait sbb int push pop cld mov imul jl in and imul enter adc test jae mov stos and mov enter ret xchg mov xlat xchg mov inc sbb xchg outsl je pop jno xlat fistpll fisttpl sbb sub add push stc mov adc punpckldq xor dec sysexit dec aaa jno nop xchg rolb pop insb cwtl (bad) addr16 cld sbb inc mov mov xchg adc adc in aam xchg xchg fwait cld xlat mov mov mov stc xchg aad lods pushf loope dec push cwtl dec xchg fdivrs pop jge push add jl mov xchg jmp stos lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl adc mov outsb jbe sbb out fst fs cmp lock scas pop push pop ficoms xorl dec mov pop enter cmp mov ret std fiaddl jnp out add mov jmp cmp ds (bad) cmp leave jbe into mov dec xchg mov adc push jne push sub mov out or xor add jle icebp push jb xlat int mov (bad) sti mov int and test outsl out fistpl mov or mov (bad) and in std jb or into in xchg xchg jmp lods add mov or cmp sbbb orl push fisttps adc test sub movsb inc iret xor rcll jbe push sbb inc sti mov push pop test fdivrp arpl pop addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xor add jg xchg shlb ret cld scas mov sub adc adc mov inc sub inc dec pop enter orb fdivl std jnp das test test out push outsb je add sbb ret cmpsl outsb sub xchg push shll cld mov jl dec jl popa pop into sahf lods aad icebp sahf jnp sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl imul hlt adc outsl into mov imul movsl and lock push fdivl sbb or xchg movsb ret jmp lds test xchg fldenv jmp stc ret mov lds mov add mov sahf shlb js (bad) lock aam rolb pop nop std jmp xor mov scas cmovl cmpl adc jge mov sarb dec sbb inc (bad) aad sbb lea mov movsl adc xchg xchg out cmc mov pop repz bound loope dec (bad) rorb fcoml out mov lcall setbe nop popf shr sub rolb jb andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl int movsb or repnz test imul sarb shld popa (bad) pop orb add std or mov loopne xor inc cmpsb leave dec scas push sub xchg dec mov push jmp xor setg push add aaa iret ret sbb fwait orl orl xchg sub lcall xchg add mov int shrb movsl pop fsubs movsl call cmp lret jmp dec or je lret xchg add sub mov jmp or lcall xlat addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl in xor jge mov (bad) adc pop sbb call inc insl dec ljmp and icebp test push xchg mov (bad) pop fs add and mov idivl dec sbb nop scas cmp inc push push in sbb cltd cmp ds mov xchg ja icebp lahf xchg insb and es rcrb or sub sbb shrl sub rol pop adc loop mov les repnz loopne fsubs arpl test xor sbb ss xchg fdivrl fwait adc es push pop mov push int add and sub xorb arpl xchg or add mov repnz pop test or addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl xor xchg orl sbbl fstpl call mov pop arpl in push out xor mov push orl adc cmp or mov icebp or mov push and iret mov outsl icebp es add push pop movsb imul push icebp add outsl lret adc mov xor sub ret xorl lret push or pop icebp test outsb fnsave pushf mov fwait mov shl je andb (bad) sbbb addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov push int3 test sahf xchg popf in cmp push addb flds inc ja or dec add icebp stos gs sub orb jns test jge push mov push and cmp cmpl insl sub xchg mov mov mov out inc (bad) cwtl cmp xor pop out loop fwait xor adcb xchg jmp cmp insb sub (bad) pushf add push xor sbb into jge subl lea sub xchg jg jecxz mov pusha sub pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl into sahf (bad) (bad) sub add or cltd out adcb push and test mov mov fnop pop pop or leave jp (bad) cltd jl adcl xchg in popf inc mov lahf add orb or dec aas scas loop lahf mov xchg xchg jnp sub xor or xor push or andb jnp mov add push xchg mov imul dec andl addl addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl leave ficoml leave cmp inc inc pop enter lds mov cs and add adc (bad) lahf test or loope pop push movsl push (bad) mov je and mov jno stc (bad) ljmpw xchg push rcr (bad) int add jecxz pop fwait push xchg inc cmp imul les mov xchg fstpt scas pop aad out loopne cmp arpl in and bound xchg lods int3 adc shll mov aaa mov andl call fs fisubl push push xchg sti insb lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl inc mov out popf sbb sub cwtl outsl (bad) push xchg and lret push rorb sub mov stc and test daa xchg mov dec mov fwait call add je cld dec aad imul int3 shll lock dec inc jecxz test es cmpsl mov test rcr daa mov cwtl lret and and dec stos rcrb fmull addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov scas and mov jecxz add sbb pop es bound dec mov add jle xor add lret xor cwtl outsl xor cmc packuswb mov mov sub fwait icebp fbld mov inc and sahf pop pop push jo sbb sbb pop negl add fldcw and inc xorb and nop sbb sub jae int test fnsave mov ja jo pop inc shlb push xchg shll mov (bad) in (bad) jecxz je mov addb cmp xchg gs (bad) iret jns jae sbb das scas dec sbb movsb mov scas add mov lds and in xor jne pop inc jle fsubr pop es out or aaa adc addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl mull pop and ljmp jmp ss into jbe or shld mov ret mov inc adc fsubs scas notb inc cmp jne mov call inc aad repnz cmpsb jmp fs rcrl call mov fwait add mov (bad) pop mov lds push xchg mov mov cmp mov sub mov cld mov mov mov je sahf into mov inc lcall addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl shrl (bad) lods lahf jnp mov sbb and xchg mov popa fnsave xchg mov mov mov mov xchg push lds test popa hlt mov pause pushf cmp add mov out movsl dec jne or mov call ret movsl mov imul loopne jge daa pop or jnp push fistl mov subb and inc ret ficoms (bad) int loop les loop xchg adc test push add addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl add xchg and jno sahf nop/reserved ret dec sarb mov lahf repnz lcall stos jl push sbbb inc leave cmp dec nop gs leave test mov mov nop pop mov dec pop aaa xchg xorl adc fs push into push ja aad adc aaa fnstenv mov leave in cmp cltd std dec push js push xchg dec rcr leave into nop cmp pop add mov xchg leave mov mov es stos inc push mov xchg jle leave rcrl add jnp mov jg test fcoms iret fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl dec test jo test push ds js lds and or enter mov jmp dec or fnstsw test mov jg leave addr16 fnsave pop test rcll adc jg leave (bad) leave in fsts push pop cwtl sbb or addr16 int jp mov xchg call (bad) pop lds shr xchg or in xor jbe subb jmp les loopne mov xchg cmp aam cmp not clc cmp mov loope dec sub mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl push xor xchg and fsubrl stos in push push jl xchg push mov jle sub jb cmp jle ljmp jo mov mov mov push lret test (bad) shrb cmpsb lcall push fimull cs sub movsl mov stos push fcomip jne icebp lret iret mov xor and fxch cmp jnp push adcb fisubrs pop sub xchg leave outsl mov sbb inc test das outsb inc fbstp mov lock (bad) out fstps xor xchg jo cli push inc int3 bound andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl or subl je sub mov addl shrb lret popa out movsl jo popf xchg pushf int push popf jmp xchg mov push loop stc (bad) mov push and mov aaa daa mov popa ljmp mov test sub jge pop loop flds (bad) test pop mov and add clc ljmp je fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl or inc adc sbb fldcw inc or (bad) jmp xchg cmp test (bad) adc dec iret test lock test lods mov (bad) lods movsb jg repnz leave test cmpsb xchg in andb into sbb cmp or sbb cmp lea sub jne lahf stc mov gs mov dec loop xor je stos in mov dec mov sti cli stc or or pop dec add adcb jbe xchg dec mov or popa std out mov adc xchg dec and cmp scas inc mov mov inc xor (bad) out sbbl cmp into clc aad fs pop mov pop pop sub (bad) das fwait adc addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf push mov sub push push push mov push call push push push mov push call call mov mov push call add push mov push call mov mov push mov push call add test jne xor jmp push push push lea push call test je lea push call lea push call jmp mov mov pop ret int3 int3 int3 int3 int3 and hlt fcompl add scas mov iret sub add jbe lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov clc sbb push cmp mov punpcklwd out mov movsb xchg mov xchg jbe scas insb mov mov sbbb stos scas jg (bad) (bad) sbb in repz mov cltd add ds les cld out lret (bad) mov cwtl jg or in call ffreep sub mov xor pop subl test iret dec inc scas push mov fs jae xor xchg movsb imul xorb cs das sub test or xchg inc icebp xlat lock cmp and mov fwait aaa aad je sub xor fmull mov jl xor sub and jge jae adc imul bound pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov andb movsl (bad) aam shlb popa pop or jmp out xchg stos imul dec xor stos add incb jge in out enter test cmp mov stos mov sarl js aaa pop jge mov in xor jo pop jb clc lods pop mov (bad) cmp add int3 out and add add dec mov cld add push mov ret popa sarl jle sbb pop or loope lcall mov sub mov mov lods push nop cmp test mov jg imul fs cmpsb add out lahf scas jae pop enter mov xchg rolb adc lret cmp dec sbb adc mov xor push popf fcomps movsb jl sub mov lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl out arpl insl mov lcall enter fstpl fsubs test stc push push sub cmp adc jp sub add outsb loope xchg popf mov mov lea push xor repnz pop cli xchg pusha fs or pusha xor lret jne dec push mov addb xor inc xor fs aas cli sub clc push ret xchg jb xchg aas aaa int3 adc addr16 int3 cmp mov fsts mov mov into subl mov stos mov pop mov xor shlb sbb push fdivp in dec (bad) dec (bad) imul arpl adc leave mov andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl rorb mov int3 clc sti fwait rcrb sahf or pop test push jge int mov lea or push dec repz shl js pusha sub pushf std jge hlt (bad) arpl push orb hlt scas cmpsb das xchg mov adc stos movsl cmp inc lahf cs ljmp jo pop cmpb adc (bad) shrb mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pop mov mov xchg aaa test inc into mov outsb in add cmp dec loopne out fidivrl mov rorb (bad) inc je pop jae out idivb cwtl push aas fisubl (bad) or mov insl inc out adc adc sbb std in inc imul loop out movsl ret xchg mov scas nop cli (bad) out push mov lods mov je jnp mov rcrl xor pop stos es adc in inc pop add out in xchg sar adc xchg mov push mov and enter jnp das aas (bad) xor mov xor movsl icebp jecxz in mov stc jae push pushf int sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl lret clc or cmp xlat ljmp push in mov push sbb sbb shrb pop popa imul (bad) cltd jl pop shl in and (bad) aam add mov push xchg lea bnd mov aam enter dec cs fcoml (bad) movsl ret mov pusha in mov sbb sub cmpsb xor aad out inc pop movsl les fxtract shr pop shlb rcrb push pop (bad) or icebp dec cwtl mov mov (bad) jno int xor pop in movsl stos jecxz adc pop and pop inc stc test clc movsb scas in or adc xchg add xor gs add (bad) push pushf add mov xchg push loopne or addb pushf dec jae in cmp dec test lcall cmp addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl out sbb mov dec das outsb mov cltd clc mov out lods in repz (bad) pusha hlt (bad) jge push mov mov mov pusha jle cmpl mov fnstcw lods outsl and int3 cli sub sub push sbb icebp into and rcrb repz gs jnp push fistps lahf shll lea push adc xchg push loopne lret mov insl in in addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl es pop lret mov repz jb das (bad) push bound cli mov stos mov into inc xor out lret outsl or rcll pop inc sbb movsb adc jnp mov jle cmp pusha sub jge xorb rcrl inc ljmp adc adc and cmp pusha gs fstpt xchg cmp sar pop lret jg sbbl sbbb pop add xchg cmc andl lahf out test and loopne add adc insl lods imul adc aam inc gs ss es jg xchg mov push cmp mov loope mov int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl mov data16 sub xchg xor push fldl add (bad) fcoml adc fwait cmp test pop xchg xchg lods leave arpl aam ret sbb mov cmpb std or add or jecxz cltd loope and dec gs cmpsb and scas mov mov lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jp hlt loop dec mov adc fisubrl jle pop les cmpsl (bad) cmp mov rcr jge repz xchg fisttpll sbb mov pop pusha popa sub scas fdivrp add sbb inc add xchg fldenv mov inc mov nop pop fisttps in inc loop scas sub adc orl (bad) sbb mov xchg xchg fldl cmp sub cmp scas sub mov fsts jmp repz mov xor cli bswap jnp fistpl outsb cltd ret mov mov lock sbb xlat mov xchg push ret jbe,pn repz push movb mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl rclb loope and test cli or mov xchg mov movsl cmp xor test stos xchg and jle and je mov or shlb and adcl hlt out sbb (bad) ja sbb aaa pop movsb xor filds fsts jae aad cmpsb mov inc leave test mov iret add aas sbb cs jl sbb mov int3 push iret out cli call addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl or enter cmpb jb fwait mov add pop lahf cmp or sub cmpsl xchg lea lret add loop xchg jge ja mov inc push enter cmp mov dec in or push lock mov lcall shl int3 inc xlat and jp out rorb adc mov bound (bad) outsl rcrb jns sub clc cwtl mov jbe shl addr16 and inc test sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xchg gs (bad) ljmp adcb ljmp cltd jbe xchg bound stos xlat bnd (bad) repz lahf ret mov lea mov subb mov mov inc or sar pushf cli cli push xchg test mov hlt mov sub (bad) mov mov jne aad cwtl or xor aaa sub sub jno lods sub adc scas imulb pop adc into sub inc mov loope hlt cmpsb es xchg pusha pop jmp or sbb dec push xchg mov fstpt mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl add in test adc adc (bad) jg mov adc (bad) arpl add push clc and mov pop loop sbb mov sub aam sbb mov out push out sbb dec test jno addr16 in aam je stos adc cwtl xchg sub aad dec lods ljmp out mov add jnp pop stos loop test test mov std inc mov mov int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adc fisubrs stos add stc pop push iret sbb ret test faddl insl jbe or test mov jbe mov jl sbb xorb call mov adcl cmp cld or adc cmp jnp gs jge jle movsl xchg (bad) (bad) addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl add orb (bad) pop lret ret es mov fsts in (bad) sub aaa pop movsl loopne add inc out xor jno dec inc jnp sub jnp rclb adc inc lret lret pop cltd test xchg lea mov outsl stos dec sbb repz or fwait add adc jecxz xchg inc daa imul inc pop mov (bad) pusha inc dec xchg stos cld or ljmp (bad) pop sbb push data16 jo test adc out in inc mov mov jge clc xchg fwait sub fs mov mul jecxz out lock testl imul jecxz mov push data16 mov in nop mov sub popa push mov gs dec clc dec cld (bad) dec push fists lock jns cld je mov mov test hlt xchg or sub loope addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl (bad) adc test cwtl push or mov mov ds xchg pop clc gs in fsts repz repnz xchg loope push fldt loop adc add das aam js shlb mov sbb in fwait mov cmp int3 push decl test lret cwtl xorb xor mov nop subl cwtl or cmp in jne inc out call inc cmpsl outsb insb ds pop mov sub insl mov lret mov adc out adc mov jne je iret data16 mov xor add (bad) int xchg ret push scas xor sbb (bad) and mov dec mov movsl or adc repnz push lds push inc mov and push cld sub mov rcrb mov clc and mov jge filds push jbe fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl and pop inc add fmull mov and xorl int3 ja (bad) stc push add dec rorl xor mov sahf mov or dec lock xchg les jno addl mov decl aam or xor mov push daa cmc outsb rclb lea sub stos movsl enter adc xor add or dec ss jae inc push (bad) outsl mov testb push adc pop mov fidivrs pop xor lea nop leave ja push jl mov cmp mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl test mov dec cli nop arpl jae mov push lret jmp cltd lods adc adc xor adc idivl pop cwtl xchg imulb mov ret jmp dec inc outsb sahf outsl push call jmp sarl fisttps dec or js gs push xchg and lea add incb and mov fld1 pop lods gs lods fucom arpl das mov xor ret test fs cmp sbb movsb (bad) clc call jmp jle add cli addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sbb (bad) mov call movsb adc push fiaddl xor aad insb nop imul (bad) pop xor xchg lret add push mov and mov xchg adc add les push ja les dec lds push lcall subl jae fisubrs (bad) test inc inc inc sbb js loopne lock fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl inc sbbl stos (bad) inc or fmuls ffree (bad) push loope fcmovnu test mov jbe fs or add jns data16 push dec sub mov sub (bad) jmp mov dec push dec and addl push call lea (bad) sub in lret jmp lock push adc mov pop loop cltd out adcb xor out push inc xchg push movsb mov movsb repnz shll pop test jbe ljmp and das xor movsl xor adc leave pop ja jp jb (bad) cmp test shlb pushf in ds dec mov jno popl out xor aad mov mov push xchg jne pop push dec out mov aad lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl icebp push sub add mov xor lock imul std subb or mov mov mov and out jge lahf push xor repnz cmp sub push xchg lods xchg testl mov add pop out xchg or rolb pop jae mov stos dec into inc mov mov adc addl lahf sub jne mov fcmovnbe jge je,pn jge fisttpl cmpl loop aas push icebp test aaa ds sbb test and or add addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl (bad) jmp (bad) js lret movsl sarl sub xor sbb lret dec rsqrtps cmp inc nop icebp or pop sub sub sbb jbe stc fisubs sub jb xlat jne enter cld mov sbb fdivr mov sti or mov ss ja mov xchg imul xor pusha lds (bad) leave add cmp stc and out scas pop adc jo cmpsl enter xchg (bad) movl and mov cmpsb pop movsb mov popf das push (bad) loop adc (bad) repnz sbb fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmp and cwtl sub dec jne sub pop ja cmpsb les jg mov adc sub mov cwtl pop push inc push lea nop aam (bad) sub xor dec punpckldq outsl les lock negl mov movsl adc cmpsl roll and lds inc ficoml les call (bad) cwtl cmpsb lods sbb shll sbb andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cwtl imul jnp xor sub cld outsb int pop repz daa (bad) (bad) push dec xchg push mov out bound xor nop add push int ljmp loope mov cmp mov mov stos sarl mov inc std arpl cltd sbb or and lahf cwtl outsb popa or push sub dec adc lcall cs fists incb xchg dec shll int3 and sub lahf test fistpll pop lds jo stos addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl fwait pmulhw hlt xlat gs inc es test xor mov sub lock loope jge jl xor push push inc iret aam scas shrb loope xor xchg loop shrb mov mov mov imul or or xchg xchg fs cmp jmp aas push xrelease mov arpl test shl xchg jp (bad) or push mov jmp cwtl imul call and outsl push dec lods (bad) (bad) imul testb xchg pop movsb sbb push js xor push sub xor imul mov fldl int3 inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl xchg js movsl mov add (bad) and ret fadds dec mov push mov mov stos sub arpl mov rol sbb inc ret xchg push mov loope scas sti es outsb sub lea (bad) fistpl or sbb inc jb rcrl mov xchg adc inc cmp sbb xchg je orl mov (bad) lock pushf out insl sahf je xchg pop mov fcomps orb push cmpsb (bad) insl push xchg int push mov mov xor aad enter stos lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl push and test cmpsl js enter pop rorb cmp mov mov and cld repz or push les mov jo adc mov out pop fidivs aas lock cmp add ret (bad) push dec push les inc cmp xorl mov sbb hlt and xlat add movsb stos loopne or sub and aaa jmp push push popf outsb xlat xchg sti sub add ja mov addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl daa daa nop dec int3 mov ret shr int sbb int dec mov mov push das inc imul movsl adc sub sahf push mov push loope movb dec das sub push cmc mov movd mov rep out jmp and out mov stos inc (bad) xchg sub jge xchg cli push add dec mov jmp das fistpl repz jo ficomps cs fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl int3 and das dec mov rorb es cld sbb mov sbb repz fwait or xlat pop adc shrl lods inc scas repz mov int pop dec cmp ljmp mov test xchg dec mov addl push aad mov lods push andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl stos rolb je and add mov xchg adc cld mov jno daa mov gs dec cmp inc push adc adcl inc push inc mul stos stos jge scas cld add (bad) fsubs imull sbb subw dec mov in int3 push sbb lock sub aam adc mov dec call fisttps pusha or jae,pt push mov sbb xor lock and inc int std mov sbb inc adc clc pop add sbb sub sbb mov out stos cld lcall sub cmpsl repz add fwait mov pop push fxch bound test mov lods sahf mov (bad) lds mov andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sbb (bad) fstl mov (bad) idiv xor mov inc and jp jmp and sub mov dec dec mov gs jnp xor sub or jns mov test das test cli push clc jae jmp sub xor out arpl sub cs and jo inc or jg pusha es mov rcrl sbb fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl popa fwait ret loop cli sarl fmuls mov fmuls cmpsb inc in mov xor or add push rorl insl mov xor xchg call daa lcall loopne mov inc (bad) xchg lea daa sti sbb clc sbbb pop jl xchg jmp push jb jge sysexit mov (bad) mov mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl js (bad) jns pop mov add out pushf scas repnz ret xlat gs cwtl clc je sub push dec sub adc mov popf mov fstpl jns addb lods sbb repnz sbb fwait mov aad fwait mov or imul mov fnsave addl inc inc fldl addl orl jmp push mov sub mov mov cmpl ja cmpl je cmpl je cmpl je cmpl je jmp cmpl je cmpl je jmp push call jmp push push push mov push call movl jmp mov add mov cmpl jge push mov push mov push mov push call jmp jmp mov and movzwl mov mov shr and movzwl mov mov mov cmpl je cmpl je jmp jmp mov push call jmp mov push mov push mov push mov push call jmp jmp push push push mov push call mov mov push call mov call jmp mov mov push lea push push call lea push mov push call call mov push push mov push call mov lea push mov push call push mov push call lea push call push push push push push push mov push call mov cmpl je xor jmp push mov push push mov push push push push push push push push push call mov push mov push push mov push push push push push push push push push call mov push mov push push mov push push push push push push push push push call mov push mov push push mov push push push push push push push push push call mov push mov push push mov push push push push push push push push push call mov cmpl jne push call push push push mov push call xor jmp jmp lea push mov push call jmp mov push mov push mov push mov push call jmp xor mov pop ret int3 int3 int3 mov pusha lea adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xor out jns addr16 cwtl fcoml shll jge xchg test insb stos add xor mov stc fisubrl lret mov sub push jnp pop aas fcoms jbe sub xlat xor je int3 lods xor mov pinsrw call cmp pop mov scas icebp inc xchg ds lods mov and add inc mov ljmp push scas sbb jge push (bad) (bad) stos mov jg popa je call scas pop mov sbb lret jb xchg add in lods mov rcl andl pop out jne test push add sbb mov iret pusha xor push fcoms stc adc arpl lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl adcl cmpb (bad) ljmp pop in add push rolb movsl nop sub outsb scas rorl fisubrs in cs adc dec pop sti adc add leave mov xchg xchg hlt xor inc pop jge test lret in out push mov jne das cmpsl loopne stos sub movsl mov cli clc adc xchg arpl xchg (bad) and and xlat insl jae xor jecxz fwait loop adc test add fimuls pop add iret out dec shll add dec sbb mov sbb dec scas call movsb cmpsl repnz xlat pushf dec jno lcall (bad) scas sub mov lods out insl leave fs and push lea int jmp jns aas in (bad) cmp xchg ljmp fwait mov push adc addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl cmp ror push xor lods addr16 (bad) pop (bad) clc or aaa xor fistpll or dec daa rcl mov sti mov ds dec add add es sub insb rolb add sbb aas les jne cmp and xorl xorb xchg enter sub xor fmuls lock jae fnstcw ljmp or dec cld jecxz test dec sbb or add or or xchg add stc xor lea incl test int xor adcl out out int lret mov shl mov in fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl add mov movsb push je dec jb dec into mov pushf arpl add cmp leave js add push insl ljmp pop adc out sub cmpsb or cli and arpl clc ja lret fcomps cmpsl stos call cmp insb mov sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lods sbb in in in (bad) jns mov nop pop and and mov xchg sub mov xlat xchg cmp and movsb out das test jl aaa pop in stos adc subl mov mov push pushf in pop push xchg gs test dec jmp push ljmp xor or jle rcrb mov nop jne call xor adc aam les push subl rcll add dec pop and mov xchg out cmp cmp es mov mov mov roll stos test movsb xor adc xchg loop cmp sbb mov pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl push add jno dec xor xor or xchg lock inc insb mov dec dec fwait sub (bad) dec jmp jg insb lret adc mov adc cmp js ss mov sub mov push xchg mov lcall cwtl into add xor cs inc mov je cwtl (bad) cltd sbb or das push sbb imul mov push sub or lock push pop scas sub sub sub mov push scas ror popa idivl mov lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sub sbb push imul shrd inc punpckldq popf shl jo xor pop mov lret faddl je and subl stos bnd inc icebp lea (bad) dec stos adc call insl and int dec adc fdivrs xor filds aaa cmpl or ret fcompl daa adc movd sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl push loope imul push in adc not mov clc lods push push push sahf out and adc nop push js ror lods mov jle mov mov push loopne push pop fmuls mov or (bad) (bad) ds ljmp nop pop and xor out fsub pop je cmpsb mov arpl mov andl adc sbb jg mov xlat or pop addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov sub shll js ljmp push lret ret mov xchg lods int3 adc sbb cmpl ljmp xor push lahf je scas lea out stos or pop mov call (bad) ja mov and mov dec imul sbb or jecxz fisttps out jg jb xor rcll movsl mov ds je out adcb jnp insl sub repz sub inc idivb cwtl xorb cli mov jb (bad) sub sub xchg add outsb sbb aad dec out xchg pop cli pop or xor int cmp int or jne mov fsubrs test mov je iret cli lds test add nop jge sbb daa pop into loope sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl lret addl aad sub jge cli cld mov or mov int fisttps mov aad jp sub ds and out sbb push dec cmp add fdivrp aad mov xchg cmc insb push insl movsl pop push rolb add pusha jle adc dec cltd out xor xchg add xlat dec hlt arpl pusha xchg (bad) dec hlt (bad) cmp ljmp je adc call and or xor in or dec add test aad outsb rorl push pop movsb jbe mov cmp mov andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop and push mov cmpb std dec insb mov xchg in call push das xor pop loopne inc push (bad) in cwtl repz mov inc (bad) orb adc push ljmp push xor call lahf stos setg shrb in orb xor mov (bad) and mov mov mov fwait xor leave int3 movsl outsb in cltd push mov jo jo shlb icebp lahf jnp xchg and dec cmp les and xlat rcl adc push cmp (bad) outsb inc sti pop sbb cld xlat adc dec xchg inc loopne sub push bound mov sahf mov mov mov mov arpl cs les push lahf cs fstl mov leave sbb (bad) adc movsb addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl popa enter test sbb jp (bad) out int3 cwtl repnz and shl push jl and stos and and inc call popa or and mov jns xchg cwtl loopne mov aam or sti sbb sbb sub test sar fstl test mov jbe out nop push xor or pop js shr add lock lret subl mov inc mov and cmp jmp and push add outsl ds (bad) scas inc int3 subb pop je ror fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl ljmp or xchg add negl test stos shlb subl fs jb rcrl adc out mov insl adcl add add mov dec nop int push (bad) in movsl outsb into mov jl sub les mov loope cs mov arpl test lock inc nop mov es call (bad) cmp cmp test sub iret xchg mov subl mov push stc rorl push xchg jae les sbbl iret adc test mov jbe mov test cmpsb loop inc lahf and jge jno sub fwait out inc andl xor pusha shr jno push pop rcr adc mov stos lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lea mov or xchg fs ljmp adcw inc push cmp mov int bound stos lock jl test or pop lret pusha dec jecxz rcll lret stos jge jnp in inc lea popa xchg movsb (bad) or or cmpsb loopne addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl aad insl push sub je or rcrb sub aaa jge xchg fcoml cmp xor xor fbstp (bad) sub dec sbb cmp dec sbb pop jno jo arpl add cwtl int cmc repz scas stos jo mov and mov inc mov sub sub inc (bad) or dec cwtl in data16 sbb push popf ljmp xor xor mov jne inc lea inc sub ljmp fadds mov out pop mov push test imul in adc sbb inc xchg adc movsb call ret jno (bad) andl subb es sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or mov xorb adc mov dec call fsub mov sub lock imul mov int sbb mov popa orl fisttpll mov jbe xchg add scas mov std push mov fwait call add add push mov mov jno (bad) fistps dec lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl test or xchg or push mov mov mov mov ljmp scas cmp xchg and add popa xor stos (bad) adc popf mov hlt mull dec add and aaa fiadds mov dec mov ljmp sub (bad) sahf mov mov test out sub int addb iret in inc leave scas loop pop out sahf repz mov push fidivl mov or test dec (bad) daa or mov mov rclb add adcb rcl stos addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pop jle mov add pop xor and xor push mov cmp inc mov es lret data16 fsubrs xor stos xchg mov (bad) jne mov das add and xchg push adc lret icebp arpl popf scas xchg jp je cmpb pop movsb xchg push mov scas push sbb dec in and xor lea subl sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl aaa push clc mov test or jb dec jl mov and xor fwait xchg (bad) mov push out scas aad mov ret push sbb jge int sbbb lcall mov sbb inc addr16 outsb sub ror test test push cmpsl stos jbe mov sbb ss into lods push lock add add subb sub and inc shll sbbl mov int pop jmp sub sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov ljmp sti (bad) int3 les movsl xorl scas sub hlt push (bad) daa icebp push out or sub cmp push stc or enter adcb xchg add fdivl xchg es aaa sub icebp call ret gs out adc jb out lahf pop movsl cmp inc mov dec icebp orb sbbl call rorl js test out mov movsl push adc leave fidivl pusha in (bad) aaa mov lds pusha das lea in sub mov xor mov aam pop leave out mov aad cmpl andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov movsl iret rorb leave push push lea test jne xor xor les inc insb cmp push cmp mov mov pop xchg popa into adcl xchg pop test cmp add mov push lcall cmpsb jo imul fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl fucom pop shlb jg jl mov fstl adc stos push hlt inc loopne xor xchg mov lds and mov scas faddl add adc pop daa outsb lods and imul jg adc inc pop jl arpl movsl add xchg pop cmp sbb lock fistpll les or xchg mov fs movsb push lcall addl lods mov dec push sub xor jle push pop imulb cmc loop pop xchg imul mov or add mov movsl sbb jle out aad in sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov jo andb mov out pushf pop xor cli outsb cmc xchg adc out sub add test leave (bad) out sub loop addr16 outsb xchg jl sub cmpsb (bad) ror push ret mov dec dec cmpsl faddp pop inc xor js daa aas cs adc mov into sti mov icebp xchg test imul lods cmp xor std dec insl jbe xor cmc adc jge and pop inc test cs xchg mov orb adc lahf pop pop insl cli sub cmpsb and push cwtl popa mov sbb cwtl cmp inc pop push in push xor push adc mov dec (bad) dec cltd or mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov jge filds sub mov (bad) clc je test aas roll add lea pop subb fwait stos sbbb adc ret mov pushf arpl jns (bad) clc subb (bad) cmp andb je mov xor or push rorb test xor aam fists dec jg jge xor add sbb inc jnp fcmovnu imul lods ljmp mov enter sbb in mov jno or xor call mov (bad) mov scas negl loope aad cmp dec jge add ds ljmp adc adc in and sbb mov popf dec adc int ret (bad) iret mov addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adc (bad) je fdivrs loope or test mov adc rcll mov add adcl rorb xchg cmpl lret or or sarb addb aad mov mov push lods in add jmp or rcrb lret mov lahf cs aas adc (bad) std push stc xor xchg orb iret cmc aad mov lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xor cmp push stos mov movb aam out scas xchg mov mov lret subb push int push popl (bad) push arpl lds out popl pop lds popa repz and arpl int notl stos pop cs (bad) mov pusha hlt rcrb and rorb loop cmp adc sbb test push pop mov (bad) hlt lret out and andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov aad cli cmp xchg ud1 in or cmpsl adc or xorl stos adc int3 cmpsb xchg enter fxam lds xlat sub adc popf icebp or notb nop mov add lcall (bad) lahf fs xor (bad) cmpsb jb add mov scas push dec xchg push cmp scas sub and js pop dec das cmp out pop xorb jnp loope add in mov lods push adc cmp sub cmp pop cmp push loopne jl call int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbb or loope inc es stc popf fwait add subb sub xchg jno add mov sbb sbb push cli mov imul push adc or adc push andl test mov push das test dec inc in inc xchg adc icebp push pop scas xor pop mov xor lea addl xor aad dec fildl shl jl push xlat (bad) psrld and mov andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cmp subl or pop xchg test aaa mov stc mov repnz fsubrs in jg lods xor mov mov jge adc xchg dec rorl mov clc push cmp jb nop and xor movsb aam hlt test mov or mov mov or add addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl push jl aas popl jne fmul mov push inc mov pop popf insl cmpsl adc sbb movsb add lahf dec push add adc add add lahf mov dec xor cld dec sarl and (bad) mov and std in mov adc xor ror mov sahf cltd das sbb push repz outsl jge icebp add jmp and jno fidivrl inc subb push or lock adc mov lds stos cmc out stc xchg sbb jmp flds sbb in test int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl mov fwait out es fldcw loopne daa insl cmp jg add lods shlb imul cli (bad) int add jns (bad) lods jmp sahf inc sub push add xchg mov es inc insl scas cmp mov cmpw insb fucomp sbb stc add test jmp sub notl dec int3 and lea (bad) add push (bad) les mov jbe or orb push (bad) outsb jnp orb sahf imul mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl inc and pusha sub out mov test push mov xor cmp jb loopne xor mov sub adc push mov push xchg popa dec ljmp mov and adc inc pop aaa cmp sub jbe push incl cmpl push test mov adc aas cmp nop stos lahf push hlt nop xchg push adc or fs jecxz out scas cmpsb xchg fstps mov sub in std mov fwait pop jl scas xor jne push sub in addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl cwtl mov jle test pop push lahf pop mov imulb test xchg (bad) sub mov xchg dec xchg popa fadds cmp (bad) aas (bad) in iret xchg (bad) mov into fs seta cmc mov cwtl sti and in outsl or shr xor sub add (bad) sub pop sub mov scas dec push fistpll ja xor cwtl aad es call jbe test int3 outsb mov lahf dec xor pop loopne mov push shr mov xchg out xchg shll jne push pop jl lock enter loope mov (bad) pop adcb leave in ret jns lods mov ds inc inc lcall ret imulb cmpsb xor add mov cmp out mov adc adc jno test sti adc int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl lret mov andl cltd jg inc mov push ljmp push push mov xchg jae or lcall cmc sub adc in rcll dec inc adc mov insl and out ret sbb rcr push dec imul cli leave push push in xor adc cmp mov xlat mov push fistpll js cmp movsb mov jmp lock push xlat cmp sub cmp push or roll adcl addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl int3 outsl ficompl stos lock cmp sbb mov xor aad inc mov pop adc sbb lahf ds outsl in inc push gs ret pushl cltd addr16 test and dec mov repz shrb add dec and loop decl add mov sub xor repz push test adc enter in test lods ret scas in daa movsl mov imul cmp das test test stc je ja lea mov jno mov adc test (bad) pop mov push repz push clc inc std popl faddp xchg addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov cld inc sbb (bad) add mov mov outsb addl push inc repnz sbb add dec inc push test xchg mov imul in mov adc das xchg iret adc mov pop mov cmpsb sbb stos cmp mov lds icebp fistpll mov xchg pop test aad cwtl jo cmc sub and sbb xor jo lock fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl push mov leave inc adc stos push les or push imul icebp mov xchg subb sbb ret out leave fisttps rolb adc and xor adc (bad) fiaddl push (bad) shll xor sti mov adc sbb adc sbb test stos (bad) xor cmpsl adc inc xor cmp outsb popf lock lret jecxz outsb test dec cli pop jb mov lret enter xor leave js imul push daa loope lret imul pusha rcll or push stos pusha xlat subb roll mov dec dec jb push fwait adc andb out sbb inc pop ljmp and mov fcompl jmp in fimuls lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl or add fs scas pop subl inc das push subb lea add and add in and (bad) jmp int jne push jge xchg loope clc jle int3 jecxz test sti xor cmp cmp in and mov add inc je add sbbl stc push ljmp (bad) pop jmp mov fildll or mov mov test ja and pop cmp push gs push mov andb inc fs push fcoms shr cmp inc xor or inc stos jmp dec adc pop sbb pop stos nop popa jecxz in cs push pushl test inc addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xor add mov es int movsl orl lea xor mov stos cltd aas xor and adcb adc imul sbb mov and es cmpsb js inc stc jno pop mov push test daa rcrb mov (bad) int3 int3 fisttpll in outsb fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbb add xor aaa inc jg push call push pop lods xor ljmp cwtl adc mov xchg enter cmpsl mov and jle adc je sub mov (bad) mov repz cltd pop leave lret test xchg sarl jg xor inc rcrb (bad) jno movsb je daa inc mov mov stos sbb stos add mov jo sub inc je test ljmp mov mov lret fisubrs cld cmp mov stos add mov mov int3 bound push (bad) in popf aad sbb sbb (bad) fists mov lds sub mov jge into push loope push xor ss jns lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl rcr sbb or cmpb inc sbbl cmp out das xchg sbbb les sub jb or xor sbb aaa xor sub clc aam cwtl (bad) roll lds call leave dec (bad) iret test fcoml mov jne repnz mov sub lock fstl mov pusha xor cmp stos js cmp fcomp fisubrs fsubrp fxch sarl js sahf lock adc iret jmp or jmp shrl lea lock in mov stos cmc and in dec aam inc lock push lea pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl cmp sbbl shrl cmpl xchg pusha and sub mov dec cld test out pop adc out cmp ds lock aam xchg mov mov push xor adc sbbb jg sbb mov movsb scas stc fs add inc outsb fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbb mov fstl pop xchg cmpb sub test push stos add mov ficoml or in xchg mov adc jmp je ror andl mov stos ds mov cwtl cmp stos fwait xor adc or jnp movsl dec (bad) mov pop push addr16 add lahf mov sub inc sti nop pop pop lahf or adc or xor inc add movsl lea push xor sbb adc lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl aam lcall mov xchg ljmp pop imulb leave xorl jo jl sub cmpsb ja fsubs das div add pop ret int mov dec cmp lods sub jbe mov test outsl call and jae bound dec iret popf mov arpl repnz jle movsb ds std mov cmp mov xorl cs test push filds mov ljmp cmpb daa lahf mov jb push xchg scas shl sub sbb sbb pop dec sbb xchg ss sbb jbe fwait adc insl mov push cwtl add jle sbb xor test pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl push je lock xchg push dec gs mov sub vcmppd dec leave (bad) sub inc sub mov loopne mov dec ja adc cmpsb les xor or call dec adc mov or and xor or xchg mov mov adc or push movsl jb add cmc mov pop aaa stos addb adc loopne addb xchg cwtl xor xor je std pop fnstcw mov xchg or mov test shrb push repnz cmpl mov pop sbb addb jge jle fnstenv xlat inc cmpsb gs or cli shll in fiaddl adc mov pop xor (bad) add addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl jg or sbb jns inc mov xchg les and cmpsl cmp adc xchg xchg sub push movsl adcb adc mov jl adc leave mov shrl sub andb and lods cmpsb movsl sbb maxps pop xor push mov mov xorl aad mov push mov xchg test pusha push push xor stc mov xchg loopne mov sbb test popf xchg sbb out xor mov sarl test cmpsb push decl cmp lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl test mov lea adc mov test mov xchg or push mov rolb mov cwtl dec lcall sbb (bad) mov xchg std sub int3 clc movsb sbb fistps add adc mov aad inc stos xor sub inc push insl arpl sbb (bad) jecxz mov clc jns jns or mov stc sbb and xor adc and fstpl mov lods int3 insl pop hlt subb dec push cli jnp (bad) andl cltd sbbb mov cs lock pop addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl stos mov (bad) and dec or lods xchg scas mov sub subl hlt (bad) sti lods jmp lods outsb outsl adc xchg xchg hlt stos push fsts inc gs and outsl push dec aas es dec sahf out hlt inc enter out add jnp shll dec pop push ds mov in mov repnz aam mov xchg mov (bad) fildll dec sub repnz add std xorl inc mov mov aad dec shll call or xor pop enter int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl mov sbb jp in icebp pop sub mov pop stos loope xor lcall test xchg pop daa sbb sub imul lds repnz lods add cs inc in test lods in xor cmp push scas imul push xchg jb mov leave jle mov add or rcrl std lret lods gs aas add sbb sub rolb mov scas mov and add jge out and mov lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl adc fsubr mov test push adc push adc mov repz xor cmp loope enter adc xor int3 xchg inc adc int3 mov mov lret (bad) fistpll cmpsb mov xchg mov push adc movsl enter loopne xorl movsl jbe fwait out mov rorb iret movsb nop popf xor sbb mov push sbb orb repnz adc xor test stc xchg enter sbb ss loop (bad) lret lds aam lock pop je xchg roll hlt jp pop and test push imul (bad) orb or stos rolb jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl jns pop mov mov mov jecxz pop mov cmc and xchg pop sub sub mov ret leave mov mov les inc leave add cmc out mov lds xchg lock sbb imul jg test stos imul stc push ljmp inc loopne inc xchg mov iret ljmp jl subl and enter mov xchg (bad) add and xchg (bad) jbe fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmp int stos rorl popf mov pop ja rorb test push lea sbbb mov cwtl mov jmp addb push mov cmp cmpsl sbbb sub mov into lcall pop xor inc xlat mov scas cmc xor call dec (bad) cmc (bad) ficoms cmpb sbbw fsubl mov lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop imul and mov or (bad) icebp popa pop jo je adcb in stos jne mov pop jge shr lods push test sbb je pop in xchg pop push xor pop orl or in mov lods jno pop pop (bad) aaa and mov adc mov inc test mov mov mov movsb mov inc shl addb outsl mov fnsave frstor and cmp les jg fistpll inc sti add or clc lea dec mov lret cmp in pop es test fs inc cld jp jae imul mov push push jecxz pop or daa xchg adc js out popa dec xchg loope outsb aam fs jnp mov mov mov into sub mov adc insl addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl add dec loopne xlat hlt mov lea or push out fldcw mov push mov insb fs cmc xchg cmp xor out jge jns mov mov jmp sbbb lea (bad) (bad) bnd sbb adc push xlat or jno push insl fdivs mov or lock les fcoms int3 mov add cltd (bad) outsl jl popf or das or pop bound cmpsl fnstcw dec jns push mov cwtl or xchg and push adc addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl push iret sbb push test dec mov stos sbb test outsb lods lea fucomip rcll jo das stos jle pop subb sub lea mov push enter cmpsl xor cltd cmp sub or mov (bad) arpl mov sarb adc imul cmp or push push sahf jp popa cmpsl jbe cmpl sbb or jge sbb test dec jmp ret xchg iret sub outsl addl pop subb xor mov fnsave addr16 fdivrs mov (bad) js lock addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov jge iret out es mov cltd shr sub test xor sub push jae cs xor std jb mov out or push dec dec sahf (bad) dec xor xchg or fists pop sar and sbb pushf mov add out imul and mov adc xchg jge shrl xchg dec rorb mov add mov push imul mov pop orb les (bad) outsb pop cltd and fsubrl push jmp mov inc adc std sub andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov int3 adc inc pop pop lock jp mov les test mov imulb inc mov mov movsl pop imul ficoms mov xor hlt mov les sbb fbld subb push mov daa ja clc mov repnz jp xchg (bad) pop lds pop adc loop fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xor xchg mov push loope movsl addl pop (bad) sbb sbb ja cmpb stos jle and xchg jle aas gs jnp jne out rcrb roll out xchg mov push push (bad) jecxz rcrl cmp sub sbb sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl out inc sub das shrb stos push push jo adc pop pusha into xchg in addb sub lock dec sub add mov loop jg movsl loop lds mov sbb daa stc imulb movsl jno xor ds xor popf adc mov push lret mull cwtl sbb lahf mov or jns fst dec movsl add mov push push stos mov xor shrb xrelease xchg and jnp sahf sub inc sbb clc inc hlt stos xor orb add lock (bad) das into xor inc shlb xchg aas dec cmp stos cmp pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl out add (bad) sbb sbb shl cltd andps pushf int pop cmpb mov mov shll inc or xor popa or aad mov (bad) jg xchg gs out pop subl dec sbb out repz jg cmovae xor ret leave test adc push popa adcl mov sub inc xor cmpsb pop mov mov call ja in or out or lret jbe cmp mov xor daa aam fmull shlb pop xchg addl addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl mov sbb popf inc and ja push mov loope fsub repz cmp and sub test sbb fstpl mov (bad) jb jmp jmp pop and mov dec sahf xchg sbb jae sbb xor add loope cmp stc in ret (bad) push shlb negl incb iret cwtl into mov cmp daa lahf call (bad) (bad) sbb mov cs out (bad) xchg mov sbb cld jno adc imulb nop pop push or ss imul aad adc dec lcall lcall inc jnp cmp addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl push jl jmp (bad) fwait push cmpsb mov xlat in (bad) jg out adc inc mov or in mov test dec in iret mov jg loop push mov repnz icebp push test push js inc xor xor jb cmp dec or cs cs sub cmp dec rolb scas push aad mov mov push test popl pop in or fcmovnu cmp aaa loope in pop xorb fwait shrl movl imul dec cmc push lret mov sbb ror xlat adc xlat lea add jge in jbe int xor inc (bad) outsl (bad) mov andb cld mov xchg sub int3 cld or xchg sbbb xchg enter divl pop scas repz add addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl je jns cs mov test mov divl push mov mov fldt stos pop push pop pop andl mov mov cmpsb dec sarl cmp push mov sbbl clc shlb fs sub (bad) pushf and test cmc imul or mov lock subl push andl pop xor (bad) xchg xchg sbb lea dec inc push (bad) push inc cmpsb lret xor loopne add adc xor inc nop mov inc inc cs adc rorl xchg iret pop int dec lock fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl das nop popl test stc xor test xor add call inc cmpl aas stos sub or xor popf pusha pop dec es loop enter aam xchg adc xchg mov mov test push daa sub xor mov popa adc mov inc movsl xor xor pop or mov xor fistps shlb stos xchg cmpsb movsb xor lret push test push fnstsw popa movsl divl push cmp (bad) xor sub or fists movsl mov and les cli jecxz test adc dec xchg stc orl and ffree jg mov dec xchg test roll mov clc and and lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl inc xor andb ret jmp jecxz jmp mov mov or or push faddl (bad) dec and mov std sbb je add das pop pop mov push mov lods jecxz xor cmc jne sbb jbe push call mov ja mov mov add sub xchg or xorl pop rcl xorl lcall dec and add jo inc xor test dec push test mov (bad) popa out push movsl stc js push into mov andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl int3 popa cld add mov push out ljmp enter sub ss (bad) stos xor lret pop paddb cmp pusha sbb lea push call cwtl mov adcl push rolb mov mov push sbb ljmp cmpb lock or push dec gs inc cmpl jmp nop mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sub cmp cmpl push repnz jle jmp cwtl adc lock mov sarb xchg cmpsl sbb jl mov mov xor xor mov pop fdivrl dec lcall jnp jmp enter shr std fcomip pushf mov inc push addb mov movsl movb push or in dec cmp lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl fildl sub out mov mov test and cmp int push dec xor or (bad) idivl mov out icebp cmp mov test out pop subl xchg xchg test pop rcrl jp mov mov sub xor xor enter addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pop aam push notb cwtl addb xorl in mov or lods dec (bad) lret dec daa (bad) call ja xor call xchg bound push sbb rcrl xchg shrl mov outsl bound int3 fstpl adc push mov and ret xchg andl sti cli insl mulb mov cmc addl out movsb mov xor pop push fdivr out xchg dec push sti push xor mov dec out jge jb dec pop addb xchg jne dec xchg loopne pop xchg adc or in jae push repnz cmp stos jmp stc popa addb addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl and loopne fsubrl mov xorb and jns jbe out xchg cmp iret ljmp loopne sbb push fsubs xchg les adcl add pop out dec jg mov sbb xchg lcall mov dec repz loopne outsb sbb in test outsb mov sarl ss jg pop div addl add jae cmp (bad) sub aas xchg xor ljmp imul ds es xchg addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl repz lcall inc add stos lcall mov jbe pop repnz (bad) shll or jmp sbb popf fs push in shrl or fcompl in aas push push sbbl div jb xchg ds pop enter inc mov add andb inc out and mov cwtl pushf call jae nop mov lret sbbb jae loope xchg outsb fsqrt lcall and xor mov xor insb (bad) loope or insb sahf fiadds nop (bad) pusha push out out mov push sub mov add nop xchg dec jmp clc push shll les movsb aad xchg popf xor iret sbb sti fwait xchg (bad) sub and adc stos nop hlt test pop jne les fwait dec addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl filds dec xor dec xchg lds mov (bad) cltd cmpsb fwait add callw ljmp jno sub mov stos mov lds or dec add jg pop (bad) bound hlt adc and enter cld mov sub sbb popf in sbb fsubs cli adcb (bad) mov inc ret sub xor pushl (bad) sbb loopne mov mov stos and call xor popa jo les sbb cmovnp dec movb push inc (bad) fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl mov stos dec mov into mov mov iret jns and daa enter in rcll lods in out (bad) sahf imul push mov subb xor sub mov adcl cwtl push lock push cmpsl cli sub andl or je lcall mov testb (bad) lret push in int mov mov je xchg call mov test test sbb or out arpl sti filds and mov in xor inc mov les cmp cld ja sar lcall addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl arpl movb test mov (bad) out mov xor sbbl rcr je (bad) or stos adc les cmp cmp insb mov and lcall aad xorb cli cmpl push cmp (bad) in pusha xchg or or out cli xor pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl jno sbbb xor adc sub cs insb mov cs hlt leave cs sbb jbe dec pop sbb andb clc mov fwait xor imul popa daa outsb fimuls mov push gs mov je gs pop in stos addb xchg pop and mov aaa dec cmp cld mov (bad) stos jb lods filds fcmovbe cmp sub test jns push cmp xor daa xchg xor push dec insb mov test pushf jne pop movsb inc and leave int jp jg sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl sarb hlt loop testb lods dec loope sub adcl adc mov (bad) test dec fwait mov mov lret movsl test jge pop lahf adc sub adc movsl jl xchg push jmp hlt insl leave rcrb clc scas in jmp lds inc jge lahf jb call sub mov jl dec pop scas xor ret jmp mov lret stos stos adc push adc stos pushf cmc aas das jnp xor cs hlt and xor ja outsb fisubrl shll sbb add adcb mov sbb mov sbb in jmp sahf ret loopne rcrb or ret testl add adc lea jl dec loop xorb xor xchg cwtl (bad) movsl mov clc jl jae jne movsb adcb clc xchg out pop loop dec icebp int3 scas cld test mov cmp in mov mov cmp ljmp andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jo push xor iret sub jo cmpb xor push mov in (bad) mov leave inc ror (bad) adc addr16 cmp lret enter ljmp (bad) mov ja fs lods out sbb sub lret jns sbb xchg xchg clc (bad) mov mov inc cmp push jo nop enter jo jmp push outsb stc sub add or es idivb xchg dec daa in adc push orl addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl scas pop imul inc movsl sub les xlat (bad) cs xor inc icebp ret sub or mov test icebp (bad) push ret icebp inc and push arpl add push cmp rcrl inc cmp and sahf jae pop push mov dec sahf inc mov cmpsb sub les stos rorb mov ret xchg push out pop xor push jbe sti xchg ljmp xor adc add and out sar (bad) adc in es adc (bad) cmp mov jnp push cmp mov mov mov inc push movl inc add in sbb rcrb std sbb int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl call push xor add adc and cmpl adc xor xchg cmpsb rcll ss adc xor aam sub inc mov mov jle popf sbb and test mov jb dec fwait (bad) mov jge or sbb ljmp inc mov inc adc lds sbb mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl call mov sahf dec loop inc or push sub pusha cmpsl adcb aaa hlt sub ret aam and fcom sub lods add xchg inc mov mov fxch add pop sbbl aaa aas mov in fisttpl or les sahf pop cwtl and scas rcrl xor pop pop cmp lea lret stc and mov push das sbb sub movsb sbb repz push out mov js xor divb and pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov xlat xchg xor scas sub inc mov mov mov cmp jp and jecxz mov adc movsl xor decl dec xchg mov or adc push inc push inc push cmp adcb lods mov mov (bad) dec dec lods movsl jp dec mov nop mov pusha hlt fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl aad loope push mov inc mov popf sti xchg push popa dec cmc popa add cli repnz xchg mov mov out cmp insb and pop clc lret sub push mov push push or ljmp addr16 pop xchg or cmc jp out stos push xchg adc aad insl sub and adc call popl xor adc cli jo push ja fisttps push ret loop ficompl push sbb dec push jb mov xor cmpsl pop shlb fidivrl or rorl cwtl add arpl (bad) std xor and loope adc add mov int3 (bad) (bad) decb addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl iret nop and mov test xchg mov test cmp outsb adcl stc enter push pop lret insl push call roll fwait inc es pop scas mov jbe enter push sub scas xchg jb dec xchg sahf test dec popa cwtl jp pop jne cmp push je mov cld push nop xchg adc xchg mov sbb subl xchg (bad) dec punpcklwd into or scas dec cmpsl sub fiaddl mov out or lea mov cmp lea in push lret out movsb inc and divl add xor lea (bad) rol (bad) popf pop mov push stc fmuls das sub stos mov bound pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl (bad) fildl and dec or and sti ja push ljmp clc dec mov outsl (bad) andb nop lock sbb lret push sbb inc push mov pop mov ljmp mov repz sti jecxz xor repz xchg mov pop inc sub jmp add mov cli cld sub mov push mov cwtl lods mov outsb out fbstp adc out mov gs mov repz stc sarl push cs aam xor add into int inc sub (bad) repnz out mov jle jae dec or int xchg xchg inc stos lret into pop ljmp addl addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adc ss jo sbb xchg xchg and add push pop sbb das pop inc add dec fiaddl cmp rorb mov (bad) scas cwtl mov sbb xchg push ret cmp (bad) mov push (bad) sbb xchg dec inc sub mov cmp sbb mov mov pop enter mov push and ljmp hlt movsl fucom mov les pop adc (bad) mov hlt jl push ljmp addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl inc les dec fiadds mov lret gs pop xor loope mov and aam jl scas jns adc sub and cmp std (bad) incl mov ds push dec fdivrp cwtl pop pop cs cld cltd clc cmc push pop xchg andb mov mov les lods jmp dec inc mov add or jb xchg cmpsb pcmpgtd xor out ret hlt pop mov xchg xchg xor es xlat mov aad int3 fcomip xorl add ret jne les pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl hlt add and dec fwait (bad) lret xor ljmp jecxz nop movsb aad xor stos clc xor orb out je in cmc mov mov mov (bad) inc xchg out push call fucomip jge addl mov xchg fs mov mov fisubrl cmp sbbb pusha cld mov mov xchg pop ret test ficompl int3 push orb js cmp addr16 mov jmp test daa add mov xchg mov dec movsb pop enter sbb in data16 lahf add icebp testb cli cmp jb pop cmp (bad) repz test lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sub sahf sub lret lods push sbb push cwtl div cmpb push mov aad mov (bad) movsb dec xchg fwait ljmp (bad) (bad) aad stos push inc push fstl shlb push ljmp rorb sbb dec add jecxz popl (bad) out jne mov lret sub int3 or shrb cwtl ljmp sub inc sbb jge push loopne mov xor push ret mov and rorb addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cmp (bad) push mov jge,pn cmpsl loop xchg cmp outsl xchg mov andb mov mov adc sub adc in popa fsubs xchg cmp add xchg sbb adc in clc (bad) pop or cmpl sub push fdiv int dec jne cmpsl cmp leave out int int cmp orb sbb or mov icebp pop (bad) in repnz mov shl lds xchg scas add int3 mov xor sbb pushf push or (bad) gs mov out push cmpb xchg shl mov and pop or xor pusha push mov movsb push mov mov andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xor push call mov inc incb adc aad in ljmp dec loope mov xchg adc scas les aaa cmp jne lea inc pop xchg scas lock lods mov add pop push es iret mov outsl sbb test (bad) fildll aad out adc inc xor inc (bad) cmp gs pushf lahf js mov xchg jb les ja in pushf pop test shr into inc outsl iret push add (bad) push inc sub cwtl call repz sub xor pop pop ficomps mov xor flds (bad) xor xorb addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl aas mov pop mov xor stos dec pop mov iret mov adcb loopne ret flds scas mov imul dec xchg sub jle int3 jnp aad add fdivl dec xchg cmpsl ret loop mov dec adc sti popf aam pusha sub out dec dec loopne lcall jle push cltd mov or lret jbe jge out movsl push sub jecxz and dec add lcall mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl les stos sbb aas ljmp sbb xchg add stos adc hlt mov cmc jle nop pop repnz or jp ljmp mov jmp sbbl rcr or imul setge adc je out test (bad) cwtl push push mov cmp dec out jnp mov xor (bad) popa jnp add andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sbb pop mov push daa les cwtl test lahf fstpl scas sbb dec pop data16 int3 pop mov mov rclb shlb sahf les nop je shrl mov jmp pop pop rolb gs sbb popl jecxz pushf cmp out push ds fdivrl mov xor mov subb cs sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl sub fldl jg stc xorl mov shlb in add mov scas lock cwtl cmp stc dec cmp xorl (bad) call (bad) int3 mov lods sub aas outsb cwtl pop ja inc sbb dec mov loopne in dec pop daa sub loope movsl xchg xor push or insl sub daa adc addb (bad) jecxz in rcll in int push scas mov dec pop adc scas int3 xchg push sub jbe call xchg enter cwtl in je stos into sub stc add mov sbb and lods push xchg (bad) fcmovb jle xor push test pushf out mov lahf jb int mov in ret cwtl pop ljmp mov inc inc xor lahf mov shll (bad) and sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl fucom shl enter mov inc xchg jnp jge mov mov jb jbe andl xacquire xchg mov xchg rcl cld push adc mov sahf xchg in or js in jg adc in sbb cmp fstl mov pop (bad) out repz dec mov jnp mov int inc dec mov pop mov add je aad mov mov mov xor xchg (bad) sub jne fstpt xchg pop jp xorb (bad) jle clc jl pop fs push mov movsl shll test inc iret xchg or outsl std jmp dec lods ja,pt dec sarb mov pop ret rcr ljmp andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl icebp cmp sbb shrl add rcl xchg movsl je xchg xor es shl pop rolb add loopne mov ret nop pop std pop sbb or dec mov add and mov add inc loop mov push (bad) jnp std fwait adc aas lcall mov out mov daa xchg arpl insl call daa jne xchg push mov mov shrl decl mov xchg and lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl sarb dec cli fwait es les movsb aam jo outsb inc jae andb push mov ficoml mov xor adc lods out ror xor mov inc mov xor inc mov fwait adc dec mov xchg mov mov int3 mov sbb jg cmp cmp add movsl cmp stc stc push cwtl sahf mov ds mov sub enter pop mov stc fdivl out mov dec loopne inc jp into pop mov decb pushf rcl mov lret ds cs iret xor cmp repnz lods dec out add shll push push add mov arpl xchg adc addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl or dec mov je into nop mov orl ds push adc jmp push adc push enter mov mov xor mov sti lret adc into stc ficoms rcrb in add aam jle push mov std insl xchg enter jo inc cwtl cmp mov ds dec in sbb pop inc mov and test and xorl pop dec movl xchg mov add xlat mov xor fstps mull xchg inc mov popa lahf mov test adcl dec lock leave or pop addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl loop sarb jns mov xor into adc aad xor jae inc add cmp push orl aam push lock enter lds or pop mov sub jge xor push jmp popa mov xchg repz sti cmp lods iret stos popa imul int3 icebp mov loope gs shlb dec sbbl mov mov leave lea loopne mov lock fnsave cmp das jne sub pop lods std mov adc cmpb or push jae movsl mov (bad) jmp jg sbb sbbl sbb testl xchg sti jnp cli in (bad) scas rcrb jno add mov mov mov movsb iret jne stos mov es mov fwait jb mov stos pop inc std xor int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl fldl pop xlat push xor rol ds call nop je mov xchg into pusha sbb mov insb sarl mov mov xor subb jbe mov mov pop je or shll ret or xchg cld sbb xchg dec mov jle arpl add or jmp (bad) xlat cmp xorb add das lcall and jp imul sti mov test xor enter push xor lock (bad) cmp inc lea orb push fisubs inc aaa cwtl cld pop icebp add fs mov xor push cwtl movsl dec xlat xor lods fmul mov loope leave fidivl sahf das (bad) fisttpll fs jno sbb lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cmp add gs (bad) fidivl enter test clc rolb fstpt sbb inc cltd dec pop into mov sti call or out mov mov test mov pop and sub sahf or adc dec in cmpsb jg ret jo test in push inc push movsl lahf pusha out int3 loop xor ja mov and xor adc cmp loop sbb or inc mov scas xchg xchg and adc outsl int3 xchg outsb inc (bad) lods mov push rorb and les add lret test test fidivrs xor fmul ret mov add jbe test sub movsb dec mov xor sub mov aam test sahf in loop jecxz or movsb pop mov jb mov test (bad) in addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl clc or test loop scas in jecxz outsb mov repz cltd inc repz jns jae and nop sub mov pop enter nop ret dec mov adc inc js ja pop negl cmpsb dec lahf xorl aad stc mov pop pop mov lds jmp sub out jle jne mov nop ja hlt xor add sahf pusha testl rcr adc int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl iret jmp arpl mov mov int mov inc and fsubrs js mov mov xchg call (bad) clc mov lods lods fisubs dec adc fstpl or mov scas frstor data16 test sarl icebp subl mov and cs xorb lret jp cmp shl mov mov inc ret add popa and lahf sbb outsl add cmpb ja inc push aad sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl gs adc (bad) mov (bad) popa rol xlat push mov jle jp insl mov dec int repnz mov (bad) xchg rcrb pop jae roll iret das jns orw clc inc inc (bad) idivl mov loop push stc adcl dec jb out (bad) inc (bad) dec repnz subl dec cmpl push inc xchg test push mov scas push jmp sbb setae andb mov push cmp outsl rcl lods push mov rclb and repz mov int jo mov add cmp stos insl daa add mov xor jo push int3 add jle and or addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl add inc ds adcl or jae lret lret jae outsl sub cmpb xor pop mov fadds scas cmp ret or adcl push add int decl sti movsb xchg sysenter xor ljmp ret std pop loope (bad) jmp inc mov and and stos rcll adc loopne cmp sub mov cmc dec sbbl pushf mov sub xchg stos inc dec addl pop sbb mov hlt mov dec push fcoml notl cmp stc jo imul (bad) repnz mov lds jmp lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl enter and adc dec mov mov pop frstor jb sub pop in lret shlb mov in in pop and cmp mov punpckhwd pop lcall lock adc xchg ret sub cld cmp jns sub (bad) xor mov test sub dec js orl enter addr16 push or xchg test rol mov xor pushf push daa adcb mov dec add pop push or or or lea xorb test rclb lahf inc push cmp sub sbb sbb cmp test jmp mov push in cmp cltd xor jne (bad) and das stc jbe cmc mov push push (bad) addr16 xchg stos add into xchg nop pop ret jb mov js inc (bad) adc lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop sub (bad) jmp ret adc leave push add inc bound scas das pusha xlat dec bndldx mov mov mov test outsl cmpsb push adc jecxz fcoms cmp adc xchg (bad) fcmovnb mov pop ljmp pop sti iret mov rcll push push or xchg or (bad) pop rdtsc stos sbb addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl test or push rcrl mov inc pop outsl dec popf ja sbb xlat popa mov stc mov ds xchg mov std cmp sbb scas cld pop xchg push push and jnp movsl movsl lahf sub enter cmp in sbb mov mov jmp push push pop sbb pusha mov stos add ds jge cmpsb mov inc repnz and mov and fwait js call mov xchg xchg aaa pshufw popa cmp rolb and ret jae sbb jecxz int sbb mov cmp adc mov paddb cwtl frstor sbb lret shrl loope cmp mov jnp mov push mov xchg ljmp jmp std sub fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sub loope sbb loop dec int3 int xchg xlat inc mov shrb out rorl loope aam jb xor xchg sub shrb pop cmpsb push adc fyl2xp1 mov push popa xchg adc and cli inc popf aaa sbb leave sahf add or test lret adc mov sbb es xchg jmp inc mov lret clc ss xor negb xchg dec inc xchg xchg data16 rcl int sub sub add mov lret scas dec pop mov aam xchg lea jnp mov dec lret into mov mov dec int xchg dec mov mov sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl adc mov inc jg mov jnp cwtl push inc add cltd (bad) fcmovbe pop pop inc mov jp cli sbb pop lods jbe and (bad) push rcrb and stos out sahf aad push in push inc inc lea mov xor mov stos cmp and and xor pop loop (bad) mov xchg movsb cmpsb lock pop lea andl add mov lods pop scas mov scas movsl data16 sahf or ljmp jecxz xchg mov sub mov fnstsw adc pop call outsb push outsl loopne inc xchg xor sub testl and push pop lcall mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl inc bound and cmp xchg or test dec movsl jge cwtl sahf in lods outsb (bad) in mov add adc sub or rclb sarl inc pop repz adc push push cmp pop insb je in and out xor jns loope dec xchg pop scas out mov cmp mov inc shrb int xchg push aad xchg or subl lods mov enter xchg xchg int sbb xor frstor adc adc inc mov loope (bad) mov cmpsb jmp dec bound sbb mov shlb in xchg push sti cmpsl xchg xchg lret sbb cwtl cmpsl pop cltd int xor (bad) out or push icebp cmp sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmp sub je pop add jne call repz dec clc xchg and xor movsb pop jmp testb mov clc pusha and (bad) test pusha mov cmp scas jle into leave xchg inc mov imul iret mov (bad) scas jl outsb cmp dec mov inc sbb dec lret sarb cmp sti es call movsl fsts clc jl xor popf jno mov mov inc pop xor mov ds aam jae test lcall fisttps arpl sbb mov cwtl icebp fsts sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jl (bad) imul pushl mov lret push push out mov jge ficoml cmpsb or add ficompl inc ret in inc testb out inc imul leave mov adc pop popf in test jb cs push shrb test jnp and dec and jecxz mov leave loope mov gs sub or mov cmp pop xchg jne mov mov or sbbl pop (bad) mov dec cmp (bad) xor sub test rolb mov ja test icebp push xchg mov pusha ljmp cmp mov enter andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl cltd (bad) mov xchg cs aad push aad inc xor loopne fcompl (bad) rol paddusw in adc call fisubrs push push ljmp sub add jg add fsubs das xor jbe sub dec int mov lahf addl fisttpll inc mov jl lcall in cltd frstor adc and repnz push out pop or lock shl jbe jle xchg inc xchg sub jb cmp adc cmpsb push (bad) popf mov sub mov sub dec es add push and popa push loop mov mov inc jne mov xlat stos daa (bad) fldcw filds mov fs pop and (bad) jno repz andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xor xchg jmp xchg test push mov scas push xchg jbe rcrl jge subb push or inc jge nop jo popf pop test into jge mov test xchg sub mov cmp cmpl out mov add cmp movsl repz mov pop outsl cmc inc and mov out mov stos and scas stos aaa (bad) xchg cmp mov cmc or sti inc adc aad add jne xchg (bad) sahf in push iret lds pop mov sbb cmpsl mov les test jne or jle jge rclb out sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jl cli mov (bad) mov xor add les cmp jl lea or sbb lock sbb lds aam mov int3 sbb xchg mov jge and (bad) jl das leave mov icebp mov jns (bad) into push shlb shlb call jle call scas xchg jmp sahf dec pop (bad) (bad) jp dec push mov push in dec sbb sub adc mov enter cltd lea icebp lock aam inc pop pop imul ja aas mov cmp mov xor cmc dec cmpsb je test orb and iret pop das inc out pop add daa dec lods sub mov sub sbb cmp cld xchg loop stc push jge mov pop cwtl cmp cld sarl out movsb adc or mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sti push in inc aad and movsl xchg mov inc sub addl add aad insb or or inc xchg in or mov inc pop scas adc (bad) stos insb xchg xchg adc cmp xor add mov outsl (bad) sub loop cmc sub fwait repz imul mov add mov (bad) pop mov fnsave cmp mov mov mov loop mov cmp jo adc fildl cmp shl cmpsb jecxz or lret jecxz jmp dec inc insl (bad) nop aam ja xchg push jb and sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl jo inc xchg jb addl ret mov rolb mov or in gs adc lea push call andb sub fiaddl jnp pop adc in test cmpsb cld push xor xchg pop mov dec jg test cmp jnp lret popa dec ja cwtl (bad) adcl adc push mov dec push dec nop cmpsl xchg pop push ss cmp out cmpsb xor xor push push fcoml (bad) push fldt jl mov es lret cld xchg pop fcmovbe int xchg and xor sbb sbb ds jb shlb rcrl cltd call jmp sbb imul std mov cmpsl fucomi rorl addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl into (bad) (bad) stos dec in lret mov aaa mov cwtl cmpsl or inc les adc jo sub add pop add xchg cmp leave dec ret mov xchg insl xor leave xchg xor call sbb pusha cwtl jl xchg stos cmpsl adc add dec push lahf mov xorl sti lods addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl clc orb xchg popf loopne test push int3 jge loope test sbb loop xor and or mov xchg outsb movsb mov cmp jb adc mov movl (bad) cmpsl cmp inc fildl test jae pop movsb mov adc jmp xchg imul push mov mov loop lea (bad) and xchg hlt subl addl mov jnp push leave nop pop add shl outsb sub and sub and cmc fistps fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sub inc std jl add mov inc nop fwait xor cltd jge mov (bad) (bad) flds sarb data16 lock mov out sub mov inc movsl aas (bad) push ss adc push addr16 aad xchg add mov lcall aas xchg negl arpl int aam loope mov mov std enter sbb punpckhdq sub je daa mov sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl sbbl adc scas push (bad) sbb sarl mov mov or fwait mov pop popa adc fwait repnz mov rclb test jno incb (bad) fsubrl pop pop inc bound jg ret jbe ds lea mov push and inc xchg je aas repz aas mov subb adcl leave jns lcall mov add cmp int3 or shlb cli inc mov xor sub mov lahf inc pop ja icebp movsl (bad) or xor sahf pop pop sbb testl repz inc push lds mov mov xchg ss mov pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl adc outsl cmp jns int3 ja stos and ret int3 shrb rcl push and cmp jnp leave sbbl outsb dec xchg lret or test jo into je jl pop outsl into mov sbb shll mov sbb (bad) js mov jecxz fs faddp add xchg pshufw out dec inc scas lods int add sub or into lds mov sahf frstor addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or push setb rorl test push sub and sbb xor mov mov inc sub mov and inc ss call jl adcb les or loope stos push xor out cld inc push mov push repnz xchg out mov sub jbe fcomi test inc popa dec mov xchg outsl jo xchg ret adc jp mov pop lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl out test fs sbb cmp cwtl ljmp orb sbb scas push into lea in lcall test xchg cmp sarl xorl pop xchg enter and push xchg in loop jne xchg xlat and xchg jnp int xchg orb stc pop sbb pop cli lock sub or jle (bad) lds fistpl icebp andl mov cwtl add cmp lock and call mov xorl sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pop mov mov in cmp jmp push cmp mov sbb add stos enter scas fstp pop xor add jnp loope pop iret je xor jmp scas test adcl cmp pop fisttps xchg xor int3 int3 int3 int3 int3 int3 int3 int3 pusha lea sahf lea fldl addl orb lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov push lock push sbb insb or inc nop imul call push xor sbb (bad) in xor in xor movsb in ljmp or out (bad) faddl pop lock mov jmp lea in test movzwl nop add outsl push xorl pop outsl cltd xchg cmp cmpl adc in popl inc pop lret fadds push xchg inc subl adc in int or mov add dec push push call xlat xchg orl (bad) xchg icebp mov push push dec mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl sbb xchg popa jge jo push push dec fimull push fdivrl cmp std or addl insl cltd orb xchg cld in push inc nop pop fidivrl ljmp jp nop adc pop inc inc andb sub mov jbe and add cmc (bad) push sub jno in cmp pop mov test mov mov xchg sub xor hlt adc imul test dec popa inc sbb xor in mov call push cli push ja nop pop cmpl sbb cwtl pop xlat inc test aam in aad xor xchg sahf in sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl stos or int mov and call test adc push xlat mov pop inc mov in xchg out xlat or je mov cmpsb xor xchg (bad) test pop fistl addr16 and mov sbbl or cwtl enter shlb xchg and test lock adc jge or cltd and mov mov nop cwtl and jle cli loopne addl jl rcr jecxz mov xchg daa jmp aam out push xchg cmp lret les mov add cmp mov stos jp int push out mov push mov sbb test aam cmpb inc stc lahf sbb orl mov inc xor andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sahf xor push popa mov push mov addb sbb sub mov (bad) add lds lret ljmp xchg mov xchg dec int jb hlt out mov out rorl les jnp add mov cwtl test into rcr cmp popf js cmc lds xchg and mov push lods fstl cmp test pusha xchg cwtl adc or mov xchg xor in xchg mov nop mov hlt mov pop add orl rorl cmp std sbb lcall cwtl stos sub jl adc xorl ret pushf test jge jnp mov sub mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl xchg adc cs aam sbb jnp std stos lahf mov push fldcw inc inc pop popf fsubr loop mov sub jmp test test loopne ret sub out clc dec andl mov mov in jne ret lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl sahf jne (bad) loopne jae icebp sbb push test jbe cltd mov xchg (bad) int scas pop addl icebp add inc mov (bad) pusha add xchg sub sahf push mov ret push adc sub loopne fwait lods or lock cwtl sbb pop and stos sub fistl roll jle movsb (bad) jnp or add ror cmc lcall clc addb ret int cmp outsl xor pop and sub xlat scas jg cmc pop xchg cli addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl or (bad) xor pop bound int3 iret mov test nop repnz mov mov repz inc es mov dec and and mov xchg jle rorl inc cmp xchg loop mov xchg cwtl cmp add ret mov hlt and cmp xchg popa icebp loop xchg inc in imul mov sub xchg jo into icebp xchg sub mov or xchg daa jg pushf add jno stc test or dec mov jle (bad) mov insl sarl js imul push dec sbb pop xchg dec out pop mov xchg int xchg mov lea jne orl mov xchg decb movsb cmp dec push movsb stc rcrb xor stos cmpsl call sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbb fiaddl mov std xorb stos adcb dec movsb add pop add in cltd into pop mov adc add out pop xorb andl mov dec icebp mov iret mov cmpsl repnz adc mov xor movsl lea sti cmp fists (bad) ret push sbb pop andl (bad) ror push test lret daa jo adc mov das rol and cmp sbb xchg fwait int or inc sbbl add or xchg scas cltd or mov xlat das stos test int mov repnz or xchg mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cwtl lds xchg or xchg call xor mov jmp jl stos in in and xchg sbbl push push mov lea xchg ror jg jl jge add pop push aad xor iret out mov das repz push or push adc mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl int iret sub insl in nop adcb (bad) inc push mov aam cltd sahf xchg js das xchg enter mov or insl mov sbb push aas es movsl mov repz cmpsb rclb push xchg lods pop lea inc adc xor call das andl jecxz mov ljmp cld xor test mov insb subb out orb mov push test xor mov cmp int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl or int lds nop and bnd cmp int (bad) or xorb clc sbb leave (bad) jmp sbb mov das jecxz bound xlat (bad) es and sarl mov xor mov xor push xor mov add cmpl (bad) jle sbb test mov mov jb aaa notb jnp add jo jmp mov into ds and icebp adc rorl sub push xchg popa sbb fwait mov loope sub inc hlt fisubl jle mov adc mov sub out xchg pop jge pop fcmovnu ljmp sub sbb push mov test push sbb pop out fists mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl stos push sub push add cmp les iret inc sbb sbb lea jg je xor pop jg lret adc jmp into mov aas nop fistps test popa xchg cmpsb in or sub gs shll sbbl xorb xchg lods add xchg stc push or xchg shlb pop lea fwait adc ja or inc jmp dec dec or mov imull xchg ret mov add sarb js jle dec ja inc loop and mov cmp sbb and sub inc mov cmc lock adcl jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl int3 cmp rcrb or call mov ret leave mov subl mov (bad) xor ret (bad) add mov (bad) (bad) mov (bad) call (bad) lea jp loop inc pop jo sub push mov push adc test sbb notl sbb leave aad mov test or out daa lods test mov and movsl std cs pop jecxz dec pop mov sub repnz xchg mov adcl ds mov jge es fs or xor xchg sbb ja add or cld xchg mov addr16 fcoml orb jb push xchg aas add pusha xchg stc and add sbb loop ret lret xor clc scas pop pop movsl aad inc fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl pushf mov mov test out inc cmp stos clc mov mov aaa and xchg or cmc addl mov pop cmpsb stos outsl ror ret lea cmp (bad) pushl lahf inc daa or outsb roll inc lcall jmp daa add lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov leave inc pop notb inc adc mov pop add or xchg out mov lock pop pop insb add add subl popf stos sahf dec mov jmp mov pop inc or mov cvtpi2ps test fwait jbe jmp push ja push inc cmp nop mov cmpsl or adc sbb or repz lock cmp add and test dec je,pn js jecxz sbb lods out mov or sub pop add adc sahf adc andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl js mov (bad) mov lea (bad) popf sub mov inc sub scas shll push cwtl adc es push sub leave clc cmp insl inc xchg out xor pop (bad) mov sub ficoml sahf lcall cmpsl imul pop or out insb ds shll mov cmp sbb repz lods dec mov mov lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl add cltd dec lock aad repnz sbb inc push mov cmp (bad) (bad) add xchg adc jo jge dec sbb leave jl movsl xchg (bad) mov imul out and int3 sbb xchg aas punpcklbw adc and shl xor inc inc jg sbbb jb push stos jle cmp lret push mov out in push fadds das ret sarb ds cmp movsb call xchg mov fists iret ret pop pop nop mov jge sahf or ffreep xchg mov jne cli out push andb sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop sbb in jge arpl or pushf mov sub (bad) aam xlat out aaa adcb mov jns xchg xchg mov sar add lods sbb pop mov call ja mov rol sbb repnz sbb mov dec jae sbb push xchg arpl sahf (bad) jp cmp push (bad) sti adc adc mov mov cmp cmpsb cwtl shl fnstsw and (bad) scas sbb or jae push push jle (bad) xchg fdivrl sahf mov insb fs adc mov ficompl cmp mov xor push ds push enter addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov sbb fldenv cld lock pop out lods mov cmp je in jns idivb lret popf cmova lcall push mov mov repz sub push aas movsl add lret sub adc repz or adc fimull sbb mov push push adc into popa xchg outsl push or mov (bad) inc fwait nop test xchg adc pop pop (bad) cwtl gs xor adc xchg adc push mov test xchg lahf loop adc jmp lea lret pop mul add sub xchg jge dec and adc lds mov sbb xchg mov fistpll rcll insb into add int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xor rolb push xchg cli mov bswap outsl cmpsl je fwait xchg jl sahf arpl scas add lmsw lods loop hlt sbb aam add lods lret loope out jge or negb popf mov (bad) std adc (bad) in adc jae loopne out lods aaa xchg stos jns out adc sub push fwait xchg lret sbb (bad) pop jbe push stos gs je jl stos sub cs testb ss or sub dec push push iret push push mov xor int3 lret ljmp cmp pop and outsb add cmp rorb sbb mov dec xorb xchg mov jge into inc aad fiadds lcall add mov addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov rcll popa shll mov mov dec and in fwait mov push mov sbb stos pusha mov jle sbbl sub pop sbb push fmull sbb cmpl loope rcl inc inc aad aas push cmp sub jne arpl stos test (bad) out in (bad) jmp or xchg je rcrl jle mov mov dec bound pop popf push nop lcall ds sti andb mov lahf or pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl lock sub ja ficompl and add std xchg mov jne lods sub movsb lret lahf xchg clc (bad) mov or jge mov jnp stc adc rcll fbld pop je mov je psllq mov popa mov mov jbe repnz shll dec loope repnz cli (bad) lock subb dec mov out add mov add sbb in lcall jg and lcall pop pusha lods scas clc sbb dec push shrb les pop movsl std push cmc test ret out scas enter sbb lea and out sbb test sub (bad) pop repz daa mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl xchg dec cwtl jo div shrb data16 xor jl aaa scas xchg sbb incb xchg cmp xor mov std push dec jmp xchg xchg es push and leave and adc into jb int3 lods addb adcb dec int mov mov add push dec push lods lret add sarb mov sahf imul pop int bnd sbb push or xchg pop sahf sahf (bad) sub mov aaa cltd and push wrmsr shl outsb in loop cmc adc and adc xchg xchg mov scas sbb int xlat ljmp mov ja add testl jge sub test ror mov sbb (bad) mov (bad) sub or fldenv mov push scas xchg loop jae (bad) mov lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl or mov shr adc sub jecxz dec push lods inc bound or fdivp mov inc mov fdivrs sti xorl xor mov int mov mov mov cwtl jb fnsave mov out into cwtl sbbl arpl loop sahf cld jg sahf popa stc stos mov pop cmpsb jecxz movsl shlb xchg dec fadd inc pop jle mov and dec xor pop pushf mov push fsubrs shlb rcrl cmp ret mov in mov cltd sbbl ljmp cwtl les mov sahf lods inc cmc test lar ret mov sub xchg (bad) imul jge iret ljmp (bad) mov addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl jbe cltd loop je add popa (bad) mov call dec loopne mov sarb jge xor lea jbe outsl add icebp insb cltd fisttpl cmp (bad) aam jp mov jnp data16 outsl push push (bad) imul dec fnsave push repnz andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl ds in fwait popa arpl pushf jecxz pop stos loop movb lods inc inc call xchg mov lock add pusha scas sbb jae sub jge jo cmp and ljmp push mov (bad) mov jecxz xor (bad) int3 add jbe pop inc loope fists add jge test xchg gs out out subl addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl inc dec push push int push or fdivr dec lods and xchg out movsb xlat and fisubl xor fcoml in repnz sti (bad) fisubs imul les and xchg loop jnp push les cli clc test push sub sub addb jle rolb stos stos mov sbb shll nop xchg addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pop sbb mov js and mov test icebp leave push test loop cwtl orl jbe jbe testb pop gs insb movsl mov jg addr16 (bad) data16 repnz ret and and imul mov sub out sbb test into rorl mov ss js ja xchg mov jne in and xchg (bad) nop and les mov bnd lods movsl mov int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmp test aas xchg enter inc in xchg and jl xchg imul insl call and adc test inc and rclb cwtl sbb pop in addb scas addb mov lea jo popf test sarb inc pushf mov repnz push jmp pop cwtl sbb incb dec pushf fdivr push mov mov xor rorl andl fildll cwtl jge xchg sahf mov popf (bad) fstpl sbb jnp xchg jne out push push arpl cmpl lds andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl (bad) cmpb test jmp scas cmpsb stos pushf sub cmc push rorb into add nop movsb cld jo int arpl xchg stos mov mov imul mov insl out jge repnz fidivl jge movsb jb mov divl xor orl cmpsb lcall lods sub xchg xchg shll adcl cltd out (bad) in mov and std dec mov cmc dec fstl mov loop (bad) cwtl mull mov pop cmp jge in addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl int mov xor and sbb inc es movsb push cmp and cwtl imul das dec pop jns push aaa mov addl adc loopne push std cmp fs mov sahf mov xor jo movsl xor jmp add ss dec out push or (bad) call (bad) xchg insl ljmp push stos roll push push out or lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl int dec std pop fdivl sbb in push and sbb mov xchg or sbb pushf mov movsl sbb add jbe dec out xorl or ja mov mov nop sbb in aas or cmc inc push shlb out xor call popf pop lret mov shl scas lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cmc out mov mov fcoml pop sahf adc mov es cmp addl mov cmp push xor ret mov push inc repnz out jbe add lea cmc adcb mov and lods cmp movb lahf push push xchg xor mov jl orl push rcr ja xorl add dec std outsl mov xchg out inc dec pop repz lods addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl scas push push xchg fs add xor lret test add andl lds divl or ja jmp daa cmc testb popa jns aas xor movsl cmp inc addb jbe xor jns fwait push jmp int mov call stos daa cmc or mov xchg daa mov and fldl add sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl add mov jmp xor and aaa scas inc sbb mov lcall mov mov xchg addr16 out push inc xchg add aaa sbb dec cld cmp std out push xor sbb rclb rolb push sub (bad) out mov xchg or lods scas stos outsb idivb stc mov clc mov fadd (bad) stc aaa push stos (bad) dec mov (bad) cmc xor cs test notl enter mov lea xor in test outsb jae stc mov mov xchg lea sahf insl inc mov push lods lahf or mov and push mov mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jbe xchg inc ret mov or sbb sbb xor dec mov jmp ret mov rorl hlt push or cwtl xchg mov mov sbb shrl outsl xchg ja adc cs mov (bad) jno jo jmp mov lret jmp repnz iret rcl fstpl push mov cmpsb sbb leave bnd inc add stos mov test cmp jbe clc loopne fcoml ja bound stos rclb fiadds je add test mov pop aaa inc xorl jne xchg push push fstl sub into xchg push sub stc xchg insb lods pop pop lcall lea fstpl xchg lock inc cli lret dec mov (bad) xor sbb xor in mov sbb pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pop frstor rcrb fists jae (bad) mov sub idiv stos inc js xchg add xor sub popa and leave mov pop std cwtl test xchg jge in int3 push clc xor mov cmp mov dec mov ljmp sbbl push mov stos jg das (bad) ja subb call sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl shrb inc popa mov dec pop fdivl fldt xchg subb mov cmp xchg sbb lret xchg mull mov out pop jl push xor lcall inc mov orb andl js loop pushf add andl rcll or test pushf das nop sbbl adc decb es lods mov fwait shll into sub out std jb jle inc push aas push jle mov sub pop test dec cmp cmp test mov and dec test sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xor sahf ds sbb mov cmpsl adcl scas rcll in xor repz dec lock mov dec mov push loopne xor fdivrl mov call sub int mov out pop lahf bound popf cwtl jmp jp fnsave xchg or jmp push out mov aas push (bad) out dec (bad) jb sub xchg mov jo and lods orb mov clc scas mov jbe (bad) push jge jne in xor sar dec ret and sub aas sahf fisttpll daa daa mov sub and das out or imul adc mov rorb mov pop sub xorb inc ljmp lea adc sbb ljmp cmp rclb andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl and (bad) mov cmc lahf das push int3 aad push push lahf cmpsb int3 call insl out adcb in fmuls (bad) jae popa jp pop xor imul xchg xor aad popl xchg lods imul addb out pop rorb lahf js xor adc popa iret sbb rcll dec add jg outsl mov sbbl ja in fisttps push cmpb fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl mov out and jl xor test jle jo mov sarb into ror sbbl xlat dec mov pop xor push mov pop jb dec fldcw addl int3 cmp call add jp mov dec popf dec shll sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl stc (bad) int mov pop popf and adc loop stos aad xchg lahf inc fisubrs daa mov aaa mov xchg subb mov int orl test mov mov test inc add data16 stos pushf xor pop test clc sar (bad) out roll xorl adc push xchg sbb cmpsb stc sti ret inc mov sbb push bound test leave (bad) jp xlat aad and sub repnz push cmp outsb xchg pop arpl rorl sbb test mov adc xchg cwtl pop insb inc addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl inc mov push cmp adc sub rcll mov aad xchg mov rcrb arpl cltd imull ds notl or mov nop xchg or xor jbe add sti mov popa popa mov push jnp adc les aam and push and and (bad) jle mov sbb lods enter in pop call or flds in xor int sbb mov movsl dec sahf mov in adc inc push and sbb shlb (bad) stos fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov or int3 int3 addb sahf andl addb mov or andl inc mov fldl leave sbb lea inc out jae dec lods sub (bad) cli les mov mov inc dec xchg sub xchg test imul inc mov inc sub sahf ljmp mov xchg cmp or jge das sub popa xchg out mov loop ds or in jge test iret int out ret mov loop rcrl int fisttpl sub pop xchg mov dec pop adc and daa stos cwtl jecxz mov sahf fnsave popa jecxz gs and (bad) ror inc loope cs js lret or jmp shl xor jbe in sahf jle dec sub inc fmul xor (bad) fwait ds sahf lods adc icebp push mov jmp xchg outsl xchg adc lods icebp (bad) inc add ds mov mov and mov jge rcrb push test mov andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl outsl mov test cmp push icebp push push lret popf add mov icebp jbe and adc adc icebp sar mov hlt adc outsl inc call push movb xor push fistpll inc out lcall lods repnz repnz mov add sarl outsb ror lcall mov das into inc push adc scas jmp insl pop push out xorb rolb push sub cmp pop adc les cmp add xor nop sub fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl insl mov js sbb mov xor ret pop addr16 nop xchg xorl aas mov addr16 xchg jno call mov mov dec add xchg das adc mov inc dec xchg sbb dec push mov rolb cmp sub xchg lcall fildl repnz and or in aad cli sub or ret std or push mov pushf (bad) xor or dec sub scas mov cmp xor sahf into push test mov cld adc mov mov (bad) fwait mov dec into ret les mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pusha xor cmp aam cmp nop ds xor and into mov cs es movsb sbb into xor dec mov mov sbb jmp push mov aad (bad) std jl mov lods sbb xor movsl pop push add pop xorb sbbl dec out mov adc cmp cmp push lods pop fsubp push (bad) idivl mov bnd adc jbe sahf in xchg pop rcrb std jbe pop rorb mov sbbb leave popa jnp int shlb aas lea xchg fistpll xchg fs xchg jnp add sub fwait pop jge inc jbe or xor push andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl fidivrl inc sub or fwait fwait add push sbb ret test repnz xor and push adc out mov lds outsb lods lock push xchg push mov push (bad) push hlt jo mov add xchg int3 dec fbld outsl push sarb ret jge push xlat jnp lret push sub jns push sbb out xchg mov mov mov iret mov push pusha bound push sub mov adc loopne lret dec push mov sbb sbb xchg pop lock xchg mov subl push adc fldl add jle add push xchg fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl gs fsts ss pushf mov aaa (bad) mov rorb jne dec sbb add cltd mov mov cmpsb dec adc or lcall movsl inc (bad) (bad) mov inc push daa mov adc test adc and mov scas mov popa inc lea pushf adc xchg andl subl push xor ljmp add xchg xchg fdivr pop xor sbb roll push popf xchg sbb int3 lret jg add imul xor (bad) (bad) shrl scas movsl cmc inc fwait sti sbb mov test jl int sahf sub jbe cwtl scas lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jae add cmp movsl test sbb mov orl jge adc inc test inc mov xor shll mov pop xchg sub mov mov sbbl subb lods shll cmpsl fwait adc adcl lea lea or mov hlt test mov out inc jp jbe lcall sbb add stc clc cmpsl ja repz popf dec insb arpl icebp mov cmp sub orb push fbstp add and hlt movsb jae push xchg jb pop pop xor jle dec fwait or mov and or leave mov les jle aas sub jl into dec mov jg cmp addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl dec rcrb xchg sbb into dec cltd aam hlt fidivrs and mov (bad) dec ret or mov popa and mov cmp dec mov and or loope sbb inc fdivr fsubl cld or ret insb mov mov lahf cmp mov divb (bad) xchg push adc and push insb cmp loopne je in inc fisubrs push out loope sti adc inc mov cld subl xor in jnp xchg xor lret xchg pop sarl xorl fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl stc test add dec in popf sub xchg lods cmp pop xor imul inc sub outsl sbb outsl pusha sub and hlt movsl insl dec xor pop mov adc mov xor cmp test imul lret (bad) jb xor movsl xorl lods (bad) lret mov repnz dec (bad) xlat movsl xor pop mov mov xlat sub xchg add test andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl inc xor cmp adc lret cs adcb add int scas lret sbb add cld stos in icebp push neg xchg lods mov inc push loopne cmp repz movsb xchg fwait or fidivs pop mov cltd mov stos icebp lock ss push push addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl dec iret mov pop adc icebp out fldcw je clc adc mov (bad) icebp mov inc out aad fwait dec mov pop icebp xor imul sub mov popa jle push or in xor add pop push in test fbstp adc xlat (bad) jno std xor fwait aam aaa iret and shll lock xor sahf scas adc (bad) icebp pusha push orb test loope rorb frstor push adc xchg mov push lret xchg loope cltd mov xchg js pop push xor xchg jmp jne jbe loopne sub (bad) (bad) hlt xchg push add aam adc enter into sahf faddl mov aad (bad) aas sahf test call in adc mov vmwrite add push pop fadds sahf add enter xchg lock rcrl lret insl mov fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl cli orb or adc sub ljmp stos mov ss sub xor xchg push mov (bad) dec push fldl dec (bad) bnd jo sbb sub xchg inc repz jge mov cmp repnz mov lcall mov pop ljmp cmp int inc out mov in dec pushf scas cmp popa cmp in dec aaa adcb cmp mov pop mov movsl cmp addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl dec jle flds add push jne cmp mov sbb xchg sahf lahf adc push xchg jmp es mov jg div and lret mov cli iret mov xor xchg sbb outsb mov into ret les xchg loope mov sbb push mov and scas xor mov add mov loop mov mov add mov icebp ljmp push cmpsl addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl addr16 popa xchg daa adc cmp into cmp bound inc les jnp mov fisttpll jbe jae mov andb outsl fnsave mov jae cmpl mov lcall rcll pushfw int add mov mov bound cmp add repnz rcll jnp xchg lret add mov pop int jle jne add fidivl nop mov (bad) xchg inc mov cltd push mov fs iret xchg sub push data16 andl insl fcoml mov xlat sub xchg outsb addr16 inc int and xchg mov xchg sub loop int3 sar decb mov and add rcpps push push mov inc fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl inc enter mov jg movsl (bad) test data16 out xchg lea divps mov mov push insl pop mov push nop dec orb popf adc ficompl add lret outsl scas push dec roll fwait leave cmp xchg in (bad) fistpl (bad) decl push int aam mov cmp push xor mov sub lock xchg ficoms pop in insl pop xchg mov icebp jns xchg lahf mov pushf stc xor stos jnp out out inc mov outsb sbb sbb jle addb mov cmp dec test add clc jbe test sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop addl stos mov sahf test mov scas sbb mov test sub mov jbe xor add dec psubq test loope xor mov dec loope inc mov icebp outsl int cmp cwtl lret cld xchg testl cmpl mov es mov lods mov dec fstps jbe lretw lock ds ja add hlt icebp mov cltd dec ficomps out arpl icebp addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl add das lds jge add outsb in ret imul int3 mov or repnz test jle mov adc dec jne fisubl dec dec xchg mov or rep adc std or jmp scas imul cwtl jno loop adc jecxz test imul int3 movsl popa xacquire (bad) pop jl mov mov and mov mov cwtl test mov gs sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl mov repnz popa or int3 mov xchg jmp push and test out mov mov and adc xor dec fsts fistl cmpsl add fwait je sbb ja xchg push inc icebp or ret (bad) out dec sahf pop lret cld dec add addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lret mov add xor outsb adc pop stos mov jbe and jnp mov subb lahf in gs cmpl xchg push int3 xchg xor movsl repnz in lods jnp pusha das lahf dec inc inc jns sahf dec dec movsb in jnp push dec lods popa add push sbb mov int3 adc push xor and mov push cs jne or shlb lock jmp sbb xor xchg into mov sbb add xchg out jge lods inc jnp xor pop cmp jae arpl cmpl test (bad) stc movsl vdivps (bad) jnp icebp dec and pop hlt popf mov stos divb push jmp pop cmpsb mov xchg cmp addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl inc mov inc fcmovu leave mov popa and dec loop or mov xchg jbe ret out or leave jl,pn nop mov outsl rcrl push mov test or push out push dec test xor outsl jns push xchg cmc mov test sbb inc jp mov xor scas adc sbbl nop lock xchg repz sub call fcoms loope mov cmc jp mov and lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl fwait pushf adc addb xchg loope sti and sahf addr16 jmp pusha add sar jl stc mov push jge and xor stc jmp push pop xor popf clc test jge pop ja cmc jno loope xor popf sbb adc add sub out movsb (bad) shrb xor hlt adcb sarb cmc shld mov test scas jno jbe xor jbe jg dec shlb jle enter clc jle xchg test sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl sub out add std rcl bound cmp (bad) pop fisttpll xor jnp cmp adcl pop jns gs cmp xor jl lret sub and shl sbb nop add dec xorl sub test cld leave dec popa add sub stos xlat mov pushf out jno push es mov leave std sub xor sarl pop xor lcall xor roll aaa mov iret xchg je popf into mov ret add mov xchg jno jae ret mov or sti or sub lcall push leave subb push xor inc xor inc xchg adc andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl scas mov pop sarb jge,pt in loopne das clc icebp push (bad) fadds imul stc addb insb xor mov test in roll xchg jecxz pusha stc mov jbe sbb add outsl xchg lods push ret lret (bad) mov fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl sbb lahf xchg cmp (bad) sbb lods jno adc adc mov sarl lret xchg sub mov cmc adc sub pop rol rcrb cld into or cmp and adc into in cmc lods xchg add and ret (bad) pcmpeqb into sti pusha cmp pop mov es mov adcb lret das cli sbb addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl into imul sub sub lods push sub push fs jmp jnp inc push cli adc jge fistps leave cmp jo pop cmp xlat (bad) rol sbbb jnp (bad) push enter dec leave mov stos inc stos xchg jnp lock loopne mov mov pop bswap xor and stc mov testl cli sbb xchg adc xor mov mov push out xchg add leave mov or push pop test inc pushf dec sbb add nop jbe popa movsb (bad) out insl push jecxz inc stos adcl andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl cli ret int aas scas arpl jbe jns lahf inc dec jp jge scas xchg out leave push mov or mov xchg jae and dec fnsave jmp std push lds cmc test movsb (bad) addb pop call cwtl inc pop scas or dec pop and fcoml and repnz sub addb adc jae pop loopne mov ficompl mov in pop sub cmpsb jnp mov add outsb inc mov jbe nop and mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl pop push or test jge jge loope pusha sub cmpsb mov sbb mov xchg sub jg jecxz mov js xchg rcrb fstpl cmpb hlt mov jbe clc inc pop inc jmp xor cltd dec test dec mov lea jbe xchg stos loop jns xchg xor dec lret and loop dec mov inc inc adc sbb dec subb cltd dec leave push fcoml (bad) jl int3 xor cmp sti xor lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop mov push aam testl cld sub loopne mov lods or lods subl cmpsl sbb push aad call sbb cmp add lret mov mov push (bad) ret out rcrl push sub stc cli andl icebp stos cmp mov addr16 cmp lret in test sbb lea lret aam push minps or mov fdivrl shl insb sbb dec mov cltd mov fadd cmp lret orb enter loopne xchg adc or and xor ja pop clc icebp cmp out jmp inc dec test cmc hlt aaa push add les xchg nop (bad) icebp sbb pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xchg sub stos sti inc pop and icebp push mov inc aam (bad) dec iret jo sbb jnp adc lcall or (bad) adc xor xchg inc and lods adc cmp mov call add test jo adc mov lea mov mov lods out lock int3 int icebp test or mov mov iret stos xchg (bad) sarb les jge sar xchg ret shlb enter pushf cwtl jle cmp stos fldcw hlt add roll (bad) scas bnd pusha fnstenv test jecxz scas int3 js stos adc jle sbb pop push lock xchg cmp ret bound stos scas daa nopl adc add fs push sbb jmp movl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl push sti repnz mov int mov or jl lock cld dec addb jbe out push in cwtl mov adc mov xor repnz dec stos sub or call lds mov dec adc adc mov mov mov jl test negb shlb xchg dec aam and xlat fwait xchg jmp mov adc dec and data16 jae stc cmp mov shlb adc mov mov out dec adc in push jge lods mov pop sbb push and cmpsb nop lcall adcl mull cld add pop mov mov jle jbe fidivs cmp (bad) pop in or jbe repz in nop data16 mov fisubs xchg orb push iret jp lock sub pinsrw (bad) xor and scas stos shld andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl arpl mov and inc xchg call push mov insl push or xchg ljmp icebp push dec cmpsb mov push cld jl push test rcr sub add mov xlat pop sbb test and mov lret scas popf inc test xlat mov int outsl addl je imul std scas push adc xchg jge addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl push cmp jne add out test icebp dec cmp jbe add shrb subb test sub andl mov dec stos dec ljmp shlb int3 pop call cmpsb test or mov dec out xor insl lahf insb fists lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl push shl shl insb push xorb adc ljmp call sub (bad) ficoml or in push into add insl xor stc rorb das xlat cmpb lods subb sub dec stc add gs shll in jnp add dec fdiv sub cmp dec popf ja mov adc cmpsl popa adc bound mov dec stos iret pusha imul pop jmp fnstcw sub test pop mov pusha stc popf jne sub stos xor sub push in xor call ficoms iret cmpl xor lcall lds addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl add sbb lret orl dec push fldcw dec lret orl mov stos and and mov frstor rcrl mov mov adc and inc xchg lret call rcll mov rolb shlb mov jnp xor mov mov or fs lcall roll out movb mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl adc repnz (bad) arpl mov pop add mov adc mov pop andb xor pop adc sbb xor xchg cmovbe rolb aaa ja pop xor jno stos xor pusha mov or xchg mov gs faddl insl xorb sbb iret and lods sbb sahf xor aad sbb cmp pusha push out test int3 xchg or xchg xor xchg fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sub je js in xchg fdiv std mov in fs xchg push xor inc sbb loope pop cmp xor xchg xor pop fs pop lcall mov xchg xor repnz stc les fwait push cmp movsl out cmp or outsb or inc fiaddl cmp roll mov repnz mov dec frstor into mov sbb jo xchg xor les mov je jp mov sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xorb bound in into jmp pop outsl call adc dec lahf adc sub xor fs (bad) mov push shll lock push lock jbe cmc mov sub and mov sbb sarb sbb add xchg sub andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov fstpt fsubrs aaa mov xchg stos movlps cmpsb inc scas int3 inc dec out xor push pop cmp pop enter aam cmpsb dec orl pop cltd aam (bad) int push jle fdivr and lods cmpsb sbb jnp pop addb test xor pop cmpsb cmpsb (bad) push jge test mov les je fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl stos adc (bad) mov testl pushf cmpsb xor stos divl and leave sahf mov loopne enter leave loop sbb inc pop orb pop (bad) dec jle orb adc mov lret push push mov int fildl mov mov mov jg and das sbb xchg add sub sub mov test fcmove sub test or aam sbb addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lahf repz mov incb leave repz cmp int mov push leave test inc in subl sbb mov mov jle xchg repz mov jg mov or iret shll jp xchg (bad) bnd (bad) addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl (bad) stos or add movsb es lea inc mov in jmp out icebp sub mov repnz mov nop adcl ret sbb icebp sbb clc jne sbb mov popl stos sahf inc test mov sbb shll mov mov sbb out mov into adc mov inc or xor clc mov (bad) fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl and out ret sbb pop pop mov ret iret xor xor fnstenv pop cld (bad) push dec pop daa xchg (bad) mov pop cmpb pop (bad) (bad) mov sub push insl pop mov mov adcb mov add test xchg notl clc mov jge rorl cld adc (bad) scas adc pop lock fsubrs test xlat (bad) lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl (bad) mov xchg lea leave fdivrl mov pusha inc addb arpl nop imul mov lds inc scas scas movsb test adc xor jno fsubl push scas enter cmc fstps insl movsl cmp ffreep sbb jbe dec xorl call subl inc add sub mov adc add scas mov mov adc stos mov popa add pop pop dec push add outsl (bad) pop xorl mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl inc xchg jp ds cli mov fmull push shll lea add jge jge sub push xchg pop inc xchg and or mov popf fmul (bad) lea outsb cmp sub fisttpl ds sbb xlat xchg mov gs xor pop jae mov out inc cmp inc sub fistpl or lea add sbb dec mov jp call sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl pop jg jl jb sbb jno and insb inc lock or pop lock inc (bad) out xchg lahf mov mov mov hlt repnz pop jecxz mov sbb jbe add cmp aam add xchg xchg lret in sbb andl push sub lret and addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl inc addb popl les test ret mov shl (bad) and xchg leave (bad) stos pop popf push shrl ss addb mov int mov jl rolb lret lret lods gs sbb scas out jae push scas (bad) outsl push (bad) jns inc (bad) leave scas rcrl pop out stos dec mov int (bad) jb dec nop xor adc lock repnz popf and xchg leave mov xchg lods pop adcb sahf adc sbb repz jp sub mov jge xor setno rol cli lds sub lret (bad) aam xor hlt mov gs daa je and xor cmp push imul mov int lret mov sub sbbl (bad) (bad) cmc rcr lcall andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pop pop out punpckldq shr jb imul xor aaa lahf (bad) hlt xor inc stos jge stos mov adc std outsb imull test pop xor xchg dec jo shrb out cmp push out (bad) out jne jmp andb jne enter rclb (bad) cmp sbb lods das jbe jo lods jne mov mulb sbb lods (bad) loop fs adcb jo inc mov leave sub out jg or aaa and sti push jle xchg xorb iret (bad) cmc pop test call adc sbb subl inc addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl mov inc out insl cli data16 test pop xor shrl mov dec daa rcrl push jb mov arpl nop sbb jns pop insb nop mov test pushf lea dec inc int rorl das frstor jle mov push callw jo mov std mov int3 movsb add xchg dec lds aas rclb or dec push mov repnz jb pop js xchg mov jge ud0 test sbb jbe pop orl xchg scas dec bnd (bad) icebp insb adc addl loopne call dec loop dec add nop (bad) mov and and cmc xchg mov mov mov mov xor pop mov out je pop (bad) lock xchg scas loop mov sbb xor call push xor ret repz (bad) pop mov xor cmp mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cli stos adc xchg fcoms stos cmpsl inc mov cmp cltd int3 out into xchg pop lret imul test mov rorl push fdivrl add arpl into nop cli lret lea (bad) les rolb loop fsubs scas mov test push dec cwtl test sbb jmp into jnp mov stc jne jecxz incl shl sbb je test scas sahf jle xchg xor and arpl sar repnz sbb out jmp int3 jl push jle (bad) data16 repnz dec or ljmpw aaa pop lret push dec addl jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl call imull mov fs orl rep in jmp xor fcompl adc mov or int in mov pop sub mov sub lret enter pop call xorb jb dec sbb add push insb inc mov mov pop mov lea xor add jo adc sub fwait dec xor ja push fiadds aad push jno push psllq fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or stc dec cmp aaa test fwait scas jge push (bad) fimuls sub scas fcmovnb cwtl pop int3 aaa inc adc orb call adc dec jp cmp popf push ror fsubrl popa call sbb sbb fmull dec stos adc inc sbb lds gs mov addr16 xchg and sub xchg mov jge lcall in out dec shll test mov fld1 js mov adc test iret addl mov mov xor (bad) lcall and rorb addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cmpsb adc incl lea lret inc jns call lock (bad) sbb jae mov loopne sub and scas mov jp mov mov sub mov mov mov (bad) jnp adc frstor lds shrl cmp dec lahf lods mov mov xchg sahf ficomps mov decl or xchg sbb nop or jle cmp cltd test cld inc jno xchg xor enter add fwait dec push pop inc les mov cmc and popf adc push jo das movsb loop test inc leave arpl push sub addr16 xor or push cmp insl sbb xchg mov push sbb cmpsl lock xchg adcb pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov inc ret mov lcall mov insl or adcl hlt in xchg mov adc fists xchg push shll or test es mov xor mov movsl movsl ret movl int jecxz (bad) movsb mov out add cld push stos adcl fnstcw xchg repz mov shll stc sbb lcall mov push cli lret mov push shl add cmp sub sbb sub (bad) cmpsb incl push pop mov push lret repz sub orb xlat ret mov pop daa lods xrelease add cmp jb cltd rcrl dec mov fs nop insb andl xchg mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl cwtl stc out mov mov add adc out lahf ret xchg and call nop pop mov sbb rcrb insl ret jbe xchg repnz scas mov push sbb hlt cs inc into adc mov and jge shr jb sbb xorb pop xor jo inc sahf fiaddl xlat or and sbb and pop stc jp test (bad) xchg adc out imul xor (bad) mov and dec loop sti inc pop loop jbe adc mov mov into cli lea pop addb sbbl sbb andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop xchg lahf mov add xor pop cmp fwait shlb fmull cltd jp and mov arpl cli faddl mov mov push dec out sub je inc xchg mov xchg jge xor mov sbb repnz fstpt sbb scas gs adc xchg adc pop dec sub (bad) cmp pop iret mov in das sahf cmp ret mov addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov push adc cwtl pop lret imul cmp imul adc test dec xchg sub imul and jecxz shl movsl (bad) in pop jle inc test mov adc je jne or xchg fsubrs shlb xchg (bad) or inc sbb cmc aaa or push cwtl jle cwtl or pop sbb pop ficoml int mov movsl ss mov jl in cmc dec rcrb imul push lret stc out xorb movb outsb addl pop xchg sahf jnp cmpsb jnp fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or or inc popf int3 cwtl jg inc cld fisttpl mov andl fucom out test sub ret cmpsb fisttps mov (bad) std imul add stos mov clc pop rcl les (bad) mov scas or (bad) push aaa push xor sahf add mov mov cld fisttpl (bad) int xor ret jg adcl les or loope jbe push mov dec scas addl jae (bad) cmp cwtl mov and xchg push adc idivl or cltd fidivl inc ja mov stc sbb into xchg pop add rcll adc mov loopne push lret mov sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl loopne jge xchg jne xor mov inc mov in push andb inc mov xchg in imul jno xor adc or jns pop imul dec cld xor mov sarb inc je call xor orb mov test stc stc add inc (bad) sub lcall jmp nop in and movsb mov lock stc clc (bad) into mov (bad) int3 xor push cwtl cmc push push int daa mov xchg jbe (bad) fbld add ds push aam pop hlt inc mov in lods mov fwait sbb xor adc call subb popa mov mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl aam mov fs pop stos inc movsb in sbb ja addb nop notb nop inc shll loopne fs out push fsubrl xchg pop jmp fisttpll and mov subb mov xchg sbb inc lea shl das outsb adc mov mov mov sub cmp pop (bad) ss add insl dec xorl sub inc lods das outsl push cwtl ds sub (bad) and in xor dec addb xchg cmpsb popa xor pop sub imulb pop stos cmp adcb cmpsb sbb into lcall (bad) hlt es xchg mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sub inc insl pop roll xor xchg sub pop inc (bad) push sub mov shll mov cmp jb mov xchg push test xchg add repz xchg jecxz orl lock jle les loop mov ja mov lea stos movsl fcoms adc mov arpl push xor xor push fnsetpm(287 mov pop mov lea je (bad) std repz test and pop rolb sub repnz pushf (bad) fs fldl addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl or cmp stc cmp or fstpl stos jb lcall (bad) andl adc adc sbb mov rclb mull outsb ljmp imul pop push xorb dec adc or mov mov cmpsl pusha push push test pop stos popa push mov xchg cmpsb lcall and xor je xor and fcoms sub sbb orb pop push sub cmpsl dec dec ss jb pop xchg mov jnp mov fucom jbe or push dec adc test test push roll and int3 mov cmp mov jge jo daa pop push (bad) lods mov jecxz push jmp les sahf rclb cmp mov addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl jae fiaddl xchg xchg (bad) pop mov fstps lea and pushf pop out shll push jp xor push inc dec in mov inc loope repnz xchg xchg mov xchg inc sbbb insl jecxz inc xchg push fwait ret into sub add mov push mov jnp stos les cld mov push ds inc in mov push out test lea sbb int3 aaa sub jbe in daa out pop inc mov addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl scas jp jp (bad) or ss movsb fs pop mov jp mov stos mov inc addl fbld dec xchg add sbb adc ja in cmp rep mov cmovg add fucomip mov loope pop push adc sbb (bad) and jmp jb add or inc es scas inc int sbb lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl sub mov pop (bad) and add fstpt xchg mov fisubrs mov push mov push std scas dec (bad) cmp jns jns repz cmpsl insb shll xorl sub inc nop pop aam lea push in mov repz or mov dec and jo lods sub fs stos aaa test test sub lods inc xor leave inc nop mov test stos push jmp sub pop ljmp xchg movsl loopne jg fidivs push iret lea push popl xor aad xor lock fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sbbl in mov das fdivl ja push pop inc mov add xchg lcall jge (bad) and inc inc mov dec pop fiaddl shr je add inc out lahf adc jge (bad) or push push xchg cmp inc out notb lret lea jbe hlt test lea sub add push push sahf jge adc sbb enter sbb jno mov add sbb push push cltd xorb (bad) ss div jns lret lea int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl addb leave divl xor add add mov or xchg movsl loop popa mov insb cmp cmp out sar push push sbb mov dec adc jecxz das pop sbb fs call outsb mov jl inc sub lret jge rorb subl lods (bad) cld test cmp xorl mov or lea jp sub inc and shld stc mov push nop xchg icebp jp mov mov lods cmp mov jmp and dec xlat shlb sub push xchg pop dec das sbb insb shlb mov loope or add cmp lods xor arpl aad fadds dec mov data16 into xchg xchg and mov mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pusha push dec test xor call aad jne frstor ret test je inc scas pop jmp push pushf pop hlt imul mov sbb test rolb loope xchg (bad) loope icebp or call push adcl nop xlat mov les xchg lahf inc je outsl (bad) movsl inc loopne pop (bad) hlt loope gs out xchg push push xchg push in mov sahf jo xchg mov faddl lret cwtl insl rorl shrb and push (bad) lret (bad) cmpsl xlat ja pusha pop xchg not and fisubs decb add in xchg scas cmp fdivrs push mov lock ret int3 jle imul xor stc jle push mov xchg faddp xchg out es mov test lods stc add stc out addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl and imul mov es mov xchg mov mov aas and cmp inc enter in jne sbb or mov sbb mov pop stos ja,pn sub fdivs add aad aam int3 xchg xchg push lea mov mov insl sub nop xor (bad) call xchg mov push lds inc testb aas lret daa (bad) clc bound es pop repnz movsb lret mov push jb cld pop scas sub aam fldenv xor sahf cwtl repz xchg fadds sar into (bad) sbb iret test mov push imul cmp clc loop sbb (bad) je cwtl lea rorl mov sub out sub dec test repnz cmp mov addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl add dec clc mov ret inc pop mov cmc aam sbb orb ret xor pop mov dec cmp (bad) jns,pn jge lods jb cmp jo push mov scas gs inc push push loope mov sbb enter lret sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lds fwait and rolb insb xor sbb add dec pop add mov outsb gs jle call inc jne mov pop fsub pop repnz insl outsl adcl add in sub hlt mov stos mov sbb lea push mov sub rcrl int3 inc popa mov xor popf mov cmpsb call and fimull shl jne push pop in and dec add aam addr16 out or test sub cmp es in and jge xchg nop xlat sub aad pusha incl mov jge xchg jecxz mov adc in fwait add mov aas push mov sahf lods inc dec stos test sti gs loope xchg jg add xor in mov scas lock jb in stos addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov or sub xchg xchg push xchg xchg popl xor push xchg xlat and stos mov rorb lea xchg scas movsb add out aam pop lea push jae fdivrs aas sarl test mov das mov pop sarl mov mov cmp jecxz dec addl dec int3 pop mov scas xor xchg xor xchg sbb mov adc xor imul push insl frstor or sub aaa ds les fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl (bad) xchg lret and push cmc int filds fsubr stc shlb add ja inc insb xor pop mov mov es xor xor jecxz cwtl cld add clc test out cmpl xchg addr16 (bad) rorl xchg out (bad) std sub adc or notl mov mov cs nop and int3 sub fbld es mov sahf mov jg mov pop and sub sti cli pop adc and movsb daa shrl mov adc or flds xlat test loop ret sub xchg scas mov mov push jnp adc mov movsb pop out and jmp ja popf mov test jl out sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl not ret bound rol sub mov ret repz pop pop and ret ret das and movb sbb mov dec adc dec test pop jne stos in outsb flds sahf pop mov pop fbstp and mov jge sahf movsl call jne lock mov repz ret push enter out je lods and mov xchg inc int pop and data16 sbb fwait in test xor lret jae mov mov xchg (bad) shlb xor add aam cltd lock in std rorl rorl test push inc mov addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sub loop pop repz jg fs sub mov in and pop cmp rcl cmp inc cmp adc scas jne mov inc movsl outsb loope jne push and (bad) (bad) daa repnz out inc arpl sub sub sub or inc lret fwait jmp mov adc jb out jmp xor ja dec pop dec jle pop jle in sub mov jae dec in icebp pushf out rclb dec mov and mov mov shrb sub repz or in scas push aaa stos shll pop iret rcll mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl xchg leave mov xor test rorb xor cmp adc push sbb jmp loop dec test add shrl idivb mov lds movsb out cli or mov sahf add jo push and (bad) sbb xchg sbb mov das ficoms sub negl xlat in (bad) adc xchg or sar sbb and ja lods and outsb xor mov pop lcall addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl inc and sub shrb pop subl outsl xor jne nop fnstsw dec icebp xor xor push sbb sub shr and pop xchg sub rep sbb xor movl shl xor jae jnp add xor mov add cmp enter enter jmp nop and ret andps cwtl jge xchg popa icebp into aaa (bad) cwtl jmp (bad) lods jge mov mov andl inc inc fldl addl orl int3 int3 int3 int3 int3 sahf andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl enter push (bad) cs fiaddl sbb test in stos sub mov mov xor rclb cmpl mov xor test sarb and orb pop stos ss lahf repnz call and mov push and cmpb pop sub adc es and dec adc subb (bad) out xchg enter lret ret cwtl xor lds jb cmp jns pop add xor cli xorb lahf jmp shll icebp cli push mov sub push out push cmp or test and (bad) cmp popa xor aam inc enter hlt adc inc xchg aaa inc dec arpl add jge jns enter int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl test pop int mov and sbb imul and stos call sbb push sti and (bad) rcr lods xlat push fs push mov jle mov or cmpl sub es repnz push and imul add out out das (bad) mov fwait dec jae jl clc cmpl and xchg movsl int3 test pop mov push leave mov mov test int sub xor dec cld sbb or dec pop nop lea call scas rcrb jne pusha call and inc cs or mov jp call les lcall mov aad or lret dec jge sahf or lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl andl inc fidivs xchg sub call pop clc lret pop test ljmp cmpb (bad) adc gs daa jle ds ja or mov mov inc aaa bound hlt jmp xor fidivs push sbb scas dec (bad) or stos sbb sahf dec decl mov xchg sbb lcall pop add inc dec je xor popa push fldenv mov pop ffreep fsubrl pusha jnp mov lcall jae dec xor sbb cwtl pop scas scas cli pusha mov es adc fabs jg lock rclb fdivs or xor in mov out mov cmp push es push jge fsub mov fldt test insb mov daa xor sbbl cmp pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl movb daa subl xor fwait push (bad) mov aaa sbb andl or cld lcall imul call mul mov add gs (bad) lock fdivrl loop push (bad) or push mov lretw adc in jmp jns and mov lcall paddusw andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl mov mov xchg xchg xor call bound out xchg mov sub xor subb sub (bad) aam xlat mov xor mov arpl mov loopne imul lret mov inc insl mov filds pop fucom je call scas int3 jmp (bad) cmp push add test pop adc jge mov fmull (bad) push out jo sbb rcr fnop pop pusha out xchg mov sbbl push ljmp rcr pop std rorl mov (bad) fdivr rclb push jo and sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl push mov cmc (bad) jb fsub (bad) mov xor mov loop add fdivs mov in fadd subl fisubs xchg dec aad xor jne int fst or (bad) in lcall (bad) (bad) cmp mov sbb aas insl push fnstenv mulb xor sti je std jl stos addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl in mov jg sub faddl gs cmp cld jle stc orb adc fwait test mov fsubs push xorb pop xor leave jecxz fsubl and push das mov sub xchg (bad) fisubs adc xor test faddl xor push inc cs sbb xchg lods jge mulb mov rcr xor sahf lods sbb stos jb lods mov adc xchg (bad) stc and xorb fpatan lea jl ds popa data16 mov adc cmpsl ret loopne or mov test xchg jl (bad) into xor lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl (bad) and repnz dec mov into aas test popl sbb pop out in movsl ret sbb push sbb xor inc cmp int3 lret std jmp inc lcall lods cltd jo fidivrl jnp xchg fs stos inc insb mov lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cltd jo cmc and xchg xor testb mov lret loope lahf leave xchg or and xor outsb repnz shll jg in adc xor jl jb aas mov aam rclb mov or pop xor leave jge out fdivrl test in mov lret fs cltd or int and adc push addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xor cmp sub test push jne aad loope stos call icebp loop outsb outsb pop sbbb mov arpl mov dec pop push dec imul leave mov and xorl jo push aam fwait sub add cld inc push push loop into loopne fisttpll sbbl mov (bad) out mov mov test lea push repnz jmp xor add fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl fwait xor andl inc stos loopne imul int3 dec (bad) sbb pop push mov neg adc pop cmc xchg xchg lock mov aam sahf xor nop mov out and enter popa ss xchg adc test (bad) sbb int lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl push mov mov dec mull lahf sbb add pop leave out rorl stc mov dec mov fists cwtl jge daa fstl leave lock in enter sub cmpsl push jb aam mov jmp in sub sahf popf cmp push sahf nop or sbb test and and outsl pop sbb cs movb inc aad ret out inc xchg movsl sbb insb jbe cmp movsl xor and inc orl shr and test inc popa and add cmpsl int3 dec mov popa scas pop dec xor not adc fbld cwtl mov cmp ror cwtl outsl sbbb je addl mov xchg mov inc (bad) xor adc xchg mov mov andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl nop xor mov jg fistps and fstps mov and loop xchg dec sbb ljmp and cld orb jg jb cs int3 mov jmp and or mov fs mov or ljmp ret fildl xchg sub sti pop dec mov mov jge cmpsb pop push adc repz mov mov (bad) mov xchg fnstcw mov fs sahf decl lock in jg in loope inc add imul mov add pop mov lret add addb dec insb pop inc ljmp outsl test mov jae lret push xchg (bad) ficompl xchg xor inc outsl mov xor shl repnz popa sbb call jge jbe inc xorb ljmp fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl push or jg dec test clc outsl je popf pop cmp or shl stos mov xchg lahf (bad) les dec sub hlt sub xchg insl or not xorl into (bad) cli inc jle sbb clc into fstl movsl mov xor push sbb rcr les inc jo jecxz and imul (bad) roll pusha mov sbb (bad) mov jbe sub xchg and push movsl scas stc insl stos fsts subb sub jg in mov iret push in jmp pusha lea stc loope shlb inc (bad) sbb loope xchg mov je push sbb (bad) mov clc xorb sbb jle pop jbe adc mov pop leave xor xchg push mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl nop xlat movsb out xorl sbb test mov test ret call push lret ret cmpb iret or call test lock push inc xchg pop adc shrb dec cmp popl stos lret or push jp mov insb aaa pusha sar lds push xor movsl divb popa rcrl xor adc sub mov fwait cmp in call pop sbb js push pop andb jo jmp cmp dec add sbb fiadds clc fcmovnu cld bound cmp inc lret adcl sub jo aaa pusha sub dec push imul rcll pop pop leave mov std push inc mov icebp fs pop xor sbb leave sub sbb xchg mov sahf fst or addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov sbb xor fwait mov mov add sbb sub mov mov subl jmp in test adc jb out jmp cmp or sbb or jo pop mov cmpsl repz inc pop aaa and jb mov mov int sub aas jmp jg mov and aaa sbb shll xchg hlt xor lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl mov inc add xchg in mov es dec fistpl adc das je test add jp add pop inc jne dec sub movsl aad les in adcb sti mov sub mov jge sub sub arpl push ret aad xorl int mov jg mov leave mov nop cltd inc mov jg call push xchg or outsl or es rcrl andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jl cwtl jnp mov arpl sub nop mov hlt inc jbe cmpb sub cmpsl hlt stc jl lods test mov sbb cmp into bound sbb push dec sub jge out push xor test xor cli push inc cwtl xor mov jge xchg lcall jle xor or roll imul aaa jno test mov cmp into xchg mov dec (bad) (bad) imul and pusha insl bound and and push je fwait mov cmpl cwtl fdivl fnstenv ljmp in scas outsl sbb rol mov add mov xchg shrl cmp sub ss faddl inc xchg adc and lock sarl addb enter lock pop xchg ja mov lods lock jae subb subl pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xchg cwtl dec test mov adc mov jp fnstsw adc jg mov frstor loop lods sub sbb clc sbb jbe cmpsl fsubl push xlat fidivrs pop mov xchg out mov add mov fistps or and jmp jae movsl adc shl sahf lea adc pop ljmp jl lcall addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl and mov dec mov mov dec jnp inc fldl out inc (bad) fsqrt cmp lea mov andl jne jne in sahf ljmp pop scas inc stc xchg jmp sbb mov test push add or mov pop xchg adc pop xorb test rorb aaa dec loopne pop mov pop cld adc inc repnz clc scas fnsave movsl nop xor out (bad) hlt jl sub or pop mov pop mov pusha jo dec dec jge jl xchg flds and lahf nop imul lret sbb pop shll pop sbb lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl fidivrl (bad) cmp jae push insb (bad) aam aas loope lock xchg and or (bad) fwait mov cmpsl sbb data16 test jbe insl or shr cltd jbe shll jg roll xchg sti mov arpl enter fldl pop mov mov sub out sub movsb xchg mov jmp loop inc test in cmp mov sti enter inc push icebp arpl mov popa xchg out inc inc mov dec ss (bad) outsl inc xor jne pop dec push fs sbb cmc mov inc call loop lods loopne mov test cwtl out lret (bad) jae movsb outsb jle and push sub sub inc ja aaa sti rcr dec jle dec in out xor push lahf lea dec jecxz nop sbb test xor sub js pop mov arpl scas scas addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xchg nop pop and int cld mov clc outsl out fdivr pop xchg fsub mov xorb cwtl cmp dec sub lahf pusha loop test movsl sbb or fisttpl push stos mov jnp leave mov enter dec (bad) pop mov push outsl add mov aam mov mov mov dec mov insb pop pop xchg scas leave rol inc outsl dec dec (bad) jb pop adc jbe popf mov mov scas or xchg mov test sbb aaa mov test or cmp shrl lods xor mov addb (bad) pop sbb out add lahf loopne mov pusha lahf cmc cmp out out scas pop add jge jl push lods repnz in (bad) adc scas pop cmpsb je cmpsb lret (bad) cmpsl rcrb out repnz fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or add sbb xchg mov aas mov call mov or pop mov test rorl jmp insl sub jnp icebp cmpsb and sub sub cmpb adcl inc sbb popa mov mov in lods rclb outsl daa jne cltd jp mov mov in (bad) ds xchg test out sub xchg lods psllw add sti xor or mov leave jecxz push daa and mov ljmp into lahf and ds sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl sbb xor and dec mov push xor mov adc outsl aad dec xor sub aam jae in outsb rcrb sub jne jg dec or out jno dec mov popf mov lret mov bound push (bad) mov int add lods or sbb cltd pop mov fildll sbb into mov mov cld mov sbb xlat inc addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl clc mov add and adc pushf sahf sbb xchg mov inc inc xchg pop pop mov test shlb xchg inc hlt and iret and movsl cmp mov pushf add in push hlt jb popf adc sbbl jecxz aam lret xchg cwtl repnz cmp std sbb outsl outsb fadds pop mov popf (bad) das js stos push inc cmc xor sub test into xchg stos push sub mov orl push xor jge addb cltd stos mov jbe mov pop xor xchg mov es xchg xor cmp cwtl imul lock mov pushf sub mov inc imul leave adcl das xchg les je mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl mov push adc les loopne (bad) push hlt in push test les inc loope in xor mov (bad) cmp popa dec pop popa bound das or cmpsb int cmpsl ret jno dec (bad) fdivp sbb stos sub test arpl rorb cmpsb and sbb pop add mov shl test add xor jge call pusha lret movsl out mov insl cwtl sub int jne adc das xor lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jns in les ret jno aaa mov je es jnp inc cmp xor xchg es in loopne or jbe iret adc rclb subb xorl aaa mov test xchg int sbb mov test roll iret cmp pop popa fldl adc mov cmpsb xchg and stos int3 xchg jp cmp dec cmp pusha mov cwtl adc arpl test movsl sbb addr16 sub mov add loop scas dec inc xor push xor adc push scas push or mov orl out xchg enter jns outsb and nopl scas out aad cmp cmp jbe aad insl pusha stos add xchg inc aas pop xchg pop push push jne addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl adc fwait insb gs jnp add xchg lods and out push cwtl mov inc pop fsubl push out mov lock clc xchg mov push mov sahf cmpsl sub jmp sub test test or mov xchg jl dec dec (bad) dec pop mov jge aas sub push out push imul ds cmpsb shll add xchg pop xor cmp xor dec and sbb mov pop subb inc lcall aas fnsave cmp cmp in sub in xchg clc test rcrb push sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl sbb mov jg cwtl in cmp mov fdivrs imul jae inc mov test mov xor imul xorb mov (bad) cmpsb mov insl jg xor lret in dec lret scas sub stc cwtl out xor cmpsl sub cmp add notb roll les mov jb xor test pop or jl nop repz int3 subl xchg (bad) pushf xor cld lds fists enter andb push mov sub mov orb lods cltd xor notl mov test and insl xor xor popa pop or inc add lret mov out mov sub loop mov cmp subl cltd adc add push repnz out push sbb cmc add mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov iret mov insl xor mov in cwtl pop cs mov push leave jae or (bad) push je dec popf pop and icebp sahf push pop arpl daa mov outsb sti pop sbb push (bad) bound loope sbb into mov cli push mov sar dec nop icebp arpl cmp jbe jae and mov mov mov jns mov adc flds mov and scas in lahf cltd cmpsl (bad) inc pop xchg shlb pop rcrl pop push outsl das jno or cmp pop mov lcall andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov mov xor jp mov sub mov pop mov lods mov repnz pop jno in shlb push jmp jl mov mov mov xor sub xchg adc mov into xor xor hlt jb mov rclb cmp push cli sbb push repnz mov xchg dec lahf int3 aaa mov sub ror mov xor push add aas cld xchg inc jg xchg cmp push mov aaa xor outsb jmp fstp push xchg lcall int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl pop xchg je or fisttpll test xlat inc sbb cld test jge pusha repnz test test ret lret push adc shlb add xchg add pop pandn sbb leave mov mov pop pop imul loope push arpl jne lods xor sbb mov xor jns push bound xor sub mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop and (bad) add inc mov nop outsb test or sbb sbbb test adc stc and dec test jb jbe int (bad) out ficomps lret scas jne push aad xchg jl,pt pushf stos int adc sbb xchg push mov outsb cmc xchg pushf shrl leave add lds or dec inc rcrl movl ret int3 jnp or dec jno mov mov sub cmp lea jbe imul mov xchg jmp pop add or mov jbe in addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl inc add ds dec aam mov push fstl insb lea jecxz and dec or push out push and repz in nop arpl mov cmpb mov sbb push sahf sbb mov or jecxz lock insl mov pop fldenv mov sub jb jg adc jae std or daa pop xlat lea adc ja mov out mov xchg mov cmp xchg add nop adc sbb push xchg inc shlb loope cltd ret mov fcmovbe pop std pop (bad) (bad) ds jecxz and insl xchg shll pop loop repz outsb xor xchg jl mov and addr16 mov ss (bad) ss xchg lods xor fiadds outsl ljmp pushf fisttpll cmc fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl and cmp movsb aas repnz jnp and (bad) aas int sbb xchg mov add mov push (bad) fscale into adcb adcb jno incb insl mov fdecstp add (bad) out jo sub ja add stos mov test call out add fiadds xchg test and fsub jno ficoml adc jb (bad) push mov mov sbb add rcrl and cmc lds rorl jne stc add arpl cmp jmp push lret jmp or ja sahf sbbl mov push fistpl lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov aaa das and jb cwtl xor shll pushf int3 xchg mov mov fidivrl es cld call (bad) fmul xor and push pop mov out xchg test fnstsw mov ret jge mov loop shlb sub mov sbbl repz push int int popa push shrl fnstsw cmp cmp mov cmp mov jl mov push push mov decb mov shrl inc mov inc out aam (bad) sub data16 mov iret xchg mov addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl push ret mov inc jb and or gs aam adc sbb jge push sbb test sub lods stc addl (bad) pushf mov std xor (bad) cwtl mov xchg mov mov xchg xchg mov sbb popf mov pop pop rorl aam aas cmp xor neg xchg sub movsl aas xchg push fimull lcall icebp fisttpl flds dec xor mov cmc push xor (bad) jmp stc stc mov push and daa push sarb xor sub mov in sbbb stos or inc xor jnp xor and fimull movsb mov pop dec jecxz mov fucomp cmp loopne mov jmp jge mov or xlat ret and insl adc lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl and out lret push fdiv xchg inc dec movsb mov div repnz fstl ja outsb xchg es aam xor out ret in mov ja cmp mov imul jmp cmp add in (bad) lcall ja or sub inc xor pop mov into mov push or daa cmc mov mov out sub push mov xor mov sti test or fucom test xor mov mov sub sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl inc cmp stc nop lds sbb cld jg sete or stc repz hlt leave push shl outsb mov inc xor mov mull sub addb add cs adc jmp mov push xchg into add lret cmp and dec nop or jge push sbb in inc push jl fadd cmp jmp xor inc ret das jbe inc test sub addr16 inc pusha jne xchg jge hlt movsl mov jle jl dec xchg xchg jne (bad) pop sbb or pop xor rclb adc mov or fdivr aas adcl add psubusb popf into es fmul sti xor je inc adc pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov xchg mov xchg or sub push cmc jle xor stos jge cltd cmpl xor mov inc call clc sbb outsl or dec mov test dec mov mov mov jge or test test movsl xchg ret loop iret mov hlt xor cmc popa pop scas mov testb pop pavgw push out sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl cmp xchg xchg or mov add mov imul pop (bad) mov fidivrl jo pop adcl push jnp jg movsl fldl pop cwtl xor xchg insl cmpsb lcall dec call dec fbstp frstor test jle mov jp sbb lods lcall add in xchg inc push jbe mov enter repz loop inc test pushf add cmp ds or pop repnz addl sarl fwait xor xchg das pop adc in jl adc imul les lds jp add iret lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl int3 mov jbe aaa cmp push pop ja stos jge in push mov xchg sahf xor cli mov jl repnz pop popf inc xchg test pop (bad) js leave addb jge dec and andl xor test ds add test lahf xchg ds pop inc out mov fidivrl repz leave js and dec jbe jp and repnz out imul xor hlt pop xor mov js fs jne and ret jl loopne loope jae test ror dec fisubs int3 insl xchg xchg nop xchg xchg sbb test sysenter jl aad rol xor test sub sahf pop scas push sub adc push pop cmp mov insl jo addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl jmp imul (bad) (bad) or out jl pop rcr dec test sub mov leave jo mov or icebp add fwait inc test pop int3 clc jmp (bad) push movsb jge cmp movsb repnz inc movsb ret cltd mov es push loopne push push sbb iret cmpsb daa xchg scas push xor repz lock jg push add xor andnps int jae repnz test cmp mov adcb push sub adc loopne (bad) fstl lret loope dec xchg or or xorb pop xchg int3 loope sahf add mov nop fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xor pop scas ret xchg jnp pop icebp xchg mov cmp cmpsl out xor filds stos jb pop imul insb pop cmp incl fidivs jo jl sbb pop mov repz xchg je out mov ss mov adc push fcomps push (bad) push xor cmpb add sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lret mov push sbb lea out inc cmpsl push out xor mov insb dec mov xchg inc pop pop adc mov inc jmp cmc faddl test pop mov jno mov int3 push ffreep mov dec add mov call fbld jmp jl aam sti pop roll jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pop pop les shlb jne (bad) and jno sub sub sarl icebp dec add cmp in sbb sbb nop enter mov sub xor xchg loop enter int3 cmp jl or add cwtl (bad) jecxz pop fildll or mov pusha xlat or in js test pop mov jl nop adc dec mov (bad) test adc xor xchg je mov orb and adcb lret fmuls adc sub fwait mul mov mov sarl mov out ror xchg mov outsl add cmp fdivrs mov aam loope pop stc sbb loope sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl jno fdivrs subl dec ret mov pop inc fldl sbb xor pop cmp (bad) std or pop or sbb lret mov mov xchg push inc imul mov add adc enter xorb sub call push mov pop mov mov sbb data16 jp pop xor sbb andb test mov lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xor xchg xor push scas clc iret sbb enter stos sub xor mov nop lods mov pop cmp mov addb pushl decb in push inc jne cmp pusha inc out xorb jp faddl test pop jmp xchg andb sarl andb test sub or pand sub lcall pop xor pop cmpsl mov push or das scas cmpsl cmpsb sti jns xor inc cs mov xor mov std sahf stos fistl nop mov jmp push shl ret stc pop cwtl jg sarb dec (bad) adc cli add xor clc cmp test or mov jl cmp mov mov xchg xor dec daa hlt aas add cli and addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sub js push out xlat xchg ret sub adc les arpl cmp orl negb jb ds jmp jg pop out ds xor enter cmp mov push int jg mov rol repz pusha sub sahf ficoms mov pusha cld pop (bad) sbb and and pop lret mov (bad) and cmpsb repnz movsl mov fisubl lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl sahf neg call stc jecxz push push jo adcb cmp test mov in and jl jge push dec pop dec sbb scas sbb push enter xor adc cmpsb mov imul mov push sub repz int3 mov mov cwtl xor xchg repz pop das cmpl fcoml push xchg inc sbb xchg shlb push rclb dec (bad) loope mov dec mov mov dec mov push (bad) out lods shlb jl xchg cs cmpsb jne cmc add and cmpl mov cmp add sahf cmc fimull (bad) dec movsl adc lock incl jge mov xchg sbb xchg cli jmp scas ljmp rcll sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl add sbb loopne push popf outsl je ljmp (bad) jmp mov xchg mov outsl in out push scas jae mov pop test xchg lods or imul lods push and bound sbb sub mov int3 sbb cld lods lods test out dec xor fstp mov scas add and enter (bad) subb xchg stos loop,pt push sbb popa sub push sbb cmpsl sbb xor addl jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov in mov shl stos add or clc lret pop les aas cwtl jb scas les fs pusha jae imull mov push mov add jns sbb pop in mov std ljmp sub mov ret or inc popf xchg dec stos and sub xchg out xor dec test jg rcr loop fsubp inc mov js shll int3 sahf xchg dec push xor stos hlt mov dec call jmp lret clc leave jg mov in xorb roll push shr cli repz dec sbbb xchg sahf es jns pop xchg inc cmp (bad) (bad) sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl and call cwtl and cs push push iret xor scas jo cmc leave lods test sub addl int3 xor xchg outsl push hlt ljmp pop (bad) shlb jmp incb ljmp ror psubusb xor cmp jo cwtl psubusw xor sahf lods xchg add mov nop mov xor xchg decb les div lock int lret inc int3 or negb xor and jb stc imul lock cmp mov (bad) nop data16 cld xchg mov andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jnp jne shr int3 mov fsubl ret mov sbb (bad) popa jecxz sahf sub mov sahf pop outsl inc xor subl mov xchg pop imul das cmp ret inc mov imul in xchg push es jl add jecxz lds xchg sbb dec int3 test jle (bad) addr16 loop pop in out inc inc mov sub cwtl and ljmp andl mov pop sbb pushf int in fbld xchg sbb xchg and sbb cmp test add pop jecxz add add loop adc cwtl (bad) mov cmp mov lods mov leave xor xlat gs lret pop sbbl popf addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov in dec mov add jmp adc js js jle orl jns aaa mov mov icebp les cmp test inc jno in fwait imull mov jbe sbb enter mov cwtl dec and mov shlb jecxz inc mov adc outsl dec fisttpl sub jae (bad) cwtl hlt pusha movsl out leave fsubrs sub xor and aam mov mov sbbl mov inc dec mov out out aam inc xchg movsl in push mov (bad) aam inc sub into xor lods adc loope mov pop je cmpb aaa shlb add xchg inc adc dec mov ljmp add lcall jne clc xchg mov lods outsb cli mov sbbb dec enter int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl add out push in imul jbe fstpl mov sub sub jne pop sub test sti shll xorl out in jp jbe or cmp or and push orb ja pop shlb ret mov lods pop inc inc movl into add sahf repz das push rolb adc subb popa or imul jmp inc push lret je lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl addr16 or mov xor mov movsl imul sub pop sbb ret adc jbe sbb imul inc shll mov add ret mov sub mov je gs cmp sbb cmp subb inc cwtl jbe adc sub (bad) imul addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl movsb shlb in icebp and mov jns and or movsb lret sbb aas mov aad test std fwait das lahf mov lcall jbe adcl push sbb cltd pop add xchg push pop sahf lret in cs cmpsb sub test lret dec gs ffreep outsb sbb dec popa dec mov stos movsb stos pusha add orl lock sbb andl cmp int adc (bad) dec out sbb pop hlt and (bad) sub xor pop out cwtl dec sahf adc sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl push test mov dec xchg test and imul add dec jge sub test test sub movsb sub es cltd lea insb enter dec movsl mov rcll nop push addr16 xor addb (bad) testb fxch in mov fwait arpl inc rclb aas xchg dec repz inc push and leave sbb test mov mov orl fisubrl (bad) xchg sbb mov mov inc xchg neg pusha push pop or (bad) lock xchg pop rolb sbb adc fwait jae add mov addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl in pop mov xlat cmp jle cs call rorb pop (bad) cmpsb pop or dec rorl clc ds js movsb xchg mov xlat (bad) or or mov dec je push xchg push jp js add hlt push mov sub pusha shll hlt jge andl mov jb int3 adc xchg push hlt or mov push iret fwait push cmc negb mov add mov pop push sahf push jge and rep aaa inc mov lret pop enter stos cs and xchg dec pop (bad) lods pop push roll aaa xorb add stc pop mov lock ja paddw jge sahf xchg loope push xor int3 sti cs jmp mov xchg inc and xor cmp pusha sti mov xchg andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov (bad) (bad) xor mov mov jle xor mov int enter jp cmp or sbb mov xchg sub fldl and xor cmp stos add sbb shrb cwtl cmpsb cmp xchg sbb int movsl ret decb stos call hlt inc push sbb or int out lahf xor xchg test add dec imulb inc jle popa inc adc sbb nop imul fwait test adcb call xor rcll mov stc xor dec pop adc loope add add pop sbbl pop je adc push add and fstpl adc dec ror in xchg leave cmpsl push sahf jmp fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xor sbb std ljmp mov fs int3 sahf repnz out addl pusha sub movsl mov adc cmpsl push jmp je cld mov out sti inc mov fsub fsubl je test cwtl xchg cmp out push enter loope or insb loope in icebp push insl mov cli mov lods scas and cmp mov pusha adc scas sbb andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl daa cmp cmp xchg dec std bound cmp mov mov push lock xchg pop js fsubs mov clc xchg cli ljmp aam push and jmp pop mull (bad) xchg push pop sub orb add lahf xor sub lcall xor setp int loope or iret add movsb enter adc dec mov dec and cltd mov stos sbb mov (bad) (bad) jmp stos jae out xor inc ret push sub enter xor cli mov mov mov cmc stc mov sbb mov inc test add dec fisubl ja pop aas dec js (bad) (bad) lods filds add adc inc mov inc fidivrs fistpl andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl fsubrl jnp fstpt int3 fiadds (bad) rorb sub fisttps fs sahf inc xor aam (bad) adc pop sub adc aad adc sbb push add cmp js push dec invd out mov lcall mov (bad) cmc sahf leave cs xorl shll lret imul and in sbb or mov test insb outsl sub jl mov test xlat adc out xchg cmp sub sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl xor out out je ljmp xchg andb or jge inc sbb sub push xchg xor mov movsb push into loopne loope and sbb and lock jecxz mov xchg pop mov aaa mov test out push out cwtl fcompl xchg push test lods pushf imul push es and lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl call movsl sbb add mov popf lock aad pop jbe ja movsb xchg cltd in dec shlb daa cmpsb sub dec sti xor or adc rcll or dec scas inc push test aad mov pop shll xor add push xchg lret aad mov sti mov dec enter std aaa add test shr shll or push pop popa popa shl xchg add cld mov aam lahf and fisttpl add (bad) adc scas loopne in movl sbb out aad mov dec sub and sub filds jbe xchg test dec mov jmp xchg cwtl mov or out pop xor repz dec movlhps fmull aam mov mov push ss push (bad) pop push sub imul sub pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl push aas outsl and js fwait xor dec arpl mov pop sbb cmc pop xor mov mov jmp aaa stos stos xchg sbb enter lods test gs test scas xor stc lret jge out mov mov pop std xchg mov push sub push pop dec nop sub rcrb fldenv nop pop add rcl lds xchg pusha add shlb fdivrp cmp (bad) cmp mov nop jae fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl test mov leave jl sub aad push pop dec hlt push aam loop xor fcompl aam mov mov shrl and leave add lea les cltd call stos call adc cwtl or fisttps add xchg inc mov addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl imul sahf cmpsb das xorl (bad) xchg fmul adc in xchg pop sbb mov push mov in sahf mov fwait mov ljmp jmp mov adc sti pop testb subl cltd movsl lods in pusha sub sub lcall clc cmp popf cld push lods aaa or sub pop xchg addl jns addl fisttpl and ret sub cs cmpsb pusha xchg push movsl xor pop sbb sub loope js stc insl jle mov xor xor push loope push xchg mov adc fnstsw jne shlb addr16 mov xor out insl inc lea xchg adc addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl fstl cmp je movsb scas cmp add mov dec sub xchg js dec dec mul inc sbb fbld push leave nop rol cmp leave jno add sbb sub mov cmp lock add cmc notl fisubl jne push sbb jne js scas and cli cmpsb jae xor repnz js mov addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl nop xor xchg jne sub lea shl int xor ss add lret dec imull loope ficoms adc lret jl jle sbb dec sub mov out lods push jnp add fimull mov mov mov mov not pop test imul addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl push lret or push push jb xchg sbb enter lea adc dec xchg sub das enter mov sub sti outsb rol sub inc mov test leave add jl lock add push xchg (bad) fsubrl fwait ss and addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl fwait and add mov ljmp push test fstpl movsl fcoml je stos pop les push in jmp insb int outsb sbb enter push mov aam cmc jb int push xchg (bad) sub mov ljmp test jnp enter (bad) cwtl xor aam dec outsb mov lea js movsb dec sub mov mov mov cmp sbb imul test add push dec or mov lea sbb in out lods xchg icebp mov jne daa sub outsl sub fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl xchg ret sub mov fcmovu stos xor inc mov jp adc dec or addr16 mov xchg add mov repnz jmp icebp fwait push cmpl xor imul mov add mov jge addr16 adc xchg std cmpsl jge xchg mov gs js push mov push lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl test subb subl stos lcall lods push je mov stc mov and fisubrl inc mov out mov pop sbb mov test leave mov cmpsl xor push pop repz (bad) pop xor sti clc mov mov fisubrl fdivrs inc shld and ja sti push sbb movsb movsl sbb inc popa cmpl movb pop push xchg mov in (bad) out sub pushf stos xor andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl jns sahf in ds pop xchg jo,pt cwtl fcomps push (bad) stc int lods sbb xchg lods lods cmpsb sub std movsl ljmp lea sbbl flds xchg ret or mov hlt lret rcl jbe mov fidivs xor hlt pop test add scas cld push iret loop popa or sub mov (bad) xchg (bad) (bad) fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl add jle arpl xorl add add push mov push push push push mov mov mov sub mov mov mov push push push mov mov call lea lea pushl push push lea push call add push push call add movl mov mov mov cmp jne mov inc mov test je cmp jne cmpb jne inc jmp cmp jbe inc cmpb ja cmpb je cmpb ja inc cmpb jne movl lea push call testb mov je movzwl push push push push call push call push call jmp mov mov mov mov pushl push call add ret mov pushl call add movl mov pop mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub push mov mov and xor not inc mov cmp je sub jmp movzwl mov lea mov push push inc inc cmp jne mov mov add mov mov mov add mov mov mov dec inc inc mov and jne mov inc mov mov cmp jbe mov add mov dec xor inc mov inc and test jne dec cmp jne mov add pushl push call test je add incl mov cmp jb mov cmp jae mov add add mov add movzwl mov lea mov mov add jmp xor pop pop pop mov pop ret int3 push mov push mov mov push call push mov push push push push push push push push push push push call mov cmpl jne xor jmp push mov push call mov push call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 imul movsb cmpsb dec inc mov sbb lea sub add out shll pop sti sub (bad) mov sub cmp vmwrite jmp (bad) repnz repz add xorl (bad) fnstcw sbb (bad) aam push mov test adc ret ret push arpl test lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or lods fdivrl inc xchg (bad) add out or rolb clc cmpsb ficoms mov lcall (bad) sub (bad) pop (bad) mov mov out lret jmp insb bound push js lea xlat orl jecxz mov and jmp mov andb xchg sub xor jno cmpl sti loope,pt arpl stos clc cld xorb rclb lods inc (bad) pop decb cmpb mov daa ljmp cmc sbb call mull or lock daa inc andl (bad) neg fsubr cmpb notl outsl push dec inc sbb adcb aam out mov sbb test dec jge xchg or stos sub subl ret lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl dec in out (bad) jg dec fcompl sbb mov mov lods and insl stc in add jne or shrl jbe jbe or jae cwtl xchg xor mov sbb push dec add imul adc fstl iret inc xchg sbb mov out repnz andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl hlt mov out push lods lock jnp movsl idivb into mov les mov inc sub jmp sarb addl int3 jne xor and dec sbb dec or stos mov mov sbbl out or cmp call stos dec inc loop inc stc sbb cmpsl (bad) fstps dec shlb pop incb in dec push aam xchg cmp xor enter jno lods sbbb aam jnp in sub jnp shrl mov xor push jae mov cmp lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl dec sbb xor add out test fadds les or dec movsl xor push push push je leave in lods jae out fadd mov pushf push dec jp xchg jmp sbb xchg xchg dec leave fstl lds inc loop jecxz les lahf inc mov xorl cs jno or lock inc adc push cwtl rcrb sub popa sub xchg cwtl or les jp sbb scas xchg add dec addl jns int3 fucomp sub arpl push sti in or xchg mov mov mov subl cmp test stos push andl jns inc dec add or mov jl (bad) lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl (bad) (bad) xchg fcompl pop mov popf icebp inc sbb testl out es mov lcall dec gs push sarb lret mov push jb jbe mov add test out mov popf ljmp mov mov rclb andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl loop jno xor sbb movsl xorl imul (bad) andl fwait out pop sub test jns lock push jns mov pandn imul rdtsc cs loope xor fs jp out test paddusw andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl jle mov sbb fildll movl xor xchg stos daa test push sbbl stos jnp lods cltd lcall inc lret dec cmpl xor sbb pop dec andb out stos add out out xor mov add andb pop xor sub aam addb repz shlb inc xor mov fwait inc xor jl lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl rcrl sbb rcrb mov jp cmp out jne cmp sbb sarb es div jne call push pushf jmp scas xor imul stc mov (bad) sbb inc jne pop outsb xchg je adc push xchg or and xor iret cmpsl popa inc mov in fnsave add rolb adc loope outsb lea and pop dec mov jge inc fadd cmc pop jne xchg cmc ljmp fistl or ucomiss incl incb int3 pop jno add pop or stos mov push stos test dec mov sub cmp addl addl imul sub inc andl adc loopne les addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl andb arpl (bad) xlat ljmp dec cli cmp xor push add loop jle jbe sbb stos inc mov (bad) lahf dec adc rcrl and sbb lcall pop test outsb sbb ret xlat jne inc test jl lahf mov cmp aaa and and adc jge daa mov adc ja mov out std dec inc mov sbb movsl cmpsb stos mov jle loope lcall int3 mov add lahf sahf inc aad cltd push push call mov fstps js std cmpsb mov cwtl (bad) enter adc aad pop movsl or int3 imul leave add or adc das xlat adcl loopne (bad) ficomps dec dec fwait out mov popf cmpl jl xor ljmp int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl add clc enter mov test lods jnp sbb inc (bad) addl enter mov and sub adc mov dec push mov inc sub lods sbb mov (bad) cld lcall push (bad) lret lcall sar sahf scas addb lret mov pop aaa mov jae jns lods pop pop ret nop int xor rolb inc addb sbb xchg inc sbbl xchg test mov cmp (bad) shl shl push aaa int3 cld cwtl fistl clc sti add add mov cwtl mov (bad) push (bad) insb mov push shl test into aam sbb movsb clc jo cld test mov test or mov add stos inc in imul fnstenv and fnstenv andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl sub cltd sub lock (bad) std aam sahf test roll push jg mov addr16 mov loope addb add xorl fmul pusha fdivrl aad sub jne enter icebp in sar pop adcb cmc pop xor lcall inc mov mov push adc je lret sub (bad) lcall sarl xor push pop and and cmp and dec pop aas into adc aaa xchg idivl xor arpl movsl aam cmp push scas jge sub repnz mov loope adc or push iret mov lods xorl sbb nop cwtl sbb xor std addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl sbb subl sahf inc xor lret mov fmul push (bad) lock jmp lcall andl addr16 pop int ss imul jns lds lods daa jle test enter dec pop insb stos pop or nop add fnstsw dec xorl mov inc test push ret pop popa jmp push hlt inc lret or mov jl cltd ret addb loope cmpsl in mov sbb test stos mov lea and xor inc sub fwait cmp hlt call or aad idiv jmp inc repnz jge,pn cltd fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl add or lods mov pop push or jns xor and mov and cmp lock fidivl adc outsb addl (bad) mov and repz pop popf cs hlt pop data16 or mov dec into push pop inc pop xor mov or xchg cmp sti sub lahf xor lds mov inc pushf cmp mov int flds fwait adc (bad) ja or sbbl test lea jnp movsb dec out dec (bad) mov cmp jp inc (bad) pop into add push dec loopne dec lock imul fistl jne xor jb push lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop fucomi xor push xorl test push shlb arpl fs sbb xor mov stos cmpb xchg mov aaa jl andl jmp xchg int dec sub or mov scas sbb jnp cmp int or scas sahf cmp leave and lahf ja fsubr mov dec out mov cmp daa je add pop pop sarb mov outsb pop or scas inc pop addb xor and test repz icebp and add notl mov jp adc xor int xor mov mov aaa adc add adc mov add fildll mov xor sarb pop and and je dec or int3 add cmp stc loopne mov sbb lret inc jp fnsave addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov sbb outsb push sub in fldl mov lret xor mov enter dec aas les mov fdiv push pusha shrb out pop add clc les push subl cs sbb jp mov loope mov pop cwtl or rorl test sahf xor sub add scas repz jb addl or cmc and cli sub mov stos int3 les mov mov ja loope test fstpl rorl (bad) movsb or sub nop js lea and (bad) das fistps pop fdivrl lods xchg jb and sub xor insl aas push xor insb addl push fcompl inc push out push fsubr push js adcb and sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl insb cwtl xchg orl dec testb jge dec or ret mov cmp into scas push jl mov or (bad) nop mov mov into es inc orl insb (bad) into push adc mov stos repz mov (bad) fs outsl cmpl addr16 add inc ror adc adc aaa outsb xchg andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl sbb push dec cmp inc or jne shrb test dec push gs subl (bad) cli lea push (bad) xchg mov enter push mov rorb sbbl int3 sbb arpl mov xor dec shll pop add test or fistps addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl adc les jae loop leave aaa sahf lcall popf jo rcrl leave xor sbb mov into insl sub mov mov out mov mov dec out rorb orb or jnp mov cwtl stos test push (bad) lcall mov outsb add lahf sbbl pop lcall daa jbe dec int and inc fisubs jle testl pop loop mov (bad) cli xorl divb or mov and sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl mov dec add (bad) xor add int3 aad pop int gs stc fcompl lea (bad) mov test xor cmp jns (bad) fbstp xchg xchg aad xchg imul cmpsb inc mov dec ffreep and jb fstps inc test in outsl or sub add out xor inc in dec xchg jns mov sbbb jnp (bad) andl add pusha xchg sbb mov mov inc mov in pop xchg adc fstpl sub movsl iret bound sarl push fildll dec out mov inc jmp pop lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl bound (bad) js mov rcrl adc sahf adc inc into pop in sbbl fwait out mov mov dec mov flds or lea movsb dec aad pop mov adc xor test addl cmp cwtl dec push cmpsb inc shl sahf fdiv cmp addb push mov adcl subl faddl sub leave xchg mov push frstor cmpsl out dec out cmpb lahf mov ds jnp sbb sbb cmpl lret mov jo and nop push sub jl mov icebp push orl adc insb fucomp orb nop adc addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl dec sbbl pop jbe inc int xor mov movl (bad) xchg jmp int3 xchg cmpsl les lcall stc push int3 lock inc push jae inc cmpsl les mov call test je xorl ret lods jae std fcmovu mov fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl out xor push fadd mov ret xchg mov mov shll enter (bad) pop cmp add shlb subl jle (bad) mov and xchg sbb ds dec (bad) push mov andl andl push fsubrl pop sbb jp pop in or push ljmp lcall xchg cmpsb out (bad) lock fcoml mov mov mov into scas dec lret test hlt lcall sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov sub jp aam or (bad) pop sarb dec insb dec lock (bad) enter movsl pop inc sub rcrl add lret negl and mov into xor pop loopne nop lea stos subl imul andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl inc test fs adc mov fiadds aam mov icebp aad xchg and and dec (bad) shll les shrb clc jmp loopne jg cltd cmp leave and les xchg add or test and pushf or jnp mov xlat cmp in shlb sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or and push xchg out nop subl cmpsb fistpll dec fisttpll xlat push shlb cltd lcall jns rcll jnp adcl aam sbb inc lea or lock jbe subl out mov jmp sbb fldenv (bad) (bad) ret (bad) (bad) sbb pop fildl xchg clc iret out xchg xchg aas xor sbb subl cmp test adcb adc jne stc fidivs addps addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl and adc shl daa test loopne call lcall lods sbbl test lea movsl xchg adcl push aaa hlt xchg orb int test lods cwtl (bad) fimull mov push cmp cmpb xchg mov fwait es or movl dec (bad) aad test roll loop fs shll mov or out addl xlat enter mov sarl sbbl ja addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pop pop sub push pop popf cli push mov sub clc (bad) nop cmp nop lock cmp jns dec in loop cmp hlt xor sbb lock xor ss mov sub cmp push add mov iret (bad) or cmp leave adc shlb xor push jle cmp fwait in add xchg adc ss push pop das arpl and mov fnsave cwtl add divb lock push minps sahf ret or xor gs int3 lock les adcl jo fcoml add lock xchg mov jle lock or or (bad) test das push jbe int3 push jecxz fs adcl add bnd mov int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or cmp pop or or je sub xorl lahf std sub inc xor (bad) or jo aaa (bad) xor push leave lea imul aas adc sbbl and mov ljmp and xor fwait (bad) cltd cld xor push mov and or xor xchg add xorb imul rorl xchg out imul popf xor push and shl dec sbb enter xorb (bad) and bswap jge mov jmp out lds stc xchg test push ljmp pcmpgtw ret loopne (bad) jge sbb jbe int3 sub lea stos cwtl fwait push stc ljmp cltd mov cwtl mov sbb adc jns rorb pop inc and lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl ret lcall xchg gs (bad) in cld lock xchg lea (bad) mov jg icebp loope or xor adcb loopne cmp in push xchg pop jnp xor and add stos int add popa adc mov adc out ss loopne int3 xchg push mov orl andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl fldl xchg mov call xchg mov cmc ret mov xchg loopne push dec fistps lock pop sub lock enter sub mov jle iret (bad) xchg adc push pop test adc xor pop outsl (bad) lock push ds cltd int3 xchg stos xor push adc add int sahf lret lock pushf mov fstenv sub inc sub nop loopne fistps int3 xor sbb mov (bad) roll xchg sub fs pop dec inc jo stos xor dec sbb gs dec loop pop sub cmpl mov inc fldenv pop jns nop push mov jle sub mov fidivl cmp jbe iret pop jae sbb fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl inc (bad) movsb cmpb insb push sub ja pop jae cmc xor mov cmpsl in sti cmp fmul dec cli cmp xorl cmp cwtl cmpb pop mov push dec int3 subl xlat cmp xchg sbb (bad) cli es aad pushf pop jg pop sub mov sub pop mov mov (bad) decb push cmp xor jl mov push inc lahf outsl jle mov mov movsl mov pop lcall test cmc mov je dec int cmp mov sahf cmpsb lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl add imul pop jge inc data16 roll daa cmpsb xor ficomps xchg jb addr16 jae cmpsb mov addr16 push adc (bad) jmp sbb cld je lret sbb and mov out jg aam mov leave popf inc dec pop fists repz mov jl cmpl dec addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov mov pop int sub mov push add cld mov scas (bad) mov fidivrs adc mov pushf mov cltd sbbl xor test mov ss xchg inc std scas adc addb xchg mov sbbb adc fists jnp sub pop std out shrl popa (bad) clc rclb movsl imulb cmp hlt aaa fsts push sub or or sbbl xchg rorb mov pop nop daa pop mov and xor int3 xchg ss or test mov jne xchg sub lea push inc into dec popf test cmc cmc movsb sub in andl int3 jmp jae mov outsb mov int3 fldenv add inc push inc fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl cltd jnp mov js in sbb xchg dec movsb mov cmpl mov mov add xor rorl pop add mov ret cmp mov ret addl loopne xchg xlat sahf test inc dec sub add out sbbl dec xchg shlb mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl push js push inc jmp andl sbb les test bswap movsb push and cltd jb add mov cs rcrb mov xchg (bad) fs mov push iret lea es cwtl dec scas mov push (bad) fisubrl xchg iret xor imull adc incl gs arpl cltd data16 gs ljmp stos mov iret in xchg iret xchg lock jns outsb stc int lret test or mov sahf dec jle xor addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl ror sbb pop orb andb cmpsb int mov push in hlt fldl push mov scas int3 andb fs jg (bad) and push mov in and mov scas pusha sti and push adc sub push icebp (bad) jge add pop lcall mov pop jbe gs stos ja test cmpsb addl sbb les and int add mov sar scas sbb lds call mov mov pop fwait cld inc pop or std pop cmpsb push js adc movsb dec cmc jle dec xchg push divl repnz es jecxz incl test incl sbb loop dec inc int dec iret pop rorb or adc sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adc inc int3 ret lea call pushf jp adc and cmp push hlt ja inc mov mov insl jge xchg pop faddl or (bad) xor and adc dec ret cmpl mov lods shrb fwait test jne dec xor popa jmp rorl aas pusha mov add mov icebp aas addl movsl lcall sti dec jge iret faddl aas pop or inc aaa lea sbb mov pop jb cmp out push cld jle lock mov xor pop cmp xlat stos sub insb fwait xor fxch add adc sbb lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl lods test repnz jo dec or sbb clc insb popl cmpb (bad) fsubp test fs test add test mov xchg fmull insl enter xor les cmpsb push fisubrs push jmp jbe and addl mov insl add adc sbb mov xchg leave inc cld out adc repnz iret mov xor xchg mov out out (bad) sbb andl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl out outsb and repnz add fstp mov sbb int3 loopne push out outsl inc in cmp add int fdivrs orb push push mov test inc in scas scas xchg mov std adc je or int and adc or popa sbb ja loope push dec addl push add pop pop das jp inc jbe es cmpsb dec jl or faddl xchg inc mov or inc push add cmc dec shlb andl push rolb mov test cwtl mov push push sbb cmpsl loop int3 push push cmc nop cltd and fsubl jmp xor sbb mov notb loop add add cmpsl repnz sbb mov sbb fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl das jne mov insb shl push sbb les mov ds and ljmp mov xchg ds sbb sahf lock shrl adc leave mov in das xchg cmp stc xor inc cli jae int and dec rol cs cmp sbbl sub in adc insl int3 enter or add cld inc jne jbe rclb push sbb push call fcoml mov or xor or adc dec adc lock cwtl push shrl jbe jnp shrl xchg mov jo in mov pop mov mov fisttpll andl lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl outsl or sbb int filds sbb test test mov movl sahf mov nop mov ds mov cmp or stos xchg mov push jbe stos in movsl sbb addr16 test mov sub pop faddp sub add xor ljmp pushf es jbe stos mov push stos leave jno jbe mov or iret sbb dec mov push fisttps mov fs mov dec mov movl jl addr16 cmpsb lods add xchg enter pop aaa movsb pop and jbe out popa dec push cmp mov mov andl negl sub push stos mov roll push mov and in fwait (bad) mov popf pop cltd lea jg or jae and pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl inc add push and xor cld in js (bad) xor test rcrl aas ficomps icebp jge cld xor lods lds add je lea shlb sbbl scas rorl clc mov int int3 push pushf loopne cld stos in jb push cmp andb fisttps fs and test xchg jne mov xchg mov subl and in call xchg inc inc pop jecxz int3 sbb xor out cmc and andl inc fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl arpl stc orl icebp hlt imul loope adc subb or fists xor cwtl adc into xlat enter ds push stos fmull jnp iret and cmpsl or or leave pop scas lea fwait int mov loope sbb xchg lea add bound into xor mov test popa pop shll xchg adc push out jnp arpl dec inc cmpl mov and fnstsw jne sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov mov mov cmp lock subl xchg out lea fldl fwait sti (bad) (bad) fisttpll push lea push rep xchg xor dec xorb cmp mov cs xor enter mov xchg jnp xchg test fcompl nop (bad) cmp mov mov add cld sub pop subb dec testb cmp pusha jge movsl adc and cmovno int3 pushf (bad) pop sbb clc sarb clc jp lea iret popf add aaa jle xor arpl dec hlt sub xchg lcall dec sbb adc addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl cmp cwtl int3 cltd xor shl mov out lods add adc lahf cmp jnp cld or mov pop jge (bad) je sahf nopl je out lcall movsl lahf pop xchg and popf dec sti popf mov mov cs fwait shrb fcoms bound popa xchg ret outsb cmc and outsl mov adcb cs push pop fbld xchg dec jp push out scas jl popf insl arpl mov xor cmp adc and bound push ret test incl xchg nop lock pop cmpl cld fsubr addl pop add mov neg sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl pop out fld xchg jle std in mov sbb fcomip int shlb sbb or andb out xorl sbb and pusha jb push int3 cmpsb pop ret movsl mov sub ret loop cld mov je push incb nop dec sahf int mov pop decb xorl sbb fcmovnbe xor and cmp cmp repnz movsl xchg mov pmullw pop push fwait scas fistl pop add push mov scas xor adcl mov in mov xchg xor int sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl int3 in test mov int3 or ljmp int jns stos adcl pusha cmp push jb enter mov adc fidivl lea addb in ret mov mov bound int (bad) fnstcw cld jo lret mov addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl int out jmp mov mov adc or xchg movsb sbb or inc cmpsl nop inc addb xchg mov inc cmpsl aad bound dec call or and sbb aad dec pusha mov or mov sbb hlt je add mov cwtl das and xchg mov in adc xchg pop lock (bad) (bad) sbb mov xlat int3 ljmp lahf andl addl addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl ja pop bnd je enter or xorl sahf in mov jb mov and xchg rcrb ret sbb pop pusha mov dec dec loopne pop mov int3 cld xchg lcall int jbe pop stos xchg in bound fsubl aam or add (bad) pop add push nop (bad) and inc ret out filds or push mov mov fistpll dec fstl shl subl mov pop addr16 sub (bad) outsl jno add ret lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl in in sbb push into fisttpll and insb adc inc and call sahf and sbb inc ret call mov adcl loop jb je fbstp int3 jge push mov fadd and mov pop cmp push (bad) int lea pop (bad) sub stos sub inc testb push insb ret fcomip aam mov push bound in pop or jecxz add mov jnp mov in movsl xor cmpsl rolb pop scas in sbb or lea fcmovu movsb mov sbb adc pop leave andl bound pusha test (bad) cli fs dec xchg mov orl (bad) cld scas or into (bad) lds cmp mov mov cmp sbb addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl inc xor xchg daa movsl ljmp and and (bad) in clc or lret xchg lds adcb jbe les jle xchg hlt mov mov dec adc mov mov int or movsl mov add movsb jl cmpl cmp xor xchg sbb rol mov movsb push aam push jne iret mov adc mov call rcrl cmp mov and test pop scas sbbb sbb sbb mov pop cli arpl jp push pop ljmp dec and lcall (bad) xor xor incb jne sub gs out addr16 push sub je pop cmpl nop pop xor fsubrl int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmp int3 mov sbbl outsb andl lret leave lcall xchg std add out lret fists mov nop adcl out sbb push repnz xor fisttpll cli loop (bad) cli push mov mov movsl stos incl (bad) aam fistps iret push sbb xchg lock decb cmp pop aad pop mov and call mov push sbb lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl shll leave dec mov cmp test and mov orl jecxz fnsave insl mov mov push jle subl push or mov lods push fldl movsb mov mov cltd mov inc popf cmpsl xchg js mov sub in lds and test lahf sbbl lcall or mov das addr16 in aaa test cmp mov mov inc cltd in adc lret fsts inc cld rcrb add pop cmp jae loope clc in and scas inc pop jge add lock bound cwtl adc mov or xlat sbb and scas ljmp addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xchg ficompl popf and aam push cmp mov enter fistps xor sbb mov push movsb mov ffree inc pop in mov stos cmp xorl mov and push xchg pop push inc xchg ljmp mov mov and and cmp test jb ljmp cld gs and int fbstp adc and test dec cmpl push testb orb sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmp mov outsb xor mov testb (bad) sub mov push enter addr16 inc sub andl loope cmp lods push mov popf xchg jmp sbbl icebp push xchg and loope sub arpl hlt or stos jno fs sub adc sahf insl mov ja push mov dec (bad) sub adc out imul xor xchg mov stos push push push jae and cmp insb cmc xchg xchg imul jle std inc lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl shrb adc orl scas gs xchg mov popf pop and fldl sub push out sarl pushf and (bad) (bad) sub jns inc push inc fisttpll sbbl mov fnstsw fisubl add (bad) cmp mov cli xrelease shl fdivs or jo add mov push pusha lea int (bad) insl cli or sbb jecxz call test iret movb mov sub xchg jl fcoms cmp loop int3 sti pop cld icebp xor mov mov push in xchg aas lret lret stos dec (bad) push call adc stc xchg mov xchg loop movsb ljmp adc pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov cld jmp jnp mov adc mov jbe and cmc mul mov aas xchg xchg mov and aas sbb sub adcl sub jb cmp fwait cwtl lock mov ret sar xor add mov mov int int jmp mov jae fstpl ja enter xchg mov sahf cmp pcmpeqw or pop cld pushl push cmp mov subl sbb inc lock or popf movsl scas push out sub sub mov gs add cmp insb addb mov mov lods pop sbbl add mov int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adc and das jns les cmc sub mov int3 xor push dec jp xor out jge cmpl lds test icebp pop sbbb and repz sbb cs push cmc mov movsb jle xor lahf test loope mov sbb (bad) out sbb pusha xchg in aad and dec stc jb out inc mov adc dec int xlat push pop test sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl rcrb mov aam jns cmc test filds mov or int3 mov push aam les std fidivrl sub jnp add pop and roll rorb jge sti sub inc fnstsw jecxz fstl inc pop stos inc bnd xchg imul stos mov cmpsl int pusha adc movsb mov and xchg int3 mov push mov enter data16 adcl (bad) cld jmp cmp lods jl dec int enter subl jle inc frstor cmpl shll int3 into (bad) test aam repz pop xlat aad mov push int insb leave int ljmp jbe imul inc and adc mov pop dec xorl and add pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl lea out jb clc loop xor aam jge add sbb cltd lock sbbb dec int inc int jo cmp test rolb rorl int3 inc lret stos rcrb hlt pusha testb mov inc cld pop rorl addb test pop adc xchg (bad) xor mov imul imul fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xor xor in andl sub mov jns jae mov int sti in loope jg test mov int test xor xlat mov addl leave aad xchg outsl (bad) add mov enter int and cld pusha or ds adc jns (bad) mov and daa mov mov cltd or fsubl push aad xchg add cmc outsb icebp dec int3 xorb fistl adc mov mov out mov stos icebp negb xor mov sbb stos inc jb add or icebp outsl lea mov xchg sub sbb pop cmc cmp lret repz xor or cli jecxz and in std xchg addr16 (bad) cwtl pop xchg hlt arpl cmpl addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl int3 inc adc test ret xchg dec gs lret xor push mov hlt (bad) outsb int leave rcrb sub mov dec sub or int3 scas int3 test mov mov (bad) pop jecxz mov push lods cld xchg orl cltd dec dec rcll ljmp push ja neg xchg and add stc insb xor shl (bad) loop xor mov dec inc sub xor xchg inc mov sbb addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl movsl sbb orl adc push xchg fildl enter and and aad cwtl mov push test dec dec and dec out cmp js ror sbb inc cmp inc jnp cmpsl (bad) clc and shrb int jb in jnp rorl ds hlt mov fwait xchg mov iret cmp push test cltd enter repz aam addl pop and into shrb lahf outsl fisttpl sub rcrb subl aas jmp rorl mov clc addl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl ja cmpl add or sbb lahf pop stos popf cmpb out inc cmpsl fimuls push jle xlat pop fsubrs vpcmpeqw repnz or xor dec cmpsl inc pop xor dec orb test mov int jbe imul rorl adcb or push mov cmp xor dec cwtl scas sbb mov addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl ljmp jge cmp and adc scas enter out bound or xor (bad) fistps insb (bad) ret sti rolb inc inc mov (bad) jge mov fstl bound orb pop nop int3 add xchg jo pop add push mov or adc andb popa popf stos fldcw and inc popf dec lea xchg mov test push int3 fsub ret fs mov or adc jb xchg cld andl loop and rcrb lret cmpb ret (bad) push aas fsubl pop push ret fisttpll aad inc cmp fcompl mov arpl adc mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl dec (bad) adc (bad) pop mov fiaddl push mov orl (bad) and cmpsb sbb fwait addl loop sbbl repz les add scas out push xor adcl push xchg in icebp sub (bad) mov subl mov xchg int sub xor xor addl movsl divl popf fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl int lock cmp imul pusha mov push movsl int3 inc adc inc bound ret adc mov ljmp out add test lahf push loope out in push or test sub lahf xchg sbb mov imul add stos repnz jmp (bad) mov cwtl mov lods and and cwtl (bad) xlat sbb (bad) dec shrb movsl fdivrl call mov add in scas fistps xlat orb push mov arpl mov outsb mov cmc jge out fmull or call loope andb mov sarl sub int3 ret lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl repz je dec fcoml or dec leave push and std call sub jg nop xor jns cwtl xor jns and lea fistpll push jne (bad) sti push cli jle hlt sbb aas inc lods ficoml insl fdiv xor mov orb outsb orl (bad) data16 push enter adc add lods adcl pop adc mov loopne test and xchg bound (bad) jbe push sub (bad) jae push fldl sahf jbe addl addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl test sub icebp sub jge shrl aam rol jecxz rcll mov or mov mov jmp lods pusha mov add aam mov addb push xchg sti scas adc and xlat addl sub shll xrelease adcb push mov cld in adc xchg pop xor and int roll mov sbb int3 sbb pop sbb scas mov push aam lock in xor rcrb jno inc mov aas push jmp dec and or xor aam and movl xchg sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl into test push out add sub cmp repz movsl aad and stos int lret andl ret aaa test cs push cmp insb int cli sub jle sbb jo push int mov (bad) mov add xor mov pop aam fiadds andl pop mov icebp inc inc push jge sbb dec adc stos lods mov adc bound movsl xchg int std add jmp (bad) cmpsl orb add int3 xchg sbb mov sbb shll xor xorl adc out xchg xor outsb scas orb mov pop int xor mov push lret jecxz adc cmp in lea addb fldl mov lea lea sahf lea sbb sahf addl int3 int3 int3 int3 int3 int3 adc cmp aam aaa popf ds stos pop inc mov push mov fisubrs test xor loopne jns jge andl xor fmuls mov sub iret jnp andb jo cwtl and jae sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov ss sti fsubrs ds jl addl cmp mov dec jmp mov shlb mov roll cltd data16 push inc jle test ds sub mov jl xor jge,pt ss pop add mov aas xor mov loopne leave popa addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl lea insl jae fcmovnu sbb add aaa xchg adc int sahf enter adc adc xorl imul fistl insl call or in ret insb mov mov mov dec fisttpll jnp dec xor mov push jge test lds sub int3 mov xrelease xchg and push lods xorl jns push loop dec imulb test dec fstpt stos enter cwtl adc mov fwait lods lods leave xor and lcall mov sub (bad) jl jae leave mov push ror cmp cli shll jne push or jle sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl lahf add das or lea insb mov int cmpb push test mov stc jmp out sub (bad) out add jl or inc mov decb sbb aam mov fistpl inc out jns in sbbl orb hlt adc ret jmp push inc je mov xchg add mov in lea add lcall xor jge xchg adc xor cld cwtl cld xchg test imul (bad) xchg push xchg jmp out mov mov lcall xor or sub push xchg bound dec rorb addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov insb inc jne in inc movsl add mov xchg jp insb mov dec xor xchg mov jns pop loope stos mov xchg pushf outsl sbb sarl arpl subl sub sahf pop and jl cmpsl icebp movsb cmp subl xchg mov sbb dec adc push mov fsub dec mov xchg jb data16 cli stc mov or in jg mov or and andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl popl fsubrs push jae mov cmp inc mov cwtl and int iret push push mov or jbe dec xlat fcom std (bad) or cmp mov test xchg imul push push dec jle lahf ljmp jnp jb jb fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl enter icebp cli jns pushf and inc popa adc sub pop or in (bad) jmp push pusha notl fwait jge and orl fisubrs outsb mov pop xor inc out inc pop inc movsl cltd aaa loop aad mov repnz jns test stos aas leave push xor andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl call outsb sub or loope pop xor fcmovnu and fimull jnp mov xchg xchg mov cmp insl test mov sahf or sub mov mov push inc and jge (bad) lcall push push int cmp add push iret mov out pop cmp out xchg int addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl lds cs scas movb fwait inc aaa fwait adcl loop sbb fst mov rclb adc cmp jb (bad) xchg xor pushf pop jle fucomp inc adc lcall fsubl jg (bad) mov push mov sbb sbb mov pop push cmc decb lret (bad) xor stos rorl jl cmc xlat mov cmpsb mov test ret pusha add sub shl in subb xor les xor push xorl jnp pop fs push inc shlb add mov mov cld jge pop dec xchg addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl (bad) jmp mov sahf jo orl xor dec nop lcall cmpsl stos push push lcall sarl pop dec mov mov lcall fs add ljmp cmpsl sbb shrb frstor scas aaa std daa and mov pop test repz add scas or (bad) adc data16 mov adc jle jae cmc stos loope stc mov inc inc movsl sbb push lcall dec jp lret inc cld out stos dec cmpsb lret sub iret test gs sbb std std sub sub fiaddl rolb xchg std mov mov (bad) stc orl mov rclb pushf xchg lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop cmp adc fcmove cmc and (bad) sub imul push (bad) (bad) push dec popa insl int3 aam lea and add mov sub mov fcompl jb je cmc mov in xor into stc daa mov int mov ret pop lea add mov into adc ljmp sub scas loopne xchg mov mov sti sbb cmc lea dec push outsb (bad) stc pop xor xor fsubl (bad) faddl jmp sub xor pop xchg mov adc ret jmp (bad) cmp out sbb sbb adcb cmc jmp rcr and lret repnz icebp push add mov jmp addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl cwtl decb test mov lods cmpsl push inc lcall (bad) sub andb shr outsb xchg push rolb xchg xchg sub pushf cld jno add out xor cltd roll rcl test jp jge sbb mov xchg iret lock lret arpl jb fisttps outsb aad fxch sbb xchg pop xlat sub sub jecxz dec repnz fcoms xor shll lds cmp leave fbstp mov adc fsubp cmp adc xchg inc subb movsl or and scas out scas add addl xor jle dec call mov shlb inc mov daa cmp cwtl enter or mov or lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xor xor cwtl andl push mov push andl add xor pop mov xor mov push push repz clc mov nop je sub mov xchg sub pusha jbe push cld cwtl idiv (bad) int3 js mov pop inc loope ss push push rorl adc mov rcrb ret cmp sub mov lods sbb out lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jno ljmp out jmp adc fstl adc in mov sbb mov repz iret add mov aaa pop dec add add or in arpl call fidivrl sbb stos test (bad) into mov sbb movsb fs jo dec aad mov mov mov add push cld xor sbb jle xchg stos sub out push mov mov ja or adc jge int add adc add loope shl gs out lea adcl jo xchg xchg push cmp cwtl (bad) test sbb pop push std lods add cld adc lods fsubl int cli mov jmp icebp add enter addr16 sub inc jecxz orl fcoms inc pushf addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl pusha dec loop sbb stos dec scas movsl pusha push inc arpl lds jl sub jns mov dec bound pop sbb push sbb icebp dec jbe inc movsb push sti mov inc repnz or repnz lock jnp xor jae adc xor mov (bad) xchg mov sbb sahf or movsl jge popa push out pop pusha popf ljmp cld out cmp int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl add lds lds je mov sahf pop jge stos sub daa dec aad lods adc pop xor adc jge icebp in fmuls pop cmp lahf sbb sbb add outsb pop push jle (bad) adc mov sub fnsave add pop add xor imul pop cmpb std test or sbb and push lock jmp fs inc mov movsl xchg cwtl aas test fbld pop fldenv stos add sub add mov jbe fnstsw lock das adc in mov sbb pop dec cwtl xchg mov fcomip jbe mov stos jl leave jge in and ja jmp dec pop or xchg xor pop imul stos out cmp xor sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jecxz bound mov cs popf jg push orb inc test mov in fldenv add xchg or push jge mov mov mov xchg mov sbb ds arpl cs adc sbb ret stos mov add call adc clc xchg ret hlt iret sbb loopne test cs mov mov shrl inc scas addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl orb imul xchg in mov loopne movsb (bad) test cmp je cli sbb ss or mov add add add es fldl dec sbbl mov and adc out rcll mov lea push adc mov ret addl (bad) adc xchg frstor addb jae mov enter cmp xor adc mov lock aad orl cmpsl pop push stos mov cmp (bad) fmull ljmp test popf scas lcall sbb dec cmp cs pop shl mov sub ret add int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl sbb dec cmpsl stc mov push gs pop push dec jl and arpl sub xor js sub push jge dec and adc jle cmp (bad) lea jecxz pop lahf dec mov test sub in jl int movsb adc lds xorl nop movsb add fstl sarl xchg (bad) rcrl repz mov adc mov (bad) dec add or jo sbb out mov xor in mov inc es sbb mov push hlt shrb mov cltd daa mov xchg mov addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl sbb xchg mov xorl xchg scas or lds jb jbe jl popf pop les pop pop sahf mov movsl (bad) push scas test popa mov add inc insl push pop jle fwait rolb testb hlt in mov testl cs ret cmp add stc and sub mov fcompl out cld in insb std test sub clc jo xchg mov aad (bad) jp out push repz xchg xchg sti (bad) hlt inc push xor mov mov inc sbb mov lock dec (bad) jnp aad shrb mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov push and rorl jle mov pusha jbe insb push loop addb icebp inc dec add and mov and xor stc loope into push sub fwait add jo mov cwtl push mov imul psubq add jae pop lahf xchg jnp or enter push sub mov inc movsb jns aaa sub or sub jle mov dec mov pop mov (bad) lcall pop in push rcr mov repnz jb insb hlt lcall push iret dec les jnp mov sbb bound sbb int3 mov out push dec mov mov insl xor aam sub (bad) call out mov movb cltd dec fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adcl clc test test push jp and outsl int3 aas aas stc xchg jge lret push xchg or addr16 fucom mov popf enter fstpl sub in insl movl cmc and cpuid inc dec cltd mov int jns stos (bad) rol jecxz xchg shlb imul mov inc mov pop dec xlat popf (bad) daa fldt xchg jns (bad) adc xchg xchg mov sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl inc inc dec and std mov pop fwait add push mov orl imul push cmpsb leave sbb in cmp sbb lret sub push andb test dec pop negl lea ret mov test inc sbb sbb call adc dec push in test data16 andl inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl in xor cvtps2pi cmp insl push jnp push sahf in sub add jle sbb mov ret xlat adc nop push push pop cmp adc lahf cld insb pop and jecxz mov cli aaa sub mov sahf hlt push lock xchg push inc (bad) roll push (bad) xor mov std inc mov add jne inc nop idiv out mov mov insl xchg mul add sub push (bad) jg sbb mov int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl and push xchg pop int xor fisttpl pusha test lds lcall cs jp dec jecxz orl sbb mov test (bad) mov scas push xorl subb jnp les mov mov jo or mov sub xor or sahf sti mov xchg bound in jecxz pop int3 mov int add cli mov mov mov xor adc cld or lock es jmp into push loope (bad) fisttps lds inc mov sbb stos mov rorb hlt (bad) in cmc mov cld js fstps add adc xor sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl shl les jne cs inc mov jns out imul aas mov sbb jnp push sbbb mov or cmc nop sbb push xchg sbb mov bound repnz clc and orl pop cli rcll or lret lahf xchg inc xchg andb xchg mov movsl imul mov hlt test add xor add enter popa rol int (bad) notb lret int pop add push dec testb (bad) addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl std flds hlt xchg leave cltd jne negl in pop inc mov test aas pop xchg mov and (bad) arpl test sub scas pusha jle pop jne mov fsubrl sub mov xchg iret mov mov mov mov in jg repnz sub lret pusha leave fisubrl xchg xor aaa loopne loope lret movsl popa popa rcll sahf inc aam fcomps pop arpl push test pop adc cmp (bad) jg testb sti push mov push (bad) call test icebp (bad) sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl inc pop in or lock mov jnp popa adc jl mov (bad) adc xchg fnstsw pop jle scas mov (bad) insl in test pushf sub cmp stos popf iret xchg adc in jo adc ss mov (bad) stos lds ret cwtl orb (bad) mov inc cmpb cmp cltd jge shll mov pop rcll mov pop inc add ret mov enter (bad) xchg xchg cltd test aad lcall arpl nop sahf and mov das fmul inc jb aas mov adc push test addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl jge dec and jbe testl call xchg sub shr nop aam rclb or xor orl faddl lock xor xor cmp mov int hlt shrl mov nop dec pop sub outsb aas xor xchg leave add jp int cld imul ret ss jle inc xchg or je jae mov xor sub sbb xchg shr inc push jbe in or pop ds mov xor je sbb push out mov lcall fisttpl push push pop cltd (bad) push or movsb push (bad) jbe movsl adc dec daa xchg in loopne adc mov mov sbb iret paddb pusha jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov jge cmp test cs das cmpsl icebp fidivs stc inc test pop popa lea out sahf sti push das cltd popa adc xchg int3 lds dec call test popa or mov pop jge outsb sarl dec pusha movsb cmp pop pop mov push ret popf hlt fwait xchg shlb inc xor (bad) pop push stos jge aas xlat sahf setl les aam popa mov jae ficomps lcall adc jb or sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xor rolb or jb add nop lret fwait mov jmp js sahf pop repnz aam push (bad) sbb pop dec imul je lock xchg addl sbb mov movsl fstl iret mov jl mov sarb push and movl andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl push jge shl test lret sbb push call addl test sahf fldl or mov pop loopne mov jo fs lahf cmp cmpsl int test fisttpl rcrb iret stos inc or (bad) cmpb dec int push push fisttpll loopne dec ret xorb and push loope sub lcall scas or stos lock cmpsl and sub fisubl sub imul popa sahf push adc push addb or pop adc lods roll cwtl sbb ret lcall mov sbb cmp shlb sbbb mov or movsb (bad) jmp cs and addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl lret (bad) outsl xchg fnstenv lea scas iret mov ret dec ds adc xchg jnp xor cmp nop shlb mov add xlat aad jp js loopne add pop mov nop jne mov add push xor dec loop mov ret jmp mov sbbl mov daa call call mov pop push addl mov test lret sub les add loopne pop inc arpl jne jle xchg pop nop dec movl int3 jge jne sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl nop (bad) popf test ret insl add push repnz or push pop int lock adc xorl loop in stos idivb loopne lea addr16 xchg and xchg out push lret notl add cmp pop jp cmpsl inc pcmpeqb mov hlt stc sbb mov add sti sarb fcmovnbe mov xor stos mov out idivb xchg xchg or mov shr (bad) or aam lods inc loop inc adc xor xchg add xor (bad) jno mov movsl pop xchg xchg inc adc mov dec cmc outsl sbb std out movsl movsl fisttpl int3 stos lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl push dec cmpl mov (bad) mov fsubl push ret into lahf xor pop fwait in jmp dec je mov outsl pop xor rclb movsb movsb push frstor enter add movsl sub test hlt loope subb add pop xor push xor jg fdiv ljmp push mov adc adc stc sahf sub xor flds jne push call in fs mov (bad) filds addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl push mov outsl out aas dec pmaddwd mov (bad) les mov mov int xchg lods orl rorl mov rcr add out data16 lret xor faddl imul lahf pop xor movsl inc mov sahf sub mov inc mov (bad) fmull inc jecxz push into push dec xchg data16 lods fstps adc imul in sbb repnz push mov mov xchg es inc xor negb ret mov orl addl cmp jno jp fldl adc movsl int3 addl frstor lock popf mov push adcb fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl and add xchg es xchg xor dec cmp cwtl ljmp addb mov jl lds orl mov inc loopne sbb xor fwait add out cmp out xorl leave mov and int or dec adc loop cltd mov mov enter and popl sub mov mov inc and ret rorb addl xorb xchg fsubl xor int arpl inc xchg lahf lods imul dec add add dec dec push inc (bad) mov aam outsl (bad) sahf pop js nop jae je movsl mov mov out sbb mov pop movsb xorb pop push sbb cmp and mov jmp js lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl or int3 mov iret mov int3 jno in sbb icebp xchg out (bad) pop jge js push out test stc cmp push popf mov push inc clc mov mov push stos sbb sbb jmp mov mov fldcw aaa fidivs sbb outsl mov mov add lea nop cli adcl ljmp pop adc mov and (bad) xor pop cmp xor cmpsb push data16 adc pop adc in mov lock movsb jp adc out push dec or and jl pusha or ret insb lods es movsl xchg dec orl addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl (bad) sub (bad) test int cmp fmuls fisubrs loopne add sub hlt mov mov in mov mov jnp roll in xor (bad) xlat or cmp mov pop xchg adc sub cld push les (bad) adc dec ljmp ret dec pop push mov shll xorb stos sbbb stc sbbl shlb fwait cwtl and xchg mov mov jbe xor andl dec lret in push pusha test fnstenv add int3 dec clc sbb pop imul icebp mov sbb jbe jge fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xor ror out pusha (bad) insl xchg movsb fsubs rclb xchg push jp loope es and jecxz lea call jmp mov mov das xorl js push mov outsl jge xchg enter mov lods leave push xor dec pusha and fwait stos cli stc xchg push js cli sbb pop loopne outsb inc icebp scas daa inc int rclb mov out fwait cmp sahf cmpsl leave adc jle (bad) aam adc test in cmp lods push and pop test test subl or or les shll or bswap test and leave push ret movsl lahf outsb lock or addl jle rorl jne sti das sbb inc adc out inc fwait lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xchg adc mov mov dec inc lea mov loop das cmpsl aam cmp jno lock lock mov mov sub jnp loopne addl mov xchg into mov test mov frstor sti xchg cmpl imulb inc mov lods mov movsl xchg adc scas cmpsl icebp test stos js (bad) and xchg push adc mov sarl leave mov dec lock test mov stc xor or and roll add (bad) sub dec (bad) stc add adcl call pop mov cmc xor loopne aam addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl scas jo ret stc jne sub movsl jecxz add cmpsb js pop push dec push xor fs sub ja jp or loop (bad) xchg cli in sbb inc sahf (bad) out (bad) xor lock push sub mov cmpsl mov enter push mov add neg adc frstor mov push int push imul enter xchg jnp outsw lahf inc jo aam fisubrs mov fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl subl xchg and pop imul push mov xchg jge cmp lret imul mov and and lea ret dec pop dec pop test add pop sbb hlt shrb xchg xchg test in int3 dec (bad) mov pop push stc pop and enter into add jl addl mov sti jp sbb jle test out repz mov push lds cli icebp rclb sub ljmp cmp cmpsl addr16 ficoms jle das jnp testl icebp add pop mov hlt xchg and arpl hlt and lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl fwait xchg cmp repnz and xor xor enter cwtl jb int3 xor imull sti xor (bad) adcl sahf add xchg xchg outsb (bad) xlat insb sub pop ror fwait sub xorb sub out jmp or and xchg jae fnstcw mov call ficomps arpl cli sbb popa push out cltd arpl ret mov shr lret xor addb fstpl int3 int3 int3 int3 int3 int3 int3 fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl into cmp lock and arpl fdiv fidivrl push mov mov cmp pusha pushf jle mov lds scas lret call sub enter aaa mov xchg les or pop aam stos push cs xchg mov add push xor cmp push sti cmp cmc mov mov sub aam cmp je mov sub stos mov in adc xchg gs xor (bad) adc pop sbb cmp mov xor sbb stc andb cmp xor pusha ljmp push loopne repz add rol fnstenv mov mov jns xorb bound ljmp lahf lret fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbbl fcmovb bnd inc stc les lock adcl and mov and loop or and bswap movsb (bad) mov pusha fidivrs add sbb push test into dec jg xchg and test mov jle dec (bad) xlat cmpsl jg aam adc and loop push push xorl int3 push cld inc (bad) mov or (bad) out (bad) aad sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov cmp jg aam push and push adc adc pop sahf add bound (bad) movsl in adc cwtl jbe rcr jbe imul je mov sahf stos outsb addr16 jne cmp cmpsl mov loopne adc mov int insb mov add and js clc daa in les shll (bad) adc cwtl mov xor lods imul les scas xor mov popf roll jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov xor cwtl insl xor push mov push cmp mov sbb cmp gs sti mov addr16 in mov or rcr lcall inc xchg push and (bad) xchg mov mov sbb loope adc sbb out cld sbb xchg stos mov mov mov jge mov fnstcw sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl jb pop data16 lods repnz mov jge ss stos push jb icebp jnp push loope jle aaa mov (bad) sti arpl fldenv insb adc or popf sbb pop int3 test lds push xor call enter imul add push mov movsb fwait loop daa call call aam shrl xchg add push push dec add mov mov jne mov mov jl aad insl dec ja orb (bad) cmc sub xor and jb popa movsl add mov stos push or xor clc out iret and push xorl push or cmpsl push adc out lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cmp sti movsb mov stc cwtl mov jge int3 push orl mov (bad) cmp mov dec jo pushf (bad) hlt sub mov aaa mov jle and dec aad stos push sbb (bad) mov xchg ss mov push data16 adc (bad) rolb pop out xorb dec or orl sub xor cmp mov movzwl or std mov xor scas lret push mov push sbb mov ds (bad) fnsave sub mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov mov into pop xorl icebp subl lret mov stos insb mov in sti orl cmc aad out xor popf fbstp in scas fmull in adc cmp scas pop movsl adc dec ss mov mov sub nop xchg ret inc enter fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adc nop ljmp adcb hlt jno add jo cwtl jmp ret jle repnz and xchg fcmove hlt push fwait mov scas and push sbb jp in hlt xchg sbb pop sbb mov pop dec loopne rclb mov insl nop sbb xchg out xchg loope andl jge repnz xor fisttpl sahf dec or aam inc (bad) mov aas movsl add sbb sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl andb push inc mov xor iret cmp jecxz push sbb push or ss enter lods mov push fwait xchg mov push push jns sub test dec xchg inc cmp cwtl stc (bad) mov push mov add and sub fldt int cmc repnz mov jo repnz imul stc cltd sub nop sub sub mov mov sbb add aam ret fs cwtl call jmp jle push mull notl cwtl add and std pop das dec loopne js sub xor addl inc inc fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl (bad) pop lea mov xor jbe sbb jbe ss stc push pop jno das push and mov aaa adc jne jg xchg insl sbbb jne das mov mov adc addl test mov gs inc iret rcll lret mov ret fisubl test xor aad and jp mov loope jno cmovb jge push subb cmp mov inc jae ja jge loope inc jle,pn inc inc nop mov std stos test gs into (bad) enter sub sbb lds xchg jb sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sbb and mov ficompl jle mov jbe (bad) sbb jbe outsb and shrl push or pop lods repnz sbb adc rorb or leave lods sbb adc std repz mov jle sahf rorb pushf pop into and mov mov loop aam dec sbb sbb inc sub int3 jg lret aaa rcr popa mov movsb mov mov dec in stos mov pop lret push mov add movsb jno cmc mov pop cmp pop insb mov aaa outsb int cltd int div sub int in insl test daa out aad cmp and add js (bad) dec stc dec cltd mov fimuls iret clc sub fdivrl orl and outsb subl mov int3 (bad) push or (bad) dec lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl into fstl lret mov xchg dec dec push icebp jp enter arpl inc jo pop jge rorl out push sahf cmpsl nop sahf and mov bound mov sbb xchg (bad) lock rcrb push dec insb xor pop jnp mov mov into aas shll rol clc aad cmpl cmp push xchg adc and xchg mov test rclb jne scas or jecxz into cmp mov enter sbb decl fidivl mov dec jmp je iret (bad) fstps repnz mov push sbb (bad) pusha jge daa pop pushl cli mov mov test xlat adc lea xor ret (bad) xor outsb jnp (bad) out addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl out scas push movsl arpl mov scas and pop jne movsl or dec ljmp movsb xor inc inc mov shlb sbb aas sbb xchg pushf dec testl repz jne and leave hlt xor pusha dec dec inc inc push lea aas test mov pushf xchg mov or inc xchg leave fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl inc pop mov jmp mov out inc sbb fnstcw mov add jmp psubsb jge andb data16 mov imul mov in jg loope inc mov mov mov adc jae push stos jge dec and xchg repz sbb jo cltd stc loop mov call lock int addl push dec lea addr16 lret add pop inc pop mov outsb push cli mov xor (bad) mov inc es call sbb aas cmp inc add fildl loopne scas cmp add cmp mov les sub icebp shlb xor xchg mov lret call push inc or addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov in jge dec mov jle aaa push adc push adc out fistps push xchg or dec dec xchg test frstor and ljmp push adc xchg jne in sarl fdivl shl inc or pop or xor xchg icebp mov sub pop xrelease add sbb lea mov sbb dec adc or mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov dec jbe pop movsl ffree xor enter xchg dec addr16 out add aad mov out cwtl cmc pop lds xlat call jge test sub mov dec hlt (bad) mov push lret out mov in push cld adc add sub pop int clc push mov iret popa push mov mov lcall sarb mov aam loope sbb ficoms xor mov out in imul shrb jge push mov sbb jae sub jge push dec pop mov loop dec sub xchg cmpsl (bad) sbb dec je sbb pop jle imul das push addb sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl or call cltd mov outsb inc jge xchg sahf sbb outsb test int3 dec mov mov xchg cmpsb bound cmpsb inc pop push xor sbb je inc mov icebp movsl inc dec test xor cli push xor call cmpsb loope sahf das push outsl pushf mov cmpsb sub je xorl lock vpsrld rcrb lea and aad sbb dec mov fidivrl mov enter and das leave push sub adc jae inc push rcr insl cmp inc or xchg add int mov in addb dec (bad) push jnp sahf and push lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl mov jecxz fcoml jbe push testl sub pop sbb mov sbb loop and out out mov jge pop mov sbb cwtl add lcall je pusha scas mov insb ljmp mov or cmp cltd sub es push add insb sbb jae daa test addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl and add stos imulb and dec aam xchg aad imul sbb call in sub cld test repnz xchg mov or cli nop mov ret aad (bad) mov inc scas jmp push fisttpl inc je ja pop pop leave jae pop mov aam fucomip push inc cmpsl js outsl add jmp leave lock fldenv addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adc arpl mov mov push sbb stos jle loop sbb stc orb or imul inc movzbl xor dec movsb cmpb adc in filds push push movsl daa inc cmp movsl addr16 mov enter data16 inc xchg sub ds cwtl cmp jp int xchg stc call cmp cld ret sbb mov sahf lahf or mov jnp cmp call stc (bad) xor das orl mov hlt sbb mov nop push xchg lds sbb nop push ret sub pop (bad) (bad) (bad) fs cmc je out xchg add addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl cmp aaa fdiv je pop test xchg add mov adc mov dec dec fstpt into je dec mov pop je ljmp dec xor (bad) jb push shrb sbb aad pop orb sbb jo fwait inc fistpl scas xchg xor xorl (bad) xchg pop pop mov push mull cltd faddl dec push aad cs mov repnz push ret jns xchg cld andl ss mov xchg jge leave mov cmp enter jl aaa aaa sahf mov bnd cmp jecxz pop fcoml mov push sbb xchg mov sti mov popf enter (bad) popf dec add mov ret addl add addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl xchg fldl mov mov lret fsts sahf xchg dec (bad) pop sahf mov enter repnz jl scas jle decb aad test or adc dec and sti int3 mov push push sbbb pop shll jb test mov sahf mov inc xchg mov mov adc fsubs push adcl movsl subl mov xchg mov push xchg ficomps sbb add pop or xchg lods call mov adc xor scas les int3 daa xlat adc (bad) cmc daa cmpsl es add mov int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl adc (bad) int3 sbb jbe xchg call in imul push xor outsb jecxz add orb (bad) adc jl sbb aas int xchg mov xchg push sub fcoml xor (bad) (bad) int3 (bad) stc mov mov mov xor clc fwait fs clc inc mov insb jne test xlat cs inc push jne imul fsts int adc jns inc inc mov dec int cmc mov cmp iret jbe or xchg adc mov mov gs xlat fidivl addl mov addl lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl psubsb cltd cltd mov mov clc mov or push int3 addl lahf xchg mov int3 xchg fisttpll pusha lock dec or divb push ret mov xchg mov jle adc ds sub lret imul xchg cs dec push int3 imul popa mov or mov ret fsubl mov mov int dec shrl mov mov insl push (bad) sub orb sahf ret out iret jbe addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl (bad) jmp dec test andl out adc mov pop sti sbbb out xchg lea fdivrl cmp (bad) jmp lea int3 pop incb mov xchg cmp rorl shrb js stos stc mov add xor fsub scas repnz inc cmp rolb enter sbb mov sbbb jbe mov inc (bad) divl adc xchg sbb ret jge push mov adc loope fmull nop stos add cmpb sbb int div add sbb pop xchg pop movsl lea nop test addb sbb sahf addl inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl addl bound mov mov add xor enter mov stos ss and xchg pusha test lods mov push int3 and jmp mov call loop stc insb gs pop movsb cmc test push push jp movsb mov idiv mov into jnp adc add inc adcb cld scas mov adc xor mov js movsl dec fiaddl out pusha gs addr16 sbb in xor lds loope adcb in (bad) and mov xlat jne and push int mov dec mov and scas mov and xor cli test pusha pop mov andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl pop add int3 add and fs add lea (bad) sar stos adc xchg in in orl jl xchg mov sar loopne mov push (bad) sbb (bad) xchg xchg fwait dec ror aaa roll fucomi jb xchg loop mov adc std jae adc les and std xchg std test adc add fnstsw add hlt mov (bad) add add dec lods add int3 shrl xor clc adc xor ss les in push loop arpl inc adcl popf in jge mov jmp fstp mov (bad) out das out (bad) mov mov jbe addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl int3 leave jmp mov test mov xor mov jle pop inc jb pop orl mov cmc lods mov (bad) fmuls sbb jmp inc sub mov push jl jbe loope call rcrl roll and lcall es es int fisttpll subl sbb repz (bad) stc mov mov sahf xchg leave into ds or cltd fildll pop rcrl sbb mov dec shl scas cwtl call mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl andl mov mov jg js fadd push (bad) aam clc mov je ffree add jae fsubl pusha xorl and loop xor xchg adc rcll cwtl arpl call out rorl hlt xor mov cs stc fcoms lcall mov repz sub sahf andl inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl es mov shrl fsubl pop adc and dec xor push xchg ret pop sub cwtl push faddl sar inc cmpsl push mov jecxz adc inc push subl subl mov mov adc fs xor or and xchg cmp mov pop xchg add in lea imul aad rorl fs testl adc ret mov lcall push leave pop cmpl mov ret in mov bound lods push mov jb mov mov icebp pop inc mov (bad) faddp pop add stos lea rolb xor pop jo rcrb shlb mov addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl add adc mov loopne mov nop aaa pop jo xchg xchg mov cmpl jle shr arpl dec mov dec xorl cmp push ret cwtl into inc andb repz shll pusha mov andl cwtl sbb xchg add (bad) mov xor hlt insl xchg and cmpsl aas fs mov cwtl test not out xor sbb sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl cmpl cmp cmp cwtl mov sbb bnd fcoml push dec and or into dec outsl incb jp (bad) cmp adc enter jmp sub and sub sahf cmp sarb movsb in lock push aam (bad) mov xor pop cmp adc or ja mov inc xchg xchg addl xchg inc fnsave and add xchg cli ret test mov lcall xor xchg dec (bad) clc push cmc adc stc int3 dec add jg,pn dec pop lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl addb xlat mov cld sahf xor icebp xchg mov cmp call data16 mov scas add outsl push fcmovnb xor and pop or push test nop sbb sbb sub jge (bad) sbbl mov and cmpsb pop mov sbb test mov sub mov or mov inc or xor addl popf push icebp sub movsl mov mov sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl lds popa xor pop (bad) repz cld mov jge (bad) mov xchg mov fadd iret (bad) xor (bad) and mov push and jns or jo cmpsl jno call cmpl and mov sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl sub or imull fstl xor cld out adc shlb mov andb fiaddl jne stc inc xorb pusha xchg mov dec pop sahf mov pop inc loope gs div xor fstpt in faddl sbbl test sub xlat inc dec sub sbb xor outsl xor scas adc repnz pop sub les dec in xchg mov ljmp sub pop pop movsl jbe xor push cmp les iret push test into addl cmp je (bad) (bad) into sbb (bad) aas pop out lds cmp stos dec push lcall pop add test pusha aad out mov bound ja or dec leave lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl andl loop or les push sub push push xchg adc call outsl mov xor sub adc xor test mov sbb sbb sbb fildl mov xor jnp leave iret xor xchg es xor jge add lock sahf lahf movsb cmp pop mov mov loopne insl add insl into lock jge data16 je aaa popa cwtl out mov xor cmpb cs jne cmpl sub ret ret sbb or cwtl stos cmp jns dec rorl dec xor std outsl ss mov adc gs (bad) mov movsb in test stos push cwtl dec je mov dec pop sbb roll jbe sahf orb inc sahf lea mov orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov pop jecxz idivl adc addl stos in push xchg fcmovu mov cs dec inc mov xchg insb fbstp pop or faddl daa lods aas stc in or or add jle (bad) sbb mov test loopne sbb jnp loopne and pop stos jno fists cmc mov cmp mov push jmp repnz mov xor cwtl push xor sbb push fs out mov cmp dec popf inc jnp jbe xchg pop stos std xchg in xor cmp sahf das mov sub test jp push pop aaa stos add dec es jp lock adc cmpxchg dec sub mov adc mov sahf jg fstpl andl orl xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl orl dec cmp mov addl pusha sbb push jle stos out xchg stos lock inc (bad) pusha mov lods leave jb xchg cmp lock andl fbstp or orl (bad) int3 mov mov int3 dec popa in adcl ljmp add stos or dec nop daa enter or jg add cmp sub shlb out cli mov cld push lahf aam pop cwtl (bad) xchg push subl ret into ret sbb ret pop sbb xchg or cwtl imul xor out xorl pop cwtl push lods mov lea addb fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl fs pop roll out rcr call ret mov xchg loop ret mov or cmp xchg leave loopne notl (bad) mov xchg jecxz (bad) mov int xor stos sbb xchg jl stc mov shrb xchg mov sub xor or sbb pusha cwtl mov push dec and addb sbb fnstenv int int3 sahf jnp lock mov notl aaa jge cld xchg push test inc imul gs shrb subb fnstcw inc sub idivb loop cmp or mov pop out std out xchg mov mov mov lcall mov xor xchg push int dec push popa cmp stos outsl aam addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl cmp loop je adc clc adc jne andl andl (bad) sbb add fstl int3 sbb sti pop pusha repnz out pop clc mov adc cmc scas sub mov std repnz and je adc or out xchg lret aas dec int3 icebp arpl fnsave cmpl and xor jmp fs repz adc or popa repnz lret inc adc sbb fistpl cwtl xchg cmp sbb sbb movsb cmpsb subl pop push decl pop pop or rorl and adc scas dec mov xchg pop or jnp jae je test mov test sahf lods int3 rcr sahf int3 lea addl inc mov inc xorl mov sbbl addl lea addl lea inc lea xchg mov andl adcl sahf int3 orl (bad) fstpl addb int3 orl pusha mov xchg addl xorl inc sub je addl sti jmp lret clc adc ds sbb fcmovb jne mov add xchg push pop cmp xor iret mov and andl push mov cld xor lret pop adc int3 fidivl loope mov sbbl orb cmp sub jp mov addb sahf inc fldl mov lea lea sahf lea sbb sahf addl lea addl andl add mov sbbb mov addl sbb sahf addb sahf andl addb mov or andl inc mov fldl xor and add sub adc ret int repz inc mov mov mov xor in cli push subl or inc rcr xchg push push jmp shrl mov mov pop xor nop adc add stos adc ret xchg outsl addb fstpl fldl addl orl andl sbb lea sbb lea lea sbb xchg addl sbbb sbb addl sbbb inc lea orb (bad) int3 inc fldl sahf addl sbbl inc andl mov nop xchg scas jns and dec xlat faddl pop mov mov xchg into orb daa je mov jecxz mov or xor shl es into ljmp mov jp inc filds and fcompl int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 stos xchg lret test sahf mov cmc and and scas and stos ljmp sub cmp dec dec (bad) sbb leave mov js pusha orl es push sti je movsb aad mov push sbb fisttps xor sbb push scas jae and std push sbb adc pop sbb or fisttpl fcomip outsl out imul mov add jle pop test cmpsl fstp and pop pop ret rorl int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov xor mov mov inc mov inc cmp jne test jne jmp xor inc pop pop mov pop ret int3 int3 int3 int3 int3 int3 jmp jmp jmp ret int3 push inc xor pop inc xor push mov sub push push push push cld mov mov testl jne mov mov mov lea mov mov mov cmp je lea cmpl je push push lea call pop pop mov or je js mov push call add lea push push call add lea mov mov call mov lea mov jmp mov jmp mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret push mov mov mov push mov push call add pop ret int3 jmp jmp
 push inc xor pop inc xor push mov sub push push push push cld mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret push mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov push mov cmp jb neg and je sub mov inc dec jne mov shl add mov shl add mov and shr je rep test je mov inc dec jne mov pop ret mov ret int3 int3 int3 int3 int3 int3 int3 int3 repz int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret int3 push mov mov pop ret xor mov sub inc mov inc cmp jb ret push mov push push mov mov mov mov cmpl jbe mov mov mov mov mov inc mov mov inc mov mov dec mov jmp mov pop ret push mov push push push push pop imul push pop imul mov mov mov xor mov push pop shl push pop shl mov mov mov xor mov mov shr and movzbl shl mov shr and movzbl shl or mov shr and movzbl shl or mov and movzbl or mov mov shr and movzbl shl mov shr and movzbl shl or mov shr and movzbl shl or mov and movzbl or mov mov shl mov shr or xor mov mov shl mov shr or xor mov mov shr mov shl or xor mov mov shr mov shl or xor mov push pop imul mov mov xor push pop imul mov mov push pop shl mov mov xor push pop shl mov mov pop mov pop ret push mov sub push push mov add mov push push lea push call add push push pushl call add mov mov cmpl je cmpl je cmpl je jmp mov movl andl jmp mov movl movl jmp push pop jmp andl jmp mov inc mov mov shr cmp jae mov add mov mov mov jmp cmpl jne andl jmp mov inc mov cmpl jae mov movzbl not mov mov jmp andl jmp mov inc mov cmpl jae xor inc imul mov movzbl shl xor inc shl mov movzbl shl or xor inc shl mov movzbl shl or xor inc imul mov movzbl or mov lea push pop imul mov xor inc shl mov movzbl shl xor inc imul mov movzbl shl or xor inc imul mov movzbl shl or xor inc imul mov movzbl or mov lea push pop shl mov jmp push push lea push call add andl jmp mov inc mov cmpl jae mov movzbl shl mov movzbl shl or mov movzbl shl or mov movzbl or mov mov jmp andl jmp mov inc mov cmpl jae mov mov mov xor mov mov jmp lea push push pop imul lea push lea push call add lea push push pop shl lea push lea push call add andl jmp mov inc mov cmpl jae mov mov mov xor mov mov jmp lea push push pop shl lea push lea push call add lea push push pop imul lea push lea push call add cmpl jbe andl jmp mov inc mov cmpl jae mov mov mov xor mov mov jmp lea push push pop shl lea push lea push call add lea push push pop imul lea push lea push call add push pop imul push pop imul mov mov push pop shl push pop shl mov mov push pop shl push pop shl mov mov push pop imul push pop imul mov mov movl jmp mov inc mov cmpl ja mov shl push pop imul lea mov movzbl test je push pop imul imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov push pop shl imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop shl imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop imul imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov jmp andl jmp mov inc mov cmpl jae imul push pop imul lea mov movsbl cmp je imul push pop imul lea mov movsbl mov mov mov mov jmp cmpl jbe push pop shl push pop imul mov mov push pop imul push pop shl mov mov push pop imul push pop shl mov mov push pop imul push pop imul mov mov movl jmp mov inc mov cmpl ja mov shl push pop shl lea mov movzbl test je push pop imul imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov push pop shl imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop shl imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop imul imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov jmp andl jmp mov inc mov cmpl jae imul push pop shl lea mov movsbl cmp je imul push pop shl lea mov movsbl mov mov mov mov jmp push pop shl push pop imul mov mov push pop imul push pop shl mov mov push pop imul push pop shl mov mov push pop imul push pop imul mov mov movl jmp mov inc mov cmpl ja mov shl push pop shl lea mov movzbl test je push pop imul imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov push pop shl imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop shl imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop imul imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov jmp andl jmp mov inc mov cmpl jae imul push pop shl lea mov movsbl cmp je imul push pop shl lea mov movsbl mov mov mov mov jmp cmpl jbe push pop imul push pop imul mov mov push pop imul push pop shl mov mov push pop imul push pop shl mov mov push pop imul push pop imul mov mov movl jmp mov inc mov cmpl ja mov shl push pop imul lea mov movzbl test je push pop imul imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov push pop shl imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop shl imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop imul imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov jmp andl jmp mov inc mov cmpl jae imul push pop imul lea mov movsbl cmp je imul push pop imul lea mov movsbl mov mov mov mov jmp andl jmp mov inc mov cmpl jae imul mov movsbl cmp je imul mov movsbl imul mov lea mov mov mov mov jmp xor pop pop mov pop ret push mov sub mov mov cmpl je cmpl je cmpl je jmp mov movl andl jmp mov movl movl jmp push pop jmp mov add mov pushl pushl lea push call add mov cmpl je mov jmp mov shl shl lea mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov lea mov mov sub mov jmp mov dec mov mov sub mov cmpl jbe mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov jmp mov sub mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov push push lea push call add xor mov pop ret push mov sub push mov mov mov mov add mov xor inc imul mov movzbl shl xor inc shl mov movzbl shl or xor inc shl mov movzbl shl or xor inc imul mov movzbl or push pop imul mov xor inc shl mov movzbl shl xor inc imul mov movzbl shl or xor inc imul mov movzbl shl or xor inc imul mov movzbl or push pop shl mov xor inc shl mov movzbl shl xor inc imul mov movzbl shl or xor inc imul mov movzbl shl or xor inc imul mov movzbl or push pop shl mov xor inc imul mov movzbl shl xor inc imul mov movzbl shl or xor inc imul mov movzbl shl or xor inc imul mov movzbl or push pop imul mov push pop imul mov mov xor push pop imul mov mov add mov push pop shl mov mov xor push pop shl mov mov add mov push pop shl mov mov xor push pop shl mov mov add mov push pop imul mov mov xor push pop imul mov mov add mov cmpl je mov dec mov lea push pushl lea push call add mov add mov lea push pushl lea push call add mov add mov lea push pushl lea push call add mov add mov lea push pushl lea push call add mov add mov lea push pushl lea push call add mov add mov lea push pushl lea push call add mov add mov cmpl je push pop imul push pop imul mov mov and shl push pop imul push pop imul mov mov and shr or push pop shl xor push pop shl mov push pop shl push pop shl mov mov or push pop imul xor push pop imul mov mov add mov push pop imul push pop shl mov mov or push pop shl xor push pop shl mov push pop shl push pop imul mov mov and shl push pop shl push pop imul mov mov and shr or push pop imul xor push pop imul mov mov add mov jmp push pop shl mov mov xor push pop shl mov mov add mov push pop imul mov mov xor push pop imul mov mov add mov push pop imul mov mov xor push pop imul mov mov add mov push pop shl mov mov xor push pop shl mov mov add mov push pop shl mov shr xor inc imul mov mov push pop shl mov shr xor inc shl mov mov push pop shl mov shr xor inc shl mov mov push pop shl xor inc imul mov mov mov push pop imul mov shr xor inc shl mov mov push pop imul mov shr xor inc imul mov mov push pop imul mov shr xor inc imul mov mov push pop imul xor inc imul mov mov mov push pop imul mov shr xor inc shl mov mov push pop imul mov shr xor inc imul mov mov push pop imul mov shr xor inc imul mov mov push pop imul xor inc imul mov mov mov push pop shl mov shr xor inc imul mov mov push pop shl mov shr xor inc imul mov mov push pop shl mov shr xor inc imul mov mov push pop shl xor inc imul mov mov mov xor pop mov pop ret push mov sub mov xor push pop div test je push pop jmp cmpl jne cmpl jbe push pushl lea push call add pushl pushl pushl pushl call add andl jmp mov inc mov cmpl jge mov add movzbl mov add movzbl xor mov add mov jmp push lea push pushl call add mov add mov mov add mov mov sub mov jmp jmp cmpl jbe andl jmp mov inc mov cmpl jge mov add movzbl mov add movzbl xor mov add mov jmp pushl pushl pushl pushl call add push pushl pushl call add mov add mov mov add mov mov sub mov jmp xor mov pop ret push mov sub cmpl jae xor jmp andl jmp mov inc mov cmpl jae jmp andl jmp mov inc mov cmpl jae mov movzbl mov add movzbl xor mov add mov jmp andl jmp mov inc mov cmpl jae jmp push pushl lea push call add test je xor jmp mov add mov mov sub mov mov mov mov mov mov mov lea call mov xor push pop div test je xor jmp andl jmp mov add mov mov cmp jae mov add push mov add push lea push push push lea push call add test je xor jmp jmp mov mov cmpl je xor jmp mov mov add mov mov mov mov sub mov mov xor inc mov pop ret push mov push push push mov push mov push push push push push push mov andl cmpl jne orl orl mov jmp call orl jmp xor inc ret mov orl xor mov mov pop pop pop mov pop ret push mov sub andl movl andl lea push push pushl push push push call mov cmpl jne jmp push pushl call mov cmpl je cmpl jne push pushl call jmp movl cmpl jne push call jmp pushl call mov mov pop ret push mov sub andl andl andl andl andl andl pushl push push lea push call add lea push push pushl call mov cmpl je jmp pushl call andl lea push lea push pushl call mov cmpl je jmp push pushl call mov cmpl je jmp lea push pushl call mov cmpl je jmp push pushl call mov cmpl jne jmp push push pushl push call mov cmpl jne jmp lea push pushl push pushl call mov cmpl je jmp lea push lea push pushl pushl call add test jne jmp lea push push pushl pushl call test jne jmp pushl call pop test jne jmp movl cmpl je pushl call cmpl je pushl call cmpl je push push pushl call mov mov pop ret push mov sub movl lea push lea push push pushl call test je xor jmp andl jmp mov inc mov cmpl jge mov movb jmp andl jmp mov inc mov cmpl jge mov movzwl test jne jmp mov mov mov mov jmp xor inc mov pop ret push mov sub push push lea push push push push call pushl call pop test jne mov jmp pushl call mov cmpl jne mov jmp andl jmp mov inc mov cmpl jge pushl pushl call pop pop test jne jmp jmp pushl call mov mov pop ret push mov xor inc pop ret int3 jmp
 xor xor xor xor adc mov or clc add bound push lahf push pusha sub scas daa jge cmp jmp mov test jmp jmp jecxz cld jecxz ret dec popa sbb xchg xor inc cld (bad) rcrl jnp jb mov push insb dec mov xchg and push xor inc pushf cld sbb shl add and into imul mov scas adc sub inc fwait mov push add pop jle test push int3 xor mov popf inc test xor fidivrl stos xchg sbb imul xchg fptan dec adc sub (bad) or dec stos xchg jnp mov stos sub leave xor mov jle jp popa out xlat add jns xchg les adc pop adc nop dec mov sub xchg jno fldenv or sbb rclb cmp out xorb xor and sbb fsubrl cmp sub cmp cmpsb loopne out ljmp pop pushl std xchg push test in aaa jp roll repz dec movsl mov and cmp push (bad) dec cli imul xchg cmp outsl add pop sti lret jb pushf jno clc add cmpsb addb push push addr16 rolb inc insb js stos lock fstpl cmc mov popa pop push dec and xor (bad) xlat shrb scas dec cli jl popf lret imul push or add inc ret jle push inc mov insb mov stos aas jns scas mov iret cmpsb mov arpl inc jnp sub shlb stc cmp ret cmp dec ret mov cmp dec loope add dec enter movsb aam mov dec dec repz mov sbb jo and mov jle mov pop push jmp push aad jp mov popf loop push out call push dec pusha jns adc cmp mov ret stos iret dec and stc xorb icebp orl mov hlt jno lds sub pop shlb repnz pop sahf sub inc dec aas imul out fs (bad) push test scas sbb pop insb sub scas in repz daa cmp lahf cltd stos movsl mov lret cmpsl and jo test pop xor std xchg add xor aas fwait rdpmc sub aaa mov bound mov test lods xchg xor adc ds aaa mov andb hlt repnz in add lcall sbb js hlt insb or es push jp add mov add mov add (bad) cwtl ret push cmp idivb xor jno (bad) jmp xor dec dec sub adc shl std loopne cmp jb loop push add hlt out xor push std mov lock mov add or mov or sub jl loop and push roll out pushf jno adcb fsubl xor pop xor mov inc test and sbb mov mov scas iret adcb lock xchg stos xchg mov xchg std fidivl mov scas fucomip add sbb addr16 sub dec pop inc pop cwtl or pop jae jb pop cmp pop (bad) mov jp ret lock ljmp rorb mov mov jecxz jl outsb insb test push dec jmp and (bad) fcoms add cli add xchg jle inc repnz popa inc stc add nop shr ret out cmpsb cmp lods jge cmp mov sbb mov jb scas aam paddsw pop dec jbe sti fists iret xchg jo repnz aas repnz push ljmp push cli pop insl inc jno fldcw cmp outsl shlb jmp (bad) call sub dec dec mov iret push cmp lock movsb scas std or es outsb push xorb push imul push stos jo push push cmc rcrb jecxz gs add ret adc subb sbb lods scas and add scas and xchg push add inc or andl inc add mov add ret outsb cmpl xorb or (bad) adc fadd imul xchg hlt mov leave or xor and mov int jbe,pn add (bad) arpl adc add stc jg ret lcall movl jne sti xor sub inc insb jp adc fimuls fcmovnbe mov aaa pop decb add sti ret imul xor inc (bad) pop mov pop mov test insl ds push pop leave cmp cmc test or test mov mov es pop mov addr16 adc mov mov jnp hlt popf out jg les inc loope add in sbb xchg xchg cld xchg or (bad) xchg insb cli leave stos mov hlt leave rcll bound jnp notb lods and scas xchg sub dec mov bound inc sarl ret cmp lret sqrtps mov xor dec jp sbb xor or cmp outsl pop pop into jbe,pn popf shlb mov pop pop cltd pop pushf xor lahf jmp pop fcmovnb push popf or je cli sbb bound rol add loopne xor std daa subb mov sahf add jbe and pusha cld xchg pop mov fstps dec xor sbb stc adc loope xchg popa (bad) cmp add fsts shr cltd inc pop scas (bad) mov addr16 sbb and pop pop andb std mov rcrl shlb mov sbb enter cli jl shrl pushf pop fdivr pop inc sbb dec add jmp sbb dec xchg icebp stos cmp ja cli pushf mov xor dec out out inc xchg out xor mov punpcklwd lods div cmp jp xchg or fiaddl mov test mov cmp mov xor dec xor pop and ds outsb stos (bad) repz scas add dec cmpsl dec inc dec leave shlb mov addr16 outsl inc stos xchg scas jge cli pop loope scas imul out (bad) pop pop fstpl mov into mov rcrl int3 pop push das movsl sbb insb and lcall daa xchg pop in loopne scas insb or cwtl rcr lock dec cmp cmpsb aas cs int3 cmp xor sbbb xchg das movsb and ret xor mov das ret add scas addl insb icebp or scas jo adc pop xlat dec loope mov mov gs cmp lret clc gs mov jle mov lods call out cld fdivp pop cltd out sub add pop or jg pop mov push rorb sbb mov gs xlat dec lret jbe scas stos arpl icebp push jp and dec (bad) mov int repz inc in sbb clc mov ret repnz cmp add icebp je orl (bad) leave lret sahf repz movsb pop in mov test pop xchg push cmp repnz lcall xor inc and fsubl insl (bad) je popa sub hlt mov cmp out imul fcompl xchg pop arpl test repnz pop daa repnz inc mov inc or inc aam sbbb xlat gs add jbe jp dec dec popf dec cmp push jno movnti hlt (bad) sub shrb lcall fucomip inc cmp add sub sbb scas dec cmp mov movsb inc ret and mov rorb mov cmpsb mov fadd fs cli gs and addl jo cltd xchg in or sub add sub hlt movsb add sub xor dec int cmc sti inc ds xchg push mov cltd mov xor test (bad) js inc out cli das dec clc in dec inc push mov adc (bad) mov daa push sbb xchg adcb push sarb lock data16 int3 jmp push dec stos jo fisubrs mov mov add addr16 adc inc jge lcall mov xlat dec loope mov popl cmc (bad) mov pusha fsubrs xchg (bad) mov call lds cwtl mov jl rclb adc ret dec dec js push (bad) mov dec xor aam adc fnstcw push mov ficoms mov inc sub adc or jl enter cli adc icebp repnz xchg and int3 mov dec cld mov mov gs xchg ljmp mov imul add cmp (bad) jns add mov ret sub dec add jo inc inc jmp (bad) scas mov push out shll xchg arpl repnz xchg ficoml (bad) int3 out (bad) sbb sbb das sub xlat adc lcall or inc and ljmp push mov push (bad) mov test jmp adc push mov hlt lds cwtl addb test pop dec mov int3 movsl and lret out or sbb push mov loop mov push in jb dec sti js cmpsl xchg inc or lret mov aaa xor rcrl sar ret seta (bad) pop sub jno dec das gs je aas dec stos push mov mov cmp les push pop push mov loope fnsave pop mov int3 sbb jnp stos adc pop lea arpl int and push dec push sbb mov andl lret or out jp stos mov outsl in jbe shlb (bad) adc mov sbb rcll push int xchg push add push mov dec mov fists test cmp pop aam sub popf jb mov inc lock (bad) sbb stc mov and xchg cltd mov nop out xor test xchg sahf or push jp clc mov mov jnp shl outsl inc lcall stos xchg and popf outsl addr16 and sub cmp loop test cmc repz dec pop mov cmp mov in adc cmp cld xchg sbb sub mov xor mov ss rorb and cmpsb out loopew cmp xchg add jmp pop dec fildll xor add jns addb cmpsb int3 imul fdivrp leave jo addr16 or (bad) cli shll (bad) jl mov clc test insl add pop icebp repz cmp outsl dec outsl aad or mov or jge pop mov (bad) outsl and stos or xorl pop popa sub lea mov xor popf mov cmpsb push lahf or int pushf sbb push mov push fldcw shrb fisubs dec ja mov xchg xor icebp add push and imul popf (bad) cmp mov inc mov rcl mov mov inc jne mov fwait andl loop dec sbb pop push pop ret pop pop out push pop dec sub mov xor sbb add mov mov std pop repnz add cld cmpsb or mov into test test mov into ljmp pop cmp dec xor push cmpl sub jl mov mov lock clc test xchg addr16 adc repnz or and lock add xchg lcall movsb adc sarl cltd mov std in push nop dec push movsb je lea or fwait and mov push lahf add inc lock outsb movb inc adc jne jle gs ljmp dec scas ja xchg mov sahf (bad) cmp adc loopne cmpsl subl mov ficomps add aad push daa push incl mov sbb fisubrs lret in pop (bad) cmpsl out popf mov (bad) push addr16 pop test lahf cmp insb mov sbbb inc xchg popf imul inc (bad) cmp mov dec arpl inc mov rolb shrb daa and or pop shl into sbb push and (bad) fdivrs push lock (bad) outsb stos lcall fwait movsl nop es dec pop sbb and mov dec dec cmp add lods xor cmp imul repnz popf ret cmp cmp sbb xchg dec fwait sbb mov mov xor mov mov in ds xor imul loop push cs iret inc xchg mov xor out push divl addl mov mov mov cltd fsubrs out sub roll dec sub jns mov adc popa jecxz mov and fisubs fsubl or jmp mov adc mov mov fsubrl adcl sbb xchg and jp push xchg arpl and cmp pop jp xor push insl mov iret mov (bad) fisttpll dec sarl ss daa mov jo xor cmp in mov and inc sbb stos fs jnp and cmp (bad) sub stos push ret cmp mov adc imul ret ja in scas push mov test dec (bad) (bad) aad mov faddl into lcall inc (bad) inc dec mov arpl lea fsubr mov scas es (bad) js mov ss cmp inc dec inc divl jmp sub cmp movsl lods hlt push ret into mov outsb stos sub cmp or xchg push adc fwait rclb shll adc sub mov xchg or mov mov lods push pop enter in adcl testl imul es mov cld push daa jns pop mov inc das sub lcall cmpsl jno pop sbb cmp adc stos mov test test dec xor mov or imul mov lcall out xchg icebp dec les add loop add sti xor sti dec sub lret push push lea ret mov mov sbb ffreep pop dec mov int lds negl lods mov mov shrl in xor add mov fidivl sbb add dec out aam and xor cmc push cmpsb call adc sahf push sarl push mov mov jb js insl jne fs ss sarl xor out xchg inc mov aad push jg outsl aam cmp lods test adc fcoml lea adc icebp push rcr cmc sbb cmpb aad xor or and dec lret jae jp lret ljmp cmp (bad) sbb xchg jno sub lahf mov ja xadd pop (bad) rcrb mov aad mov jo or or mov mov lret in (bad) cmp and mov cmp push mov lea sub jbe add push mov loope xor sahf mov pop push mov rcrl call lahf sbbb scas push lahf icebp add daa add mov mov insb out mov lahf xchg inc mov aaa cmp loope dec iret push lods and leave (bad) push mov in xchg addl push and imul lds or or push mov fdivs fs jp xchg fldt dec jb pop adc jl xchg es sti and xor mov stos xor test inc add cwtl clc movsl push loopne outsb sbb sub les fmul daa push sub push sub test es add cli jmp dec (bad) imul out addr16 sub pusha rolb xchg out cmpsb or pop or cltd sub sarl (bad) mov call es aas ret adc out mov adc repnz rcl fcmovnbe addb xchg sarl iret add or outsb je push add rorb rcl xor negl jae repnz add js mov or pusha loopne xor sbb addb test mov jno or xchg ljmp sub repz mov sbb inc in mov push xchg mov lds mov test ljmp mov inc adc and std scas or data16 add (bad) push inc mov cs adc bound xorl gs loope cvtps2pi dec pushw sbb cmp into repz in std sub jmp pop data16 in pop cmp fcomi aam pop xchg lea mov mov mov or shll sub inc testb lret and cmpsb cwtl mov stc mov jne pusha mov lcall fadd sti scas mov xor adc jne inc pop dec mov aad pop mov lret rcll mov xor jle pop lds dec add jns (bad) nop sub flds or sbbb mov daa xchg scas cld cmpsb int3 xor sub rorb mov daa xlat (bad) cld lock aaa adc and mov cwtl dec and cmp add cli fs or jno,pt mov pop xchg push mov xchg push pop mov lods jecxz cmp sub loop or sub pop sbb in popf dec cmp pop cmp test mov mov ja cmp ljmp fidivl dec add imul adc aam jg test sti inc into push add add pop pop sar xchg dec adc outsb dec stc lret inc sbb jbe push mov loopne xchg jp push lret jno iret imul out mov cpuid mov data16 jecxz rol lahf add inc pop cmp adc pop sahf jne pop cmp jmp ljmp sbb sahf lret gs xor int3 enter sub aas mov cmp jge or loop daa fadd loope fs rol inc mov mov pop mov aas mov sub mov sbb loope clc jge call push mov xor and arpl mov jl jne sti sti inc push jge cmpsb inc sub icebp pop imul cltd inc lock (bad) (bad) mov xchg out movsb mov xor adc imul xchg es cld clc inc dec ds nop mov xchg cwtl xor repnz mov stc pop rcrb mov push fimuls fs (bad) xor int push fwait xchg mov test adc cmc divl lret jae push mov inc xchg sahf dec and hlt hlt daa inc je inc repz push cs mov cmp sbb mov xlat mov mov jnp mov and jns aad or sbb dec ret scas lock mov cmpsl clc call mov inc xchg sti ss inc jno sub xchg mov fnstenv add xchg es addr16 dec xorb sahf ja repz sahf xorb popf mov stos push lds (bad) test aad sbb sub les mov data16 imul jge add mov or fs jae into aas testb jmp mov imul cmp add clc enter and mov testl cwtl cltd push lods imul sbb fsts cli in leave fmuls out stos sbb test or mov ret xchg ljmp sti pop adc xchg mov lcall bound loop xor mov filds and movsb stos lahf xlat sub dec jmp scas mov lds jmp or cmp pop cmp mov fdivrl js clc lods mov scas cmp cmp mov sub xchg push mov pop lods xchg push hlt xlat xor test test adc mov dec jnp lcall xchg addr16 (bad) sub add popa addl sub jmp xor mov cmc outsb inc xor jo stos repz xchg adc mov dec push stos testb mov test repz xor ds sub fs movsl xchg push add inc mov je stc sub sub fwait cmp lea in popa cmp clc mov movsb add and (bad) adc push xchg addr16 (bad) xchg movsb jb sbb push mov and sarl inc xor loop adc jb outsb jg pop ret pop xor movsl pop add add add push loop push dec jp pop xor loop js xor std sub popa inc out jg xchg movsb test xchg pusha dec lret pop sub (bad) dec sbbl imul mov xchg mov aad aad add sub mov (bad) cmp push jne sbb repnz mov mov mov push or adc xchg mov cmp sub dec mov mov (bad) inc shlb fiaddl insb roll xchg rolb (bad) out sub dec mov jmp (bad) ret std outsl mov jo bound bnd rolb xchg mov mov enter fxch mov fwait sub mov push mov push das cmp mov cmpl int pop int (bad) (bad) dec pop dec shlb lret in sub jb out dec aaa sbb mov pop xchg outsl js enter icebp jmp ljmp ds add lods in cmp dec jb pop pop xchg in lea fidivrs out push fadds out jns int fnstcw dec aad cmpsl pop jge mov xchg push dec xchg hlt dec enter or decb push xchg rolb fwait sub int3 repnz add push sub adc xchg and jne mov xchg dec dec xor inc hlt xchg out arpl add les or push out push push mov test insl sub adc or and push (bad) stos push loopne pop jg (bad) imul cmp jns dec hlt jle cmc push es mov sbb inc xor ret arpl iret push or push adc sub fninit add data16 pop sub in mov adc dec shr rorb mov sbb loopne lods mov loop xor sub ja jnp mov or push fnstenv out lcall fisubrs mov cltd orl fwait in hlt mov and popa notl pop ffree sti and cmpsl subb mov xlat andb xchg js scas mov mov ret xchg xchg bound adc pop push sub xchg lock mov (bad) mov cwtl push sbb jecxz lods int popf (bad) call ficoms jg lods stc in mov or daa jmp add rcll enter ljmp jnp aas mov dec inc outsb enter inc xchg add inc add adcb or dec in mov inc into je mov imul dec add or mov mov xchg dec adc sahf mov jp bound lods jae push mov cld add dec or bound xchg mov inc sti mov or es stos sub hlt push ficomps scas dec lock pop repnz mov lcall (bad) mov or jp out xor mov or sbb loopne pop and enter or mov add lret jb xlat mov lahf inc orl pop or cld ljmp stos insl sbb mov popf hlt gs aas shlb or mov repnz sbbb ret add mov push dec pop out dec sbb es mov imul inc gs jp cmp or dec push mov mov stos or dec (bad) daa test icebp scas aad mov insb jne jmp jns hlt call or adc push jne lret mov pop adc in or add insl (bad) jg pop pop scas cmc orl stos inc cmp cmp cltd fidivrs jno rclb (bad) mov dec les inc jl adcb fcom aas mov es cltd in filds test or dec xlat gs or data16 mov int3 js push lods imul pushf icebp mov mov mov mov mov jo and popa arpl cmpsb adc lret (bad) scas bound call out xor (bad) add dec cmp lcall cmp mov rcrl cli popf add mov je mov (bad) arpl jno lahf cmc mov into or sarl gs mov ja fsubs shll stos mov mov inc sbb add mov xchg pop test jbe lock dec leave cmpsb fstl or sub (bad) cmpsb pop jle pop sub cmp fisttpl dec scas cmp enter adc test mov ss xchg xor (bad) rol cwtl lea jo fwait jae and mov popa inc jge sbb cmp ljmp adc mov ja push sbb sbb mov pop jle push test (bad) sub nop cmp out jl sub and movsb ljmp xor mov jmp push push dec dec mov mov mov (bad) rcl or xchg mov and xchg xor cmp push jge pop jmp mov movsb add popf clc xchg arpl sti inc into (bad) xchg (bad) (bad) mov push sbb out stos nop push imul (bad) jecxz pop movsb mov add je xor jae or ja jne icebp mov adc cmp dec repz push or js and movsb lea test out or les xchg jg push inc xchg lds loope jae aas push dec fsubs movsl mov les xchg sbb xchg cmpsl scas jp,pn and repz cmp xchg cmp test rolb stc stos repz pushf fwait and jb popa or cltd or rcl jne adc test popa xor imul nop lods (bad) or out out int3 xchg mov pushf mov sahf jg arpl stos mov and and xchg ret jmp cmp les sbbl pop push icebp repnz hlt sub adc xchg mov sbb data16 hlt sub dec adc loopne ret sub mov mov adc push es icebp jbe jmp mov stos add jne in adc dec inc mov xor sub sbb mov in js popf mov ds mov inc dec (bad) popa dec push jl into sbb xor out rcrb wbnoinvd call fcoml iret mov lock outsl lods mov sub shrb pop aam xor stc cmp mov out fsubs pusha lret xchg sbb cmpsl push push std dec xor and movsb mov adc mov mov cmp outsb daa ret push aaa sbb jne fists xor jecxz in ret ja and pusha jb loop jmp fs int3 adc inc lods mov fbld pop xor sbb fcomps je cmp rcrb sti push out jecxz sbb jb in test scas dec cmpb jle movsl movsb stos cltd sbb rcl dec imul insb out xor out xchg xor (bad) xor ret mov mov flds int inc adc (bad) xor mov fstps loop fcomi adcb test xchg pusha xor inc test adc ja or mov (bad) aam pusha shlb mov in mov jge lock (bad) ljmp sub jecxz rorb xchg mov jae out hlt adc inc push fs xchg mov cmpsl lcall pushf into jle mov adc pop mov push dec shll dec mov cs pop add outsl sbb mov pushf fistpll sbbb int3 fistpll add pop adc mov nop add aam sub xor fistpll push leave jbe outsb push mov arpl bound clc push insl in (bad) out jo xor adc daa out jns cld fisubl jl jmp push fidivrl mov int insb xchg push addr16 enter shl (bad) jl (bad) call ficoms sub fs test hlt lods inc fbld mov xchg (bad) pop cmp and jne jno pop shl icebp jmp cmpsl mov ss adc js sub push lahf outsl mov dec xor scas add adc sarl mov sbb into testl ja cmpsl dec pushf adc ja les sbb sbb call int dec jnp xchg sti movzbl sbb clc jae cli jmp test popa jae and and pop gs loope sub dec jo fwait mov mov test jae (bad) into fistps push cmpsl in sbb stos popa shl fstl jmp int jbe pop push rorb xchg pop jl lret sbb loopne mov fwait push inc fcoms ss xchg test ds xor cltd mov sbb cwtl dec pop mov pop push or jae lahf lods dec mov push aas push pop mov fcmovb inc std inc sar mov sbb ficomps pop adc stc paddb adc gs push mov dec xchg pop rcrl dec icebp cmpsb jg repz pop push (bad) lcall (bad) or dec data16 cmp aam mov jae mov sbb push pop pop test cli and in loopne je pop inc push inc int3 sbb sbb pop mov jo or jl adc xor push adc dec sub jns sbb sub fwait mov cli imul orl dec lods leave (bad) xchg push dec scas and sbb (bad) aaa pop inc les sbb pop push pop jae (bad) nop push jg ja cld je aad hlt adc test lret mov mov sbb mov popa xor ja mov stos (bad) and movsb push push orl push push push (bad) in pop add arpl mov add sahf icebp sub mov push mov mov int3 cmpsl cmp loope ljmp adc call scas dec fwait ret outsl es aad imul ds cwtl in xchg mov mov cltd ror pushf cmp sbb out ror add jp mov int lock inc fadds out cli out pop cmp fadds stos leave and call lret inc addr16 and dec addl fwait add jb popf (bad) ss ljmp in sti mov cmc pushf lahf cld aad into roll mov sarl sbb (bad) dec nop mov imul adc sbb add pop jge iret (bad) js ficoml xchg js cmp jb lods xchg inc js sbb sbb mov shll lret and call jge stos push in mov mov (bad) sub push outsl push inc or ljmp gs ds or mov lea dec cmp loope outsl dec and cmp mov pop lcall xlat bnd and dec stos lcall inc adc insl adc jp sbb cs ret test dec mov shrl sub int out push lods jns arpl pop or loop xchg loop dec mov lds outsl inc dec out adc unpcklps xlat stos xchg into in mov out xor test pop rcr pushf sub cmp into pop cwtl mov fnstsw test cmp lret les push (bad) aad push rcrb into xchg push nop push mov iret push das push jns add out shl test sub jnp popf sub mov stc pop insl dec lret fndisi(8087 pop std add push test mov pop mov ss loop adc dec bswap dec mov stc repnz push and stos inc jl pusha dec pop dec push rcr and shrb movsl loope sub dec hlt or pop and or or and push xor (bad) (bad) sbb daa inc fistl lods mov xchg lret lods xchg adc mov in xor das jns jl or in jnp fcoms mov hlt addb adc xchg sbb inc loopne data16 sbb sbb xor mov stc dec cmp fs pop hlt test jnp test inc ss test add mov (bad) loope lods imull shrl pop ja hlt int3 cmovg jmp add jg fisubrs add jge push dec cli mov adcb clc jecxz dec inc jae jge xlat or lock aaa aaa push add pop je adc and cmpl and pop add outsb outsl mulb fidivrl add rclb enter negl shl ret lret pop (bad) mov add imul mov pop cs cmc imul adc insb shll sub loop push jno les adc push pop outsb imul out fmull mov and outsb push mov dec dec cmp int sbb inc lret call shlb cwtl pop cmp popa adc inc xor xchg pop jge sub nop ret sbb and jbe jle repnz enter push addb dec mov mov xor nop cli cmp jl,pn or lock arpl (bad) out faddl stos fnstsw pop pop mov cmp mov xchg mov sahf jns scas mov mov mov and sub pop push jo repnz adc mov push mov mov xchg movsl pop jecxz jnp cmp cmp push dec pop xchg adc mov clc lock xchg dec jp inc sbb xchg leave add push jbe adc jle fdivs imul jmp xchg (bad) fucomp movsl dec jp and into cmc push cli mov int lock into cmp sub movsl ja in adc es lahf (bad) push add ss xor cmp cld push sbb push cwtl sbb pop pop shrb pop arpl inc mov fmull shlb mov inc mov sbb enter cli out loop cltd push test mov pop sbb insb cltd sbb mov pop mov idiv outsl pop fwait jp stos fdivl movsl adc pop push mov dec mov cli (bad) mov lahf dec (bad) ss cmp call cmpsb stos push mov sbb inc addr16 xchg stos mov push mull les push add into mov ret push mov lds push mov test or inc adc decb rol sahf mov adc jae popa push (bad) xor stos (bad) mov mov (bad) push sub fcompl xchg pop or push jmp cmp bound push es xchg add sub mov std or mov rcrl sbb insb clc sbb xchg mov (bad) xor dec push inc mov dec ror and jns adc jecxz mov pop xchg xor (bad) xor adc jae lds ljmp fucomip mov adc jno cmp pop mull mov out add rcr push rcrl leave cmp dec jnp,pt in ss sub sub dec jp push mov jg mov roll inc mov pop fistl ja inc mov xor xor cmc add call mov js arpl stos js xchg jmp adc loopne xchg push xor xchg sti mov aas sbb cltd je and sbb cmpsb pop jecxz hlt fldenv mov adc xchg and xor mov mov lock xor inc (bad) mov mov dec sub or lahf andl scas enter adc push xor jmp rorb daa mov aam inc sub arpl add push fstl aaa or mov pop mov jmp add out repnz add jnp mov pop add clc mov sub adc add push mov imul xchg lahf pop add (bad) mov jl sub int dec xchg fs cmpsb shrb and lods out lret test je adc fdivrl add stos out or sub (bad) lcall jmp mov aad sub jns push stos pop inc lret mov pop cmpsl int dec jp leave (bad) nop jo outsl (bad) pop fnsave (bad) jg addr16 mov mov lcall and xor and (bad) mov sbb dec mov mov imul rclb push shlb addps mulb movb jg ja aas pop rorb lar call fwait jp scas loopne pop sbb jno adc xchg mov pop test pop das popa jno addl push popf xchg adc cmp imul jne lock shr push (bad) test call xchg lds pop mov jl jg enter add jle pop mov xor push cld sub test loop aad add test leave lods sti jle mov (bad) imulb adc loope jbe (bad) lret addr16 out mov add xor add test xchg cmp in cmp inc popa ss scas inc mov mov jns sub lock inc mov (bad) push shr in repz xchg sbb gs xchg push push imul (bad) fisubs push repnz inc ret push jge xor jno dec cmp icebp mov cwtl test or jne pop lea imull dec lock inc push sub testb pushl sub push lcall movzwl test test bound sbb shll lret push popa jns std fs mov jbe sub and pop cmpsl xor xchg push dec or mul sbb divl fdivrs cmc js loop sub inc add stc dec jno cmp jg scas lret and (bad) pop ret sahf jns lcall add or (bad) aad dec lret mull lock test lahf shlb loopne stc or add shll les xchg bound in pop test add push cmp sbb jmp mov mov mov jmp pop fsub mov push rcr lds mov push shll and pop push (bad) mov and xchg clc push mov loopw dec out cmp shlb jecxz fildll cmpsl out xchg pop bound lods mov bound inc ss orl loop sarb movsb (bad) (bad) jnp add xchg test dec jae push scas add jnp enter fadd mov mov mov push add dec inc hlt fadds insb dec fadds pop inc dec subl int3 stc cmp jae mov popa movsl daa nop push or xlat in or inc sbb jge mov jns adc les int3 sbb mov mov inc fistpll or inc mov (bad) xor sbb mov mov popa inc inc adc xorb daa adc xor outsl gs push repnz pop jp or push ficoml inc add aam ja xchg imul adc sub aam in aad jmp add outsb stc cmpsb pusha lock push std iret arpl pop xchg test or ja (bad) sbb ret lahf hlt or mov mull popf pop dec fdivrl scas push xor les fsubrs inc adc das aaa orl ret inc jns subl fcoms and test fldl jg stc pop fnstenv and clc ror xchg nop out sbb mov jmp in (bad) jns addb sub ss mov jecxz sub sbb xchg fisubrl sbb and cltd les inc clc fiaddl repnz jp out shlb fstps push mov sbb cmp loop lods jne js or dec rcrl mov sbbl test scas outsb pop xlat and rcll add int3 add adcb mov sbb jmp xchg mov adc mov hlt adc push mov or xchg imul sti scas xor or js inc popf push fisttps sbb es arpl in cmp or repz cwtl adc push rorb fsts sbb aas jl outsl inc popf call cmp sub popl int inc dec cmpl mov cmp sbb and pop call adc push insl in jl sub sbb scas in adc push je and sahf mov mov mulb lock mov jno sub inc sbbl and xor scas sbb mov loope mov jmp ljmp out dec subb nop jne cltd sub cmp pop mull inc adc out int3 stc test (bad) sub addl xchg imul or gs mov add repz ja jle (bad) clc pop insl sahf mov inc out inc aas adc xor mov inc int3 and or or test mov xlat insb (bad) pop fdivrl jno push test pop jnp cli jb ret pop push popf xchg test out jbe pop or mov aaa push add aad sub pushf stc cs data16 mov outsl ds aas or mov jno (bad) mov dec push cmp pop out dec sbb out inc add inc sub in cmc imul data16 sahf xlat cmc nop jg ljmp cmc inc aad lcall lods jmp stos repnz jne inc push sub push jbe test mov fildll lods cmp or pop loopne pushf (bad) scas xor xlat das cmp nop int3 andl enter mov jl shll and lret or call cmc arpl jge xchg in cltd out jne jo (bad) stos xor arpl popa loop leave aam adc dec jge test in scas rcrb or xor clc or sub dec bound pop lcall daa adc ja insb xchg aad dec sub xchg shl xor in outsb lods mov add fsubr insl lret push inc xor fs stos push mov test pusha cmp insl xchg movsb jecxz test jno (bad) lcall xchg mov cwtl sbb fstps and cmp sahf shr inc push mov out fs mov ret push scas jae or inc cmpsb mov cs pop movb dec dec sbb sbb pop ret dec dec push sbb inc mov xchg ss mov fcmovne jecxz jne sbb bound push inc inc add pop fadd das mov or dec xor loopw xor sub mov xchg enter lret imul xor fldenv (bad) es js in add mov xor mov in in leave push out fstps fwait cmp lret movsl cmp ret push jns and (bad) icebp cs xchg mov cmc popf push orb lret imul mov lea xchg cli pop popf jnp outsb orb cmpsl add stc fdivl ret jns dec outsb push mov sub shr cmp pop outsl fmulp or das ljmp lret and pop jb enter js (bad) movsl jbe push cwtl fs inc push ficomps pusha sbb in sub dec into inc fsub lahf aaa fisubl push pop or fimull xor popl mov adc xchg mov in pop daa mov fnstcw inc or xor popf mov in adc pop lds daa fwait mov xchg mov mov dec stc bound jo add adc mov adc push push cmpsb cmp sarl inc mov mov inc mov clc push lcall nop data16 mov outsb fdivs scas fsts sub inc and addr16 call orb push or and mov xchg xchg add (bad) and out es xchg imul xor out xorb xor mov add aad popf into add push fmuls or gs adc pop lock mov pop (bad) frndint adc fstpt inc xchg mov inc sbb push sbb jmp clc sahf lods movsb sub (bad) dec adc popa cwtl cltd sbb ret adc mov pop jge mov rorl daa xorb push les stos jmp and dec mov into loop add jmp fisubl cmp xchg inc push js insl les in adc mov pop movsb test out test or (bad) cmp inc push xchg push popf adc clc cld sub insb lret or sbb lods or pushf popf and mov cltd scas fwait xchg nop jp repnz jno sbb mov or (bad) iret out push fistps inc test cmp adc insb pop sahf and or cltd lods mov mov int3 push mov pop je test xchg lods pop sub pop sahf xor sub push xchg fidivrs adc dec pop mov adc lea ljmp stos popa dec pop cmpsb aad fcmovne lods scas in or jle fadds out lea mov xchg mov pop shrb xor aad (bad) jb loopne add stos add daa push cmpsb clc iret adc shrb cli xchg sub mov dec (bad) xor imul or negl and xchg inc pushf xor bound jo jns loope arpl in and adc fwait cmpsb lods scas jo ret cld lods add iret add dec aaa xor ljmp out test xor idivl fidivrs pop (bad) outsb mov aaa pop jmp sub dec movsl call mov xor push xor push jns mov nop sub lret xchg jp inc xchg lret jle lret jle iret sbb imul xchg dec mov cmp jns jae xchg mov adc mov leave test and fidivl pop xchg jbe pop mov push insl repz xor add cmpsb stos mov add cmc add test (bad) jmp (bad) push pop jo jae bound out imul xor sbb pop inc setne imul mov lock cld ss mov xor or cmp (bad) mov mov mov mov pop mov hlt xchg and lahf or jne ds (bad) adc mov test stos outsl movsb dec movsb (bad) aam cmp push lcall mov push outsb mov cmc jp scas adcl out jo pop sti jl inc jecxz aas in cld jae repz scas mov pop jle push out jnp,pt mov bound sti push pop das out lahf dec arpl xchg pop loope inc inc inc and jecxz adc mov aad cmpsb jns ret insb vmread mov es or rcll sub mov push out (bad) and ret jbe sahf loope inc ljmp cld or out ss or std mov (bad) mov mov mov mov mov insl cmp cmp (bad) push iret lods scas pop movsl lds adc notl aad xchg repnz test jne aas mov (bad) fstps cld pop inc ds sar pop xor cld loopne pop iret (bad) fsub dec xchg adc jae js add xor sbb mov add cmc fcmovu pusha rol or mov add sub sti jl mov es cmp inc dec mov bound cmp aaa sub push add adc das into (bad) aam cmp into jl fldt sbb out in inc dec adc inc sbb je and sub inc mov testl mov jge int3 jns pextrw inc pop jb (bad) insl pop rorb pop mov (bad) pusha pop sti (bad) cmp and inc cwtl dec dec loope xchg inc push xor jle out repz sub jmp fwait inc adc movsl cmp mov gs lret dec mov add mov xor les xor inc jb movsb jg mov and cld in aaa arpl mov xchg xchg fldenv lret dec clc cmpb pop pop popa das sub sbb int3 mov cmp fistpll add nop mov mov xchg sbb or lods xchg pop loop lret pop fildl push aam dec imul push or (bad) stos or andl cmp jbe lahf outsb lea repz sbb adc pop push adc mov sbb xlat aam jb inc pop sbb adc cmp mov or enter mov popf (bad) data16 in mov push lock mov divl sti xchg sbb (bad) fistps daa mov out add outsl sbb push or mov inc fsub mov push jge lret mov or push out xor mov loope scas cmpb js jnp inc pop jbe mov aaa adc fs aam xor push cltd and mov inc mov outsl pop mov in xchg repz push mov (bad) dec lods dec mov inc incl xchg (bad) divl (bad) shlb (bad) xor fiaddl and in (bad) ds dec lods call mov int xor push xor jmp subb in dec mov mov sahf orl pushf push mov jbe pop fnstsw push lock sbb pop sbb in xor sbb outsl lds dec stos lods andl xchg loopne or xor push mov lds int3 jmp test test lods out es ss pop iret shlb stc add sbb or pop mov lods pop dec loop shld ret dec ljmp outsb mov inc cmp ljmp inc xchg mov les add push aaa push mov pop add in or push jg leave mov out int3 jb dec lock xchg in lret jae push xchg xor cmp lcall mov mov mov mov mov daa mov lea mov les nop dec adc int pop mov pop fucomi rorl add xchg xchg add inc sbb adc jl movsl dec xor dec jp pop and out jp cwtl bound cmp je and les rclb popf cs mov cs ljmp add sub test adc push cmp or andl mov hlt mov iret into scas test mov gs hlt add int (bad) and mov jb aas mov addb dec test jle stos movsb shrb fsub aas idivl mov pop xor sub sti insb sub xor pop sub sbb cltd bound mov push push push inc (bad) jne pop insb push sbb aam cmp and sbb test clc mov lret loopne out and cmpsl adc lret (bad) daa inc push or jp,pn xlat dec and dec add dec mov add pop in sub neg pushf inc pop shrl mov lods adc push pop push aas cvtpi2ps dec stos ret jp cmpsl cltd cmpsb je cs in pop mov cs fsubs pop arpl mov jae imul pop sub pusha andl xor (bad) hlt iret xchg sbb sti dec movsl in add cwtl leave xlat push in jge or gs lcall ljmp fisubs mov popa fwait add jg out nop and cmc insb out out jle scas and mov (bad) out repz adc jmp stc dec test cmp pop scas cmpsb adc popf pop fldcw es jl out mov cmpb fxch jb and fwait jp rcrl push sbb addr16 dec add in sub mov mov scas inc add insb cmp pushf lods xchg mov mov push mov xor inc or js cmpsl ja push faddl pop call cmp jo and sbb mov sub and faddp push std xlat mov lea jno es pop pop mov icebp popf and js push mov sub mov or jo sub dec mov das testb jo xlat pushf out cli push insl adc lods ljmp fnstsw jp and in jae loope lea fwait xor xchg outsb mov push pop outsb mov push cwtl clc dec mov adc ss pop in aas ret dec lret mov push je mov sbb aaa cld mov cmp jl fs and mov aad daa into push sub scas and and cmc test dec (bad) leave jnp pop rcr mov out push mov popa cmc aam mov mov jl rcll std xchg ss cli scas vandpd inc mov aad xor in in inc loop sbb mov mov dec addr16 xor mov lahf mov fnstsw notl xchg sbb pop mov mov fcompl fimuls test adc mov mov push mov sub subb lds dec mov cmc add mov int3 dec pop xor aas orb sbb sahf push in enter adc ret sbb nop loopne mov mov cmp jl stos aad bound add mov orb mov (bad) loopne lret ret daa js mov shr es imull pop and jno daa mov mov sbb ja loopne xchg inc and (bad) stos xor dec inc dec sbb imul nop sub jp pushw cmp arpl fadds cmp out mov xor and cwtl mov imul js xor out or aas pop movsb mov adc mov pop addr16 mov sub ss divb cmp xor testb stos xchg push cmpsb push mov mov js push xchg mov adc in dec jns mov jp sub inc scas pop sbb inc out dec add cmc and add mov sub xchg sub or adc pop scas xchg inc and sbb addb imull fs sub xchg daa sbb push lock add in int sub adc cmp pop jge push fdivr inc mov mov xchg mov fbstp mov mov adc mov call test jmp lahf ret or outsb popf in xor xor shlb adc fs fsubl mov fidivl dec in dec out dec jmp xchg sbb and mov iret lock cmpsb sbb int3 scas sbb je mov sbb outsb jns push into iret or add stos cld insl jp scas xchg fbld pop (bad) cwtl mov aad ds sbb mov mov xor sbb adc cmpsb mov fwait ss test insb jp nop inc inc sbb in cmp out add and stos shll cmp rorl lret xlat loop adc daa stos idiv lea mov fcompl outsb (bad) mov adc ja cld add cmpsb popf loope sub mov fcmovbe mov push out cmp nop push xor lds push cmp xchg push dec leave sub xchg jnp cwtl inc push mov cli cmc sub stos insb adc inc and jg jmp divl xchg int and dec add aaa cld shrb gs adc imul xchg xchg nop test fidivl mov aaa mov xorb xor lret mov cmp loope lret inc mov xor jecxz fs xor pop prefetch or loope je rcr pop jnp popf pop and pop mov pop or movsb sbb pop adc lods adc sarb aam mov lds sbb cmp leave push pop loop ret pop fiadds insl int3 int3 mov outsb ja mov imul ficomps idivl les dec pushf adc test outsl rclb mov mov xchg inc adc movsb add enter nop ret clc pop cs jns cmp mov xor scas pusha test inc mov mov jg jp cmpsl fdivr xchg ljmp outsb imul clc mov mov xchg lods mov lret daa cld les mov mov ret push mov cmp ficoml lret pop mov push cmp xor mov cmp mov mov cmp imul icebp sub cltd cmpsl sbb and nop call mov pop mov hlt inc dec add fsub mov fidivl addr16 adc hlt adc push adc xor stos psubsw xchg rclb sbb dec cltd inc imul mov cwtl cltd (bad) xchg and filds jbe xor int cmp add inc popa test push cmc sbb sub hlt or push lret fdivl in sbb add jns js jp in xor nop in mov ljmp fistl push fcmovb in inc sbb dec test ss xor dec mov xlat cs push cwtl fstl mov add and lret daa pop inc lea aas jb cmpb stos mov lcall sub aas mov inc xchg push pop mov pop cmp cs sahf in (bad) inc mov mov dec leave scas and xchg xor ret sbb sbb xor mov add fistpll (bad) sub xor dec adc pop subl out fbld cwtl xchg and out es cmpsl add dec js aad cmp arpl sub test stc mov movb mov test mov or cwtl (bad) gs mov test pop mov or imul cmp jns fldcw inc gs fxch out out mov add or xchg xor cmp out dec arpl mov stos loop cltd sbbb add sub js mov test dec jge call inc xlat sbb lret and pushf dec jns repnz push or cmp jbe mov sub adc fistpl test xor add mov jbe mov lods dec dec mov shlb add daa cwtl inc cmp jnp inc mov dec add jle imul add rcrb inc bound stos ret fsubs jp xchg cmp mov fidivs mov stos sbb mov rcll jbe nop push mov sarb sarb sub addl inc pushf testb inc xchg lds test sub iret pop jns cmp (bad) into lds shr cmp mov test mov clc inc mov aas xor aaa and imul imul ret adc xor lcall add pop repnz aam sbb inc nop xlat in test or adc (bad) cmp pop das bound adc and (bad) mov jg int3 mov mov cmpb adc adc cmpsl in sub dec push vpaddusb sub cli leave fwait or inc stc push sub cs cmc adc lret push movsl pop push imul xchg shlb insb movsb movsb out dec lock in jb lret std cmpsl and push add pop cmp cmp cmp lcall or pushf push fmulp pop aam stc dec cs cs mov cmpw push test push ror aas cmpsb fstpt mov mov (bad) push inc lret jecxz mov mov sub push add and cwtl push jl clc sub jnp mov out mov add xchg add push sbb in xchg sbb xor xchg cmp or mov inc loope (bad) xlat inc inc dec stos adc shl lahf add loope outsl jo stos or mov or loope xlat jmp std mov and cli and lods pop pushf mov and fcomi shl inc in inc adc scas dec or out iret out seta lcall xor or mov mov sbb arpl lods pop sub punpckldq xchg lods ret add dec dec mov cmp loope xor push hlt clc xchg inc pop out adc inc (bad) outsb mov sbb cmc adc cli mov test lcall adc pop jo sahf jg adc out icebp ret (bad) jb and outsb push cmp ja inc push xor stos inc negb xor inc mov sbbb call scas jo mov roll adc and mov icebp pop sti xchg adc adc cmpsb lds std inc mov loope pushf inc nop lock push inc mov pusha lcall xor out lea or cld dec push lock push popf mov popf dec sub push xor sub test inc arpl xchg ja jns popf ss and mov xchg jl jo add adc push pop lods mov sub jge cltd lock invd adc adc lea mov adc imul xor jmp mov mov sub cmp inc popf jmp (bad) cld aam mov jl inc stc sbb shrl cltd fdivrs cmp sub xor adc push sbb cmp stos or outsb xchg iret sbb iret in sbb inc sbb cmp pusha popa push enter push inc push bound call fsubr fiaddl xchg cwtl jl fdecstp add lret dec stos inc das ret aas push xor mov sub nop flds cmpsb mov add movsl testb repnz dec dec sahf push and shrb mov xorb pop mov mov fcoms fisubrs adc pop jmp push decb ficomps aas push lods mov adc sub imul mov push cmc jp cmp nop adc fistl mov gs sub mov inc fsubp repnz (bad) in loope xor or es das in cmc jnp rorl movsb mov cmpsl xchg rol xchg jl lods inc mov jnp mov pop xchg and stos outsb cmp lret mov xchg and push fdivl pusha mov pop pop add int3 jno inc test dec or scas xor and (bad) pop mov daa dec adc jle or push sti or mov out icebp movsl push xchg mov sahf cs repnz sub stos loope pop mov and aad sbb dec sub dec (bad) push xor ret mov adc pop or push fnstenv add addr16 repz jge stos mov stos xchg jecxz in cli scas loop xchg dec adc or stos mov dec fnstsw aad daa mov push push not dec push cs ljmp xor (bad) les jnp add xor jl jmp lea push in scas into jne les into and lcall lcall jl js xlat ljmp int3 enter data16 pop mov mov lds ficomps mov xchg sbb jo push pop adc sbb in insl cmp push movsb mov jo loop jl push test icebp cltd mov xchg inc or pop jbe mov stos and hlt movsl mov das rcl mov push mov loope sub std inc inc fs imul sub fists popa mov mov xchg sub sub cli lcall outsl sub ret jl cmp rol xchg mov mov xchg and mov scas ud1 adc pop jbe fcoml xor lahf setbe adc xchg hlt cmp or scas out cmp notl pop adc cli lods arpl aad in push outsl int sbb sbb xorb movsl lods movsb mov shrb pop and push or pop mov sbb loop std fisttps adc add cmpsl cmpsl jl xchg rcl add pushf mov (bad) clc sub pop xor push shlb bound lret (bad) hlt iret data16 lds add pop inc data16 stc fistps es adc ja sti cmpsl xchg mov addr16 test adc mov and lcall add std ret cmp dec sub xchg and push or rol sub jb daa fdiv add and lcall pop mov adc sarb popf add fldenv cld sti nop stos call gs dec dec push ret lret dec stos inc rorl icebp leave or jecxz fdivrl cmc cmp push stos icebp add js jbe add sub and sub or lods and std dec or dec in jns stos mov (bad) pop mov cs popf mov sti xchg sbb xor cld mov push mov jle aaa cld cmpsl pop pop fstps das lods subl (bad) xor rcr (bad) push mov xchg pusha jno cmp cltd mov jbe outsl jmp push push xor push inc pusha pop xor in js lock or enter popf cmp scas sbb and sub lock and insb mov imul pop pop push dec or cwtl add vunpcklps fldl imul pop mov jge mov dec dec imul or subl sub fsubrl aad std stos testb sbb xor mov jmp jne jp push subl pop nop bts sbb push push jno cmp stos mov fdivs cmp rorl js cmp inc mov sub popa hlt pop call jecxz pop or cmp out cmp xchg inc cmpsb test jno adc dec popa adc inc pop subb ss loope ficomps (bad) sti outsb insb cltd dec inc stos hlt push imul div pop in mov jmp lock cmp and push movsb xor lahf pushl adc scas fmulp (bad) cmpsl mov cmp aas sbb mov call imul outsb int mov int and in xchg sub test mov (bad) std xchg lock jno and push test outsb sbb mov subb ss ja cmp dec dec mov ret aam ret mov push out mov stc push aam jmp dec xchg ss pop dec push add dec mov mull (bad) inc lret jmp dec and sbb in adc pop sub and incl add (bad) push add loop or fstl jae pop push add ret mov xor mov adc pop lcall adcl xlat sti out push or mov nop shr pop xor cmp adc pop fidivrs xchg xor adc data16 out sub mov sbb aad jnp cmp (bad) (bad) xor mov lret (bad) adc push dec jecxz les mov inc negl dec in push addr16 inc xchg das das sbb or push dec insl push xchg jge mov push les xchg divl rcll pmullw imul inc inc bound mov daa cmpsl adc cmp mov gs add fildl push mov test xchg jbe adc dec mov fbld test sub mov into rcrb sub sbb inc outsb flds (bad) sub fs cltd insl pop repnz jb movb into movsb pop js rcrb jns xchg movsb lahf scas push rcl xchg idivb loope rcll in push push loope leave sub out idivb stos xchg push insl insl mov loope xchg mov sbb mov out stos push imul ljmp sbb jl pop subl cmp cs repnz pop mov cltd nop dec cltd xchg loop fwait jns idivb jmp leave enter dec jl push fildll cmp adc sbb push iret xorb lret mov mov (bad) mov pop mov pop xchg (bad) xor sub rcll jno xor mov sarl test mov lods pushf lods dec or add shlb in push fsts loope cltd inc push xor lahf aam sub jnp das testl inc jnp into std pop dec or stc bound pusha ljmp pusha data16 fnclex adc xor (bad) mov cli test xchg jb outsl jle add scas idivb mov int pusha (bad) (bad) adc (bad) and sbb in lods cmp pop stos inc sub movsl inc push push in jp sub adc adc lret shrb sub jg addl movsb mov xor xor notl xchg jns scas cmc popf sbb mov hlt fcomp cmpl scas push pop cmp shrl mov jmp notl nop xchg cs sub jmp xchg loop scas fbstp pop out dec shlb loopne fistl xor fdivl cmp xchg fld ds pop es in cwtl cmp jmp push lret sbb ficomps repnz out pushf flds jns bound fistpl jae iret (bad) cmp push insl fidivrs inc xor and (bad) jo mov movsl or clc arpl adc jae and jp imul mov and ss movsb or fists pushf or pop fs and fsubrp pop pop sbb out (bad) mov mov pushf ja clc inc jg mov (bad) mov lahf pop xchg mov fildll data16 addr16 scas jp xchg add xor xorb stos or mov or mov xchg gs imul dec std out pop or xchg xor les mov jmp or nop mov push scas ss cmp out dec push je adc sub sub cmc loopne ja ds loopne mov sbb dec test arpl stos andb es ljmp sbb hlt movsb xchg repnz filds xchg inc mov decb pop jo or push or (bad) (bad) jge (bad) stos insl mov (bad) out and xchg xchg pop pop xchg call hlt push sbb gs cmp pop adc mov int3 mov lcall add addl jp xchg pop mov popf cli cmp (bad) xor push lds jmp add lret (bad) test (bad) pop mov adc xor xor lods jo fwait mov jp shlb lea push ja pusha adc in and shr adc sbb push sbb add push jmp cmp cmpps or (bad) je xchg adc repnz mov loope jl insl add cmp xor fisubrl outsl fwait cltd mov test aad pop pop ljmp mov leave lock and sbb xor repnz insl fiadds call sbb dec inc inc jbe xor aad jle jb das pushf test xor push fistpll push mov lcall pop push stos jb jl enter sarb cmpsl cmp and imull ljmp mov dec dec (bad) out insb sub or int3 aad push inc cmp xchg in stc fiaddl imul imulb push fs pusha dec and mov inc xor bound enter jl jno mov gs xchg stos xchg aam or in cli fwait lds and xchg xor jmp data16 out out pop lret and cli add out mov mov push rclb daa mov push scas in testb gs nop xchg lods pop cmp push sub inc ss mov imul aas lahf xlat push cmc enter inc aas (bad) (bad) sbb ss mov push xor imul call mov icebp in ljmp mov cwtl mov int mov movsb xor inc outsb cmpsb sub adc push out pop inc stc inc into aam mov (bad) lea xor and mov lods ror and repz jp cmp mov pop fimull inc add test inc inc idiv push sbb (bad) and or loop rcl cmp mov (bad) fdivrl movsb hlt sbb cmp mov push cmpsb mov pusha sub add sti movsb iret mov cmpsb or dec push push xchg fs cmp or lret pop cmp inc mov push adc mov adc imul aam mov jne mov or lahf shll mov pop cmp fsubp push inc ljmp inc xor sbb pop js pop xor bound jecxz in xor push xor dec ss mov pop mov pop rcrb jne jne mov xor inc popa hlt push aad jno xor jmp gs fimuls adc jle imul push repnz mov cltd inc sbb cmp rclb mov (bad) jl js adc pop mov mov subl out dec (bad) in gs (bad) push mov pop cmp insb rorb or xchg jl jg pop in mov int pop enter cmp lea add enter inc mov dec mov sub or add sti js push cmp pop mov dec test inc mov adc into ja loope and xchg shl outsl es xor inc in pop jmp mov orl in cld arpl mov pop xchg ljmp pushf jns dec dec dec iret adc xor les push xchg dec jg jno mov inc in push cltd adc hlt loope ja out mov push sub test jne xchg ret sbb xchg test pop stos pavgb jno pop cmp inc inc loope stos imul psrlq and je mov test add mov xor cmp std mov out cmp dec xchg cmc les daa cmpsl xlat mov lea dec sub jl pop sahf xchg fcmovb or repnz in mov aad sar mov mov out jnp in fnstenv out sub (bad) xor cmp lods movsl sub sub dec les and xchg xor xor lcall dec add fisubrs fidivs mov push lods popa inc xchg (bad) arpl dec std sahf stos popa (bad) aad in jg add sub mov popf jge flds aad lods and and jp or mov (bad) dec test and cmp mov xchg ja sti xor in sub add mov ret adc mov jo lods mov add (bad) js loopne mov xor sbb jl add movl shll in sub adc clc mov inc adc inc sbb pop xor enter cli push cltd mov sub jle sbb test aad adc ret sub inc std je test out shlb fdivp or sbbl cmp cmp pushf push mov lods in push and push imull sub push sahf mov imul mov mov jno shl pusha or xor std je lahf aam lret inc inc mov out lods push mov mov fldcw sbb jno xor fistpl xchg fucomp vminps fisubl lods shrl lcall push ficoml aaa inc push push addb inc jne or jb aaa fidivrs decl jno mov (bad) cmp mov clc mov jmp inc insb pop aaa sub cmp jnp push xchg mov add lcall lods jnp pop and sub jecxz cmp cltd out sub push xchg pop xchg and inc pop fisubrl int fistpll xor mov xor xchg adc popf shll std xchg mov lret loope aam pop gs hlt push lcall pop pop mov imul std ds aad push shll rdmsr sbb dec bound jbe xor push loopne mov mov out sti adcl in ficomps cmpb xchg fcom sbb jp loopne xlat sbbl cld xor xchg insb popf cmp jne sbb sub jmp mov es mov adc fldenv ja mov (bad) into or nop es xor ret inc xlat cmc mov ret dec cmp ljmp mov setb shlb jbe popa adc (bad) es cltd mov pop push dec and mov or int xchg and cmp xlat inc xchg test sub (bad) mov cltd inc fldl2e inc add sub and js inc es rcrl add sti mov xor idivb jno cs mov add test std sub (bad) loop cmpsb sbb shrb idivb adc mov sti ret push mov mov das xchg ljmp (bad) sbb push push push and jns xchg adc push inc les stc mov mov jns subl adc dec cmpl movsl cmp stos fisttpl out sti sbb jecxz lcall jecxz pop add push (bad) fadd aad sbb out cs xchg xchg aad xchg movsb cmp in lds cmpsb mov fdivrp shrb fimull adc pop or outsl addl and xchg mov leave jecxz jp push mov test out pop xchg push xchg cld data16 divb repnz dec jmp sbb out mov inc lret scas out fists mov (bad) loope cli outsb imul lret xchg push xchg inc test mov jne test pusha mov insb les push jo fwait mov mov insl adc mov push xlat xchg je push clc lcall cs mov mov and pop xor shlb mov lret push stos add sbb mov mov mov lock ret sub cmp jno imul xlat in cmp in pusha mov xor push xchg hlt lods pop repz inc sbb leave lahf pop and aam inc insb jo push bound gs mov (bad) fnsave mov inc ljmp mov cli xor mov push aaa fstpl icebp or push (bad) jp inc out leave into lahf test or stos sbb add xchg pop test lcall andb mov pop lods in fisttps push fs inc cmpsb sbb ret lea inc inc arpl adc outsb pushf iret sub jle jp test adc call test movsl mov cs mov jnp pop xor push pop fsts outsl sub icebp pusha (bad) mov mov adc xor sbb push jge push mov xchg inc xchg movsl mov lea stc jp mov lods bound push cwtl insb mov mov arpl cs (bad) adcl adc add and inc gs mov std jno inc or or and pop ljmp fwait pop es ds out xorl les xchg push xorb pop loopne or lcall jecxz bound out pop leave fsubrl jmp cmpsb inc es or scas and push cli jmp and push dec inc cwtl cmpsl jge xchg (bad) lock mov lcall sub mov icebp lcall loope mov xorl mov loopne imul xchg mov das bound call fwait dec cmp push je neg int das sbb (bad) xor pop mov mov jmp pop push or add xlat in pushf jecxz xchg adc scas xorl out mov fldl ds in fs jae in cwtl inc enter fdivr hlt pop jecxz movsb push or divl test jmp push sti shl inc inc lret test mov sti fnstenv cmp test adc fnstcw pop inc arpl movsl sbb out shrl jl or pop loope push cwtl mov xchg jns inc pop sbb jo adc inc shll iret adcb or sbb or jno jle std lds dec (bad) imul jnp lods mov or or jmp adc cmp cmpsb ret stos fwait imul cmpsl and push icebp ss stos mov xchg faddp arpl push pop push and movsl adc and mov mov shll cmp lret into or mov sbb pushf sub push push mov rolb jnp inc push ficoms cmp jg stc cmp cmp leave mov push push cs out (bad) and jp and in adc inc pop mov popf mov test loope or pushf push push dec call mov xor stos cmp movb pop iret push sbb inc out push push cmpb push mov sub hlt pop cmp loopne (bad) mov std ss pusha sbb lods mov loope punpckhwd pop dec sub fidivrs popa xorb mov xor xlat shll fdivr jne adc arpl xor xor pushf lock rcrl out (bad) fcoms and insl cmpl ss scas mov aaa pop arpl push add in js daa gs inc sbbl cmc sbb xorb mov xchg lahf inc mov cwtl icebp push mov lret movsl mov dec jo xchg iret mov sbb aaa add fsubl ds push jo jns shll inc or cmpsl adc mov add jo ret push jns mov into stc mov pop sub out xor testl (bad) jns and sbb adc pusha dec imul sbb mov dec test adc leave cmp hlt xchg or rorl or icebp sbb pop ss shlb pop (bad) push push push mov jno mov adcl outsl (bad) loope dec add mov pop pop mov cmpsl ljmp stc pushf fiaddl mov xor sahf sub out sbb js lret in and (bad) sbb mov sub jae pushf mov push cmc mov fs and enter jae sub ret xor jge xchg nop add mov xchg in leave repz popa push xor push xor notl adc push push sti movsb xor inc cmp cmp roll pop jne aam (bad) loopne sub jo mov or aad (bad) jmp adc popf mov fnsave mov mov imul fs sbb imul incl adc aad xchg lods int inc pop out pop mov add stos xchg push pop push mov pop dec mov or jg fstpl and xor jne std mov std enter fidivs jmp dec movsl add rorb mov adc jns stos sti aad push mov addr16 sti mov sbb xor ja sbb pop inc leave aad outsl aaa lock dec lods mov movsl and xchg push jmp and outsb nop jne lock xchg xor jmp sbb aaa lret push xor inc sub (bad) mov jle lods xchg adc xchg leave scas inc out jae stc rcrl clc jno jmp fildl lcall mov jge cs bound dec sti imull out pop or sub lds inc cmp adc and loopne movsl xor or push jle push or adc sub sbb insb mov cmp and fistps sbb jmp (bad) sbb out sub (bad) sbb inc sbb rcr or das int jg xchg stos sbb xorb xchg in subb adc imul idiv js das in pop mov les jnp or out xor test adc insl insl xor jecxz adc xchg addb in clc cwtl jmp mov movsl or mov es in sub mov adc testb scas or mov pop mov scas ret inc stos and inc lcall nop jl imull fists scas lcall add jbe cmp sbb stc test fucom nop add imul sbb jns jnp inc les cltd adc dec shlb jns and add bound (bad) mov (bad) dec mov or and out lret cmpb sub lea imul call adc leave xchg in pop fcmovne mov inc test mov pushf pop xchg sbb aad test out dec sbb stc xchg adc sahf sbb into sub jge add cmp loopne adc jl mov loopne dec js ficompl jns xorl xchg fwait ret push sbb dec nopl inc mov lea mov xor ja movsb lret sbb adc out testl adc xorl roll scas cs push pop cmp repnz movsl test push xchg and pusha and jl lret test jl aas jl dec sub sbb inc dec mov sbb and scas xchg mov xor xchg outsb jo cld push (bad) fs stc bound (bad) and add pushf cs jo mov dec jmp js inc lret mov mov mov das sbb pushf jne push adc fisubs or sbb mov and cmp hlt sub sub sti jg jb stos fs and sbb stc xor subl out or push in repz fistpl mov imul inc cmp mov addl adc dec xchg aaa xor mov push stos dec cwtl or pop das xor pusha lcall add fdivl pop lods in call or imul scas repz jmp dec dec jns pop mov pop or out dec push insl scas push fucomip fildl (bad) test jne push subb cmpsl mov pop mov cmp push cmpsb idiv pop mov and mov shr inc addr16 dec cs loop xorb add xchg pop inc and or add loop mov mov inc mov mov xchg dec xor inc xchg sahf jg adc icebp hlt das sbb sub jecxz lcall js add mov mov sbb mov xchg frstor or mov imul fwait mov sbb xchg js jmp jl (bad) popf rcll sahf rcr sti outsl jbe popa and sbb popf int and add xor rorb lret jno rcll xchg popf fcom ds std push mov and stos lahf lahf mov orb sahf or pop lods xor int3 pop test rclb stos scas inc dec into pop ljmp adc dec iret int pop jmp repz and dec add push lods xor mov mov imul aaa mov cmp int3 mov sub push xor es jae dec nop cwtl mov cmp mov insl dec cmpsb test (bad) or iret insb jb dec les cmc or and inc jae cltd addl sub int xchg (bad) (bad) mov test push frstor fmul lock leave lds mov out cld cmpsb arpl cwtl xlat cwtl sub ljmp aas jo inc push and insl mov mov rclb rcll int add adc fsubrl in dec add jg ret repz add push rorb orb add (bad) mov inc inc in cmp lret cltd xor loop les outsb inc lods stc ljmp jbe icebp xor mov scas movsl jmp cmpsl jne out sub jo mov cmp adc push das lret ss orl movsb jns test cli add push aad pop pop enter dec ljmp and pop ss or addb dec decl dec out and mov mov and daa lods push adc and fwait pop outsl roll arpl mov cmp popa mov ss xor bound mov (bad) out out jmp add xor leave xchg or jmp jbe mov insb aad rcrl iret scas pop mov pop adc div mov rorl and mov xor daa gs pop mov and cld jmp jle mov in jno call push scas adc jmp popa dec aas call (bad) movsb pusha addr16 sbb sbb mov or sub scas into jbe das call dec icebp push mov sbb fcoml cmc push mov or mov test dec (bad) fisubl in add cmp stos add jnp mov repnz outsb aam xor lods stc stc add adc test jge rclb cmp jmp outsb pop jmp mov sub mov push gs and push ret or sub xchg popf arpl mov and inc (bad) clc orl fwait lods subl lret pop (bad) fsubl pop pop jo in jmp dec pop xor movsl jmp aad mov in popf jns,pt xor stos add ljmp and push andb dec popa mov loope mov mov or les jns mov inc outsl mov scas cld clc out ret jp orl testb lcall pop fimull mov add inc dec out outsl stc and and test cmp (bad) ret fstpl mov (bad) sahf or sub fs das loop adc movsl mov sub lcall cmp notl lret loopne hlt xchg movsb sub xor imul pop mov sbb outsl pop jae rclb and cld mulb push xchg sbb cmp clc les xchg test xchg lret stos cwtl data16 dec outsl push mov add inc mov call (bad) and cmpsb mov inc dec push xchg aam add popf jnp fiaddl mov dec pop sti push mov push mov ret xchg cmpl inc mov pop ss jne test mov inc jle nop xor dec cmp mov adc inc test test icebp insl dec xlat and clc loopne dec dec scas or lcall xchg xchg in into add jo inc in mov out int3 repnz inc leave and in and into inc scas adc shlb outsl aaa mov in push push ret cmp (bad) xor out imul xorl fimull inc ret out mov or mov push std fsubl or push sub gs mov push inc adcb adc sbbl out mov lods daa pop fsubrl mov aam inc mov mov pop clc adc pop add inc inc jmp loop cli pop test xchg dec jl cmpsl addr16 or sbb push mov adc jns lahf stos dec jb adc popa movsb or pop inc daa jecxz cmc fwait xor xchg lret ret xchg mov xor daa or in pop xchg lahf or pmaddwd sub iret lret stc nop idiv push sbb sub addr16 dec out mov push fucomp icebp pop clc mov cmpsl es data16 inc in shlb (bad) fisubrs xchg filds subb xor push mov xchg test pop or fnstcw xor mov xchg inc mov data16 daa xor bnd cli jp mov ljmp stc scas fdivrp sahf xchg lcall cmc (bad) jp std lock push mov arpl or xorb jle insl je cmc lea ret test aam scas adc enter rcrl adc aad (bad) dec mov inc ret in arpl sub loop mov aad cli movsl cmp nop xchg sarl or or lods pusha (bad) cmp lds ss ja cld stc bound mov aas mov test fisubrl lret cld pop outsb shl lock mov lahf cwtl xchg je xchg bound mov pop hlt cmp movsl push (bad) cmpsb loop imul jecxz adc inc rolb into xchg xchg ja cmp sub jae,pn out shll in cwtl subl out hlt sbb movl dec lock mov fwait int3 int3 icebp mov out and insb cmp jmp inc xchg (bad) and sub add jg incl sahf xor fmull out sbb mov jne fsub cmc adcl mov xlat rorb lcall xor adc out push jnp sbb or pop mov jo mov sbb insb mov movsl xor xchg mov xchg jne inc sbb mov mov lcall push cmpsl mov add cmpordps mov lock mov push mov shll mov addr16 jl mov xor (bad) mov pop and loop xlat inc (bad) adc gs in push xor call sub icebp out insl fwait scas enter dec mov jbe ret test jae dec (bad) add sbb mov clc mov pop lock add add in lret mov cld sub push mov dec lea dec mov or sbb stc mov cs std out arpl adcl bnd arpl cmpsl and pop add pop jno fnstcw daa push insl cltd cltd lods push aas push data16 jg xor jns lcall or inc bound out or imul cmp out mov (bad) jmp inc stos mov out mov aas mov sub add aam adc mov push add js mov cli mov cmc outsb repz pop or pop xchg andl loope mov iret push jo dec test lea mov xchg push outsb in push add sub rcrb bound mov cmp aam pop xor pop cmp cmp or fs cmp mov (bad) imul scas lea test ljmp cmp idivb xor shlb jno mov sahf outsb jns and fimuls ja movsb clc nop in pop mov stos imull (bad) lcall jp mov pushf fstp lret push xchg pop in sbb stos and repz mov mov loopne fsts fnsave inc inc lret xor mov jge imul mul test push cmp xchg stos mov icebp mov mov adc cmp test xchg xchg (bad) push int3 jmp test jae push pop sub xchg mov (bad) jmp cli fistps add pop push xor or add mov lock es xchg cmp inc movsl (bad) popa jnp pop stos inc je jp push and and jecxz in sub mov jne sub pop adc xchg xor enter mov pop cmpsl in mov mov dec push daa sahf test cmp shll scas (bad) bound (bad) cmp bound imul pop outsl pop push lods fistl jmp shll add cld push scas stos or les call or xor or cmp call push and inc inc jmp mov mov add mov mov imul pop lods cmpsl jne xor dec xchg cltd pop pushf ds out js push (bad) add aad jns sti out xor scas sub ret mov imul mov clc roll cmp (bad) repz or pop sub xchg xchg fwait add inc pop jmp dec adcl cmpsb rclb jecxz and mov and cmp movsl not jne lret adc movl scas das cmp jo adc fdivrp addr16 and in push xchg xor in jns mov test add inc daa mov flds (bad) stos cmpsb mov fiaddl outsl lea jb dec sub or mov mov push mov adc adc mov sbb jns xchg fcomps jl xchg icebp fldenv push ret push pop pushl addr16 scas mov ds add jae mov and ret jl pop shlb mov jle repz xchg flds mov mul cmp xchg addl mov fidivl hlt xchg dec out push push or movsb (bad) push jl cwtl sbb adc lock and push pop cltd mov pop sub adc addr16 pushl mov jp push movsl lcall mov call dec stos or outsb xorl push mov js loope in push mov int jge mov in movsl inc outsl fsubrl dec imul mov ds cmpsb (bad) (bad) pop call cmp sub sbb jne lods inc add push fwait in and adc jmp arpl scas xchg movsb dec and les xchg out add mov ss jge add mov cmp mov mov in (bad) cmp jl lods xor sub repz pusha xchg jns push add xchg int rcrb insb pop out daa pop mov fnsave or cld cmp repnz divl fstpt (bad) pop jb popa cmp adc cmp xlat jno rorl xchg je movsl adc fistl test rclb cmc push inc je mov jmp sbb add mov mov lea cmpsl xchg mov dec mov test mov push mov addb and mov adc jbe test inc xor test orl sahf sub inc inc cli mov dec popf cwtl (bad) mov fsqrt jne pushf jg ds inc jge icebp add cld mov gs inc lret xchg mov pop dec inc inc aad jae fcmovne cmpsl mov in jecxz push mov xchg popa pop xlat cmpsb test aam jo mov fwait das inc addr16 cmp add out (bad) lds dec lds jmp sub mov sbb data16 sbbl (bad) inc adc cmc iret ja mov aam xchg outsb jno cwtl in jo in push jno sub and mov jnp loope add rorb icebp pop mov pop sbb xchg jae xor clc testl sbb mov or pop adc in stos dec enter cmc lock shrl out sbb lods out sub aad lret (bad) test fildl (bad) and cmp mov and dec cmp lret adc xchg jge mov addr16 push push inc popa and data16 int3 insb fcomps fnstenv and testb scas and ja add nop push and jmp or ljmp in pop pusha rcl adc xchg inc xchg addr16 mov stos aas js mov jo jb dec push nop xchg dec cmpsl cmp sub sahf or sbb and loope push cmp rol jl mov pushl rolb inc add (bad) jmp sahf movsb insl fisttps cmc mov les push loope inc loope jg mov push ljmp imul outsb add xchg leave sti ljmp aaa mov enter imulb mov ret (bad) std pushf cmp pusha dec pop add adc pop (bad) inc push loop stos jmp popf and pop in sub cld aas imul and hlt ret aam inc jbe pop pusha pop cmp fnstenv xchg pop (bad) repnz mov fs mov jp pop stos outsl scas mov imul (bad) inc mov push jo (bad) cmpsl in ret adc cli dec inc mov fsubrl dec mov outsl sbb rcl mov movsl or pop cmp inc aas std lcall ljmp cwtl aaa and loop dec cli repnz sbb icebp sbb repz test xor or mov mov jg js or pushf sbb out inc or (bad) (bad) adc sub sbb push je test inc test mov jo cltd cmpb push mov jnp sbb xor jae and dec cmp ja inc insb and idiv enter sahf jb fmul insl push and fisttps mov (bad) cmp or sbb mov popa mov movsl out js jl lret sbb pop pop cmp jge xor mov ret mov outsb das (bad) mov add add xchg sub ret push dec repz mov or into cmp or and in fldcw jne dec cld adc loope sub add and out insb mov dec jnp andb xchg sbb fsubrl jbe cli js inc push out adc std fidivrs mov mov dec pushf xchg roll jno add cmpl or pop test jne jno inc jo decl mov cmp pop mov (bad) jg int3 lods loop push mov (bad) sbb lock sub (bad) stc xchg pop lds mov adc std imul stc and pop pop sbb das inc imul mov xchg test shr pushf fdivr or in cwtl in out inc aas inc push push lret or and xchg push lret mov (bad) aam out lret dec cmp lods mov mov std out push repz cld fmul cmc jp push shrl push dec inc pop shr jp sarb scas inc sahf popf sub int3 fdivrs cmp xor gs ret and dec lds mov out inc int sub push and fcom mov loopne xchg xor ljmp (bad) dec cmp xor mov mov stos pop loope xchg stos jo (bad) and mov ret or sub pop mov (bad) pop insl shlb jbe push sahf adc mov sub cmpsl aam or gs jo leave nop popa push cmp sbbl add adc or lret test lret cltd shll pop outsl jp xchg ds adc jne mov imul dec dec ret aam xchg ja dec mov lret push (bad) or faddl sub out mov push and sub les xor mov pusha xor dec loop lods lods lahf push aad jns sbb lcall pop xchg cmpsb hlt inc push seta gs xchg push dec leave sbb int into jp dec sub push stos lods xchg lock inc jb ret mov dec cmp shl sub insb inc dec mov add (bad) mov fidivl sbb cmpsl or jecxz add mov lods inc pop mov push int fiadds popa sbb negl stc in clc jmp das pop add hlt (bad) mov and cmc dec sbb sbb orb mov test push pop push ret les pusha and dec mov clc jmp test test clc (bad) xor das lock scas cltd insl std cmp test cltd sub test shl stos pop cmp ljmp xchg fcmovnb pop dec mul (bad) insl jg cmpsl imul ds insl (bad) cltd or stos pop pop ds cltd outsb jg fimull js mov dec xchg les dec cmp psubd in js js push mov (bad) jmp adc test adc (bad) outsb (bad) and or cs mov inc test mov (bad) stos push (bad) int mov icebp jmp add or cmp jecxz (bad) adc jns clc movsl cld outsb mov mov nop test fcoml pop inc adc push outsb xor shll add movsb sbb adc js sbb loopne xor stos xchg jecxz adc xor repnz repnz lcall aas pop and aaa add sbb mov int3 ljmp or xor jle aaa cwtl fisttpl push lods lret sub popa lds mov mov mov xor std push ret popf adc inc jnp xor jbe call lods sub xor mov fbld and dec dec lods movaps test and push xor push (bad) sti sti es add lods shrb pop lahf movsl xor enter dec movsl jnp pusha or xchg aas push jb pop testb push ljmp and divl mov fidivrs std or xchg test mov push cmp fistl out push xorb stos mov jp pushf and dec xor movsl lahf loopne pop popa mov pusha leave mov inc xor and jno pusha insb dec fimull outsb in sub inc fimull ljmp jecxz int lock loope or mov lret jle mov jns jp in jno and pop lea pop sub and pusha push lea pop stos mov and cmpsb cmp push fdivp rol mov out add aas xchg xchg ficomps cmp push mov (bad) add mov test insl stos fwait add dec mov xchg idivb pop and sbb jno cwtl fdiv gs mov xchg int3 and imul (bad) test dec loopne gs mov loop or mov mov pop cmp aam mov sbb and (bad) mov adc or xchg adcb jno sahf stos in pop sbb mov inc mov jbe std sub push into sub sti push sub pusha push daa xchg pop shll pop mov pop xchg inc fisttps sbb cmc loopne into ret dec fcoml inc adcl and add dec es jg int3 (bad) in push out bound icebp cmp pop lahf movsb add cmpsl mov pop push (bad) cli jo mov add out orl xor pfacc repnz rcll mov or push or ss mov inc mov xchg outsl pop inc rcrb adc jecxz sbb int3 xchg mov pop arpl mov cmp inc std hlt (bad) fistpl xchg and mov popa xor fucom je pop and test jns (bad) jbe adc lahf fsubl ja add into repz mov iret imul daa inc stc ret adc push cmp xchg add push stos cmpsl pop test sbb jmp (bad) addr16 jle push dec sti lcall add mov adc sbb call popa and jno pushf cmp mov mov lods lea imul lret icebp and add xchg and xor ds push ljmp cmpsl mov jno mov aam jmp cmp xorb cli jmp in xchg nop or mov in jl ljmp mov std mov push cmp int3 lcall sbb popf push push arpl cmpsb (bad) hlt cli sbb sub fs push mov jb movsb xor pop les cmpsl dec inc test pop ljmp pop dec add push mov aam xor sbbb dec std push dec add in pop dec out popa fdivl xchg mov and add jp out insb fistl ret sbb dec inc mov push lds cmp cmpsl mov mov lret shrb cmc dec add xchg repz cli sbb roll pop push xchg xchg jl inc jns fdivrl xor sub mov cmp and xchg sub pop adc cwtl and les xchg cmpb push scas jmp mov jnp xchg inc sub mov jne stos and (bad) data16 pop mov mov pusha xor rclb mov int mov add js inc cmpsl in fs pop mov push jle pusha xor andb fprem jl cmp pop adc fucomi pop shrl out cmp mov dec popl dec es mov es ljmp mov ret idivl stos xchg dec sub es lret jg loope add aas in inc stc lds lahf fdivrs xorb push (bad) shlb (bad) sub and xor fists stc and es into iret mov push repz mov aas cmpl lret mov sub nop mov out out cld xchg xor xchg jge je xor mov mov pop add jbe shlb sbb mov fsub jo sbb pusha jmp or pop xchg ret adc pop sub cmpb adc mov dec shl dec inc inc loopne rcll aaa lock sbb cmp icebp mov or jne mov xor int3 push fsubs in repnz and pop sti test das push cmp jne adc jnp sub mov xchg lods std ret in mov mov mov push std jns mov test insb inc scas mov lods add fidivl inc xchg (bad) mov mov fcom jge lock imul (bad) lea (bad) mov mov in rcr inc push mul push xchg pop add mov movsl in sbb loopne scas add sbb test dec push cmc insb mov pushf jae movsb bound (bad) loopne scas (bad) stc mov dec int3 cwtl cli inc xchg dec shll push push xchg mov mov mov in jle sbb sub call insl clc shrb push in aam inc ss popf in into cmp rcll es push rcl or movsb jp or mov lock rcrb daa and sbb aas incb fwait add (bad) xor int3 sub mov mov mov pop dec test ds (bad) aaa loop cltd loope cmc scas cmp jno in push jmp cmpsb and and dec scas in call lds cmpsb sbb frstor add into mov mov dec jg cmpsb insb mov mov xor in xor jne cmp mov lret inc dec xor mov imul scas xchg lret lcall push cmp adc or xor push icebp fs aaa loopne cmp mov scas outsb inc sbb xor push ret adc sub rcrl pop push fwait (bad) in xchg lret pop test xlat add in cmp sub in inc leave xor and pusha add daa dec jno and in or scas sub fadds js cmp rolb jne stos dec jbe or push dec xchg jle cmc xlat in leave mov jns xchg setae in or dec mov xor xchg out inc rcrb add xchg es dec mov inc sbb nop pop out call mov into jb mov cmpsb sbb add jbe daa insl inc cmp dec mov jecxz ret ret fs push insl outsl inc ficomps imul rcrl iret jge jo or aad clc mov push ret ficoml mov or das sbb cmc adc imul cmp repz xor cwtl fldenv inc ret jno fimull out mov scas shrb psubusb dec stc cmp inc adc push or bnd std fildll outsl pop in xchg pop mov (bad) pop cmpsl xor out lds fbstp xor push out repz hlt sti mov bound shll es out cmp adc jmp (bad) cmp dec mov dec or sbb dec shlb lea cmpl gs or (bad) rcl fbld xchg fisttpl data16 mov pop les push pavgw mov adc adc repnz test mov (bad) xchg test inc mov loope je pop xchg rcl js dec jp xor dec cmp mov xor in test push cmp push mov push or or lds test mov outsb cld aad xchg push xlat sub pop shl cmp and push xor cmpsl cmc out mov mull movl or (bad) push rorl pop popa pushf fistl mov inc insb cmp loope test jb jne in (bad) loope sarb rcl cli icebp mov in pusha cmp and addl sbb insl orl imul pop ret adc outsl add or lds icebp mov mov sub js into leave int loopne scas in adc inc loop neg push push mov lods fcmovnu jb sbb mov into xor rolb push xchg inc xorb (bad) leave cmp sbb mov and and shl cmp stos add add stos mov hlt test loope and adc push or xor mov pop cmc mov (bad) repnz pop call xchg xchg in sub imul vpsubd xlat out add in dec sub mov lcall mov add or cmp fcmovbe push testl in out inc movsl xchg lahf (bad) ret sbb xchg jae xor adc dec sub xchg cmp xchg outsb dec and xor pop mov sbb jns adc cmp andl hlt sbb arpl js sbb push push mov jo sbb mov push idivl xchg sbb dec cli mov inc add mov cwtl mov mov add add dec mov movsb mov cmp mov pop adc es dec jbe sub push sub stos lret aam xchg insb mov push inc lods mov xchg cmp xor xor scas inc push fcom mov xor imul rorb fmuls fwait test sub mov dec lret sub jg js adc gs mov lods js stos lds fs lret lcall mov pop out dec xchg sub push out fwait bound into and adc push fdivl sbbl dec insb out inc mov shrb sahf mov or and push dec xchg idiv nop lahf mov dec dec sbb outsb les dec movsl lcall cmpsl xchg addb test mov mov lahf jbe lret daa sub mov add outsl fidivrl jmp jp xor xorb movsl sub mov lret cmp cmpsb mov sub jecxz cli push push sub push pop sub fwait cld or adc sbb out test repz ja (bad) push mov push xchg mov cmp mov in data16 mov (bad) or ds arpl mov sub addl aad andl push and scas add out xchg imulb mov das ljmp icebp jmp xchg sub and or daa xchg inc xchg dec cmp mov fsubp insl sub xor lret aas sbb mul sti mov stos push inc inc movsl mov xchg outsl mov std sbb movsl dec insb push mov nop imul jno cmpsl into pop pop stos fs inc outsl mov cs cmc jne ja aaa inc loopne out jne inc loop jecxz adc data16 add (bad) ret or (bad) sahf jmp loop scas idiv inc mov dec pop xor jle loop lahf lea add popa sbb ror pop mov jbe icebp sbb orb xor in imul jo cmp and cmp sbb fstp mov stc adc jne and icebp pushf scas push (bad) loopne sub dec xchg int and iret pop jp rorb in sbb (bad) ljmp aaa sub pop jno mov les xor pop mov ljmp imul lods pop arpl int3 inc shlb rol mov push mov (bad) lds lret cwtl adc jecxz inc int sbb and xor ret pushl inc lahf lahf pop mov das fldcw xchg xchg add mov lret sub testl push adc adc or sbb fdivr sti pop add xchg cmp insl mov mov scas sub rol outsl mov mov lret cs scas divb out xor fisttps nop loop shll push divb std ljmp jle mov or push outsb loop aad jle subl xchg shrb mov or ja call loop cmc push jl mov pop jp xchg test cmp adc iret cmp int3 cltd cld sub mov mov inc fcomip gs outsb fstps inc or fimull bound clc xor in notb xchg in es (bad) dec int3 mov nop into imul loope mov lcall cld pop leave push or bound inc dec test cs leave xchg pop loopne push icebp out add or cmp jmp add sub jb cmp cltd push not sti xchg out (bad) sahf loope imul sbb out je pop jnp push ss scas push incb dec xorl ret das in lcall fs aad lahf insb xchg inc sub aad adc repz leave mov jne xchg rcrb inc add imul cld mov adcb jmp cmpsl pop out cmp xchg pop xchg out jle push iret xor xchg inc add or out jmp adc jg fcoml incb sbb je outsb dec data16 push js dec cmpsl loop mov pop cmpsb enter int3 xorb shlb out imul xchg mov rolb (bad) mov cmpsl pop movsb jb cmpsl jo adc ja xchg xchg jo hlt int3 ja hlt cmp push mov mov sar fwait repnz (bad) (bad) in push xor or loopne xchg pop mov mov out ljmp sbb jno loop stos sub lea jl fs pop scas pop lods jne lcall or mov cwtl and inc cli pop mov popa iret adc adc cmpsb adc jbe in movsb or nop rcll inc into mov xchg add imul ret mov add xlat enter xchg popa or out push pop movsb cmp aas sbb test xor sbb sub bswap add inc push or xchg jno jns mov loop loopne sub jne lcall xchg jnp push imul inc out add in addr16 outsb mov insl iret ja sti outsb divb xor add push adc dec jae sub xor cmp or mov mov xchg fwait mov mov xlat jns xorb stos add aam inc mov lods (bad) jg push or cld sahf push pop fdivrs negl sub pop lcall pop (bad) xchg nop incb (bad) outsl cmp out add test and lahf or add lds pop or sub insl int mov xor mov add mov popf push adc rolb dec cmp dec mov and and in mov js fstpt xor jle cld in push mov das mov pop pop jge mov sahf dec cs jne test adc ficompl mov cmp insl lcall mov imul push inc sub (bad) (bad) jbe add je xor scas xchg lcall int3 or fs pop mov xchg xor or add mov cmpl call mov jp imul cmp nop andb cmp sbb imul stc call out add lret inc (bad) bound pop int3 adc pop xorl lret pop movsb daa rolb (bad) or pop test ret push test test les mov add push xor mov js (bad) fwait bound jmp rep js fs sbb mov dec add dec mov sbb or or (bad) mov jmp adc mov cmpsl xor pop xor enter es imulb mull mov out mov lods mov xchg jg andb test sarl or mov fadds xchg pop mov and xchg pusha popf fmull fs rcrl fiadds mov imul test xchg inc cltd pop inc rcrl jmp sub lods out jge pop xor fs sbb into cltd jno fistpl les mov jl loop adcl aas adc jnp clc clc jge cli imul sbb sti repnz xchg xor and aad or inc sbb int pop scas rolb daa fmull repz sub push in popf mov xor in (bad) jle and mov and pop dec add out mov add cld mov sub rcrb fisubrs jp and arpl adc sub sti test mov into mov jg hlt loope push cmc add out add (bad) cld subb add mov sti inc cmp dec adc imull pop mov setl xchg je cld pusha push dec dec mov mov ret lea cltd in outsl int dec pop sbbb push jl bound enter outsb and cs cmp jns leave cmpb into adcb and push pop and push int3 push out mov push pop movl testb lods mov pop push pop lahf pusha cmp rorb hlt pusha enter push lret movsl sub cmp sub jne fldcw popa les push pop fwait jle mov jnp mov xor or jns movsb repnz scas scas mov call jg and xchg pop data16 or mov sbb addr16 insb cbtw fcomp mov xchg add dec jo loop call gs cwtl std shl push xlat shl push test xorl rcrl mov es jmp stos ret mov pop add push push cwtl (bad) cld inc movsb (bad) push dec lret arpl sub sti push std scas aad jno jo fs cmp push sub pop enter xchg dec test push aam into les xchg fisttpll iret fnsave sahf (bad) rolb mov adc repnz cmp inc mov adc dec ret xor mov call mov pusha filds aaa shl fucomi ds push aad sub add inc lock pusha push test cli ss aad push fnstcw cli xor mov or dec push jnp in lds je fisubrs int rcrb jmp scas sbb fcomi stos js mov leave sbb xor int mov push push cmp inc shlb and insl adc fxch push or and jae xor jp test cmc jo push (bad) mov in push jg adc pop adc lods flds sbb scas aas dec inc xor inc mov int3 into in jp insl mov (bad) jo cmp pushf push inc add fwait int flds jecxz cmp (bad) call or cmp mov je movsl or into lea ljmp mov mov adc xor xchg in mov cwtl and jecxz jmp scas dec and lret jmp lds push ret xchg std cmc fiaddl sbb inc xchg and popa aam sahf jae rcrb cmp jmp jl les or sahf sbb pop mov jp (bad) in xchg sbb daa sub loop and sub fisttpll movsb filds jno,pt ret stos fincstp pop add or push inc xchg fwait cltd adc movsb adc cmc sbb cwtl test mov pop add xor in pop mov jp aam aaa stc into mov loopne (bad) fldl adc shlb sub cltd pop test jl mov sub inc dec lods scas iret add and repnz aad aad or jecxz mov lret aaa cld push sub les sbb xchg or dec mov or shlb or scas push sub mov jecxz mov hlt lret cmp and int3 sbb cmp jns dec add movsl mov sbb in push scas mov (bad) push xchg stos jmp and dec jmp jnp pop jmp jnp add subl add fidivrl popf jmp jl dec xchg sbbb das or cmpsl lds ljmp or mov fs roll subl fcoms jo int3 fwait mov mov pusha jecxz nop adcb scas sbb mov adc call sub adcb enter or mov xchg cmpsb mov enter lods inc mov xor push xorb mov stos outsl subl xchg in mov int3 sarb sbb shll mov jne (bad) aaa jp xchg out push xchg mov fcmove inc jns iret add mov loopne inc jno add clc test (bad) lods sbb and pop movl fsubrl xchg xlat push adc mov pop out aaa outsl clc mov lret and jno mov and cmp jl sti out push test dec push sarl ret clc mov (bad) pop lret (bad) ret push insl cwtl loopne jb sub xchg int sbb repnz mov mov data16 sub mov out shll jo pop inc pop sbb or dec mov xchg mov mov aas in cmpsl sub jbe push sbbl xor in jecxz lahf mov cmpsl hlt mov sbb pop mov mov sub or xor sbb and mov loop ret adc pop xor pop bsf push inc xchg dec push mov pop pop lods scas push mov ljmp popf jmp dec sub scas jo sub jle xchg jae std rorl add cmp sbb mov pop jb outsl jp jge xchg arpl pop mov mov or adc inc cmp mov ret ds or or mov mov fstl sbb sbb es mov inc (bad) cmpsb fsubrs or int3 out pop pop aas add data16 cmp xorl pop aad and dec inc mov and pop (bad) cmc add pushf mov xchg (bad) sbb mov push pusha insb mul fstpt add dec aam repnz pop mov dec xor add insb mov adc rcrb div mov cli and test out cmp sbbl imul arpl sbb cltd cmp clc (bad) jp rorl ja xchg sub and dec sbb push push add inc cmc pop insb push cmp push out lahf bound xor pop sub cld shlb and in jne adc (bad) outsl ret (bad) mov or push rcll fdivs lock push decb fbld mov xor shlb mov data16 cmp push sub cltd cmp lea and jnp mov orb or push cmpsl in push fwait test push cli pop cmovl sbb jno or jb jmp ja fsubrl ja push mov dec mov lods mov push inc outsb daa rcrl and jg outsb adc imul roll jg mov mov push dec lods and cltd into paddsw jp cmpsl jbe cmp mov mov lcall and aas jecxz testl mov in imul cmp cli shll es push clc (bad) inc dec push out xor dec ret add xchg mov mov stc inc lret loopne movb fcoms or xchg add xchg xchg or cmpsb aaa adc pushf loope inc lods push mov dec xor xor xor cmp dec cmp ret imul jb mov (bad) adc mov scas push mov mov lret outsl popf daa (bad) aaa dec pop sub xchg stos add stos sbb lahf push movsl jo out jmp lods xchg daa or lahf aaa cmp mov test ljmp lret push push not mov jbe sub in fs fisttpll loope jb dec cmpsl int3 lahf or into mov mov lods fidivs in pop les xlat (bad) out cmp push je dec xor cwtl adc cld xchg xchg rolb loop push setae dec adc adc xchg xchg stos fildl mov loopne sbb mov subl shl lcall inc dec xchg mov inc in imul shrb out mov (bad) fwait mov jmp sub sub push cmp insb fsts adc fmull mull adc stos ja cmp dec mov in in or leave mov lcall orb mov mov daa or loop mov pop add jae in jno in mov jmp lock movsl cmp shrb cmpsl scas ja lret pop cwtl scas ljmp sbb jg ss ret adc pop xor jg pop push add fisttpl dec jae xchg shlb sub inc aam adc sbb sahf cmp pop adc std jle (bad) sti xor sbb xchg clc imul dec cmp loop jbe icebp scas jle loope mov test push aas daa cwtl sbb push ds mov dec jg pop mov mov jecxz mov mov (bad) ds xchg inc sub xchg jecxz pop subb es xchg pushf pop pushf push sbb jbe loope aam xchg out cmp push sub xchg adc xor mov outsb pop lods test adc and lea and fildl adcb push incb push sub test fcmovnu subb gs into aam sub jmp mov mov ucomiss cmp nop jns addr16 xor add mov sbb jbe cmc loopne fs loopne jl mov or movsl arpl mov insl and and adc inc push xchg jmp movsb xor mov negb popa in pop lea pop sub mov rcr (bad) test xchg push stos push pop fldt push add insl (bad) call in out fimull pop ljmp push xor sub sahf fidivrl sub mov jecxz fsubs (bad) in push lret fsubp lret jge mov jg aas enter repz sbb jmp out xorl fsubl andl mov cli insl cmc fildl inc mov sub andl imul call and das jae cwtl push pushf ret lahf push js int3 dec add mov pop mov mov test loope adc xchg inc (bad) fbld out and pop fiadds ljmp fstpt mov push ljmp or xchg adc pop insl inc mov xchg shl or dec iret mov cmp or stc pop xor xchg mov cmpsl sub nop adc xchg mov pop into bound mov inc jge icebp in pop add repz xor es pusha out add scas shrl test fxch dec pop lcall popl lahf int3 subl (bad) jnp in dec mov push sbb jmp adcb inc daa pop test xorl movsb push pop push xor inc ds jge push outsb int xor fnsave sbb and shrb iret mov sub movsl (bad) cs cld mov mov cmp hlt sbb fwait daa das cld dec sbb mov pop inc sub push push loop icebp pop dec in sub cmp cmp mov mov ja cmpsl adc movsl fmuls pop jecxz cmp mov stos pusha lea lcall ret fsubr movsb and into test jmp negb shl ss mov pop cmpsl sub loope neg and icebp cmpsb iret fsubs jle sbb inc daa cmc inc cmp cmpl adc add mov jbe push in ljmp loope,pn negb pop cmpsl push adcl ja push imul es xor jo in (bad) and dec mov imul flds inc push sahf ds add dec push dec in pushl (bad) roll mov outsl dec cmpsl call push div xlat mov je andb shrl cmp imul pusha sbb mov push and insb adc popa jb aas jo sub out inc out je shll jae cmp out jp mov xchg cs xchg xchg insl add xchg loope sbb in or mov test or popf cmp jae push xor pop in or pop ret push insl (bad) (bad) hlt sub mov and cwtl scas scas add xchg sti and inc std inc mov mov pop dec test (bad) clc cli pop setb movsb lods mov jg shrl movsb dec pop mov sbb xchg dec push scas (bad) sub xor or or cmp ret lds les ljmp jo mov mov rolb lods cwtl or dec jno aas sbb pop adc out inc jb in fwait xor xor xor push ja or pop testl inc sbb cli in jb jg jmp (bad) lahf inc movsl push xchg xor and into (bad) pmulhuw jmp sbb je popf push mov sbb inc gs jmp mov jo,pt testb xor or lahf xchg cmp or ret cmp fistps cmp xchg aas fld gs es (bad) fwait in or sub scas int3 mov push push repz out les adc pop jno daa xchg mov fiadds and jle or or ret add jnp hlt pop or dec cmc mov cmp inc dec shl ds pop and sbb push sarb lock add imulb jbe fbld mov lock mov in scas pop pop outsl inc adc aas jne mov xor jnp and xchg mov fdivrl push cmp (bad) out ds aad push lahf adc fnsave adc sbb mov xchg jne into mov insl sbb lods pop ja or xchg adc cmp and js rcll push test test imul cmpsb xor out push popf push daa mov and cmpsb mov inc ffree lds cmp popf arpl setnp movsl inc test xlat (bad) outsb and xchg fcoms xchg adc divl hlt push iret stc shrb and xchg (bad) pop sbb sub in ja (bad) pop dec xor sbb push sbb popa bound aam inc lahf test cmpsl addb outsl pushf push movsl lds inc pop iret sub push pushf push fimull or pusha cmc mov test xchg push mov iret test (bad) fidivs add sbb sti xchg cmp jns or in mov adc movsl (bad) sar push cmp mov add push (bad) shll pop test jnp in out fistpl aaa mov lods aam sbb dec xor xlat lods js push xchg jns (bad) and rep rol jne popa inc dec fimull xlat shlb jmp test gs push xor jnp jmp aad mov (bad) stos fdivrl jnp fldpi pop inc ja in nop inc push data16 aad out add cli insb mov jno sar in or out data16 adc cltd pop fbld jo inc inc and adc fisubl mov flds add mov out jle xchg aad and cmp rorl scas fwait sbb ss cmp arpl cwtl dec ffree inc loopne pop xchg ret out pop out icebp stos xchg push dec adc lahf aaa ja add pop adc and dec pop xchg sub fstps mov das push (bad) lods add pop in mov pop lret dec (bad) lea adc hlt mov ljmp repz xchg (bad) imul xchg sbb out mov sub mov mov ret mov mov sbb jmp iret sahf fstpt inc add pop add stos (bad) fistl xor ror (bad) mov mov or icebp fdivl xor mov lahf das jne dec jmp cli pop mov enter pop push insl es jle mov sbb out sbb test or addr16 notl stc mov jmp pop adcb fwait add sub or seta lods jno push jge inc (bad) mov lsl jae sbb popl and in push popf insb mov roll pop enter and call adc scas sub mov mov cmp test (bad) nop adc adc mov int3 add xor push jmp push (bad) mov push sub enter xor in cmp cmp fwait xchg sub addr16 pop or adc adc mov fnstsw push mov mov cmp cltd jns push bound jle (bad) in daa ss pop std dec (bad) fstl (bad) mov lret mov xor popl inc sub data16 addr16 out lahf enter sub cmp ljmp mov je inc mov mov sbb cmpxchg mov out inc or ljmp mov mov movsl xor lcall cs call testb je adc call push cmp nop add shr pop xor lods add or pushf push sub enter xor stos push push mov leave mov (bad) jo ffree xor jg,pn rcr xchg jl stc mov mov xor cwtl test inc fcmovbe inc insl inc jno lea or call cmpsl or aaa aaa ret and xchg adc pop cmpsl sub icebp jbe out mov pop stos shrl xchg outsb test lds mov pusha cmpsb fcomip in pop jg xor in loopne (bad) out mov dec jecxz mov inc aas outsl mov push cld sti hlt subl inc ret pop je or mov mov fdivs jne xor fisubrl in push test push sbb test and ds pusha mov arpl loop inc (bad) cmp (bad) cmpsb mov cld add and les and ror lret add ret test push aaa xchg sbb pop push lds push pop add pop cltd and adc int ret push imul ds sub push repnz loopne fwait xchg fwait data16 aad std adc sbb mov cmpsl add sbb andl sub pop scas cmc dec add daa je sti add shl movsl adc in icebp sub jle adc scas fmull cli xor push push popa inc jnp add lret or xchg or in dec loop mov push fs push mov fs jb or int mull repnz pop pop into inc rolb jle cvtps2pi mov mov mov jb xchg pop xor imul sarb push pop enter out cli dec push sysenter outsl add in lock js sbb jns mov xchg pop (bad) iret ja jbe cli lea mov jle bndstx loop insb xchg jns cltd ror push inc sbb fldt stos ficoml orl mov xchg roll pushf sbb jp cmp adcl dec adc test inc sahf dec lea movsb xchg sahf dec pop jmp xor xchg cmp xor and push fs fs fdivs and inc inc pop sahf or aad stc mov lods insb in sbb shlb cmp jmp sub addr16 popa or sbb iret cli shlb mov test fcmovne test in cmp jns call mov cmp mov scas loop outsb xor xchg sub mov sbb add add std push and xor lret mov fisttpl std repnz insl adc mov mov and mov mov cwtl add xchg xor dec xor gs lret test mov leave lret jmp popa mov (bad) fs aam adc jo outsl loop (bad) dec cmp jge xchg mov imul pop fs jae xchg push ss aaa sbb cmp aas lcall bsf rcrb lcall xchg stc decb sbb jecxz jb aaa adc leave push lds sub and out inc mov pusha addl rorb jp push bound xchg pop loop aaa pop fs sub fistpll hlt inc pop xor movl pushf sub (bad) mov adc jbe and sarl sahf clc sahf inc fcomps lahf push ds add jmp jnp jecxz jno in or mov loope test adc add dec sbbb lret pop daa fcmovb stc (bad) repz aaa mov mov insl hlt mov pop or mov int3 jne jg out mov lods ja testb mov sub in pop xor inc in daa sti sub in mov mov bnd xor cmpsb or cmpsl dec cmpsl (bad) sub inc out lcall (bad) xor andl and cli rclb shl mov aad fisttpll sbb mov sbb pop cmc subb pop adc pusha cwtl dec and orb loop (bad) or fstpt mov adc xor adc ljmp mov insb out or jno ljmp enter call xchg cld (bad) (bad) and sub inc adc jl mov mov pusha in (bad) dec fs hlt nop out in mov xchg rorb popa test mov lods push adc es sbb ds add mov cmpsl test repz mov leave arpl push mov mov mov fnsetpm(287 pop lcall inc push push pop stos sbb sti bound gs flds ret out out or int3 mov lea jg sub mov loop not jne rorl inc xor push xor mov in cmp and push scas xchg add bound and adc inc or push out (bad) pop ljmp scas es (bad) cli and adc push lea in pop cmp sub jbe cmp push and std adc aas out subb fdivs mov scas jg adc sub pop dec or jb mov sti push pop xchg sbb ja cmc in ror cld mov shrb sub mov sbb xchg and shrb jne xchg push das lds and add mov jp sbb sbb test push cmp xchg out pop sub or lods fildl cmp xlat mov inc cmpsb adc mov decb inc sub mov test xchg scas (bad) loope bound and add mov or ljmp divb outsb (bad) mov sbb cli mov and test stc cmp daa and sbb popa leave popa jmp and in xchg mov dec xor daa jl jl lcall fsin lock mov imul loopne ret push mov insb push incb into rorb jle adcb mov and mov cmpsl out cmp bound mov lahf into xorb jb jo ljmp mov xor add mov out gs aas mov out (bad) scas out pushf sbb outsb (bad) lea lock popf pushf xor push mov add lahf push cmp pop stos insb das icebp (bad) sub mov stos inc addr16 out xor add ret in repnz aas fistps sbb lods or fiaddl cli lret jmp jmp cmpb mov inc lcall sti cmpsb mov iret adc std mov imul and pop xor jnp mov push xor (bad) mull adc push gs jge sub mov adc loop dec dec dec leave orb pop jmp xchg xchg adc or mov jbe stos mov inc jo jnp mov in push loopne jmp dec ret cmp xchg push jmp data16 lds mov and outsl cwtl mov ret leave jns and adc ds call xchg cwtl out pmulhw push xor decb psraw jne sbb push push (bad) mov sbb push js and fnstcw mov mov pop (bad) movsb stos insb outsl movsl sub vxorps mov orl or scas enter mov ds daa push fsubs leave lcall inc lea jne sbb popf cs into or scas mov loop or sahf lcall lods pushf gs mov sbb inc leave inc sub cmpsb arpl lret std or push and in std ss cmc mov scas push push sbb int xchg in or dec xchg shrl cld mov xchg ss movsl push or ret mov add push xchg push or test popa nop xor clc dec jp jb jns lods cmpsb xchg ljmp cmpsl xchg leave clc clc into push icebp lret dec push insl add enter insb push dec mov jno push imul nop gs out and add shlb xchg adc out mov ss loopne aad (bad) pop adc ja jae scas (bad) jo jbe push enter test ret mov fsubs mov mov stos mov lcall dec mov in fmuls jns das inc add xor hlt std movsl adc inc or inc int3 stc mov repnz pop loopne adc push lcall mov push mov dec inc fsubl lret xor xchg cmp cmp (bad) fbstp pop jmp outsb sub mov xor ret (bad) in sub js call mov push js test cli mov mov adc pop sbb mov mov dec jb stos push out fisubrs mov xor out sbb iret adc and mov (bad) cltd dec xchg cmp dec sub icebp mov rorl out stos and mov push lock jp xchg repz cmp dec cmpsb dec and idiv lret push test in test inc cmpsl int jmp sbb dec imul lds inc mov dec cmp mov (bad) les ret js scas invd (bad) mov clc leave jle dec aam mov lret push cmpsb xchg nop pop jge and sbb mov mov sub add sub lock mov insl xchg enter add (bad) push call and insl icebp and imulb and (bad) jg jbe add mov push push sbb inc lret ja mov movsl mov dec cmp jle mov inc loop pushf ljmp ljmp cmp (bad) jnp ljmp mov in inc test pop mov call fidivrs rcll dec (bad) xchg cs (bad) xchg dec mov xor xor jbe and xchg fdivrs call std ret dec jb mov sbb cmp inc fs mov (bad) not sub gs outsl ror pop imul xor shlb gs adc pop test aad repnz shrd mov jnp pop fs push out fs xchg push out sar aas mov sub xchg pop adc loop pushf pop jle mov mov xor aas subb jo decl mov jo pop mov pop test fs (bad) mov scas mov call inc pop inc mov mov inc lea pop xchg xor mov sbb pop or dec inc scas xchg scas push mov cmp cmc pushl dec test popf mov xor scas insl mov leave sarl in iret (bad) cmp mov (bad) sub xor lods push std add adc cld and in insb imul imul or (bad) cwtl arpl int rcrl mulb mov les and pop mov inc je inc xlat add inc sub adcl and inc add lds pop cmp test adc ret mov daa mov mov rclb jge or daa or dec xchg loope comiss sub dec (bad) pop insl inc jbe lock call daa mov jns imull rorl sbb mov lret and nop push sbb decl inc jbe xchg data16 sub dec jnp push rorb pop pop mul ss push arpl sbbb sbb in or mov xchg out lret pop jge stos jo sbb stos repnz mov push xchg pop das insl pop out popa mov aam (bad) pop fwait mov add into or xor sub adc shr jle pusha bound test je push adc js xor mov loop jnp sub push into movb inc inc popl mov add jo pop xchg rcll inc dec nop jge xchg pop loop dec cs inc pop popf or inc cmp iret push (bad) adc loope lahf pop outsb xchg and cld popf jnp push cmp pushl insb (bad) loopne out test cmpsb loope rcrb iret shlb div mov or fdivrl push lret jl push nop xchg mov pop sbb mov push dec ljmp stos push lahf lret lret mov scas mov in sub ss mov dec fcomi call push hlt pushf insb and cmp sub add sub arpl mov pop out sub les lds cmp or cmp nop pop inc mov scas into stos xor out jl aad mov ljmp ret mov sub inc js fdivrl in cmp into cli imull mov mov inc adc stos js jge mov jp mov mov push outsb xor inc shlb stc (bad) mov mov xchg push movsl cmp (bad) hlt lret adc repnz pop incl fistl clc xchg inc cltd das rorb pop out daa add mov lea fwait adc or (bad) in repz movsl insl popa insb dec add or mov mov xor cmp inc mov jle inc cmc pop mov push sub out jge dec add inc ds inc push lret iret repz adc sarl hlt jg mov arpl or data16 pusha in ss dec sbb inc push mov xor add and out andl aas jne and faddl insl fistpl enter lahf repz pop in pop (bad) jbe adc or aaa jb pushf int3 cltd sti icebp cmp sti pop xor aaa and addr16 enter out add xchg sbb mov jl aam pop mov add shrl fstps in ss and sbb aaa fs fs jmp push imul push lock xor add outsb orb dec mov push xchg jo rcrl in lcall or dec insb mov pop ljmp jp cld dec icebp fcmovbe add out mov adc add mov mov sub cld push dec (bad) cmp mov mov inc cmc movsb fdivrs std adc push jno (bad) popf dec xlat xchg fst pop and xor xor ljmp cmp inc mov fcom xchg jp sti fcmovu loopne mov popa dec movsl shll mov sbb lock lcall xchg sub push stos pusha cmp push xchg mov imul rcll mov (bad) sub mov out and sub cs or sahf push push jnp mov std xor stos pop inc mov xor cs outsl arpl cmpb rclb cmpsl fdivl mov mov sub jae mov inc pop mov scas lret addr16 (bad) hlt dec ret mov (bad) jmp pop dec pop js pop sub cmp cmpsl in mov add enter mov pushf cmp in pop dec fisttpll (bad) pop jnp and push sbb mov adcb sbb adc jp sub insl test xchg enter leave ja lock cltd mov jae cmp mov dec loop and test jp pop mov iret outsl mov (bad) and lcall jl and das xchg pop insb jle outsb scas mov jno imul push xchg jl in mov push or subb clc mov js inc loopne sub shlb (bad) and xchg sub aad movsl inc mov pusha testl xchg sbb rcrl or push ja xchg pusha lea out movq test call mov add mov and lds mov inc or xor mov add test pop pop cs mov decb push imul xor adc cwtl mov insb dec test mov sbb or mov (bad) nop sti xor cmpsb push pop loope lock ret jb test les imul mov (bad) cld bound sbb cmc fists les in adc les jae je push add jb and nop push in mov fwait mov inc add mov cmpb andb mov ds sbb pop cmp inc sbb iret mov push and out sbb fnstcw out in jl cmp sbb xchg mov and cltd mov hlt cltd pop sbb or mov pop in mov mov insb nop popa fisttpll pminub cmp cwtl jbe push idivb push into out mov mov add inc mov mov push data16 cmp lcall movsl fucomi inc shlb inc mov (bad) cltd jbe stos pop movsb sahf shrb ret mov in sub push movsl stos movsb cmpsl jnp clc ds xchg pop enter pop movsb adc push adc cmp pop sbb sub xchg loopne mov adc jns bound (bad) aaa add aaa mov shll leave mov outsb out mov xchg or (bad) mov testl and xor dec out add sbb push test lahf fstps jl fidivl insb out ja pop cmpl mov xchg scas ds pushf push test test sarb inc out push das fistl aam jae jo mov xchg xchg or ja mov sarl loopne clc test jecxz stc popa lcall test je lea mov mov sub cltd sbb xor add scas loope leave xor sbb inc pop int3 cmp ss js dec int3 shr dec fisttpll pusha (bad) jmp bound pop out xor shlb lods aaa push popf js shll push movsb enter loope dec lds out push enter outsl xchg ljmp mov sbb add push jp xor fxch int3 aaa xor cmp enter mov jno imul out dec out lret sbb jg andb pop sub sub addr16 int push mov hlt mov add pop negl rcrb pop mov cmp dec pusha mov inc add jo xchg lock pop mov decl outsb outsb int repz ds sbb jg pop lret xchg push or sbb add xorb ret or or adc sarl and xchg xor pop jge xor mov push (bad) icebp xor mov hlt imul pop sbb pop lods xor xchg xchg out shrb push loop pusha loope mov push sti sbb or inc fisttps dec inc inc cmp hlt sub test ret adc lret sbb lds cltd push dec (bad) stos cwtl mov mov add je mov cmpsb int movsb sbb js daa push hlt mov mov mov icebp pushf int lods out push roll mov sbb dec sbb ret cmp pop fstpl dec into sub dec (bad) sbb or in fistps (bad) out movsb ja insl clc in or aad sahf push and outsl or sub inc imul xchg inc mov sub push lock leave mov nop mov imul or pop and mov xor cmp push aas test in cld xor jne lods push mov icebp pop lods rolb nop int sub fdivrl (bad) call je,pt data16 int loop jg mov pop or popa xor adc stos sub xor fsts adc inc jmp and idivl dec (bad) sbb stos imul push mov int3 hlt gs test and sbb adc pushf ljmp jmp dec packssdw sbb loop pop dec cltd das int3 xchg xchg iret out out or sub fwait jno cmp sub subb jmp or push cmpl into dec cmc arpl sub sti mov cli pop pushf and xchg mov jno iret xor imul call fidivs mov jae adc test cpuid push pop jb arpl (bad) sub xlat dec dec pop scas pushf dec inc push sbb xor pop (bad) imul cli xchg add sbb loopne mov rcrb and movsl sti mov (bad) das fcoml aad icebp aaa fidivrs aas ljmp test leave and pop mov mov and stos and inc dec xchg xor jl inc nop xchg xchg push push pop xorl out jae es dec jb daa shll dec sbb add xchg in es xor testb jbe ss lods mov dec (bad) add dec loope jno dec les jbe sarb loop dec jge push inc (bad) sahf lds ret adc jmp icebp jno mov mov icebp rolb inc lret call fwait push jne cmp movsb andl insb jl xchg cld andb inc pop push pop (bad) int3 mov shl (bad) fsubr pop mov pusha int3 pusha mov out fsubrp inc mov inc and dec sub fwait arpl cmp std ret inc add cld (bad) sub orl cltd jl das or lock repz dec ds ds jp jo sub and add cmpsl insb sti sti adc movsl mov mov cltd into add push insb gs inc inc fxch in std clc std ss jle xlat jg lahf imul mov ficoms and insb mov xchg cmc int jmp scas xchg mov sub (bad) aam xchg int3 in fldcw enter or insl add testl add xor lcall sbb sub adc (bad) out push push and pop ljmp insb push fldenv cwtl sub stc leave ret or push mov jmp push ja pop inc je sahf mov inc dec mov test test and or mov push mov leave cmp dec out pop mov lock iret loop sbb cmp xor add int3 jns jecxz sahf sbb jne dec jbe fbld push jmp sbb jae xchg imul cltd mov ja xorb pusha sub and mov push leave clc cltd jl data16 aad jnp arpl sub je mov mov xchg int3 jp clc xlat mov xchg je,pn mov dec and push sub jle jbe pop add fadd sub inc mov enter sarl push jg xor in cld dec hlt xor loopne movsl cmpsl test test push mov mov repz in mov push fwait mov das test add loopne mov pop pop fwait sub nop mov int pusha cmp mov ds roll rclb (bad) sub mov add or jo pop sti andb out nop and stos pop fisttps push adcl mov leave inc fwait xor xchg jp push insl push mov jne dec ss adc add jns andb adc sub pusha add cmpsb lcall sti inc int3 push cmpsb pop adc mulb jmp add mov add inc inc pushf int (bad) neg mov adc out mov xor xor inc sub pusha scas loop (bad) in xor xchg and xchg mov ret test pop cmpsl adc test jo xchg xor inc (bad) or add lret loop stc jbe mov outsb mov stos mov push jb ds das mov std jp (bad) (bad) popa ret lcall loope xchg es push into mov movsb add sti int3 cmc and cmp xor add xor pop fld jecxz add add cmp jns orl ss fidivrl mov fldcw (bad) (bad) mov cmp les xchg loope xchg inc or cmp sti dec insl add dec (bad) add lds or mov insb xchg mov andl insl lret (bad) ds add sahf daa rcrb push test hlt pusha sub hlt iret adc mov xor fisubrl jo add fs mov scas adc enter imul adc cmp pop clc je lret pusha icebp out mov insb pop incb mov mov scas cltd push rcl fsubrl int3 or movb add inc scas and bound lea and push xchg mov dec adc sub adc in sbb call pop pop movsb leave lcall xlat dec xor les mov cltd lods mov sbbb cld push add add nop dec xor pop cmp sub lcall fs push mov dec mov and dec stos pop roll jge sub mov mov fmul dec (bad) aas in roll pusha int jecxz push mov cld lret sbb add sti cmp mov adc push push push stos addr16 jns xor or inc (bad) and xor std popf repz cmp imul add lahf fucomp cmp add jp jecxz repnz (bad) jle mov inc dec cmc add inc test xor popa cs fsts jle sub fiaddl xchg inc cmpsb and mov int fadd rorb outsb int3 push jge,pn insl lods pop outsb mov nop or sub jmp fs pop mov ret dec out sahf int xchg mov sbb lret test jle push in stos cmp cmpsb inc inc dec mov insl dec outsb sub inc inc jl faddl and dec insl pop fstps cmpsl mov jle call repz pop dec icebp jns dec inc outsb aad movsb jp lds push cmp jp loopne das js out filds in or out cmpsl in add (bad) jmp test jmp mov dec push push xchg lds ja sub jbe cmpsb adc xor (bad) xchg (bad) xor mov adc xchg mov add jmp pop aaa int3 sbb sbb mov lods push push mov incb cs inc pop jp sarb inc stos (bad) cli mov addr16 (bad) bound mov mov bound rcrl loop mov mov sbb stc xchg imul push push mov xor (bad) pop mov inc jmp inc cmpsb es sbb shll xor in mov sbb cmpsb pop xchg sbb cmp push (bad) and (bad) push mov sti lret sbbb sbb roll add dec push dec sbb leave cwtl sbb in loopne mov insb dec and sbb movsb cld push enterw ds sub mov adc cwtl ret xchg push or xchg mov xor mov loopne arpl push dec ljmp mov fcom in add int cmpsl sbb push adc pop mov cmp outsb and in lahf fiadds pop lods inc out xor push xor dec arpl aad jecxz enter nop stos adcl inc cmpl mov mov test out iret or mov cmc mov loop stos sub je cmp dec dec inc mov (bad) aad lret mov xchg (bad) and xrelease push sbb je pop mov shlb push lods ficompl ret adc sub lock loope cmp test fcoml lock test lret add lock sbb sbb pushf or call adc mov cmp out ljmp sub cmpsl xchg adc jb cmp cmp mov xchg into mov test mov enter jnp fldcw add adc push adc push mov jo push jns int push outsl jl push pop repz and shll stos sub repnz xor mov lret or dec sti mov dec xchg movsl dec sub icebp adc loopne or cmpsb test mov dec mov sbb cmp adc out lret push cmc jmp pop xchg xchg push out jg out flds sub push arpl std xchg rclb test lods or mov xchg lcall outsl cmc and inc inc cmp int in and dec xchg call xor cmpsl jns addr16 xor jg adc ds ja pop dec xchg push mov adc xor push cmc sbb addr16 mov out sub pop pop out sahf dec xchg fsubr pusha sub inc aaa or rol stos fcomps dec xchg add (bad) shlb and in push mov rorl iret clc sbb ja ss sbb xchg sbb pusha fsubrs pop scas mov mov xchg in push out inc test outsb ss pop mov fiaddl sbb stos cmpsl aam iret in stc out movsb popf sahf mov mov lret mov add negl add push js xchg stos stos cmpb icebp int es popf xchg sahf filds add add call xor pop dec gs mov test or sub and sbb je fnstenv fldt popf (bad) fsub (bad) mov ja adc divl and mov lahf mov xor (bad) cmp (bad) icebp in pop jp xor jmp out mov adc mov rcl dec or (bad) jge loope xor lret jnp into mov test cmp pop inc shll or xchg sbb mov push or repnz imul out int3 adc out sbb mov int3 xchg pop mov ljmp sbb or jbe cld mov push notl push jne push enter faddl les cs pop les sbb in cmp inc sub pop ljmp mov pop inc sub adc sub movsl scas loope mov jo jne enter xor sbb or inc mov sub jo cmpsl push push sbb out lcall or inc dec adc mov mov sahf pop loopne sbb push sbb jecxz mov cmp mov sub test iret mov pop add scas outsl mov ret sahf fs xor lahf pop cmp push pop pop aas into subl xchg cmp mov rcrl sbb jae pop ret ss ss push pop mov mov jle (bad) lds cmp mov shrl mov push jle test insb fadds or add jns pusha mov sarl (bad) outsb stos add cmpsl aam and mov xlat fldcw loop add mov dec std xor repnz xchg sub enter inc fistps mov cmpb fbstp fldl jae cmc jmp orl jo and mov cltd and mov (bad) idivl (bad) (bad) stc das mov xlat xchg inc in sti rcrl (bad) test aas mov int insb cmc (bad) iret or xchg pop or andb jcxz xor addr16 or mov stos pop pop subb jecxz sahf push testl enter dec mov mov adc inc cli add flds cmpsb push dec sub (bad) pop jo cmc mov pop fdivp inc dec pop jle dec mov add inc sub test jno mull mov addr16 pop aam jae aad cmpsb mov jecxz rorl imul bound fcmovb iret outsl orb stc mov ficoml cld stc fadds (bad) inc outsb das mov cmp lcall pop sbb ds les cmp inc dec ret ffree out push insb sbb and into adc xor cmp mov clc dec out cmpsb jne cld inc daa push sub dec push inc movb mov outsl cmp jo sbb jmp cmp mov movb out dec and jge xlat jbe pop test lret roll push xrelease push lahf dec mov add sbb pop incb fidivrs pop cmp ljmp andl lret pop jo movsl icebp stmxcsr cmpsb mov inc hlt cmp mov xchg or push gs pushf jp inc (bad) daa adc push mov sub out add sti clc int3 sbb add xor aad jnp cwtl enter adc mov jns and xor outsl in in xchg out cs cmp test shr pop sbb fnsave shll cli sub mov inc cmc push and xor add push xchg cmp mov cmp xor xchg fsubl fisubrs and fisubrl fstl out sub push cmpsb lods jnp insb fists dec cmpsl add adc mov sub inc inc lret ja insb repz outsl scas pop imul shl fucom cmpsl push xchg and or xor mov xchg fdivrl sub or push pop rcrb ret inc pop cltd dec js xchg sti outsl pop mov inc testb scas cmp cmp sub xchg pop sbb testb js lods bound jecxz or jns sbb arpl jnp dec mov loope test lret aaa popf push push std shll mov add sbb mov in fcoms movsb pop jecxz rorl xchg mov call sbb sarb stos pop jns add jg push cmc sbb adc sub ja mov pop and movsb inc fidivrl movsl leave pusha and aad inc sbb insl je mov push jnp mov inc pop rcrl pop mov leave push dec out sbb (bad) into nop les and enter lds cmp pop mov push ds (bad) adc xchg sub or add (bad) and sub lods sub lods ficoms inc js dec lods mov mov push cli les mov push insl push in dec sub mov mov cmp pop mov jnp jae push in push or movsl cmp loop inc clc jge bound sub xor cmp adcl jecxz sub inc xchg xor mov in xchg mov cmp dec or into inc jne mov pushf in push dec cmp xchg leave inc add dec cmp sbb je daa push das sar push flds sub xchg xorb xor sub sub pop aad push pushf in pushaw add (bad) and inc ror dec das jne iret mov orl out es orb cmp cli test js push clc or xchg or subl add mov out daa cwtl insb mov sbb add pop mov pop out pop push pop (bad) jmp (bad) js xor pop aas xor movups lods mov insl add inc jl push outsl adc mov sti aaa test inc fdivrp push jne mov pusha mov dec cwtl ret (bad) mov loopne cmpsl pop mov mov mov and fsubrs call push jo jno out ja cmp sub fnsave jp xorb xchg gs leave push xchg decb movsb xlat out shl cmp cld inc cmp int3 icebp or cmp mov fmull pop xor imul leave jmp xchg sbb pusha mov dec fldcw adc adc ret rcll dec pop adc cmc les fwait push inc bound or and add jmp or ds xchg mov test and mov or repnz loope adc pop mov setl bsf mov (bad) cmpsb shrl scas outsb enter add les ljmp (bad) jmp popf xchg rclb jnp movsl pop pop dec mov cwtl add loop imul xchg fucompp inc lock rorb and jnp icebp mov cli xchg fsts jns xor xchg (bad) insb pop lret adc push addr16 adc in dec pop pushf add sub (bad) shll xchg xchg leave imul push fisubs testb jne jecxz imul leave mov (bad) mov divb in imul pop jg scas mov hlt or lcall adc adc cmp jmp push cmpsb pop push add xor jne in xchg pop adc fst sahf sbbb lret (bad) dec out jecxz mov fxam lea cmp out pop shlb sub sub pop shlb stc sub pop xchg mov mov fwait std jl jmp jno cltd (bad) loop jnp add and mov pop stos lahf mov movsl and mov adc shlb fmuls xor imulb rclb enter cltd adcb scas mov clc popa sti repnz mov xor addr16 inc fstl push add out out lret out xchg dec dec aaa (bad) fimuls test cs or lahf ja mov fcmovb mov xor jge and data16 xchg movsb or inc and popf gs testl adc mov cmp cs add sub jne dec adc jae fcoml stos lret clc nop rolb test cmc sbb adc std sti cwtl in aas mov add daa outsl in out int3 (bad) push sub sub mov dec mul cwtl lods fstps fdivrs out pushf jnp mov into jb pop scas xchg xchg in mov ljmp lock ret das dec sbb lcall adc push lea jmp dec xor dec sbb jnp imul ret test (bad) xchg fimuls (bad) and push mov or push js shlb test jp sub xor or mov fldcw js jp popf jge rol (bad) (bad) fsubrs xor imul loop std shrl mov aas inc aas xchg xchg call cmp aam adc cmp mov fs add js gs or lcall jo or dec dec pop pop adc movsb jle ljmp adcl xor push fldt loopne xor pop pop test mov sub ja push inc addl cmp lcall stc push push data16 push (bad) lds fxch lds cmp xchg (bad) popa sbb sbb dec imul out sahf and push push rcll sub lahf dec adc pop fbstp inc cmp or shll dec lret adc cs (bad) enter loope shrl and xchg lret shlb mov cmpsb mov mov cli jle mov dec stos jno incl mov pop clc xor add mov cmc ret add inc mov inc sbb outsb or pop std sub push inc xchg insb dec mov (bad) notb dec lods js aam test dec (bad) mov dec xchg mov jne dec add add mov bound xor stos and fcmovbe loop rorb scas inc add mov push dec cmc sbb mov mov xor push int3 fld mov pop jecxz pop sub cmp adc dec xor pop push dec lea jae mov enter cmp addl pop adc xchg mov cwtl outsb mov (bad) pop xor imul jge pop jns inc mov iret sahf mov sbb imul jmp or sub stc add mov dec pop addr16 fsubrl mov shr lds pop xchg sub cld outsl fmuls sub and lods imul jae shrl cld dec dec jb ja and jle inc cs mov test sarl jnp jbe insl icebp xchg (bad) cmc mov lock push jle fucomi add sarl xchg mov push fwait push push icebp stos fmul in add fninit dec lods stos into fnstsw jns fdivrl je inc enter ja push mov test jge sbb mov xchg inc test push jecxz lcall mov insl mov cmp mov cmpsb scas xchg pop sbb push ja xor sti jecxz mov cmpb pop inc mov cmp adc dec (bad) into movsb or jmp lret lcall idivl adc sbb jecxz test sub add xor push fsubs out xor inc orl test mov cmpsl rcll pusha mov in adc hlt fisubrs negb jnp adc cmc add jp (bad) mov repnz rolb arpl insl mov inc mov push xor adc mov add jns js loope ret add sub int mov mov cmp adc (bad) aam mov int3 jle movsl int pop mov jg push cmp pop das fsubrs adc cwtl jae or jecxz sub jecxz xchg pop and push push mov mov aaa fadds adc pop cmpsl mov iret jl in lcall insl push jnp pop pop jb mov adc in mov loopne scas sbbb iret cmpsb jno push pop daa pusha outsl fucom (bad) loopne out test or pop dec rorb cld add mov (bad) jne ds cmp or jle xlat and imul into push shrb jnp sarl outsl lahf fsubs jo cmp jmp xchg stos (bad) sbb jo jge inc jno dec inc jno shlb pop fsub sbb cmp (bad) mov sbb iret inc sub out je jne mov or xor loopne mov inc sbb pop aas mov push dec insb cmp dec xor lea dec rclb push movsb xchg dec jge shrl pop aas xchg outsl gs mov leave sbb (bad) in subl jl popf cwtl repnz mov icebp mov or es mov int je xor mov and loop cmp cmp xor or sahf jle mov inc inc push push or jle es cltd mov nop push sub js sub add lods int fs pop adc fwait cmp (bad) add inc ja sbb pop sbb shlb pusha loope jl adc add pusha push adc and fmuls fisttpl outsb push fsubrl inc jmp mov push cmp mul cwtl iret mov mov scas fiadds mov mov pop lods inc jge fiadds insb in mov (bad) xchg jmp in inc mov repz jl inc push sbb lock pop movzwl into mov testb int jmp pop int sub in cmp push mov push push imul mov popf cmp and stos jge inc jb push pop sub lds mov js mov dec fs jmp sbb pop adc pop cmpl dec push popf lcall leave lahf mov inc sti fcoml lods cli scas cltd in les mov adc xor pushf insl jno das frstor flds (bad) loopne inc es int aas sbb mov test dec sbb jns mov repnz jnp mov scas pop fldt sahf and sbb pushf mov aam dec jo dec loop mov mov std hlt movsb add jb or out bound xchg and inc xor in test lret lods loopne ja adc sti insl mov cmp call cli les jle or xchg mov nop cmp orb fs mov jecxz dec mov xchg cltd stos mov pushf fs mov sub mov jnp (bad) sbb xorl jmp rolb rcl or hlt inc mov add test flds jns pop pop frstor lock imul inc xchg les inc mov cltd jb mov and push cmp mov or shll (bad) loopne and cltd mov add and lret pop sahf xor push pop add ss or dec and push mov movsl jg daa mov lods (bad) sub mov xor mov mov in cltd xor pusha push lahf xchg mov sub cmp fnstcw fistpll mov mov sbb mov int3 out test push js xor mull movsb (bad) vpmaddwd jb daa pop mov and (bad) leave and inc insb dec aaa ds mov xchg iret stos add jne pop sbb sbb (bad) jno jmp das and lahf sarl movsl js popf jbe in (bad) cmp in inc cmp and insl (bad) adc jae mov xchg enter scas movsl mov pop lret les cwtl jns fs sub inc sub jle jl out test inc mov lds xchg mov (bad) std xchg stos repz jmp or cmp jge jb push sbb cmp ja ljmp sahf push loop test xchg sbbl test inc sbb adc aad leave xchg in push jb dec jmp (bad) xlat dec pop popa jnp cld pop sarb rcrl mov test push jecxz (bad) inc xchg insl add aam sbb inc xor aam mov out sbb mov aas and push insl imul adc addr16 and leave outsl repnz adc jmp xor lods jge xchg dec sbb xchg stc fsubrl faddl inc pop xor pushf mov insl daa fcom push or cmp out xor mov mov mov subb mov lock mov jne or fs fnstsw or mov in jbe fimuls push sbb jns into jle mov push xlat pop stos bound out mov or cmpl and xchg adc stos cmp arpl test call sbb cmp call popf aas xchg xor inc in mov push fsubl pop enter lock push loop and orl shll jmp loope addb mov aad sti dec sbb (bad) sti jge mov scas inc (bad) lock insb jecxz cmp jnp dec mov mov and stos mov mov andl mov fistps mov jbe push sti daa mov stos jb stc mov movsb movsl pop sbb scas add fisubl outsl enter mov aad iret mov cwtl in sub and jo call jo mov xor mov mov or cld stos pusha inc sbb add push (bad) jmp xchg xchg xorw or fsubl push fildl divb jecxz mov inc xor mov push mov cli or sbb aas daa jg (bad) ss icebp dec mov test rcll push lahf enter push jns icebp xchg in mov sbb pusha arpl dec andb in sub sbb into dec dec mov sub leave add arpl or aad sub out in cmp imul repnz mov jb sahf ret cltd aam sti popa out lcall rcl shr cs loopne das jno and cltd push pushf or pop aas pop pop mov or in (bad) outsb jb test add test dec pop cld cmpsl jmp popf mov out insl decl mov jmp pop cmpsl arpl lea and mov loop lea sbb pop fsubrl xor das mov shrl aad fsubrs shl pop mov notb outsb adc pop js push push dec sbb pusha inc enter inc cmp insl fidivs lea add sbb fsts std xor ja test subl das pop add call sbb cmp leave aam mov out in es sub xchg xor ret les xchg push jbe aas idivl push jge jno ret popf dec les out xchg les loop pop sarl xchg lcall xchg dec hlt add or jmp add (bad) fldl or mov inc jmp ret mov leave dec mov cmp cmpsl sahf les fnsave xchg in push xor dec jo fildl imul divb inc xchg leave sbb repnz shr insl add fildll dec fmull stc sti inc adc (bad) sub arpl mov xchg sub addr16 push cs mov ja dec sti xchg cld pop stc inc adcb mov ds fs sti and aad cmp mov jns jbe int mov mov in push jecxz or cmpsl xor mov jge fiaddl test jo mov xchg out push xor loopne js call or movsl sub out or lods xorb mov push nop les mull je pop pop pop mov or cltd xor imul sbb in and (bad) mov or rorl xchg cmpsl adc lds popl cwtl mov or mov add and adc fwait icebp or ret jo mov sbb mov arpl flds test movsb fimull sbb push sub adc (bad) lret pop lods cmp pop xor jmp fcompl xchg out xor or hlt lods mov jl lret int3 mov mov mov pop pop jno pop sub pop adc add adcl in and rclb in mov scas push in (bad) out mov or jno,pt add shlb movl add pop cmp mov nop ljmp jbe fucom and sbb xchg jae test xor in mov add ret inc xchg and ficompl xchg mov repnz sbb xor fildl out inc clc jle cmp cmpb push dec fwait xor in cmpsb lds sub and aas adc or or sub adc mov inc jns fcomps js xchg xlat das adc pop pop push cmp je sti push neg push sbb fldt inc mov out xor or ja or push fnop xor xchg pop insl jns pushf or cmp ljmp (bad) dec xchg andb push cmpsb int outsl test cli fwait pushf adc cwtl dec jo pop push or inc jp leave dec sbb add sbb push jae mov mov lahf sub lods sbb (bad) incl adc inc sub gs lock xchg outsb ja xchg dec pusha movsl jne loopne xor fnsave shll loopne or scas inc push xchg ret mov lahf xor aas mov pop push repnz pop xor and pop call dec dec test popf jmp sbb (bad) ja (bad) clc ret sub jnp ljmp loope cli jmp out (bad) int lea push push xchg test push scas or adc xchg je fwait mov mov inc push pop icebp dec fdivs adc dec and lret mov cmpb shll jp xchg dec mov nop pop pop cwtl jmp push out xor xchg lea push sub call cmp shrl or (bad) jle icebp adc push filds mov test xchg and fisttpl arpl adc or dec aad test push sbb movsl les in inc arpl xor imul cmp jnp das xor and pop sahf xchg mov xor loop nop xchg dec mov lahf xor pushf cltd cmp loopne out out stos pop dec mov sub bound mov cmp pop mov adc das popa out push cli jecxz movsb lds jmp cmc lret shl int cwtl xlat stos xor loope sarl push pop out jo add in or dec sub ja les sbb add fistpll cmpl out or jo and stc mov fildl test push bound pop hlt ss fisubrs inc pop and xchg or mov push aas cmp mov mov rolb shr (bad) leave push dec and cmp cmpsb scas and movsl xor xor popa mov pop or stc ror jae popa enter jne dec cmp imul cmp (bad) mov dec cltd andb rclb aam divb sub in sbb fsts mov xchg out ljmp cs mov push nop call xor scas lret sub outsb out sub pop pop mov leave hlt xchg int push sbb aad jl into sbb sbb nop push nop in xchg mov and jno xchg lock aad je adc (bad) aam leave push test enter sub outsb cmpsl cs rclb lea or sub sbb sbb adc cmpsl out rorw xor inc fs xor in adcb jp mov pop lds push nop aaa lods scas xchg (bad) fisubs jmp xchg (bad) pop ds xchg mov mov sub fwait shlb xchg insl ljmp dec fisttpll js add pop xchg inc dec pop imul cli and out mov cli fwait mov call cld push sbb add dec dec je test sarb cmp shll and fucomi xlat sbb out pop jbe sub sahf sbb mov and xchg xor iret sub xchg xor or push aas sti mov sbb jbe xor mov mov movsl mov cmpsl lahf mov les inc xor mov add lods outsl add inc idiv sbb imul dec xor cmp cwtl jg aaa adc cmc and and or scas push int3 lods jecxz arpl insl sbb incb sbb mov xor pop mov xor sbb test cmp dec outsl bound test xor cmp adc fsubrl test jle push jae gs xor ret mov xor loop fists mov and xor insb aas clc jmp mov mov inc and cmpb xchg mov jae std nop pop mul jmp xchg sbb test lret adcb cmp (bad) rcr mov es jl xchg rcrb ja arpl mov insb pop pop dec add nop loop jg mov ss sub adc loope call fldenv ds insl jmp mov mov repz inc sti xor fstl mov movsb cmp inc sarb and sti cltd lock enter fs xchg dec inc aas test xor jge mov jg xor fisubrl (bad) insl mov or in in xlat rcrb mov fstpl lock les pop pop (bad) cld outsb or scas out pusha sub jno insb leave mov inc push or test mov jb jl xchg mov mov push mov mov adc and sbb in pop sbb je movsb movsl lock pop in and pop mov pop lods cmp js lods enter dec cmp jl sub jge clc es into and jne adc mov loope xchg xor mov mov js aaa out and mov or cmpsl and (bad) sbb and pop xchg loop xor mov mov xchg shll xchg mov sub lcall push inc xchg mov faddl push aaa add or cmp inc mov iret insb adc mov mov inc repnz adc push dec or loop and mov xchg mov fwait mov andb mov push (bad) cmpsb mov sub insb mov ds push and mov pusha scas or sbb addb add jbe js adc and fwait sbb pop add xor xlat faddl xor loop negb call loopne or jg int repz ss nop iret sbb sbb test fcmovnbe pop and dec hlt test adc dec xorl stc or lea nop pop loop out aaa out pop scas cmpsl push (bad) mov mov (bad) out shlb data16 add les and xchg mov pop arpl mov leave xchg mov xchg or sub sbb dec or in enter jnp pop or icebp jg push aad les imul aaa inc clc pop mov mov dec sub cltd add sahf jno test into mov xor cmc dec rcrl push insl jmp or xor scas push xor imul mov fadd pop addb test lods lcall sbb imul rcrb sbb jmp scas gs push push rorl jo cmp sub cmp mov mov inc jnp js add xchg daa push push sbb jecxz or or lret test andnps stc xchg (bad) and dec cli push ja adc fcmovnu push shrb pop scas jecxz js into jae add cmpsl nop pushf sub dec mov cmp jo arpl sbb xlat xor sarl mov shrb and push mov sbb and test cmp pop pop and movsb icebp pop or dec cmp add pushf pop into xor push adc fwait testb pop dec dec cs nop sarb xchg es popf leave cmp sub outsb icebp inc pop outsb fdivrl or mov jl in in mov jge sub adc mul shll mov lds sub stos pop and push push into loopne mov mov scas lret mov jmp bound mov scas lds in lret cli mov xchg mov lock push sub fcompl imul inc jp cwtl add imul xchg cmpsl cmpsl mov mov es je in aas int cmc in mov imul test rcl jne in and fstps xchg cld sub xor outsb push xlat xchg mov fisubrl sub rolb lea add cltd mov scas add or xor mov movl jge icebp int3 dec add cmp dec aaa imul jb stos cmp jp sub jle xchg iret mov jg mov jmp jge xchg adcb or adc push sarb lea jb imul sub addr16 push xchg adc mov jle mov inc hlt (bad) xor jp pop jo repz cmpsb ljmp pop rorl ret dec sub xchg pop sbb lret and data16 das ret adc adc mov jnp adc loop adc cmp xlat addr16 xor jae imul hlt fs dec pop mov mov xchg repz insb sbb push shll xor push movsl push mov test mov xchg gs sbb setne shll loop out outsl and popf ljmp cmp sbb and jle decl adc fs (bad) vpsrlw add push pusha outsl aaa mov cld pop nop add fidivrs pop lcall cli mov stc jbe push jge adc jb lret mov stos pop inc cwtd mov mov addr16 pop inc icebp jne pop cmp into imul imul mov jne dec std adc sti sbb xchg dec xchg outsb out shll das pop aaa dec inc sbb jo add mov loop,pt aaa jne aaa push in lea push jae fs dec mov push lret clc xchg daa xor xchg decb mov add call fstl pop jge stos or mov adc push insb mov mov jb sti inc int xchg sti push jle popa out push xlat arpl jnp inc int lods fldcw loopne mov add dec mov jo sti outsl vmovaps pop das add aas mov clc jnp push lock add and xor and push fcomi sarl xchg pushf sbb pusha sub mov shl andl lds stos xor test and inc (bad) mov jns insb ret leave addr16 and sahf xchg jno fdivrs pop loop,pn cs imul ret adc shrb and psrld inc dec fldcw pop pop sbb cltd into mov loope add pusha push testl sbb xor lea jb jmp (bad) pop je mov or cmpb in add or pop stc xchg push xchg decb push pusha js or and mov cwtl dec add add addr16 cmp jl mov adc dec ret shrb imul jmp sub xchg sub lods or sbbl (bad) insb outsb push leave gs stc push std leave (bad) ljmp fisttps insl add sbb xchg popa rcll mov xchg dec lock ds icebp (bad) aam lods mov popf movsl mov jo das in shrb sbb inc xchg cmc pushl push adc dec test xor (bad) jb or (bad) dec js lret in dec and mov das rcll pop xor stos (bad) mov xchg add fwait popa (bad) lods es and mov or shr orl dec out pop sarb sub cmp pop jbe das sbb add inc sbb out div lods mov std sub sti fldt xlat inc sbb and xor pop pop shll adc leave arpl and lods jmp or mov sbb sbb and mov gs ss mov jge hlt inc jne and shll cmp or sbb dec dec adc faddl xor shrl cmp pushf and outsl std jle cli mov leave dec popa das inc sarb inc xor dec xlat adc or popa ja adc in add fbld push shl sub lea pop das scas mov jecxz cmp and xor outsb gs scas and js sbb bound shll out (bad) jle mov sub pop add jnp lret dec mov sti sbb in into orl xchg lret sub inc mov aas mov test hlt push add outsb sub arpl dec std fstpt xor and jecxz loopne add mov dec fcomp pop in int sahf push xorl dec cs bound jae pushf push out xor inc add in xor xor mov mov pop scas ret add xor cmp arpl pop add push notb repz push and add sahf mov dec aaa jg adc cmp loope xchg int add loope lcall mov mov xor popa sub cmp mov xchg or cmpsb jge cmp mov jno int3 push out cmp jmp lock leave inc jbe sub or inc adc dec xchg jbe dec cli pop mov mov ficoms jmp ja cltd jnp,pn outsb pop add add (bad) outsb js add ljmp movsl mov mov mov inc fnstsw stos and loope imul aam sarl push mov lahf push jb fisubl jle or push cli mov sub pop fiaddl xor cmc add sbb into xchg jl roll mov xchg mov push addl ljmp cmp (bad) pop call (bad) fwait daa pop stc fstps and js repnz and fbld add push jo jb es mov mov jge pop push fadd sahf mov and fstl movsb add sbb jle daa cmp iret xchg test jp fadd fstl int xor iret cs aad mov stos and fcmovnb hlt std cmpsb scas inc (bad) cmp cmp fstl push pop mov cmpsb nop mov shll aas or outsb adc mov out mov hlt ljmp adc jno jecxz mov cwtl pop add lret adc out jb xchg jge push mull adc lret inc les push dec sbbl lea jp mov dec fwait in fcomip ds mov lcall out push je inc loope lock xor xor sbb daa adc or pop das cmp inc pop adcb sub or mov mov cmp into arpl dec add es xchg cmpb (bad) and int ljmp cmpsl sub push test push sub call add mov mov and in cmc dec and mov inc inc xchg sbb stos into ffree inc xlat jnp push dec jl sbb mov shrl dec pop xchg cmc sbb rcl jl pusha cli mov lcall xorl cmpsl icebp push add jne,pn sbb mov mov fwait xchg xchg lock loope or jnp lock bound sbb jbe into mov in test imul int push fistps xlat sti cmp or pop mov sub fsubrs fcoms pushf fnstenv add pop or sub and lret shll push dec mov les jg dec adc push cvtps2pi jnp sarb fisttpll stos insl aam lock xlat pusha aas testb fwait cmp and lock pop cmp dec adcl bound lds ljmp push jbe xchg sub add and cwtl xchg xor ljmp pop imul add jb xchg stc mov out ffreep test inc std ds mov addb fnsave sub push xor xchg xor ret orb sbb aaa loopne sbb repnz lcall dec call mov cmc sub cs and imul es or rcr pop movsb cli xor xor cmp sti mov xchg (bad) shlb dec xchg stos sbb add jbe lock ljmp push int3 mov jp push xor aam pusha jg xor popf je cmp mov stc mov sub movsb aas (bad) dec push inc dec dec cs dec dec add push gs outsb outsw jb popa je outsl outsb push push add add add dec pop inc inc inc add jne addr16 jae popa je jae add jne addr16 jae popa je jae add jne addr16 outsb outsl je outsw jne and inc bound addr16 outsw jne and push mov sub call push pop mov xor push call test push push call test mov call push push push push call xor cmp mov test xor push push call or mov int mov int mov int mov test nop nop int cmp je nop nop nop push cmp setae push push push call mov int mov push call mov add mov mov xor or add sub mov add cmp add and pop call inc cmp jne mov add lea sub sub call add sub cmp cmp add not dec call call not or lea cmp cmp cmp sub lea and xor sub cmp push call sub xor mov add xor mov xor and add call pusha lea sub add sub mov mov xor add add sub xor lea add sub and push call cmp neg sub add cmp add xor mov inc sub and cmp mov xor and not add xor xor cmp not cmp cmp mov popa cmp jne call mov add mov mov lea pusha xor add xor xor sub or xor and mov xor lea sub push call sub cmp add xor mov or nop inc add dec sub sub add popa mov add add and pusha cmp and xor mov cmp sub sub mov inc neg and mov popa add push push push push call pusha cmp add mov and or inc xor and xor and xor xor sub xor xor cmp sub call add cmp not xor push call cmp sub add mov and and add mov popa test je mov mov mov lods test je mov stos jmp mov mov mov rep mov add jmp push mov sub call pop lea push add mov mov mov push push call mov mov pop push mov add rep lea movzwl pushl push push call pushl pushl call push push mov and push mov add push jmp and dec add add sub add lea sub nop nop nop mov xor xor neg mov xor add sub sub xor sub sub add xor lea mov xor xor cmp xor cmp cmp xor and cmp and push mov pusha mov add push mov mov test je test jne mov mov add add mov add cmpb jne inc jmp push call mov lods test je bt jae and jmp add add push push push call pop stos jmp pop add jmp pop popa leave ret cmp sub neg and and add xor mov xor add mov xor push mov pusha mov mov push mov add mov mov add rep pop add dec jne popa leave ret sub and cmp sub sub lea and add cmp dec sub nop nop and cmp sub sub cmp mov cmp and not and cmp add sub push mov pusha mov mov add push call push push push call push push push push call test je add cmp jl popa leave ret sub add and sub xor sub sub add mov add sub pusha mov xor mov std stos dec jns cld xor mov xor divb xchg xor add add add mov movzbl mov mov mov inc cmp jne popa ret add xor mov sub xor sub mov xor lea xor add sub and add sub cmp cmp xor mov push mov pusha mov and push mov add pop mov movzbl mov mov mov mov add mov popa leave ret and add xor xor nop sub sub sub add add cmp lea push mov mov and xor push call leave ret and cmp sub mov add add and mov add mov sub mov neg xor mov cmp lea add push mov pusha movb mov mov mov lods stos test je loop sub neg mov call popa leave ret lea xor xor cmp and add sub mov mov mov xor cmp and sub add not sub add xor sub cmp neg cmp mov sub add sub and lea add xor xor push call mov mov mov lods push call stos loop ret cmp lea dec xor sub xor add sub add dec add add cmp add call xor and xor sub xor add add cmp sub sub cmp sub and push pop mov ret lea xor and xor sub and xor sub or cmp xor cmp add or sub mov mov sub push push call add sub not xor add xor and sub add sub add cmp xor sub and and push pop mov ret nop push pop mov xor nop int cmp je push pop mov xor nop mov int mov int mov int nop mov nop test nop mov int mov xor mov pushl mov xor div popl add xor call push call nop push push mov inc add sub test xor pop pop pminsw nop push push call test jne push push push push call jmp push push push push call push call push push push push call mov mov add xor mov push add mov movb inc dec jne dec jne pop mov push call mov cmp mov mov mov mov nop push push call rdtsc xor add rdtsc sub cmp jae nop mov mov mov cmpl jne push call mov mov test jne mov movb call mov cmpb jne mov mov movzbl or jne fnclex fwait smsw test jne smsw test je push call test push push call test mov call push push push push call xor cmp mov test xor xor mov ret rdtsc int xor add push pop mov xor mov mov mov jmp mov int int int push call int loop test test xor push push pushl mov test xor pop pop pop mov jmp call xor push push pushl mov test xor pop pop pop mov jmp call nop xchg inc ror xor imul xor push push pushl mov imul xor pop pop pop mov jmp call mov nop xchg inc ror xor test mov mov test xchg inc dec xor test mov mov test xchg inc ror test imul mov mov test xchg sub ror test test xor push push pushl mov test xor pop pop pop mov jmp call mov nop xchg sub dec xor test xor push push pushl mov test xor pop pop pop mov jmp call xor push push pushl mov test xor pop pop pop mov jmp call nop xchg inc dec xor imul xor push push pushl mov imul xor pop pop pop mov jmp call mov nop xchg inc ror xor fwait mov mov test xchg inc dec xor test nop xchg inc ror xor imul mov mov nop xchg inc ror test imul inc inc test xchg sub dec test test inc mov test xchg sub ror xor imul mov mov nop xchg sub ror xor imul mov mov nop xchg inc dec xor dec mov mov nop xchg inc ror test test xor push push pushl mov test xor pop pop pop mov jmp call mov nop xchg sub ror test imul inc inc test xchg sub test xor imul mov mov fwait xchg sub ror xor test mov mov nop xchg inc ror xor imul mov mov nop xchg inc test test imul xor push push pushl mov imul xor pop pop pop mov jmp call mov nop xchg sub ror test test inc mov test xchg sub ror test imul mov mov test xchg sub test xor imul mov mov nop xchg inc dec xor test mov mov nop xchg inc ror xor imul mov mov ret xor mov inc xor inc cmp jne ret xor mov inc xor inc cmp jne ret xchg inc add cmp bound inc add cmp inc cmp push cmp dec cmp push cmp cmp pop cmp jbe inc add cmp sahf cmp mov aaa inc add aaa inc add aaa inc add aaa inc add aaa inc add aaa inc add aaa inc add inc add aaa inc add aaa inc add aaa inc add add inc add inc add add add inc add add add cmp add add cmp add cmp add add push cmp add add add mov add dec inc push dec inc dec xor cs dec dec add dec xor cs dec dec add inc push xor cs dec dec add hlt aaa add add add push cmp add cmp add cmp add cmp add add push cmp add add add cmp add cmp add cmp add add add aaa add add add push cmp add cmp add cmp add cmp add add push cmp add add add cmp add cmp add cmp add add add add jo outsb fs outsb jne add add fs imul add jne insb push arpl add outsb fs imul add inc imul outsl ja js add add je outsb jne add inc gs gs popa addr16 outsl jae add dec outsb jbe insb imul je add add inc push jo jb add add dec outsl popa fs jne jae jb add add jae popa addr16 outsl js add add jae push jne je gs popa add add jb outsb push outsl inc insb imul add je popa jb je outsl jae add push jb arpl outsl jo jo outsb jne js add cmp add cmp add cmp add cmp add cmp add cmp add cmp add cmp add add add data16 add add cmp add cmp add cmp add cmp add cmp add cmp add cmp add add and add sub add add add cmpsb cmp add add aam add call cmp add cmp add cmp add cmp add add add data16 add add cmp add cmp add cmp add cmp add cmp add cmp add cmp add add and add sub add add add add inc insb outsl jae dec popa outsb fs add add insl jo jb inc imul add inc js je jb arpl jae add inc gs jne jb outsb je push add add inc gs imul push jo arpl add add je js je outsl fs jb arpl jae add add je imul add inc gs popa jae inc jb outsl jb add add je outsl fs gs popa outsb fs gs add add inc gs jb arpl fs jae add add inc gs imul je add add outsl bound inc jb add add dec jae bound addr16 jb jae outsb je add dec outsl popa fs imul add add push gs jb push inc add add je jb arpl jae data16 dec popa jae add add push insb gs add push insb gs js add push outsb insl popa jo imul insb add add jb jne insb inc insb insb outsl arpl add add jb jne insb inc jb add add jb jne insb push jb je arpl add insb jae jb popa je add add insb jae jb insl jo add add insb jae jb outsb inc add jo add xchg add pushf cmp add add lret add add add add xchg add pushf cmp add add lret add add add add gs je inc jb jae dec outsb imul add gs je inc outsl outsb je outsb imul add inc gs gs dec bound arpl add inc gs gs arpl popa jo add add je imul outsl jb add add je gs inc outsl insb outsl jb
 mov mov mov mov mov push push push push push sub mov mov mov sub testb mov mov mov jne xor mov mov cmp jbe lea mov cmp jb mov cmp jae cmpl je cmpl je mov lea mov add callq test js jle cmpl jne cmpq je lea callq test je mov mov callq mov mov mov add callq mov mov movslq mov mov add mov mov mov callq callq inc add cmp jae jmpq xor jmp mov xor sub cmp jbe lea mov cmp jb mov cmp jae cmp jb cmp jae testb jne cmpl je mov cmp je jmp mov add mov mov mov add callq inc add cmp jb mov lea mov mov mov mov pop pop pop pop pop retq int3 int3 int3 rex sub mov mov mov mov callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 data16 data16 xchg sub xor xor mov mov callq add retq int3 int3 int3 int3 int3 int3 data16 data16 mov mov mov mov jmp int3 int3 int3 int3 int3 int3 xchg retq int3 int3 int3 int3 int3 int3 data16 data16 nop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor retq int3 mov mov push sub lea lea lea mov movl callq xor test je xor callq jmp or mov mov lea mov mov lea cmp je mov inc mov inc cmp jl movslq cmp jge lea sub xor callq mov callq mov test je mov mov callq inc cmp jl mov callq mov mov add pop retq int3 int3 mov retq int3 int3 mov mov mov push sub mov mov mov mov cmp jae xor jmpq lea add mov mov inc xor inc dec jne lea mov callq add add mov mov test jne xor lea inc inc cmp jb test je dec shr inc lea mov mov callq add dec jne mov cmpl jne add mov mov addl lea mov mov mov mov pop retq mov push push push push push lea sub andl andl orl mov xor mov and and and lea lea lea lea lea xor mov xor callq lea lea mov callq lea test jne lea lea mov callq test je xor callq jmpq callq mov callq mov and xor callq test jne callq mov lea callq test jne mov lea callq mov mov callq mov test je xor mov mov lea callq mov test je xor callq mov lea mov mov callq mov lea mov mov mov callq test jne mov lea lea mov callq test je mov lea lea mov and mov mov xor callq mov test je test je mov mov callq test je mov callq mov mov callq jmp mov mov test je callq callq mov test je callq test je xor cmp jbe movb add cmp jb xor mov mov callq test je cmpl je mov callq mov mov add pop pop pop pop pop retq int3 int3 int3 sub test jne callq jmp callq jmp xor add retq mov mov mov mov mov push mov mov mov xor xor xor mov mov mov xor and xor or xor or xor mov not mov xor mov xor and mov mov xor and and xor or xor xor xor xor and ror xor mov ror xor shl xor xor xor xor ror mov shl ror xor mov xor xor xor mov ror ror xor xor xor and mov or xor xor and not xor xor and xor xor xor xor xor xor xor ror xor xor xor ror mov mov ror shl xor xor mov xor shl ror xor xor ror xor ror mov xor or xor and xor or not xor or xor xor and mov xor mov xor and xor mov xor xor xor xor xor xor xor mov shl ror xor xor ror xor mov ror xor xor ror xor shl ror xor mov mov xor and not ror mov xor xor or xor xor and xor or xor and xor xor and xor xor ror xor xor mov xor mov xor xor mov xor mov ror xor shl ror xor mov ror xor shl ror xor xor xor ror xor mov and xor or xor xor or xor mov xor xor and xor and xor xor xor xor mov xor xor xor mov shl ror xor xor ror xor xor ror mov shl ror xor xor ror xor xor ror xor mov not or xor xor xor mov or mov mov xor xor xor or mov mov mov mov xor xor and xor xor xor xor xor xor mov ror mov shl ror xor xor xor xor mov shl ror xor xor ror xor xor ror xor ror mov xor not or mov xor and xor and xor xor xor or xor xor mov or xor mov xor xor xor xor mov shl ror xor xor ror xor mov ror xor shl ror xor xor ror xor mov ror xor mov not xor or xor xor mov mov xor and xor and xor xor xor and xor xor xor mov xor xor xor xor ror xor mov ror xor shl ror xor xor mov xor shl xor ror ror xor xor ror mov and xor or xor or xor not xor and xor xor and and xor mov and mov xor or mov xor mov xor xor xor xor mov shl ror xor xor ror xor xor ror mov shl ror xor xor xor xor ror ror mov mov mov xor xor mov and xor xor or xor and not xor xor xor xor xor mov xor and mov xor mov xor xor xor shl ror xor xor ror xor xor ror xor mov ror xor shl ror xor mov xor ror mov or xor and xor or not xor xor mov or xor xor and xor xor xor xor and xor xor xor xor xor xor mov ror shl xor ror xor xor ror xor xor ror mov mov xor mov ror shl xor mov xor and not ror mov xor xor or xor xor and or xor mov xor and xor xor xor and xor xor xor xor xor mov ror mov xor ror shl xor xor xor mov shl ror xor xor ror xor mov ror xor mov ror xor and xor or xor xor or xor xor xor xor and xor xor xor and xor xor ror xor xor xor mov xor xor ror shl ror mov xor xor xor mov xor shl ror ror xor xor ror xor mov not or xor xor xor mov or mov mov xor xor or xor xor and xor xor xor xor xor mov xor mov mov shl xor ror xor xor ror xor xor ror xor mov ror xor xor shl xor xor mov ror ror mov xor not or xor and xor and xor or mov xor xor or xor xor xor mov xor xor xor ror mov mov xor xor xor mov shl ror xor mov ror xor shl ror xor mov xor xor xor mov ror xor not ror or xor mov xor xor and xor and xor xor xor and xor mov xor xor mov xor xor xor xor mov ror xor shl ror xor xor ror xor xor ror xor mov ror shl xor xor mov and ror xor or xor or xor mov not and xor xor and xor mov and xor or xor mov mov xor xor xor ror mov and xor mov xor shl ror xor xor ror mov xor xor xor mov shl ror xor xor ror xor mov ror xor xor xor and mov xor or mov xor and not xor xor mov xor xor xor xor mov and xor xor mov xor xor shl ror xor xor ror xor xor ror mov shl ror xor xor ror xor xor ror mov mov or xor xor and xor or not mov mov mov xor mov xor or mov xor xor and mov and xor xor xor mov xor xor xor xor ror xor xor mov shl xor xor ror xor xor ror mov shl ror xor xor ror xor xor ror xor mov not and xor or xor xor and xor or xor and xor xor xor xor xor xor and xor mov ror xor shl xor xor xor ror xor ror ror xor mov ror shl xor xor xor ror mov mov mov xor mov and xor or xor xor or xor xor xor xor and xor and xor xor xor xor mov xor xor mov mov shl ror xor xor ror xor xor ror xor xor mov shl xor ror ror xor xor ror xor mov not or xor xor xor or xor xor or xor xor mov and xor xor xor xor xor xor mov ror xor mov xor shl xor ror xor mov ror xor xor ror shl ror xor xor xor mov xor mov ror or xor not xor and xor and xor or mov mov or xor mov xor mov xor xor xor xor mov xor mov xor xor mov ror shl xor ror xor xor ror xor xor ror mov xor shl xor mov xor ror xor mov ror or xor mov xor not xor and xor and xor xor xor and xor xor xor mov xor xor xor xor mov ror xor xor ror shl ror mov xor xor xor mov xor ror shl ror xor xor ror mov and xor or xor or not xor mov and xor mov xor xor and xor xor mov xor or and xor ror xor and ror xor mov xor shl xor xor xor xor mov shl ror xor xor ror xor xor ror ror xor xor mov mov and or xor xor xor and not mov xor and xor mov mov xor xor xor xor xor xor xor ror mov mov xor xor shl xor ror xor mov ror xor xor shl xor mov ror ror xor mov xor ror or xor and mov or not xor mov mov xor xor xor xor or xor and mov and xor xor xor xor xor xor xor xor xor mov shl ror xor xor ror xor xor ror xor mov ror shl xor ror xor mov not xor and mov ror mov xor xor or xor xor and or xor xor mov mov mov xor and xor xor xor mov xor xor and ror xor mov xor xor shl xor ror xor mov ror xor xor ror xor shl ror xor xor ror xor mov mov and xor or xor xor or xor mov xor xor and xor and xor xor xor xor mov xor xor xor mov shl ror xor xor ror xor xor ror mov shl ror xor xor ror xor xor ror xor mov not or xor xor xor or mov mov or xor xor xor mov mov xor mov xor and mov xor xor xor xor xor mov xor mov ror xor shl ror xor xor ror xor mov ror xor shl ror xor xor mov xor xor or ror xor xor and not xor and xor or xor mov mov xor or xor mov xor mov xor xor xor xor xor ror mov xor shl xor ror xor mov ror xor shl ror xor xor ror xor mov mov mov mov mov mov not xor ror xor mov or xor xor xor and xor and xor xor xor and xor xor xor xor mov xor mov xor xor mov mov mov mov pop retq int3 mov push push push push push push push sub mov mov sub mov mov mov inc dec jne mov mov mov mov mov mov xor mov xor xor mov xor xor xor xor xor rol xor mov xor xor rol xor mov xor xor rol xor mov xor xor rol xor xor mov xor xor xor rol xor xor mov xor xor mov xor xor xor rol xor mov xor rol xor mov xor rol xor mov xor xor rol xor mov xor xor mov xor xor xor rol mov mov xor xor xor xor rol xor mov xor rol mov mov xor xor mov xor mov xor xor xor rol xor mov xor xor rol xor mov xor xor rol mov mov xor xor xor xor mov mov xor mov xor xor xor xor rol xor mov xor xor rol xor mov xor rol xor mov xor xor rol xor mov xor xor rol mov mov xor xor xor mov xor xor xor mov rol xor xor mov xor xor mov rol xor xor mov xor rol mov xor mov mov xor xor mov xor rol add xor mov mov xor xor mov xor mov xor rol xor xor xor xor xor mov xor xor rol xor mov xor xor rol xor mov xor rol mov xor xor xor rol mov xor xor xor rol mov mov xor xor xor mov xor xor xor rol mov xor xor rol mov mov mov mov xor xor xor xor xor xor rol xor mov xor xor rol xor mov xor xor rol mov mov mov xor xor xor xor xor mov xor mov xor xor xor xor rol mov xor mov xor rol xor mov mov xor rol xor mov xor xor rol xor mov xor xor rol xor xor xor xor xor mov mov xor mov xor xor rol xor mov xor xor rol xor mov xor rol xor mov xor xor xor rol xor xor mov xor xor xor rol mov mov xor xor xor xor rol xor mov xor rol mov mov xor xor xor xor rol xor mov xor xor xor rol xor mov xor xor xor rol mov mov xor xor xor mov xor mov xor xor rol xor mov mov xor xor rol xor mov xor xor rol xor mov xor xor xor rol xor xor mov xor xor xor rol mov mov xor xor xor mov xor xor mov xor rol xor mov xor xor rol xor mov xor xor rol xor mov xor xor rol mov mov xor mov xor mov xor xor xor xor rol xor xor xor xor xor mov xor xor rol xor mov xor rol xor mov xor rol xor mov xor xor mov mov xor rol xor mov mov xor xor mov xor rol xor xor xor xor xor mov xor xor rol xor mov xor xor rol xor mov xor rol xor mov xor xor mov xor rol xor mov xor xor rol mov mov xor xor xor xor rol mov mov xor mov mov xor xor xor xor xor xor mov add xor rol mov xor mov mov xor rol xor mov xor xor rol xor xor mov mov xor xor mov xor rol xor xor mov xor xor mov xor mov xor xor mov xor rol xor mov xor rol xor mov xor rol xor mov xor xor rol xor xor mov xor xor xor rol xor mov xor xor xor rol xor mov xor rol mov mov mov xor mov mov xor mov mov xor mov xor mov mov xor mov xor rol xor mov xor xor rol xor xor mov xor xor xor rol xor xor mov xor xor mov xor mov mov xor mov xor xor rol xor mov mov xor rol xor mov xor rol xor mov xor xor rol xor xor mov xor xor mov xor rol xor xor mov xor xor mov xor xor rol xor mov xor rol xor mov xor rol xor mov mov mov xor xor mov xor mov xor mov rol mov mov xor mov mov xor xor rol xor mov mov xor xor mov xor mov xor xor mov mov xor mov rol xor xor mov xor xor mov rol xor mov xor mov mov xor rol xor mov xor xor rol xor xor mov xor xor mov xor mov xor rol xor xor mov xor xor xor xor rol xor mov xor rol xor mov xor rol xor mov xor mov mov mov mov xor xor rol mov xor xor mov xor xor mov xor mov xor mov mov rol xor xor xor xor xor mov xor mov mov xor rol xor mov xor rol xor mov xor rol xor mov xor xor rol xor xor mov xor xor mov xor mov xor mov rol xor xor mov xor xor xor xor mov xor rol xor mov xor rol xor mov xor rol xor mov xor xor rol xor mov xor mov mov mov mov xor xor xor mov rol xor xor mov xor xor mov xor mov xor xor mov mov mov xor rol xor mov xor rol xor mov mov xor rol xor mov mov xor mov xor rol xor xor mov xor xor mov xor rol xor xor mov xor xor mov xor xor mov xor xor rol xor mov xor rol xor mov xor rol xor mov xor xor rol xor mov xor xor rol xor mov xor mov mov xor mov xor xor xor mov rol xor mov mov mov mov mov xor xor xor xor xor rol xor mov xor rol xor mov mov xor mov xor rol xor xor xor rol xor xor xor mov mov and xor mov xor xor rol xor xor rol xor or xor or xor mov xor and mov xor xor and and mov xor mov mov and xor mov mov or xor xor mov mov mov mov mov mov mov and mov xor xor xor or xor xor not or xor and xor mov not mov mov and mov xor or mov mov mov xor or xor xor and or xor xor xor xor mov mov mov and xor and mov xor xor or not xor xor and xor xor xor xor mov and xor xor not mov mov and not xor mov xor mov and and xor mov xor or xor xor xor or and mov mov xor mov mov mov mov xor mov xor or xor mov xor mov mov mov mov mov and mov xor mov mov mov or xor xor xor xor and xor not xor or xor and not mov mov xor xor xor mov mov mov mov mov mov xor xor and not mov xor or mov xor xor xor xor or xor and mov mov xor or not xor xor mov mov mov mov mov and xor not mov xor or xor and xor and mov mov or or not xor xor mov mov mov mov xor mov and mov mov xor or xor or xor mov xor and mov and xor xor and xor mov and mov xor xor mov mov mov mov mov mov or mov xor mov and mov mov xor xor or xor xor or xor and xor mov not mov mov and mov xor or mov xor xor mov mov mov mov mov or xor xor not xor mov and mov or xor xor and xor and xor mov xor and mov mov xor mov xor mov mov mov mov mov and mov xor xor or not xor xor xor and xor not xor xor and xor mov xor mov mov mov mov not mov mov mov and xor or xor xor xor or mov and xor xor mov xor mov or xor mov xor mov mov mov mov and mov xor mov mov mov or xor xor mov xor and not mov xor xor xor mov or xor and mov mov xor xor mov mov mov not mov xor mov mov xor xor sub and or not xor xor xor xor or xor and xor mov mov mov or mov xor xor not xor mov mov mov mov mov not mov and xor xor or xor and xor and not mov xor mov mov or mov or xor mov mov mov xor mov mov mov mov mov xor or and mov xor xor and or xor xor xor and and mov and xor mov xor mov mov mov or xor xor mov mov mov mov mov xor xor and xor or mov and xor or xor xor mov not mov mov and xor or mov xor xor mov mov mov mov mov not mov mov or xor mov xor and or xor xor xor and xor xor and mov xor and mov mov xor mov mov mov mov xor mov xor xor or and not xor xor xor and mov xor xor and xor xor mov mov xor mov mov mov mov not mov mov mov not and xor or xor xor xor or and xor xor xor mov mov or xor mov xor mov mov mov mov mov and mov xor mov mov mov or xor xor xor xor mov xor and not xor or xor and not mov mov xor xor xor mov mov mov mov mov xor xor mov and not mov xor or xor xor xor or xor and xor mov not or mov xor xor mov mov mov mov mov mov mov not and mov xor xor or xor xor and xor and not mov xor mov mov or mov or xor mov xor mov mov mov xor or and mov mov mov and xor xor xor or xor xor mov and and mov mov and xor mov xor mov mov mov or mov xor xor mov mov mov sub mov mov and xor xor xor or or xor xor and xor and xor mov mov mov or mov not xor xor mov mov mov mov mov or not xor xor mov mov xor and xor or xor and xor xor and mov xor mov and mov xor mov mov xor mov mov mov xor xor or and not xor xor xor and mov xor xor mov xor and mov xor xor mov mov mov mov mov mov not not mov and xor or xor xor xor or and xor xor xor mov mov xor or mov xor mov mov mov mov mov and mov xor mov mov mov or xor xor xor mov and xor xor not xor or xor and not mov mov xor xor xor mov mov mov mov mov mov xor xor and mov not xor or mov xor xor xor or xor and xor or mov mov xor not xor mov mov xor mov mov mov not mov mov xor and mov xor or xor and xor and mov or or not mov xor xor xor mov mov mov mov mov mov mov xor or and xor or mov xor xor and mov xor xor and xor mov and and mov xor mov mov or xor xor mov mov mov add pop pop pop pop pop pop pop retq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq
 push mov sub push push push cld mov mov push pop lea rep mov and or mov lea mov pushl pushl pushl pushl mov call add pop pop pop mov pop ret mov push mov call cmpl movl jne cmpl jne mov mov mov pop ret movl jmp mov push mov push pushl mov call movl mov pop pop ret mov push mov pushl call pop pop ret mov push mov pushl call pop pop ret mov push mov sub push lea call push lea push call int3 mov push mov push mov movl call testb je push call pop mov pop pop ret mov push mov sub pushl call pop mov cmpl jne pushl call pop test jne mov and jne mov or mov mov call push call pop push lea call push lea push call jmp mov leave ret mov push mov pushl call pop pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp mov push mov sub mov xor mov mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea movl mov mov push mov call mov xor call leave ret mov push mov pop jmp int3 int3 int3 int3 cmp jne ret jmp mov push mov push mov push xor cmp jne xor jmp cmp jne call push pop mov push push push push push call add mov jmp cmp je cmp jb push pushl pushl call add jmp pushl push pushl call add cmp je cmp jae call push pop mov mov jmp push pop pop pop pop ret int3 int3 int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov sub mov push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne lea mov mov mov mov mov cmp je jmp lea lea mov lea mov mov mov test je mov call movb test jl jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je mov push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je mov push push mov call jmp mov push mov push mov call testb je push call pop mov pop pop ret push push call mov mov cmp jne pushl call pop jmp push call pop andl mov mov mov mov lea push lea push pushl call add mov mov mov mov mov movl call mov call ret push call pop ret mov push mov pushl call neg sbb neg pop dec pop ret mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret push call pop mov mov test jne inc ret andl xor ret mov push mov push xor push push cmp jne cmp jle decl mov push mov jmp xor jmp cmpl jne mov mov mov mov push mov jmp cmp je push call push push push call test jne jmp movl mov push pop test je push call jmp push push movl call pop pop test jne push push call pop mov xor pop cmp jne push push call cmp je push call pop test je pushl push pushl call incl jmp push call push push push call test jne mov cmp je push call pop jmp mov test je mov add jmp mov test je call sub cmp jae push call andl andl pop push push movl call xor inc pop pop pop pop ret push push call mov xor inc mov xor mov mov cmp jne cmp jne mov jmp cmp je cmp jne mov cmp je mov mov pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je mov movl pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmpl jne cmp jne movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov cmp je cmpl jne movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov mov cmp je cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov movl call mov call ret movl ret mov push mov cmpl jne call pop jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov push call push call push call push call leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test jbe mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret push push call andl mov push call pop test je mov sub push push call pop pop test je mov shr not and movl jmp mov mov mov xor cmp sete mov ret mov movl xor call ret mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret mov push mov pushl pushl pushl pushl push push call add pop ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp je test jne mov mov not mov pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea push push mov push mov mov mov lea push ret int3 push mov push mov mov lea sub push push push mov mov push mov movl mov lea mov ret mov mov pop pop pop pop leave push ret mov ret push mov sub andl lea mov call lea mov mov call add mov mov add mov call lea push lea push push push call xor cmp setne mov pop ret push mov sub mov push push push mov add mov mov cmp je movl lea mov mov jmp movzwl lea cmp ja add movzwl mov imul and shl add imul xor add movzwl test jne cmp je mov cmp jae mov lea call cmpw lea je cmpw je add cmpw jne xor lea mov mov mov test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne cmp je mov cmp jne xor pop pop pop mov pop ret mov jmp push mov sub push call mov cmpl jne xor inc jmp lea mov call lea push call lea mov mov call lea push call cmpl mov je test je call jmp xor pop mov pop ret push push push call mov mov mov andl andl call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov test je mov mov call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov xor movl inc jmp xor pop pop pop ret push mov sub push mov lea call call lea push call mov mov call pop mov pop ret push mov and sub push push mov mov push test je movzwl mov xor cmp jne mov add mov mov mov xor add cmp jne cmp je mov mov add mov add mov add mov xor mov cmp jbe mov mov mov add movl mov mov mov mov test mov je mov mov mov test jle movzbl mov imul and shl add imul mov xor mov inc dec mov mov mov test jne mov mov mov mov cmp mov je inc add mov cmp jb xor pop pop pop mov pop ret mov mov movzwl mov add cmp jb mov add cmp jae mov xor mov test je xor cmp cmove inc inc mov test jne test jle mov mov mov mov test jle movzbl lea cmp ja add movzwl mov imul and shl add imul xor inc dec mov cmpb jne mov call mov mov test jne mov mov mov call mov lea push push lea push call test jne lea push lea push push push call mov xor test lea push cmovne mov call mov test je inc add mov test je mov mov test jle movzbl mov imul and shl add imul xor inc mov dec mov test jne mov mov mov mov call jmp mov jmp movzwl mov test je sub lea movzwl mov test jne ret xor jmp add cmp jne movzwl mov test je sub lea movzwl mov test jne ret test jne xor ret xor mov jmp lea inc cmp jne ret mov call andl movl orl push call pop mov mov mov pop ret mov call andl movl movl movl orl push call pop mov mov mov pop ret mov call andl movl movl movl orl push call pop mov mov mov pop ret push call pop ret push call pop ret push call pop ret push call pop ret push call pop ret push mov call push call pop ret mov call orl push call pop mov mov mov pop ret int3 ret movl ret push mov push or mov lea lock jne mov call lea lock dec jne mov mov pop pop jmp pop pop ret xor ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret push mov mov mov mov mov pop ret push mov push push pushl mov lea push call mov mov cmp jne mov cmp jne xor inc jmp xor mov pop ret push mov mov cmp jne mov cmp jne xor inc jmp xor pop ret mov ret mov call push andl mov push call andl mov movl mov mov mov pop ret mov call push push mov mov orl testb movl je push call pop mov mov pop mov mov pop ret mov call push mov orl movl mov mov mov pop ret mov ret mov call push andl push xor inc cmp jne mov push call jmp pushl pushl call andl mov mov mov pop mov mov pop ret mov call push push mov mov orl testb movl je push call pop mov mov pop mov mov pop ret mov ret push mov mov mov mov movl pop ret mov call push mov orl push push call mov mov mov pop ret mov ret mov ret mov call sub push push mov call pop mov andl test je pushl mov pushl call jmp xor orl lea andl andl push call movl movzbl push lea push push lea mov push call orl mov test je call mov mov pop mov pop ret mov call push mov orl call mov mov mov pop ret push mov and sub andl push push mov push mov mov lea mov call xor inc test je lea mov call test je cmpb lea mov push push mov je call jmp call test je mov jmp xor push pop mov test je lea mov call mov test je mov jmp xor dec mov jne test je lea mov call test je mov jmp xor cmpb je test je lea mov call test je cmpb lea mov push push mov je call jmp call test je lea mov call test je lea mov call test je lea mov call test je lea mov call test je lea mov call test jne xor lea mov call lea mov call pop pop mov pop mov pop ret test je lea mov call jmp push mov push mov push mov mov sub cmp jae xor jmp mov add push push pushl call add mov add pop pop pop ret push mov push mov push mov mov sub cmp jae xor jmp mov add push pushl push call add mov add pop pop pop ret mov call push push mov mov orl testb movl je push call pop mov mov pop mov mov pop ret mov call push mov orl movl mov mov mov pop ret mov call sub push push push mov xor mov mov mov movl mov mov lea call movb lea lea movl xor movl mov mov mov mov movb mov mov mov movb mov mov mov movb lea movl mov mov mov movb lea and movl mov mov movb xor mov mov mov movw mov mov movl movb mov movb mov movb mov mov mov movb lea mov mov mov mov call mov movb lea call movb lea call movb lea call movb lea xor movl xor mov mov mov movb mov mov mov mov call mov test je push call pop mov movb test je push mov call mov jmp xor movb mov movb andl mov cmp je test je mov push call mov movb lea push lea movl mov call movb lea push lea lea push mov call movb lea call lea movl push lea mov call movb lea push lea mov push call movb lea call lea movl push lea mov call movb lea push lea mov push call movb lea call lea movl push lea mov call movb lea push lea mov push call movb lea call push call mov pop mov movb test je lea movl push lea mov call movb xor lea inc push mov mov call jmp xor movl mov movl test je and lea mov call lea call lea call mov xor push push push call mov orl mov mov pop pop pop mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push push push push mov mov movl lea mov movb xor push push call movb lea mov movb push push call movb lea call mov lea call orl lea mov orl push push call mov pop pop mov mov pop ret mov call push mov orl mov orl call mov mov mov pop ret mov call push mov orl call mov mov mov pop ret mov call sub push mov mov movl movl mov test je mov push call lea call mov cmpl je pushl call movb lea mov movb push push call movb lea mov movb call movb lea mov movb call movb lea mov movb call movb lea mov movb mov movb call movb lea call movb mov test je mov push call movb mov test je mov push call movb lea call movb lea mov movb call orl lea call mov pop mov mov pop ret mov call sub push push mov lea push call mov lea push call xor mov mov mov mov mov movb movl mov mov mov movb lea lea mov mov mov lea push call test setne movb mov orl lea call mov mov pop pop pop mov mov pop ret push mov and mov push push push mov sub push push mov push mov call test je movzbl mov mov sub je mov mov jmp andl mov lea sub cmpl jb mov lea call mov push pushl push call lea call andl lea call mov lea push push call test je lea call mov lea push call mov sub je mov jmp xor mov mov sub push mov push call test je lea movl push lea mov call movb lea mov push mov call push lea call movb lea call cmpb mov jne call jmp call call test je mov push call pop call orl lea call mov pop pop mov pop mov pop ret push push call mov movb mov push mov call pop pop ret push mov push lea call lea call mov test je cmpb mov sete movzbl push call mov test je mov push call andl mov mov call test je call test je mov push call pop mov pop jmp pop ret push mov and mov push push push mov sub push push push mov xor push lea call cmp jne mov mov call mov mov cmp je test je mov push call mov cmp je lea movl push lea mov call mov lea mov lea push mov call push mov call orl lea call lea movl push lea mov call movl lea mov push mov call push mov call orl lea call cmpb jne cmp jbe mov lea cmpl jb mov mov push mov call jmp mov sub je mov mov mov sub push mov push call test jne mov call mov pop pop mov pop mov pop ret jmp mov push mov call pop ret mov push mov call pop ret movb mov push mov call pop ret mov call push push push push push mov mov mov andl cmpb jne lea call cmpb je cmpb jne mov call orl mov mov pop pop pop mov pop ret mov mov push call mov test je mov push mov call mov push mov call jmp mov movb call mov call movl mov ret mov ret mov call sub push push push mov mov mov andl cmpb jne mov mov mov push call movb movb push call pop pop mov movb test je lea push pushl mov call jmp xor movb push lea call orl mov mov pop pop pop mov pop ret call mov call mov ret mov call push push push push push mov mov mov xor mov mov mov call mov push lea call mov test je mov push call mov mov cmp jne mov call jmp call test jne mov call orl mov mov pop pop pop mov pop ret call mov call mov ret push mov cmpb je xor pop ret xor cmp jne mov and or je mov test je cmp je movzbl mov jmp dec mov cmp jne imul push call jmp mov mov call mov pop ret push mov test je push movb call mov push mov mov call pop ret mov call push push push push mov andl mov mov test je push mov call orl mov mov pop pop pop mov pop ret mov ret push mov push mov xor mov movl mov mov cmp je mov push lea mov inc test jne sub pop push push mov call mov pop pop ret push push call ret push push call ret mov call push push mov mov andl mov test je mov cmp setne movzbl push call andl orl mov call mov pop mov mov pop ret mov call sub push push mov push mov andl mov mov mov cmp jne cmp jne pushl call mov mov mov mov mov mov andl jmp lea call push lea mov push call mov cmp jne orl pushl call pop mov pop pop pop mov mov pop ret mov test jne ret push mov cmpl je pushl call xor pop mov mov mov pop ret push mov push push mov test je lea call mov call push call pop pop mov pop ret push mov push mov push push mov mov cmp je test je lea call mov call push call pop mov pop pop pop pop ret mov test je mov push call ret mov test je mov push call ret push mov push mov test je push mov jmp mov test je call add cmp jne pushl call xor pop mov mov mov pop pop pop ret push push push mov mov mov jmp mov test je call add cmp jne mov mov pop pop pop ret mov call push mov orl pushl call pop mov mov mov pop ret mov call push mov orl pushl call pop mov mov mov pop ret push mov mov push mov push push mov mov cmp jb sub cmp cmovb cmp jne lea cmp jb cmpl mov jb mov jmp mov push movb push mov call jmp push push call test je cmpl jb mov cmpl jb mov jmp mov test je mov push add push push call add cmpl mov jb mov jmp mov movb pop mov pop pop pop ret push lea movl push call int3 push mov cmpb push push mov mov je cmpl jb push mov test je push push push call add push call pop pop mov movl movb pop pop pop ret push mov cmpb push push mov mov je cmpl jb push mov test je lea push push push call add push call pop pop mov xor movl mov pop pop pop ret push mov mov test je mov cmp setne movzbl push call andl pop ret push mov push push mov mov push mov cmpb jne pushl mov call mov mov test je call push call cmpb mov pop je pop pop pop pop ret pushl call pop ret push mov push push mov mov test je cmpl jb mov jmp mov cmp jb cmpl jb mov mov add cmp jbe cmpl jb mov jmp mov pushl sub mov push push call jmp push mov push push mov call test je cmpl jb mov jmp mov test je push push push call add cmpl mov jb mov jmp mov movb mov pop pop pop pop ret push mov mov push mov push mov cmp ja andl cmpl jb mov jmp mov movb jmp test je cmpl jb mov sub je push add push push call add cmpl mov jb mov jmp mov movb pop mov pop pop ret push mov push mov cmp ja cmp jae pushl push call jmp test jne and cmpl jb mov movb xor cmp pop sbb neg pop ret call int3 movl ret push mov testb push mov movl je push call pop mov pop pop ret mov call sub push push push mov mov mov mov or cmp jbe mov jmp mov mov shr mov xor movl divl cmp jbe push pop sub cmp ja lea jmp push pop andl lea push call mov orl jmp mov mov mov movb inc push call mov movl mov ret orl mov mov mov mov test je cmpl jb mov jmp mov test je push push push call add push push mov call movl test je mov mov orl mov mov cmp jb mov movb mov mov pop pop pop mov pop ret push push mov call push push call int3 push mov push push push mov push mov lea push call mov cmpb je mov jmp mov cmpb je mov jmp mov mov cmp jne cmpb mov jne mov mov mov cmp jne mov jmp cmp jne mov jmp mov mov cmp jne cmpb je mov jmp mov mov jmp mov mov cmpb je mov mov mov cmp jne cmpb je mov jmp mov mov jmp mov mov cmpb je mov mov jmp mov mov mov cmp jne mov jmp cmpb mov jne mov mov mov mov mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov mov mov cmpb jne jmp cmpb jne mov cmp jne mov cmpb jne movb mov push movb call mov mov cmpb jne mov cmpb jne mov cmpb je mov cmpb jne mov push movb movb mov call mov mov mov movb mov mov push movb call jmp cmpb jne movb mov push movb call mov mov cmpb jne mov cmpb jne mov cmpb jne movb mov mov mov cmp jne jmp mov cmpb jne mov push movb movb mov call mov mov mov movb mov mov push movb call movb mov test je call push call pop mov pop pop pop mov test je dec mov mov mov mov mov pop ret push mov mov xor test je cmp ja push call pop mov test je mov pop ret call int3 push mov mov push mov mov mov mov cmpb jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov pop pop ret push mov mov push mov mov mov mov cmpb jne mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov pop pop ret mov mov cmpb jne mov cmpb jne jmp mov mov cmpb je mov jmp mov cmp jne mov mov cmpb je mov mov ret mov call push push push push push mov push call pop mov test jne call movl mov xor mov lea movb test je mov mov lea movb test je mov mov orl movw mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call push push mov push mov mov test jne or mov andl push call push call pop orl mov push mov call movb movl cmpl jne push call pop test je andl andl jmp xor mov mov orl lea call mov mov pop mov mov pop ret mov call mov sub push mov push mov test jne or mov andl push call push call pop orl push mov call movb movl cmpl jne push call mov pop mov movb test je mov call movb andl movb jmp xor movb mov mov orl lea call mov mov pop pop mov mov pop ret mov call push push mov push mov push mov test jne or mov andl push call push call pop orl push mov call movb movl cmpl jne push call pop test je andl jmp xor mov mov orl lea call mov mov pop pop mov mov pop ret cmpb mov push push mov je call ret call ret cmpb mov push push mov je call ret call ret push mov push push push push mov mov lea mov sub mov call mov test je push pushl mov call mov mov jmp test je mov mov call test je mov jmp xor inc cmp jne mov pop pop pop mov pop ret mov call push push mov mov andl andl mov movb movl movb mov movl mov mov mov mov movb mov orl mov mov mov mov pop ret mov call mov sub push push xor mov mov test jne or mov mov push call push call pop orl mov push mov call movb movl cmpl jne push call pop mov movb test je mov call mov movb mov mov orl lea call mov mov pop mov pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov cmpb jne mov test je mov mov cmp sbb inc jmp mov mov cmp setb mov test je mov jmp mov jmp mov mov test je mov cmp jne pushl pushl push push lea push mov call mov mov mov movb mov mov pop pop pop mov pop ret lea call mov mov mov cmp jae pushl push push pushl jmp mov mov mov mov jmp xor push push call int3 mov cmpb je mov jmp mov cmpb jne jmp mov mov cmpb je mov jmp mov cmp jne mov mov cmpb je mov cmpb jne mov mov ret mov call push push push push push mov mov mov mov mov sub mov cmp jbe add mov mov mov pop pop pop mov pop ret jae sub add push mov call xor mov mov sub add push push pushl call add orl mov jmp mov cmpl je pushl call pop xor mov mov mov jmp xor push push call int3 push mov mov mov push mov sub cmp jae mov sub dec cmp jb sub or sub add push mov shr sub cmp jae xor jmp add cmp cmovb push call pop pop pop ret call int3 mov call push push push push push mov mov xor mov mov test je cmp ja push call pop mov mov test jne call andl mov sub push pushl push call add orl mov sub mov cmpl je pushl call pop lea mov mov add mov mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call push push push push push mov mov andl push call pop mov mov xor inc mov test je movl mov mov movb movl mov mov mov jmp xor mov movb mov test je call mov mov orl mov mov pop pop pop mov pop ret mov test je mov call push call pop push push call int3 push mov push push push mov cmpl jae pushl call incl mov mov mov mov cmp jne mov mov mov mov mov jmp cmpb je mov mov cmp jne mov jmp mov mov cmp jne mov mov mov jmp mov mov mov cmp jne mov cmpb je cmp jne mov mov push call mov mov movb mov mov movb mov pushl call jmp cmpb jne movb movb mov mov movb mov mov jmp cmp jne mov mov push call mov mov movb mov mov movb mov pushl call mov cmpb je mov pop pop mov movb mov mov pop pop ret call int3 push mov test je mov call push call pop pop ret test je mov push call ret mov call push push mov mov orl testb movl je push call pop mov mov pop mov mov pop ret mov call push push push mov mov movl lea push call movb lea call movb lea mov movb call movb lea call orl mov call push call pop mov mov pop mov mov pop ret mov call push push push push push mov call mov mov xor mov mov lea movb test je mov mov mov cmp je mov mov mov mov mov mov mov mov mov orl mov mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call push push push push push mov mov push call pop mov mov test jne call movl mov mov xor mov lea movb test je mov mov mov lea movb test je mov mov mov orl mov mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call mov push mov test jne push call mov pop test jne call mov andl test je movl movb movl mov mov mov mov movb orl mov mov pop mov mov pop ret mov mov jmp mov ret lea ret push mov push mov push mov call cmpb je push call pop pop pop ret mov call push push mov mov movl orl testb movl je push call pop mov mov pop mov mov pop ret mov jmp mov call push push mov xor push mov xor mov movl mov mov cmp je mov push lea mov add cmp jne mov sub sar pop push push mov call orl mov mov pop pop mov mov pop ret mov test jne ret mov call push andl pushl mov call andl mov movl mov mov mov pop ret push mov push mov push mov mov call sub mov cmp jae xor jmp mov push mov call add push pushl call add mov add pop pop pop ret push mov push pushl mov pushl mov call mov mov call mov mov pop pop ret mov mov jmp mov call push mov orl call mov mov mov pop ret mov call sub andl push mov lea push call xor inc mov lea push pushl push call test lea push je mov call mov movb lea call mov mov pop mov pop mov pop ret pushl mov call test je mov lea push call jmp push lea movl push call int3 mov call push mov orl add call mov mov mov pop ret push mov push pushl mov call test jne mov mov sub je dec jne push pushl mov call jmp push lea mov push call mov call pop pop ret push mov mov push mov mov mov lea mov mov mov mov mov mov lea push call mov pop pop ret mov call sub push push mov push mov mov xor mov mov movl mov mov movl lea mov mov mov mov call mov movb lea lea call test jne push lea movl push call mov mov mov cmp je lea mov mov add mov lea push call movb lea push pushl mov call movb lea call lea call mov cmp jne movb lea call orl mov pop mov pop mov pop mov pop ret mov call push mov orl add mov orl add call mov mov mov pop ret push mov push pushl mov call test jne pushl mov call test jne xor jmp xor inc pop pop ret push mov and mov push push push mov sub push pushl mov call test je xor jmp andl andl call mov movl lea push mov call pushl lea push lea call mov call lea mov push call orl lea call mov mov mov pop mov pop ret push mov and mov push push push mov sub push push push mov mov push call test jne push mov mov call test jne push lea movl push call lea mov push lea push call lea mov add push call andl lea push push mov call mov mov mov jmp cmp je lea call mov cmp jne jmp push lea mov push call orl lea call mov pop pop mov pop mov pop ret mov call push mov push mov mov movl lea mov mov mov mov mov mov mov mov lea push call orl mov mov pop mov mov pop ret push mov and push push mov push mov sub andl andl push mov call mov movl lea push mov call mov mov mov cmp je add lea push push lea call mov call lea call mov cmp jne lea mov push call mov call orl lea call mov mov pop mov pop ret push mov and push push mov push mov sub push lea push call andl mov mov movb mov andl movl mov movb lea lea movb lea mov call test jne push lea movl push call movb mov orl lea call mov mov pop mov pop ret mov call push push push mov andl andl mov call andl mov pushl movl call mov mov mov cmp je lea add push mov push call mov call lea call mov cmp jne mov mov mov pop mov pop ret mov call sub orl push movl xor mov mov lea push add call movb lea push push push push lea call mov neg sbb xor mov lea push push call inc pop jne lea call mov orl lea call mov mov mov mov pop ret push mov and push push mov push mov sub andl andl push push mov call mov movl lea push mov call lea push lea push lea call mov cmp setne orl lea call mov mov pop mov pop mov pop ret push mov push push lea mov push lea push call mov xor cmp pop setne mov pop ret push mov and push push mov push mov sub andl andl push push mov call mov movl lea push mov call pushl lea pushl push call mov orl lea call mov mov pop mov pop mov pop ret mov call sub andl push push mov mov push mov call mov mov lea mov mov call pushl lea lea call movl lea mov call mov lea push push push mov push call mov add test jne push call jmp lea push call movl movb lea call mov mov pop pop mov pop mov pop ret mov call sub push mov lea push lea mov push call mov cmp je add lea push call andl lea mov push call testb je pushl lea push call movb mov push call movb lea call orl lea call mov jmp xor mov mov pop mov pop ret push mov push push mov mov call mov mov test je call cmpl mov jne mov add push pop rep pop pop pop ret push lea movl push call int3 push mov sub push mov push mov mov mov call cmp jb push lea push push lea call mov call pop pop mov pop ret push lea movl push call int3 push mov and push push mov push mov sub push lea push call andl cmpl je mov lea call mov test je push lea call mov mov mov cmp je movl lea call mov cmp jne orl lea call mov mov pop mov pop ret mov call sub push mov lea push call andl mov mov movb lea andl movl mov movb lea mov lea push lea movb push mov movl call test jne push lea movl push call mov lea call test je cmpb lea mov push push mov je call jmp call test je lea mov push call movb mov orl lea call mov pop mov pop mov pop ret mov call sub push push push push lea call xor mov mov mov movb lea movl mov mov movb lea mov lea push lea mov push mov mov call test jne movl push lea push call mov cmp je movl jmp mov lea call test je cmpb lea mov push push mov je call jmp call test je cmp jne mov mov orl lea call mov pop pop mov pop mov pop ret mov call sub orl push push push mov movl andl lea push call movb lea pushl mov call mov neg sbb movb lea push push call inc je movl push lea push call lea mov push call movb lea push push push push lea call mov neg sbb movb lea push push call inc je push call lea mov push call movb lea push push push push lea call mov neg sbb movb lea push push call inc je movl jmp pushl lea call movb lea push push lea push lea call mov call lea push lea call movb lea call orl lea call mov pop pop mov pop mov pop ret mov call sub push push push mov mov andl movl orl movl push lea call movb lea pushl mov call mov neg sbb movb push push lea call inc je push mov call movl movb lea call mov mov mov pop pop pop mov pop ret lea push mov call movb push push push lea push lea call mov neg sbb movb push push lea call inc je call cmp je cmp je push call lea push mov call movb push push push lea push lea call mov neg sbb movb push push lea call inc je movl push lea push call push mov call jmp lea call push lea call movb cmpl jne lea push mov call movl movb lea call jmp pushl pushl lea call movb lea push mov call movl jmp movl push lea jmp mov call push mov xor mov lea movl mov mov mov mov call orl mov mov mov mov pop ret mov call push mov push pushl mov mov mov lea mov mov mov mov mov movl mov call orl mov mov pop mov mov pop ret push mov push push mov push mov mov lea call xor test je lea mov push push mov cmp je call jmp call test je lea mov call test je lea mov push push mov cmp je call jmp call test je lea lea test jne mov mov push call test je mov pop pop mov pop pop ret push mov push push push mov xor cmp jne mov jmp mov lea mov add cmp jne sub sar cmpl mov mov jb mov cmp mov cmovb test je mov cmp jne add add dec jne jmp sbb and inc xor cmp setne or cmp cmovb test pop pop cmovne pop pop ret mov call push push mov mov andl andl call mov orl mov mov pop mov mov pop ret push mov push mov lea push push push push mov call mov cmp je mov cmp jae push lea mov push push mov call push add mov push push lea push call mov pop lea pop pop pop ret mov call sub push push mov push mov andl mov mov mov cmp jne cmp jne call jmp lea call push lea mov push call mov cmp jne orl pushl call pop mov pop pop pop mov mov pop ret mov call push push push mov push mov lea push call mov cmpb je mov jmp mov cmpb je mov jmp mov mov cmp jne cmpb mov jne mov mov mov cmp jne mov jmp cmp jne mov jmp mov mov cmp jne cmpb je mov jmp mov mov jmp mov mov cmpb je mov mov mov cmp jne cmpb je mov jmp mov mov jmp mov mov cmpb je mov mov jmp mov mov mov cmp jne mov jmp cmpb mov jne mov mov mov mov mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov mov mov cmpb jne jmp cmpb jne mov cmp jne mov cmpb jne movb mov push movb call mov mov cmpb jne mov cmpb jne mov cmpb je mov cmpb jne mov push movb movb mov call mov mov mov movb mov mov push movb call jmp cmpb jne movb mov push movb call mov mov cmpb jne mov cmpb jne mov cmpb jne movb mov mov mov cmp jne jmp mov cmpb jne mov push movb movb mov call mov mov mov movb mov mov push movb call movb lea mov orl add mov orl add call push call pop mov pop pop pop mov test je dec mov mov mov mov mov mov mov pop ret push mov mov pushl call mov mov mov mov mov mov andl pop ret push mov push push mov lea push push mov call mov mov cmp je mov mov cmp jae mov mov lea mov pop pop mov pop ret push mov mov push mov push push mov mov cmp jb sub cmp cmovb cmp jne lea cmp jb cmpl mov jb mov jmp mov xor push mov push mov call jmp push push call test je cmpl jb mov cmpl jb mov jmp mov test je lea push mov lea push push call add cmpl mov jb mov jmp mov xor mov pop mov pop pop pop ret push lea movl push call int3 push mov push push mov mov test je cmpl jb mov jmp mov cmp jb cmpl jb mov mov lea cmp jbe cmpl jb mov jmp mov pushl sub mov sar push push call jmp push mov push push mov call test je cmpl jb mov jmp mov test je lea push push push call add cmpl mov jb mov jmp mov xor mov mov pop pop pop pop ret push mov mov mov cmpb jne mov mov cmp jae mov jmp mov mov cmpb je mov mov pop ret mov call push push mov mov push mov cmpb jne pushl mov call mov lea mov orl lea mov orl add call push call cmpb mov pop je mov pop pop pop mov mov pop ret push mov push mov mov push mov cmp ja andl cmpl jb mov jmp mov xor mov jmp test je cmpl jb mov jmp mov sub je lea push lea push push call add cmpl mov jb mov jmp mov xor mov pop mov pop pop ret push mov push mov cmp ja cmp jae pushl push call jmp test jne and cmpl jb mov xor mov xor cmp pop sbb neg pop ret call int3 mov call sub push push push mov mov mov mov or cmp jbe mov jmp mov mov shr mov xor movl divl cmp jbe mov mov sub cmp ja lea andl lea push call mov mov orl jmp mov mov mov movb inc push call mov movl mov ret orl mov mov mov mov test je cmpl jb mov jmp mov test je lea push push push call add push push mov call movl test je mov mov orl mov mov cmp jb mov xor mov mov mov pop pop pop mov pop ret push push mov call push push call int3 push mov mov xor test je cmp ja add push call pop mov test je mov pop ret call int3 mov call push push push push push mov push call pop mov test jne call movl mov xor mov lea movb test je mov mov lea movb test je mov mov orl movw mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call sub push push mov lea push mov mov mov mov call mov test jne xor jmp mov test je mov mov mov cmp je test je lea mov call test je lea mov push call test je mov jmp xor lea call mov mov cmp jne mov mov pop pop pop mov mov pop ret mov call andl cmpl jbe lea call andl lea mov call test je mov lea push call test je lea mov push lea mov push call mov call orl lea call mov inc mov cmp jb jmp orl lea call jmp mov call sub push push push mov call mov mov xor mov mov lea mov movb test je mov mov mov mov mov add call movb movb movb mov orl mov mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call sub push push push mov mov xor mov mov cmp jne pushl push pushl push mov pushl call mov mov mov pop pop pop mov pop ret mov mov cmp jne mov mov cmp jae pushl push push jmp cmp jne mov mov mov cmp jae pushl push push push jmp mov mov mov cmp jbe mov lea call mov mov cmp jae mov mov pushl push cmpb mov je push push jmp push push jmp mov mov cmp jae mov lea call cmp mov je mov cmp jae mov pushl push cmpb mov je push jmp push jmp mov jmp mov orl pushl push push lea push mov call mov mov mov jmp pushl call push push call int3 mov call push mov lea mov orl add mov orl add call push call pop mov pop mov mov pop ret mov call push push push push push mov mov push call pop mov mov test jne call movl mov mov xor mov lea movb test je mov mov mov lea movb test je mov mov mov orl mov mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 push mov push mov push push mov cmp jae mov inc mov mov mov mov cmp jne mov mov mov mov mov jmp cmpb je mov mov cmp jne mov jmp mov mov cmp jne mov mov mov jmp mov mov mov cmp jne mov cmpb je cmp jne mov mov push call mov mov movb mov mov movb mov pushl call jmp cmpb jne movb movb mov mov movb mov mov jmp cmp jne mov mov push call mov mov movb mov mov movb mov pushl call mov cmpb je mov mov movb mov mov pop pop pop pop ret pushl call call int3 mov call push push push push push mov mov andl mov mov mov mov mov cmpb jne mov cmpb je mov cmp sbb inc jmp mov mov cmp setb mov mov test je mov jmp mov jmp mov mov test je mov cmp jne pushl push push push lea push mov call mov mov mov movb mov mov pop pop pop mov pop ret lea call mov mov mov pushl cmp jae push push pushl jmp call mov mov movb jmp pushl call push push call int3 mov call sub push xor mov mov mov lea push lea push pushl pushl pushl pushl pushl pushl push call add test jne push lea movl push call pushl mov pushl call mov push push pushl movl call mov mov pop mov mov pop ret mov call sub push xor mov mov mov lea push lea push push call add test jne push lea movl push call pushl mov pushl call mov push push pushl movl call mov mov pop mov mov pop ret mov call sub push push xor mov mov mov lea push lea push push call add test jne movl push lea push call mov mov mov lea cmp jbe movl jmp lea mov push push call mov push push pushl movl call mov mov pop pop mov mov pop ret mov call mov sub lea push lea push push call add test jne push lea movl push call mov cmpl je xor jmp testb je mov pushl add lea push call andl mov push call orl lea call push push pushl call mov mov mov mov pop ret push mov and push push mov push mov sub push mov lea push call xor mov lea push mov call test je mov mov add cmp jae mov cmp je mov add add cmp jb jmp pushl lea push lea call movb mov push call mov lea call mov orl lea call mov mov pop mov pop mov pop ret push mov mov sub lea push lea push push call add test je mov push push push mov push call mov pop mov pop ret push lea movl push call int3 mov call sub andl push xor inc mov lea call movb lea call mov lea push call sub lea mov mov push call movb sub lea mov mov push call movb push pushl movb call mov mov lea call movb lea call mov mov mov pop mov pop ret mov call sub push andl andl movl mov mov call lea movl push mov call lea call movb lea mov andl mov mov mov lea push push call lea push lea call mov orl mov add lea push mov call movb lea call movb lea call movb lea call mov mov pop mov mov pop ret mov call sub push push push mov andl andl lea push call movl lea call movb cmpl jne lea mov push call movb jmp pushl lea pushl call movb push lea call movb lea call mov mov add mov add push mov call mov mov movl movl mov mov mov add mov mov mov call mov xor mov add mov mov movl add mov mov pushl pushl push call pushl mov pushl add push call add movb lea call mov lea call mov mov pop pop pop mov mov pop ret mov call sub push push xor mov mov mov lea push lea push push call add test jne movl push lea push call mov mov mov lea cmp jbe movl jmp lea mov push push call mov push push pushl movl call mov mov pop pop mov mov pop ret mov call sub push push push mov xor mov mov test jne call mov mov lea push call mov lea pushl call movb lea mov push pushl pushl pushl call add test jne push lea movl push call mov lea push pushl pushl push call mov xor add test cmovne mov mov lea call orl lea call mov mov pop pop mov pop mov pop ret mov call sub push push push mov xor mov push call pop mov movb mov cmpl je mov lea call jmp push call lea call mov mov mov lea call movb push mov call movb lea call jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov xor mov push call pop mov movb mov cmpl je mov lea call jmp lea call mov mov mov lea call or push push push push push push lea push mov call movb lea push mov mov call pop movb lea call jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov xor mov mov push mov call mov movb push call pop pop mov cmpl je mov lea call jmp lea call mov mov mov lea call or push push push push push push lea push mov call movb mov call cmp jne movb lea call jmp pushl mov mov call pop jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov xor mov push call pop mov movb mov cmpl je mov lea call jmp lea call mov mov mov lea call or push push push push push push lea push mov call movb lea call test jne movb lea call jmp lea push call lea mov cmpw je lea cmp jb sub jmp add mov call test je pushl mov mov call pop jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov xor mov push call pop mov movb mov cmpl je mov lea call jmp lea call mov mov mov lea call or push push push push push push lea push mov call movb pushl pushl xor call pop pop movb lea call jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov xor mov push call pop mov movb mov cmpl je mov lea call jmp lea call mov mov mov lea call or push push push push push push lea push mov call movb xor mov push push lea push call add lea call test jne movb lea call jmp lea push lea call movb push lea call movb lea cmpl cmovae mov shr push pushl push call test jne movb lea call movb movb push push lea call jmp mov mov movl mov xor mov pushl pushl lea call movb movb push push lea push lea call movb movb push push lea call lea cmpl cmovae pushl pushl call pop pop movb lea call movb jmp mov ret orl xor mov mov pop pop pop mov pop ret push mov cmpl jne lea call mov mov mov xor inc pop ret push mov sub push push push push push mov or call mov cmp je push lea push push call add movl lea push push call jmp push lea push call test je lea push push call test jne jmp mov push call pop mov pop pop mov pop ret push mov sub lea push push push push push push mov call test je xor jmp push push lea movl push lea xor push lea inc push push push pushl mov call pushl mov call test jne cmp jne push pop cmp lea lea cmovne movzwl test je sub cmp je mov add movzwl mov test jne xor mov mov jmp xor pop pop pop mov pop ret push mov mov call push mov mov mov mov mov push mov mov mov lea push push lea push push push call test jne xor jmp cmp ja lea push lea push lea push lea push call test je push push push push lea push call lea push pushl lea push push call test jne lea mov push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push call test je pushl lea pushl pushl push call test je lea push push push call neg sbb neg pop pop mov pop ret push mov and sub push push push mov call mov call mov call mov call mov call mov cmp jne xor jmp mov push push push call mov test jne push push push call mov test je orl lea mov push push push call mov test je mov call pushl call lea push push push call test jne lea push push push call test jne lea push push push call test jne push call jmp orl lea mov push push push push push pushl call test jne lea push push push push push pushl call test jne mov mov jmp pushl call push call xor xor push mov lea push push call mov add test jne lea call jmp mov lea mov add cmp jne sub sar lea push push lea push push call add push lea push push call add lea push push push call xor movl mov lea lea movl mov lea mov add mov xorps mov mov mov mov lea movdqu movl mov mov mov movl mov mov mov call cmpl movzbl je pushl call cmpl je pushl call xor test setne pop pop pop mov pop ret mov call push push mov push mov push mov test jne or mov andl push call push call pop orl push mov call movb movl cmpl jne push call pop test je andl jmp xor mov mov orl lea call mov mov pop pop mov mov pop ret mov call sub push push push mov mov lea call andl lea call movb lea mov push mov call movb mov push mov call movb movb mov mov mov lea push mov call movb movb lea push mov call mov cmpb je push mov call mov call movb lea call movb lea call orl mov mov pop pop pop mov mov pop ret mov call sub push push mov push mov movl lea mov mov push call movb movb mov lea push mov call movb movb mov mov lea push call movb lea call movb lea call movb push call movb lea call orl lea mov orl call mov pop pop pop mov mov pop ret mov call push push push mov lea push mov call movb andl movb mov push mov call pop orl lea call mov pop mov mov pop ret mov call push push push mov lea push mov call movb andl mov mov mov mov jmp cmp jae mov jmp mov mov cmpb je cmp je mov cmp jae mov lea mov cmp jne push lea movl push call mov orl lea call mov mov pop mov mov pop ret mov call push push push mov mov movl mov push pushl lea push call orl pushl call pop mov pop mov mov pop ret mov call sub push mov lea push mov call movb andl mov movb mov mov cmp je mov call lea call mov cmp jne orl lea call mov pop mov mov pop ret push mov push mov lea push push push push mov call mov cmp je mov cmp jae push lea mov push push mov call push add mov push push lea push call mov pop lea pop pop pop ret mov call push push push mov mov andl mov push pushl lea push call orl pushl call pop mov pop mov mov pop ret push mov push push mov mov push push mov mov mov mov mov cmpb jne mov cmp jae mov jmp cmpb je cmp cmovb mov mov cmpb je cmpb jne mov cmpb jne mov cmp jae mov mov jmp mov cmpb je xor mov cmp je lea inc call cmp jne mov lea push push push call pop pop mov pop mov pop ret push mov push push mov push mov mov cmp jne cmp jne pushl call mov mov mov mov mov mov mov andl mov mov mov jmp lea call push lea mov push call mov cmp jne mov mov pop pop mov pop ret push mov push push push mov push mov lea push call mov cmpb je mov jmp mov cmpb je mov jmp mov mov cmp jne cmpb mov jne mov mov mov cmp jne mov jmp cmp jne mov jmp mov mov cmp jne cmpb je mov jmp mov mov jmp mov mov cmpb je mov mov mov cmp jne cmpb je mov jmp mov mov jmp mov mov cmpb je mov mov jmp mov mov mov cmp jne mov jmp cmpb mov jne mov mov mov mov mov mov mov mov cmp jne mov jmp mov cmp jne mov jmp mov mov mov mov mov mov mov mov cmpb jne jmp cmpb jne mov cmp jne mov cmpb jne movb mov push movb call mov mov cmpb jne mov cmpb jne mov cmpb je mov cmpb jne mov push movb movb mov call mov mov mov movb mov mov push movb call jmp cmpb jne movb mov push movb call mov mov cmpb jne mov cmpb jne mov cmpb jne movb mov mov mov cmp jne jmp mov cmpb jne mov push movb movb mov call mov mov mov movb mov mov push movb call movb push call pop mov pop pop pop mov test je dec mov mov mov mov mov pop ret push mov push push push mov mov mov cmpb jne pushl mov call mov push call cmpb mov pop je pop pop pop pop ret mov call push push push push push mov call mov mov xor mov mov lea movb test je mov mov mov mov mov mov mov orl mov mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call sub push push push mov mov xor mov mov cmp jne pushl push pushl push mov pushl call mov mov mov pop pop pop mov pop ret mov mov cmp jne mov mov cmp jae pushl push push jmp cmp jne mov mov mov cmp jae pushl push push push jmp mov mov mov cmp jbe mov lea call mov mov cmp jae mov mov pushl push cmpb mov je push push jmp push push jmp mov mov cmp jae mov lea call cmp mov je mov cmp jae mov pushl push cmpb mov je push jmp push jmp mov jmp mov orl pushl push push lea push mov call mov mov mov jmp pushl call pop push push call int3 push mov push mov push push mov cmp jae mov inc mov mov mov mov cmp jne mov mov mov mov mov jmp cmpb je mov mov cmp jne mov jmp mov mov cmp jne mov mov mov jmp mov mov mov cmp jne mov cmpb je cmp jne mov mov push call mov mov movb mov mov movb mov pushl call jmp cmpb jne movb movb mov mov movb mov mov jmp cmp jne mov mov push call mov mov movb mov mov movb mov pushl call mov cmpb je mov mov movb mov mov pop pop pop pop ret pushl call pop call int3 mov call push push push push push mov mov andl mov mov mov mov mov cmpb jne mov cmpb je mov cmp sbb inc jmp mov mov cmp setb mov mov test je mov jmp mov jmp mov mov test je mov cmp jne pushl push push push lea push mov call mov mov mov movb mov mov pop pop pop mov pop ret lea call mov mov mov pushl cmp jae push push pushl jmp call pop mov mov movb jmp pushl call pop push push call int3 mov call push push mov mov movl call pushl call movb lea call orl lea push call mov pop mov mov pop ret mov call push push cmpl push mov jne xor jmp lea push push mov call movb andl pushl push pushl call mov mov test je lea push lea call mov orl lea call mov pop mov pop mov mov pop ret mov call push push push push mov lea push mov call movb andl mov cmp je push mov cmp je add cmp jne jmp push push pushl call push push push call add push push pushl call mov lea sub and push push push call add addl pop orl lea call mov pop pop mov mov pop ret mov call sub push push push mov lea push mov call movb andl xor mov mov andl sub add shr cmp cmova test je pushl push pushl call mov lea inc mov cmp jne mov mov orl lea call mov pop pop pop mov mov pop ret mov call push mov push mov mov cmp jae cmp ja sub sar cmp jne push call mov mov andl test je mov mov orl jmp cmp jne push call mov test je mov mov addl mov pop pop mov mov pop ret mov mov push mov sub sar cmp jae sub push mov sar mov sub cmp jb sub inc sar mov shr sub cmp pop jae xor jmp add cmp cmovb push call pop ret call int3 mov call push push push push push mov mov xor mov mov test je cmp ja shl push call pop mov mov test jne call andl mov sub and push pushl push call add orl mov sub sar cmpl je pushl call pop mov lea mov lea mov mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 movl ret push mov testb push mov movl je push call pop mov pop pop ret mov call push mov movl orl movl mov mov mov pop ret mov call push push mov mov movl orl testb movl je push call pop mov mov pop mov mov pop ret mov call push mov movl andl mov mov mov movl mov orl mov mov mov mov pop ret mov ret mov call push push mov mov orl testb movl je push call pop mov mov pop mov mov pop ret mov call push mov orl movl mov mov mov pop ret push mov push push push push mov mov lea call mov lea push push push mov push call mov add xor test cmovne pop mov pop mov pop ret push mov sub push mov xor push push push mov lea mov lea pop rep mov push pop rep cmp jne push call pop test je andl mov mov movl jmp xor mov mov movl lea movb movsl movsl movsl pop pop mov pop mov pop ret mov call lea mov movb call mov push pushl mov call pop pop test je mov push call pop mov test jne jmp lea call mov push pushl mov call pop pop test je call test setne mov lea call mov push pushl mov call mov push lea push call mov mov add movsl movsl movsl cmpl jmp push lea movl push call int3 push mov sub push mov push push cmp jne mov lea movsl movsl movsl pushl call pop jmp mov test je mov call jmp lea call mov push pushl mov call push mov mov movsl movsl movsl call add pushl call pop pop pop mov pop ret mov call sub push push mov lea push call mov lea push push call xor mov lea call mov push mov push call test je cmp jne xor inc mov mov call mov test je push call test jne push lea movl push call orl lea call mov mov pop pop mov pop mov pop ret mov call push push push mov push mov lea push mov mov call movb andl incl orl lea call mov mov pop pop mov mov pop ret mov call push push push mov lea push mov call movb andl mov test je dec mov cmpl jne mov call orl lea call mov pop mov mov pop ret push mov push push xor mov push push push push call mov test je mov pop mov pop ret push lea movl push call int3 mov call push push push push mov andl cmpl je pushl call orl mov mov pop pop pop mov pop ret mov ret mov call push push push mov mov lea call andl push lea call movb andl movb lea call movb lea mov pushl mov call mov mov mov mov orl mov mov pop pop mov mov pop ret mov call sub mov push mov push push mov movl mov xor mov mov movb lea mov mov mov call mov movb lea mov push call movb lea push lea movl mov call movb lea lea mov push mov call movb andl movb lea call lea andl andl mov mov call mov movb lea push call movb movb movb lea lea mov push call movb xor mov mov mov movb push push push mov call mov test jne push lea movl push call movb lea mov pushl mov call movb xor mov movb mov movb mov movb mov movb lea mov mov mov mov call mov movb xor mov lea mov mov movl mov mov mov call orl mov mov pop pop pop mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push push push mov mov movl mov push pushl lea push call orl pushl call pop mov pop mov mov pop ret mov call push push mov mov andl lea push call orl mov call mov pop mov mov pop ret mov call sub push push push mov mov mov movl push pop mov movb mov xor cmpl cmove mov mov call push lea call mov jmp mov ret movl mov movb lea mov movb mov movb call movb mov test je mov push call movb mov test je mov push call movb mov test je mov push call movb mov test je mov push call movb lea call movb lea call movb lea mov movb lea push call movb mov call movb lea call movb lea push call movb lea call movb mov test je mov push call orl mov test je mov call push call pop mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov andl call call test je mov push call pop orl jmp pushl mov call mov ret orl mov mov mov call mov mov pop pop pop mov pop ret push mov and push push mov push mov sub push push push mov call push mov call pop mov andl test je mov call mov jmp xor orl xor mov inc cmp je test je mov push call push mov call pop mov mov test je mov call mov jmp xor orl mov cmp je test je mov push call push mov call pop mov movl test je mov call mov jmp xor orl mov cmp je test je mov push call push mov call pop mov movl test je mov call mov jmp xor orl mov cmp je test je mov push call push mov call mov pop mov movl test je lea movl andl andl push push mov call mov movb lea call movb lea push call movb jmp xor orl mov cmp je test je mov push call lea mov push lea movl mov call movl lea push pushl lea mov call or mov lea call lea movl push lea mov call movl lea push pushl mov call mov lea call lea movl push lea mov call movl lea push pushl mov call mov lea call lea movl push lea mov call movl lea push pushl mov call mov lea call lea movl push lea mov call movl lea mov push add mov push call mov lea call pushl mov pushl pushl pushl call cmpb je mov mov call lea call mov mov lea push mov call movb movl lea push mov call mov lea call mov pop pop mov pop mov pop ret mov call sub push push push mov mov mov andl movb cmp jne andl pushl call cmpl je lea push lea call movb mov call lea call mov movb mov mov cmp je mov mov mov push call pop mov jmp movb lea call lea mov call andl mov test je push call pop andl orl jmp mov ret orl mov call lea call mov mov lea mov push call movb movl lea push lea call mov mov push call pop orl lea call mov mov pop pop pop mov pop ret mov call sub push mov push push mov add push mov call movb andl mov mov mov jmp mov movl mov pushl call mov cmp jne mov mov mov jmp mov movl mov pushl call lea call mov cmp jne orl lea call mov pop pop pop mov mov pop ret push mov push mov push mov mov mov cmpl je call push call pop jmp call push lea call mov mov test je mov mov call mov mov mov mov call push mov mov call push pushl call add pop pop pop ret push lea movl push call int3 mov call sub push push push mov mov andl lea call pushl mov call test je lea call pushl lea push mov call movb pushl pushl lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov or test jne mov mov mov jmp mov mov mov mov mov test jne mov mov jmp mov mov mov cmp cmove mov lea call pushl pushl push pushl push push lea push mov call movb pushl pushl lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call push push push push mov andl mov mov call jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov lea call lea push mov call movb push push lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov lea call lea push mov call movb push push lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov lea call lea push mov call movb lea call mov call mov push lea call movb lea push pushl lea mov call push lea mov call push call test jne movb lea call movb lea call jmp push push lea push mov call movb lea call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov lea call pushl pushl lea push mov call movb push push lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov lea call pushl pushl lea push mov call movb sub mov mov lea push call movb lea call lea push movb call movb push push lea push mov call movb lea call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov sub mov mov pushl pushl call movb lea call lea push movb call movb push push lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov sub mov mov pushl pushl call movb sub mov mov pushl pushl call movb lea call pushl lea push movb call movb push push lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret mov call push push push push push mov mov mov andl mov cmpl je cmpb jne mov mov mov mov push pushl call jmp orl jmp mov ret orl mov lea push call push call movl cmpl je cmpb jne push call jmp orl jmp mov ret orl mov mov mov mov call mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov xor mov cmp jne mov movb mov call mov mov push call pop mov movb test je push push lea push push mov call movb mov orl mov mov pop pop pop mov pop ret cmpl jne mov mov mov lea push mov call mov ret andl jmp mov call mov ret mov call push push push push push mov mov andl mov call orl mov mov pop pop pop mov pop ret mov call mov ret mov call push push push push push mov mov mov andl mov call mov mov mov call orl mov mov pop pop pop mov pop ret mov call mov ret mov call push push push push mov andl mov pushl call orl mov mov pop pop pop mov pop ret mov ret mov call sub push push mov mov andl mov mov xor inc mov movl movl mov mov push mov mov lea push push call orl mov orl mov mov pop pop mov mov pop ret mov call push mov orl movl orl movl mov mov mov pop ret mov call push push mov mov orl movl orl testb movl je push call pop mov mov pop mov mov pop ret push mov and push push mov push mov sub push push mov mov andl mov mov xor inc mov movl movl mov push lea push push call orl mov orl mov mov pop mov pop mov pop ret mov call sub push push push mov mov mov andl cmpb jne lea call movb mov lea call test je movb lea call orl mov mov pop pop pop mov pop ret lea call mov movb mov mov lea lea call mov mov call mov mov mov call mov movb lea call mov lea push push mov call jmp mov call mov ret mov call push push push push push mov call mov pop mov xor mov test je mov call movb movl movl movl mov jmp mov orl mov push call test je lea mov mov pop pop pop mov mov pop ret add mov jmp add mov jmp add je mov push call ret mov call push push mov mov orl call testb je push call pop mov mov pop mov mov pop ret mov call sub push push push mov mov andl call cmp sete pushl pushl lea call movb push call pop mov movb test je pushl pushl lea push pushl mov call jmp xor movb andl andl push lea call movb cmpb je push call pop mov mov movb test je push push push lea push mov call push mov pushl call push call test jne movl push lea push call mov test jne xor jmp xor call push push mov call movb movl movb jmp xor movb mov mov cmp je test je mov push call mov lea push lea call movb cmpb je movb lea call movb mov test je call movb lea call mov jmp push push mov mov lea push call movb mov movb call movb lea call mov cmpb je mov call jmp testb je movb mov test je call movb lea call xor jmp push pushl call lea call mov mov mov movb mov test je call movb lea call mov jmp mov mov neg mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov andl pushl pushl lea call movb lea push movzbl push pushl sub mov mov lea push call movb movb lea call movb mov call movb movb lea call movb lea mov movb movb movl andl pushl lea push pushl pushl pushl mov call mov lea call movb mov test je mov mov call push mov mov call push lea call movb push lea call movb lea call mov mov call lea call movb pushl pushl lea call movb movzbl push lea push lea push lea push lea call movb pushl pushl pushl call add movb movb mov mov movb movb mov movb lea call movb lea call movb lea call movb movb mov mov jmp mov mov neg mov mov ret orl mov mov mov pop pop pop mov pop ret mov call push mov movl andl mov movl mov mov mov mov orl mov mov mov mov pop ret mov call push push mov mov andl lea call orl mov orl mov movl pop mov mov pop ret mov call sub push push push mov mov mov andl cmpb jne mov lea mov push call movb movb cmpl sete movb lea call test jne mov call test je jmp mov call mov ret orl mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov lea mov push call movb andl lea push mov call movb movb movzbl push lea push push lea push lea call mov inc mov lea push push lea call movb lea call mov testb je cmpb jne xor jmp xor inc push pushl lea push pushl push mov call mov testb je andl jmp lea call cmpb jne movl push lea push call lea push mov lea call mov mov mov mov pushl call lea push lea call movb lea call movb mov test je call orl lea call mov jmp lea push mov lea call mov mov neg mov mov mov pushl call mov mov mov call mov ret andl mov test je call orl lea call xor mov mov pop pop pop mov pop ret push mov and push push mov push mov sub push push push mov movl andl mov mov movl movl movl mov mov mov mov mov mov mov call mov lea mov mov call movb lea push lea call push lea call pushl mov lea push push call movb lea call orl mov orl mov pop pop movl mov pop mov pop ret push mov and mov mov xor cmp je cmp je cmp je cmp je cmp je cmp jne call jmp pushl call jmp call jmp mov push mov call pop jmp push pushl call jmp pushl call mov pop ret mov call sub push push mov push cmpb jne push lea movl push call mov mov call mov pushl lea push lea call xor mov cmp je lea mov push lea call movb lea mov push pushl pushl mov pushl call mov mov mov call mov push mov call push lea call movb mov test je mov call testb jne lea mov push push pushl call movb lea call movb lea call jmp imul mov movl movzbl mov movb movl mov mov movb movzbl push sub lea mov mov push call movb movb lea call movb mov call push lea call movb lea mov movb cmpl movl je pushl push pushl call add lea push lea call movb lea call movb imul mov movzbl mov movl movb movl mov mov movb lea movzbl push lea push lea push lea push call movb imul pushl mov pushl pushl mov call testb je movb mov mov movb mov movb lea call movb lea call movb lea call jmp pushl lea push push pushl mov call movb mov mov movb mov movb lea call movb lea call movb lea call mov mov orl lea call mov pop pop mov pop mov pop ret mov call push mov orl mov orl movl mov mov mov pop ret mov call sub push push mov lea call andl movl movb movl movb movl movb mov mov mov cmp je mov mov call mov mov mov lea push lea call push lea call mov lea push push push call movb movl movb movl orl lea call mov pop mov pop mov pop ret mov call sub push mov lea push movzbl push pushl sub mov mov pushl call andl orl lea call movl mov call movb lea call movb lea mov movb lea push pushl mov movl pushl call orl lea call mov mov pop mov pop ret mov call sub push push mov push cmpb jne push lea movl push call mov mov call mov mov mov andl lea movl mov mov movl lea pushl mov call mov lea push mov call movb movb lea push lea movb call mov mov push mov call pop movb lea call orl mov pop mov pop pop mov mov pop ret mov call sub push push mov mov push mov mov call mov mov mov mov movb mov call cmp jb cmpl je pushl lea push lea call andl lea mov andl mov lea movl push movl movl movb call movb lea call mov lea push pushl call mov test je push call pop movb lea call orl lea call mov call mov test jne push lea movl push call lea mov push mov call cmpl lea pop push pop mov rep push lea pop lea rep jne mov push mov call pop cmpl jne push pushl call test je pushl mov call mov pop pop mov pop mov pop ret push mov push lea call pushl mov pushl pushl mov pushl call add neg sbb neg mov pop ret mov call sub push push push mov mov andl lea call movb lea call lea push pushl mov call test jne mov lea call jmp pushl pushl lea push mov call movb lea call mov jmp mov ret orl xor mov mov pop pop pop mov pop ret push mov and push push mov push mov sub push push mov mov xor mov mov mov movl movl push pop mov mov orl mov mov lea push push push movl mov call orl mov orl mov mov pop mov pop mov pop ret push pushl call xor cmp setne ret mov call sub push mov mov call test jne xor jmp mov push pushl call mov test je push push xor lea push pop rep push pop lea lea rep and mov cmpl mov mov setne mov mov mov mov test je push call neg sbb and mov lea add push call andl lea pushl push call pop pop movzbl orl lea call pop mov pop mov pop mov mov pop ret mov call sub mov mov call test jne xor jmp mov push push pushl call mov xor test je cmpl push push push pop lea rep mov lea push pop lea rep mov lea mov setne mov mov add movl push call andl lea pushl push call pop pop movzbl orl lea call pop mov pop pop mov mov mov pop ret mov call sub push mov mov call test jne xor jmp mov push pushl call mov test je push push xor lea cmpl lea push pop rep mov lea push pop rep mov setne mov mov mov movl mov mov test je push call neg sbb and mov lea add push call andl lea pushl push call pop pop movzbl orl lea call pop mov pop mov pop mov mov pop ret mov call push push push push push mov andl movb movl lea push call orl mov mov pop pop pop mov pop ret mov ret mov test je mov push call ret push mov test je mov call push call pop pop ret mov call push push push mov mov andl mov push pushl lea push call orl pushl call pop mov pop mov mov pop ret push mov push push mov mov push push mov mov mov mov mov cmpb jne mov cmp jae mov jmp cmpb je cmp cmovb mov mov cmpb je cmpb jne mov cmpb jne mov cmp jae mov mov jmp mov cmpb je xor mov cmp je lea inc call cmp jne mov lea push push push call pop pop mov pop mov pop ret mov call push push push mov mov movl movl lea push call movb lea mov movb call orl lea call mov pop mov mov pop ret mov call push push push push mov andl lea push mov call movb movb lea mov push pushl push call mov mov mov sub cmp jae call inc mov mov mov mov mov push mov call pop movb lea call orl mov pop pop test je call mov mov mov pop ret mov call sub push push xor mov mov lea mov push mov call movb movl cmp jne push lea movl push call mov mov push mov add push call mov movl mov mov mov mov mov mov mov decl mov test je call push call pop pop cmp je mov push mov call pop mov lea call mov mov pop pop mov mov pop ret push mov mov push push mov push andl andl mov mov test je xor lea inc lock mov test je call mov mov pop mov pop pop pop ret test je lea ret xor ret push pop ret push pop ret push pop ret push pop ret push pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push push mov push mov mov cmp jne cmp jne pushl call mov mov mov mov mov mov mov andl mov mov mov jmp lea call push lea mov push call mov cmp jne mov mov pop pop mov pop ret mov call push push mov push mov andl mov mov mov mov mov andl cmp je push mov mov test je call push call mov pop cmp jne pop orl pushl call pop mov pop pop mov mov pop ret mov call push push push push push mov push call pop mov test jne call mov test jne mov mov jmp mov movl mov movb lea movb test je mov movb orl mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call push push mov mov andl andl mov movb movl movb mov movl mov mov mov mov movb mov orl mov mov mov mov pop ret mov call sub push push push mov mov xor mov mov mov mov mov cmpb jne mov test je mov mov cmp sbb inc jmp mov mov cmp setb mov test je mov jmp mov jmp mov mov test je mov cmp jne pushl pushl push push lea push mov call mov mov mov movb mov mov pop pop pop mov pop ret lea call mov mov mov cmp jae pushl push push pushl jmp mov mov mov mov jmp xor push push call int3 mov call push push push push push mov mov andl push call pop mov mov xor inc mov test je movl mov mov movb movl mov mov mov jmp xor mov movb mov test je call mov mov orl mov mov pop pop pop mov pop ret mov test je push call push push call int3 push mov push push push mov cmpl jae pushl call incl mov mov mov mov cmp jne mov mov mov mov mov jmp cmpb je mov mov cmp jne mov jmp mov mov cmp jne mov mov mov jmp mov mov mov cmp jne mov cmpb je cmp jne mov mov push call mov mov movb mov mov movb mov pushl call jmp cmpb jne movb movb mov mov movb mov mov jmp cmp jne mov mov push call mov mov movb mov mov movb mov pushl call mov cmpb je mov pop pop mov movb mov mov pop pop ret call int3 mov call push push push push mov pushl pushl call mov mov andl lea movb test je pushl call movb orl mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call push push mov mov movl lea call movb mov test je mov push call movb lea call orl lea call push call pop mov mov pop mov mov pop ret mov test je push call ret mov call push push push push push mov call mov mov xor mov mov lea movb test je pushl call mov orl mov mov mov pop pop pop mov pop ret pushl call pop xor push push call int3 mov call mov push mov test jne push call mov pop test jne call mov andl test je movl movb movl mov mov mov mov movb orl mov mov pop mov mov pop ret mov ret mov call push push mov mov movl orl testb movl je push call pop mov mov pop mov mov pop ret mov call sub push push push mov xor mov mov mov mov mov mov mov mov movb lea mov call movb mov movb lea mov movb movl movb movl movl mov movb mov movb lea push push call movb lea call lea push call orl mov mov pop pop mov pop mov pop ret mov call sub push push mov push lea push mov call movb andl lea push call movb lea mov mov call mov xor mov xor sub add shr cmp cmova test je mov test je mov push call add inc cmp jne movb lea call orl lea call mov pop pop pop mov mov pop ret mov call sub push mov push push lea push mov call movb xor mov mov mov mov mov movb mov mov xor mov sub mov add shr cmp cmova mov test je mov mov mov mov mov jmp mov cmp mov je add cmp jne jmp lea sub and push push push call addl lea add lea push call mov add inc mov cmp jne mov mov lea mov call mov xor sub xor add shr cmp cmova test je mov test je mov push call add inc cmp jne movb lea call orl lea call mov pop pop mov pop mov pop ret mov call push push push push push mov mov mov xor mov mov mov mov mov sub sar mov mov mov test je cmp jbe call push call mov mov lea mov mov mov mov sub and push pushl pushl call add add mov orl mov mov mov pop pop pop mov pop ret mov cmpl je pushl call pop xor mov mov mov jmp xor push push call int3 mov call push mov push mov mov cmp jae cmp ja sub sar cmp jne push call mov mov andl test je mov mov orl jmp cmp jne push call mov test je mov mov addl mov pop pop mov mov pop ret mov mov push mov sub sar cmp jae sub push mov sar mov sub cmp jb sub inc sar mov shr sub cmp pop jae xor jmp add cmp cmovb push call pop ret call int3 mov call push push push push push mov mov pushl call mov mov andl mov sub and push pushl push call add orl mov sub sar cmpl je pushl call pop mov lea mov lea mov mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 push mov mov xor test je cmp ja shl push call pop mov test je mov pop ret call int3 mov call mov push mov test jne push call mov pop test jne call mov andl test je movl movb movl mov mov mov mov movb orl mov mov pop mov mov pop ret mov ret mov call push push mov mov movl orl testb movl je push call pop mov mov pop mov mov pop ret push mov mov pushl mov add call pop ret push mov cmpl mov push mov jne mov jmp pushl call lea lea push call mov test je pushl push call mov pop pop ret push mov mov pushl mov add call pop ret push mov pushl mov pushl pushl mov pushl pushl pushl pushl pushl call pop ret push mov pushl mov pushl pushl mov call movzbl pop ret push mov pushl mov pushl pushl mov call movzbl pop ret push mov pushl mov pushl pushl mov pushl pushl pushl pushl pushl call xor test setne mov pop ret push mov pushl pushl call pop ret push mov pushl mov pushl mov call xor test setne mov pop ret push mov pushl mov pushl mov call xor test setne mov pop ret mov ret mov ret push mov pushl mov pushl mov call movzbl pop ret push mov pushl mov pushl pushl mov pushl call movzbl pop ret push mov pushl mov pushl pushl mov pushl call movzbl pop ret push mov pushl mov pushl pushl mov pushl call movzbl pop ret push mov pushl mov pushl pushl mov pushl pushl pushl pushl call movzbl pop ret push mov pushl pushl pushl pushl call movzbl pop ret push mov push lea call mov mov mov pop ret push mov mov mov mov mov mov pop jmp jmp push mov pushl mov pushl pushl mov pushl pushl call pop ret push mov mov mov mov mov pop ret push mov pushl mov pushl mov pushl pushl call add pop ret push mov pushl mov pushl mov call pop pop pop ret push mov pushl mov pushl mov pushl pushl call add pop ret push mov mov test je cmp ja pushl push pushl call cmpl mov mov cmovae add push push pushl call xor add inc pop ret xor pop ret mov call sub pushl lea call andl mov cmp je push push push call orl lea push push call mov mov mov pop ret push mov mov mov pop jmp jmp xor ret push push push mov mov push call mov pop test je push push push call add jmp xor test jne xor jmp andl mov andl andl mov mov mov movl mov mov movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movb movl movl movl movl movl pop pop pop ret mov call push mov movl xor mov movl movl movl mov mov orl mov mov mov mov pop ret mov call push mov movl andl movl movl mov mov mov movl mov orl mov mov mov mov pop ret mov call push push push xor mov mov mov pushl mov pushl call mov mov mov mov movl mov pop pop mov mov pop ret push mov push push mov call mov mov mov call mov mov mov call mov pop pop pop ret mov call push mov mov movl andl movl movl mov movl mov mov mov mov orl mov mov mov mov pop ret push mov sub mov push push mov movb push mov lea mov mov lea mov mov cmp jb mov test je sub mov mov inc dec jne mov jmp cmp jae add mov cmp jne mov xor inc mov mov inc jmp mov test je movzbl movzbl mov shl add or shr and mov sub add mov cmp jb dec js mov cmp jae mov mov inc mov inc dec mov jns mov cmp jb sub mov pop pop pop mov pop ret mov mov inc inc jmp push mov sub andl mov push mov mov mov push mov mov push lea mov cmp mov mov jae add mov cmp jne lea add cmp jae mov movb inc movl lea add cmp jbe mov mov inc inc jmp lea mov mov mov mov mov mov movzbl movzbl add sub xor movzbl and xor movzwl sub mov and mov mov mov sub mov cmp jb cmp je cmp jne mov cmp jne mov cmp jne mov mov push pop or lea sub mov cmp jne inc inc cmp jl mov lea mov shl sar or mov mov add mov add mov jmp mov mov inc mov lea cmp jae mov jmp mov test je sub mov mov inc dec jne mov jmp sub mov pop pop pop mov pop ret mov call push push mov push mov push push mov mov xor mov lea mov mov mov mov call mov movb xor mov movb mov movb mov movb mov movb mov movb lea call movb lea lea movl push push mov mov mov mov call mov movb lea call movb lea push call movb xor lea push push mov mov mov call mov movb movb orl mov mov pop pop pop mov mov pop ret mov call sub push push push mov mov mov push pop mov movb lea mov pushl mov call mov mov mov mov mov mov andl lea call test jne lea call mov mov movb lea call movb lea push mov call movb lea call movb lea call jmp mov jmp mov ret movl mov movb lea call movb lea call movb lea call movb mov test je mov push call movb mov test je mov push call movb mov test je mov push call movb mov test je mov push call movb mov test je mov push call movb lea mov movb mov movb call orl mov test je mov push call mov mov pop pop pop mov pop ret mov call push push push push push mov xor push pop push mov mov call pop mov mov test je pushl mov call jmp mov orl lea push call push call pop mov movl test je pushl mov call jmp mov orl lea push call push call pop mov movl test je pushl mov call jmp mov orl lea push call push call pop mov movl test je mov call jmp mov orl lea push call push call pop mov push pop mov test je pushl mov call mov orl lea push call mov call mov mov call mov push push mov mov call test jne mov mov call mov pop pop mov pop mov pop ret mov call sub push mov push push mov mov mov call mov mov mov call mov movl lea mov push lea call andl lea push mov mov add call push mov call orl lea call mov lea mov lea push movl call movl lea push mov mov call push mov call orl lea call mov lea push lea movl mov call movl lea push mov mov call push mov call orl lea call lea movl push lea mov call movl lea mov push mov call push mov call orl lea call lea movl push lea mov call movl lea mov push mov call push mov call orl lea call lea movl push lea mov call movl lea push pushl mov call orl lea call mov pop pop mov pop mov pop ret push mov and push push mov push mov sub push push push mov movl mov andl movl movl movl movl lea mov call movb mov mov mov mov call cmp jbe mov mov call push xor pop div mov mov mov call add lea add push call movb lea push call movb lea call mov mov mov call mov mov mov call push lea mov call pop test je lea mov mov call cmp jae mov mov mov call mov lea orl push call lea mov mov mov call push mov call mov pop mov movb test je mov call movb lea call push pop mov andl movb jmp xor movb lea andl andl push call movb lea mov mov push call push mov call mov lea push pushl push call mov mov mov sub cmp jae call inc mov mov mov mov mov call cmpb je movl lea push push call cmpb je lea call cmpb je movl lea push jmp movb mov test je call movb lea call orl movl orl mov pop pop movl mov pop mov pop ret push mov and mov push push push mov sub push push push mov jmp mov lea mov add push call andl mov mov call mov mov mov mov mov call mov mov sub mov call test je cmp mov mov cmova mov push mov call add mov push call test je mov mov add mov call cmp jne mov push mov call mov pop mov mov mov mov mov mov mov decl mov test je call push call pop orl mov test je call cmpl ja jmp push lea movl push call orl mov test je call mov pop pop mov pop mov pop ret mov call push push push push push mov mov andl cmpb jne call orl mov mov pop pop pop mov pop ret mov call mov ret mov call push mov push mov call mov test jne push lea movl push call push call pop mov mov xor mov test je push call orl mov pop mov mov pop ret mov call push push push push push mov mov mov andl cmpb jne cmpb jne call cmpb jne mov call test je mov call orl mov mov pop pop pop mov pop ret mov call mov ret push mov push push push mov mov mov call mov mov mov call cmp jb mov lea push push mov call cmp jne lea mov cmp jne movb jmp mov mov call pop pop mov pop ret push mov push push mov push mov mov call mov mov mov call cmp jae xor jmp mov lea push push mov call cmp jne movb mov pop pop mov pop ret push lea movl push call int3 mov call sub push push mov push mov mov call mov mov mov call lea mov mov mov call mov sub cmp jbe mov mov call mov sub push lea call andl mov pushl pushl mov call cmp je push lea movl push call lea mov push call mov mov call cmp jne testl je mov call push call mov pop mov movb test je lea call movb jmp xor movb mov movb mov mov mov lea push call movb mov mov mov mov movb movl movb xor push lea movl mov call mov mov mov push mov call pop mov lea call orl lea call mov pop pop mov pop mov pop ret mov call sub andl push push lea mov mov push mov call cmp jae movl lea push push call mov mov call mov mov mov mov call cmp jb lea push lea call andl mov mov mov call mov mov lea call mov mov push push lea call pop pop test je cmp jne mov push pushl call orl lea call mov pop pop mov pop mov pop ret movl lea push jmp mov call push push push push push mov mov mov andl mov mov call mov mov call test je mov mov call mov mov call test je mov call orl mov mov pop pop pop mov pop ret mov call mov ret mov call push push push push push mov mov andl mov call orl mov mov pop pop pop mov pop ret mov call mov ret mov call push push push push push mov mov andl mov call orl mov mov pop pop pop mov pop ret mov call mov ret mov call push push push push mov andl movb orl mov mov pop pop pop mov pop ret mov ret mov test je mov push call ret push mov push mov push mov mov cmp je test je mov push call mov pop pop pop ret mov call push push push mov mov movl movl lea push call movb lea mov movb call orl lea call mov pop mov mov pop ret mov call push push push mov push lea push mov call movb andl lea mov push pushl push call mov mov mov sub cmp jae call inc mov mov mov mov mov push mov call pop orl lea call mov pop pop mov mov pop ret mov call sub push mov push lea push mov call movb andl cmpl jne push lea movl push call mov mov mov mov mov push mov mov mov mov mov mov decl call cmpl pop je mov push mov call pop orl lea call mov mov pop pop mov mov pop ret mov call push push push push mov lea push mov call movb andl cmpl sete orl lea call mov mov pop pop mov mov pop ret mov call push mov mov test je orl lea mov orl movl orl push movl call pop mov mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push push mov mov andl mov mov mov mov mov andl cmp je push mov push call pop mov cmp jne pop orl pushl call pop mov pop mov mov pop ret mov call push push push push push mov push call pop mov test jne call mov test jne mov mov jmp mov movl mov movb lea movb test je mov movb orl mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call push push mov mov andl andl mov movb movl movb mov movl mov mov mov mov movb mov orl mov mov mov mov pop ret mov call push push push push push mov mov andl push call pop mov mov xor inc mov test je movl mov mov movb movl mov mov mov jmp xor mov movb mov test je call mov mov orl mov mov pop pop pop mov pop ret mov test je push call push push call int3 mov call push push push push mov pushl pushl call mov mov andl lea movb test je mov mov mov movb orl mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call push push push mov mov andl lea mov movb call orl mov call push call pop mov mov pop mov mov pop ret mov test je push call ret mov call mov push mov test jne push call mov pop test jne call mov andl test je movl movb movl mov mov mov mov movb orl mov mov pop mov mov pop ret mov ret mov call push push mov mov movl orl testb movl je push call pop mov mov pop mov mov pop ret mov call push push mov mov push mov call mov test jne push lea movl push call mov mov push call push call pop mov xor mov test je push mov call jmp mov orl push mov call pop mov xor inc mov test je push push pushl mov pushl call mov orl mov mov mov pop pop pop mov mov pop ret push mov push push push push mov mov push lea call mov lea call mov mov call mov push push call call pushl push pushl mov call add test setne pop pop pop mov pop ret push mov push push push push mov mov push lea call mov lea call mov mov call mov push push call call pushl push pushl mov call add test setne pop pop pop mov pop ret push mov sub push push mov mov push lea call mov lea call mov mov call mov push push call call push pushl mov call add test setne pop pop pop mov pop ret push mov push push push lea call mov lea call mov mov call mov push push call call pushl pushl mov call add neg sbb neg pop pop mov pop ret push mov pushl mov mov call pop xor test setne mov pop ret push mov pushl mov mov call pop xor test setne mov pop ret push mov push push push lea call mov lea call mov mov call mov push push call call pushl pushl mov call add neg sbb neg pop pop mov pop ret push mov mov mov call xor test setne mov pop ret push mov push push push lea call mov lea call mov mov call mov push push call call pushl pushl mov pushl pushl call add neg sbb neg pop pop mov pop ret push mov push push push lea call mov lea call mov mov call mov push push call call pushl pushl mov pushl pushl call add neg sbb neg pop pop mov pop ret push mov push push push lea call mov lea call mov mov call mov push push call call pushl pushl mov pushl call add neg sbb neg pop pop mov pop ret push mov push push push lea call mov lea call mov mov call mov push push call call pushl pushl mov call add neg sbb neg pop pop mov pop ret push mov pushl pushl pushl call add pop ret push mov push pushl call pop pop pop ret push mov pushl cmpl mov pushl mov pushl cmovne push call add pop ret push mov pushl cmpl mov pushl mov pushl cmovne push call add pop ret push mov pushl cmpl mov pushl mov cmovne push call add pop ret mov xor push push push push push push push push push call add ret mov call sub push push push mov xor mov mov mov lea call movb lea call lea push mov call mov movb lea cmp je mov call mov mov mov mov mov mov mov mov movb movb lea call mov mov mov xor mov push pop mul seto neg or push call pop mov mov xor mov mov mov mov cmp je imul mov mov mov mov cmpb setne mov mov mov add mov call mov mov inc mov lea call mov jmp mov mov mov mov mov push xor push push push lea push push push push push call push call add movb movb lea call orl mov mov pop pop pop mov pop ret cmpl je pushl call pop mov ret mov call sub push push push mov mov andl xor xor mov dec jne inc mov sub je dec jne xor inc jmp xor pushl push lea call movb lea push push cmpb setne movzbl push push pushl lea call movb lea call lea push pushl mov call movb movb lea call movb lea call xor jmp mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov mov andl pushl pushl lea call movb lea call mov movl movl mov xor mov mov mov lea push lea call movb movb lea push push mov call movb movb lea call mov mov call movb movb movl xor jmp mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov mov andl lea call push mov call mov mov mov mov call xor jmp mov movb mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov mov andl lea call push mov call mov mov call xor jmp mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov mov andl lea call mov call mov mov call xor jmp mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov andl mov push push call pop pop xor jmp mov mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov mov xor mov lea call mov mov mov mov mov cmp je lea mov call add mov lea call mov jmp mov lea call mov call mov xor jmp mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret mov call sub push push push mov mov andl lea call mov pushl call test jne movl push lea push call xor jmp mov cmpl jne mov call mov mov mov ret orl mov mov mov pop pop pop mov pop ret push mov mov pushl mov pushl pushl mov call add pop ret push mov mov mov lea mov push push mov call pop pop pop ret push mov mov pushl mov mov call pop pop ret push mov mov mov call pop ret push mov mov call pop ret push mov mov mov call pop ret push mov mov push push mov mov pushl mov sub mov movsl movsl movsl movsl movsb call add pop pop pop ret push mov mov mov mov call pop ret mov call push push push mov mov movl andl mov mov movl mov call mov mov mov call mov orl mov mov pop pop mov mov pop ret mov call push push mov mov call xor mov lea mov movl movb movl mov mov movb mov mov mov movb mov mov mov orl mov mov mov mov pop ret mov call push push push mov mov movl call movb lea call movb lea call movb lea mov movb movl orl mov call mov pop mov mov pop ret mov call sub mov andl push push push mov mov call pushl lea call xor inc mov lea mov mov mov mov andl mov pushl movl call push push pushl mov call andl mov pop mov mov pop mov pop mov pop ret mov call sub push push push sub xor mov mov mov mov mov pushl mov call xor inc mov mov lea call movl lea call movb lea movzbl push call push lea mov push call movb jmp lea mov push lea push lea push lea push call lea push lea push lea call test jne mov lea push call mov movb movl movb mov mov movb lea mov movb mov mov lea mov mov pop mov mov mov pop mov pop mov pop ret push mov and push push push mov mov push call movzbl xor add cmp ja movzbl jmp mov xor inc cmpb je push call mov push mov pushl call mov mov mov call mov mov mov incl incl jmp cmpb push pop je pushl mov call mov mov push pushl call mov movzwl mov call mov mov mov add add jmp cmpb mov je push push pop call mov mov push pushl call mov mov mov call mov mov addl addl jmp pushl mov pushl pushl call jmp pushl mov pushl pushl call jmp pushl mov pushl pushl call jmp pushl mov pushl pushl pushl call jmp pushl mov pushl pushl pushl call pop pop pop mov pop ret jmp or adc or adc adc or adc or adc or adc or adc or or or or or or or add or add add add add in push push mov xor mov mov div test je sub add mov pop pop pop ret push mov push push mov push cmpb je pushl push pop call mov mov push pushl call mov mov mov mov call mov mov mov mov addl addl pop pop pop pop ret mov call sub push mov push push mov mov cmpb je push push pop call mov mov push pushl call mov addl cmp jne mov mov call mov xor mov addl jmp mov add lea push lea push call andl mov mov mov push push pushl call push push call mov add xor mov lea push push pushl call mov add orl movl orl movl mov pop pop pop mov mov pop ret mov call sub push push mov push mov mov cmpb je push push pop call mov mov push pushl call mov addl mov cmp jne mov mov call mov xor mov addl jmp mov lea push pushl call pushl xor mov mov mov mov lea push movl call movl lea push lea push call movb mov mov lea push lea push call movb lea cmpl mov cmovae add push push pushl call mov add mov xor mov lea push push pushl call add movb movl movb movl movb lea push push call orl lea push push call mov pop pop mov pop mov pop ret mov call sub push mov mov push call cmpb mov je pushl mov call mov sub mov mov push call andl orl lea call movl lea call movb jmp pushl lea mov pushl pushl push call lea push lea push lea call test jne cmp je pushl mov call movb lea mov movb mov mov orl lea mov orl mov mov pop mov pop mov pop ret mov call sub push push push mov mov call cmpb mov je push mov call mov mov push pushl call mov sub mov mov mov mov addl mov push call andl orl lea call movl lea call movb lea push lea push lea call movzbl lea andl push call imul mov push lea push call movb lea mov push push push call mov mov call mov mov mov addl test je pushl lea mov push lea push lea push call dec jne movb movl movb mov mov movb lea mov movb mov orl lea mov orl pop mov mov pop mov pop mov pop ret push mov push mov mov mov call test jne mov mov call mov mov andl jmp mov mov call mov mov mov call mov mov mov addl pop pop ret mov call sub andl push push push mov mov push call push mov push push call add movl movl movl movl movl mov mov movl lea lea push mov call xor mov movl mov mov sub cltd push pop idiv movl imul mov add add mov push call mov mov pop movl mov pop pop mov mov pop ret push push mov xor push push pop mov sub cltd idiv test je xor mov add mov call push call mov inc sub pop push pop cltd add idiv cmp jb mov mov jmp mov mov push call add cmp jne mov pop mov pop pop ret push mov push mov push mov call mov mov add cmp ja mov mov call add pop pop pop ret push lea movl push call int3 mov call sub andl mov push push push cmpl jb mov call mov mov test jne movl lea push push call movl xor mov call mov mov test je movb mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test sete mov test je mov call mov mov mov andl test jne movb inc cmp jl movl lea push jmp lea push lea call movb xor mov xor push push mov movl mov mov lea push call movb xor inc mov movb lea push push call mov mov call mov mov pop pop mov pop mov pop ret movl lea push jmp mov call push mov push mov mov cmp jae cmp ja sub push mov push cltd pop idiv mov cmp jne push mov call mov imul add andl test je push call orl add pop jmp cmp jne push mov call mov movl test je push call orl addl mov pop pop mov mov pop ret push mov push mov test je push mov jmp mov mov push call add cmp jne pushl call xor pop mov mov mov pop pop pop ret push push mov push push pop mov mov mov sub cltd idiv cmp jae sub mov cltd idiv mov mov sub cmp jb sub lea mov push cltd pop idiv mov shr sub cmp jae xor jmp add cmp cmovb mov push call pop pop pop ret call int3 mov call sub push push push mov mov xor mov mov test je cmp ja imul push call pop mov mov test jne call andl pushl push push push mov mov call add orl mov mov mov mov sub cltd movl idivl mov test je jmp mov push call mov add mov cmp jne pushl call pop imul add mov imul add mov mov mov mov pop pop pop mov pop ret pushl call pop push push call int3 mov call sub push push push mov mov mov mov mov andl cmp je movb test je push mov call movb add mov add mov jmp orl mov mov mov pop pop pop mov pop ret mov jmp mov mov call add push cmp jne push call int3 mov call push push mov mov movl xor mov movl mov mov orl mov mov mov mov pop ret push mov push push mov mov mov cmp jbe cmp jne mov mov call mov cmpb jne mov pop mov pop ret cmpb jne mov mov call mov cmpb jne mov jmp push lea movl push call int3 mov call push andl pushl call andl mov movl mov mov mov pop ret mov call push andl push mov mov call sub mov push mov call mov inc push call andl mov movl mov pop mov mov pop ret push mov and push push mov push mov sub push push mov lea push call xor mov mov call movzbl add cmp ja mov jmp orl movl orl xor inc jmp orl movl orl push pop jmp orl movl jmp orl movl orl push jmp orl movl orl push jmp orl movl jmp orl movl jmp pushl mov sub mov mov push call movb mov lea call movb mov call mov lea mov mov mov orl movl orl mov mov pop pop mov pop mov pop ret push lea movl push call lods pop add lods pop add loopne add loopne add out pop add out pop add add sbb adc pop add sbb add sbb add out pop add sub add cmp add push mov and push push mov push mov sub push push mov lea push call xor mov mov call movzbl mov sub je mov dec je push call jmp sub mov mov push call movb mov lea call movb mov call mov lea mov mov mov jmp push pop orl movl orl mov mov pop pop mov pop mov pop ret mov call push push mov mov andl lea push call movb lea mov mov mov mov call orl mov mov movl pop mov mov pop ret mov call push push andl push push sub mov mov mov push call xor inc mov movb mov call mov lea push call andl mov mov mov pop mov pop mov pop ret push mov cmpb je push mov xor mov divl test je sub add mov pop pop ret push mov and mov push push push mov sub push mov mov call movzbl add cmp ja jmp push mov call mov mov pop mov pop ret push jmp push jmp push jmp mov call jmp mov sub mov mov push call andl orl mov call jmp mov sub mov mov push call movl orl mov call jmp push lea movl push call nop (bad) sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc in push mov push push mov call push pushl lea call add pop pop pop ret mov call sub push push push mov call mov cmpl je pushl lea call andl lea mov mov lea push push call cmpl lea mov lea cmovae add push push call orl lea push push call jmp orl lea push push lea call addl mov pop mov pop mov pop ret mov call sub push push mov xor mov sub lea mov mov push call movb mov lea call movb lea call movb lea call push mov call jmp lea mov push call lea push lea push lea call test jne movb lea mov movb mov mov mov lea mov mov mov orl mov mov pop mov pop mov pop ret mov call sub push push push mov andl push call mov push mov add mov call mov push mov call mov mov mov mov test je lea mov lea push lea call movb lea push lea call movb mov movb lea push mov call movb mov dec jne mov mov orl mov pop mov pop pop mov mov pop ret mov call push push mov mov andl lea push call movb andl orl mov mov movl pop mov mov pop ret push push mov xor mov mov div test je sub add mov pop pop ret mov call sub push push push mov xor and lea mov call and lea push lea mov push call mov jmp test je lea call lea cmp jne sub lea mov mov push call movb movb lea call movb mov call mov mov call movb lea mov movb mov movl jmp call mov xor mov div test je sub add push lea call add mov lea mov push lea push call test jne test je mov call mov xor mov div test je sub add orl lea mov orl mov mov pop pop movl mov pop mov pop ret mov call sub push push push mov mov xor and mov mov mov call cmp jb xor jmp mov test jne test jne mov cmp jne mov mov mov cmp jne inc mov cmp jne inc cmp jne dec mov cmp jne dec test js test js lea mov mov mov call cmp jb mov mov sub push mov call add lea push call andl lea push lea call orl mov mov movl mov mov mov mov mov orl lea mov orl mov mov mov pop pop pop mov mov pop ret push lea movl push call int3 mov call sub andl push push mov xor lea inc call andl jmp lea call cmp cmova mov lea mov push lea push call test jne orl lea mov orl mov mov pop movl pop mov mov pop ret push mov sub andl xor push mov movl mov movl call test jne xor jmp lea call test je cmpw je lea mov call xor inc pop mov pop ret push mov sub push push push xor or push push push push push push push call mov cmp je push mov lea push push lea push push call test je cmpl jne mov cmp jne push push pushl push call cmp je push lea push push lea push push call test je cmpl jne movzwl push call mov pop pop pop mov pop ret push mov sub push push mov xor push lea call test je mov mov mov call mov mov mov call mov mov mov mov call mov mov test je test je test je push push call mov cmp je push lea push push call add movl lea push push call test je mov lea mov push lea call pop lea push push call test jne xor inc push call mov jmp xor pop pop pop mov pop ret push mov sub push push push mov mov xor mov lea mov call pushl lea push call test jne pushl mov mov call pop test jne add cmp jb xor pop pop pop mov pop ret xor inc jmp push mov push push push push push mov mov mov mov mov test je xor cmpl je mov push push lea mov call pop pop test jne mov inc mov imul cmpl jne xor pop pop pop mov pop ret xor inc jmp push mov sub push push push xor mov push push mov mov lea push call mov add cmpl je lea xor push push mov inc call pop pop test jne lea mov push push xor call pop pop test je cmpl je lea call mov lea lea call mov test je push pushl lea push call add test je xor inc jmp mov test je push pushl lea push call add test jne mov test je push pushl lea push call add test jne xor pop pop pop mov pop ret push mov sub push push push xor mov push push mov mov lea mov push call add xor mov lea push xor push push call add lea mov call cmpw lea je mov call lea lea call jmp lea call push lea push lea push mov call test jne xor jmp lea push call cmp je lea call mov cmpl je cmp jne mov mov cmp jge mov test jne cmp je cmp jl mov test je cmp jne mov mov lea mov add call xor inc pop pop pop mov pop ret push mov sub push push push mov mov lea mov call mov mov test mov cmovne lea push push push lea push push call test jne mov lea movl call mov lea push push lea push push lea push pushl call pushl mov call test jne cmpl je cmpl jne mov call test jle cmpw je mov mov call xor inc jmp xor pop pop pop mov pop ret push push mov mov mov mov call mov test jne call test je mov mov call mov mov mov call mov mov mov call mov mov mov call xor mov cmp je cmp je cmp je test je xor inc jmp xor pop pop ret push mov sub push push push xor xor push mov mov lea mov push push mov call add lea mov call mov mov mov call mov mov mov call mov mov mov call mov cmp je test je test je xor inc cmp jne lea push push call push call test je xor inc mov mov lea push lea push push call test je push push push lea movl push push pushl call test push pop cmovne cmpl je test je pushl call mov jmp xor pop pop pop mov pop ret test jne xor mov ret mov push push mov xor xor mov cmp je sub cmp je add mov xor mov cmp jne pop pop ret push push push push mov push push call mov test je lea call mov test je push push push call test jne mov call xor pop pop pop ret mov jmp push mov push push push push mov xor push xor mov inc mov push push push lea mov push call test je push push pushl call test push pop cmovne cmpl je push pushl call pop mov pop pop mov pop ret push mov sub andl push push mov mov push pop lea call lea push call imul neg sbb and add call imul mov add test jne cmp je sub xor inc div lea pop pop mov pop ret push mov sub push push mov push mov cmp jbe test je mov lea push call mov xor div lea push mov call mov xor div mov mov mov cmp je mov mov mov mov mov dec jne pop pop pop mov pop ret push mov sub push push push mov movl xor xor push inc mov push push push mov mov lea mov push call test je lea push push push push pushl call test je push push push pushl call test je push lea push pushl push pushl call test push pop cmovne cmpl je pushl call cmpl je push pushl call pop mov pop pop mov pop ret push push mov call push call push push call push call pop ret push push mov call push push call push call pop ret push mov push xor cmp jle mov mov inc cmp jl pop pop ret push mov push mov test je sub mov dec cmp jne inc test jne xor inc pop pop ret xor jmp push mov xor push mov test jne xor jmp movzwl lea cmp ja imul mov add add add movzwl test jne xor mov inc pop pop ret push mov push push mov mov push push mov call push mov call add cmp jb xor jmp push pushl call xor inc pop pop mov pop ret push push mov mov push call push push push call push push push push call sub neg pop sbb inc pop ret push mov push mov push push test jne test jne xor inc jmp test je mov xor jmp movzwl test je movzwl test je cmp jne dec add add test jg cmp jne cmp je xor test sete jmp xor pop pop pop pop ret jmp cmp je add movzwl test jne cmp jne mov ret xor ret push xor mov jmp cmp jae inc add cmp jne or cmp pop cmove ret push push mov push call lea call mov test je push push call mov pop pop ret push push xor mov push push push push push push push push call mov test je push mov call mov xor test je push push push push push push push push call test jne mov call xor jmp mov pop pop pop ret push push xor mov push push push push push push call mov test je push lea call mov test je push push push push push push call test jne mov call xor jmp mov pop pop pop ret push mov sub lea push push push push xor push push call add lea push pushl lea push call mov lea call mov test je lea push push push call push lea mov call add mov pop mov pop pop mov pop ret push mov push push push push push pushl mov mov call mov cmp jbe xor jmp sub xor mov mov mov push call pop test jne mov inc inc mov cmp mov jbe jmp mov pop mov pop pop mov pop ret push mov push push lea movl push call int3 movl ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret movl ret push mov testb push mov movl je push call pop mov pop pop ret mov call sub push push push mov mov movl andl lea mov mov movl mov movb test jne mov mov lea push push call movb mov movl movb test jne mov mov lea push jmp mov push call pop movb lea movl movl pushl call movb lea pushl call orl mov mov pop pop pop mov mov pop ret push mov mov pushl pushl mov push call add test setne pop ret push mov mov pushl pushl mov push call add test setne pop ret mov push mov call pop ret mov push mov call pop ret mov push mov call test pop setne ret mov push mov call pop ret push mov mov pushl push mov call test pop pop setne pop ret mov push mov call pop ret lea ret lea ret mov call push push push mov call pop mov mov xor mov test je push pushl call orl mov pop mov mov pop ret mov call push push push mov mov movl movl movl lea call movb lea call movb lea call orl mov movl pop pop mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call sub push push push mov mov movl andl lea mov mov movl mov movb test jne mov mov lea push push call movb mov movl movb test jne mov mov lea push jmp mov push call pop movb lea movl movl pushl call movb lea pushl call orl mov mov pop pop pop mov mov pop ret push mov push mov lea push pushl mov pushl push call mov add mov pop ret push mov push mov lea push mov pushl mov pushl push call mov add mov pop ret push mov push mov lea push pushl mov pushl push call mov add mov pop ret push mov mov pushl push mov call pop pop pop ret mov push mov call pop ret mov push mov call pop ret mov push mov call test pop setne ret push mov mov pushl push mov call test pop pop setne pop ret mov push mov call pop ret mov push mov call pop ret mov call push push push mov call pop mov mov xor mov test je push pushl call orl mov pop mov mov pop ret mov call push push push mov mov movl movl movl lea call movb lea call movb lea call orl mov movl pop pop mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call sub push push push mov mov movl xor mov lea mov mov movl mov movb test jne mov mov lea push push call movb movl mov cmp jne mov mov lea push jmp movb push movl lea movl pushl call movb push pushl lea call movb lea pushl call movb mov push mov call pop orl mov mov pop pop pop mov mov pop ret push mov mov pushl push mov call pop pop pop ret push mov mov pushl pushl mov push call add pop ret push mov mov mov movzbl push mov push call pop pop pop ret mov push mov call test pop setne ret mov push mov call test pop setne ret mov push mov call pop ret mov call push mov push push mov call mov pop test je push push call pop mov xor mov test je push mov call mov orl mov push call pop mov pop mov pop mov mov pop ret mov call push mov push push mov call mov pop test je push push call pop mov xor mov test je push mov call mov orl mov push call pop mov pop mov pop mov mov pop ret lea ret lea ret mov call push push mov mov movl lea call movb lea call movb lea call movb lea call orl testb movl je push call pop mov mov pop mov mov pop ret push mov push push call mov sub mov mov mov dec mov cmpl je mov test je mov lea push call mov pop ret push lea movl push call int3 mov call push push push mov push mov movl xor mov mov movl mov movb test jne mov mov lea push push call movb lea movl movl pushl call movb lea pushl call movb lea pushl call movb lea pushl call movb lea pushl call movb lea mov mov movb mov movb mov pushl mov push call pop pop mov orl mov mov pop pop pop mov mov pop ret mov call push push mov push mov movl movl movl mov test je mov push call pop movb lea call movb lea call movb lea call movb lea call movb lea call movb lea call movb lea call orl mov movl pop pop mov mov pop ret lea ret push mov push pushl mov pushl mov push mov call add test jne xor jmp mov push mov call pop mov pop pop ret push mov push push push lea mov mov lea push call pop test je cmpl je mov mov push pushl pushl call mov mov call mov pop jmp xor pop mov pop ret push mov mov mov movzbl push mov push call pop pop pop ret mov call push push push mov xor mov cmp jne xor jmp push call pop mov mov test je mov pushl mov call mov orl mov mov pop pop mov mov pop ret lea ret lea ret lea ret lea ret lea ret push mov sub mov push push push mov lea push call mov lea pop mov pop push pop rep mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop mov mov mov pop mov pop ret push mov and sub mov push push push mov lea push call push pop mov lea push rep mov push push call mov lea mov mov mov mov mov shr mov mov lea mov sub add push push push call lea mov sub push lea push push call add mov pop pop mov pop ret mov push mov call pop ret mov push mov call pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push push mov mov movl andl mov movl mov movb test jne mov mov lea push push call movb lea mov movl movl pushl call orl mov mov pop mov mov pop ret mov call push mov push push mov call mov pop test je push call pop mov mov xor mov test je push call orl mov pop mov mov pop ret mov call mov mov push movzbl mov push push call mov pop pop test je push call pop mov mov xor mov test je push call orl mov pop mov mov pop ret push mov mov pushl pushl mov push push call add test setne pop ret mov call push push mov mov movl lea call movb lea call orl testb movl je push call pop mov mov pop mov mov pop ret mov call push push push pushl mov mov call andl movl orl mov mov pop mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push push push pushl mov mov call andl movl orl mov mov pop mov mov pop ret mov call push mov push push mov pushl mov call andl movl orl mov mov pop mov mov pop ret mov call push mov movl orl call mov mov mov pop ret mov push mov call pop ret mov call push push mov push mov call push mov call andl movl orl mov mov pop mov mov pop ret mov call push push mov mov orl call testb je push call pop mov mov pop mov mov pop ret mov call push push push push mov xor push push mov mov lea call movl mov movb pop test jne mov mov lea push push call mov movl mov cmp jne mov mov lea push jmp movl lea pushl movl call orl mov mov pop pop pop mov mov pop ret mov call push push mov mov andl lea call orl mov call testb je push call pop mov mov pop mov mov pop ret push mov call test je mov push push call pop pop pop ret push mov mov pop jmp mov call push mov push mov mov mov movl mov mov test jne mov mov lea push push call andl test mov sete movl mov test jne mov mov lea push jmp test je mov push call pop orl mov mov pop mov mov pop ret mov call push push push push push mov mov mov movl andl movb call andl jmp mov ret andl mov orl mov call mov mov pop pop pop mov pop ret push mov push pushl mov call mov mov movb call mov pop pop ret mov push mov call pop ret cmpb je push lea push call push mov call pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret push mov push mov mov call mov movb mov mov mov pop pop ret cmpb je push lea push call push mov call pop ret mov call push push push push push mov mov mov movl andl movb call andl jmp mov ret andl mov orl mov call mov mov pop pop pop mov pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret mov call push push mov xor mov mov mov mov mov test jne mov jmp cmp mov jne push jmp push call mov orl mov mov pop mov mov pop ret push mov push mov test je mov call mov pop ret push lea movl push call int3 mov call push push push push push mov mov mov movl andl movb call andl jmp mov ret andl mov orl mov call mov mov pop pop pop mov pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret mov call push push push push push mov mov mov movl andl movb call andl jmp mov ret andl mov orl mov call mov mov pop pop pop mov pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret mov call push push push push push mov mov mov movl andl movb call andl jmp mov ret andl mov orl mov call mov mov pop pop pop mov pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret mov call push push mov mov andl mov test je mov cmp setne movzbl push call andl orl mov test je mov cmp setne movzbl push call andl mov pop mov mov pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret cmpb je push lea push call push mov call pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret push mov push mov call testb je push call pop mov pop pop ret sub jmp sub jmp sub jmp sub jmp sub jmp mov call push push push pushl mov mov lea call andl lea mov mov pushl push call pop pop mov orl mov mov pop pop mov mov pop ret mov call push push mov mov andl mov test je mov push call pop andl orl lea call mov pop mov mov pop ret push call ret push mov mov push mov push mov call movb mov pop pop ret jmp push mov cmpb je pushl call movb pop ret mov call push push mov mov movl xor mov movl movl pushl movl pushl movl movl mov mov call orl mov mov pop mov mov pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push mov movl xor mov movl movl movl movl movl mov mov orl mov mov mov mov pop ret mov call push push push mov mov movl andl movl movl mov movl push movl movl call pop mov mov orl mov mov pop pop mov mov pop ret mov call push push mov mov movl xor mov movl movl pushl movl movl movl mov mov call orl mov mov pop mov mov pop ret mov call push push mov mov movl movl andl call orl movl orl mov movl pop mov mov pop ret push mov push mov push mov mov mov call push mov mov call push mov call mov pop pop pop ret push mov push mov push mov mov mov call push mov mov call push mov call pop pop pop ret push mov push push mov mov push mov lea push call mov push pushl add push call add pop pop pop pop ret push mov push push mov call mov push call push pushl mov push mov call add pop pop pop ret push mov push push mov mov test jne call jmp push pushl call pop pop mov mov pop pop pop ret push mov cmpl je pushl push pushl call add cmpl je pushl call pop andl andl pop ret mov call sub push push mov push mov push mov mov test je mov lea push call test je pushl mov pushl call test je mov jmp xor jmp xor lea mov test mov push je call jmp call test je pushl lea call mov mov pushl pushl call test je lea mov push lea call orl lea call mov mov pop pop pop mov mov pop ret push mov cmpb mov mov je pop jmp pop jmp mov call sub push push mov lea push mov mov add mov call test je testb jne mov test je cmpl jb mov pushl mov push call mov jmp pushl lea call andl mov pushl pushl call test je mov xor shr xor mov inc push pushl mov mov mov lea movl call movb lea cmp je push push push mov call movb lea push push call orl lea call mov jmp orl lea call xor mov pop pop mov pop mov pop ret push mov mov lea sub push push mov mov push push pop mov lea rep push lea call pop xor mov xor mov inc cmp jb pop pop mov pop mov pop ret push push push push mov call mov push sub pop mov xor inc dec jne push mov call lea mov push mov call pop mov inc mov call and cmp jbe lea mov push call push mov mov call push sub pop mov xor inc dec jne push mov call lea mov push mov call pop mov inc mov call shr cmp jb mov mov call test jbe mov call push mov mov call pop pop pop pop ret push mov push push push push mov push mov mov call test jbe mov call push lea mov call pop mov mov call mov shr dec jmp call push mov lea call pop lea mov push mov call push mov mov call sub mov mov mov xor inc dec jne mov test push pop push mov jne call push lea mov call pop push mov call sub mov xor inc dec jne pop pop pop mov pop ret push mov mov mov call mov shl add pop ret push push mov mov mov call mov mov mov call add pop add pop ret push mov push mov call testb je push call pop mov pop pop ret mov call push push push push mov movl andl call orl mov mov pop pop pop mov pop ret mov ret push mov push mov mov call mov cmpl jb mov push push pushl push pushl pushl push call xor mov cmp pop setne pop ret push mov push mov cmp je push mov lea push push push pushl push call test je cmp pop je movl jmp mov pop ret movl push lea push call int3 push mov push push mov mov push mov mov mov call push mov mov call push mov call pop pop pop pop ret push mov push mov cmp je push lea push pushl pushl push call test jne movl jmp mov mov pop ret movl push lea push call int3 push mov cmpl je pushl call orl pop ret push mov push mov cmp je push push call cmp jne movl jmp mov pop ret movl push lea push call int3 push push call ret push mov pushl push call pop ret push mov push push push push mov call pushl call pop test je mov pop ret push lea movl push call int3 push mov mov cmp je pushl push pushl push call cmp jne movl jmp pop ret movl push lea push call int3 mov call push push push push mov andl pushl call pop orl mov mov pop pop pop mov pop ret mov ret push mov mov push mov mov mov lea push call int3 mov call push push push push push mov mov mov xor mov movb cmp jne mov jmp push mov call test jne push pushl call pushl call mov jmp mov ret andl mov orl mov call mov mov pop pop pop mov pop ret push mov push push mov xor cmp jne push push push push push push call add mov pop test je mov pop ret push lea movl push call int3 push mov cmpl je mov cmp je imul push pushl call test je cmp jne xor jmp mov pop ret push lea movl push call int3 mov call push push push push mov andl push call push call push call call mov mov call orl xor mov mov pop pop pop mov pop ret mov ret push mov push pushl call mov pop test jne xor jmp mov pushl push call pop pop test jne mov push call pop jmp mov pop pop ret push mov push push push mov mov push pop call mov test je lea movl push call lea push call movl xor mov movl movl call mov test jne push call pop xor pop pop mov pop ret call mov mov mov mov mov mov mov jmp push mov push push mov push mov call pop lea push call pushl push call pop pop push call mov push call pop pop pop pop ret push mov push push mov push mov push lea push call lea push mov call cmpl je cmpl jne mov push call mov lea mov mov pop push call pushl push call pop pop pushl call mov push mov call pop jmp mov push call pushl call pop pop pop mov pop ret push mov push mov push xor lea push call cmp jne mov push mov push mov push push call add test je mov push push call pop pop test jne mov push push mov call pop pop jmp xor inc pop lea push call mov pop pop pop ret push mov push push mov lea push call cmpl je push mov push push mov call mov push push mov call add pop push call pop pop pop ret push mov push mov push lea push call mov push mov call pop pop pop ret push mov push mov push lea push call mov push mov call pop pop pop ret push mov push mov push lea push call mov mov mov mov mov push mov call pop pop pop ret push mov push mov push mov push lea push call lea push call mov push movl call mov test je mov push call pop jmp call mov push push call mov push mov call add test mov push mov jne call andl pop lea push call mov push call pop pop pop pop pop ret push mov push mov lea push call lea push call mov pop pop jmp push mov mov call test jne pop ret push call mov test jne call mov call mov mov call mov pop pop ret push push call mov mov mov call test je mov call mov mov call mov pop pop ret push push push mov mov mov xor call test je mov test je mov push push call pop pop mov mov call mov pop pop pop ret push push mov xor push mov call call mov test je call mov test jne mov push push call pop pop mov call pop mov pop pop ret push push call mov mov mov call test je call test je push mov test je mov push call mov push push call mov push call add test jne mov call test je mov test je mov push call andl pop mov call pop pop mov pop jmp pop pop ret push push mov mov mov call test je mov call test je mov push call pop mov pop pop jmp pop pop ret push mov mov call test jne pop ret cmpl jne call mov mov call mov pop ret push mov push andl push mov mov call test je push call mov test je push mov push call push push call add pop test jne mov push call pop jmp movl mov call mov pop pop mov pop ret movzbl push push movzbl shl push add lea movzbl shl push add pop mov and jns dec or inc mov mov cltd and mov sub lea sar dec jne pop pop pop ret push mov push push push push push mov mov push pop xor lea div lea call mov mov test je push pop cmp jb mov xor div mov mov mov call push pop sub add add decl jne test je xor movb push mov mov lea call add mov call push pop mov cmp jne mov add xor mov mov pop pop pop mov pop ret push lea pop cmp ja movzwl sub ret lea cmp ja movzwl sub ret lea cmp ja movzwl add ret cmp jne push pop ret or cmp push pop cmove ret push mov sub push push push push mov xor mov mov pop mov call mov inc cmp jl mov mov xor mov inc cmpl jge test je cmpw jne andl dec jmp xor dec jns mov xor test cmovs shl add shl add shl add cmp jge sub mov cltd and lea sar dec jne lea test js mov mov and jns dec or inc mov mov cltd and lea sar dec jns mov pop pop pop mov pop ret or jmp push mov sub andl mov push push mov push mov mov push mov call lea call pushl mov mov call mov call mov test je test je pushl push call push push call mov push xor pop jmp call test jns add movzwl cmp jne mov add mov inc cmp jb lea lea call mov lea mov push mov add call mov add add mov cmp je mov mov mov call xor inc jmp mov call mov test je call andl mov andl xor pop pop pop mov pop ret push push pop call mov test je andl mov push push push push mov call add test jne mov call xor pop ret mov pop ret push mov push mov push lea push call andl push call pop pop pop ret push mov push mov cmpl jne push lea push call mov test je mov push push call pop pop push call pop pop pop ret push mov mov pop jmp push xor push push push push call mov test jne pop ret push xor mov call mov test jne push call mov pop pop ret push push push mov mov push pop call mov test je push push push push mov mov call add test jne mov call xor pop pop pop ret mov jmp push mov mov pushl call pop ret push mov mov pushl call pop ret push mov push mov pushl call mov pop pop jmp push mov push push push push mov mov call mov test je push pop call mov test je movl lea movl mov push movl movl call pushl mov mov call mov pop test je andl andl mov push push mov call pop pop test je mov mov jmp push call pop xor pop pop pop mov pop ret push mov push mov push lea push call call add mov mov movl test je mov push mov call pop push call pop pop pop ret push mov mov mov pop ret push mov push mov push lea push call andl mov test je mov push mov call pop push call pop pop pop ret push mov push mov push lea push call andl push call pop pop pop ret push mov push push mov push lea push call xor cmp je cmp jne mov inc mov mov push call mov pop pop pop pop ret push mov push mov push lea push call mov lea push push call pop pop test je mov cmp jb andl mov test je mov push call pop push call mov push call mov push call pop pop jmp push call pop pop pop ret push mov push mov push lea push call mov push call pop mov movl test je mov push call pop andl mov test je mov push push mov call pop pop andl push call mov push call pop pop pop pop ret push mov push mov mov test je mov push call pop mov test je mov push push mov call pop pop lea push call mov pop pop jmp push mov sub andl push xor push push mov lea mov movzbl mov and mov mov inc neg mov sbb add and xor xor cmp jl xor mov inc mov movzbl shl mov mov and add neg sbb add and xor cmp jl andl movl movzbl lea sub mov mov rol xor rol xor rol mov rol xor xor xor movzbl mov mov inc cmp jl mov xor mov mov mov mov mov and neg sbb add and xor movzbl movzbl mov shl xor shl xor shl xor xor mov ror mov ror mov ror mov test je movzbl movzbl movzbl add cltd idiv movzbl mov jmp andl test je movzbl movzbl movzbl add cltd idiv movzbl mov jmp andl test je movzbl movzbl movzbl add cltd idiv movzbl jmp xor test je movzbl movzbl movzbl add mov cltd idiv movzbl jmp xor shl xor mov shl xor shl xor mov ror mov ror mov ror mov add cmp jl pop pop pop mov pop ret push mov sub cmpl push push mov mov mov je call andl mov mov sub je sub je sub je xor inc jmp movl jmp movl jmp movl andl mov sar push mov test jle mov add mov movzbl movzbl shl or movzbl shl lea or movzbl shl or mov inc cmp jl mov mov sub je sub je sub jne mov mov mov mov shr movzbl mov mov shl shr movzbl xor movzbl shl xor mov shl shr xor xor xor mov mov xor mov mov xor mov xor mov mov mov shr mov mov shr shl movzbl shr xor shl movzbl mov add mov xor movzbl shl xor xor mov xor mov mov xor mov mov xor mov add cmp jl jmp mov mov mov shr movzbl mov mov shr shl movzbl xor movzbl shl xor mov shr shl xor xor xor add mov xor mov mov xor mov mov xor mov mov xor mov xor mov mov add cmp jl mov jmp mov mov mov shr movzbl mov mov shr shl movzbl xor shl movzbl xor mov shr shl xor xor xor add mov xor mov mov xor mov xor mov mov add cmp jl cmpl je xor mov mov mov mov mov mov mov mov mov add cmp jl andl mov lea mov mov mov mov mov mov add mov xor inc add mov cmp jle mov mov shr mov shr movzbl shr mov xor movzbl xor movzbl xor mov mov mov shr mov shr movzbl shr mov xor movzbl xor movzbl xor mov mov mov shr mov shr movzbl shr mov xor movzbl xor movzbl xor mov mov mov shr mov shr movzbl shr mov xor movzbl xor movzbl add xor mov mov add inc mov cmp jl mov mov mov mov mov mov mov mov xor pop pop pop mov pop ret push mov sub movzbl push push push mov movzbl movzbl shl or shl movzbl lea shl or movzbl shl or movzbl xor mov movzbl shl or movzbl shl or movzbl shl or movzbl xor mov movzbl shl or movzbl shl or movzbl shl or movzbl xor or movzbl shl or mov movzbl shl or mov shr xor movzbl mov shr movzbl mov xor mov shr xor movzbl xor mov xor shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor xor mov shr movzbl mov mov shr mov mov shr xor movzbl mov shr xor movzbl shr xor xor movzbl mov mov mov xor mov shr movzbl xor mov movzbl xor mov shr movzbl mov xor add shr mov movzbl xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr mov mov xor mov shr movzbl xor movzbl xor xor shr mov shr movzbl xor mov shr movzbl xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor add xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr shr mov xor mov mov mov shr mov movzbl xor mov movzbl xor mov xor shr movzbl mov xor mov shr movzbl xor movzbl xor mov xor add shr movzbl mov mov shr movzbl mov xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr shr mov xor mov mov mov shr movzbl mov xor mov movzbl xor mov xor shr movzbl mov xor mov shr movzbl xor movzbl mov xor mov xor add shr movzbl mov shr movzbl mov xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov mov shr movzbl xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr shr mov xor mov mov shr movzbl mov mov xor mov movzbl xor mov xor shr movzbl mov xor mov shr movzbl xor movzbl mov xor mov shr xor add movzbl mov shr movzbl mov xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr mov movzbl mov mov shr shr xor mov mov shr movzbl mov mov xor mov movzbl xor mov shr xor movzbl mov xor mov shr movzbl xor movzbl mov xor mov shr movzbl mov shr xor add mov movzbl xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr mov mov movzbl shr mov xor mov mov mov shr movzbl xor mov movzbl xor xor mov shr mov mov shr movzbl xor mov shr movzbl xor movzbl mov xor mov shr movzbl mov shr movzbl mov xor add xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr shr mov xor mov mov mov mov shr movzbl xor mov movzbl xor mov xor shr movzbl mov xor mov shr movzbl xor movzbl xor mov xor add shr movzbl mov mov shr movzbl xor mov shr xor movzbl xor mov xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr mov shr xor mov mov mov shr movzbl xor mov mov mov movzbl shr xor mov mov xor mov mov movzbl mov xor mov shr movzbl xor movzbl xor mov mov xor mov mov cmp jle mov mov shr movzbl mov shr movzbl mov mov xor mov shr xor mov movzbl xor xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor movzbl xor xor mov shr movzbl mov mov shr shrl mov xor mov mov mov shr movzbl shr xor movzbl shr xor xor movzbl mov mov xor movzbl xor mov movzbl xor mov xor add shr movzbl mov shr movzbl mov xor mov shr xor movzbl xor mov xor shr mov movzbl mov mov shr movzbl xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr shr mov xor mov mov mov shr movzbl xor mov mov mov movzbl shr xor mov mov xor mov movzbl mov xor mov shr movzbl xor movzbl xor xor mov mov cmp jle mov shr movzbl mov shr movzbl mov mov xor mov shr xor mov movzbl xor xor mov shr mov movzbl mov shr movzbl mov xor mov shr xor movzbl xor xor mov shr movzbl mov mov shr mov shrl xor mov mov mov shr movzbl shr xor movzbl shr xor xor movzbl mov mov xor movzbl xor mov movzbl xor mov xor add shr movzbl mov shr movzbl mov xor mov shr xor movzbl xor mov xor shr mov movzbl mov mov shr movzbl xor mov shr xor mov movzbl xor mov xor shr movzbl mov mov shr shr mov xor mov mov mov shr movzbl xor mov mov mov movzbl shr xor mov mov xor mov movzbl mov xor mov shr movzbl xor movzbl xor xor mov mov mov shr mov mov shr movzbl shl xor mov shr movzbl shl xor mov movzbl shl xor xor mov shr mov mov mov mov shr movzbl shl xor mov shr movzbl shl xor movzbl mov shl xor mov xor shr mov mov mov mov shr movzbl shl shr xor mov shr mov movzbl shl shr shl xor mov movzbl shl xor xor movzbl mov xor mov shr movzbl shl xor mov movzbl shl xor mov xor shr mov mov shr mov mov shr mov mov mov mov mov shr mov mov shr mov mov shr mov mov mov mov shr mov mov shr mov mov shr mov mov shr mov mov shr mov mov pop shr pop mov mov mov pop mov pop ret push mov sub mov movzbl shl mov push push lea movzbl movzbl or shl movzbl shl or movzbl shl or movzbl xor mov movzbl shl or movzbl shl or movzbl shl or movzbl xor mov movzbl shl or movzbl shl or movzbl shl or movzbl xor or movzbl shl or mov movzbl mov shl or xor add mov mov mov shr movzbl mov shr movzbl push mov xor mov shr xor mov mov mov movzbl xor mov mov mov xor mov mov shr movzbl mov shr xor mov mov shr movzbl mov xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov shr movzbl xor movzbl shr xor xor movzbl mov mov mov xor mov shr movzbl xor mov movzbl xor xor add mov mov mov shr movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl shr xor mov mov mov xor mov mov shr movzbl mov xor mov mov mov shr movzbl xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov shr movzbl xor movzbl shr xor mov xor movzbl mov mov xor mov shr movzbl xor mov movzbl xor xor add mov mov shr mov movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl shr xor mov mov mov xor mov mov shr movzbl mov xor mov mov mov shr movzbl xor movzbl xor xor mov mov mov shr shr movzbl mov xor mov shr movzbl xor movzbl shr shr xor mov xor movzbl mov mov xor mov shr movzbl xor mov movzbl xor xor add mov mov shr movzbl mov mov shr movzbl mov xor mov shr xor mov mov mov movzbl shr xor mov mov mov xor mov mov shr movzbl mov xor mov mov mov shr movzbl xor movzbl xor xor mov mov mov shr movzbl shr shr mov xor mov shr movzbl xor movzbl shr xor mov xor movzbl mov xor mov shr movzbl xor mov movzbl mov xor xor add mov mov shr movzbl mov shr movzbl mov mov xor mov shr xor mov mov mov movzbl shr xor mov mov mov xor mov mov shr movzbl mov xor mov mov mov shr movzbl xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov shr movzbl xor movzbl shr xor mov xor movzbl mov mov xor mov shr movzbl xor mov movzbl xor xor add mov mov shr movzbl mov mov shr movzbl mov xor mov shr xor mov mov mov movzbl shr xor mov mov mov xor mov mov shr movzbl mov xor mov mov mov shr movzbl xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov shr movzbl xor movzbl shr xor mov xor movzbl mov mov xor mov shr movzbl xor mov movzbl xor xor add mov mov mov shr movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl xor mov mov mov shr xor mov mov shr movzbl mov xor mov mov shr mov movzbl xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov shr movzbl xor movzbl shr xor mov xor movzbl mov mov xor mov shr movzbl xor mov movzbl xor xor add mov mov mov shr movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl shr xor mov mov mov xor mov mov shr movzbl mov xor mov mov shr movzbl mov xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov shr mov movzbl xor movzbl shr xor mov xor movzbl mov xor mov shr movzbl xor mov movzbl xor xor add mov shr movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl shr xor mov mov xor mov mov mov shr movzbl mov xor mov mov mov shr movzbl xor movzbl xor xor mov mov mov shr shr mov movzbl shr xor mov mov mov mov shr movzbl xor movzbl shr xor mov mov xor mov mov movzbl xor mov shr movzbl xor movzbl xor mov xor mov mov mov cmp jle mov mov shr movzbl mov shr movzbl mov mov xor mov shr xor movzbl xor mov xor shr movzbl mov mov shr mov mov shr xor movzbl xor mov movzbl xor mov xor shr movzbl mov mov mov shr shr mov xor mov mov shr movzbl xor movzbl shr xor movzbl mov xor xor mov shr movzbl xor mov movzbl xor xor add mov shr movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl xor mov mov xor mov mov shr movzbl shr mov xor mov mov mov shr movzbl xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov mov mov mov shr movzbl xor movzbl shr xor mov mov xor mov mov movzbl xor mov shr movzbl xor movzbl xor xor mov mov cmp jle mov mov shr movzbl mov shr movzbl mov xor mov shr xor movzbl xor mov xor shr movzbl mov mov shr mov mov xor shr movzbl xor mov movzbl xor mov xor shr movzbl mov mov mov shr shr mov xor mov mov shr movzbl xor movzbl shr xor movzbl mov xor xor mov shr movzbl xor mov movzbl xor xor add mov shr movzbl mov shr movzbl mov xor mov shr xor mov mov mov movzbl xor mov mov xor mov mov shr movzbl shr mov xor mov mov mov shr movzbl xor movzbl xor xor mov shr movzbl mov mov shr shr mov xor mov mov mov mov shr movzbl xor movzbl shr xor mov mov xor mov mov movzbl xor mov shr movzbl xor movzbl xor xor mov mov shr mov mov mov shr movzbl mov shl xor mov shr movzbl shl xor shl movzbl xor mov xor shr mov mov mov mov shr movzbl shl xor mov shr movzbl shl xor movzbl shl xor mov xor shr mov mov mov mov mov shr movzbl shl shr xor mov shr movzbl shl xor movzbl shr shl xor mov mov xor shr movzbl shl xor movzbl mov shl xor mov movzbl shl xor mov xor shr mov mov shr mov mov mov shr mov mov mov mov mov shr mov mov shr mov mov shr mov mov mov mov shr mov mov shr mov mov shr mov mov shr mov mov shr mov mov pop shr pop mov mov pop mov pop ret push mov mov add push call pop ret push mov push mov push lea push call test jne push push call pushl call pop pop pop pop ret push push mov mov call mov test je lea push call mov movl movl mov call test jne push call pop xor pop pop ret mov jmp xor jmp push mov call mov mov call mov mov test je test je xor inc or mov or mov mov mov mov mov pop mov ret test je call andl mov test je call andl xor pop ret push lea xor pop testb je inc add cmp jb call test jne ret orl ret movl ret testb je mov jmp push mov xor stos stos stos stos pop ret mov jmp cmp jne testb je mov test jne ret push mov push push push push mov mov xor lea push call mov test jne mov jmp mov call mov test je mov call mov test je andl mov mov mov mov mov mov mov mov lea incl push call xor inc jmp lea push call test je mov call xor pop pop pop mov pop ret push mov and sub push push mov push xor lea push call cmp je mov mov lea call jmp pushl pushl call pop pop test je mov lea push lea push mov call pop pop test jne jmp mov mov mov push call pop push mov call pop mov pop pop mov pop ret push mov push mov push lea push call mov mov call test jne xor jmp mov call xor inc push call pop mov pop pop ret mov push mov push mov mov mov mov mov call decl pop pop ret push mov push mov push lea push call mov test je push testb mov jne mov call mov test jne pop push movl call pop pop pop ret push mov push push mov push xor lea push call mov mov testb jne mov push call mov pop pop pop pop ret push mov push push mov push xor lea push call mov mov testb jne mov push call mov pop pop pop pop ret push mov mov mov call neg sbb neg pop ret push mov mov mov pop ret push mov and sub push push push mov lea push call mov push call pop mov mov cmp ja mov mov mov mov lea call lea push lea push mov call pop pop test je xor mov mov mov lea push lea push mov lea call pop pop test jne push call xor inc pop pop pop mov pop ret mov shl call mov mov test jne push call mov cmp je test je call andl mov andl xor jmp push mov and sub xor push push push call mov test jne jmp mov lea push call mov lea call lea push lea push mov call pop pop jmp mov push pushl push call lea push lea push mov call add test jne push call mov pop pop pop mov pop ret push mov push mov push mov call mov pop call mov call lea push call mov pop pop jmp push mov mov mov movl movl mov mov pop ret push mov mov mov mov mov test je testb jne test je mov mov mov mov andl xor inc pop ret xor pop ret push mov mov mov testb jne mov mov mov mov pop jmp pop ret push mov push push push push mov call mov call mov cmp je xor jmp test jne call sub cmp ja inc push push push call cmp jne jmp pushl push push call test je push call xor jmp mov incl xor inc pop pop pop mov pop ret push mov call mov decl jne push push call pop ret push push push push pop call mov test je lea movl push call call xor mov call xor mov call xor mov call xor mov cmp je cmp je test je mov mov mov mov call test je xor call xor mov call mov cmp je test je push push mov mov call mov pop pop test je call mov test je mov jmp push call mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov call xor pop pop pop ret push mov push push push mov lea push lea xor push mov mov push push mov push call add test je cmp jbe mov mov push mov call inc pop cmp jb mov call mov push mov call mov push mov call mov push mov call mov push mov call mov push mov call mov push mov call mov push mov call mov push mov call add lea push call mov call pop pop mov pop ret push mov push mov push mov push mov push push mov call add test jne xor jmp mov push call pop cmp je mov push push push mov mov call pop push pushl call add pop test jne mov push push mov call pop pop jmp xor inc pop pop pop ret push mov push mov push push mov push mov push mov call pop pop test je mov push push mov call mov push call add cmp je mov push mov mov call push pushl call add cmpl je lea push call mov push push mov call pop pop push call pop pop pop pop ret push mov push push push mov xor lea push call mov pushl push mov call pop pop test jne mov push pushl mov push call add test je mov push mov call pop xor inc push call pop mov pop pop pop ret push mov push mov push lea push call mov pushl push mov call pop pop test je mov pushl push mov call pop pop push call pop pop pop ret push mov sub push push xor lea xor mov stos stos stos stos call mov call mov cmp jne pushl pushl call pop xor pop inc jmp cmp je xor jmp push push push push call mov test je mov push mov lea mov mov mov push mov call mov lea push push push mov call add push test jne call jmp call mov push call pop push pushl call test cmove cmpl pop je pushl call mov pop pop mov pop ret push mov push push push or call mov xor mov test je push push mov mov call mov pop pop test je jmp call test je mov call mov cmp je call mov mov mov test je mov push call pop mov mov test je mov push call pop mov mov pop pop pop pop ret push mov push mov push mov call pop pop test je push mov push push mov call mov pop pop test je mov push call mov push call pop pop mov push push mov call pop pop test jne pop mov pop jmp push mov mov push mov call pop mov pop cmp jae jmp push mov sub push mov lea push push lea xor mov push push lea mov push push call add test je mov push mov test je mov mov push mov call mov inc mov pop cmp jb push push lea push push call mov mov dec pop cmp ja mov pushl push mov call pop xor pop inc mov lea cmp je call mov pop pop mov pop ret push mov and sub push push mov mov call test je mov lea xor call jmp cmp jge mov mov mov inc lea push lea push mov call pop pop test jne push push lea push push call lea cmp ja mov call xor inc jmp xor pop pop mov pop ret push mov sub mov push push push mov xor lea mov mov push lea mov push push lea push push call add test je mov push push call mov pop pop test je movl mov mov call mov cmp jbe mov mov push mov call pop mov mov incl cmpl jne pushl call push pushl call mov push push mov call mov pop pop test je movl inc cmp jb pushl call xor inc mov test je lea cmp je call mov pop pop pop mov pop ret push mov sub push lea call lea push lea push mov call pop pop test je mov mov pushl call mov push pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea push mov call lea push lea push mov call add test jne pop mov pop ret push push mov mov push call mov test je mov xor push push push push movl call mov xor push push push push call mov xor push push push push call mov xor push push push push call mov xor mov cmp je mov test je cmp je test je push push push push push mov push movl mov call mov test je push pushl call pushl call mov jmp cmp je mov test je push movl call push pushl call mov mov test je push call mov test je push call mov test je push call mov test je push call mov test je push call mov call xor pop pop pop ret push mov push push push mov jmp pushl call push pushl call pushl mov call pushl call test jne and lea push push push pushl call test je cmp je cmp jae cmp jae mov mov push push mov mov call pop pop jmp call xor cmp jbe mov cmp je push pushl call test jne mov pushl push mov call pop pop mov inc add cmp jb cmpl je xor pop pop pop pop ret xor inc jmp push mov push mov push mov pushl movl call pushl call push pushl call pushl mov call pushl call pushl call pushl call pushl call mov pop pop pop jmp push mov sub push push mov lea push call mov lea push lea push mov lea push push push call add test jne push call jmp mov push mov call pop push call xor cmp jbe mov mov pushl pushl call mov pop pop mov movl mov mov pushl call inc cmp jb mov lea cmp je call pop pop mov pop ret push mov mov push mov call pop test je push mov push mov call mov mov push push mov call andl add pushl call mov push mov call pop test jne pop pop ret push mov mov pop jmp push mov push mov push mov mov movl mov pushl call pushl call pushl call pushl call pop pop pop ret push mov mov push call pop pop ret push mov mov push mov movl call pop pop ret push mov mov movl pop ret push mov push andl lea push push pushl mov mov push mov call mov pop pop test je mov push push call pop pop jmp cmpl jne mov call test je mov call cmpl je mov push call jmp mov push call pop push call pop pop pop mov pop ret push mov mov mov push mov call pop pop ret push mov sub push push mov lea push call mov lea push lea push mov lea push push push call add test jne push call jmp mov push push mov call xor mov pop cmp jbe mov mov push mov call inc pop cmp jb push call mov mov call cmp jbe mov mov push mov call mov mov push mov call mov mov push mov call add inc cmp jb mov lea pop cmp je call pop pop mov pop ret mov call test jne ret movl movl mov mov mov mov ret lea cmp jb lea cmp jae andl ret mov jmp push mov push push mov push pushl call pop mov lea mov mov and xor cmpl je inc add cmp jb push pop call mov mov jmp imul lea add xor mov stos stos stos stos stos movl test jne xor jmp mov mov mov mov xor mov mov mov mov incl inc pop pop pop pop ret push mov push push mov pushl call and pop mov jmp pushl pushl call pop pop test jne mov test jne xor pop pop pop ret mov jmp push mov push mov push pushl call and lea pop lea jmp mov pushl pushl call pop pop test jne mov add cmpl jne jmp mov mov push mov call decl mov pop pop pop pop ret push mov push mov push push push pop lea mov cmpl je mov mov mov call mov decl cmpl jne mov add dec mov jne andl pop pop pop pop ret push mov mov mov pop ret push mov sub mov lea call cmpl lea cmovne push lea push mov call pop pop test je push mov test je lea push mov call pop mov xor inc pop mov pop ret push mov push mov push mov call pop mov pop pop jmp push mov mov andl andl orl movl movl pop ret push mov push mov push mov mov test je mov test je mov mov jmp mov test js cmp jge cmp jne mov mov decl mov mov call mov andl mov decl pop pop pop ret push mov mov push mov mov test je mov mov test jne andl mov cmp jge inc mov mov test je mov pop test je mov mov mov mov mov mov xor inc pop ret xor pop ret push mov mov shr pop ret push mov mov xor cmp sete pop ret push mov and sub push push push mov push mov call mov pop mov cmp ja mov mov mov mov lea call lea push lea push mov call pop pop test je xor mov mov mov lea push lea push mov lea call pop pop test jne xor inc pop pop pop mov pop ret mov shl call mov mov test jne and jmp push mov push push push push push mov mov push push call add lea push call movl movl call mov test je xor call mov test je mov mov movl mov movl movl andl cmpl mov mov cmovne mov mov mov mov mov mov mov mov push push call pop pop test je xor inc jmp cmpl je push call mov test je mov push call pop xor pop pop pop mov pop ret push mov mov push call pop pop ret push mov mov push call pop pop ret push mov mov mov pop ret push mov mov xor push call pop pop ret push mov mov mov push call pop pop ret push mov sub push mov mov cmpl jne push lea push call mov lea push lea push mov lea push push push call add test jne push call jmp push xor cmp jbe mov mov push mov call inc pop cmp jb push call xor cmp jbe mov cmpl jne cmpl mov mov mov jne push call jmp push push call pop pop mov mov push mov call inc pop cmp jb mov lea pop cmp je call pop pop mov pop ret push mov push mov push lea push call mov mov mov push mov call pop pop pop ret push mov push mov push lea push call mov test je mov push push call andl pop pop push call pop pop pop ret push mov push push mov lea push call push movl call mov push call pop pop pop pop ret push mov and sub push push mov lea push call mov lea call lea push lea push mov call pop pop jmp mov push push mov call lea push lea push mov call add test jne push call pop pop mov pop ret push mov push mov mov call mov push mov call push call cmpl pop pop je lea push call mov test je push call pop pop pop ret push mov push push push mov lea push call mov xor push pushl mov push call add push test jne call xor jmp call push call cmp jne mov mov test je mov push call push call pop mov jmp push call test je push call pop xor inc pop pop pop pop ret push mov push mov push lea push call mov pushl push mov call pop pop test je mov pushl push mov call pop pop push call pop pop pop ret push push mov xor push pop mov rep and movl mov mov push push call pop pop pop pop ret push mov push push push mov lea push lea push push call mov add test jne and and jmp mov andl mov mov mov mov mov pop mov mov mov pop ret push mov mov mov pop ret push mov mov mov pop ret push mov mov cmpl jne mov movl test je push call pop pop ret push push pop call mov test je lea movl push call xor push push push push call mov test je xor call mov test je mov pop ret push call pop xor pop ret push mov push mov push push lea push call mov push mov call push pushl pushl call add test jne push call xor jmp pushl call push call xor inc pop pop pop pop ret push mov push mov xor push mov neg sbb test je lea push call push pushl call test jne lea push call mov push mov call pop push test pop je mov push mov call mov mov push push mov call mov push mov call add test je pushl call lea push call mov jmp xor pop pop pop ret push mov push mov push lea push call mov pushl push mov call pop pop push call pop pop pop ret push mov mov mov push mov call pop pop ret push mov push mov mov test je mov push call pop cmpl je pushl call lea push call mov pop pop jmp push push push pop call mov test je lea movl push call xor call mov test je xor push push push call test jne mov jmp mov call mov test je push push mov mov call mov pop pop test je mov jmp push call pop xor pop pop ret push mov push mov mov test je mov push call pop jmp call push push call mov push mov call add test mov push mov jne call pop mov test je mov push call pop mov test je mov push call pop lea push call mov pop pop jmp push mov push mov push pushl mov push mov call add test je mov push call xor pop inc pop pop ret push mov push push push mov lea push call mov mov push push mov call mov push call mov push call add push call pop pop pop pop ret push mov mov push mov push mov call pop pop pop ret push mov and sub push push push mov xor and lea push call mov push mov call mov pop test jne push call jmp mov lea call lea push lea push mov call pop pop jmp mov push mov call lea push lea push mov call add test jne push call mov lea mov call lea push lea push mov call pop pop test je mov mov lea push push mov call pop pop test je test je mov sub jns mov xor inc mov push mov call lea push lea push mov call add test jne mov mov mov push call pop call cmpl jne mov push mov call jmp sub mov mov test jg push jmp push push call pop pop pop pop pop mov pop ret push mov sub push push mov lea push call mov lea push lea push mov lea push push push call add test jne push call jmp push xor mov cmp jbe mov mov push mov call inc pop cmp jb push call call mov cmp jbe mov push mov push mov call mov mov push mov call add inc cmp jb mov lea pop cmp je call mov call pop pop mov pop ret push mov push push push mov mov push pop call mov test je xor movl movl call xor mov call cmpl mov je test je andl call andl mov mov mov mov mov mov mov mov jmp push call pop xor pop pop pop pop ret push mov push mov push mov push mov call pop test je mov push mov call mov pop test jne xor jmp mov push push mov call pop pop jmp pushl call mov pop test je mov test je pushl pushl push call add mov push push push mov call add test je mov push mov push call pop cmp ja mov push call pop mov mov incl push mov call pop mov pop pop pop pop ret push mov push mov pushl mov push mov call pop pop test je mov pushl push mov call mov push pushl mov push call mov incl push call add pop pop ret push mov and sub push mov lea mov call lea push lea push mov call pop pop jmp mov push pushl mov push call lea push lea push mov call add test jne mov push mov call mov incl push call pop pop pop mov pop ret push mov mov mov push mov call pop pop ret push mov push push push mov mov push mov call mov mov sub push call mov pop pop add je mov push mov call pop test je mov push mov call mov mov push push mov call add dec test je pushl push call pop pop test jne call andl mov mov push mov call pop mov pop pop pop pop ret push push mov mov push mov call pop test je push mov push call mov mov push push call add test je mov test je pushl push call pop pop mov push call pop test jne pop pop pop ret push mov push mov mov test je mov call mov push mov call pop mov test je mov call mov push mov call pop mov pop pop jmp push mov push mov push mov push mov push mov call mov pop pop mov mov mov pop mov movl pop pop ret push mov push push push mov push mov mov call push mov call mov push push push mov call mov incl push call add pop pop pop pop ret push push mov mov call pop pop ret push mov mov pop jmp push mov pushl push pushl call add pop ret push push mov push pop call mov test je push push push push mov movl mov call add test jne mov call xor pop pop ret mov jmp push mov push push push push push xor push pushl call push push push mov lea push push mov mov pushl call pop mov pop ret push mov mov pushl call pop ret push mov sub push push push pop call mov test je xor push push push push call mov test je lea mov push push lea mov push push push push call mov test je push pushl call test jne cmp je pushl call mov jmp pushl call cmp je pushl call mov call xor pop pop mov pop ret push mov push push push mov pushl mov push mov call pop pop mov mov push push push mov mov push mov call push pushl call mov push mov call add test jle mov push mov call pop pop pop mov pop pop ret push mov push andl lea push pushl push pushl call mov add mov pop ret push mov and sub push push mov lea xor inc mov mov mov add push mov mov call pop mov mov push push push mov mov mov push mov call push pushl call add pop pop mov pop ret push mov mov mov call mov test jne pop ret pushl mov pushl pushl push call add pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov push push mov call add jmp mov push call mov push push mov call add test jne mov push mov call pop jmp mov push mov call mov mov push push mov call mov push call mov push mov call add test jne mov push mov call pop jmp mov push mov call mov pushl push call mov push mov call add test jne pop pop pop ret push mov push mov push push push push call add lea push push call mov push mov call pop test je push pushl call mov call push pushl call pushl call mov call mov call mov call mov pop pop jmp push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop cmpl je pushl call pop ret push push call xor mov mov mov movl or xor call and mov call mov call mov call mov call mov call mov push mov mov call pop mov mov call mov call mov call mov push push push push call mov push pop call mov test je movl xor call mov test je mov call mov test je xor call mov xor call mov cmpl je test je mov jmp test je push call pop xor mov call mov push pop call mov xor test jne mov jmp movl mov cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je test je mov push call pop mov test je mov push push push push mov mov call push pushl call add movl movl pushl call call test je mov push call pop call mov mov push push push push mov mov call push pushl call add jmp mov call mov call mov call pushl call jmp xor inc ret mov orl xor call ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov pushl mov pushl pushl push call add mov pop pop pop ret push mov sub mov mov mov mov mov mov lea push pushl push pushl call add neg sbb and mov pop ret push mov push push mov mov mov mov lea push pushl push pushl call add mov pop ret push mov mov mov mov mov mov test mov cmove mov pop ret push mov mov movl pop ret push mov mov push pushl mov push mov call add pop ret push mov push mov push mov push mov push mov call pop pop test je push call pop mov push mov call pop test jne pushl call pop pop pop ret push mov push push push mov mov push pop call mov test je mov mov push mov mov mov mov mov push push push mov call add pop test jne mov push push mov call pop pop mov call xor pop pop mov pop ret xor inc jmp push mov and sub mov lea andl push mov call lea push lea push mov call pop pop test je mov mov cmp je lea push lea push mov call pop pop test jne jmp lea push mov call mov pushl call pop pop mov call pop mov pop ret push mov mov pushl push mov push push call add pop ret push mov mov mov mov pushl push call pop pop pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov mov pushl push call add pop pop pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov mov pushl push call add neg sbb neg pop pop pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov mov pushl push call add neg sbb neg pop pop pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov mov pushl push call add neg sbb neg pop pop pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov mov pushl push call add neg sbb neg pop pop pop ret push mov push push mov mov push push pushl mov mov mov push mov call push pushl call add test jne xor jmp mov push push mov push mov call add test je mov push push push pushl mov push call add test je mov push push push pushl mov push call add neg sbb neg pop pop pop mov pop ret push mov push push mov xor push push mov mov cmp setne or mov push push mov call pop pop test jne mov push push mov call mov pop pop test je call sub test jle pushl mov mov call mov pop test je mov push push push mov call add test je cmpl jne pushl mov mov call pop test je mov jmp mov push push mov call mov push push mov call mov push push mov call mov push call add xor pop pop pop mov pop ret push mov and mov lea sub mov call jmp mov cmpl jne lea push lea push mov call pop pop test jne xor mov pop ret push mov mov cmpl je xor inc pop ret push call neg pop sbb neg pop ret push mov mov pop jmp push mov and sub push push mov push mov call mov lea mov call mov lea push lea push call add jmp mov cmpl jne mov push push call pop pop lea push lea push mov call pop pop test jne mov test push push mov mov mov push je push jmp push call push pushl call add pop pop mov pop ret push mov push mov push push mov mov push push mov call mov push push mov call add cmpl jne mov push push mov call pop pop test je mov push mov call mov mov pop push push mov mov push push call push pushl call add jmp mov mov push push push mov mov push call push pushl call mov push push mov call add test jne mov push call pop pop pop pop pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov mov push push mov call mov push push mov call mov push call add pop pop pop ret push mov and mov lea sub mov call jmp call sub js lea push mov call pop lea push lea push mov call pop pop test jne mov pop ret push mov and push mov push push push mov push call mov xor cmp setne or mov push push mov call push push call mov add mov call add push push pushl call mov push push mov call add mov call pop pop pop mov pop ret push mov push push push mov mov push mov mov push mov push mov mov movzwl push push call push pushl call push mov mov call add mov pop pop pop test je pushl mov pushl push call add neg sbb neg mov pop ret push mov push mov push push mov xor push mov mov sub je dec je dec je dec jne mov mov push push push mov mov push call push pushl call mov push call add xor inc pop pop pop mov pop ret mov mov push mov mov call pop push push pushl mov mov push call push pushl call mov push pushl pushl mov pushl push call add jmp mov mov push push push mov mov push call push pushl call mov push call mov push pushl pushl mov push push call add jmp pushl mov pushl call pop pop test jne jmp push mov push push mov xor push push mov xor mov cmp setne or cmp jne mov push push mov call pop pop test jne lea push push pushl call add mov pushl mov mov push pushl push call add neg sbb neg pop pop pop mov pop ret push mov push push push mov mov push mov mov push mov push mov mov movzwl push push call push pushl call push mov mov call add mov pop pop pop test je pushl mov pushl push call add neg sbb neg mov pop ret push mov push mov push push mov xor push mov mov sub je dec je dec je dec jne mov mov push push push mov mov push call push pushl call mov push call add xor inc pop pop pop mov pop ret mov mov push mov mov call pop push push pushl mov mov push call push pushl call mov push pushl pushl mov pushl push call add jmp mov mov push push push mov mov push call push pushl call mov push call mov push pushl pushl mov push push call add jmp pushl mov pushl pushl call add test jne jmp push mov push push mov xor push push mov xor mov cmp setne or cmp jne mov push push mov call pop pop test jne lea push push pushl call add mov mov mov push pushl pushl push call add neg sbb neg pop pop pop mov pop ret push mov mov mov push mov call pop pop ret push mov mov lea push push push mov push call add neg sbb and pop ret push mov push push pop call mov test je mov movl mov movl movl movl movl movl mov push push mov call mov pop push test jne mov call pop jmp mov push call mov push call mov add mov pop pop pop ret push mov sub mov push call mov test je push mov lea push lea push call lea push movzwl push movzwl push movzwl push movzwl push movzwl push movzwl push movzwl push push push call add mov pop pop mov pop ret push mov and sub push push push mov mov mov call mov test je lea movl push sub pop mov mov inc dec jne push mov mov call pop push mov mov mov call pop push mov mov mov call pop push mov mov mov call pop mov call mov call mov call mov call mov call mov call cmpl mov je cmpl je cmpl je cmpl je cmpl je mov test je cmpl je cmpl je cmpl je test je mov push push push call mov add mov push push push call add lea lea mov push push call pop pop test je lea push lea mov push call pop pop test je mov xor cmp mov sete inc push mov pushl pushl call add mov test je pushl mov mov pushl mov pushl mov mov pushl mov call add mov test je mov mov mov mov test je mov call jmp xor test je mov push mov call pop mov push mov call pop push mov mov call mov mov mov pop mov pushl push call mov mov mov mov pushl push call mov mov mov mov pushl push call mov add mov test je cmpl je cmpl je test je mov mov pushl push call pop pop test je mov mov mov pushl push call pop pop test je xor call mov test je call mov mov jmp push push call pop pop xor pop pop pop mov pop ret push mov mov mov pop ret push mov mov movl pop ret push mov mov mov pop ret push mov mov mov pop ret push mov mov push push pushl mov mov call mov pop test je mov push push mov call pop pop push test jne mov push mov call mov push call add xor pop pop pop ret mov call mov push call incl xor incl inc pop pop jmp push mov mov pushl decl mov push mov call pop pop pop ret push mov mov push push pushl mov mov call mov pop test je mov push push mov call pop pop push test jne mov push mov call mov push call add xor pop pop pop ret mov call mov push call incl xor incl inc pop pop jmp push mov mov pushl decl mov push mov call pop pop pop ret push mov mov add pop ret push mov mov push push push mov push call add pop ret push mov mov mov push mov call pop pop ret cmpl jne mov push push push add lea pop mov mov inc inc dec jne mov and movl push mov call pop pop pop ret push mov mov mov movzbl push push mov call pop pop pop ret push mov push mov mov movzbl mov mov push mov call pop mov pop pop jmp push mov push push mov xor push mov mov push mov cmp je push push push push call mov test je pushl lea mov push mov call mov pop pop test jne pushl call and mov push push push push call add test jne cmp je pushl call jmp cmpl je push pushl call pushl call test je mov push call pop pop pop pop mov pop ret push mov mov pushl call pop ret push mov push mov xor cmp jne cmp je cmp je mov push mov call pop test jne mov movzbl push push mov call pop jmp mov push mov call pop pop pop ret push mov cmpl jne mov movl test je mov push call pop mov test je mov push call pop cmpl je mov call mov test je mov push push call pop pop pop ret push mov sub mov xor mov mov mov mov lea push pushl mov push pushl mov call add neg sbb and mov pop ret push mov mov cmpl jae andl pop ret mov mov cmpl jne pop jmp pop jmp push mov and sub push push push mov mov push pop mov mov mov mov mov cmp jb mov mov movzwl mov movzwl mov mov mov mov movzwl mov mov mov mov movzbl mov mov mov mov mov mov mov lea push mov mov call pop test je andl xor cmp jae cmp jae push pop call mov test je pushl mov lea movl mov movl mov push movl movl call pop pop test je mov push mov call pop push push pushl call mov add inc mov cmp jae mov jmp mov call mov cmpl je mov call andl pop pop pop mov pop ret mov add push sub pop mov mov inc dec jne mov movl jmp push mov and sub push push push mov mov push pop mov mov mov mov mov cmp jb movb movl movzwl mov mov mov mov movzwl mov mov mov mov mov mov mov mov mov mov mov mov lea push mov mov call pop test je cmp jbe push pop call mov test je pushl mov lea movl mov movl mov push movl movl call pop pop test je mov push mov call pop push push pushl call mov add cmp jb push pop mov add sub mov mov inc dec jne mov movl jmp mov call mov cmpl je mov call andl pop pop pop mov pop ret push mov mov mov call mov test jne pop ret pushl mov pushl pushl push call add pop ret push mov mov push push push mov push call add pop ret push mov and sub push mov lea mov call lea push lea push mov call pop pop jmp mov push mov call lea push lea push mov call add test jne mov push mov call pop pop mov pop ret push mov call mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop cmpl je mov call mov push mov call pop pop ret push mov push push mov mov call mov call cmpl je mov call mov call mov call pop pop pop ret push push mov xor push mov mov call mov pop test je push mov mov call push mov mov mov call pop pop mov cmp je test je inc jmp cmp je mov call mov pop pop ret push mov push mov test je mov push call pop lea mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop push push push call add pop pop ret push mov push push mov mov movl mov mov mov lea push push mov call push pushl call add test je mov lea call xor movb mov call test je mov call test jne mov pop pop pop jmp pop pop pop ret push push push mov mov test je andl lea mov lea push push call pop pop test jne test je movl cmpl jne xor jmp mov mov call mov lea push push movb call pop pop test je incb xor andl andl inc pop pop pop ret push mov push cmpl jne or xor call mov cmpl je movzwl mov imul mov push push call pop pop mov andl movzwl mov mov mov movzwl movzwl imul movzwl add movzwl add mov mov mov mov mov mov push mov call pop mov mov add mov adc mov mov mov mov call mov test je mov pushl push mov call pop pop test jne mov push call pop xor xor mov test pop setne pop ret push mov mov cmpl jne pop jmp pop ret push mov push mov cmpl jne mov call test jne mov pop pop jmp pop pop ret push mov push push push mov push xor mov mov push mov mov call pop mov cmp jne cmp je incl jmp incl mov mov mov sub mov sbb add adc movzwl mov test jne movzwl cmp jae movzwl cmp jb movzwl shl cltd cmp ja jb cmp jae lea mov call test jne mov push mov call pop mov call jmp mov mov movzwl shl cltd cmp jb ja cmp jb andl andl test jne movzwl jmp cmpl movzwl je imul add incl mov imul mov push push call pop pop pop pop pop mov pop ret push mov push mov mov push mov call cmpl pop je mov mov testb je cmpl jb testb je cmpl jne mov movl push push mov call pop pop pop pop ret push mov push mov push mov mov testb je mov call cmpl je mov test je mov mov test je push push call pop pop mov pushl push mov call pop pop pop pop pop ret push mov mov cmpl je mov test je mov mov test je pushl push call pop pop pop ret push mov cmpl je mov cmp jne mov push xor inc mov test je mov push call pop mov mov push mov call andl pop pop mov pop jmp pop ret push mov mov mov push mov call pop xor pop ret push mov push mov xor push push pop andl lea andl rep mov push push push mov push call add mov pop pop pop ret push mov push mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push mov push push andl lea push call mov push push push mov push call add mov pop pop ret push mov mov mov pop ret push mov mov mov pop ret push mov mov push mov mov push mov call pop sub mov mov mov inc dec jne pop pop ret push mov push mov push mov push push mov push mov call add test je mov push push push pushl mov push call add test je xor inc jmp mov push push mov call mov push call add xor pop pop pop ret push mov push mov push mov push mov push mov call pop pop test je mov push push mov call mov push push mov call mov push call add pop pop pop ret push mov push mov push mov mov push mov call mov test je mov push push push pushl mov push call mov push call mov xor push push push mov call add test jne mov push push mov call mov push call add test je mov push call pop xor pop pop pop pop ret xor inc jmp push mov push push mov push mov call mov push mov push mov call mov push push mov call add pop pop pop ret push mov and mov sub mov push push push mov xor push call mov pop test je mov push push mov call mov pop pop test je mov push movl mov call mov lea mov mov pop push push mov push call add test je mov push pushl mov push call add test je mov mov call mov test je mov push call pop mov xor push push push mov call add test je mov push push push pushl mov push call add test je xor inc jmp test je mov push call pop test je mov push push mov call mov push call add xor pop pop pop mov pop ret push mov and mov sub mov push push push mov xor push call mov pop test je mov push push mov call mov pop pop test je mov push movl mov call mov lea mov mov pop push push mov push call add test je mov push pushl mov push call add test je mov mov call mov test je mov push call pop mov xor push push push mov call add test je mov push push push pushl mov push call add test je xor inc jmp test je mov push call pop test je mov push push mov call mov push call add xor pop pop pop mov pop ret push mov push mov push mov push mov push mov call pop pop test je mov push push mov call mov push push mov call mov push call add pop pop pop ret push push mov mov push mov call pop jmp mov push mov call mov push mov call mov push push mov call mov push mov call add test jne mov push mov call pop jmp mov push mov call mov push mov call mov push push mov call mov push mov call add test jne pop pop ret push mov push mov mov push mov call pop test je push mov push mov call mov push mov call mov push push mov call mov push mov call add test jne pop mov call mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop pop jmp push push pop call mov test je movl mov movl mov movl movl call mov test je mov push push push push call add test je mov pop ret mov push call pop xor pop ret push mov mov xor cmp setne pop ret push mov and mov lea sub mov push call mov lea push lea push mov call pop pop test je mov cmp jne mov mov cmp jb mov push call mov add mov mov xor inc jmp xor pop mov pop ret push mov and sub push push push mov xor cmp ja mov call mov mov call mov cmp je test je mov lea mov call jmp push lea push push call mov lea mov shl push call add test jne mov mov push call mov lea push call pushl mov mov sub add call add test jne lea push lea push mov call pop pop test jne jmp mov xor mov inc mov mov call test je mov call pop pop mov pop mov pop ret push mov push mov cmp jbe xor jmp mov push mov push mov call pop pop mov test je mov mov push mov mov call xor add inc pop pop ret push mov mov push mov call pop pop ret push mov push mov mov test je mov push call pop mov pop pop jmp push push push xor mov mov inc mov call xor mov mov call xor mov call xor mov call xor mov call push push mov mov mov call pop pop mov mov call push pop mov call mov test je xor movl call push pop mov call mov mov test je test jne test je mov push call pop mov test je mov push call pop mov call xor mov call mov mov call xor mov inc mov call push mov mov mov call pop mov call mov call mov call pop mov movb pop pop ret push mov mov push xor mov mov pushl push call mov mov mov mov pushl push call push mov mov mov call add mov mov cmp je cmp je test je mov mov pushl push call pop pop test je mov mov mov pushl push call pop pop test je xor inc jmp xor pop pop ret push mov mov push mov call mov push mov call mov push mov call mov push mov call add pop ret push mov push push push mov mov push mov call mov test je movl mov mov mov push call mov pop push call pop mov call xor cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je mov call test je mov mov mov mov mov mov mov mov mov movl movl mov call mov jmp push call pop xor pop pop pop pop pop ret push mov push mov push mov push push mov push mov call add test je mov push push push pushl mov push call add test je mov push call pop mov call lea add sub mov mov mov inc dec jne mov push mov call xor inc jmp mov push push mov call pop xor pop pop pop pop ret push mov push mov push mov push mov push mov call pop pop test je mov push call pop test je mov call mov push push mov call mov push push mov call mov push call mov call mov push mov call add pop pop pop ret push mov and sub mov lea andl call lea push lea push mov call pop pop jmp mov push mov push mov call lea push lea push mov call add test jne mov pop ret push mov push mov push mov push push mov push mov call add test je mov push push push pushl mov push call add test je mov push call pop lea add sub mov mov mov inc dec jne mov push mov call xor pop inc jmp xor pop pop pop ret push mov push mov push mov push mov push mov call pop pop test je mov push push mov call mov push push mov call mov push call mov call mov push mov call add pop pop pop ret push mov push mov push mov call mov call mov push call pop pop pop pop ret push mov mov push push mov call pop pop pop ret push mov and mov call push push push mov push mov call movl lea push push call mov lea add push push call mov jmp mov add lea mov adcl mov xor inc mov test je mov lea push push call mov pop pop testb je test je mov mov mov push mov call pop cmp jbe mov lea push push push mov push call add test je mov push mov call pop mov mov push call pop cmp jae mov call mov call mov testb je pushl mov pushl pushl mov push call add test je pushl mov lea pushl pushl mov push push call add test je mov xor add mov adc push push pushl mov pushl push call add test je mov call testb je lea mov call testb je cmpl jne mov mov mov call testb je cmpl jne push lea lea call mov add mov push call pop push lea push push call mov lea add push push call pop pop test jne mov call mov push call pop pop pop pop mov pop ret cmpl jne cmpl jne mov movl push push mov call pop pop ret push mov sub push push mov xor and push mov testl jbe mov mov inc push push mov push call mov add shr cmp jb mov lea call jmp mov testb je mov xor add adc cmp ja jb cmp ja lea push mov call mov mov push push mov call add test jne mov push push push mov call add lea push lea push mov call pop pop test jne jmp mov push mov call mov mov push push mov call mov push push mov call mov add mov test je mov mov test je mov lea push push call mov pop pop testb je mov add adcl testb je push push call mov pop pop mov call mov push mov call pop test jne mov mov mov push mov call pop cmp jb ja cmp jb mov push push push mov call add mov push mov call push push call add pop pop pop mov pop ret push mov and mov call push mov lea push push lea xor mov push push mov call add test je mov push mov call pop cmp ja jb cmp ja mov push mov call pop cmp jb ja cmp jbe mov push mov call pop mov sub mov sbb mov jne cmp ja mov push mov call pop mov sub mov jmp orl mov push mov call pop mov cmp cmova mov cmp cmova mov test je mov lea push push lea mov push push call add cmpl je mov lea pushl push mov push call add test je mov add adcl xor mov inc push mov call pop cmp jb ja cmp jbe jmp push call pop jmp test je mov movl call mov call pop pop mov pop ret push mov mov pop jmp push mov push mov push mov call pop pop mov test jne pop ret mov mov mov movl incl pop ret push push push mov mov mov push mov call testb pop je mov pushl push mov call pop pop mov push push mov call mov push push mov call add pop pop pop ret push mov and mov call push push mov mov push mov push mov call mov mov pop push mov call cmp pop cmova cmp cmova test je mov lea push push push mov push call mov lea push push lea mov push push call add test je mov call jmp push call pop pop pop pop mov pop ret push mov push push mov mov push push push mov call add test je testb je mov push pushl mov push call add test je mov call xor inc jmp mov push push mov call mov pushl push mov call add xor pop pop pop ret push mov sub push push push mov mov push mov call jmp mov push mov call mov cmp pop cmovb mov push mov call pop mov push push push mov push mov mov call add mov call mov test je mov mov mov mov mov movb mov mov mov mov call test jne mov mov call push call pop mov push mov call pop test jne pop pop pop mov pop ret push mov mov andl pop jmp push push mov push mov push mov call mov cmp pop cmovb mov and sub jne cmp je andl mov call mov test je mov movb mov mov mov mov mov push mov call pop mov mov mov push pushl mov push push call add mov mov call test jne mov mov call push call pop pop pop pop ret push mov mov push call mov test je mov mov mov mov push mov lea push movl sub movb pop mov mov inc dec jne mov mov mov mov call pop test jne mov mov call pushl call pop pop pop ret push mov push mov mov push call mov test je lea movl mov mov mov movb call test jne mov mov call push call pop pop pop pop ret push mov mov push call mov test je mov mov andl movb movl call test jne mov mov call pop pop jmp pop pop ret push push push mov mov call mov test je mov movl mov movb movl mov call test jne mov mov call push call pop pop pop pop ret push push mov call mov push mov call pop jmp mov push mov call pop mov mov mov call test je mov push push mov call mov push mov call add test jne pop pop ret testb je ret push mov push push push push push mov mov testb je mov push mov call mov pop xor add adc cmp jb ja cmp jb mov mov call xor inc jmp mov push mov call mov pop test je mov lea push push push call add test jne xor test je mov cmp je push mov mov call pop test je mov mov test je mov lea push push call pop pop testb je mov imul mov push push call pop pop call mov mov push push call pop pop test je mov mov add mov adcl incl call jmp xor pop pop pop mov pop ret push mov push push push mov mov push mov call mov test je mov test je mov mov mov and mov sub mov xor mov mov add adc mov mov jmp test je mov xor mov mov mov add adc mov mov mov mov mov sub mov mov push push mov push mov call add test je xor mov inc jmp mov mov call xor pop pop pop mov pop ret push mov and sub push mov lea push xor and mov push call lea push lea push mov call pop pop test je mov mov test je testb je testb je cmpl jne cmpl jne mov cmp jae xor add adc cmp jne cmp je mov lea push lea push mov call pop pop test jne jmp mov mov add cmp cmovb sub lea mov mov sub mov add adcl mov cmpl jne mov call mov call pop pop pop mov pop ret push mov push mov push mov mov mov test je mov lea push push call pop pop mov cmp jb mov mov pop pop pop jmp mov push push push mov call add test je mov pop pop pop jmp pop pop pop ret push mov mov add pop ret push mov mov cmpl jne push push movl call pop pop pop ret push mov push mov cmpl jne mov movl push mov call mov push mov call mov pop pop mov call mov pop pop jmp pop pop ret push mov mov xor cmp setne pop ret push mov cmpl jne call push mov mov call pop mov mov test jne push push call jmp mov push push call pop pop pop ret push mov xor cmp je cmp jne cmp jne mov push mov call pop test jne mov push mov call pop test jne mov push mov call pop test je mov push mov call pop test je mov push mov call pop test jne mov movl push push mov call pop pop pop ret push mov and sub push push mov xor inc mov mov mov push mov call mov pop push mov call mov pop push mov call mov xor pop lea mov call jmp mov mov push mov call pop lea push lea push mov call pop pop test jne mov lea call jmp mov push mov call pop lea push lea push mov call pop pop test jne mov lea push lea push mov push push push call add test je cmp jbe mov mov push mov call inc pop cmp jb mov test je call mov push mov call pop pop pop mov pop ret push mov and sub push mov push call pop push push call mov lea call lea push lea push mov call add jmp mov push mov call pop lea push lea push mov call pop pop test jne mov lea call jmp mov push mov call pop lea push lea push mov call pop pop test jne mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop pop mov pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov push mov mov call mov call mov call mov call mov pop pop jmp push mov push push pop call mov test je mov mov push call mov pop test jne mov call xor pop pop ret mov jmp push mov push mov xor mov mov mov add stos stos stos stos pop pop ret push mov push mov mov push mov call pop mov pop pop jmp push mov mov mov test je xor inc pop ret mov push mov test jne test jne test jne test jne test jne mov and je test je mov cmp ja jb mov cmp jae xor inc jmp test jne test jne mov cmp ja jb mov cmp jmp xor jmp movzbl shr jmp movzbl shr jmp movzbl shr and pop pop ret push mov sub push mov push mov mov mov movl test je mov movl mov test je push lea movl lea movsl movsl movsl movsl mov pop cmpl mov mov mov mov mov jbe xor jmp pushl lea push push call xor add inc pop pop mov pop ret push mov sub mov push mov lea push push lea push push call add cmpl jae xor jmp mov push mov test je cmpl jb test je cmpl jae xor jmp mov jmp mov mov mov mov mov mov mov test je add lea movsl movsl movsl movsl xor inc pop pop mov pop ret push mov sub push xor lea push push mov lea stos mov push push lea stos push push stos stos stos stos mov call add lea mov call test jne xor jmp lea push push lea lea call mov neg push sbb and call add cmp jb mov push push call pop xor pop inc pop pop pop mov pop ret push mov push push mov mov push mov call mov test je movl movl mov movl movl call mov test je mov push push push call add mov mov pushl push call mov mov pushl mov push call push mov mov mov call add mov cmpl mov je cmpl je test je pushl mov push call pop pop test je mov pushl push mov call pop pop test je push pop call push pop mov call cmpl mov je test je call mov test je call mov call mov call cmpl mov je cmpl je test je mov call mov test je call mov test je push mov mov call mov pop test je mov push push call mov mov mov xor mov mov mov mov mov mov call mov mov push call mov add push call mov pop push mov call andl pop mov movb call test je mov jmp push call pop xor pop pop pop pop ret push mov mov pushl pushl mov mov call movzwl push push call add pop ret push push push mov lea push lea call mov pop test je mov mov mov mov mov mov call test jne mov push push mov call pop pop xor pop pop pop ret xor inc jmp push mov mov pop jmp push mov mov pop jmp push mov and push push push mov push mov push mov call pop test je mov push mov call pop test je pushl pushl call mov movzwl push mov push mov call add test je movl mov mov mov call mov mov call mov call pop pop pop mov pop ret push mov push mov mov push mov call pop test je mov push mov call pop test je mov call mov pop pop jmp pop pop ret push mov and push push push push mov call test je cmpl jne mov push mov call pop test je mov call mov test je mov push call pop jmp mov push mov call pop test je mov push call pop mov mov push push call mov mov call mov push call add test jne mov push call pop pop pop pop mov pop ret push mov sub push push mov push mov push mov call pop jmp mov push push mov call mov xor pop pop test je pushl lea pushl stos stos stos stos stos stos call push pop push lea mov mov mov mov movb call add test je mov push push mov call mov push mov call add cmp jae mov push mov call neg sbb inc pop pop pop pop mov pop ret mov push call xor jmp inc jmp push mov mov call push mov push mov mov movzwl mov cmp jbe xor jmp push push pushl lea push call lea mov push mov call lea mov push mov call mov lea add lea push push mov call pop pop test je pushl mov lea push push call add test je mov movzwl push lea mov push push call add test je xor inc jmp xor pop pop pop mov pop ret mov push push push mov mov call mov push pop cmp push cmova sub pop cmp mov cmova sub mov push mov call cmp pop cmova mov cmp pop cmova mov pop pop ret push mov mov call push mov push push mov mov push mov mov call pop cmp jb mov mov call cmpl mov je mov cmp cmova sub mov test je mov lea push push lea mov push push call add cmp jne xor lea stos stos stos stos stos stos mov movb pushl pushl call mov lea lea mov push mov call add test jne mov push call pop pop pop pop mov pop ret push mov and sub push xor mov mov push push lea stos stos stos stos stos stos jmp mov call mov lea call test je lea push push lea lea call mov neg push sbb and mov call movzwl add add cmp jb mov test je lea mov call test je jmp test je lea mov call jmp mov call mov movzwl push push mov call pop pop cmpl je pop pop pop mov pop ret push mov push push push mov mov mov cmp ja cmp ja mov call mov lea push movzwl push mov pushl push call movzwl add cmp jne pushl mov mov call pop test je pushl mov call xor inc jmp mov push call xor pop pop pop mov pop ret push mov mov call push mov mov push push mov mov movzwl push push mov call mov pop pop test jne mov lea push mov call pop xor jmp cmpl mov jne movzwl mov push mov call pop mov push mov call pop movzwl cmp jb lea mov push mov call pop test je mov movzwl push lea mov push push call add test jne mov push call jmp xor inc pop pop pop mov pop ret push mov mov call push push mov mov cmpw je mov call mov movzwl push push mov call pop pop jmp lea push call pop test je mov cmp jb mov push call jmp mov test je lea push push call pop pop mov call mov call pop pop mov pop ret push mov push push mov xor push mov push mov call pop pop test je mov movl mov call mov pop mov pop pop ret push mov push push mov xor push mov push mov call pop pop test je mov movl mov call mov pop mov pop pop ret push mov mov push mov call pop pop ret push mov mov push push push mov push mov call add pop ret push mov push mov cmpl jne mov movl call mov pop pop jmp pop pop ret push mov and sub mov lea call lea push lea push mov call pop pop jmp mov mov push mov call mov mov push mov call lea push lea push mov call add test jne mov pop ret push mov and sub mov lea call lea push lea push mov call pop pop jmp mov mov push mov call mov mov push mov call lea push lea push mov call add test jne mov pop ret push mov mov push mov call pop test jne mov push mov call pop test jne mov push call mov push mov call mov push mov call add pop ret push mov and sub push push mov xor call mov test je mov lea call jmp push pushl push call add test je lea push lea push mov call pop test mov pop jne push call pop jmp mov push call mov pop test je mov push push call mov mov call mov push call add test jne mov push call pop pop pop mov pop ret push mov push mov push call mov push call pop pop pop pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je call mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop cmpl je mov push mov call pop pop ret push mov push mov mov call mov call mov call mov call mov pop pop jmp push mov push mov push push mov test je mov push push call add jmp call pop pop pop pop ret push mov push push mov push push mov push mov mov xor mov mov mov push push mov call mov pop pop test je mov lea push push mov call pop pop test je mov lea push push call pop pop test je mov mov push push mov push pushl push call add test je mov mov push push mov push pushl push call add test je mov mov push push mov push pushl push call add test je mov mov push push mov push pushl push call add test je mov mov push push mov call mov push push mov call add mov jmp mov mov mov test je mov push call pop mov test je mov push call pop test je mov mov call xor pop pop pop mov pop ret push mov push push mov andl push lea mov push push push mov push call add neg sbb and pop mov pop ret push mov push push mov push lea movl push mov push push push mov call add neg sbb and pop mov pop ret push mov and sub push mov push push mov cmpl jne mov call mov test je mov mov mov mov mov call test je mov mov call test je mov mov mov mov mov push mov mov mov push mov call mov pop pop test je pushl andl pushl call add mov mov mov mov call test je mov mov push mov call pop jmp mov mov call andl pop pop pop mov pop ret push mov push push mov mov push mov push mov mov movzwl lea cltd idiv movzwl cmp je mov movzwl push push mov call pop pop test je lea mov cltd idiv movzwl cmp jne xor pop pop pop mov pop ret mov mov xor mov inc jmp push mov mov sub je dec je dec je mov pop ret mov add pop ret mov pop ret mov pop ret push pushl pushl call mov push movzwl push mov push call add pop ret push mov sub andl lea andl mov push push lea mov push push mov call mov mov mov pop test je mov mov mov pushl pushl pushl call add mov test je mov push call mov pop push call pop mov jmp test je mov push call pop test je mov push call pop test je mov test je mov push call pop mov mov call xor pop pop pop mov pop ret push mov push mov push mov push andl push mov push mov call mov pop pop test je mov push mov call mov pop mov push call pop test je mov push mov call pop pop pop pop pop ret push mov push mov andl push lea mov push push push mov push call mov add pop mov pop ret push mov mov mov push mov call pop xor test setg mov pop ret push mov push push push mov mov push mov mov pushl pushl mov call movzwl push push call mov push mov push mov call mov push push mov call mov add test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov push push mov call pop pop pop pop pop mov pop ret push push push mov mov push mov push mov call pop pop test jne mov push push mov call pop pop xor jmp mov call xor inc pop pop pop ret push mov push push push mov push mov movzwl push mov push mov call pop pop test jne push mov call mov test je movzwl mov andl cmp jb push add pop jmp xor inc mov mov mov mov mov mov mov mov mov call test je cmpl je mov push mov call mov pushl push mov call add test jne mov mov call pop pop pop mov pop ret mov push push mov call mov push mov call add jmp push mov mov movl pop ret push mov push mov mov andl call mov pop pop jmp push mov mov push mov mov mov movzwl push push call mov pop pop test je mov push mov call mov push mov call pop pop pop pop ret push mov push push push mov mov push pop call mov test je mov movl lea cmp ja mov mov lea mov add mov cmp ja call mov test je pushl lea mov add call mov add add add mov jmp mov test je call mov call xor pop pop pop pop ret push mov push mov mov call mov pop pop jmp push mov push mov xor push xor cmp jae mov mov push mov call movzwl inc pop cmp jb mov call pop mov pop pop jmp mov mov movzwl add mov ret mov mov inc mov xor cmp sete ret push mov sub push push mov mov push xor mov call mov test je mov mov add cmp ja mov mov call mov mov call mov mov call mov mov call mov mov call mov mov mov call mov mov call andl mov xor movl cmp jae xor pushl mov call mov pop test je mov push push push call add test je mov movzwl inc mov mov cmp jb jmp xor movzwl shl call mov test je mov lea call jmp mov mov mov lea lea push lea push mov call pop pop test jne mov push call xor pop inc jmp mov lea call lea push lea push mov call pop pop jmp mov push mov call lea push lea push mov call add test jne mov push call pop xor pop pop pop mov pop ret push mov sub push push mov mov push xor mov call mov test je mov mov add cmp ja mov mov call mov mov call mov mov call mov mov call mov mov call mov mov mov call mov mov call mov mov call andl mov xor cmp jae xor pushl mov call mov pop test je mov push push push call add test je mov movzwl inc mov mov cmp jb jmp xor movzwl shl call mov test je mov lea call jmp mov mov mov lea lea push lea push mov call pop pop test jne mov push call xor pop inc jmp mov lea call lea push lea push mov call pop pop jmp mov push mov call lea push lea push mov call add test jne mov push call pop xor pop pop pop mov pop ret push mov push push push push mov mov push push xor mov call pop push pop mov call mov test je movl call mov test je xor call mov test je push mov mov call push mov mov mov call pop pop mov cmp je test je mov call mov test je mov mov mov push mov call mov xor inc cmp push cmovne mov call pop pop test je or mov push mov lea push pushl pushl mov push call add mov call test je mov jmp push call pop xor pop pop pop mov pop ret push mov mov cmpl jne pop jmp pop ret push mov push mov mov mov push mov call mov mov movzwl mov imul push push call add pop pop ret push mov mov mov testb je mov andl pop ret push mov mov mov testb je mov mov incl movzwl cmp jb pop jmp pop ret push mov and sub andl xor push push push mov lea push pop rep mov lea mov push sub pop mov mov inc dec jne mov xor xor cmp jae mov xor mov mov mov cmp jne mov lea push push mov call pop push mov pushl pushl call add mov test jne mov cmpl jne mov add cmp jb jmp push pop call mov test je mov mov mov push push push pushl mov push call add test je mov push push push mov call add test je mov inc movzwl cmp jb mov push mov call pop test jne mov call jmp mov pushl push mov call pop pop mov call mov call xor jmp mov mov movzwl mov imul push push call pop pop xor inc pop pop pop mov pop ret push mov push mov push mov push mov push mov call pop pop test je mov push mov call pushl push mov call mov push push mov call add mov call mov cmpl jne mov push mov call pop test jne pop mov pop pop jmp pop pop pop ret push mov push mov mov movl push mov call push push call add pop pop ret push mov and sub push mov cmpl jne mov movl push mov call mov lea call lea push lea push mov call add jmp mov pushl push mov call mov mov push mov call mov call lea push lea push mov call add test jne mov push mov call mov push mov call pop pop pop mov pop ret push mov call mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov pop jmp push mov mov call mov call mov pop jmp push mov push push mov mov push mov call mov test je movl mov movl mov movl movl call mov test je call mov test je mov lea push sub mov mov mov inc dec jne mov mov mov mov push call push mov mov call mov pop pop pop test je mov push push mov call pop pop mov call mov jmp push call pop xor pop pop mov pop ret push mov push mov push mov mov mov pushl push call add test je mov mov push mov pushl push call add test jne push call pop pop pop ret push mov mov mov push mov call pop pop ret push mov pushl call pop pop ret push mov mov push mov call pop test je xor pop ret mov push mov call pop test ja jb cmp ja mov push call pop jmp xor inc pop ret push mov push push push mov push mov test je mov mov mov push mov call pop push add pop adc mov jne cmp ja mov push mov call pop lea mov cmp cmova mov mov push mov call pop mov sub cmp cmova mov pop pop mov pop ret push mov push push mov mov call test je mov push push mov mov push mov add mov call xor pop cmp jb ja cmp jb mov push mov call pop cmp jb pushl mov xor mov inc call pop pop mov pop pop mov pop ret push mov mov mov push call pop pop ret push mov mov call push push lea mov push lea mov push call pop pop test je cmpl lea mov push push push mov jne call add test je cmpl jbe mov lea pushl push mov push call jmp call add test je cmpl jbe mov lea pushl push mov push call add test je xor inc jmp mov push call pop xor pop pop mov pop ret push mov push push mov push mov push mov mov mov mov mov mov mov cmpb mov jne mov mov call mov testb je mov lea mov mov mov pushl mov pushl push mov push push call mov add cmp je xor jmp testb je mov push mov call mov mov mov push mov call pushl mov lea pushl push mov push push call mov xor add mov adc push push mov push call mov add cmp jne testb je mov push mov call add testb je xor push mov pop mov mov inc cmp jl add mov mov mov inc cmp jl add mov mov mov inc cmp jl mov mov mov inc cmp jl add mov mov inc cmp jl add testb je mov mov xor inc pop pop pop mov pop ret push mov mov movl mov push mov call pop pop ret push mov push mov mov push mov call mov push push mov call add pop pop ret push mov push push mov xor inc push mov push mov call or pop pop je cmpl je xor pop mov pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop pop jmp push mov sub push push push lea movb push push mov call mov push pop push mov call add cmp jbe push pop jmp mov push mov call pop push cmp pop cmova mov push mov call pop cmp push cmova pop cmp jbe mov call push lea mov mov movb call pop pop pop mov pop ret push mov push push push mov mov mov call mov test je movl mov movl mov movl movl call mov test je call mov test je mov call mov test je mov lea push sub mov mov mov inc dec jne mov mov mov mov push call pop mov pop jmp push call pop xor pop pop mov pop ret push mov push mov push mov mov mov pushl push call add test je mov mov push mov pushl push call add test jne push call pop pop pop ret push mov mov call push push mov push mov push mov call pop test je mov mov push mov call pop test je mov push mov call cmp lea mov cmovb mov push push lea mov push push call mov lea pushl push mov push call add test je mov push mov call pop test jne mov call pop pop pop mov pop ret push call pop jmp push mov sub push mov lea push push lea mov push push mov call add cmpl jne mov push mov call pop mov add cmp jb mov push mov call xor pop inc jmp xor pop mov pop ret push mov sub push mov lea push push push mov lea push push xor mov call add cmpl je xor jmp testb je mov lea push push lea mov push push call add cmpl jne push pop mov push mov call pop mov add cmp jb mov lea push push lea mov push push call mov add mov sub mov mov mov mov mov mov mov test je mov mov test je mov mov mov lea push push lea mov push push call mov add pop cmp jne mov call push push call pop pop mov call xor inc pop pop mov pop ret push mov mov pop jmp push mov mov push mov call pop test je mov call test jne push call pop pop ret push mov push mov mov push mov call mov push push mov call add pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop pop jmp push push push mov mov call mov test je mov movl mov push mov call mov pop push mov call mov movl push mov call mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov mov pushl push call add test je mov jmp push call pop xor pop pop pop ret push push push mov mov call mov test je mov andl mov push mov call mov pop push mov call mov movl push mov call push mov mov call add mov test je mov push push mov call mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov jmp push call pop xor pop pop pop ret push mov call mov test jne xor pop ret call mov test je mov call xor mov test pop setne mov ret push mov push push push andl mov mov mov mov pushl push call add test je mov mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov push mov push mov call mov push mov push mov call xor movl add inc jmp xor pop pop pop ret push push push mov push pop call mov test je mov call test je mov mov call test je mov jmp push call pop xor pop pop pop ret push mov mov pop jmp push mov mov call push push mov push mov mov push mov call pop test je mov mov push mov call pop test je mov push mov call cmp lea mov cmovb mov push push lea mov push push mov call add cmpl jbe mov lea pushl push mov push call add test je mov mov push mov call pop test jne mov call neg sbb neg pop pop pop mov pop ret mov call xor jmp push mov mov call push mov push mov push mov call pop cmp jb mov lea push push lea mov push push call mov mov push add mov call add cmp jb mov sub je dec lea dec mov push push push mov je call add jmp call add mov call xor pop pop mov pop ret mov push mov call pop cmp jb mov lea push push push mov call mov lea push pushl lea mov push push call mov lea pushl push mov push call add mov call test je mov call jmp xor inc jmp push mov push push push mov mov mov push mov call pop cmp jb mov push mov push mov call mov push lea mov call cmp pop pop cmova mov cmp pop cmova mov test je mov lea andl push push mov push mov call mov lea push mov pushl mov pushl push call add pop mov pop ret push mov push push andl andl push mov movl mov mov push mov call pop cmp jae mov push mov push mov call add push mov pushl call add pop mov lea push push mov push mov call add pop mov pop ret push mov push mov mov mov push mov call pop test je mov mov push mov call pop test je mov call test jne mov pop pop jmp pop pop ret push mov push push andl andl push mov movl mov mov push mov call pop cmp jae mov push mov push mov call add push mov pushl call add pop mov lea push push mov push mov call add pop mov pop ret push mov mov pop jmp push mov cmpl jne cmpl mov push je mov call jmp mov call mov pop push mov call mov movl push mov call pop pop pop ret push mov mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop cmpl mov je test je mov push call jmp test je mov push call pop mov pop test je mov push call pop ret push mov mov call mov call mov call mov pop jmp push push push mov mov mov call mov test je movl call mov test je mov call mov test je mov call mov test je mov mov mov push call mov mov push mov push mov call mov push mov push mov call mov mov push mov mov pushl push call mov mov mov push mov mov pushl push call mov mov push mov mov pushl push call add mov jmp push call pop xor pop pop pop ret push mov sub push mov push xor cmp jne mov mov push mov call pop cmp jb mov lea push push push mov push mov call mov push push mov lea push push mov call mov add mov mov mov mov mov dec je dec jne mov call test je movl cmp je mov call pop pop mov pop ret mov call jmp mov call jmp push mov push push push mov lea push pushl lea pushl mov call pop pop test je mov push push mov call mov lea mov push lea mov push push push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov push call xor pop inc jmp xor pop pop pop mov pop ret push mov push push push mov lea push pushl lea pushl mov call pop pop test je mov push push mov call mov lea mov push lea mov push push push call add test je mov mov push mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov push mov pushl push call add test je mov push call xor pop inc jmp xor pop pop pop mov pop ret push mov mov pop jmp push mov mov call push push mov push mov mov push mov call pop test je mov mov push mov call pop test je mov push mov call cmp lea mov cmovb mov push push lea mov push push mov call add cmpl jbe mov lea pushl push mov push call add test je mov mov push mov call pop test jne mov call neg sbb neg pop pop pop mov pop ret mov call xor jmp push mov mov call push mov push mov push mov call pop cmp jb mov lea push push lea mov push push call mov mov push add mov call add cmp jb mov sub je lea push push dec je dec mov push mov je call add jmp call add mov call xor pop pop mov pop ret mov push mov call mov push mov call add jmp mov push mov call pop cmp jb mov lea push push push mov call mov lea push pushl lea mov push push call mov lea pushl push mov push call add mov call test je mov call jmp xor inc jmp push mov push push push mov mov push mov call pop test je mov mov push mov call pop cmp jbe mov push mov push mov call mov push lea mov call cmp lea mov cmova cmp push cmova andl mov mov push mov push mov call mov lea push mov pushl mov pushl push call add pop pop mov pop ret push mov mov push mov call mov push mov call pop pop pop ret push mov mov pop jmp push mov push mov mov mov push mov call pop test je mov mov push mov call pop test je mov pop pop jmp pop pop ret push mov push mov cmpl jne mov test je mov push call pop cmpl jne mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop pop jmp push mov sub push push mov xor push mov mov mov cmp je orb push pop mov cmp jne push pop lea call mov lea mov lea mov mov lea push mov call mov lea pop push sub pop mov mov inc dec jne mov orb mov movl movzwl mov cmp jb lea mov lea mov mov sub mov mov mov shr mov mov lea mov movsl movsl movsl movsl mov mov xor inc cmp jb mov lea mov push call pop push pop mov mov mov lea mov mov inc dec jne mov mov add sub mov decl mov jne mov jmp mov test je orb lea xor lea stos push mov stos stos stos call mov add push pop mov sub mov movzbl add mov lea mov xor inc cmp jb lea push lea call pop sub mov mov inc decl jne pop pop pop mov pop ret push mov sub push mov push mov mov mov test jne xor inc jmp and mov push test je lea lea push sub pop mov mov inc dec jne mov lea push push push mov lea push push push call add test je mov lea mov shl push call pop test je andl jmp movl andb cmpl jne xor jmp movzwl mov cmp jb lea mov mov lea mov mov sub shr mov mov lea push call mov pop xor mov xor inc cmp jb mov mov mov push pop lea mov mov inc dec jne mov lea mov add decl mov movsl movsl movsl movsl jne mov mov test je mov and mov movzbl movzwl mov cmp ja mov sub mov xor inc pop pop pop mov pop ret push mov sub push mov lea push lea movl push mov pushl push mov call add test je mov lea shl lea push call pop test jne inc mov jmp xor pop mov pop ret push mov push push push push mov mov mov push mov call mov sub mov push mov call mov add push mov call mov add cmp jae push mov mov call pop mov push mov call pop imul xor push pop div cmp jb call mov pop pop pop mov pop ret push mov push push mov push mov call mov pop test je push push mov mov push mov call mov mov push call pop pop sub pop pop cmp jae cmpl je mov push call pop test je andl call sub cmp jl mov mov call pop mov pop ret push mov push mov push push mov mov push mov call mov mov add pop mov cmp jbe push call mov push mov call pop pop jmp push push call pop pop test je cmpl jb cmpl jne mov push movl call pop call mov pop pop pop pop ret push mov sub push mov mov push mov push mov call mov mov pop cmp je push mov mov push mov call mov mov push call pop pop sub mov cmp jbe mov add push mov mov call mov mov push call pop pop mov sub cmp jb mov mov push push mov call pop pop pop test je call mov mov pop pop mov pop ret push mov mov mov push movzbl mov push push push mov push call add pop pop ret push mov push mov push mov push mov mov push mov call pop pop test je mov movl pop mov mov pop pop jmp pop pop pop ret push mov mov mov mov mov pop ret push mov sub push mov cmpl jne mov call mov mov test jne xor jmp mov push call mov lea call lea push lea push mov call add jmp mov mov push mov call pop test je mov push pushl mov push call add lea push lea push mov call pop pop test jne mov pop mov pop ret push mov mov mov test jne xor inc pop ret mov mov test jne pop ret mov mov cmp jne call not and pop ret sbb neg pop ret push mov push push xor cmp jne mov xor inc movb xor mov cmpl mov sete mov and and cmp sete and dec neg sbb jne mov mov pop ret push mov mov call push push mov movl mov cmpl je call pushl movzwl lea mov push lea push call add test jne movzwl mov cmp jae push lea push pushl call add mov orb pop pop mov pop ret push mov mov call push mov movl testb je call movzwl lea push mov push lea push call add test jne push mov lea push push pushl call add mov andb pop pop mov pop ret push mov cmpl push mov je cmpl jne mov call mov xor cmp setne mov jmp mov test je call andl andl pop pop ret push mov push push mov mov mov mov mov push lea push mov push push push mov call add pop mov pop ret push mov push mov push mov mov mov call mov mov push push mov call pop pop test je mov movl pop mov mov pop pop jmp pop pop pop ret push xor mov push xor cmp sbb mov neg mov mov je cmp jne push mov mov call mov pop test je mov push push mov call pop jmp mov test je mov push call mov pop pop pop ret push mov push mov cmpl je mov mov mov push push mov call pop pop mov call mov pop pop jmp pop pop ret push mov mov mov mov pop jmp push mov sub lea mov push push mov lea mov mov add mov push mov lea mov lea mov movzbl shl mov movzbl xor mov movzbl mov shl xor movzbl shl xor imul shr and mov cmp jb mov sub mov lea mov cmp mov ja cmp jbe mov cmp je mov and xor mov cmp jb mov sub mov lea mov cmp mov ja cmp jbe mov cmp jne mov cmp jne mov cmp jne mov mov sub je cmp ja or jmp cmp ja mov sub jmp lea movb mov mov inc cmp jbe add xor div inc push push push mov call mov add mov add mov sub dec jne mov mov inc mov mov inc inc dec jne mov mov inc cmp jne mov inc cmp jne mov inc cmp jne mov inc cmp jne mov inc cmp jne mov inc cmp jne mov add jmp mov cmp jne inc inc cmp jb mov mov sub mov cmp ja mov mov cmp ja sub or mov jmp sub movb jmp sub mov mov shr and cmp jbe sub or mov mov mov inc cmp jbe lea xor div lea push push push call mov add add mov sub dec jne mov mov jmp dec mov sub mov cmp ja mov dec mov shl and or shl mov shr jmp mov cmp ja mov jmp sub mov shr and sub or or mov inc mov shl shr mov mov mov add mov jmp mov mov mov cmp jb mov sub mov pop mov sub pop pop mov pop ret push mov push push push mov mov mov push mov cmp ja mov jmp pushl mov push pushl call mov add add mov mov test je sub add cmp jne cmp ja lea jmp cmp ja or jmp cmp ja lea jmp lea movb mov inc cmp jbe add xor div inc push push push mov call mov lea add add sub dec jne mov inc mov mov inc inc dec jne mov movw add pop movb sub inc mov xor pop pop mov pop ret push mov push push mov push push mov mov andl add mov lea mov mov mov push cmp jbe movzbl sub inc cmp jb mov sub cmp jb sub lea cmp jb mov mov inc inc dec jne jmp cmp jae movzbl inc cmp jae test jne jmp add inc mov sub cmp jb cmpb je movzbl add add inc mov lea sub cmp jb mov lea sub cmp jb mov push pop mov add add dec je cmp jb mov sub mov add add cmp jae test je mov mov inc inc dec jne jmp mov mov inc inc dec jne movzbl inc cmp jae movzbl mov shl sub shr sub sub inc cmp jb cmp jae mov sub cmp jb mov mov mov mov mov mov add jmp mov cmp jb mov mov shr and shr sub movzbl shl sub dec inc dec cmp jb cmp jae mov lea sub cmp jb mov mov mov mov add add mov mov inc inc dec jne mov movzbl mov and je mov sub cmp jb sub lea cmp jb mov mov inc inc cmp jbe mov mov inc inc cmp jbe mov mov inc inc movzbl inc mov cmp jb jmp cmp jb and jne jmp add inc mov sub cmp jb cmpb je movzbl add add inc movzwl mov shr sub dec add jmp cmp jb mov mov and shl sub and jne jmp add inc mov sub cmp jb cmpb je movzbl add add inc movzwl add shr sub cmp je sub cmp jb cmp jae mov lea sub cmp jb cmp jb mov push sub pop cmp jl mov add mov add sub mov sub mov add add cmp jae test je mov mov inc inc dec jne jmp movzbl mov shl sub shr sub dec inc cmp jb cmp jae mov sub cmp jb mov mov mov mov add jmp sub cmp mov sbb and add mov xor cmp cmove jmp push jmp push jmp push jmp push mov sub pop mov pop pop pop mov pop ret push mov cmpl jae xor pop ret push mov call mov test je pushl mov mov call pop test je mov call mov test je mov push push lea mov push sub pop mov mov inc dec jne mov lea push pop pushl rep mov call pop pop pop test je mov jmp push call pop xor pop pop ret push mov mov push mov push mov mov mov mov shr call cmp jne xor jmp push lea lea push pop mov add sub mov add mov mov shr mov call cmp je add add add sub mov add mov mov shr mov call cmp jne xor jmp lea mov sub lea add mov lea shr call xor cmp setne mov pop pop pop pop ret push mov push push mov mov push pushl mov call cmp jae pushl call cmp jae pushl call cmp jae pushl call cmp jae movzbl pushl mov mov movzbl mov movzbl mov mov mov mov push mov call pushl lea push call pushl lea push call pushl lea push call xor inc jmp xor pop pop pop pop ret push mov push push mov mov push pushl mov call cmp jae pushl call cmp jae pushl call cmp jae pushl call cmp jae movzbl pushl mov mov movzbl mov movzbl mov mov push mov call pushl lea push call pushl lea push call pushl lea push call xor inc jmp xor pop pop pop pop ret push mov push push mov push pushl mov call mov cmp jae pushl call cmp jae pushl call cmp jae pushl mov push call pushl lea push call pushl lea push call xor inc jmp xor pop pop pop pop ret push mov sub lea push push lea mov push lea push lea push mov lea add push call add test jne xor jmp movzbl sub je dec je dec je dec je dec je dec jne push jmp push jmp pushl mov mov pushl pushl pushl call add jmp pushl mov pushl push pushl call jmp push pushl mov mov pushl pushl pushl call add pop mov pop ret push mov and sub push push xor mov push push mov mov lea push call add lea mov push pushl call pop pop test je mov test je cmp je cmp je jbe cmp ja pushl mov lea push pushl lea call add mov mov test je mov lea push call pop sub mov mov mov inc dec jne mov mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov push mov pushl push call add test je xor inc jmp mov lea push pushl lea call pop pop jmp mov call mov test je lea mov push lea push lea call pop pop test jne xor mov jmp mov test je mov push call pop xor pop pop mov pop ret push mov push push mov mov mov mov lea push push call pop pop test je mov call test jne mov call pop pop pop ret push mov push mov mov mov push mov call mov mov push mov call mov mov push mov call add test je mov mov push mov call pop test je mov pop pop jmp pop pop ret push mov mov test je mov push mov call mov mov push mov call pop pop cmpl je mov push call pop mov test je mov push call pop mov test je mov push push call pop pop pop ret push mov push mov mov call mov test je mov push call pop mov test je mov push call pop cmpl je mov push call pop mov pop pop jmp push mov push push push push mov or xor call mov xor mov mov div imul add add cmpb mov jne mov push mov push mov mov call push mov push pushl call add pop test je mov lea push push mov push mov call add test jne xor jmp mov lea pushl mov lea push call pop pop pop pop mov pop ret push mov sub mov xor push push push movzbl mov pop div movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov push call mov mov lea push call add xor inc pop pop mov pop ret push mov sub push mov lea push push push call add mov lea push call cmpl ja jne cmpl jae xor jmp push call test je mov call mov test je pushl mov mov call pop test je pushl mov mov call pop test je mov lea push push pop lea mov rep lea push sub pop mov mov inc dec jne mov lea push lea call pop pop test je mov call mov test je push mov mov call mov pop test je mov call mov test je testb mov mov cmovne mov call mov test je mov call mov test je mov call test je mov jmp push call pop xor pop pop mov pop ret push mov sub push lea mov mov lea mov mov push movzwl lea push movzwl mov movzwl mov add lea add cmp jb mov cmp ja mov cmp ja mov movzwl cmp ja lea lea push sub pop mov mov inc dec jne mov lea mov mov mov mov mov mov mov mov add mov mov movzwl add push call mov lea mov movzwl lea movzwl add push call movzwl lea add push movzwl lea call xor add inc jmp xor pop pop pop mov pop ret push mov sub push push push xor xor push mov mov lea mov push push mov call movzbl add sub je dec je dec je dec jne xor lea call mov sub je dec jne push pop jmp push pop lea call mov test je jmp xor inc lea push lea call pop test je mov test je push push push push lea push push push call call mov test je mov test je push mov push push push push push push call call test je test je mov call push push mov mov call pop pop jmp mov call test je mov call xor pop pop pop mov pop ret push mov push andl push mov push mov test je push pop call mov test je movl mov mov mov mov push mov mov mov movl lea push push pop call test je mov test je push push push push push push call call cmp je mov jmp mov call mov test je call xor pop pop mov pop ret push mov mov sub push cmp jne mov mov test je mov push mov call pop mov call jmp mov cmpl jne mov lea mov mov mov mov mov mov mov push push mov push push mov call add pop mov pop ret push mov mov cmpl jne mov pushl pushl pushl pushl pushl pushl call add pop ret push mov push push push mov movl xor mov push mov test je mov test je lea push lea push push push push push call call mov push add push call mov call mov mov mov call pop pop mov pop ret push mov and mov sub push push push cmp jbe mov mov cmp ja je cmp je cmp je cmp je cmp jne mov mov mov push mov call cmp cmova cmp cmova push mov mov call test je jmp xor xor push mov lea push push call mov add movl test je mov lea push push lea push push push pushl push push call call test je push lea push call test jne xor movl lea mov mov test je push lea push push push push pushl push push call call testb je push pushl jmp mov call jmp cmpl je cmpl je testb jne mov pushl andl pushl mov push call add jmp mov mov mov call andl mov call mov call jmp cmp je cmp je cmp jne mov test je push pushl push push call call jmp andl mov call pop pop pop mov pop ret push mov sub push xor mov push push mov lea push call movzbl push movzbl push movzbl push movzbl push lea push push call mov add movzwl test jne xor jmp push push lea push pushl push push call call push push mov mov call pop pop pop mov pop ret push mov push push push push mov movl mov mov testb cmovne mov mov test jne xor jmp push push push push push pushl pushl push push call call mov test je push lea mov push push pop call testb je push lea movl push push pop mov call andl lea push push push pop mov call push push mov mov call pop pop pop pop mov pop ret push mov push push push mov mov push push mov call pushl mov call add lea call mov test je pushl push push push call mov add test jne xor jmp push push push pushl push push call call mov mov call mov pop pop pop mov pop ret push mov push mov mov test je mov push mov sub push call cmp pop cmova test je mov lea push push mov add mov push push call mov add add cmpl pop je cmpl je mov push mov call pop pop pop ret push mov mov pop jmp push mov mov push push movl call pop pop pop ret push mov push mov cmpl jne mov push mov call pop test je mov movl test je push pushl push push call call test jne mov call andl pop pop ret push push mov push lea push call push call lea push pop lea push pop xor call mov mov lea dec jne xor pop mov pop ret push mov sub lea push push push push mov lea pop mov rep push movsb xor push push call add testb jne mov call lea push lea push push call add testb mov push mov cmove mov push call mov pop pop test je lea mov push mov call pop test je mov mov push mov call pop test je mov mov push call pop test je mov mov push call pop test je cmpb jne push lea push lea push push mov call test je cmpb jne lea mov lea mov call test je push pushl pushl push mov call test je mov call mov call testb je mov lea push mov call pop test je xor inc jmp mov test je mov call mov xor pop pop pop mov pop ret push mov call test je testb je mov call jmp mov test je xor push push push push push push pushl push push call call test je xor inc pop ret mov test je mov call xor pop ret push mov push andl push mov lea push push push lea push mov call mov pop pop test je lea call mov test je mov mov call mov test je push push mov call jmp push push mov call pop pop test je mov mov push push mov push pushl push call add test je mov mov push push mov push pushl push call add test je mov push call pop mov call xor inc jmp mov call test je mov push call pop mov test je mov push call andl pop xor pop pop pop mov pop ret push mov and push andl mov push push mov mov push call lea push push lea mov call mov pop pop test je mov mov andl push mov push push pushl push call add test je mov mov push push mov push pushl push call add test je mov pushl push mov call testb pop pop pushl je push lea mov call pop pop jmp push lea push push lea call add test je mov push call xor inc jmp test je mov push call pop mov test je mov push call andl pop mov push mov call xor pop pop pop pop mov pop ret push mov push mov mov push mov call mov call pushl pushl pushl push mov call test jne mov pop pop jmp pop pop ret push mov push mov test je mov push call pop mov xor mov mov test je mov push push call pop pop mov test je mov push call pop mov mov test je mov push call pop mov pop pop ret push mov mov test je mov push call pop mov test je mov push call pop cmpl je mov push call pop mov push push mov call pop pop pop ret push mov call mov call mov test je mov call mov test je mov pop jmp pop ret push mov mov test je call cmpl je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je call mov pop jmp push mov mov call mov call mov pop jmp push push mov push pop call mov test je movl mov call mov test je push push mov mov call mov pop pop test je mov push push call pop pop test je mov jmp push call pop xor pop pop ret push mov mov push mov push mov call pop pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov pop pop jmp push mov sub push push push push lea mov push push mov call andl lea add cmpl cmovne cmpl je mov test je cmp jle cmp jg mov sub je dec je dec jne push pushl mov mov call jmp mov call test jne xor jmp push pushl mov mov call jmp pushl mov mov pushl call pop pop pop pop pop mov pop ret push mov push push push push mov xor mov mov dec je dec jne push pop lea call mov cmp jne push pop mov call mov test je xor push mov call cmp jae push lea push call lea lea call test je mov xor mov inc jmp test je mov call xor pop pop pop mov pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push push call pop pop pop ret push mov mov pop jmp push mov call cmpl je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test jne ret push mov mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov pop jmp push mov mov call mov call mov pop jmp push mov mov add pop ret push mov push mov mov mov push mov call pop test je mov mov push mov call pop test je mov push mov call pop test je mov push mov call pop test je mov pop pop jmp mov mov push mov call mov mov push mov call mov push mov call mov push mov call add pop pop ret push mov mov push mov call pop test je xor inc pop ret mov push lea push pushl pushl lea push call add test je cmpl je mov push call pop mov push mov call pop test je mov mov mov push mov call pop xor inc pop pop ret push mov push mov cmpl je mov mov push mov call pop test je mov lea push pushl lea mov call pop pop test je cmpl jne pop pop ret mov call test jne mov pop pop jmp push mov mov call push mov mov mov push mov call mov pop test je push mov push mov lea cmp push cmova mov push lea push push call add cmpl jbe mov lea pushl push mov push mov call add test je mov mov push pushl mov push call mov push mov call add test jne mov mov push mov call pop test je push push call pop pop cmpl je mov push mov call pop test je pushl mov lea call pop test je mov mov push mov call mov pop test jne jmp mov call test jne mov call pop pop pop mov pop ret push mov push pushl call pop pop pop ret push mov push pushl call pop pop pop ret push mov sub push push mov mov push mov call mov test je push lea push lea call pop pop test je push lea push lea call pop pop test je pushl mov mov pushl pushl push push call add test je mov xor inc mov or mov mov call mov test je push pop call mov test je lea call test je mov mov push pushl pushl call add mov test je mov mov push mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov jmp push call pop xor pop pop pop mov pop ret push mov sub andl xor push push push mov lea push pop rep mov mov call mov test je push pop cmp jne cmp jne lea cmpw je call mov test je lea call test je push xor push mov call test jne push push call andl lea push push pushl mov push call test jne mov jmp mov call xor pop pop pop mov pop ret push mov push push push push mov mov mov call mov test je pushl mov mov push call pop pop test je mov jmp xor pop pop pop pop pop ret push mov push mov mov test je push push call pushl call andl cmpl je cmpl je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov push pushl mov push call add test je mov push pushl mov push call add test je mov push call jmp push call pop pop pop ret push push call xor mov mov pushl mov mov call pop mov push push push push push push pushl call mov mov mov mov push call pop jmp xor inc ret mov orl xor call ret push mov push mov mov push call mov test je mov test je push call test je mov call mov test je mov test je push call test je mov call mov test je push push push push push push call mov test je xor inc jmp mov test je push push call pushl call andl xor pop pop pop ret push mov push push push push mov mov call mov test je orl call mov test je mov call mov test je lea movl push push mov lea call pop pop test je push lea lea push call pop pop test je pushl mov mov pushl pushl push push call add call mov call mov mov test je test je mov push call mov mov pop push mov call pop mov mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je cmpl je push push call pop pop jmp mov push pushl mov push call add test je mov jmp push call pop jmp push call xor pop pop pop mov pop ret push mov push push mov xor mov test je push push call pushl call mov cmpl je pushl call orl mov test je push push push call mov call mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov mov test je mov push call pop mov mov test je mov push call pop mov test je mov push push call pop pop pop pop pop ret push mov mov add pop ret push mov push mov mov push mov call pop test je mov push mov call pop test je push call pop pop pop ret push mov push mov cmpl je cmpl jne mov lea push push push mov lea push push call add cmpl jbe lea push push pushl push pushl call test jne call cmp je push call pop jmp movl pop pop pop ret push mov push mov cmpl je cmpl jne mov push mov call pop mov cmp cmovb test je lea push push push lea push pushl call test jne call cmp je push call pop jmp movl pop pop ret push mov push mov lea push push andl lea push lea push call test je mov lea pushl push mov push call add test je push push call pop jmp push call pop pop pop ret push mov push mov lea push push andl lea push lea push call test jne push call pop jmp mov pushl push mov call push push call add pop pop ret push mov test je push call cmpl pop je mov push call pop mov test je mov push call pop mov test je mov push call pop pop ret push mov test je mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop pop ret push mov test je mov test je call mov test je call mov test je pop jmp pop ret push mov mov call mov call mov call mov pop jmp push mov mov push mov push xor inc movl mov mov mov mov movl call mov push test jne call pop xor jmp mov push push call add mov mov pop pop pop ret push mov mov mov pop ret push mov mov cmpl jne movl mov push mov call pop pop ret push mov push mov push mov call mov push call pop pop pop pop ret push mov push mov mov test je mov push call pop andl pop pop ret push mov push call test je dec add mov cmp je cmp jne movb dec jmp pop ret push mov mov test jne xor pop ret xor cmp je cmpb je inc cmp jne push mov test je cmpb je lea add mov jmp andl movb mov pop pop ret push mov push push mov mov push call test je cmpb jne dec cmp jne mov cmp je cmp jne cmpb jne mov cmp jl cmp jg sub mov mov mov sub mov xor inc jmp xor pop pop pop ret push mov push mov push push push andl mov lea mov push mov call add test je push push call test jne mov lea push mov call add test je lea mov push mov call pop test je mov lea push mov call add test je mov call mov test je lea mov call mov mov call test je mov lea push mov call mov add test je mov call push lea push push call add push push push call mov mov mov xor inc jmp xor pop pop pop mov pop ret push mov push mov push push push cmpl mov mov jae mov call mov test je mov mov jmp cmp je inc mov test jne cmpb je xor test je mov sub cmp jge push push movb call lea jmp cmp je cmp jne inc mov test jne push call cmp jge push lea push call mov call mov mov mov mov xor incl inc jmp mov call xor pop pop pop mov pop ret push mov push push push mov mov jmp lea mov push call add mov push call cmp jle mov call pushl mov mov call pop test je mov test jne xor inc pop pop mov pop ret xor jmp push mov sub push mov mov movl movl movl test jne or jmp push lea xor push test je lea cmpb je xor pushl call mov mov sub cmp ja push mov pushl add push call add test je inc cmp jb inc lea cmp jae mov jmp mov add jmp or pop pop pop mov pop ret push mov push push push push mov mov push push call lea mov push mov call add test jne xor jmp mov lea push lea call pop test jne mov call jmp xor inc pop pop mov pop ret push mov push xor cmp jbe push lea mov call inc lea cmp jb pop andl pop pop ret push mov push push push push mov xor mov mov cmp jbe lea push pushl call test je mov inc add cmp jb xor pop pop pop mov pop ret mov sub jmp push mov lea push mov cmp ja push mov push pop cmp cmova mov xor mov add inc shl movzwl test je or jmp and mov pop pop pop ret push mov lea cmp ja xor add inc shl test je orl pop ret andl pop ret push mov cmp jb push xor add inc shl mov movzwl test je orl jmp andl movzwl test pop je orl pop ret andl pop ret push mov sub push push push mov mov push push mov mov mov call mov movzbl imul movb imul add imul add mov add xor movzwl mov cmp jae mov xor push pop div mov mov jmp push pop xor call mov lea mov push lea call pushl lea mov call push mov call mov add cmp jne cmpl je or jmp and cmp jae add jmp add mov inc cmp jb pop xor pop inc pop mov pop ret push push mov mov push mov call mov test je movl movl mov mov push call pop lea mov mov mov sub mov mov inc dec jne mov call mov test je mov mov push pushl push call add test je mov mov push mov pushl push call add test je and mov push push call pop pop test je add je movl xor inc jmp push call pop xor pop pop pop ret push mov push push mov cmpl je mov push mov call mov cmp pop cmova mov push push mov call sub pop pop jne mov pop pop pop jmp pop pop pop ret push mov mov lea mov push pushl call pop pop test jne mov pop jmp mov push mov call pop mov test je mov push push call pop pop pop ret push mov mov pop jmp push mov mov test je mov push call pop mov test je mov push push call pop pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop pop jmp push push call xor mov call cmp jne mov push push lea push call push mov mov call add mov mov mov mov test je add push mov sub add mov call pop test je sub cmp jae push push lea push call add and lea call mov test je lea push lea mov call pop mov mov mov test je mov call cmpl je push mov mov call pop mov test jne mov call jmp movb push push call sub lea add push lea push push call add mov call call mov movl jmp xor inc ret mov orl mov test jne or jmp pushl pushl pushl pushl call call ret push mov push push mov mov push push xor movzwl lea add xor cmp jae push push call pop pop test jne mov mov add shr lea cmp jae mov cmp je add cmp jb movzwl inc add cmp jl xor pop pop pop mov pop ret mov jmp push push call mov test je push call test je push push call test je mov cmp jne mov lea cmp ja add cmpl jne push mov call pop mov jmp xor mov pop test jne xor ret mov mov xor movl inc ret push mov sub push push xor mov mov push mov mov cmp je call sub cmp jae mov call mov mov call mov mov cmp je test je inc mov jmp mov mov mov call mov mov push push push mov mov call push push push call add push push push push push call mov test je call push push push push push push push pushl mov call mov test je push push push push push push push push call mov test je push push push push push call test je test jne call mov test je push push push push push call cmp jne push push push push push call test je mov test je mov mov mov pushl mov call mov test je push call test je push call mov cmp je mov call mov mov call mov mov cmp je test jne mov mov pop pop pop mov pop ret push push call mov mov andl mov call andl mov mov call mov jmp xor inc ret mov orl mov call mov call ret push mov push push push push mov mov call mov test je mov lea mov movl movl sub mov mov mov mov inc dec jne mov call mov test je mov call mov test je push mov mov call mov pop test je mov push mov call pop pushl mov mov push call push pushl mov call add test je mov call test je mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov push push call pop pop test je xor inc jmp push call pop xor pop pop pop mov pop ret push mov push push andl push mov push push mov push mov call pop pushl mov mov call lea lea cltd sub sbb lea push push call mov pop pop test je andl lea lea call pushl mov pushl push call add test je pushl mov lea push mov call pop pop test je mov push call xor pop inc jmp test je mov push call pop xor pop pop pop mov pop ret push mov sub push push push lea movb push push mov call mov xor call push push call push push pushl lea push push call mov add mov lea push call push lea push pushl call add neg sbb neg pop pop mov pop ret push mov sub push push push xor lea push push push mov call mov add cmp jne mov lea push push mov call pop push pushl pushl call jmp pushl lea push push call mov push mov call mov add mov lea push call cmp jbe mov mov lea push call push lea push pushl call mov push mov call add pop pop pop mov pop ret push mov mov push push movl call pop pop pop ret push mov mov mov push mov call pop pop ret push mov mov push mov push mov call pop pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov test je call mov test je mov push call pop mov test je mov push call pop mov pop pop jmp push mov sub push push push xor mov mov lea stos mov xor stos stos stos lea push push call test jne mov call mov test je mov push pop push mov call mov mov mov jmp lea cmp jbe cmp jne inc mov test jne push call mov cmp je push push push call mov cmp je pushl mov mov call mov pop test je cmpl jne mov movl call test je cmpl jne push lea movl push push push pushl call push lea push push call cmp jne call cmp jne mov jmp push call test je mov mov test je mov mov jmp mov mov push push push mov mov push call push pushl call add mov push call pop jmp push call xor mov call pop mov pop pop mov pop ret push mov sub push push xor lea stos mov push stos stos stos andl pop mov mov test je mov dec mov lea call movzwl push call mov lea push push pushl call test jne inc jmp xor pop pop mov pop ret push mov push push push push mov mov push mov call mov test je mov push mov call mov pop test je mov mov push push push push mov call push pushl call mov lea mov lea mov push push movl mov call add test je lea push lea mov push call pop pop test je call mov test je push pushl mov mov pushl push push call add test je mov call mov test je mov push pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov push push mov call pop push pushl call test jne mov jmp pushl call test je push call pop xor pop pop pop mov pop ret push mov mov pop jmp push mov sub lea push mov push mov push mov call pop push pushl call test je mov push call pop jmp mov mov push push xor mov inc push push pushl mov push call push pushl call mov add test je mov mov push push push mov mov push call push pushl call mov add cmpl push je call pop jmp call mov pop test je mov mov push push push mov mov push call push pushl call add mov call test je mov test je mov mov push push push mov mov push call push pushl call add mov call test je mov test je mov mov push push push mov mov push call push pushl call add mov call pop pop pop mov pop ret push mov mov call push push push mov push push lea push pushl call mov test je cmp je mov push mov call pop cmp jae mov push mov call add push pushl call add mov lea push push push mov call add test je cmp jne mov push mov call mov push mov call pop pop mov call pop pop pop mov pop ret push mov mov push mov call pop test je mov push mov call pop test je mov push call pop pop ret push mov mov pop jmp push mov mov call push mov lea push push lea mov push push mov call add cmpl jne xor inc jmp push push pushl lea push pushl call mov mov push push mov mov mov push push call push pushl call mov add test je cmp jne mov call cmp je call cmp jne xor inc jmp mov push push mov call xor pop inc jmp mov push call xor pop pop pop mov pop ret push mov mov pop jmp push mov mov call push mov mov push mov call pop mov cmp cmovb test jne xor inc jmp push push push push lea push pushl call mov test jne mov push push push mov push mov mov call push pushl call add jmp cmp jne mov call cmp je call cmp je mov push push mov call push push jmp mov mov push push push mov mov push call push pushl call mov lea push push push mov call add test jne mov push call pop xor jmp xor inc pop pop pop mov pop ret push mov mov add pop ret push mov push push mov mov push push push mov mov push mov call push pushl call mov add test je mov push call pop mov test je mov push call pop cmpl je pushl call orl mov test je mov push call andl pop mov test je mov push push call pop pop pop pop pop ret push mov push call cmpl pop je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov call mov call mov pop jmp push mov push push push mov mov push mov call mov test je push push lea push call push lea mov lea movl push mov call pop pop test je lea push push lea mov call pop pop test je pushl mov mov pushl pushl push push call add test je mov call mov test je mov mov push pushl push call add test je mov mov push mov pushl push call add test je mov mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov pushl cmpl lea jne lea push lea call jmp mov push call mov pop pop test je mov push pushl mov push call add test je mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je mov jmp push call pop xor pop pop pop pop pop ret push mov mov add pop ret push mov sub push mov xor push mov mov lea mov call mov test je push movw call mov movzwl push call mov lea mov push push mov push mov call add test je movl jmp mov push call pop test je mov call pop pop mov pop ret push mov mov pop jmp push mov push push mov cmpl jne mov push mov push mov call mov mov push mov call mov cmp cmova lea push mov push mov pushl push call mov push mov call mov mov mov push mov call mov cmp cmova lea push mov push pushl mov push call add pop pop mov pop ret push mov mov mov dec je dec jne pop jmp pop jmp pop ret push mov mov mov dec dec jne pop jmp pop ret push mov sub push push movb lea xor lea stos mov push push lea stos push stos mov mov push mov call add cmpl jne mov push mov push mov call cmpb mov pop pop push je call pop jmp movl call pop mov call pop pop mov pop ret push mov push mov mov push mov call pop test je mov mov push mov call pop mov push mov call pop test je mov mov push mov call pop mov push mov call pop test je mov push mov call pop test je mov push call pop pop pop ret push mov push mov mov mov push mov call pop test je mov push mov call pop mov mov push mov call pop test je mov push mov call pop pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop pop ret push mov push mov push call cmpl pop je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop pop jmp push mov push push push mov mov push mov call mov test je mov lea sub mov mov mov inc dec jne push pushl lea push call mov lea mov mov lea push push mov mov movl call pop pop test je lea push lea mov push call pop pop test je pushl mov mov pushl pushl push push call add test je mov call mov test je mov mov push pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov mov push mov pushl push call add test je mov call test je mov jmp push call pop xor pop pop pop mov pop ret push mov incl cmpl jb xor pop ret pushl mov lea push call pop pop xor mov test pop setne mov ret push mov push mov push mov mov push mov call mov push mov push mov call mov mov push mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je mov mov mov push mov mov pushl push call add test je mov mov push mov mov pushl push call add test je xor inc jmp xor pop pop ret push mov and push push mov andl call test je mov call test je xor inc jmp xor pop mov pop ret push mov mov andl pop jmp push mov mov pop jmp push mov push push mov cmpl jne mov push mov push mov call mov mov push mov call mov cmp cmova lea push mov push mov pushl push call add pop pop mov pop ret push mov mov pop jmp push mov push push mov cmpl jne mov push mov push mov call mov mov push mov call cmp lea push cmova mov push pushl mov push mov call add pop pop mov pop ret push mov mov mov cmp je jle cmp jle cmp jne pop jmp pop jmp pop jmp pop ret push mov mov cmpl jne pop jmp pop ret push mov sub push push push xor lea push push push mov mov call mov lea push push lea mov push push mov call mov lea add call mov cmp je mov push mov push mov call pop mov lea pop mov lea call test je mov mov call mov test je mov jmp lea cmp ja imul movsbl add add inc mov test jne mov mov mov cmp je cmp jne movl movl jmp movl mov call jmp mov push call pop pop pop pop mov pop ret push mov push push push mov mov push xor mov cmp jne call mov call test jne mov push call jmp movl jmp mov sub je dec jne lea push call pop cmp je mov xor inc push mov mov call pop pop pop pop mov pop ret push mov mov mov push mov mov push call xor inc cmpl jne push push xor lea pop cmpl je cmpl cmove add dec jne pop test jne mov push call pop pop pop pop ret incl cmpl jb andl jmp mov test jne test je push push call test je and mov pop pop pop jmp mov test je mov push call pop andl mov pop pop pop jmp push mov push push mov mov push xor mov cmp jbe push lea push pushl call test jne mov mov sub call test jne mov mov sub call test je movl mov mov sub call test je movl mov mov sub call test je mov cmp je cmp jne movl mov inc add cmp jb pop pop pop mov pop ret push mov push xor xor inc cmp je cmp jne mov cmp je cmp jne mov mov pop pop ret push mov push lea mov call test jne xor jmp mov dec je dec jne mov lea push lea push push push call add jmp mov push push call pop pop mov xor cmp je inc mov mov pop pop ret push mov push push andl lea andl lea push call add cmpl je andl xor inc mov jmp cmpl je call jmp xor mov pop ret push push mov mov test je mov push mov push mov call mov cmp pop cmova test je mov push mov push mov call sub pop pop pop cmpl jne mov dec dec je dec jne lea mov pop pop jmp mov push movl call pop mov call mov pop pop jmp pop pop ret push mov sub push lea movl push lea mov call pop test je mov mov push mov call pop cmp jb mov lea pushl push mov push mov call add test je mov movl call jmp mov push call pop pop mov pop ret push mov sub push push mov mov movb movzwl push lea push lea push push call add test jns xor jmp push mov lea mov pushl call pushl mov mov call cmpl pop pop je mov sub je dec jne pushl mov mov call jmp pushl mov mov call pop pushl mov mov call pop push call mov xor inc pop pop pop mov pop ret push mov sub push push push xor mov push lea mov push push mov call mov add mov dec je dec je dec jne lea mov lea mov call test je cmp je cmp je mov call mov mov call mov mov call mov call test je test je mov lea push mov call push mov lea call push mov lea call add lea push call mov lea call mov mov call pushl mov mov mov call pushl mov mov call pushl mov mov call add mov call test je mov call mov test je mov call test je mov call pop pop pop mov pop ret lea call lea mov call mov jmp push mov sub push mov push push mov mov push mov mov call cmpl mov pop push mov jne mov call mov lea pop push lea mov push push call add test je mov mov call mov test je mov call mov test je push mov mov call push mov mov call pop pop mov call test je mov call pop pop pop mov pop ret push mov sub mov mov push mov mov push mov call mov test je mov push mov jmp cmp je inc mov test jne cmpb je xor test je movb cmpl mov jne push push call test jne mov cmpl je push push call test je mov movl jmp lea call mov test je push call mov call mov mov test je lea mov push lea call mov pop test je mov pushl push mov push mov call add mov call test je mov call pop pop pop mov pop ret push mov push mov cmpl jne mov mov push mov call pop test je mov push mov call pop mov mov push mov call pop test je mov push mov call pop pop pop ret push push mov call cmpl pop je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop cmpl je lea mov push call pop mov pop jmp push mov mov mov call mov pop jmp push mov sub push push mov mov mov xor push mov inc mov xor cmp mov mov mov mov mov mov mov movzbl lea cmovne mov mov push push push call add test je mov pushl push mov push push call add test je mov jmp xor pop pop pop mov pop ret push mov push push push push mov mov mov call mov test je movl mov mov push call pop mov mov test je mov push call pop mov lea mov sub mov mov mov inc dec jne mov call mov test je mov mov push pushl push call add test je mov mov push mov pushl push call add test je mov push push call pop pop test je xor inc jmp push call pop xor pop pop pop pop pop ret push mov mov add pop ret push mov sub push mov mov push mov call pop cmp jb mov lea push push push mov push call mov add cmp jne mov mov push lea mov xor cmp sete mov mov mov mov mov movzbl and mov lea mov push push pushl push call add pop test je mov test je mov push push call pop pop movl mov call pop mov pop ret push mov mov pop jmp push mov cmpl jne mov test je mov push call pop mov test je mov push push call pop pop pop ret push mov push mov mov call mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop pop jmp push mov sub xor xor push push push mov lea stos mov mov xorps push pop stos mov mov push mov stos mov movdqu mov stos mov mov mov stos xor lea mov stos mov stos stos stos stos stos xor lea rep pop call mov test je push pop call mov test je movl lea mov mov mov lea push push movl movl movl movl call pop pop test je lea movl mov lea lea movl push push movl call pop pop test je lea push pop mov mov mov call test je xor lea mov mov mov mov lea push push call pop pop test je lea movl xor mov lea mov push push lea mov mov mov mov mov call pop pop test je xor mov inc jmp andl test je mov call test je mov call xor pop pop pop mov pop ret push mov sub push mov cmpl je xor inc jmp lea push push lea push call test je xor jmp mov add add mov call xor mov test setne mov pop mov pop ret push mov sub push push push xor lea xor mov push pop mov rep lea mov stos push push mov stos mov stos stos xor mov lea stos stos stos stos lea push call add mov lea call test je lea xor mov inc push mov mov lea push lea push push push push push call test je lea movl push movl mov mov call mov call mov mov call imul xor push pop div add mov call mov call imul xor push pop div inc mov call mov call imul xor push pop div xor inc mov mov call mov call imul and add mov call mov call imul xor push pop div mov call mov call imul xor push pop div mov call mov call imul lea xor lea mov div mov mov movsl movsl movsl movsl pushl add lea mov lea push lea push xor push push push lea push push call mov mov test je mov test je call mov mov call pop pop mov pop mov pop ret push mov sub push push push xor lea push push push mov mov mov call add movl test je movl jmp call mov test je lea movl movl movl mov push pushl lea movl push push push xor test push setne inc push push push call test push pop cmove cmpl je pushl call pop mov pop pop mov pop ret push push push push xor mov push push call add movl cmp jne push call mov cmp je push pushl call test je call test je mov mov push pop mov rep lea push mov call pop test je xor inc jmp cmp je pushl call mov test je call xor pop pop pop ret push mov push push mov mov push push mov call mov pop cmp jb mov lea push push call pop pop test je mov push push push call add neg sbb neg pop pop pop pop ret push mov sub push push mov xor push mov mov mov mov push mov mov call pop cmp jae mov push push call pop pop test je mov push mov call mov mov push call pop pop cmp jae mov mov push mov call push pushl call add test je mov push mov call mov mov push call pop pop cmp jb mov lea push mov pushl pushl push call mov lea add movl xor movl mov mov push push mov mov push mov lea lea mov push mov mov mov call mov cmp je mov test je cmp je cmp jne cmp jne xor jmp push lea mov pop test jne cmpl cmove test jne cmpl cmove add dec jne mov test je mov pushl pushl mov push call mov add test je mov mov mov sub push push call cmpl pop pop jne mov movl xor inc pop pop pop mov pop ret push mov sub push push push mov mov lea mov push push lea xor push mov call test jne mov lea mov add push pushl mov push push call mov add mov movl movl mov mov mov mov mov mov add mov xor mov mov lea mov lea push push push lea movl push mov mov movl call test js push lea pop test jne cmpl cmove test jne cmpl cmove add dec jne test je mov mov mov sub push mov push call mov add add mov push mov mov call add test je xor inc jmp xor pop pop pop mov pop ret push mov mov mov push push mov xor mov push pop mov mov mov mov mov mov mov mov mov mov mov movl mov mov pop mov mov pop pop ret push mov mov call andl andl lea push push lea push pushl mov mov call add mov cmpl jne mov cmpl jne andl jmp movl mov mov mov andl lea push lea push pushl lea push lea push lea mov call add mov cmpl jne cmpl je mov add mov jmp andl lea push lea push lea push mov add push push push lea push pushl mov add push mov call mov jmp cmpl je lea mov jmp andl cmpl je mov add mov jmp andl lea push lea push lea push mov add push push pushl push push push push pushl mov add push mov call mov movl cmpl je cmpl je cmpl je jmp jmp jmp push pop imul cmpl je push pop imul pushl push pop imul mov mov call pop test jne jmp push pop shl cmpl jne push pop shl mov mov jmp andl mov mov cmpl jbe jmp jmp mov sub push pushl mov mov call pop pop jmp jmp jmp cmpl jne mov call test jne jmp mov movl movl push pop imul cmpl je push pop imul pushl mov call jmp jmp mov mov pop ret push mov push mov push mov movl call mov mov push test jne call pop xor jmp mov push push call mov add mov mov mov mov mov mov mov mov mov xor inc mov mov pop pop pop ret push mov mov push call pop pop ret push mov mov push call pop pop ret push mov mov push call pop pop ret push mov mov cmpl jne movl mov push mov call pop pop ret push mov push mov mov test je mov push call pop andl pop pop ret push mov mov push call pop pop ret push mov mov test je mov test je push push call mov mov mov mov mov mov inc inc dec jne mov push pop pop add pop pop jmp pop ret push mov mov push call pop pop ret push mov push mov lea andl push push push push pushl mov push push mov call mov test jne test jne xor jmp andl push call mov pop test je lea mov push push pushl pushl push call test jne cmp jne pushl call pop jmp xor inc pop pop mov pop ret mov call test jne ret movl ret push mov push push push mov mov call push mov call cmp jb push call xor jmp push call mov test jne push call xor jmp mov mov mov mov mov mov mov mov lea push mov call push call mov pop pop pop mov pop ret push mov call mov test jne pop ret push mov xor mov mov inc cmp jl mov pop pop ret push mov push push mov lea push call mov lea mov cmp jae xor jmp mov push mov push pop push mov add mov mov add mov mov add mov mov add mov mov add mov mov add mov mov add mov mov mov call add push mov call add lea push mov call mov add mov mov xor inc pop pop pop pop ret push push mov call mov test jne jmp mov push pop add mov lea mov add mov mov add mov mov add mov mov add mov mov add mov add mov mov mov mov movzwl lea push call add mov pop pop ret push push push mov push pop call mov test je xor movl call mov test jne push call pop xor pop pop pop ret mov mov jmp push mov push push pushl pushl pushl call add pop ret push mov push push push mov push pop mov call mov test je mov mov pushl mov mov mov push mov call mov mov push push push mov call add test jne mov test je mov push call pop mov call xor pop pop pop pop ret xor inc jmp push mov mov xor push push pushl inc call add pop ret push mov pushl mov xor inc push pushl call add pop ret push mov pushl mov xor push push call add pop ret push mov and sub push push mov mov push lea mov call lea push lea push mov call pop pop test je mov mov test mov je cmp jne cmpl je cmp jne mov test je mov push call pop mov call lea push mov call pop lea push lea push mov call mov pop pop test jne pop pop pop mov pop ret push mov mov xor push push push xor call add pop ret push mov push mov cmpl je push call mov pop push mov call pop mov pop pop jmp push pop call test jne ret movl ret push pop call test jne ret movl ret push mov mov pushl push call pop pop pop ret push mov push push push mov mov push pop call mov test je mov movl call mov test je lea push call mov mov mov mov call mov mov call mov mov test je test je mov mov mov mov mov mov mov xor inc jmp push call pop xor pop pop pop pop ret push mov mov mov push mov call pop pop ret push mov push push mov mov test je mov push call pop test je xor inc jmp xor mov mov push mov cmp mov cmova cmp cmova push push call pop pop pop test je test jne mov test je mov push call pop test je mov push mov call pop xor inc pop pop pop ret push mov mov test je mov push call or pop jne mov push mov call pop mov test je mov push call or pop jne mov push mov call pop pop ret push mov mov mov push mov mov test je cmp ja jb cmp ja mov test je cmp jb ja cmp jbe xor jmp mov mov call xor inc pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov push mov call pop lea push call mov pop pop jmp push mov and sub mov lea push push xor mov push mov call lea push lea push mov call mov mov jmp cmp ja jb cmp ja mov lea push lea push mov call pop test mov pop jne push push pushl pushl push push pushl call add pop pop pop mov pop ret push mov mov test je mov cmp jb ja mov cmp jb mov cmp ja jb mov cmp ja xor inc pop ret xor pop ret push mov push push mov mov push mov mov mov mov mov push mov call mov push push mov call add pop pop pop ret push mov push push mov mov push push xor mov push push mov call mov pop pop test je mov pushl mov mov mov mov mov mov mov mov push push mov call add test jne mov push push mov call pop pop jmp xor inc mov pop pop pop mov pop ret push mov sub pushl pushl pushl pushl pushl mov mov call add test je xor inc jmp cmpl je cmpl je mov mov mov mov cmp jb ja mov mov cmp jb mov mov mov mov cmp jb ja mov mov cmp jb pushl mov mov call pop xor inc jmp cmpl je mov mov mov mov cmp jb ja mov mov cmp jb mov mov mov mov mov xor inc jmp cmpl je mov mov mov mov cmp jb ja mov mov cmp jb mov mov mov mov mov xor inc jmp pushl pushl pushl pushl mov mov call add mov pop ret push mov mov mov push mov call mov pop test jne pop ret mov mov mov mov mov mov mov mov mov mov xor inc pop ret push mov push mov mov push mov call mov push mov call pop pop mov pop pop jmp push push push mov mov push pop call mov test je mov movl call mov test jne mov call xor pop pop pop ret mov mov mov jmp push mov push push push push mov mov call mov test je mov mov mov push push mov call pop pop test jne mov push call pop xor pop pop pop mov pop ret mov mov push mov call xor mov pop inc jmp push mov mov mov push mov call pop pop ret push mov mov mov sub pop ret push mov mov cmpl je mov sub pop ret mov push call pop pop ret push mov mov mov mov pop ret push mov mov mov mov pop ret push mov mov mov mov pop ret push mov push mov push pushl mov push pushl mov push call mov push pushl push push call add pop pop pop ret push mov mov mov test je mov mov mov mov pushl mov pushl pushl pushl push call add pop ret push mov mov mov push push mov pushl mov pushl sub mov push push call add pop pop ret push mov pushl pushl pushl call add test je mov xor add adc add adc push push pushl call add test je xor inc pop ret xor pop ret push mov mov mov test je mov mov mov mov pushl mov pushl pushl pushl push call add pop ret push mov push mov mov push pushl mov pushl push sub push mov call add test je mov push push mov call mov sub push pushl pushl pushl call mov add test je mov xor mov add adc cmp jb ja cmp jbe sub xor add cmp sbb and mov push push push push call add mov pop pop pop pop ret push mov mov mov cltd add adc cmp ja jb cmp jae xor inc pop ret xor pop ret push mov push mov push cltd push mov mov push mov mov cltd add mov mov adc add mov adc cltd add mov adc xor mov push mov cmp je pushl push call add add adc jmp pushl push call mov add add mov adc pop pop pop mov pop ret push mov mov cmpl je mov mov mov mov pop ret push mov push push mov mov sub mov sbb mov jne xor cmp jbe xor inc mov pop ret push mov mov mov cmp ja mov jb cmp ja sub mov push push push push call add pop ret push mov push mov mov push mov call pop mov pop pop jmp push push mov push pop call mov test je inc movl mov call mov test jne mov call xor pop pop ret andl mov andl mov jmp push mov mov andl andl pop ret push mov mov mov pop ret push mov push mov mov mov cmp jl sub jmp mov push call pop mov sub add pop pop ret push mov push push mov push mov call or sub mov push call pop pop pop add pop pop ret push mov mov push pushl mov pushl push call add pop ret push mov mov mov push push mov push mov push push push call lea mov mov xor test cmovg mov push push call add mov pop pop pop pop ret push mov push push mov push push push push mov mov call mov mov mov pop mov cmp jne lea mov test jle mov push mov call pop cmp jle xor jmp test jne lea test js jle cmp jbe jmp mov sub je dec jne mov mov jmp mov mov add jns add xor div test je mov sub cmp mov cmova add mov push test je call add jmp push push call mov add cmp ja cmp jbe mov lea sub neg push sbb and je call add jmp push push call add xor inc pop pop pop mov pop ret push mov push mov push mov call pop mov xor mov add div mov pop pop ret push mov push andl lea push mov push pushl mov pushl push call pushl mov pushl push call add pop mov pop ret push mov push mov push push mov call mov pop cmp jbe mov push call pop mov test je push lea xor push push mov call add mov push call pop mov xor mov add div mov mov test je mov pop pop pop ret push mov pushl mov pushl pushl mov push push call add pop ret push mov push push mov push push mov call mov mov pop lea cmp jbe mov push call pop cmp jb mov andl jmp mov push call mov pop sub mov push call mov xor mov add div pop mov test je mov sub cmp mov cmova add mov push call add cmp ja cmp jbe mov mov sub add push call add mov test je mov pop pop pop pop ret push mov push mov push mov cmp jne xor inc jmp mov push call pop cmp jae lea call mov test je push mov lea push push call pop push pushl push call mov push call add pop cmp je mov call xor pop pop pop ret mov call mov andl mov mov mov mov jmp push mov sub push mov push push push mov call mov mov push mov call pop pop cmp jae xor jmp mov lea push push lea push push call pushl mov lea push push call add test je mov push call pop test jne xor inc pop pop pop mov pop ret push mov push mov mov call mov pop pop jmp push push pop call mov test je push push push push mov mov call add test jne mov call xor pop ret mov pop ret push mov mov push mov call pop pop ret mov test jne push call mov test jne ret push push call jmp push mov mov test je xor push pushl pushl pushl push push push push push call call pop ret mov test jne ret push push push call call ret push mov mov test je push pushl push push push push call call pop ret push mov mov test je push pushl push push push push call call pop ret push mov mov test je push pushl pushl push push push push push call call pop ret push mov sub push push push xor mov mov lea xor mov stos xorps xor mov movdqu mov inc stos mov stos stos stos mov call test jne push pop jmp mov test je lea push push push call call test je xor inc cmp je mov mov movl mov test je mov mov movl jmp mov jmp mov xor movl inc mov mov or test je mov test jne mov jmp push push push push push push push call call mov test jne mov or mov jmp mov test jne mov jmp lea push lea push mov pushl push push push call call mov mov call xor inc cmp jne test je mov xor test setne jmp mov test je mov mov jmp mov test je mov mov call test jne or mov jmp mov call mov test push mov pop cmove mov mov test je push call cmpl je pushl call mov test je push call mov test je push call cmpl je pushl call mov pop pop pop mov pop ret push mov xor push push push mov pop mov cmp je cmp je add cmp jne push call push mov mov call pop test jne push pop mov call test je push pop cmp jne add xor mov cmp jne jmp xor mov mov jmp xor push mov call lea pop pop pop ret push mov sub push push mov movl xor mov stos stos stos stos lea push movl call test je cmpl jne cmpl jne cmpl jne push jmp push call mov test je push push call test je call mov test je xor inc mov jmp push call pop xor pop pop mov pop ret push mov push mov lea push pushl mov call test je xor jmp mov pushl call xor inc pop pop ret push mov push mov lea push pushl mov call test je xor jmp mov mov push push mov call push pop call mov test je mov call mov test jne push call pop xor mov pop pop pop ret mov movl jmp push mov mov pushl call pop ret push mov push mov mov test je call mov pop pop jmp push mov sub push push xor push push mov lea push call xor push push mov lea push call mov add mov mov call mov test je mov push push pop call pushl test je mov lea push call push pop lea call xor mov add push lea push call jmp lea push call mov lea push mov call mov mov push mov call mov lea push mov call mov xor push pop mov lea push lea mov push push push lea push push push pushl push call pop test jne push push xor mov call pop pop test je mov jmp mov push call pop xor pop pop mov pop ret push mov push push mov push push mov mov call mov test je mov lea push xor lea push push push push push push pushl push call test jne push push xor mov call pop pop test je mov jmp mov push call pop xor pop pop mov pop ret push push push mov mov push pop call mov test je movl mov push push call mov pop pop test jne mov call xor pop pop pop ret mov mov jmp push mov mov mov mov mov mov mov mov mov mov xor inc pop ret push mov mov mov push pushl call pop pop pop ret push mov sub mov push push xor mov mov push mov cmp je lea mov mov lea mov lea movl mov movl mov mov movl mov mov mov mov lea mov mov movl mov mov lea push lea push lea push lea push push push push push push push push lea push call test js mov cmp je cmp jne mov lea push lea push mov call test js cmp je cmp je xor inc mov xor mov inc mov mov jmp xor pop pop pop mov pop ret push mov push mov mov test je push call pop mov pop pop jmp push mov push mov mov test je mov push call pop mov mov push mov call pop pop pop ret push mov mov push mov mov test jne mov call mov pop pop jmp push mov and sub push mov push testb je lea push push call test jne push pop push movl mov call push mov xor push push mov call mov cmp je push lea push push call cmp jne cmpl je pushl call orl cmpl je call andl jmp orl pop pop mov pop ret push mov push mov push mov call pop pop jmp mov push call mov push push mov call add test jne pop ret push mov push mov mov call cmpl je pushl call orl cmpl je call andl mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop pop jmp push mov sub push push push movl call mov mov test je mov lea push lea push push call add test je mov mov push mov call mov pop lea cmp jb mov mov lea push push mov push call mov lea pushl push mov push call mov push call add push call xor inc jmp mov push call pop push call xor pop pop pop mov pop ret push mov push mov mov test je mov push call pop mov pop pop jmp push mov mov push mov call xor pop inc pop ret push push push mov mov call mov test je movl movl mov movl movl call mov call mov call xor mov cmp je cmp je test je push mov mov call mov pop test je push mov mov call mov pop test je mov push push push mov call mov push push push mov call mov push push push mov call orl lea push push push mov mov mov mov mov mov call add mov jmp push call pop xor pop pop pop ret push mov push mov mov add push call mov lea push pushl pushl push call mov add mov test je mov mov push push call mov pop pop add push call pop pop ret push mov push mov push push mov mov push add xor push call mov mov add push call mov push mov call mov mov push call cmp pop cmova mov cmp pop cmova mov test je mov test je mov call mov test je mov lea push pushl push push call mov pushl push mov push call add test je pushl mov push call pop pop test je mov mov mov mov mov add push call mov add push call test je mov call pop pop pop mov pop ret push mov push push mov mov add push call mov push call pop xor cmp mov sbb add push neg call pop mov pop pop ret push push mov mov push call pop test je test jne cmp je mov mov push mov call pop cmp jbe mov push mov call pop test jne mov pushl push mov call pop jmp mov push mov call pop pop pop ret push mov push mov mov add push call push call pop test je mov push mov call pop mov add push call pop pop ret push mov sub push push mov xor push mov mov add push call mov test je mov cmp jne mov cmp je mov sub mov sbb push mov pop jne cmp ja mov sub mov lea cmp push cmova mov push pushl mov push call add test je mov mov mov add push call pop pop pop mov pop ret push mov push push mov xor push mov add push call mov push call mov pop cmp jb lea push push pushl push call add cmp sete test jne mov push call jmp cmp je mov push call pop mov add push call pop pop mov pop pop ret push mov push push push mov mov cmpl je push mov call mov test je mov lea push push push push call add lea push push push push pushl call mov call pop pop pop mov pop ret push mov push push mov mov add push call xor cmp jne mov cmp je push mov mov mov call mov push push mov push mov call mov add add adc mov pop cmp jb ja mov cmp jb mov push call pop mov push call pop test jne mov mov test je mov push call pop test je mov push call pop mov mov test je mov push call pop push call pop test je mov push mov call pop mov add push call pop pop pop ret push mov push mov push xor mov add push call mov push call pop cmp jb inc jmp cmp je mov push call pop mov add push call mov pop pop pop ret push mov push mov push xor mov add push call cmp jne mov cmp je mov push push call or pop cmp ja cmp ja mov push call pop mov mov mov push mov call mov cmp pop cmova pop mov add push call mov pop pop pop ret push mov push push push push mov xorps push movlpd mov add push call cmpl jne mov mov sub mov sbb jmp mov mov mov add push call mov mov pop pop pop mov pop ret push mov mov mov pop ret push mov push push mov mov add push call mov push mov call pop mov mov add push call pop mov pop pop ret push mov push push mov mov add push call mov mov mov mov push mov call pop mov mov add push call pop mov pop pop ret push mov push push mov mov add push call mov pushl pushl mov push call mov add add mov push call pop mov pop pop ret push mov push mov mov add push call mov mov test je mov push call pop mov add push call pop pop ret push mov push mov mov add push call cmpl jne mov movl mov test je mov push call pop mov add push call pop pop ret push mov push mov mov add push call cmpl jne mov movl push mov call mov push mov call push call add mov add push call pop pop ret push mov sub push push push lea xor pop mov mov mov push mov xor mov mov mov inc mov lea imul xor divl mov add imul add inc cmp jb mov mov add mov add mov mov cmp jb pop test jne or jmp mov xor div mov pop pop mov pop ret push mov push mov mov push call andl lea push push push mov call mov add cmp je mov mov push push call pop jmp andl mov push call pop pop pop pop ret push push push mov mov call xor xor mov inc cmp jne mov mov mov cmp jne mov sub cmp jbe mov jmp add mov mov cmp jb inc cmp jb sub cmp jb inc cmp jb lea incl pop pop pop ret push mov push mov mov push mov call pop test jne and push push lea push call mov push push mov call add mov mov call mov xor pop pop jmp push mov push mov mov movl push mov call mov push mov call pop pop pop pop ret push mov push mov mov cmp je push call xor push push push push push push pushl call xor mov cmp pop setne mov pop ret push mov mov test je add push call mov push call mov pop andl mov cmpl jne add push call mov push mov call andl pop pop ret push mov mov cmp je push call mov test je mov push call pop mov test je mov push call pop mov pop test je mov push call pop ret push mov mov test je mov push call pop mov test je mov push call pop mov pop test je add push call ret push mov mov call mov call mov call mov pop jmp push push mov push pop call mov test je movl call mov call mov mov test je test je mov push push push call mov push push push mov call movl xor mov add movl movl orl mov mov mov mov mov jmp mov push call pop xor pop pop ret push mov push push push push mov mov xor mov add push call cmp jne mov mov push mov mov add adc cmp ja jb cmp ja cmp je mov push call pop lea cmp jae mov push call mov inc add push push call add test je mov jmp cmp jne movl mov push pushl mov push mov call add test je cmpl je push lea push push pushl pushl call add mov adc push mov push mov call mov pop pop mov cmp jb ja mov cmp jb mov push call pop mov push call pop test je mov push mov call pop xor inc pop mov add push call pop mov pop mov pop ret push mov mov mov push pushl call pop pop pop ret push mov mov mov push pushl call pop pop pop ret push mov push push mov mov add push call mov push call pop xor cmp mov sbb add push neg call pop mov pop pop ret push mov push push mov mov add push call mov test je mov push call pop mov test je mov push call pop mov add mov push call pop pop pop ret push mov push mov push xor mov add push call cmp jne mov push push call or pop cmp ja cmp ja mov push call pop mov mov mov push mov call mov cmp pop cmova pop mov add push call mov pop pop pop ret push mov mov push push mov call pop pop pop ret push mov push push push push mov xorps push movlpd mov add push call cmpl jne cmpl je mov mov jmp mov mov sub mov sbb mov add push call mov mov pop pop pop mov pop ret push mov push push mov mov add push call mov push mov call pop mov mov add push call pop mov pop pop ret push mov push push mov mov add push call mov mov mov mov push mov call pop mov mov add push call pop mov pop pop ret push mov push push mov mov add push call mov pushl pushl mov push call mov add add mov push call pop mov pop pop ret push mov push mov mov add push call cmpl jne mov test je mov push call jmp mov push call pop mov add push call pop pop ret push mov push mov cmpl je pushl call xor push push push push push push pushl call xor mov cmp pop setne mov pop ret push mov push mov mov add push call cmpl jne mov movl push mov call mov pop mov test je mov push call pop mov mov test je mov push call pop test jne mov mov push mov call pop mov add push call pop pop ret push mov push mov mov test je add push call mov push call mov pop andl mov cmpl jne add push call mov push mov call andl pop cmpl je pushl call mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je add push call mov pop pop jmp push mov push mov push mov call pop test je mov push mov call pop pop pop ret push mov sub push push mov mov push mov call pop push pop cmp jb mov lea push push push mov push call mov push mov call movzwl add add cmp jb mov push mov call mov push push mov call mov movzwl push push mov lea push push call lea call push push mov call add mov jmp xor pop pop mov pop ret push mov push mov mov push mov call pop cmp jb mov lea push push push mov push call mov push mov call movzwl add add cmp jb mov push mov call pop pop pop ret push mov push mov mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov test je mov push call pop mov pop pop jmp int3 jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp mov jmp push push push push call pop pop jmp mov jmp mov jmp mov jmp mov jmp mov jmp int3 jmp jmp jmp jmp mov push mov sub push mov push push mov movl mov mov add mov add mov add add mov mov add mov mov mov mov mov mov xor testl mov mov mov mov mov mov jne lea mov lea push push push push call xor jmp mov mov sub sar mov mov mov shr not and mov lea jne movzwl mov xor mov test je lea push push call mov test jne mov test jne test je lea push push call mov test jne push push pushl call mov test jne call mov mov test je lea push push call mov test jne lea mov lea push push push push call mov jmp mov mov xchg cmp jne push call mov mov test je lea push push call mov test jne cmp je cmp je mov cmpl jne mov cmp jne cmp jne mov mov mov test jne pushl push call mov test jne call mov mov test je lea push push call mov test jne lea mov lea push push push push call mov mov mov mov test je andl lea push push mov mov call mov pop pop pop mov pop ret jmp jmp mov and je andl mov jmp ret mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp pushl call pop ret lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov add jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov add jmp pushl call pop ret lea jmp lea jmp lea jmp lea jmp lea jmp pushl call pop ret mov and je andl lea jmp ret mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp mov jmp pushl call pop ret mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp jmp mov jmp jmp jmp jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov and mov ret lea jmp mov jmp mov and mov ret lea jmp pushl call pop ret mov jmp mov add jmp mov jmp mov and mov ret lea jmp mov jmp mov jmp jmp mov jmp mov jmp mov and mov ret lea jmp pushl call pop ret mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp pushl call pop ret mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp jmp mov jmp jmp jmp jmp mov jmp jmp mov jmp mov jmp mov jmp mov jmp mov and je andl mov jmp ret mov jmp mov jmp mov jmp lea jmp mov and je andl mov jmp ret mov jmp mov add jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov add jmp lea jmp lea jmp mov jmp mov add jmp mov add jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov and je andl mov jmp ret mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov and je andl mov jmp ret mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp mov and je andl mov jmp ret lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov jmp mov add jmp mov add jmp mov jmp jmp mov jmp jmp jmp jmp mov jmp lea jmp lea jmp lea jmp mov jmp jmp mov add jmp mov jmp mov jmp mov jmp jmp jmp jmp mov jmp mov jmp mov and je andl mov jmp ret mov jmp mov and je andl mov jmp ret mov jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp mov jmp mov and je andl mov jmp ret mov jmp lea jmp lea jmp mov and je andl mov jmp ret lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov and je andl mov jmp ret mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov and mov ret lea jmp mov jmp mov add jmp mov add jmp mov add jmp lea jmp lea jmp mov jmp mov add jmp mov add jmp mov add jmp lea jmp lea jmp mov jmp mov jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov jmp jmp mov jmp mov jmp mov jmp mov jmp lea jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp lea jmp mov jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov add jmp mov jmp mov jmp pushl call pop ret pushl call pop ret pushl call pop ret pushl call pop ret pushl call pop ret mov jmp mov jmp mov add jmp mov add jmp mov add jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp mov jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp mov jmp lea jmp mov jmp mov jmp mov jmp lea jmp mov jmp mov jmp pushl call pop ret mov jmp mov jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp lea jmp lea jmp mov jmp pushl call pop ret mov jmp mov jmp mov jmp mov jmp lea jmp pushl call pop ret lea jmp pushl call pop ret mov jmp lea jmp mov jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov add jmp mov jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov and je andl mov jmp ret mov jmp jmp jmp mov jmp mov jmp pushl call pop ret mov jmp mov jmp jmp mov jmp jmp mov jmp mov jmp mov add jmp mov add jmp lea jmp jmp mov jmp lea jmp mov add jmp mov add jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp mov jmp mov jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov and je andl mov jmp ret mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp lea jmp lea jmp mov jmp mov jmp mov jmp pushl call pop ret pushl call pop ret pushl call pop ret pushl call pop ret pushl call pop ret mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp pushl call pop ret mov jmp mov add jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp mov jmp pushl call pop ret mov jmp mov jmp lea jmp pushl call pop ret mov add jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov jmp mov jmp mov jmp jmp jmp mov jmp pushl call pop ret mov jmp mov jmp jmp mov jmp mov jmp mov add jmp mov jmp mov jmp pushl call pop ret pushl call pop ret mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp lea jmp lea jmp mov and je andl mov jmp ret mov jmp mov jmp lea jmp lea jmp lea jmp mov and je andl mov jmp ret lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov and je andl mov jmp ret mov jmp lea jmp lea jmp lea jmp mov jmp mov and je andl mov jmp ret lea jmp mov jmp jmp jmp mov jmp mov jmp jmp mov jmp mov jmp mov jmp mov jmp mov and je andl mov jmp ret mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov jmp mov add jmp lea jmp mov jmp mov jmp mov and je andl mov jmp ret mov jmp mov jmp mov jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp lea jmp mov jmp lea jmp lea jmp mov jmp lea jmp mov jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov add jmp mov jmp mov jmp mov add jmp mov add jmp mov jmp pushl call pop ret mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov jmp mov jmp mov add jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add jmp mov jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov call orl mov movl mov mov pop ret mov call orl mov movl mov mov pop ret mov call orl mov movl mov mov pop ret push call ret push call ret push call ret push call ret mov test je push call ret mov test je push call pop ret mov call push push mov test je mov andl mov test je call orl mov orl mov call push call pop mov pop mov mov pop ret mov test je push call pop ret push call ret int3 int3 int3 mov test je push call pop ret mov jmp mov call orl mov push push call mov mov mov pop ret mov push mov mov call pop ret
 cmp jne ret jmp push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret int3 mov push mov sub mov push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne lea mov mov mov mov mov cmp je jmp lea lea mov lea mov mov mov test je mov call movb test jl jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je mov push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je mov push push mov call jmp mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret push call pop mov mov test jne inc ret andl xor ret mov push mov push xor push push cmp jne cmp jle decl mov push mov jmp xor jmp cmpl jne mov mov mov mov push mov jmp cmp je push call push push push call test jne jmp movl mov push pop test je push call jmp push push movl call pop pop test jne push push call pop mov xor pop cmp jne push push call cmp je push call pop test je pushl push pushl call incl jmp push call push push push call test jne mov cmp je push call pop jmp mov test je mov add jmp mov test je call sub cmp jae push call andl andl pop push push movl call xor inc pop pop pop pop ret push push call mov xor inc mov xor mov mov cmp jne cmp jne mov jmp cmp je cmp jne mov cmp je mov mov pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je mov movl pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmpl jne cmp jne movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov cmp je cmpl jne movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov mov cmp je cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov movl call mov call ret movl ret mov push mov cmpl jne call pop jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov push call push call push call push call leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test jbe mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret push push call andl mov push call pop test je mov sub push push call pop pop test je mov shr not and movl jmp mov mov mov xor cmp sete mov ret mov movl xor call ret mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret mov push mov pushl pushl pushl pushl push push call add pop ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp je test jne mov mov not mov pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea sub push push push mov mov push mov movl mov lea mov ret mov mov pop pop pop pop leave push ret mov ret push mov sub mov push push push mov add mov mov mov cmp je movl lea mov mov mov movzwl test je mov movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne mov mov mov cmp je mov cmp jae mov mov test je lea sub lea movzwl mov test jne mov lea test je cmpw je add cmpw jne xor lea mov mov mov test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne cmp je mov cmp jne xor pop pop pop mov pop ret mov jmp push mov sub push call mov cmpl jne xor inc jmp lea mov call lea push call lea mov mov call lea push call cmpl mov je test je call jmp xor pop mov pop ret push push push call mov mov mov andl andl call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov test je mov mov call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov xor movl inc jmp xor pop pop pop ret push mov sub push mov lea call call lea push call mov mov call pop mov pop ret push mov and sub push push mov mov push test je movzwl mov xor cmp jne mov add mov mov mov xor add cmp jne cmp je mov mov add mov add mov add mov xor mov cmp jbe mov mov mov add movl mov mov mov mov test mov je mov mov mov test jle movzbl mov imul and shl add imul mov xor mov inc dec mov mov mov test jne mov mov mov mov cmp mov je inc add mov cmp jb xor pop pop pop mov pop ret mov mov movzwl mov add cmp jb mov add cmp jae mov xor mov test je xor cmp jne mov inc inc mov test jne test jle mov mov mov mov test jle movzbl lea cmp ja add movzwl mov imul and shl add imul xor inc dec mov cmpb jne mov call mov mov test jne mov mov mov call mov lea push push lea push call test jne lea push lea push push push call neg sbb not and lea push call mov test je inc add mov test je mov mov test jle movzbl mov imul and shl add imul xor inc mov dec mov test jne mov mov mov mov call jmp mov jmp int3 push mov and cmpl jne call push push push push push push call add xor inc mov pop ret push push call xor mov decl jne mov movl mov movl push pushl call test jne call push push push push push push call add jmp xor inc ret mov push xor push push push push call add orl call ret push push call xor mov mov movl movl mov mov mov push push push push push call add push push call mov test jne call push push push push push push call add jmp push push mov call test jne call push push push push push jmp mov xor inc mov mov movl push call push pushl call test jne call push push push push push push call add push push push call push call mov mov test je push push push push push call add push call test je push call jmp xor inc ret mov push xor push push push push call add orl call ret push push call xor mov movl mov mov mov mov mov movl movl movl mov call mov mov call test je mov push push mov push push push call add jmp call mov mov call mov mov push push push test je push push call add push push push call push call mov test jne push push push push jmp push push call cmp jne push push push push push call add mov push call mov mov lea push call jmp push push call add push push push push push call add mov test je push call jmp xor inc ret mov push xor push push push push call add orl xor call ret push mov push push xor push mov mov test je cmp je cmp jne imul imul not not jmp imul imul jmp imul imul mov and cmp jae lea jmp push pop sub mov movzwl and mov cmp jae lea jmp push pop sub movzwl mov add shr shr cmp jl push xor mov pop push mov pop push mov pop pop pop mov mov mov mov xor pop pop ret push mov push andl push mov cmpl je push lea push pushl push pushl call test jne pushl call orl pop mov pop ret push mov push push mov mov push mov mov push lea call push mov mov call pop pop pop pop pop pop ret push push pop push mov pop push pop push mov pop push pop mov xor mov mov mov mov mov mov mov pop ret push mov sub push mov lea call mov push call lea mov lea call pop test je push push xor lea push push call mov call test jne cmp je cmp jne xor inc mov pop pop mov pop ret push mov push movzbl cmpl je call mov cmp jae andl jmp sub cmp jb mov call test je andl xor inc jmp call mov xor pop pop ret push mov sub push push lea movl push lea mov push mov call test je mov mov push lea test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne movzbl lea sub push push mov call xor add cmp setne mov pop pop pop mov pop ret push mov sub push push mov or lea call push call lea mov lea call test jne or jmp xor push mov push lea push call test jne call cmp jne push call jmp push push push push push push lea push call mov cmp jne inc cmp jb mov pop pop pop mov pop ret push push call xor mov or mov mov mov mov xor mov xor cmpb jbe mov jmp call test je mov call test je mov call mov cmp je lea mov movb push lea lea call movl push lea lea call movb push lea lea call add call mov push lea lea call pop call mov push lea lea call mov xor mov push lea lea call andl push lea lea call mov xor mov push lea lea call mov mov push lea lea call add mov mov xor mov mov mov test jne test je mov and mov je shrd shr inc jmp mov push lea lea call pop mov mov test jne test je mov and mov je mov push lea lea call pop mov dec cmp ja jmp add mov pushl call add push mov jmp add mov mov lea jmp add mov pushl call jmp add mov mov mov mov push lea jmp add mov mov lea push mov lea call pop shrd shr jmp cmpl je pushl call pushl call andl jmp xor inc ret mov orl call ret mov cltd xor add mov xor add in add mov add mov add test jne xor mov ret mov push push mov xor xor mov cmp je sub cmp je add mov xor mov cmp jne pop pop ret push mov push push push mov xor push mov cmp jne mov jmp movzwl push test je mov movl sub mov test je movzwl test je movzwl lea cmp ja lea movzwl jmp mov movzwl mov lea cmp ja lea movzwl jmp mov mov movzwl movzwl sub jne add xor cmp jne jmp xor cmp je add add movzwl test jne xor pop pop pop mov pop ret mov jmp push mov sub push push xor mov inc push push call test je push xor push push push push call test je push lea mov push push push call mov mov test je lea push lea push lea push pushl call test je push pushl push push call movl mov mov mov pop pop pop mov pop ret cmpl je call test jne ret andl mov ret jmp jmp jmp jmp jmp jmp jmp jmp
 push mov push push mov mov mov mov mov add cmp jbe cmp jb test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop jo add pushf adc adc adc adc rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov inc shr inc cmp jb rep jmp lea aas adc adc add and add sbb add adc add or add add add cld adc adc inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov pop adc adc add insb adc adc inc or leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop clc adc adc adc adc add mov and mov dec shr dec cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea xchg adc adc add lods adc adc add les add xlat adc adc inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov lock adc adc adc adc adc add mov pop pop leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je xor mov push mov cmp jb neg and je sub mov inc dec jne mov shl add mov shl add mov and shr je rep test je mov inc dec jne mov pop ret mov ret xor mov sub inc mov inc cmp jb ret push mov push push mov mov mov mov cmpl jbe mov mov mov mov mov inc mov mov inc mov mov dec mov jmp mov pop ret push mov push push push push pop imul push pop imul mov mov mov xor mov push pop shl push pop shl mov mov mov xor mov mov shr and movzbl shl mov shr and movzbl shl or mov shr and movzbl shl or mov and movzbl or mov mov shr and movzbl shl mov shr and movzbl shl or mov shr and movzbl shl or mov and movzbl or mov mov shl mov shr or xor mov mov shl mov shr or xor mov mov shr mov shl or xor mov mov shr mov shl or xor mov push pop imul mov mov xor push pop imul mov mov push pop shl mov mov xor push pop shl mov mov pop mov pop ret push mov sub push push mov add mov push push lea push call add push push pushl call add mov mov cmpl je cmpl je cmpl je jmp mov movl andl jmp mov movl movl jmp push pop jmp andl jmp mov inc mov mov shr cmp jae mov add mov mov mov jmp cmpl jne andl jmp mov inc mov cmpl jae mov movzbl not mov mov jmp andl jmp mov inc mov cmpl jae xor inc imul mov movzbl shl xor inc shl mov movzbl shl or xor inc shl mov movzbl shl or xor inc imul mov movzbl or mov lea push pop imul mov xor inc shl mov movzbl shl xor inc imul mov movzbl shl or xor inc imul mov movzbl shl or xor inc imul mov movzbl or mov lea push pop shl mov jmp push push lea push call add andl jmp mov inc mov cmpl jae mov movzbl shl mov movzbl shl or mov movzbl shl or mov movzbl or mov mov jmp andl jmp mov inc mov cmpl jae mov mov mov xor mov mov jmp lea push push pop imul lea push lea push call add lea push push pop shl lea push lea push call add andl jmp mov inc mov cmpl jae mov mov mov xor mov mov jmp lea push push pop shl lea push lea push call add lea push push pop imul lea push lea push call add cmpl jbe andl jmp mov inc mov cmpl jae mov mov mov xor mov mov jmp lea push push pop shl lea push lea push call add lea push push pop imul lea push lea push call add push pop imul push pop imul mov mov push pop shl push pop shl mov mov push pop shl push pop shl mov mov push pop imul push pop imul mov mov movl jmp mov inc mov cmpl ja mov shl push pop imul lea mov movzbl test je push pop imul imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov push pop shl imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop shl imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop imul imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov jmp andl jmp mov inc mov cmpl jae imul push pop imul lea mov movsbl cmp je imul push pop imul lea mov movsbl mov mov mov mov jmp cmpl jbe push pop shl push pop imul mov mov push pop imul push pop shl mov mov push pop imul push pop shl mov mov push pop imul push pop imul mov mov movl jmp mov inc mov cmpl ja mov shl push pop shl lea mov movzbl test je push pop imul imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov push pop shl imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop shl imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop imul imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov jmp andl jmp mov inc mov cmpl jae imul push pop shl lea mov movsbl cmp je imul push pop shl lea mov movsbl mov mov mov mov jmp push pop shl push pop imul mov mov push pop imul push pop shl mov mov push pop imul push pop shl mov mov push pop imul push pop imul mov mov movl jmp mov inc mov cmpl ja mov shl push pop shl lea mov movzbl test je push pop imul imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov push pop shl imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop shl imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop imul imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov jmp andl jmp mov inc mov cmpl jae imul push pop shl lea mov movsbl cmp je imul push pop shl lea mov movsbl mov mov mov mov jmp cmpl jbe push pop imul push pop imul mov mov push pop imul push pop shl mov mov push pop imul push pop shl mov mov push pop imul push pop imul mov mov movl jmp mov inc mov cmpl ja mov shl push pop imul lea mov movzbl test je push pop imul imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov push pop shl imul xor push pop div mov mov shl push pop shl imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop shl imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop shl mov push pop imul imul xor push pop div mov mov shl push pop imul imul xor push pop div push pop sub mov mov shr xor mov shl lea push pop imul mov jmp andl jmp mov inc mov cmpl jae imul push pop imul lea mov movsbl cmp je imul push pop imul lea mov movsbl mov mov mov mov jmp andl jmp mov inc mov cmpl jae imul mov movsbl cmp je imul mov movsbl imul mov lea mov mov mov mov jmp xor pop pop mov pop ret push mov sub mov mov cmpl je cmpl je cmpl je jmp mov movl andl jmp mov movl movl jmp push pop jmp mov add mov pushl pushl lea push call add mov cmpl je mov jmp mov shl shl lea mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov lea mov mov sub mov jmp mov dec mov mov sub mov cmpl jbe mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov jmp mov sub mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov push push lea push call add xor mov pop ret push mov sub push mov mov mov mov add mov xor inc imul mov movzbl shl xor inc shl mov movzbl shl or xor inc shl mov movzbl shl or xor inc imul mov movzbl or push pop imul mov xor inc shl mov movzbl shl xor inc imul mov movzbl shl or xor inc imul mov movzbl shl or xor inc imul mov movzbl or push pop shl mov xor inc shl mov movzbl shl xor inc imul mov movzbl shl or xor inc imul mov movzbl shl or xor inc imul mov movzbl or push pop shl mov xor inc imul mov movzbl shl xor inc imul mov movzbl shl or xor inc imul mov movzbl shl or xor inc imul mov movzbl or push pop imul mov push pop imul mov mov xor push pop imul mov mov add mov push pop shl mov mov xor push pop shl mov mov add mov push pop shl mov mov xor push pop shl mov mov add mov push pop imul mov mov xor push pop imul mov mov add mov cmpl je mov dec mov lea push pushl lea push call add mov add mov lea push pushl lea push call add mov add mov lea push pushl lea push call add mov add mov lea push pushl lea push call add mov add mov lea push pushl lea push call add mov add mov lea push pushl lea push call add mov add mov cmpl je push pop imul push pop imul mov mov and shl push pop imul push pop imul mov mov and shr or push pop shl xor push pop shl mov push pop shl push pop shl mov mov or push pop imul xor push pop imul mov mov add mov push pop imul push pop shl mov mov or push pop shl xor push pop shl mov push pop shl push pop imul mov mov and shl push pop shl push pop imul mov mov and shr or push pop imul xor push pop imul mov mov add mov jmp push pop shl mov mov xor push pop shl mov mov add mov push pop imul mov mov xor push pop imul mov mov add mov push pop imul mov mov xor push pop imul mov mov add mov push pop shl mov mov xor push pop shl mov mov add mov push pop shl mov shr xor inc imul mov mov push pop shl mov shr xor inc shl mov mov push pop shl mov shr xor inc shl mov mov push pop shl xor inc imul mov mov mov push pop imul mov shr xor inc shl mov mov push pop imul mov shr xor inc imul mov mov push pop imul mov shr xor inc imul mov mov push pop imul xor inc imul mov mov mov push pop imul mov shr xor inc shl mov mov push pop imul mov shr xor inc imul mov mov push pop imul mov shr xor inc imul mov mov push pop imul xor inc imul mov mov mov push pop shl mov shr xor inc imul mov mov push pop shl mov shr xor inc imul mov mov push pop shl mov shr xor inc imul mov mov push pop shl xor inc imul mov mov mov xor pop mov pop ret push mov sub mov xor push pop div test je push pop jmp cmpl jne cmpl jbe push pushl lea push call add pushl pushl pushl pushl call add andl jmp mov inc mov cmpl jge mov add movzbl mov add movzbl xor mov add mov jmp push lea push pushl call add mov add mov mov add mov mov sub mov jmp jmp cmpl jbe andl jmp mov inc mov cmpl jge mov add movzbl mov add movzbl xor mov add mov jmp pushl pushl pushl pushl call add push pushl pushl call add mov add mov mov add mov mov sub mov jmp xor mov pop ret push mov sub cmpl jae xor jmp andl jmp mov inc mov cmpl jae jmp andl jmp mov inc mov cmpl jae mov movzbl mov add movzbl xor mov add mov jmp andl jmp mov inc mov cmpl jae jmp push pushl lea push call add test je xor jmp mov add mov mov sub mov mov mov mov mov mov mov lea call mov xor push pop div test je xor jmp andl jmp mov add mov mov cmp jae mov add push mov add push lea push push push lea push call add test je xor jmp jmp mov mov cmpl je xor jmp mov mov add mov mov mov mov sub mov mov xor inc mov pop ret push mov sub andl andl andl andl andl andl pushl push push lea push call add lea push push pushl call mov cmpl je jmp pushl call lea push lea push pushl call mov cmpl je jmp push pushl call mov cmpl je jmp lea push pushl call mov cmpl je jmp push pushl call mov cmpl jne jmp push push pushl push call mov cmpl jne jmp lea push pushl push pushl call mov cmpl je jmp lea push lea push pushl pushl call add test jne jmp lea push push pushl pushl call test jne jmp call movl cmpl je pushl call cmpl je pushl call cmpl je push push pushl call mov mov pop ret push mov sub movl lea push lea push push pushl call test je xor jmp andl jmp mov inc mov cmpl jge mov movb jmp andl jmp mov inc mov cmpl jge mov movzwl test jne jmp mov mov mov mov jmp xor inc mov pop ret push mov sub push push lea push push push push call pushl call pop test jne mov jmp pushl call mov cmpl jne mov jmp andl jmp mov inc mov cmpl jge pushl pushl call pop pop test jne jmp jmp pushl call mov mov pop ret push mov xor inc pop ret
 adc add and add xor add add add add add inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec push push push push push push push push pop pop pop popa bound gs imul jo jb je jbe js jp xor xor sub add add dec inc inc add add push mov sub push mov lea push push push call push call lea test je push lea push push call lea push push push call lea push pushl push pushl call add lea push pushl push call push pop pop leave ret push mov sub push push push lea mov push push movl mov call lea push push push call lea push lea push call add test je lea push push call lea push push call add lea push push lea push push push call test jne push mov call mov pop lea mov push lea push push push push pushl call test jne lea push push call pop test pop je push jmp lea push lea push push call lea push call mov add lea push push pushl push push pushl call test je xor jmp pushl call push call pop push pop pop pop leave ret push mov sub lea push push call lea push push call add lea push push lea push push push call test je xor leave ret lea push push push push push pushl call test jne push mov push push lea push call push lea push push call lea push push push call lea push push push call lea push lea push lea push push call add lea push call neg sbb pop neg leave ret push mov sub push lea push push call lea push push push call lea push lea push call lea push push call lea push push call add lea push push lea push push push call test jne lea push call pop push lea push push lea push push pushl call test je xor leave ret pushl call push pop leave ret cmpl je jmp jmp push mov push push mov xor cmpl push push jbe mov push pop mov mov inc subl inc mov inc mov mov shr mov and mov and shl shr add mov mov mov shl shr add and cmp mov ja movzbl mov mov mov inc movzbl inc mov mov inc movzbl inc mov mov inc movzbl inc mov mov inc inc cmpl ja jmp mov xor cmp je mov mov mov jbe mov lea mov shr rep mov and rep mov mov and shr mov mov shl shr add mov mov mov and shl shr add lea cmp ja movzbl mov mov inc movzbl mov mov inc cmpl jne movb jmp movzbl mov mov inc movb inc cmp jb or jmp andb pop pop pop leave ret push mov cmpl jne pushl call pushl call pushl call pushl call pushl call movl pop ret push mov push pushl call push call pop push call xor pop ret push mov sub push mov lea push push lea push push pushl call test je push lea pushl push pushl call test jne xor pop leave ret push mov sub mov push xor mov push lea push push push push movl movl mov mov call lea push push push push call push lea pop push push push call mov add mov mov mov mov lea mov push lea push push push push push push push push push movl mov call test jne push pop jmp push pushl call mov mov mov lea push push push push push push call mov lea push push push push push push call mov cmp je push lea push push pushl call cmp je cmp je lea push push push lea push pushl call test jne push call push pushl call push pushl call pushl call pushl call push pushl call push pushl call pushl call pushl call pushl call push call xor pop pop leave ret push mov sub push push push lea push push call add push push push call cmp mov jne xor push mov lea push call cmp pop pop jne pushl mov lea sub mov rep call add jmp mov movw push call mov lea push push pushl xor mov call cmp jne mov push jmp pushl push call pop pop push pushl call cmp je push push pushl call mov xor cmp sete xor cmp sete or jne lea push push push push push push call cmp jne jmp mov pushl call push call pop xor pop leave ret push mov pushl push push call xor add cmp je push jmp mov movl mov mov mov mov mov lea push push push push push push call mov push pop pop ret push xor cmp jne xor pop ret pushl mov call push pushl call push pushl call cmp je push push call pop pop push pop pop ret mov ret mov ret lea push push push call add cmpl je lea push push push call add push pop ret push mov sub push push push push lea push push call lea push push call xor add cmp jne pushl mov lea sub mov rep call add push push push call or mov cmp jne mov push jmp mov movw push call mov mov push call cmp push jne call pop push call mov lea push push pushl call cmp jne pushl lea mov push push push call add jmp push push push push push mov push push call cmp mov jne push lea push push mov call add cmp jne pushl mov lea sub mov rep call add pushl call jmp lea push push call cmp mov jne pushl mov call pushl call push lea jmp push push push lea push push call add lea push push call pop push lea push pushl call push lea push push call add mov mov cmp je lea push push push pushl call cmpb je incl jmp lea push call push lea push push call add test je pushl mov call pushl call lea push lea push push call add cmp je push call lea push push call pop lea push call pop pop cmp jne pushl mov lea sub mov rep call add push pop jmp push lea push push call add xor cmp je lea push push lea push push pushl call test je push lea pushl push pushl call cmp je cmp je add cmp jb push call pushl call pushl call cmp mov jae pushl call pop push pushl push push call pop push lea push push call add jmp pushl lea push push push call add cmp je push call lea push push call pop lea push call pop pop cmp jne pushl mov lea sub mov rep call add xor pop pop pop leave ret push mov push xor cmp je push pop jmp mov pushl mov mov push mov call pushl push call pushl push call pushl push call mov add mov mov mov lea push push push push push push movl call mov pop pop ret xor cmp jne push pop ret push mov pushl call ret mov ret mov ret push mov sub push mov lea push push lea push push pushl call test je push lea pushl push pushl call test jne xor pop leave ret push mov sub mov push xor mov push lea push push push push movl movl mov mov call lea push push push push call push lea pop push push push call mov add mov mov mov mov lea mov push lea push push push push push push push push push movl mov call test jne push pop jmp push pushl call mov mov mov lea push push push push push push call mov lea push push push push push push call mov cmp je push lea push push pushl call cmp je cmp je lea push push push lea push pushl call test jne push mov call push call pop push pushl call push pushl call pushl call pushl call push pushl call push pushl call pushl call pushl call pushl call push call xor pop pop leave ret push mov sub push push push lea xor push push mov call pop pop push push push call cmp mov jne lea push push mov call cmp pop pop jne pushl mov lea sub mov rep call add push jmp mov movw push call mov mov push call cmp push jne call pop push call mov lea push push pushl call cmp jne pushl mov call lea push push call cmp pop pop jne pushl mov lea sub mov rep call add push jmp push lea push push call add lea push push call pop push lea push pushl call mov cmp je lea push push push pushl call cmpb je incl jmp push lea push push call add test je lea mov push lea push push call add cmp jne pushl mov lea sub mov rep call add push jmp lea push push call pop lea pop push push call pop push lea push pushl call push lea push push pushl call cmp jne lea push push mov call cmp pop pop jne pushl mov lea sub mov rep call add push jmp lea push call push lea push push call lea push push push call add cmp je lea push push push call add jmp lea push lea push call pop test pop je lea push push mov call pop lea pop push push call pop push lea push pushl call lea push push call cmp pop pop jne pushl mov lea sub mov rep call add push pop pushl call mov jmp push lea push push call add cmp jne pushl mov lea sub mov rep call add xor lea push push pushl push push push call cmp mov jne push pop jmp push push call push lea push push call add cmp jne pushl mov lea sub mov rep call add xor pushl call mov xor pop pop pop leave ret push mov push xor cmp je push pop jmp mov push pushl mov mov mov push push mov call pushl push push call pushl push push call mov add mov lea push push push push push push movl call mov pop pop pop ret push cmpl jne push jmp lea push push push push pushl call push pushl call pushl andl call push pop pop ret mov ret mov ret push mov push xor mov mov mov inc inc cmp jne mov pop pop ret mov push mov test je mov mov mov test je cmp jne inc inc cmpb jne cmp je cmpb je inc jmp xor pop ret mov mov test je cmp je inc jmp mov sub neg sbb not and ret push mov cmpl jne xor pop ret decl mov mov je mov test je cmp jne inc inc decl jne movzbl movzbl sub pop ret call mov ret mov imul inc mov shr ret push call movzwl shl call movzwl or pop ret push mov push push cmpl jne movl je mov sub inc cmpb jne mov mov sub mov pop leave ret mov mov mov test je cmp jne mov inc inc test jne movzbl movzbl sub ret push mov push mov test jle mov mov sub mov mov inc dec jne mov pop pop ret push mov push pushl call pushl mov add call push pushl push call mov add pop pop ret push mov pushl call pushl add pushl push call mov add pop ret mov mov push xor mov test je push mov sub mov mov inc inc test jne pop andb pop ret mov test jne push pop ret mov cmp jle dec imul dec jne ret push mov sub push push push xor pushl mov call mov pop cmp jg push lea pushl push call add cmp jle lea mov mov lea cmp jl cmp jg pushl sub mov push call pop pop movsbl imul add inc decl cmp jl mov pop pop pop leave ret xor jmp push mov sub push push xor push push push push push push call cmp mov jne push jmp push push push push push push pushl push call cmp mov jne push jmp push push push push push pushl push push call mov cmp jne push jmp push push push push push call test jne push jmp pushl call push push push push push push pushl call mov cmp jne push pop jmp cmp je lea push lea push push push call addl cmp je mov cmp je lea push push mov push lea push push call test je cmp je jmp mov push call push call pushl call pushl call neg sbb and inc mov pop pop pop leave ret push mov sub push mov push push push call add test jne add push lea push push call add xor movzbl cmpb je inc cmp jb jmp movzbl lea push push pushl call lea push push pushl call add pop leave ret push mov sub push mov push lea push push call push lea push push call lea push lea push pushl call pushl lea push lea push call add cmp pop jne cmpl je push pushl call push pop leave ret push mov sub push push push lea push push call add cmpl je push jmp push lea push call cmpl pop pop jne pushl mov lea sub mov rep call add pushl mov mov push push call push mov shr push push push lea push push call add cmpl jne pushl mov lea sub mov rep call add andl pop xor pop leave ret mov ret mov ret mov ret push mov push xor cmp je push pop jmp mov push pushl mov mov mov push push mov call pushl push push call pushl push push call mov add mov lea push push push push push push movl call mov pop pop pop ret cmpl jne push pop ret andl push pop ret push mov push push push pushl call xor push push push push push push pushl call mov cmp jne xor jmp push lea push mov push push push push call test je cmp jne push pop push call mov pop pop pop leave ret push push xor push push push call cmp mov jne push pop jmp push push push push push push push mov push mov pushl push push push push push push push call mov cmp je cmp jne push push pushl call mov cmp jne push pop jmp push push push call test je push pop push call pushl call pop pop mov pop pop pop ret push mov sub push push lea push push call pop xor pop lea push push push push push push push call mov cmp je lea push push push push push push call push push call test jne xor jmp push call push pop pop pop leave ret push push mov xor cmp je push push pop lea push push push call push lea push push call push lea push push call push lea push push call push lea push push call push add push push call add pop pop pop ret mov push cmpb lea jne cmpb jne xor pop ret push call cmp pop jne andb movb jmp push call sub pop js cmpb je dec jns mov sub add push push push call add push pop pop ret push mov push push push call mov mov add mov movb push add push push call add push pop pop ret push mov sub push mov push mov push lea mov cmp jne cmp jne push call pop jmp cmp jne push push call pop pop jmp lea push push call push call add cmp lea push push jne push jmp push push call add lea push push call lea push call add cmp jge push pop jmp lea push lea push call cmp je testb jne push call pop xor pop pop pop leave ret push mov sub push mov lea push lea push call lea push push call add lea push push call add lea push call pop leave ret push mov sub push mov lea push lea push call lea push push call add lea push push call add lea push push call pop leave ret push mov sub push push push mov lea lea push push call mov lea push push call add lea push push call lea push push call lea push push call pushl lea push call add lea push lea push call pop pop pop leave ret push mov sub push mov lea push push lea push call lea push push call lea push lea push call add xor lea push push push push push push push call cmp mov jne lea push push call pop lea pop push push call pop push lea push pushl call jmp push push push call cmp mov jne xor jmp lea push push lea push lea push lea push lea push push call lea push call xor mov lea push call mov add mov movw push call mov lea push call mov lea push pushl call push lea push lea push push call add lea push push call pop push lea push pushl call lea push push pushl call cmp pop jne lea push push call pop lea pop push push call pop push lea push pushl call jmp cmp je lea push push lea push push pushl call test je cmp je push lea pushl push pushl call cmp je cmp jne lea push push call pop lea pop push push call pop push lea push pushl call pushl call push pop pushl call mov pop pop leave ret push mov sub push mov lea push push lea push call lea push push call lea push lea push call add lea push call xor lea push push push push push push push call cmp mov jne lea push push call pop lea pop push push call pop push lea push pushl call jmp push push push call cmp mov jne xor jmp lea push push lea push lea push lea push lea push push call lea push call xor mov lea push call mov add mov movw push call mov lea push call mov lea push lea push push call add lea push push call pop push lea push pushl call lea push push pushl call cmp pop jne lea push push call pop lea pop push push call pop push lea push pushl call jmp cmp je push lea push push pushl call cmp je cmp je lea push push push lea push pushl call test je cmp jne lea push push call pop lea pop push push call pop push lea push pushl call pushl call push pop pushl call mov pop pop leave ret push mov sub push push mov lea movsl movsl movsw movsb xor push push push call cmp mov jne xor jmp mov push lea push lea push lea push lea push lea push push call lea push call xor mov lea push call mov add mov movw push call mov lea push call mov lea push push call pop lea pop push push call pop push lea push pushl call lea push push pushl call cmp jne lea push push call pop pop jmp lea push call cmp pop jne push pop push lea push push call add lea push call cmp jne push lea push push call add lea push push call pop push lea push pushl call inc cmp jle jmp lea push push call lea push push call add lea push lea push call cmp mov je test je mov and neg sbb and add mov lea push lea push call lea push lea push call movzwl push movzwl push lea push push call movzwl push mov movzwl pushl lea push push call lea mov push lea push lea push lea pushl push lea push push call add lea push push call pop push lea push pushl call lea push pushl call test je cmpl je mov and neg sbb and add mov lea push lea push call lea push lea push call movzwl push movzwl push lea push push call movzwl push movzwl pushl lea push push call lea push lea push lea push lea pushl push lea push push call add lea push push call pop push lea push pushl call cmp jne lea push push call pop pop push pop lea push push call pop push lea push pushl call pushl call mov pop pop pop leave ret push mov mov push push push mov push push push lea call mov add mov cmp je mov mov inc inc jmp mov push push push inc call add mov cmp je mov inc inc jmp mov push push push inc call add mov cmp je mov inc inc jmp mov push push push inc call add mov cmp je mov inc inc jmp mov push push push inc call add mov cmp je mov inc inc jmp mov push push push inc call add mov test je mov inc inc jmp push pop pop pop pop pop ret push mov sub mov push xor push cmp push mov je cmp je mov lea push push movb movl mov mov call pop lea pop push push call pop push lea push pushl call lea push push call cmp pop pop je push mov pop push lea push push call push lea push push call push lea push push call add cmp je lea push push push pushl call cmpb je inc cmp je cmp je cmp jne push pop lea push call lea push push call push lea push push call lea push push push call push lea push push call add test jne cmp je push jmp lea push lea push call pop test pop jne lea movl push push jmp lea push push call pop pop push pop mov mov jmp push lea push push call add test jne lea push push call pop movl pop jmp cmp jne push jmp push lea push push call add test jne mov cmp je cmp mov je cmp je movsbl push lea push push call add movb jmp movsbl push push jmp push lea push push call add test je push lea push push call add test je push lea push push call add test jne push jmp push lea push push call add test jne lea push call lea push call pop cmp pop jg lea push lea push lea push lea push lea push lea push lea push call add test je lea push call cmp pop jg lea push call cmp pop jg lea push call cmp pop jg lea push call cmp pop jg lea push call cmp pop jg lea push call cmp pop jg push jmp lea push call movl jmp push lea push push call add test jne lea push call jmp push lea push push call add test jne cmp je lea push lea push call pop test pop je lea push jmp push lea push push call add test jne lea push push call pop test pop lea push je push jmp push jmp push lea push push call add test jne push jmp push lea push push call add test jne lea push call push mov push lea push call add jmp push lea push push call add test jne lea push lea push push call add cmp je lea push call test pop lea push jne push jmp push jmp push lea push push call add test jne lea push lea push call cmp pop pop je lea push call jmp push lea push push call add test jne lea push lea push call cmp pop pop je lea push call jmp push lea push push call add test jne lea push lea push call cmp pop pop je lea push call test pop je push jmp push lea push push call add test jne cmp je lea push lea push push call add lea push call test je push jmp push jmp push lea push push call add test jne push jmp push lea push push call add test jne lea push lea push call push jmp push lea push push call add test jne lea push lea push call pop test pop jne push lea push call pop pop jmp push jmp push jmp lea push push lea push call add lea push push call pop push lea push pushl call cmp jne cmp jne pushl call push mov pop jmp pushl mov call xor pop pop pop leave ret push mov sub push push mov push push lea push push call xor add cmp jne push jmp push push pop push push call cmp mov jne mov push jmp push movw call mov lea push push pushl mov call cmp jne pushl mov call push jmp push pushl call cmp jne pushl mov call push lea push call cmp pop pop jne pushl mov lea sub mov rep call add xor jmp lea push push mov call cmp pop pop jne pushl mov lea sub mov rep call add pushl mov push call cmp pop pop je push push pushl call mov cmp je cmp je lea push push push push push push call cmp jne jmp mov push call pushl call mov mov push pop pop pop pop leave ret push mov push xor cmp je push jmp mov cmp jne xor jmp pushl mov mov mov push mov mov call pop lea pop movl push push push push push push call mov push pop pop pop ret push xor cmp jne push jmp pushl mov call push pushl call cmp je push push call pop pop push pop pop ret mov ret mov ret lea push push push call add cmpl je lea push push push call add push pop ret push mov sub push push push push lea push push call mov add movw push call mov mov push call cmp push jne call pop push call cmp mov jne lea push push call pop xor pop jmp call xor cmp je push lea push push call add push push push call mov cmp je lea push push push call cmp je movl jmp push push call mov pop pop mov push push call pop pop pushl push push push call pop pop pushl lea push pushl push push push call add lea push push call pop push lea push push call pushl call push call cmp jne jmp push call lea push push call pop pop cmp jne cmp je pushl mov lea sub mov rep call add mov xor jmp mov push call push pop pop pop pop leave ret push mov push xor cmp je push pop jmp mov push pushl mov mov mov mov mov push push movl mov call pushl push push call add cmp je pushl push push call add jmp mov xor cmp jle push mov lea push push push push push push call mov inc add cmp jl pop push pop pop pop pop ret cmpl jne push pop ret andl push pop ret mov ret mov ret mov ret push mov push push mov push push push push call mov add test lea jne call pushl mov mov mov call mov mov mov incw call mov shl call or cmpw mov jb movzwl add sub call mov inc dec jne movzwl andw lea push push call pop mov pop mov pop pop pop pop ret push mov andb movb call andw andw mov mov add push call add push push call add pop ret push mov sub push push push push pop push mov call mov movl lea push push call add cmpl je push jmp push push push call or mov cmp jne push call movl jmp xor cmp je lea push push push push pushl call cmp jne push call lea movl push call cmp pop pop jne cmp je pushl mov lea sub mov rep call add xor mov jmp mov movw push call cmp push jne call pop push call cmp mov jne push call movl lea push call xor pop cmp pop jne cmp je pushl mov lea sub mov rep call add mov jmp mov mov cmp jle mov mov cmpl mov je mov xor push push push call add cmp jne movzwl push push call andw pop pop call mov mov push mov incw push call pop mov cmp pop jae lea push push push push jmp pushl pushl push call add cmp jae lea push push push push push pushl call add pushl call cmpl jne push call pop pushl call pop pop xor pop leave ret push mov push xor cmp je push pop jmp mov push pushl mov movl push push call pushl push call mov add xor cmp mov mov jle push mov lea push push pushl push push push call mov inc add cmp jl pop push pop pop pop pop ret cmpl jne push pop ret andl push pop ret mov ret mov ret mov ret push mov push push push push call mov andw mov add test mov jne call mov shl call or mov mov mov incl pop pop ret push mov sub push push push push push call mov cmp je lea push push push push push movl call cmp jne xor jmp mov test jne push jmp push lea push push movw mov call push lea pushl push call add lea push push push lea push push push call cmp jne push jmp push call push pop pop pop leave ret sub push push push mov push push call push mov call push mov call push mov call push mov call push mov call push mov call mov push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push mov pushl call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push mov pushl call push mov pushl call push mov pushl call push mov pushl call push mov pushl call push mov pushl call push mov pushl call push mov pushl call push mov pushl call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call mov push push call push push mov call push push mov call push push mov call push push mov call push mov pushl call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call mov push push call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push mov push call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call mov push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call mov push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call mov push push call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push mov pushl call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push mov call push push call push push call push push call push push call add push pop pop pop pop pop add ret pushl push call push call ret pushl push call push call ret push mov pushl call test jne pop ret movswl mov push pushl lea push call add pushl call pop ret push mov test jne or pop ret push push call pop test pop je push push push push call pop pop push call add push push call pop test pop je push push push push call pop pop push call add xor pop ret push mov push push mov push xor cmp je mov cmp je cmp jne lea push push call pop test pop je lea push push call jmp jle pushl push call pop test pop je pushl push call inc inc cmp pop pop mov jl push push push call lea push push call add test je cmpb jne pushl push call sub push push push call add jmp push call push push push call add push pop jmp xor pop pop pop pop ret push push pushl pushl pushl call add ret push mov push push andl push push mov push mov push push call test jne push call mov jmp mov push push push call mov add mov test je movswl push push lea push call add pushl call push push push call imul pop add push call mov add incl mov mov jmp push call andb pop mov pop pop pop leave ret push mov sub push push push xor pop lea movl push rep push call mov cmp je lea push push call test je pushl lea push call pop test pop je lea push push call jmp mov jmp xor pop pop leave ret push mov sub push push push xor pop lea push mov movl push rep push call add push push call mov cmp jne xor jmp lea push push call lea push push call lea test je pushl lea push call pop test pop jne pushl call pop push lea push pushl call pop push push push call pop add push call add jmp lea push push push call pop add push call add lea push push call test jne push call andb pop mov pop pop leave ret rdtsc ret push push mov call push mov call call sub xor mov div mov cmp ja push xor pop div push pop pop pop cmp jae push pop cmp jae push pop cmp jae push pop cmp jae push pop cmp jae push pop cmp jae xor sub add ret push mov sub lea push call mov shr leave ret push mov sub lea movl push call cmpl jne cmpl jne cmpl jne push push call pop pop cmpl jne push jmp cmpl jne push jmp cmpl jne push jmp cmpl jne cmpl jne push jmp cmpl jne push jmp cmpl jne push jmp push push call pop pop mov leave ret push push push push call xor mov div mov xor mov mov mov push mov sub mov div mov xor mov div pop mov xor div xor push mov div xor mov push mov div push push push call add mov pop pop pop pop ret push mov sub pushl lea pushl push push call pushl lea push call add leave ret push push mov xor push call pop mov cmp je cmp jl cmp jg sub mov push inc call cmp pop jbe pop pop ret call mov sub movzwl imul cltd mov idiv cltd sub sar add ret push mov xor cmp jle mov push shr mov neg lea mov movzwl add inc inc dec jne pop jmp mov test pop je movzbl add mov and shr add mov shr add not ret push mov sub push push push push pop xor lea movl rep xor push push call mov cmp je lea push push call test je pushl lea push call pop test pop jne pushl push push call mov cmp je push push call test push je call lea push push call test je jmp call xor jmp push pop pop pop pop leave ret push push pushl xor push push call mov cmp jne xor jmp push push call test je push pop push call mov pop pop ret push mov sub push push push mov push push call add push pop push lea push push call add lea push call cmp jne lea push lea push lea push lea push lea push call mov imul mov imul imul shr shr push push pushl call pop push lea push pushl call pop push push push call pop add push call add inc cmp jle push call pop pop mov dec dec andb mov pop leave ret push push mov push call pop mov test jle cmpb je dec jmp push call inc push push pushl call push call sub push lea push pushl call add pop pop ret push mov push push lea push push pushl call cmpb je cmp jne leave ret push mov push push lea push push pushl call cmp je test je mov cmp jne leave ret mov push push pop cmpb je mov mov xor inc mov jmp pop ret push mov push push mov push xor andb call test pop jl mov push xor inc mov call cmp pop jle add call mov andb pop pop pop ret push mov sub lea push push call push call test je lea push push push call test je mov push mov mov mov push lea push push push pushl movl movl call test jne call leave ret pushl call push pop leave ret push mov sub push push push mov pop lea rep movsw movsb push mov pop lea rep pushl lea movsw push movsb call pop pop pop test pop je lea push sub pop add cltd idiv mov leave ret pushl lea push call pop test pop je lea push sub pop add cltd idiv mov leave ret mov leave ret push mov push mov mov test je push inc call mov mov inc pop test jne andb pop pop ret push mov sub mov push xor push mov mov push mov mov push push push push call cmp mov jne xor jmp lea push push push pushl call push call test je push push pushl mov push call push push pushl pushl push call test mov je lea push push pushl push push call lea mov push pushl pushl pushl push call neg sbb neg pop pop pop leave ret push mov push xor pushl push push call cmp mov je push call test pop je lea push push push pushl push push pushl call test je push pop jmp xor pop pop ret push mov sub push lea push push call lea push push pushl call lea push call push pushl call add leave ret mov andl andl movl movl movl movl ret push mov push push mov push mov mov mov mov shr lea and shl cmp mov jae incl push mov pop shr add sub cmp jb push lea pushl push call lea push push call add mov add cmp jae mov lea push push call addl pop pop add jmp xor jmp andl mov mov sub add push lea push push call add pop pop pop pop ret push mov push push push push mov push lea lea push push call mov add shr push and pop cmp jb push pop sub push push push call lea push push push call push push pushl call push push push call add pop pop leave ret push mov sub push push mov push push mov pushl mov mov mov mov mov lea push mov call mov mov not and and mov or mov add lea mov shr shl or add mov and not and or mov add lea mov shr shl or add mov not and mov and or add lea mov mov shr shl or add mov and not and mov or mov add lea mov shl shr or add mov and not and or add lea mov shr shl or mov add mov and not and or add lea mov shr shl or add mov mov and mov not and or mov add lea mov shr shl or add mov and not and or mov add lea mov shl shr or add mov and not and mov or mov add lea mov shr shl or add mov and not and or add lea mov shr shl or add mov mov not and and or add lea mov shr shl or mov add mov and not and mov or mov add lea mov shl shr or add mov and not and or add lea mov shr shl or mov add mov and not and or add lea mov shr shl or mov add mov mov notl and and mov or mov add lea mov shr shl or add mov and notl mov and or mov add and lea mov shl shr or mov add and or mov add lea mov shr shl or mov and add mov mov and mov mov mov or add lea mov shr shl or mov add not and mov and or add lea mov shr shl or mov add mov and not and mov or add lea mov mov shl shr or mov add not and and or mov add lea mov shr shl or mov add mov mov and not and or add lea mov shr shl or mov add not and mov and or add lea mov shr shl or mov add mov and not and or mov add lea mov shl shr or mov add not and and or mov add mov lea mov shr shl or mov not add and mov and or add lea mov shr shl or mov add mov and not and or add lea mov shr shl or mov add not mov and and or mov add lea mov shl shr or mov add mov mov not and and or add lea mov shr shl or mov add mov mov and mov not and or mov add not and lea mov shr shl or add mov and or add lea mov shr shl or mov add not mov and and or mov add lea mov shl shr or mov add xor xor add lea mov shr shl or mov add xor xor add lea mov shr shl or add mov xor xor add lea mov shr shl or add mov mov xor mov xor add lea mov shl shr or add xor add lea mov shr shl or mov mov add xor xor add lea mov shr shl or add mov mov xor xor add lea mov shr shl or add xor mov xor add lea mov shl shr or mov add xor add lea mov shr shl or mov add xor xor add lea mov shr shl or add mov mov xor xor add lea mov shr shl or add xor mov xor add lea mov shl shr or mov add xor add lea mov shr shl or mov add xor xor add lea mov shr shl or add mov xor xor add lea mov shr shl or mov add xor xor add lea mov shl shr or mov add not or xor add lea mov shr shl or mov add not or xor add lea mov shr shl or mov add not or xor add lea mov shr shl or mov add not or xor add lea mov shr shl or mov not add or xor add lea mov shl shr or mov not add or xor add lea mov shl shr or mov add not or xor add lea mov shr shl or mov add not or xor add lea mov shl shr or mov add not or xor add lea mov shr shl or mov add not or xor add lea mov shr shl or mov add not or xor push add push lea mov shr shl or mov add not or xor add lea mov shl shr or mov add not or xor add lea mov shr shl or mov add not or add xor add lea mov shr shl or mov add not or add xor add lea mov shr shl or mov add not or add xor add lea mov shl shr or add add lea push call add pop pop pop leave ret cmpl jbe mov mov push or lea sub mov mov mov shr mov mov shr mov mov shr mov add add lea cmp jb pop ret cmpl jbe mov mov push push push lea pop sub movzbl xor mov mov add shl or movzbl shl or mov lea add cmp jb pop pop ret push mov test jbe mov mov sub mov mov inc dec jne pop ret mov test jbe mov push mov mov mov push mov mov shl mov shr rep mov and rep pop pop ret push mov sub push push push push mov push push call mov pushl mov call push pushl pushl call add test jne pushl call pop mov add mov jmp mov mov mov mov test je cmp je lea cmp jae inc mov mov jmp sub mov lea push call mov push call push lea push push call pushl call push lea pushl push call pushl lea pushl push call lea push call push call push lea push push call add lea pushl pushl push call push call push lea push push call lea push lea push call push call add mov test push jle pop cmp jg mov push lea push lea push call add sub jmp lea push push call push call mov add test je test push je lea push jmp push lea push call add sar jne pushl push call pushl pushl push call push push call lea push lea push call add xor lea push call mov pop andl je push call push lea push push call add jmp lea push push lea push call add mov push cltd pop idiv test je pushl lea pushl push call add mov push cltd pop idiv test je push call push lea push push call add cmpl je lea push push lea push call add jmp push call push lea push push call add lea push lea push call inc pop cmp pop jl push call movzbl xor push mov pop or add movzbl shl or push push push mov call movzbl movzbl shl add or movzbl shl or push push pushl call movzbl movzbl shl add or movzbl shl or push push pushl call movzbl movzbl shl add or movzbl shl or push push pushl call movzbl movzbl shl add or movzbl shl or push push pushl call movzbl add add push push pushl call addl mov push push andb lea push call add mov pop pop pop leave ret mov dec js lea mov mov shrl and mov mov inc dec jne ret push mov push push mov cmpl mov movl jne xor leave ret cmpl mov jne mov lea push push push push pushl call test je push jmp lea push lea pushl push push pushl pushl call test je push jmp pushl call push pop leave ret push mov push push cmpl jne pushl call pop mov jmp push pop cmp je cmpl jne movl cmpl push push mov mov mov jne mov lea push push push push pushl call test je cmpl je mov lea push push pushl call test jne push jmp pushl pushl pushl push pushl pushl call test je xor jmp pushl call push pop pop pop leave ret cmpl jne xor ret pushl pushl pushl call add ret cmpl jne push pop ret pushl pushl pushl call add ret cmpl mov jne mov push pushl call neg sbb inc ret push mov sub push push xor push push push push push call mov cmp mov je push push call push push mov call push push mov call cmp mov ja push push call mov jmp xor push call cmp mov jne push jmp mov push mov mov mov mov mov lea push push lea push push push movl movw mov mov mov mov mov mov call cmp mov je push pushl call cmp je cmp je push push push push pushl pushl push push pushl call test je cmp je lea push push push pushl call mov mov mov imul imul mov push shr shl mov push lea add push mov mov push push push pushl mov mov movw mov mov mov movl mov movw mov mov mov mov mov mov mov call cmp mov jne pushl call pushl call pushl jmp lea push push lea push push push call lea push push lea push push pushl call cmp je lea push push lea pushl push pushl call lea push push push pushl pushl call pushl call pushl call pushl call pushl call push call push pop jmp push call pushl call xor pop pop pop leave ret push mov sub orl push push push lea push push call pop xor pop mov push push push push push push push call cmp mov jne push lea push push call add cmpb jne pushl mov lea sub mov rep call add push call push pop jmp lea push push call pop pop push push push call mov cmp jne push pop jmp push call cmp push jne call pop push call push mov movw call mov lea push push push call cmp jne push lea push push call add cmpb jne pushl mov lea sub mov rep call add push pop jmp lea push push call pop lea pop push push call pop push lea push push call push call movl lea push push call add lea push push call pop push lea push push call push call movl lea push push call add lea push push call pop push lea push push call push call lea movl push call pop lea pop push push call pop push lea push push call push call lea push lea push push call add lea push push call pop push lea push push call push lea push push call add lea push push call pop push lea push push call lea push push call pop lea pop push push call pop push lea push push call lea push push call pop lea pop push push call pop push lea push push call lea push push call pop lea pop push push call pop push lea push push call lea push push call pop lea pop push push call pop push lea push push call lea push push call pop lea pop push push call pop push lea push push call lea push pushl call push call push push lea push push call add lea push push call pop push lea push push call lea push push call pop lea pop push push call pop push lea push push call lea push lea push push call add lea push push call pop push lea push push call push lea push call pop lea pop push push call pop push lea push push call push lea push push call push lea push push call add lea push push lea push push pushl call test je lea push push lea pushl push call mov lea push call andb add lea push push push push call cmpl jb jmp push jmp lea push push call pop lea pop push push call pop push lea push push call lea push push call pop lea pop push push call pop push lea push push call lea push push call pop lea pop push push call pop push lea push push call push call lea movl push call pop lea pop push push call pop push lea push push call push call lea movl push call cmpb pop pop jne pushl mov lea sub mov rep call add push pop push call pushl call mov andb mov pop pop pop leave ret push mov push push pushl call mov pop cmp jg pushl call cmp pop jg pushl call cmp pop jg pushl call mov pop cmp jg pushl call cmp pop jg pushl mov push push call pushl push push call pushl push push call pushl push push call pushl push push call mov add mov mov mov mov mov movb lea push xor push push push push push call jmp xor pop leave ret push mov sub push xor push push mov movl mov cmp je xor lea mov movl stos stos stos stos mov lea mov xor stos lea movl push push lea push push push mov call cmp je cmp je lea mov push push pushl call push push pop lea push push pushl call cmpb jne push lea push push pushl call cmp je lea mov push push pushl call push pushl call cmpb pop pop jne lea mov push push pushl call lea push push lea push movw call mov add mov push push push call lea push push push mov call cmp je push lea push push pushl movb mov call lea mov push push pushl call lea push push pushl call movl cmp je mov mov mov xor lea mov cmp je inc add cmp jb cmp jne mov incl lea push push lea push push push call test jle lea push pushl call test je push mov push push pushl call test je push push push pushl call cmp je cmp jle push push push pushl call jmp mov lea push pushl call test je push push push pushl call test je push push push pushl call cmp je cmp jle push push push pushl call push pop jmp mov incl test je cmp je pushl call cmp pop pop pop je pushl call xor leave ret push mov sub push push push push lea push push call add push push push call cmp mov jne lea xor push push mov call pop pop jmp mov movw push call mov lea push push pushl xor mov call cmp jne pushl mov call pushl lea push push call add cmp jne pushl mov lea sub mov rep call add jmp push pushl call cmp jne xor jmp lea push push call cmp pop pop jne pushl mov lea sub mov rep call add pushl push call pop pop cmp je lea push push push push pushl call push push push push call jmp push pop pop pop pop leave ret push mov pushl push push call xor add cmp je push jmp mov movl mov mov mov mov mov lea push push push push push push call mov push pop pop ret push xor cmp jne push jmp pushl mov call push pushl call cmp je push push call pop pop push pop pop ret mov ret mov ret lea push push push call add cmpl je lea push push push call add push pop ret push mov sub push push mov push push xor pop mov mov jmp push pop cmp je xor lea mov mov stos stos stos stos xor lea stos lea mov push push lea push push push mov movl mov call cmp je cmp je lea mov push push push call push lea push push push call cmpb jne push xor pop lea mov mov rep lea mov stos lea push stos stos stos stos lea push push push call push lea push push push call movzbl push push lea push push call push lea push push push movb mov call push push pop lea push push push call cmpb jne cmpb jne lea push push lea push movw call mov add mov push push push call lea push push push mov call cmp je push lea push push push mov call lea mov push push pushl mov call lea push push push call movl cmp je push mov pop xor mov lea mov cmp je inc add cmp jb cmp jne mov incl lea push push lea push push push call test jle lea push push call test je push mov push push push call test je push push push push call cmp je cmp jle push push push pushl call jmp mov lea push pushl call test je push push push pushl call test je push push push pushl call cmp je cmp jle push push push push call jmp mov incl test je jmp movb jmp movb push lea push push push call cmp je push call cmp pop pop pop je pushl call xor leave ret push mov sub push push push push lea push push call add push push push call cmp mov jne lea xor push push mov call pop pop jmp mov movw push call mov lea push push pushl xor mov call cmp jne pushl mov call pushl lea push push call add cmp jne pushl mov lea sub mov rep call add jmp push pushl call cmp jne xor jmp lea push push call cmp pop pop jne pushl mov lea sub mov rep call add pushl push call pop pop cmp je lea push push push push pushl call push push push push call jmp push pop pop pop pop leave ret push mov pushl push push call xor add cmp je push jmp mov movl mov mov mov mov mov lea push push push push push push call mov push pop pop ret push xor cmp jne push jmp pushl mov call push pushl call cmp je push push call pop pop push pop pop ret mov ret mov ret lea push push push call add cmpl je lea push push push call add push pop ret push mov sub lea push push call pop lea pop push push lea push push push call test je xor leave ret lea push push push call push call lea push push lea push push call lea push call add push lea push push lea push push pushl call pushl call push pop leave ret push mov sub lea push mov mov push push movw call mov mov mov xor push lea push push call mov add cmp jne call mov mov mov and or mov mov mov and or mov mov mov mov movw call mov mov mov mov mov orb mov movb mov mov mov mov mov mov mov mov cmp jne push push call pop pop push call movzwl mov mov mov call mov mov and push and mov or movb mov call mov mov mov mov mov push mov mov mov mov movb call mov lea push push lea push call lea push push call mov push mov lea push call add mov lea push push push lea push push pushl call pop pop leave ret push mov sub push push push lea push push movl call pop pop push push push call or mov cmp jne lea push push call pop xor pop jmp lea push push xor push push push call cmp jne push jmp call mov push call cmp push jne call pop push call mov cmp jne push lea push call pop pop cmp jne cmp je pushl mov lea sub mov rep call add mov jmp cmp je push pushl call pop pop pushl call jmp pushl call pop pop xor pop leave ret push mov push xor cmp je push pop jmp mov push pushl mov mov movl mov mov push push mov call pushl push call add xor cmp jle push mov lea push push push push push push call mov inc add cmp jl pop push pop pop pop pop ret cmpl jne push pop ret andl push pop ret mov ret mov ret mov ret push push mov test jne push push call pop mov pop mov push push push call mov add test jne call mov mov push mov call mov mov test jne push push call pop pop push call movzwl mov mov test jne push push call pop pop push call mov lea push call mov movzwl pop pop ret push mov sub push push push mov push movl call mov movl lea push push call add push push push call cmp mov jne pushl call lea movl push call pop xor pop jmp lea push push xor push push push call cmp jne pushl call movl jmp mov movw push call cmp push jne call pop push call cmp mov jne pushl call movl lea push call pop pop cmp jne cmp je pushl mov lea sub mov rep call add mov jmp mov mov cmp je push push pushl call pushl mov push push pushl call add cmpl jae lea push push push push pushl pushl call add pushl call jmp pushl call pop pushl call pop pop xor pop leave ret push mov push xor cmp je push pop jmp mov push pushl mov movl push push call pushl push call mov add mov mov xor cmp mov mov jle push mov lea push push push push push push call mov inc add cmp jl pop push pop pop pop pop ret cmpl jne push pop ret andl push pop ret mov ret mov ret mov ret cmpl push push jne sub mov lea mov rep call jmp cmpl jne sub mov lea mov rep call add pop pop ret cmpl je pushl jmp call push push push call add ret push push mov push push call pop mov push push call test jne push call mov test jne push call pop xor jmp mov mov mov cmp jl cmp jg call push pushl push jmp call push pushl push push call add mov pop pop pop ret mov ret cmpl jne cmpl mov jne mov ret cmpl jne cmpl mov jne mov ret cmpl jne cmpl mov jne mov ret cmpl jne cmpl mov jne mov ret cmpl jne cmpl mov jne mov ret push mov sub push push push lea test jne xor mov test xor cmp xchg rep leave push push push call pop pop cmp mov pop je pushl movw call mov push lea push push call lea push push pushl call add lea push call cmp lea push jne call pop push call push push pushl mov call cmp jne pushl call xor leave ret push pop leave ret push mov push call pop push push call pop push push pushl call push push push pushl call push pop pop ret push mov sub push push push call mov pop test mov jne call mov cmpl jne mov cmpl je push lea push push call lea push push push call lea push push push call push call add push push push call push call pushl pushl push push call push call push push push call push call add push pop pop pop leave ret push push push call pushl mov push push call push call add test jne xor jmp push pop push call pop mov pop pop ret mov test je cmp je cmp je push call pop pushl call push pop ret xor ret push xor cmp push je push pop jmp push call mov lea test pop je lea test je lea push lea push push push call push call add test je push pop push call pop mov jmp xor pop pop ret push push push call xor pop cmp mov je pushl jmp call push push push call add push call test pop je push pop push call pop mov pop pop ret sub push mov push push test push je lea test mov je add test mov je mov push call andl mov pop mov push push push pushl call cmp je test je push push call pop test pop jne incl inc cmp jl push call pop mov push push push push call pop inc pop push call add mov test jne push call push lea push push call add test jne mov push push call inc inc push call add push push push call pop inc pop inc push push call add push jmp xor jmp push push push push call pop inc pop push call add test jne push call push lea push push call add test jne mov push push call push call add push push push call pop pop push push call add push jmp push push push push call pop inc pop push call add test jne push jmp push push push call add test jne push call sub push lea push push call add push jmp push push push push call pop pop push call add test jne push call push lea push push call add test jne push push push call push push call add push push call push push push call add push jmp push push push push call pop pop push call add test jne push call pop push push push push push call pop pop push call pop inc pop push call add test jne push push call add push pushl call add push jmp mov push push push push call pop pop push call add test je push pop push call pop mov jmp mov push push pushl call push push pushl call push push pushl call push push call mov push sub push dec call mov mov push push add call sub push push mov call add mov inc push inc call mov push sub add mov lea push pushl call pushl push pushl call pushl push pushl call pushl call push call add push pop jmp xor pop pop pop pop add ret push push call pushl mov push push call push call add test jne pop ret push call pop push pop pop ret push mov sub push lea pushl push push call push call mov lea push push call add test je push push lea push push call pop pop push call add lea push pushl push push call push call add test je push call pop push pop pop leave ret push push call push mov pushl call add test je push push push pushl call pop pop push call add pushl pushl push push call push call add test jne pop ret push call pop push pop pop ret push push mov push push push xor call add test jne mov jmp push push push call add test jne mov jmp push push push call add test jne mov jmp push push push call add test jne mov mov test je cmp je cmp je mov mov inc test jne andb push pop jmp xor pop pop ret push mov sub push push push mov xor push push push call push mov push push call push push pushl call push push pushl call mov add add push push cmp mov push je call add push push pushl call pop push pushl call push push pushl call add jmp call push push push call add mov mov call test je call mov call test je call mov lea push push pushl call pop push pushl call lea mov push pushl pushl push push push call push mov push push call push call add mov push push push push push call cmp mov je push push push push push pushl push push call cmp mov je push push push push push push push push call mov cmp je pushl push push push push call test jne xor jmp lea mov push push push push call mov movl mov cmp mov je add push push call pop test pop jne mov jmp mov push call pushl call pushl call mov pop pop pop leave ret mov push push push test mov jne mov mov test jne mov test mov jne mov push push call push push push push call add pop pop pop ret lea push push push call add push pop ret mov push push mov lea push push push call push push push call xor add cmp pop pop setne ret push push mov push push xor call pop push pop cmp jne mov push call cmp pop jne inc push call cmp pop jne inc push call cmp pop jne inc push call cmp pop jne inc push call cmp pop jne inc push call cmp pop jne inc push call cmp pop jne inc push call cmp pop jne inc push call cmp pop jne inc push call cmp pop jne inc pop mov pop pop ret push xor push call cmp pop je call call cmp je cmp je pushl call push pushl call push pushl call push call pop ret push call pop ret push mov sub push push push lea pop push push push call add push pop cmp jne mov mov lea push push push call add cmp jne xor cmp setne mov lea push push push call add cmp jne mov mov lea push push push call add cmp jne xor cmp setne mov lea push push push call add cmp jne mov mov lea push push push call add cmp jne xor cmp setne mov lea push push push call add cmp jne mov mov lea push push push call add cmp pop pop jne xor cmp setne mov leave ret push push xor mov cmp push je push pushl call add jmp call pop cmp push je push pushl call add jmp call pop cmp push je push pushl call add jmp call pop cmp push je push pushl call add jmp call pop pop pop ret push mov test mov jne mov test mov jne mov push push push call add mov test jne mov test mov jne mov push push push call add mov test jne mov test mov jne mov push push push call add mov test jne mov test pop mov jne mov push push push call add ret push mov test mov jne mov test mov jne mov push push push call add mov test jne mov test mov jne mov push push push call add mov test jne mov test pop mov jne mov push push push call add ret push mov sub push push push lea pop push push push call push lea push push call push lea push push call lea push push pushl call lea push push pushl call lea push push pushl call andl add lea push push push call mov add test mov jne mov lea push push push call add mov test jne mov lea push push push call add mov test jne mov lea push push push call add mov test jne mov lea push push push call add mov test jne mov lea push push push call add mov test jne mov lea push push push call add mov test jne mov lea push push push call add test pop pop jne mov mov leave ret push mov sub push push lea push push call push lea push push call lea push push pushl call lea push push pushl call andl lea push push push call mov add test mov jne mov lea push push push call add mov test jne mov lea push push push call add mov test jne mov lea push push push call add mov test jne mov lea push push push call add mov test jne mov lea push push push call add test pop jne mov mov leave ret push mov push mov push push mov lea push push push call mov lea push push push call push push push call push mov xor lea push push call push lea push push call push push push call mov add movl add push push push call add add decl jne pop pop pop pop ret pushl call test pop jne cmp sete mov mov imul push call jmp push mov sub push push push mov xor push mov push push call push push push call add cmpl mov mov jne push push push call push push push call add mov cmpl jne lea push push push push push push call mov cmpl jne mov mov cmp jne mov cmp mov jne mov push push call pop test pop jne mov dec cmp jl pushl xor cmp mov sete mov call jmp cmpl je pop pop xor pop leave ret incl mov imul push call jmp push push call push call add test jne call jmp push push push call push push push call push call add test je mov imul lea push lea push lea push call add cmpl jne push call mov pop test mov je mov push push push call add cmp jne push call pop jmp cmp jne push call jmp cmp jne jmp mov mov cmp je cmpl jne cmp jne push push call pop test pop je push push call pop push push push call add mov mov push sub mov rep call add jmp cmp jne push push call pop test pop jne push jmp push push call pop push push jmp cmpl jne push call push call test pop je mov andl shl mov lea push push push mov call push push push call add test je push push pushl lea push push call add test je mov test je incl cmp mov je cmp je cmpl jne push push call pop mov pop push mov sub jmp cmp jne cmpl jne movl jmp andl lea push push push call add cmpl jne cmpb jne push call push push push call add jmp push push call mov sub add push push push call add push lea push push call lea push push push call lea push push call add test jne lea push push call pop test pop jne lea push pushl call pop push push lea push call jmp lea push push push call add test je cmpl je push push push call add jmp mov push lea push call pop test pop jne push mov push push call add push pushl call pop push pushl call pop push pushl call pop push lea push push call add cmpl je cmpb lea jne push push call jmp cmpl jne push push call pop test pop jne push call test pop je lea push push call pop test pop jne push pushl call pop push lea push push call add mov lea pushl sub mov rep call push push push call add jmp lea push push call pop test pop jne lea push push push call add test jne push jmp lea push call pop cmp push push jge call inc push push jmp call inc push push jmp lea push push call pop test pop jne lea push push push call add test je lea push push push call add test je lea push push push call lea push push call add test jne lea push push call pop test pop jne and push push call pop pop lea push push call pop test pop jne lea push call test pop mov je push push push call add jmp lea push call test mov je mov xor shr mov movzbl movzbl push push xor mov movzbl movzbl push push push push call add jmp push push call pop pop lea push push call pop test pop jne lea push call test pop mov je push push push call add jmp push push call pop pop lea push push call pop test pop jne lea push call push push push mov call add lea push push call pop test pop jne lea push call cmp pop jle mov push push call pop pop jmp lea push call push push push mov call add mov lea push push call pop test pop jne lea push call cmp pop jle push push call pop pop jmp lea push call push push push mov call add lea push push call pop test pop jne lea push call push push push mov call add lea push push call pop test pop jne lea push call push push push mov call add lea push push call pop test pop jne lea push call cmp pop jle push push call pop pop jmp lea push call push push push mov call add lea push push call pop test pop jne lea push call push push push mov call add lea push push call pop test pop jne lea push call cmp pop jle push push call pop pop jmp lea push call push push push mov call add lea push push call pop test pop jne lea push call cmp pop jle push push call pop pop jmp lea push call push push push mov call add lea push push call pop test pop jne lea push call cmp pop jle push push jmp lea push call push push mov push jmp push push jmp lea push push call pop test pop jne mov push call pop push push call pop push push call pop push lea push push call add jmp lea push push call pop test pop jne xor push mov push push call push push push call push push push call push push mov push call add push push push push mov push push call push push push push push push call push push call push push call mov movl test jne mov test je mov jmp pushl call pop mov lea call push pushl call pop push pushl call pop push call push pushl call pop push pushl call pop push push pushl call pop push pushl call pop push push pushl call pop push pushl call pop push push call pop push pushl call pop push pushl call pop push pushl pushl call pop push pushl call pop push push pushl call pop push pushl call pop push call push pushl call pop push pushl call pop push push pushl call pop push pushl call pop push pushl call pop push push push call add cmpl je push jmp mov test je mov xor shr mov movzbl movzbl push push xor mov movzbl movzbl push push lea push push call add jmp lea push push call pop pop mov test je push lea push push call add jmp lea push push call pop pop mov test je push lea push push call add jmp lea push push call pop pop lea push push call pop test pop jne mov lea push push call pop push push call pop push lea push push call pop push push call pop push lea push push call pop push push call pop push pushl push call pop push push call pop push pushl push call pop push push call pop push pushl push call pop push push call pop push pushl push call pop push push call pop push pushl push call pop push push call pop push pushl push call pop push push call pop push pushl push call pop push push call pop push pushl push call pop push push call pop push pushl push call pop push push call pop push pushl push call pop push push call pop push push call pop push lea push push call add jmp lea push push call pop test pop jne mov lea push call push push push call andl add call test je call push push call pop push push call pop push push call pop push push push call pop add push call add incl call test je call push push call pop push push call pop push push call pop push push push call pop add push call add incl call test je call push push call pop push push call pop push push call pop push push push call pop add push call add incl call test je call push push call pop push push call pop push push call pop push push push call pop add push call add incl call test je call push push call pop push push call pop push push call pop push push push call pop add push call add incl call test je call push push call pop push push call pop push push call pop push push push call pop add push call add incl call test je call push push call pop push push call pop push push call pop push push push call pop add push call add incl call test je call push call push push call pop push push call pop push push call pop push push push call pop add push call add incl call test je call push call push push call pop push push call pop push push call pop push push push call pop add push call add incl call test je call push push call pop push push call pop push push call pop push push push call pop add push call add incl cmpb je push call pop push push call pop push push call pop push push push call pop add push call add incl call test je push call pop push call push push call pop push push call pop push push call pop push push push call pop add push call add incl mov test jne push call pop push push push call pop add jmp push push call pop push push push call pop add jmp lea push push call pop test pop jne lea push push push call add test je lea push push push call add test je call test je call push call push push jmp lea push push push call add test je lea push push call pop test pop jne pushl push jmp pushl push lea push push lea push call add pushl call jmp push jmp lea push push call pop test pop jne call test je push call movl jmp push jmp lea push push call pop test pop jne lea push push push call add test jne push jmp push push call inc push call jmp lea push push call pop test pop jne lea push push push call add test jne lea push push call pop pop cmpb lea jne push lea push call lea push push jmp push jmp lea push push call pop test pop jne lea push push push call add test jne lea push push call pop pop cmpb jne lea push push call lea push push jmp lea push push call pop test pop jne lea push push push call add test jne push jmp call test je push jmp lea push push call pop lea pop pushl mov sub mov rep call lea push push pushl call add test je lea push push call neg pop sbb pop inc jmp xor xor test sete push lea pushl push lea push call jmp lea push push call pop test pop jne call test jne push jmp push call call shr push push jmp lea push push call pop test pop jne pushl call pop lea push push call pop test pop jne cmpl je push jmp lea push push call pop test pop jne lea push push push call add test jne xor cmp je push call pop cmp je push jmp cmpl je lea push call pop cmpl je lea push call cmpl pop je push jmp lea push push call pop test pop jne push pushl call pop push push jmp lea push push call pop test pop jne call call call push call pop jmp lea push push call pop test pop jne push push lea push push push call add test jne push jmp lea push push call pushl call pop push lea push pushl call pop push push jmp lea push push call pop test pop jne call test je push jmp lea push push push call add test je lea push push push call add test je lea push push push call add test jne movl pushl push push call push lea pushl push lea push call add jmp lea push call test pop mov jne lea push push jmp push jmp lea push push call pop test pop jne lea push push push call add test jne push jmp lea push call test pop lea push je push jmp push jmp lea push push call pop test pop jne call test jne push jmp push call movl jmp lea push push call pop test pop jne cmpl jne push push call pop mov pop push mov sub mov rep call add cmpl je lea push push call pop lea pop pushl mov sub mov rep call add lea push push pushl call add test jne push jmp call test je call push push jmp lea push push pushl call add test je lea push call pop jmp mov test mov jne lea push push jmp lea push push call pop lea pop pushl push call push lea pushl push call jmp lea push push call pop test pop jne call test jne push jmp push call movl jmp lea push push call pop test pop jne lea push push push call add cmpl je mov jmp pushl lea push call pop pop push pushl call pop push pushl call pop push push jmp lea push push call pop test pop jne call test je push jmp lea push push push call add test je lea push call pop jmp mov test mov jne lea push push jmp pushl push push call jmp lea push push call pop test pop jne call test je push jmp lea push push push call add test je lea push call pop jmp mov test mov jne lea push push jmp pushl push push call add jmp lea push push call pop test pop jne call test jne push jmp push call movl jmp lea push push call pop test pop jne call test jne push jmp push call movl jmp lea push push call pop test pop jne push call push push jmp lea push push call pop test pop jne call test je push jmp lea push push push call add test je lea push call pop jmp mov test mov jne lea push push jmp pushl push push call jmp lea push push call pop test pop jne call test jne push jmp push call movl jmp lea push push call pop test pop jne lea push push push call add test je lea push call pop jmp mov test mov jne lea push push jmp lea push push push call add test je lea push call pop jmp mov test mov jne lea push push jmp cmp push jbe push jmp pushl call push jmp lea push push call pop test pop jne call test je push jmp lea push push push call add test jne push jmp lea push push push call add test je lea push call pop jmp mov test mov jne lea push push jmp lea push push call pop lea pop pushl mov sub mov rep call lea push push pushl call add test pushl lea push je lea push pushl lea push call add jmp push jmp lea push push call pop test pop jne call test jne push jmp push call movl jmp lea push push call pop test pop jne cmp je lea push push call pop lea pop pushl mov sub mov rep call add lea push push pushl call add test jne push jmp lea push call test pop lea push jne push jmp push jmp lea push push call pop test pop jne cmp je lea push push call pop lea pop pushl mov sub mov rep call add lea push push pushl call add test jne push jmp lea push call test pop jne lea push push jmp push lea push push jmp lea push push call pop test pop jne cmp je lea push push call pop lea pop pushl mov sub mov rep call add lea push push pushl call add test jne push jmp lea push call mov pop test jne push jmp push call pop test push jne push jmp push jmp lea push push call pop test pop jne lea push push push call add test je lea push push push call add test je call test je push jmp lea push push call pop lea pop pushl mov sub mov rep call add lea pushl push lea push call pop push lea push call jmp push jmp lea push push call pop test pop jne call test jne push jmp lea push push call pop lea pop pushl mov sub mov rep call push call add jmp lea push push call pop test pop jne lea push push push call add test jne push jmp call test je push jmp lea push push call pop lea pop pushl mov sub mov rep call lea push push pushl call add test je lea push call pop mov jmp andl pushl lea push lea pushl push call add jmp lea push push call pop test pop jne call test jne push jmp push call call shr push push jmp lea push push call pop test pop jne cmp je push jmp lea push push push call add test je lea push push push call add test je lea push push push call add test je lea push push push call add test je lea push push push call add test je lea push call test pop jne push jmp cmpl pushl setne push push lea push lea push lea push lea push push lea push call lea push push call add jmp push jmp lea push push call pop test pop jne mov lea push mov lea push push jmp lea push push call pop test pop jne call test je push jmp lea push push push call add test je lea push call pop jmp mov test mov jne lea push push jmp pushl lea push push call push jmp lea push push call pop test pop jne call test jne push jmp push call movl jmp lea push push call pop test pop jne mov mov lea push push call pop push push call pop push mov lea push push call pop push push call pop push mov lea push push call pop push push call pop push mov lea push push call pop push push call pop push mov lea push push call pop push push call pop push mov lea push push call pop push push call pop push mov lea push push call pop push push call pop push mov lea push push call pop push push call pop push push call pop push lea push push call add push jmp lea push push call pop test pop jne lea push push push call add test je lea push push push call add test je lea push call push lea push call push call push push lea push call add jmp push jmp lea push push call pop test pop jne lea push push push call add test je lea push push push call add test je lea push push push call add test je lea push push push call add test jne push jmp lea push push call pop test pop jne lea push push push call add test je lea push push push call add test je lea push push push call add test je lea push push push call add test jne jmp lea push push call pop test pop jne lea push push push call add test je lea push push push call add test je lea push push push call add test je lea push push call pop lea pop pushl mov sub mov rep call add lea push lea push call pop push lea push push jmp lea push push call pop test pop jne lea push push push call add test je lea push push push call add test je lea push push push call add test je lea push push call pop lea pop pushl mov sub mov rep call add lea push lea push call pop push lea push push call add jmp push lea push call pop pop jmp lea push push lea push call add pushl sub mov lea mov rep call add mov push push push call add jmp lea push push call pop lea pop pushl mov sub mov rep call add lea push lea push lea push call pop push lea push push jmp lea push push call pop lea pop pushl mov sub mov rep call add lea push lea push lea push call pop push lea push push call add call jmp call mov xor jmp push mov push call test jne mov jmp push xor cmp push je push push push call mov call cmp jne push call pop cmp je call push push call push call pop call cmp je pushl pushl call pop mov pop cmp je pushl pushl call pop mov pop call call push call push call push call push call add cmp mov je lea push push push push push push call mov cmp je lea push push push push push push call mov push call push call pop pop xor pop leave ret push mov push push push push lea push ret (bad) xchg mov and repz pop or mov into mov and fs jo mov stos xchg mov je lock rep xor xor pushl push call ret call push call push call pop xor test pop jne push push call push call mov push push call mov mov mov movl cmp je push push push call mov call cmp jne push call jmp pushl call cmp je call cmp je call test jne mov push call movl push call pop test pop jne mov jmp mov call jmp mov cmp jne cmp je call push push call pop pop jmp push call pop pop xor pop leave ret int3 int3 lock add inc int add adc add int add int add int add add fldl dec outsl jbe inc imul gs jb arpl fs jae add ret outsl popa fs imul add add je outsl fs gs popa outsb fs gs add dec inc push dec inc dec xor cs insb
 int3 int3 int3 int3 int3 int3 data16 cmp jne rol test jne retq ror jmpq sub mov callq mov mov test jne mov jmp andq xor add retq mov mov push push push push push sub xor mov mov cmp jne mov cmp jle lea sub mov jmp mov callq xor lock jne mov cmp je mov callq jmpq mov cmp je mov add jmp mov cmp je callq sub cmp jae mov callq mov mov mov xchg jmpq xor jmpq mov cmp jne mov mov mov jmp cmp je mov callq xor lock jne jmp mov mov cmp je mov callq jmp lea lea mov mov cmp jae cmp jne mov cmp je callq add cmp jb cmp jne lea lea callq movl cmp jne mov xchg cmp je lea callq cmp je mov mov mov callq add mov mov mov add pop pop pop pop pop retq int3 int3 mov mov mov push push push sub mov mov mov mov mov test jne cmp jne xor mov jmpq cmp je cmp jne mov test je movl mov callq mov mov jmp xor mov mov mov test je mov mov mov callq mov mov jmp xor mov mov mov test je mov mov mov callq mov mov jmp xor mov mov mov cmp jne test jne xor xor mov callq jmp mov mov mov xor xor mov callq jmp mov mov mov mov test je xor xor mov callq jmp mov mov mov test je cmp jne mov mov mov callq mov mov jmp xor mov mov mov mov test je cmpl je mov mov mov callq mov mov jmp xor mov movl mov add pop pop pop retq int3 int3 int3 mov mov push sub mov mov mov cmp jne callq mov mov mov mov mov add pop jmpq int3 int3 int3 mov sub lea callq mov mov xor lea mov callq mov cmpq je movq lea mov lea mov lea mov mov mov mov xor callq jmp mov mov lea add mov mov mov mov mov movl movl mov mov mov mov xor callq lea callq callq mov mov callq add retq int3 int3 int3 int3 int3 int3 int3 mov mov cmp je xor retq movslq add xor cmpl jne mov cmp sete repz int3 movslq xor mov add movzwl movzwl lea test je mov cmp jb mov add cmp jb inc add cmp jb xor retq mov retq int3 int3 sub mov lea mov callq test je sub mov mov callq test je mov shr not and jmp xor add retq int3 int3 int3 mov push sub mov andq movabs cmp je not mov jmp lea callq mov callq mov xor callq mov xor callq lea mov xor callq mov xor movabs and movabs cmp cmove mov not mov mov add pop retq int3 sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg lea retq mov mov push sub mov mov mov mov add mov cmp je xor lea mov mov mov movzwl jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne cmp je mov cmp jae movzwl mov test je lea sub lea movzwl mov test jne movzwl lea test je cmpw je add cmp jne mov movzwl lea mov jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne cmp je mov cmp jne xor lea mov mov mov pop retq mov jmp int3 int3 int3 mov mov mov push sub callq mov cmpl jne mov jmpq mov mov xor xor lea mov cmp je mov cmp je mov add xor mov test jne lea callq mov mov xor mov cmp je mov cmp je mov add xor mov test jne lea callq mov cmp je test je callq jmp xor lea mov mov mov mov pop retq mov mov push sub callq mov mov andq andq mov callq lea mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov test je mov mov callq lea mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq lea mov mov callq lea mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq movl mov mov jmp xor mov mov add pop retq int3 mov push sub andl cmpq mov je callq mov andq lea mov callq test jne mov callq orq mov add pop retq mov mov mov push sub mov mov lea mov mov mov callq mov mov mov mov mov add pop jmpq mov mov mov mov push lea sub mov lea mov callq xor movl mov mov movl mov movl movl lea mov mov lea inc cmp jne movslq lea mov lea callq test je lea xor callq mov callq callq test jne cmp je cmp jne mov mov lea mov mov mov mov pop retq mov mov push sub movzbl lea cmpl mov je callq callq cmp jae andl jmp sub cmp jb mov callq test je andl mov jmp callq callq mov xor mov mov add pop retq mov mov push sub mov mov movl callq xor test jne xor jmpq lea mov callq test je lea lea callq test je movzwl lea mov jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne movzbl lea sub mov mov mov mov callq cmp setne mov mov mov add pop retq int3 mov mov mov mov push push push lea sub mov lea or mov mov callq xor mov test jne mov jmpq mov movl movl mov movl movl lea mov mov lea inc cmp jne movslq lea mov lea callq test je mov lea mov callq test jne callq callq cmp jne mov callq jmp callq mov lea xor xor mov mov movl callq mov cmp jne inc cmp jb mov lea mov mov mov mov pop pop pop retq int3 mov push push push push push push sub mov mov mov orq xor mov mov xor cmp ja callq test je mov callq test je mov callq mov cmp je lea mov mov lea lea callq movl mov mov lea lea callq movb lea lea lea callq callq mov mov lea lea callq callq mov mov lea lea callq mov xor mov mov lea lea callq mov mov lea lea callq xor mov mov lea lea callq mov lea lea lea callq mov mov mov mov test je mov and je shr inc jmp mov mov lea lea callq mov mov test je mov and je mov mov lea lea callq cmp je cmp je cmp je cmp je cmp je cmp je lea cmp jbe jmpq add mov mov mov mov lea jmpq add mov mov mov mov lea jmpq add mov mov mov mov mov test je mov cmp je inc mov inc mov jmp add mov mov mov mov lea jmp add mov mov mov mov mov test je mov cmp je add mov inc mov jmp add lea callq shr jmpq mov cmp je callq callq mov jmp add pop pop pop pop pop pop retq int3 int3 rex sub xor mov lea test jne mov jmp mov mov xor mov cmp je lea lea sub sub lea cmp je add mov xor mov test jne callq lea callq mov mov callq add pop retq int3 int3 mov push push push push mov sub mov xor test je movzwl mov xor cmp jne movslq add mov mov mov xor add cmp jne cmp je mov mov mov add add add mov mov cmp jbe mov mov mov mov mov add mov mov cmpb mov je mov test jle movzbl inc mov mov and shl imul add imul xor mov dec mov mov test jne mov cmp je inc add mov cmp jb xor add pop pop pop pop retq mov movzwl mov mov add cmp jb mov add cmp jae mov xor mov mov test je cmp jne mov sub inc mov test jne test jle mov mov mov test jle movzbl lea cmp ja add movzwl inc dec mov and shl add imul imul xor cmp jne mov callq mov mov test jne mov mov mov callq lea lea mov mov callq test jne mov lea lea xor xor callq mov xor test mov cmovne mov lea callq mov test je movslq lea add mov test je mov test jle movzbl inc dec mov and shl add imul imul mov mov xor test jne mov mov callq jmpq mov jmpq int3 int3 sub cmp jne callq mov mov mov mov mov callq mov add retq sub dec jne and movl and movl lea mov callq test jne callq mov mov xor mov mov callq jmp mov xor mov mov callq nop add retq int3 int3 mov push sub xor movl movl and and mov mov mov lea mov callq lea lea callq mov test jne callq mov mov mov xor mov callq jmpq lea mov callq test jne callq mov jmp andl movl andl movl mov callq lea mov callq test jne callq mov mov mov xor mov callq cmpl je callq test jne xor jmp andl lea lea xor lea callq mov mov test je mov mov mov mov callq mov callq test je mov callq jmp mov xor mov mov callq nop mov add pop retq int3 int3 mov mov mov push sub andq lea mov andq andq xor movl lea mov lea mov callq mov lea callq test je mov mov mov mov mov callq jmpq callq mov lea callq mov mov mov mov test je mov callq cmpl je callq test jne xor jmp andl lea lea xor lea callq mov test jne mov mov mov xor callq xor jmpq mov mov callq cmp jne mov mov mov xor callq mov callq xor lea callq jmp mov callq mov mov mov mov callq test je mov callq xor jmp mov xor mov mov callq xor mov mov add pop retq int3 mov mov mov imul shr mov imul mov xor mov mov movl lea mov mov mov mov mov and cmp jb mov sub jmp lea mov inc shr cmp jle mov mov and cmp jb mov sub jmp lea mov inc shr cmp jle mov mov and cmp jb mov sub jmp add movzwl mov inc shr cmp jle imul imul mov and cmp jb mov sub jmp lea mov inc shr cmp jle mov mov and cmp jb mov sub jmp add movzwl mov inc shr cmp jle mov and cmp jb mov sub jmp lea mov inc cmp jle mov xor retq int3 int3 cmpw mov mov jne mov retq movzwl test je mov sub mov test je movzwl test je movzwl lea cmp ja add lea cmp ja add movzwl movzwl sub jne add cmp jne cmpw je add add movzwl test jne xor retq mov retq int3 mov mov push push sub lea mov mov mov callq test jne xor jmpq xor xor mov mov callq test je andq lea lea xor mov callq andl andl test je mov lea lea lea callq test je mov xor mov mov callq andl movl mov mov add pop pop retq int3 jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 rex sub mov movl add pop retq rex sub mov mov xor cmpl sete mov mov add pop retq
 mov mov mov mov mov push push push push push sub mov mov mov sub testb mov mov mov jne xor mov mov cmp jbe lea mov cmp jb mov cmp jae cmpl je cmpl je mov lea mov add callq test js jle cmpl jne cmpq je lea callq test je mov mov callq mov mov mov add callq mov mov movslq mov mov add mov mov mov callq callq inc add cmp jae jmpq xor jmp mov xor sub cmp jbe lea mov cmp jb mov cmp jae cmp jb cmp jae testb jne cmpl je mov cmp je jmp mov add mov mov mov add callq inc add cmp jb mov lea mov mov mov mov pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 data16 data16 xchg sub xor xor mov mov callq add retq int3 int3 int3 int3 int3 int3 data16 data16 mov mov mov mov jmp int3 int3 int3 int3 int3 int3 xchg retq int3 int3 int3 int3 int3 int3 data16 data16 nop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 data16 mov sub jb cmp jb test je test je mov dec mov inc test je mov sub mov add test je mov sub mov add mov shr jne mov shr je mov mov add dec jne and test jne mov retq nopl mov mov inc dec jne mov retq data16 data16 data16 cmp jae mov mov add mov mov mov mov dec mov mov jne and jmpq data16 xchg cmp jb mov prefetchnta prefetchnta add dec jne sub mov mov mov movnti movnti mov mov movnti movnti mov mov add movnti movnti mov mov dec movnti movnti jne sub cmp jae lock jmpq data16 data16 data16 xchg add cmp jb test je test je dec mov dec mov test je sub mov sub mov test je sub mov sub mov mov shr jne mov shr je sub mov dec mov jne and test jne mov retq nopl dec mov dec mov jne mov retq data16 data16 data16 cmp jae mov mov sub mov mov mov mov dec mov mov jne and jmpq data16 xchg cmp ja mov sub prefetchnta prefetchnta dec jne add mov mov mov movnti movnti mov mov movnti movnti mov mov sub movnti movnti mov mov dec movnti movnti jne sub cmp jae lock jmpq rex sub mov mov mov mov callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor retq int3 mov push push push push push push push mov sub xor mov mov mov mov callq mov test jne mov jmpq lea lea mov callq test je cmp jne lea mov callq cmp jne xor jmpq mov xor callq test jne mov lea callq mov test jne mov mov lea lea mov mov mov mov callq cmp jne mov inc mov mov callq mov xor mov callq mov test je mov lea mov mov callq test jne mov lea lea lea callq cmp jne mov inc mov mov callq mov xor mov callq mov test je mov lea mov mov callq test jne lea lea mov mov callq cmp jne mov inc mov mov callq mov xor mov callq mov test je mov xor mov add callq lea mov mov mov callq test jne cmp je mov lea lea lea callq cmp jne mov inc mov mov callq mov xor mov callq mov test je mov lea mov mov callq test jne mov mov add add add mov mov callq mov xor mov callq xor mov test je mov lea lea mov mov movl mov mov callq test js mov mov add je mov inc dec jne mov callq mov test je mov mov mov callq test jne lea mov mov callq test jne mov mov mov callq cmp je cmp je lea mov mov callq xor test jne lea mov callq test jne lea lea mov callq test jne lea mov mov callq test jne lea mov callq test jne lea lea mov callq test jne mov mov add je mov inc dec jne callq mov xor mov callq callq mov mov xor callq callq mov mov xor callq callq mov mov xor callq callq mov mov xor callq mov lea callq xor mov mov test je mov mov sub neg sbb and mov add pop pop pop pop pop pop pop retq callq mov xor mov callq callq mov mov xor callq callq mov mov xor callq callq mov mov xor callq mov mov add je mov inc dec jne jmpq callq mov xor mov callq callq mov mov xor callq callq mov mov xor callq callq mov mov xor callq mov mov add je mov inc dec jne jmpq callq mov xor mov callq callq mov mov xor callq callq mov mov xor callq callq mov mov xor callq mov mov add je movb inc dec jne mov jmp callq mov xor mov callq callq mov mov xor callq callq mov mov xor callq callq mov mov xor callq mov mov add je movb inc dec jne mov callq mov xor mov callq mov jmpq callq mov xor mov callq callq mov mov xor callq mov mov add je mov inc dec jne callq mov xor mov callq callq mov mov xor callq callq mov jmpq callq mov xor mov callq callq mov mov xor callq mov mov add je mov inc dec jne callq mov xor mov callq callq mov jmpq callq mov xor mov callq callq mov mov xor callq mov mov add je mov inc dec jne jmp callq mov xor mov callq callq mov mov xor callq mov mov add je mov inc dec jne callq mov jmpq callq mov xor mov callq callq mov mov xor callq mov mov add je mov inc dec jne jmp callq mov xor mov callq callq mov mov xor callq jmp callq mov xor mov callq callq mov jmp callq mov mov xor callq jmpq mov mov mov push sub lea lea lea mov movl callq xor test jne mov mov lea lea cmp je mov inc mov inc cmp jl movslq cmp jge add sub xor callq mov callq mov test je mov mov mov callq test je inc cmp jl mov callq mov mov mov add pop retq mov push push push mov sub andl andl mov callq mov test jne mov jmpq lea lea mov callq test je cmp jne lea mov callq cmp jne xor jmpq mov xor callq test jne mov lea callq mov test jne mov andl lea lea mov callq cmp jne mov inc mov mov callq mov xor mov callq mov test je mov lea mov mov callq test jne lea callq mov test je mov mov mov callq test jne mov mov mov callq cmp je cmp je lea mov mov callq test jne lea mov callq test jne lea lea mov callq test jne callq mov xor mov callq jmpq mov jmp mov callq mov xor mov callq mov jmp mov mov sub neg sbb and mov add pop pop pop retq mov retq int3 int3 mov mov mov push push push push push sub mov mov mov test je mov jmpq test jne test je mov mov lea mov shr sub inc movups mov mov xor mov movups callq mov mov xor inc dec jne movups mov add sub movups dec jne jmpq test je mov mov lea mov mov shr sub neg inc mov mov mov sub mov xor mov inc dec jne mov mov mov mov callq mov mov lea mov mov inc dec jne mov add sub add dec jne xor mov mov add pop pop pop pop pop retq int3 int3 mov mov mov push push push push push push mov movzbl movzbl movzbl movzbl shl or movzbl shl shl shl mov or movzbl mov movzbl shl lea or movzbl shl xor or movzbl shl add or movzbl shl or movzbl xor or movzbl shl or movzbl shl or movzbl xor or movzbl shl or movzbl shl or mov xor sar dec test jne test jle mov mov mov mov shr mov mov movzbl mov shr mov shr shr movzbl mov xor shr xor movzbl xor mov xor shr movzbl mov mov shr movzbl mov xor shr xor movzbl xor mov xor shr movzbl mov shr mov shr movzbl mov xor shr movzbl xor mov movzbl xor movzbl mov xor xor movzbl xor mov mov xor mov xor shr mov movzbl mov mov shr movzbl mov xor shr xor movzbl xor mov xor shr movzbl mov shr movzbl mov mov shr xor shr dec xor movzbl add xor mov xor shr movzbl mov shr mov shr movzbl mov xor shr movzbl xor mov movzbl xor shr xor movzbl xor movzbl xor xor xor test jg mov mov mov mov shr shr mov movzbl mov shr mov shr movzbl mov xor shr xor movzbl xor mov xor shr movzbl mov mov shr movzbl mov xor shr xor movzbl xor mov xor shr movzbl mov shr mov shr movzbl mov xor shr movzbl xor mov movzbl xor movzbl xor xor movzbl xor mov mov xor mov xor shr movzbl mov mov shr shl mov movzbl movzbl xor mov shr shl movzbl movzbl xor movzbl movzbl shl xor mov xor shr movzbl mov movzbl shr movzbl shl xor mov shr shl movzbl movzbl xor movzbl movzbl shl xor mov shr xor shr movzbl mov movzbl shr movzbl shl xor mov shr shr shl movzbl movzbl xor movzbl shr movzbl shl xor movzbl movzbl movzbl shl xor movzbl movzbl shl xor movzbl movzbl jmpq test jle mov mov mov mov shr mov mov movzbl shr mov mov shr shr movzbl mov xor shr xor movzbl xor mov xor shr movzbl mov mov shr movzbl mov xor shr xor movzbl xor mov shr xor shr movzbl mov mov shr movzbl mov xor shr movzbl xor mov movzbl xor movzbl xor xor movzbl xor mov mov xor mov mov xor shr movzbl mov mov shr movzbl mov xor shr xor movzbl xor mov xor shr movzbl mov mov shr movzbl xor mov dec shr add xor movzbl xor mov shr xor shr movzbl mov mov shr movzbl mov shr xor shr movzbl xor mov movzbl xor movzbl shr xor xor movzbl xor xor xor test jg mov mov mov mov shr mov mov movzbl mov shr mov shr shr movzbl mov xor shr xor movzbl xor mov xor shr movzbl mov mov shr movzbl mov xor shr xor movzbl xor mov shr xor shr movzbl mov mov shr mov movzbl mov xor shr movzbl xor movzbl xor movzbl mov xor xor movzbl xor mov mov xor mov xor shr movzbl mov movzbl shr movzbl shl xor mov shr shl movzbl movzbl xor movzbl movzbl shl xor mov xor shr shr movzbl mov shr shl movzbl movzbl xor mov shr shl movzbl movzbl xor movzbl movzbl shl xor mov shr xor shr movzbl mov movzbl shr movzbl shl xor mov shr shl movzbl movzbl xor movzbl shr movzbl shl xor movzbl movzbl movzbl shl xor movzbl movzbl shl xor movzbl movzbl xor shl xor mov xor mov shr mov mov mov shr shr mov mov mov mov shr mov mov mov mov mov shr shr mov mov mov shr mov mov shr shr mov mov mov shr mov mov shr shr mov mov xor pop pop pop pop pop pop retq int3 mov mov mov mov push push push push push lea sub xor lea mov lea mov movslq mov lea mov mov and neg lea sbb add and xor xor movzbl cmp jl mov lea mov mov mov lea and neg lea sbb and xor movzbl sub jne mov movb lea mov lea lea movslq lea lea shl sub mov mov sar lea or movzbl xor mov add sar or movzbl xor mov add sar or movzbl mov lea sar or xor movzbl xor xor movslq mov add mov add cmp jl mov mov mov mov xor movzbl movzbl mov and neg lea sbb and xor movzbl mov xor shl xor shl xor shl xor mov rol mov rol mov rol mov test je movslq mov mov add imul add sar mov shr add imul sub movslq mov jmp xor test je movslq mov mov add imul add sar mov shr add imul sub movslq mov jmp xor test je movslq mov mov add imul add sar mov shr add imul sub movslq mov jmp xor test je mov mov add imul add sar mov shr add imul sub movslq mov jmp xor shl inc xor shl xor shl xor lea mov rol mov rol mov rol mov dec jne lea mov mov mov mov pop pop pop pop pop retq int3 mov mov push sub mov mov sub je sub je cmp je mov jmpq movl jmp movl jmp movl lea mov lea callq test jne mov mov shl movslq mov lea mov add mov mov add mov add add mov add mov mov add mov mov add dec sub test jle lea mov movzbl movzbl movzbl movzbl movzbl mov xor movzbl movzbl xor movzbl add xor mov add dec jne dec sub test jg mov add mov mov add mov mov mov mov mov xor lea mov mov mov pop retq int3 int3 int3 mov mov mov push sub xor mov mov cmp mov jne callq movl mov mov sub je sub je cmp je lea jmpq movl jmp movl jmp mov lea shr mov test je mov lea movzbl movzbl lea shl or movzbl shl or mov inc shl shl movzbl or mov lea cmp jb cmp je cmpl je cmpl jne lea mov lea movzbl movzbl movzbl movzbl movzbl shl xor movzbl movzbl shl xor movzbl mov shl xor mov xor lea xor lea xor mov mov xor mov xor mov mov movzbl movzbl movzbl movzbl movzbl shl xor movzbl movzbl shl xor movzbl mov shl xor mov xor xor mov xor mov mov xor mov dec jne jmpq lea mov lea movzbl movzbl movzbl movzbl movzbl shl xor movzbl movzbl shl xor movzbl mov shl xor mov xor lea xor lea xor mov xor mov mov xor mov mov xor mov mov xor mov dec jne jmp lea lea movzbl movzbl movzbl movzbl movzbl shl xor movzbl movzbl shl xor movzbl mov shl xor mov xor lea xor lea xor mov xor mov mov xor mov dec jne xor mov mov mov add pop retq mov mov mov mov mov push sub mov mov mov mov cmp jae xor jmpq lea mov sub mov xor inc dec jne lea mov mov callq test jne add add mov mov test jne lea mov inc inc cmp jb xor test je xor lea lea lea mov mov callq test jne add add cmp jb mov cmpl jne add mov mov addl lea mov mov mov mov mov pop retq int3 mov mov push push push lea sub andl andl mov mov xor lea and and lea xor xor and callq lea lea mov callq test jne xor callq lea lea mov callq test jne mov xor callq test jne mov callq mov and lea callq test jne mov lea mov callq mov test je lea mov xor mov callq mov test je mov lea mov mov callq test jne mov lea lea mov callq test je mov lea lea mov and xor xor callq mov test je mov mov callq test je or mov callq jmp mov jmp callq cmp jne mov callq callq cmp je mov test je callq mov test je callq test je xor mov mov callq lea mov mov mov mov pop pop pop retq int3 sub callq nop xor jmp mov add retq int3 jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq
 push mov sub push push push pop push xor lea push push call mov mov mov add movl movl mov movl movl cmp je push push lea push mov lea push push lea push pushl mov mov call mov cmp je cmp jne call sub cmp ja push pushl lea push push push call cmp jne cmp je mov movl jmp cmp jne lea push pushl pushl call cmp je testb je cmp jne push push lea mov lea push lea push push lea push pushl mov mov mov call cmp je cmp jne mov inc cmp jne addl cmpl mov jae addl testb je mov movl movl jmp cmp je push pushl call cmp je mov movl mov pop pop leave ret mov xor cmpl sete lea mov call mov jmp mov movl jmp call mov mov mov jmp mov mov jmp push mov and sub push push push lea push xor push mov call test je call jmp mov call mov mov cmp je push call pop mov cmp jne movl jmp or movb movl cmp je push push call push call push call push push push push push push call mov cmp je push pop push mov call mov movzwl push call mov mov jmp cmp je push call decb push push push push push lea push pushl call cmp jne mov mov push lea push lea push movb movl call lea add push xor call pop test je push lea lea pop mov add dec mov inc dec jne push push lea push mov lea push xor inc push lea push pushl movl mov call cmp je cmpl jne mov push pushl mov pushl movl call cmp je push push push lea push push mov call test jne lea push pushl pushl call cmp je testb je cmp jne push push lea push lea push push lea push pushl mov call cmp je testb je mov jmp call mov jmp orl movl jmp pushl mov pushl mov call pop pop test jne movl jmp mov cmpl je mov movl jmp add push push lea push call add cmp je cmpl movl jne orl movl cmpl jne orl movl jmp mov cmp je movzwl push push pushl call mov mov mov mov mov call mov call mov mov call mov lea push pushl pushl call add mov xor jmp xor cmp sete lea mov pushl call pop push pushl call pushl call pushl call cmp je mov cmp je pushl movzwl push push pushl call pushl call mov pop pop pop mov pop ret push mov push push push xor push mov call pop pushl mov call cmp jb push pop push pushl push call mov add push push push push mov call push pushl mov lea push call pushl call mov pushl pushl push call mov mov mov add mov mov mov lea push push push push push push movl movl call cmp jne pushl call xor jmp push call mov pop pop leave ret push mov pushl call push call pushl call xor pop ret push mov xor mov mov mov mov mov mov mov mov mov mov pop ret push mov mov test je push call pop mov mov mov mov call xor divl xor inc mov pop ret xor inc ret push mov mov xor cmp je cmpl je incl cmpl je cmpl jne incl mov cmpl jle incl mov mov cmp jne mov call pop ret push mov sub push mov test je andl cmpl je movzwl push pushl lea push push call lea push pushl push call add pop leave ret push mov and sub andl push push push mov mov test je push call pop mov call test jne xor jmp pushl mov mov lea call pop test je pushl lea push call lea call mov push call mov push push push pushl movzwl lea push push mov push call add mov test je xor inc mov mov jmp incl andl pushl call pushl call mov pop pop pop pop pop mov pop ret xor inc cmp je jmp ret push mov push push andl andl push mov lea push pushl lea call test je mov andl lea push pushl lea call pop pop test je cmpl je call cmp ja pushl mov pushl call mov test jne pushl call pop mov jmp pushl call pop xor pop leave ret push mov sub push mov push lea push mov call test je add push lea call neg sbb pop neg pop leave ret push mov push push mov xor jmp cmp je inc mov cmp jne cmp jne xor jmp inc push call mov and jns dec or inc cmp jne cmp jl cltd sub push mov sar cmp ja push push pushl call add cmp jle mov mov call cmp je mov add mov inc cmp jl xor inc pop pop pop pop ret xor jmp movl mov xor inc ret push mov push push mov orl cmpb push mov jne pushl call pop jmp movb xor pop pop pop pop ret push mov sub push mov mov pushl push push call mov add cmp jne push push push call mov cmp jne movb jmp push lea push push call add push pop lea mov mov mov mov mov xor push push push push push pop push push pushl call cmp jne pushl call andl movb jmp xor movb movl andl mov lea push lea push movb pushl mov call cmp je mov mov jmp cmp jne push push push call mov cmp je push lea push push call add push lea push push call movzbl add push mov lea push lea push call lea add push call pop push pop mov mov lea mov mov mov xor push push push push push pop push push pushl call cmp je xor movb movl andl mov lea push lea push movb pushl mov call cmp je mov mov mov movl jmp cmp jne movb movl xor pop leave ret push mov call lea push movl call mov pop ret push mov push mov call testb je push call pop mov pop pop ret push mov mov movl call lea push call mov pop jmp push mov mov push xor call test je push call pop mov mov mov mov mov mov mov push call movzbl mov call mov pop pop ret push mov push push mov call mov xor test je push call mov mov cmp jne mov cmp je inc cmp jb xor pop pop pop ret mov jmp push mov push mov xor call test je push mov call mov xor test je push mov call mov mov cmp jne mov cmp je inc cmp jb jmp xor inc mov call pop mov pop pop ret push mov mov call cmp jb xor jmp pushl call mov mov pop ret push mov mov call test je push mov call mov xor test je push mov call mov mov cmp jne mov cmp je inc cmp jb jmp mov call mov call pop pop ret add push call xor inc ret add push call ret push mov sub push push push call pop xor push push push push push push mov call mov cmp je push pop push mov call mov movzwl push call push push push push mov push lea push pushl call cmp je mov push push push push mov mov mov push push mov mov call mov cmp je push push call push pop mov mov push mov push lea mov push lea push push lea push movl movl mov pushl call cmp jne call cmp je push pushl call mov push pushl call pushl call push call pop mov pop pop leave ret mov call call mov mov ret jmp andl mov ret mov ret movl movl ret mov xor jmp add mov test jne ret push mov push push push mov lea xor jmp mov cmp jne push call pop mov cmp jne xor jmp pushl call pop mov mov mov cmp jne push call pop mov jmp mov push pushl mov mov pushl call mov mov add mov pop pop pop pop ret push mov push xor cmp je push mov cmp jae mov mov mov sub cmp jbe mov sub add push mov sub add push push call mov mov sub add add jmp mov mov pushl add call push call pop pop cmpl jne pop pop pop ret push mov mov call push call pop ret push mov mov push push mov push xor mov jmp mov cmp jae mov sub cmp jb push pushl push call mov add jmp push pushl push call mov add add add mov test jne cmpb je mov push call pop pop mov pop pop ret push mov sub push push mov push mov mov call xor mov cmp jne call jmp mov mov mov mov mov mov push mov call mov pop lea mov mov call lea call lea call test je mov call test je push pushl pushl call xor inc push mov mov mov call pop mov lea mov mov mov call test je mov mov call cmp jae lea call mov call test je mov call mov mov pushl lea pushl call push push lea push mov call pushl pushl mov mov mov push call lea call test jne xor lea call xor inc lea call test je cmp jne cmp je mov push push lea push call push push mov push lea push push lea push pushl call mov cmp je mov cmp jb cmp jne push lea mov call mov xor jmp call cmp jne mov cmp je push push push lea push push call mov cmp jne push lea push push call add lea push pushl pushl call cmp je testb je cmp jne jmp mov push push lea push call push push mov push lea push push lea push pushl call mov cmp je mov cmp jb cmp jne push lea mov call mov xor lea call test jne jmp call cmp jne mov testb je cmp jne push push lea push lea push push lea push movl pushl mov call cmp je mov mov cmp je push pushl lea call cmpl je jmp mov testb je cmp jne mov jmp cmp je cmp je cmp jne mov add call jmp pushl mov xor lea call cmp je pushl lea pushl call call test jne xor inc cmp jne lea call test jne mov jmp call mov jmp mov jmp xor cmp jne mov pushl xor pushl lea push mov mov call push pushl call pushl call pushl call pop pushl call pushl call pop lea call lea call mov jmp push call pop lea call lea call mov pop pop pop leave ret push call push push push push call andl mov mov ret push mov push call pushl call mov test je push mov mov mov test je push call pop push call pop test jne pop pop ret mov xor jmp mov mov cmp je add test jne ret push push call mov pop test je push push push call mov add test jne mov mov pop ret mov mov test jne mov jmp push mov push push mov push call call mov test je mov mov mov mov test je push call pop mov mov test je push pushl push call add mov jmp orl pushl call push call pop pop pop ret push mov push push mov call mov test je test je mov mov mov mov test je mov mov mov cmp jne andl mov test je mov push pushl pushl call add mov mov mov mov test je push call pop push call pop cmpl pop jne pushl call push call xor inc pop ret push xor push inc call cmpl jne pushl call xor push call mov pop ret push call pop mov test je push push push call add mov ret push mov sub push call mov cmp jb push push mov call push call mov mov mov sub add cmp ja push add add push push call xor add inc jmp pushl pushl lea pushl push push push call add xor pop leave ret mov mov add ret push pop ret mov add ret mov mov ret mov mov mov ret push mov mov mov mov mov mov pop ret push mov xor cmpl jb cmpb jne mov cmp je cmp je cmp jne cmp jne mov cmp jne xor cmpl sete cmp jne movzbl add xor cmp sete mov pop ret push mov and sub push push push lea call call xor cmp je call mov jmp mov mov cmp jne call mov cmp je push pushl pushl call cmp je push call pop mov mov call mov push call pop push mov mov mov call andl cmpl mov mov mov mov mov mov mov mov pop mov mov jne push mov call pop mov call mov xor push push push mov lea push push call xor cmp jne push lea push push call add lea push pushl pushl call cmp je testb je cmp jne cmp je push push push lea push push lea push pushl call cmp je mov cmp jb cmp jne mov jmp call cmp jne movl call mov mov cmp jne mov call test je lea lea push call mov add mov xor jmp xor testb je cmp jne mov cmp jne push push lea push mov lea push xor inc push lea push pushl call cmp je cmpl jne mov cmp jne mov jmp cmp jne lea push push lea push lea push push push pushl mov mov call cmp je cmp je call mov mov pushl lea pushl call lea call push pushl lea push push call add mov cmp je jmp call cmp jne lea call mov push push lea push mov call mov push lea call test je mov call mov push push call test jne mov call mov mov mov call push call pop test je push call mov pop test je mov push call pop push pushl mov push call add lea call mov mov xor push push push push mov mov call lea mov call mov andl mov push lea call push push push call push push lea call pushl mov mov call lea push xor push push push push push call push call jmp mov call lea call push push call test je push push lea call mov lea call push lea call push push mov call add call mov call lea call push lea call mov call cmp jae jmp push lea push push call add lea call mov mov testb je jmp cmp je cmp jne cmp je mov pushl call jmp mov call test je lea push lea call mov xor push push add push mov lea push push lea push pushl mov mov call cmp je mov cmp jb cmp jne and call mov mov jmp call cmp jne movl jmp call mov mov call test je mov xor call test je push mov call pushl call mov inc call cmp jb mov call jmp push call mov call test jne mov test je push call pop pushl call mov push pushl call pushl mov call push pushl call pushl call push call pop pushl call mov pop call pushl call pop mov test je mov push call lea call pop pop xor pop mov pop ret push mov and sub andl push push push mov mov mov lea push lea xor lea call mov lea push lea lea mov call pop test jne call mov mov mov pushl lea pushl push mov call cmpl je mov dec jne push call pop pushl call pushl mov pushl call lea call pushl call pop push call pop pop pop xor pop mov pop ret push mov xor cmp je cmpl jbe mov test js pushl mov mov call pop ret push mov push mov push push lea call pop test js mov mov pushl sub add mov call leave ret push mov xor test je cmp jbe mov test js mov push xor mov test je cmpb je inc dec jne test jne mov test je test js sub mov jmp andl mov pop jmp andl pop ret push mov push mov xor test je push mov push mov sub test je mov test je mov inc dec dec jne pop pop test jne dec mov movb pop pop ret push mov mov push pushl mov pushl pushl call add pop pop ret push mov push call mov call xor pop ret push mov mov mov test je pushl pushl pushl push call pop ret push mov push xor lea push push pushl mov push push push call push call leave ret push mov push mov test je cmpl je push push call mov test je push pushl push call push call pop push call xor pop pop ret push mov sub push push push mov pushl lea xor call pushl pushl call push call mov cmp je lea push mov call test je lea push pushl call inc push call pop pop mov pop leave ret push mov push mov mov call test je xor push push push mov push jmp xor push push push push push push call push call pop pop ret cmpl je pushl call pop cmpl je pushl call pop cmpl je push call pop ret push mov push push push push mov push push mov call mov movl test je mov call test je lea mov call test je mov cmpl jne pushl pushl call test je andl cmpl jne pushl mov pushl pushl pushl pushl call test je andl call mov xor call mov mov call push call mov pop pop pop leave ret movl mov xor inc ret movl mov xor inc ret push mov push push push xor call mov test je pushl pushl call push mov call pop mov pop pop ret add push call ret add push call ret push mov push mov call test je pushl call test je mov call pop pop ret push mov test je pushl pushl pushl call pop ret push pop pop ret push mov xor lea cmp jne cmpl jne inc add cmp jl mov pop ret pushl lea imul pushl imul pushl pushl push call jmp push lea call mov orl andl andl lea push call lea push call lea push call lea push call mov call mov mov pop ret cmpl jne mov call push push lea call mov pop lea push call lea push call lea push call lea push call lea pop jmp lea mov call test jne xor ret andl push lea push push call add push lea pop call neg sbb neg ret push call pop ret push mov sub push pushl lea push xor call test jne push push lea call push call mov pop test je mov push push call mov pop pop test je push push pushl call add mov push call pop pop pop mov pop leave ret push mov sub push push add push push mov call mov xor pop cmp je mov push mov mov mov push jmp lea push call pop test je incl lea push pushl call push pushl call incl push pushl mov lea call pop pop cmp ja xor cmp jle push call xor divl mov mov push call pop pop mov push call pop mov pop pop pop leave ret push mov sub push push push mov push xor call cmp jle push lea push call test jne push mov push lea mov call test jne push call mov pop test je lea push push call pop pop test je cmp jne push push mov pop lea movb call push push lea call jmp lea push push call pop pop test je mov lea push push call test jne push push mov call mov neg sbb inc push push mov pop lea call lea push jmp push push pushl call push call pop pop mov pop pop leave ret push mov sub push push mov push mov push call push pop lea push pushl mov call push call dec jne pop pop xor pop leave ret mov test je push push call test je xor inc ret pushl call push push push push push push call mov ret push mov sub push push lea push push pushl xor push push call cmp jle lea push call pop cmp je mov shr push mov shr mov and push mov shr and push movzbl push push pushl call add inc mov pop leave ret push mov sub mov push push push push xor call pop pushl movzwl mov push lea mov call lea call mov push call lea mov cmp jl cmp jle cmp jne cmpb jne pushl mov push call jmp mov cmp jne pushl lea push call pop pop test je mov push push call mov neg sbb inc mov pop pop pop leave ret push mov push pushl mov pushl call test jne pushl pushl call pop pop test je xor inc pop pop ret push mov and sub andl push push push mov mov call test je mov test je call mov test je mov call push call pop call test je mov call jmp xor mov test je mov call test je incl lea call cmp jne andl incl pushl lea call pushl lea push call lea push push push call test je mov call push lea call movzwl pop lea push mov mov lea call lea call mov push mov push xor call test je lea push lea push lea push mov call test je mov mov call mov mov call mov call mov call mov call mov call mov test jne mov test je mov call push call pop andl mov call mov pop pop pop mov pop ret push mov push push mov push pushl xor call pushl mov call lea push call mov pop test je pushl pushl push push call mov add push push call push mov call pop mov pop pop pop pop ret andl mov call test je movl ret push push mov mov call mov test je mov call push call pop pop pop ret add push call xor inc ret add push call ret add push call ret add push call ret add push call xor inc ret add push call ret push mov push mov xor call test je push mov test je mov call cmp je cmp je call test je mov jmp mov test je push call mov call pop mov pop pop ret push mov sub push push pushl xor mov mov mov mov call lea push call pop mov cmp je xor inc push pushl mov pushl mov mov mov call add mov call test je lea push lea call pop xor cmp setne mov mov call cmp jne pushl call pop mov pop pop leave ret push mov push pushl call pop pop ret push mov push push push pushl call pop pop ret push mov push push pushl mov pushl call test je push call xor inc pop pop pop ret push mov push push pushl xor call add push call mov pop test je pushl pushl pushl push push call mov add push push call push mov call pop mov pop pop pop ret push mov sub push push xor mov push mov mov mov mov call pop mov cmp je push push pushl xor inc push mov movl movl call mov add mov mov cmp je pushl call lea push call pop mov cmp je pushl mov push call mov mov mov call test je lea push lea call pop xor cmp setne mov mov call cmp jne cmp je pushl call pop cmp je pushl call pop pop mov pop pop leave ret push mov pushl pushl pushl pushl call test je pushl call xor inc pop ret push mov sub push mov push mov xor call test je lea push mov xor call test je push mov call pushl call pop mov inc call cmp jb mov call mov andl push push lea call pop pop test je mov lea push call inc push call mov pop test je lea push push movb call inc push mov call push mov call incl mov push pushl lea call pop pop test jne mov call orl xor mov inc call pop mov pop pop leave ret push mov xor lea cmpl je inc add cmp jl jmp mov imul add push imul mov mov mov mov mov mov pop xor inc pop ret push mov push push mov push pushl mov call inc mov cmp jbe xor jmp push pushl lea push call add pushl call inc cmp ja push pushl lea push call add pushl call inc cmp ja push pushl add push call xor add inc pop pop pop pop ret mov ret push mov push push push xor push mov call mov cmp je pushl mov pushl push call push mov call pop pop mov pop pop ret push mov push push push xor call mov test je pushl pushl call push mov call pop mov pop pop ret push mov push push push xor call mov test je pushl pushl call push mov call pop mov pop pop ret push mov push push push push xor call mov test je push push pushl pushl pushl call push mov call pop mov pop pop pop ret push mov push push push push xor call mov test je pushl pushl pushl call push mov call pop mov pop pop pop ret push mov sub cmpb je or leave ret xor inc cmpb je cmp jge mov mov inc cmpb jne movb lea push call leave ret int3 push mov sub push push mov lea movsl movsw push pop xor lea rep stos lea push movl call test je mov cmp jne push jmp cmp jne push jmp cmp jne push jmp cmp jne push jmp cmp jne push jmp cmp jne push jmp cmp jne push jmp cmp jne push jmp cmp jne push jmp push push mov pop lea call push push lea call pushl lea push push pushl pushl push pushl call add xor pop inc pop leave ret push mov cmpl pushl jne pushl pushl pushl call add jmp cmpl jne pushl pushl pushl push pushl call add jmp pushl pushl pushl pushl push pushl call add xor inc pop ret push mov pop jmp push mov pop jmp push mov mov push xor cmp je push call pop mov mov cmp je cmp je push mov call pushl mov pushl push call add xor inc pop pop ret push mov push push push push call push xor call pop mov mov test je mov lea push call mov lea push call mov add lea push call lea push call mov pop test je lea push pushl lea push lea push push push call mov pushl imul mov push pushl add movzwl push push add push call mov push mov call add push pop cmp sbb neg jne mov pushl call andl pop push call mov pop pop leave ret push mov push push push pushl pushl call pop ret push mov push push mov cmpl je xor jmp push push push pushl pushl call pop pop pop ret push mov push push mov cmpl je xor jmp push push push pushl pushl call pop pop pop ret push mov push push mov cmpl je xor jmp push push push pushl pushl call pop pop pop ret push push xor call mov call cmp ja inc pop mov pop ret push mov cmpl push jne push call pop mov mov test jne xor jmp mov push call pop xor test setne mov mov pop pop ret movl mov ret movl mov ret movl mov ret push mov sub push push push mov push call lea push xor lea push mov mov mov mov call test je mov mov lea push pushl lea mov mov call test je mov call test je pushl call test je xor inc cmp jne mov call test jne cmp jne mov movl cmp je pushl push call mov pushl call pop pushl call pop cmp jne movl push call mov pop pop pop leave ret mov ret push mov sub push mov push call cmpb je xor jmp push xor cmpb je inc cmpb jne inc xor jmp cmp jae mov inc inc mov cmp jne add push mov lea push movb inc call test jne xor jmp cmp jae mov inc inc mov cmp jne mov add push lea push movb inc call test je pushl call xor pop pop leave ret xor jmp cmp jae mov inc inc mov cmp jne mov add push lea push movb inc call test je xor pushl call mov jmp xor jmp cmp jae mov inc inc mov cmp jne lea push movb call cmp jg lea push pushl call xor inc jmp movl mov xor inc ret mov test je pushl push push call add ret push mov push mov push push push call push call pop test jne xor mov call push call pop mov pop pop pop ret mov call test jne mov jmp mov xor mov call cmp jne call test je cmp jne mov test je push pushl push call pushl call inc cmp jl push call jmp mov jmp jmp push call cmpl je xor cmpl sete ret push mov push push push call xor lea push push push push push push movl mov call mov push mov call mov pop leave ret push call mov cmp je cmp jne andl push pushl call pushl call andl push call ret push mov mov cmp sbb neg pop ret push mov sub push push mov push xor push push pushl mov push call test je lea push lea push mov mov mov call test je mov mov lea push pushl lea mov mov call test je pushl mov mov call mov test je mov lea mov push mov call mov test je lea push pushl xor push pop call test je push lea call pop lea movzwl call mov push mov push push pop call mov pushl call pop mov mov mov lea push pushl lea call test je pushl mov mov call mov test je mov lea mov push mov call mov test je lea push pushl xor push pop call test je push lea call pop lea movzwl call mov push mov push push pop call mov pushl call pop pushl call pop pop pop mov pop leave ret push mov push mov xor lea mov cmp jbe push push cmpb jne cmpb jne add lea cmp jae xor inc sub lea sub add cmpb jne cmpb jne lea mov mov inc dec jne inc lea cmp jb pop pop mov leave ret push mov cmpl push push mov mov je xor inc jmp andl cmp jae xor jmp jne mov cmp je cmp jne cmpb jne cmpb je push call test jle sub push lea push push push pushl pushl call add mov mov pop pop pop ret push mov mov push mov push mov call test jne push pop jmp test jne and movl xor jmp cmp jne push movl call add test je mov push push call test je movl jmp mov mov test je lea push pushl push pushl push call test jne movl pop pop ret push mov andl call pop ret push mov and sub push push push call push call pop mov test je mov push call pop mov test je lea push push call lea push push lea push lea push pushl movb pushl call add test je movzwl push push pushl lea pushl push push call add mov mov mov movl test jne cmpl jae pushl call movzwl push push pushl pushl push lea push call add add incl mov test je cmpl je mov call test js pushl mov mov mov call mov jmp push pop jmp movl mov jmp mov pushl call pop jmp call mov pushl call pop jmp call mov push call pop mov pop mov pop ret mov ret push mov sub push mov cmp je xor jmp push xor cmp je inc cmp jne inc xor jmp cmp jae mov inc inc mov cmp jne mov add push lea push movb inc call test jne xor jmp cmp jae mov inc inc mov cmp jne mov add push lea push movb inc call test jne xor jmp cmp jae mov inc inc mov cmp jne inc cmpl movb je pushl lea push call test je xor jmp xor jmp cmp jae mov inc inc mov cmp jne mov movb test je lea push call mov xor inc pop pop leave ret push mov push andl lea push pushl pushl pushl call mov leave ret push mov push push push lea mov push push movb call mov test jne xor jmp lea dec mov xor jmp cmpb je dec cmp ja cmpb jne inc push call mov push call pop mov mov test je mov push mov mov push push call mov add sub lea mov pop pop leave ret push mov pop jmp push mov sub push push push call lea push push call andl push movb call add mov test je lea push lea push pushl lea push lea push push push call mov push call mov add test je movzwl push push push pushl push lea push call add mov cmp jbe lea push push push mov call cmp jbe pushl mov pushl call mov push call pop pushl call pop push call mov pop pop leave ret push mov push lea xor push inc mov call pushl mov call xor div xor push inc mov call pop pop pop ret push mov push push mov push pushl mov call inc mov cmp jbe xor jmp push pushl lea push call add pushl call inc cmp ja push pushl lea push call add pushl call inc cmp ja push pushl add push call xor add inc pop pop pop pop ret push mov imul push pushl lea push lea call test jne mov mov xor inc jmp xor pop pop ret push mov push push push pushl call pushl mov xor call pushl mov call lea push call mov pop test je pushl pushl push push call mov add push push call push mov call pop pushl call mov pop pop pop pop ret push mov pushl push pushl call pop ret push mov push push push push push call mov andl lea push lea call push mov call add lea push call pushl add call lea push call mov pop test je lea push pushl lea pushl push lea push push push call add call test je movzwl push push push lea push call mov jmp xor test je mov call test je push pop mov call mov test jne call push call pop push call pop push call mov pop pop leave ret andl andl xor inc ret xor mov mov mov mov mov mov movl call mov cmp je push call mov ret push push mov push xor call push call mov pop pop test jle push call ret push call pop ret push mov sub push push mov pop lea call mov pushl mov mov mov mov mov lea push pushl call leave ret push mov sub push call andl cmpl lea push lea je pushl pushl push lea push lea push push call add jmp pushl push lea push lea push push call add push call test je push lea push movzwl push lea push call mov jmp xor test je mov call test je push pushl mov call pop test je mov mov call call mov test jne call push call pop push call mov pop leave ret push mov pop jmp push mov test je push mov sub mov mov mov mov inc dec jne pop pop ret mov imul add mov shr ret push mov push push lea push call test je mov xor xor mov call movzwl shl call movzwl or leave ret push mov sub push mov push lea push xor lea push push lea push push pushl mov push mov call cmpl ja call cmp jne mov add push push call pop mov lea push lea push push lea push pushl pushl push call push mov call pop pop mov pop pop leave ret push mov push push push lea push push pushl xor call test je push mov lea push push push push pushl mov call call cmp jne push pushl call mov pop cmp je lea push pushl push push pushl call test je pushl pushl call pop pop mov push call pop pop pop mov pop leave ret push mov pushl call push call pop pop pop ret push mov sub push lea push push xor call push call test je lea push push push movl call test je push push push lea push push pushl movl call mov pushl call mov pop leave ret push mov sub push lea push push xor call push call test je lea push push push movl call test je push push push lea push push pushl movl call mov pushl call mov pop leave ret push push mov pop sub cmp ja movsbl sub jmp lea cmp ja movsbl sub jmp lea cmp ja movsbl sub mov sub shl cmp ja movsbl sub or pop ret lea cmp ja movsbl sub jmp lea cmp ja movsbl sub or pop ret or pop ret push call jmp cmpb je dec jns ret movb ret cmpb jne cmpb jne cmpb jne cmpb jne cmpb jne cmpb jne cmpb jne add ret push mov jmp test je inc mov cmp jne test je inc cmpb je push call test jne mov pop ret push mov sub testb jne orl push push call push call mov lea push pushl call lea push lea push call mov leave ret push mov sub lea push call lea push call pop leave ret push mov push xor cmp je push push call cmp je add decl jne mov mov jmp xor jmp test je inc inc mov cmp jne push lea cmp jae xor jmp push push push call add movb mov pop pop pop ret push mov push xor cmp jbe sub mov cmp jne inc inc cmp jb xor inc pop pop ret xor jmp push mov push push pushl pushl call mov test je push push pushl call mov test je push pushl call mov push mov call mov mov xor inc pop pop pop ret call test je call push xor pop div lea ret call push xor pop div lea ret push mov push xor cmp jle call mov mov inc cmp jl pop pop ret push mov push push push xor push push push push push push pushl call mov cmp jne xor jmp push lea push pushl mov pushl push call push call xor inc pop pop leave ret push mov sub push push push xor push push movl call mov lea push push call mov jmp push lea push call test jne pushl push push call test jne lea push push call test jne jmp mov push call cmp je push call pop pop mov pop leave ret push mov push andl lea push push push push push pushl call mov leave ret push mov push xor cmp je push pushl push push call mov cmp je push lea push push push mov call mov test je pushl call pop pushl mov call push call pop pop mov pop pop ret call push call pop ret call push call pop ret push mov sub push push push pushl xor mov call lea lea push call mov pop cmp jne xor jmp cmp jle mov sub mov mov add dec jne xor movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp je add push pushl lea push mov call test je lea push lea push push pushl push push push push push push pushl call test je cmp je push lea push pushl call add jmp pushl mov call pushl call movl pushl call push call mov pop pop pop pop leave ret push mov push xor call test je pushl pushl pushl push call add mov mov pop pop ret push mov push xor call test je pushl pushl pushl push call add mov mov pop pop ret push mov push push orl push push pushl call mov xor cmp je push lea push call pop mov cmp je push push push call add push push push pushl push pushl push push call test je pushl call mov pushl call pop pop mov pop pop leave ret push mov sub push xor push lea push push mov call add lea push lea push push pushl movl call test je or jmp mov mov mov push call mov pop leave ret push mov sub push push lea push push pushl xor push push call cmp jle lea push call pop mov mov pop leave ret call xor mov div lea ret push push xor xor mov push call lea lea inc cmpw jne mov pop pop ret push mov push xor cmpl lea je push call decl lea cmpw jne xor pop pop ret push mov push xor cmp jbe call mov mov inc cmp jb pop pop ret call xor push push push push push push call xor ret push mov push pushl call mov pop ret push mov push push lea push push push pushl pushl call mov test jne pushl push pushl call add push pushl push push pushl pushl call pushl mov call mov pop leave ret push mov sub push lea push push call add lea push movl call mov leave ret xor mov mov mov mov ret mov test je push call pop ret push push call mov pop test jne pop ret mov test je pushl push push call pushl call add xor mov mov inc pop ret push push mov mov mov test je lea call pop pop ret push mov jmp mov call test je mov add cmp ja mov add push pushl push call add mov add cmp jbe mov mov pop ret xor jmp push mov push xor xor cmp jbe mov mov mov xor inc cmp jne xor inc cmp jb pop pop ret push mov pop jmp push mov sub push mov lea push pushl pushl call add test jle push lea push lea push call add xor mov inc mov inc cmp jl lea push lea push push call add dec jne pushl lea push pushl call add pop leave ret push mov push push push pushl mov push lea push call push pushl add push push mov call add pop pop pop ret push mov and sub push mov mov and sub add lea push mov cmp jbe xor jmp push push call pushl lea pushl mov push call mov mov sub mov movzbl add push pushl lea push call add lea push lea push xor inc mov call lea push lea call add pushl lea pushl mov push lea push push call mov add pop pop mov pop ret push mov push pop pop jmp push mov and sub push push cmp jae xor jmp test jne lea cmp jb lea push lea push mov mov call lea push lea call mov mov add push add push lea push lea push push mov call movzbl mov sub add sub pop pop mov pop ret push mov push mov lea call pushl mov pushl mov pushl xor mov mov mov call mov mov pop pop ret push mov pop jmp push mov push mov push xor push push push push mov mov mov mov call mov cmp jne xor jmp push push push push call mov cmp jne push call jmp pushl lea push call mov pushl mov mov mov call lea push call pop mov cmp jne cmp je pushl call pop pushl mov call pushl call jmp pushl mov push call xor inc mov pop pop pop ret xor xor call test jne inc cmp jl jmp xor inc mov ret push mov sub lea push push call pop pop movb call push lea push push pushl call add call test jne inc leave ret push mov push push lea push lea push push pushl movl call orl push lea push push pushl call xor inc leave ret int3 int3 push mov push push push pushl mov push push call add push pushl call mov pushl pushl call push pushl call push call pushl mov pushl lea push call mov add pop add pop pop ret push mov pushl push pushl call add pushl call pop ret push mov push push mov push push xor inc mov test je push call pop mov mov add je lea push call pop test je push call pop mov test je andl mov mov mov lea push mov sub push mov add call pop pop test je add incl mov add cmpl jl lea push mov add push call add pop pop test jne mov andl test je push call pop andl mov pop pop leave ret mov test je cmpl je push call pop cmpl je mov test je push call pop push mov call mov call pushl mov call pushl call pushl call lea pop jmp push call pop ret cmpl jne push pushl call neg sbb inc ret xor inc ret movl mov ret push mov sub cmpl push push mov movb mov je push push call pushl push call push push call push push call pushl lea push push call add lea push push call push push call xor pop inc pop leave ret push mov sub push mov push xor push push push lea push pushl movl mov mov mov mov mov mov mov mov mov call test je xor push inc xor mov cmp jbe mov cmp je mov sub mov cmp jae mov lea push mov push add push pushl call add cmp jb cmp jne xor jmp push push push pushl call pop pop pop leave ret add jmp add jmp push pushl call neg sbb inc ret mov ret push xor cmp jne push push push push push call mov cmp je movzwl push push push push push push lea push push call mov cmp jne call pushl mov call push call mov pop ret push mov mov push mov test je push call mov test je push call pop pop ret push mov sub push mov call test jne call jmp movzwl xor mov push mov mov cmp je mov cmp je mov cmp jne mov push push push push push pushl push pushl call mov cmp je test je push call pop push call mov lea push pushl mov call add test jne call jmp push push call push push pushl call test jne call push mov call pop jmp push call pushl mov pushl push call add test jne call push mov call mov jmp push push lea push push mov call test je pushl call pop mov cmp je lea push pushl mov push push call jmp mov cmp je pushl lea call test je lea push pushl pushl pushl call xor test jne jmp movl xor pushl call pop push lea push lea push push pushl movl call test je lea push call mov pushl call mov pop pop leave ret push mov sub andl push push push pushl mov call cmp jge xor jmp lea push call mov pop test je push push push call mov add call mov push push call mov test je sub push push push call push mov call movzwl add mov call push call mov imul push call mov pop test je pushl mov push call push pushl pushl push pushl push call push mov call add push call pop mov pop pop pop leave ret push mov and sub push push xor push pushl lea pushl pushl call lea call test je mov lea call test je lea call test je lea call cmp jne lea call cmp je cmp jb push lea call push pushl call add lea call mov lea call mov pop pop mov pop ret push mov sub push push xor mov mov call test jne call jmp movzwl mov mov mov cmp je mov cmp je mov cmp jne mov push push push push push pushl push pushl call mov cmp je test je push call pop push push push push pushl call test jne call pushl mov call mov jmp push push lea push pushl mov call test je pushl call pop mov cmp je lea push pushl mov push pushl call jmp cmp je pushl mov lea call test je lea push pushl pushl pushl call xor test jne jmp movl xor pushl call pop push lea push lea push push pushl movl call test je lea push call mov pushl call mov pop pop leave ret push mov cmpl je call pop ret call pop ret push mov push push mov push mov call xor xor mov cmp jle cmpl je mov call cmp jge mov call cmp jne push call mov call inc add mov cmp jl mov test je pushl pushl push call add pushl mov call cmpl je call push call pop jmp pushl call mov pop pop pop pop ret push mov push push mov xor lea push push push push push push mov call mov cmp je inc mov pop leave ret push mov push pop movl call pop ret push mov andl call pop ret cmpl jne push push push call mov test jne ret incl xor inc ret push mov pushl push pushl call pop ret push mov pushl pushl push pushl call pop ret push mov pushl push pushl call pop ret decl jne mov test je push call ret push mov sub push push xor push mov mov push push push push push push push call mov mov cmp jne push call incl cmpl jl xor jmp push lea push push pushl mov push call test jne push call jmp mov mov mov call mov jmp cmp jne call sub cmp jae push call push lea push push pushl pushl call mov cmp je pushl call mov cmp jne mov pop pop pop leave ret push mov sub push xor push mov mov mov mov cmp jne push pop jmp push mov push call pop mov cmp je push call pop mov cmp jne pushl call pop call jmp cmp je mov mov call mov cmp je push mov call push push pushl pushl pushl call mov push lea push pushl pushl pushl call test je mov cmp jne push lea push push pushl pushl call test jne pushl call pushl call pop pop pushl call pushl call pushl call cmp je push call pop xor pop pop pop leave ret push mov push push lea push call lea push push pushl call add mov pop pop pop ret push mov sub lea push mov call test jne mov jmp mov call cmp jne push push push xor mov call push push mov push push push push push lea push call mov cmp je push push call cmp jne call sub neg sbb inc je push call mov pop cmp je mov mov lea push push push push push push mov movl mov call cmp je push jmp push call pop push call mov call cmp je pop pop pop xor leave ret movl mov ret mov ret mov ret mov ret push add push call xor inc ret cmpl jne jmp ret push call pop ret push mov push xor lea push push push push push push movl mov call mov leave ret push pushl call ret push mov mov sub push push push mov pop lea rep xor add mov movzbl mov shl movzbl or mov shl movzbl or mov shl movzbl or mov inc add cmp jl push pop lea push mov mov mov rol mov shr ror xor xor mov rol mov rol xor shr xor add add add add dec mov jne mov xor mov mov ror mov rol xor and mov ror xor mov mov not and and xor mov add add mov add add add ror rol xor mov ror xor mov xor and xor add mov mov mov mov mov mov mov mov mov mov mov add add mov mov cmp jl mov push lea pop mov sub pop mov add add dec jne pop pop leave ret andl andl movl movl movl movl movl movl movl movl ret push mov push mov jmp mov mov decl mov incl inc cmpl jne push call addl andl pop cmpl jne pop pop ret push mov mov mov shl add movb incl mov cmp jb jmp movb incl mov cmp jb push call andl pop jmp mov movb incl cmpl jb push pop movb inc cmp jl push pop mov push pop sub shl shr inc mov cmp jl push call pop xor or sub mov sar mov and shl shr mov mov inc cmp jl pop ret push mov and sub push lea call pushl mov lea call pushl call pop pop pop mov pop ret push mov sub push push push mov pop lea call pushl lea push call test jns xor jmp andl mov push mov push jmp lea push call mov cmp je cmp je lea push push call mov test jne jmp add cmpb je mov add cmp jae inc cmpb jne cmpb jne push push mov pop lea inc call pushl lea push call push push call mov push push call mov test je mov sub inc mov test je lea push call add mov mov test je cmpl je mov cmp jb lea push push push call add movb jmp andl mov pop pop pop leave ret push mov push push push push lea push lea push push pushl xor mov mov call add test jne xor jmp pushl mov pushl call test je lea mov cmp je push call pop mov mov mov lea push call pop pop leave ret push push call pop xor pop movb inc ret push mov sub push lea call test jne xor jmp lea push call cmp jl lea push push lea push call movzbl push movzbl push movzbl push movzbl push movzbl push movzbl push movzbl push movzbl push movzbl push movzbl push movzbl push movzbl push movzbl push movzbl push movzbl push movzbl push push pushl call xor add inc pop leave ret push mov sub push push lea push movl call lea push call pop test je lea push lea push movl call test jne movw mov lea push xor call test jle lea cmpb jne movb cmpb jne movb cmpb jne movb cmpb jne movb cmpb jne movb cmpb jne movb cmpb jle movb cmpb jge movb lea push inc call cmp jl lea push pushl lea pushl pushl push mov add push push call xor add inc pop pop leave ret push mov push push lea push call lea lea cmp ja push push pushl call add mov jmp xor pop pop pop ret push push push mov push lea push mov push call test jne push call test jne xor jmp lea push call inc push push mov push call test je xor inc pop pop pop ret push mov push mov call mov lea mov add mov mov mov xor inc pop ret push mov sub push push push push pop cmp jne mov mov push push call test jne pushl mov pushl call jmp push push call test jne pushl mov pushl call jmp push push call test jne pushl mov pushl call jmp push push call test jne and push call mov pop test je mov push call test je pushl mov push mov call pop pop test je lea cmp ja movb mov push call pop mov jmp push push call test jne pushl mov call jmp cmpb jne mov cmp jne cmpb jne cmpb jne pushl mov pushl call jmp cmp jne cmpb jne cmpb jne pushl mov pushl call jmp jbe mov mov cmp jne cmpb jne cmpb jne cmpb jne lea push lea xor push lea lea mov mov mov call pop pop test je pushl mov pushl mov pushl call mov call mov cmp je pushl pushl pushl pushl push call add xor pop pop pop leave ret mov cmp jne cmpb jne cmpb jne cmpb jne xor cmpl jb mov mov test je mov mov mov mov mov mov mov mov lea push pushl lea push pushl push call add mov push pushl call pushl call jmp cmp jne cmp jne cmpb jne cmpb jne xor cmp jb mov mov mov call mov mov mov jmp cmp jne mov cmp jne cmp jne cmpb jne pushl mov pushl mov mov call jmp cmp jne cmp jne cmpb jne xor cmpl jb mov pushl mov call mov push mov pop jmp cmp jne cmpb jne cmpb jne cmpb jne mov mov xor test je pushl add push pushl push call add cmp jb mov mov movl mov jmp cmp jne cmp jne cmpb jne cmpb jne pushl mov pushl push call mov call jmp cmp jne cmp jne cmpb jne cmpb jne pushl mov add push push xor call mov call cmpl jb push pop jmp cmp jne cmpb jne cmpb jne cmpb jne push xor call mov pop test je mov push call test je pushl mov push mov call pop pop test je lea cmp ja mov mov push call pop mov jmp movl mov xor inc ret movl mov xor inc ret push mov push push mov andl andl push mov push lea push pushl lea call mov test je mov call test je pushl lea xor push mov inc call mov call pushl mov pushl push call mov pop pop leave ret push mov push push lea push call mov test je mov push pushl inc call test jns mov push pushl call push pop mov pop pop pop ret push mov push push lea push call mov test je mov push pushl inc call test jns mov push pushl call push pop mov pop pop pop ret push mov push push lea push call lea push push pushl call add pop mov pop pop ret push mov push push mov xor call test je pushl lea xor push mov inc call mov mov call mov pop pop pop ret push mov sub mov andl andl push push push mov lea push pushl lea call mov test je mov call test je pushl lea push mov push pop call mov call pushl mov pushl push call pop pop mov pop leave ret push mov push push mov xor call test je pushl lea push mov push pop call mov mov call mov pop pop pop ret push mov mov sub push push push mov lea push pushl lea mov xor call test je mov call cmp jbe pushl mov pushl call mov pushl call pop test jne mov lea push pushl lea call test je mov call cmp jbe pushl mov pushl call mov pushl call pop test je mov call mov pop pop mov pop leave ret push mov push push mov push mov call pop mov test jne xor jmp push push pushl call mov add mov test jne pushl call andl pop jmp push pushl call test jne pushl call andl andl pop jmp mov mov push mov lea push push call xor add inc pop pop pop ret push mov push push mov push mov call pop mov test jne xor jmp push push pushl call mov add mov test jne pushl call andl pop jmp push pushl call test jne pushl call andl andl pop jmp mov mov push mov lea push push call xor add inc pop pop pop ret push mov push mov xor call test je pushl lea push mov xor call mov mov call mov pop pop ret push call pop ret push mov pop jmp push mov push push lea push call mov pushl andl andl mov mov mov mov mov mov push push mov mov pop call lea push call mov call mov mov pop pop pop ret push mov sub push push push xor mov mov call test je lea mov mov cmp je push call pop mov mov mov mov lea push call test jne call mov test je mov andl andl lea push pushl lea mov call mov test jne mov mov lea push pushl lea call mov test jne call test je mov lea push pushl lea mov call mov test jne mov lea push mov pushl lea call mov test je mov push lea push mov xor call mov call pushl mov push push call add push call pop mov call mov pop pop pop leave ret push mov sub andl push push mov call test je mov push call andl andl mov pop test je push mov push push call mov test je lea push push lea mov call mov push call cmpl pop jne mov push call push lea push xor inc inc call mov jmp pushl lea xor push mov inc call pushl mov call pop mov call mov pop pop leave ret push mov sub andl push push push mov call test je mov push call andl andl mov pop test je push mov push push call mov test je lea push push lea call mov push call cmpl pop jne mov push call push lea push push inc pop call mov jmp pushl lea push mov push pop call pushl mov call pop mov call mov pop pop pop leave ret push push push mov call test jne xor jmp call test je call jmp xor mov test je call mov mov call mov mov call mov call test je mov call test je push push lea call call test je mov call neg sbb neg pop pop pop ret mov ret cmpl je lea test je push call pop push mov test je mov call push call pop lea push call lea pop jmp add push call xor inc ret add push call ret push mov push push mov mov mov andl add push push cmp jae cmp jbe mov call test je lea push lea push push mov pop call mov test je mov mov push push call push push push mov call add mov call mov pop pop leave ret push mov push push mov mov mov andl add push push cmp jae cmp jbe mov call test je lea push lea push push mov pop call mov test je mov lea push lea push mov call push push push mov call add mov call mov pop pop leave ret push mov pushl call inc cmp ja push mov pushl add push call add pop ret push mov pushl call inc cmp ja push mov pushl add push call add pop ret push mov pushl call inc cmp ja push mov pushl add push call add pop ret movl mov xor inc ret push mov sub push push mov pop lea call call pushl lea push mov call pushl lea push call pop pop leave ret push mov imul push lea mov xor cmp jge pushl shl add push lea call incl xor inc pop pop ret push mov push push push lea push xor push push pushl mov pushl pushl call mov add cmp je push push call mov pop cmp je lea push push push pushl pushl pushl call add test je push call mov mov pop mov push call push call pop pop mov pop pop leave ret imul andl ret push mov mov mov call mov jmp pushl mov pushl sub add push push pushl call test jne inc pop ret imul mov ret push mov imul add push shl push lea mov mov push xor mov sub lea test je mov test je mov inc dec jne test jne dec mov movb test jne push call inc jmp xor pop pop pop pop ret push mov push push xor push push push pushl pushl pushl call mov add cmp je push push call mov pop cmp je push push push pushl pushl pushl call add cmp je pushl pushl push push pushl call mov push call pop pop pop mov pop pop ret push mov xor test je test je push push push push push pushl call test je push push push push push pushl call test je push push push push push pushl call pop ret push mov movzwl cmp jae xor pop ret push lea push pushl call movzwl add pop ret push mov movzwl push lea movzwl mov cmp jae xor jmp push lea push pushl call movzwl add pop pop ret push mov movzwl lea movzwl push lea movzwl cmp jae xor jmp push lea push pushl call movzwl add pop pop ret push mov cmpl jae xor pop ret mov mov movzwl mov mov mov xor inc pop ret push mov cmpl jae xor pop ret movzwl push lea mov add cmp jb xor jmp test je dec movzwl lea mov lea jne push mov movzwl add inc push call pop mov test je movzwl push push push call movzwl add mov push mov call add mov test jne pushl call pop xor jmp pushl add push push call xor add inc pop pop pop ret mov ret push mov movzwl push lea mov cmp jbe xor jmp lea movzwl cmp ja lea movzwl cmp ja push add push pushl call add mov pop pop ret push push push push push call push push call test je push push call push push call push call lea mov mov ret push mov call mov mov pop ret add push call ret push mov sub push lea call push mov push call mov xor call test je lea push push mov call mov mov call mov movl pop leave ret ret push mov push push push push mov xor push push mov push mov call cmp jne push call pop mov test je push push push call cmp jne mov push mov call pop mov pushl call pop mov pop pop leave ret push mov sub push push push mov cmp jae xor jmp lea lea push push push mov call add push lea lea call pop test je mov add call andl test je jmp mov movzwl cmp jae mov push add lea push push call mov add movb mov lea sub add add mov cmp ja mov push push lea push call test je add add mov cmp jb xor inc pop pop pop leave ret push mov sub push push push xor push push push push push push pushl call mov cmp je push push call mov cmp jbe cmp je push call pop mov cmp je push lea push push push pushl mov call test je cmp jne pushl call mov pop cmp je mov push push pushl xor inc call add cmp je pushl mov call mov push call pop pushl call pop pushl call pop mov pop pop leave ret push mov sub push mov push push lea call xor mov mov cmp jle mov imul add push call add incl lea mov cmp jl push call pop mov mov test je mov mov xor mov mov cmp jle mov imul add push call movzwl push mov add push push mov call add mov mov pushl add pushl push call add add incl mov cmp jl mov mov mov lea mov sub push push push mov call push lea push push call addl xor add inc pop pop pop leave ret push mov sub push push push lea push lea xor push mov mov mov mov call test je mov lea push call pop mov cmp je push push pushl mov call mov add cmp je push push push push push push pushl call mov cmp je push lea push push pushl mov push call test je cmp jne movl push call pushl call pop pushl call pop mov pop pop pop leave ret push mov sub push lea call push mov push call mov xor call test je lea push pushl call mov mov call mov pop leave ret lea push call push lea pop jmp push mov push push push push mov mov push call mov test je push call pop mov mov pushl push push call neg sbb neg pop pop pop ret push mov pushl pushl push call pop ret push mov sub push push lea push push call add pushl call inc push pushl lea push call mov lea push add call add pop leave ret push mov push mov imul add mov test je push call pop push call pop mov test je push pushl mov push call xor add inc pop pop ret push mov push mov xor call test je pushl mov call cmp jne pushl push call cmp je pushl mov push mov call mov mov call test je cmpl je push call mov mov pop pop ret push mov push push mov push lea call mov xor test jle mov pushl imul add push call test je inc cmp jl or pop pop pop pop ret mov jmp push mov push mov imul add cmpl mov je cmp jae xor jmp push pushl pushl call mov add pop pop ret push mov push mov xor call test je pushl mov call cmp je pushl pushl push mov call mov mov call mov pop pop ret add push call xor inc ret add push call ret push mov sub push xor push xor inc push mov mov mov and movsbl neg sbb and lea xor mov mov xor and inc cmp jl mov mov mov and movsbl neg sbb mov add and xor add and cmp jl movb movb mov shl lea sub mov mov sar lea or and xor mov sar add or and xor mov add sar or and xor mov sar add or xor and xor mov mov inc cmp jl xor movzbl mov and movsbl neg sbb and lea xor and mov xor shl xor shl xor shl xor mov mov rol mov rol mov rol mov movzbl test je mov add mov cltd idiv mov mov jmp andl movzbl test je mov add mov cltd idiv mov mov jmp andl movzbl test je mov add mov cltd idiv mov mov jmp andl movzbl test je mov add mov cltd idiv mov jmp xor shl xor shl xor shl xor inc mov rol mov mov rol mov rol mov cmp jl pop pop pop leave ret push mov push cmpl push push push mov jne call movl mov lea xor movl mov add movzbl movzbl shl or movzbl shl or movzbl shl or mov inc add cmp jb mov sub je dec dec je dec dec jne and mov mov movzbl movzbl and movzbl shl xor movzbl movzbl shl xor movzbl movzbl shl xor mov xor mov xor addl xor mov mov xor mov mov mov xor mov movzbl movzbl movzbl movzbl shl xor movzbl movzbl shl xor and movzbl shl xor xor mov xor mov mov xor mov xor mov mov add cmpl jb jmp xor mov mov movzbl movzbl and movzbl shl xor movzbl movzbl shl xor movzbl movzbl shl xor xor mov xor add xor mov mov xor mov mov xor mov mov xor mov xor mov mov add cmp jb jmp xor mov mov movzbl movzbl and movzbl shl xor movzbl movzbl shl xor movzbl movzbl shl xor xor mov xor add xor mov mov xor mov xor mov mov add cmp jb pop pop xor pop leave ret push mov sub push push push pushl mov lea lea movl mov call pop test jne mov shl add push mov mov pop add mov add mov add mov add mov add mov add mov mov add dec sub jmp mov movzbl movzbl movzbl movzbl mov xor movzbl movzbl xor mov and movzbl xor add mov add decl jne dec sub test jg mov mov add mov add mov add add mov mov mov push mov lea push push call add xor pop pop pop leave ret push mov sub movzbl push push movzbl shl or movzbl push movzbl movzbl shl or movzbl shl or movzbl shl or movzbl mov mov shl or movzbl shl or movzbl shl or movzbl shl or movzbl shl or xor movzbl xor xor mov movzbl shl or movzbl movzbl shl or shl or xor mov add cmpl mov jne mov sar dec mov mov test jle mov shr and shr and mov xor mov shr xor mov and xor mov xor shr mov mov and shr and mov xor mov shr xor mov and xor mov xor shr and mov mov shr and mov xor mov shr xor mov and xor mov xor shr and shr and mov mov mov xor shr xor mov and xor mov xor shr mov shr and mov and xor mov shr xor mov and xor mov xor mov shr mov and mov shr and xor mov shr xor mov and xor mov shr and mov shr and xor mov shr xor mov and xor mov xor xor mov mov shr shr and mov and xor mov shr xor mov and xor add xor decl cmpl mov mov jg mov shr and shr and mov xor mov shr xor mov and xor mov xor shr mov mov and shr and mov xor mov shr xor mov and xor mov xor shr mov mov and shr and mov xor mov shr xor mov shr and xor mov xor and shr and mov xor mov and shr xor xor mov xor shr and movzbl mov shr movzbl shl xor mov shr and movzbl shl xor mov and movzbl shl xor xor mov mov shr and movzbl mov shr movzbl shl xor mov shr and movzbl shl xor mov and movzbl shl xor xor mov shr and mov movzbl mov shr movzbl shl xor mov shr and movzbl shl xor mov and movzbl shl xor xor mov mov mov shr and movzbl shr movzbl shl xor shr and movzbl shl and movzbl xor shl xor xor jmp mov sar dec mov mov test jle mov shr and mov mov shr and xor mov shr xor mov and xor mov xor shr mov mov shr and mov and xor mov shr xor mov and xor mov xor shr mov mov shr and and mov mov mov xor mov shr shr xor mov and shr and xor mov mov xor and xor mov shr xor mov and xor shr xor mov shr and mov and xor mov shr xor mov and xor mov xor mov mov mov shr and shr and mov xor mov shr xor mov and xor mov shr shr and mov and xor mov shr xor mov and xor mov xor xor mov mov shr and mov shr and xor mov shr xor mov and xor add xor decl cmpl mov jg mov shr and mov mov shr and xor mov shr xor mov and xor mov xor shr mov mov and shr and mov xor mov shr xor mov and xor mov xor shr and mov mov shr shr and mov xor and mov shr shr xor mov and mov xor mov shr xor mov and xor and xor xor xor mov shr and movzbl mov shr movzbl shl xor mov shr and movzbl shl xor mov and movzbl shl xor xor mov mov shr movzbl shl mov shr and movzbl xor shl mov shr and movzbl xor mov shl and movzbl xor xor mov mov mov shr and movzbl shr movzbl shl xor shl mov shr and movzbl xor mov shl and movzbl xor xor shr movzbl mov mov shr and movzbl shl xor mov shr and movzbl shl and movzbl xor shl xor xor mov mov mov mov mov shr mov mov mov shr shr mov mov mov mov shr mov mov mov shr shr mov mov mov mov shr mov mov mov shr mov mov shr mov mov shr mov pop shr shr mov pop mov mov xor pop leave ret push mov sub test je push pop leave ret cmpl push push push jne test je mov mov mov sub lea shr mov inc mov pushl mov lea movsl movsl movsl push pushl movsl call mov add push pop mov mov xor inc dec jne mov addl subl dec lea movsl movsl movsl movsl mov jne jmp test je mov sub lea shr inc mov mov mov mov push sub pop mov xor mov inc dec jne push pushl mov pushl call mov addl addl movsl movsl movsl add sub decl movsl jne pop pop xor pop leave ret push mov sub push mov push push mov push xor lea push lea push mov sub push lea sub push mov mov mov mov call test jne call call cmp jne push push push push lea push call test jne xor jmp lea push push push pushl xor pushl pushl call test je lea push push push push pushl mov call test je push push pushl pushl call test je push push pushl pushl pushl pushl call mov pushl call pushl call push pushl call mov pop pop pop leave ret push mov sub call cmp jae xor inc leave ret push push xor cmpl mov mov mov mov mov jae mov mov push mov push push push lea push call test je xor jmp push push push lea push call test jne push pushl lea pushl mov push push push pushl call test jne mov push lea push push lea push push pushl mov mov mov call test jne pushl call mov pop cmp je push lea push push lea push push pushl call test jne pushl call mov pop mov cmp je push push push pushl lea push push pushl mov call test jne push pushl pushl pushl call test jne push pushl push pushl call test jne push pushl pushl pushl push push pushl call test jne movl jmp mov mov cmp je push pushl call cmp je push pushl call cmp je pushl call cmp je pushl call cmp je push call pop cmp je pushl call pop mov pop pop pop leave ret push mov mov push lea cmp pop jbe xor pop ret sub sub push lea push push add push pushl pushl call add pop ret push mov mov push push pop mov call add dec jns mov pop pop ret push push push lea pop sub mov call dec jns pop pop ret mov xor mov mov mov ret push mov call pop ret push mov push mov cmpl push mov je call mov and add push mov call pop mov test je push pushl push call mov add mov call pop pop pop ret push mov sub push lea call pop push lea push lea push call mov mov add push push lea push lea push push call add neg sbb inc leave ret push mov push push call push add push call add xor inc pop ret push mov and sub push mov xor call test je push lea call push lea push lea push call mov mov push push lea push lea push push call add mov neg sbb inc mov pop mov pop ret push mov and push mov push cmp jae xor jmp call test je pushl pushl pushl call add mov call mov pop pop mov pop ret cmpl je pushl call pop andl andl andl ret push mov pushl imul add call pop ret push mov pushl imul add call pop ret push push mov xor push mov test jne push call mov inc pop test jne xor jmp mov shl push call pop mov test jne test je push call pop jmp andl movl mov pop pop pop ret test je mov ret xor ret mov push mov add imul push pushl call pop pop test je mov mov mov pop ret push mov test jne or pop ret push mov cmp jb call cmp jbe incl mov dec jmp or pop pop ret push mov test je cmpl je push mov call mov cmp je mov push imul add pushl push call add mov pop pop ret or pop ret test je mov cmp jae lea cmp je mov sub dec imul push mov push lea imul imul add push add push call add pop decl mov ret or ret test je andl ret push mov test je mov call pushl call cmpb pop je push call pop pop ret push mov test je mov cmp jae cmp jae mov push mov mov imul mov imul add add call mov pop pop ret xor pop ret push mov push mov test je cmpl je mov cmp ja jne pushl call pop xor cmp setne jmp mov call cmp je push mov sub cmp jb push lea mov mov mov imul add push push mov imul add push call add dec dec cmp jae pop mov push imul add pushl push call add mov pop jmp xor pop pop ret mov movl call mov mov ret push mov push mov call testb je push call pop mov pop pop ret push add pop call neg sbb neg ret cmpb movl je push push lea call pop pop ret push mov push lea push lea call pop xor cmp setne pop pop ret push mov lea push pushl lea call pop pop pop ret push mov mov imul add pop ret push mov pop jmp push mov pushl add pushl call pop pop pop ret push lea call pop ret add jmp add jmp push call pop ret mov ret push mov xor call dec je push mov call mov call xor div cmp je push push mov call mov inc call dec cmp jb pop pop ret push mov push mov mov push push push mov lea mov andl add mov mov sub mov mov cmp jb mov cmp jbe movzbl sub lea cmp jb mov sub cmp jb mov sub lea cmp jb mov mov inc inc dec jne jmp mov sub cmp jb movzbl inc cmp jae test jne jmp add inc cmp ja mov sub cmp jb cmpb je movzbl lea inc mov sub lea cmp jb mov sub lea cmp jb mov mov push pop add add dec je cmp jb mov mov sub add add cmp jae test je mov mov inc inc dec jne jmp mov mov inc inc dec jne movzbl inc cmp jae movzbl shl mov sub shr sub sub inc cmp jb cmp jae mov sub cmp jb mov mov mov mov mov mov add jmp mov movzbl and je mov sub cmp jb mov sub lea cmp jb mov mov inc inc cmp jbe mov mov inc inc cmp jbe mov mov inc inc movzbl inc cmp jb mov shr and mov sub movzbl shl sub dec shr inc dec cmp jb cmp jae mov sub lea cmp jb mov mov mov mov add add mov mov inc inc dec jne jmp cmp jb and jne jmp add inc cmp ja mov sub cmp jb cmpb je movzbl inc sub lea cmp jb mov movzwl shr lea sub add jmp mov cmp jb mov and shl sub and jne jmp add inc cmp ja mov sub cmp jb cmpb je movzbl lea inc mov sub cmp jb mov movzwl shr sub add cmp je sub cmp jb cmp jae mov sub lea cmp jb cmp jb mov sub cmp jl mov mov push pop add add sub mov mov sub add add cmp jae test je mov mov inc inc dec jne jmp movzbl shl sub shr sub dec inc cmp jb cmp jae mov sub cmp jb mov mov mov mov add jmp push sub mov pop mov pop pop pop leave ret sub mov mov mov sub cmp sbb and add neg sbb and jmp push jmp push jmp push mov push andl push lea push call test jne leave ret xor cmpl setne leave ret push call test je xor inc pop ret call pop ret push mov and push mov push call mov jmp call test jne call sub cmp jb xor pop pop mov pop ret xor inc jmp push call pop ret push mov sub push push xor push push push call mov cmp je push lea push push call add push pop mov mov mov push lea push push mov call cmp jne call push mov call push call or jmp mov pop pop leave ret push mov push pushl push pushl pushl pushl call xor cmp setne mov pop ret push mov sub push lea push push call push pop mov mov mov mov mov lea push pushl pushl pushl call xor add cmp setne mov leave ret push mov sub xor mov div push xor mov movl mov mov mov cmp je imul mov lea push push push lea push push call cmp jne call jmp cmp je pushl pushl push pushl pushl push call mov cmp jne mov jmp xor jmp mov pop leave ret push mov sub lea push lea push push pushl movl push pop call add leave ret push mov sub push push mov lea push xor push push push push call cmp jne pushl call pop lea push push push push push mov call cmp je mov pushl call pop mov pop pop leave ret mov mov mov mov jmp mov cmp je mov cmp je mov mov mov mov mov inc mov cmp jne mov mov mov cmp jne jmp push pop jmp push mov sub push push push lea call mov call test jne call xor inc pop pop pop leave ret push call push lea call lea xor call test je push lea call pushl call mov pop test je cmp je push push push call push mov lea push push call add push pop push mov mov call mov push lea push push call push mov call test je lea inc call cmp jb xor jmp xor inc lea call mov jmp push mov sub push push pushl call mov test je cmp je push push push call push mov lea push push call add push pop push mov mov call mov push lea push push call push mov call xor test sete jmp xor pop pop leave ret push push push call mov movzwl push call movzwl push call pop cmp jne xor cmp jne call movzwl push call movzwl push call inc pop cmp jl cmp jne mov cmp jne push call movzwl push call pop inc mov cmp jb pop pop pop ret xor xor mov mov mov mov mov mov movl ret mov ret push mov mov mov mov pop ret push mov push push push push movl call xor test jle cmpw je inc cmp jl cmp jl cmp je lea lea push call movzwl mov test je lea push call mov pop test je push push push call add xor push mov call mov pop cmp jne push call pop mov push call jmp push call mov pop cmp jne push call mov pop test je cmp je pushl call movzwl push mov mov call xor inc jmp xor pop pop leave ret mov ret cmp jbe add ret lea ret push mov push push mov push mov cmp jbe mov movzwl push call movzwl cmp ja mov cmp je movzwl push call movzwl add sub add cmp ja xor pop pop pop pop ret mov jmp push mov pushl call movzwl push movzwl push call movzwl lea call pop pop ret push mov sub lea push lea push pushl movl call test jne mov leave ret xor leave ret push mov push push andl push push lea push mov mov lea call pop test je pop pop leave ret push call pop test je mov ret xor ret push mov sub push push mov xor cmp je cmp je cmp je mov mov movl mov call mov shr mov not shl xor mov xor mov mov mov movl cmpl je mov decl call pushl mov pushl mov pushl push pushl call add test je mov call cmpl mov mov jbe mov sub add lea push lea push mov mov push pushl call mov add test jne mov test je cmp jne mov test je cmp jne cmpl jb push call mov cmp jne mov cmp jne mov cmp jne mov cmp jne mov cmp jne movzwl push call cmp jae mov call mov sub cmp jb cmp je mov jmp mov jmp xor jmp push pop pop pop leave ret push mov sub push push mov xor push mov cmp jne push pop jmp mov push mov call mov mov xor mov movzwl push push lea push push push push push lea lea call test jne push lea call mov pop test jne push jmp movzwl push call cmp jb cmpb je mov jmp movzwl mov mov test je cmpl mov mov je movl xor jmp push lea call pop test jne push call pop test je mov movzwl push mov mov call push call pushl movl call movzwl pop cmp jne lea push lea call pop test je cmp jne xor cmp jbe mov mov cmp je inc cmp jb mov push call push mov call push mov movl call push mov call pushl mov pushl lea push movzwl push push pushl lea push lea call test jne lea call mov cmp jne movl jmp mov push movl call push mov call push mov movl call push mov call pushl mov pushl lea push movzwl push push pushl lea push lea call test jne movl jmp cmp jne push call pushl call push call pushl mov pushl xor mov lea push push pushl lea pushl lea pushl call test jne push lea call mov pop test je movzwl push call cmp jb cmpb jne mov mov cmp jne movzwl test je cmp je movl jmp push call push call push call push mov call push mov movl call push mov call push mov mov push lea push movzwl push push push push lea lea call test jne lea call mov cmp jne movl jmp cmp jne movl jmp mov pop pop pop leave ret push lea call mov pop ret add jmp add mov call movzbl ret push mov sub push push xor lea mov call call mov mov cmp jne call jmp lea call lea mov mov call test je cmpl jae pushl lea call mov lea push call test je pushl lea push call test je incl incl lea call cmp jb jmp lea call mov lea call mov pushl call mov neg sbb and add pop pop leave ret mov ret push push push lea mov call call mov xor test jle push call pop test je push mov call test je inc cmp jl call xor inc pop pop pop ret xor jmp push mov sub push push push lea xor call mov call test je mov call test je xor cmp mov sete push call test jne push lea push push call add push pop mov mov call mov cmp je cmp je push push mov push call add push lea push push call add lea call mov lea call pop pop mov pop leave ret push mov sub push push push xor push push push push push mov call mov cmp je push push push push push push call mov cmp je mov push lea push push call add lea push push lea push push mov call test je push lea push push call add push pop mov lea push call mov cmp je cmp je push push mov push call push lea push push call add movl push call pushl call mov pop pop pop leave ret push mov and cmpl jne push call pop xor test setne mov mov mov test jne movl call mov test je push push pushl call add test je mov mov mov mov pop ret cmp jne mov ret cmp jne mov ret cmp jne mov ret cmp jne mov ret cmp jne mov ret cmp mov je mov ret push mov xor push pushl movl mov mov mov movl mov call mov add je push lea push call push push push mov call push pushl pushl call add mov push call mov add je lea push call lea push push push mov call push push pushl call pushl call add mov test je pushl push push call add movb pop mov pop pop ret push mov mov test je push call pop mov test je push call pop mov test je push call pop pop ret push mov sub push push lea push pushl pushl call test je xor jmp andl mov lea movsl lea mov movsw lea mov sub mov pushl mov lea mov lea movsl movsl movsl push movl movsl call pushl call mov pop pop leave ret push mov push mov mov xor shr push je mov cmpw je inc cmp jb jmp lea mov mov mov add mov add cmp jae call test je mov mov mov add push pushl push call mov add mov pushl mov mov mov pushl add push call mov mov mov add add pop pop pop ret mov push push mov add push call cmpl pop mov je add pushl push push call mov sub push pushl push call pushl call add mov mov jmp xor pop pop ret push mov sub push xor push push push push lea push lea push push pushl mov movl call test jne push push lea push mov pushl lea push pushl lea movl call add lea test je mov add lea jmp mov add lea push call incl push push push push lea push lea push pushl movl pushl call test je pop pop pop leave ret andl andl ret call xor mov ret xor cmp setne ret push mov push mov test je andl lea push push call test je cmpl je pushl call andl andl mov leave ret push mov mov test je push call pop push call pop mov test je push pushl mov push call xor add inc pop ret push pushl call pushl call ret push mov sub push xor push cmp je mov call mov lea push pushl call test je mov pushl mov mov mov call xor inc pop mov pop leave ret cmp jne add ret cmp je cmp jne add ret cmp jne add ret xor ret push mov push andl push mov call cmp jne movl lea call cmp jne movl lea call cmp jne movl lea call pop cmp jne movl mov leave ret mov call lea call lea call lea call mov ret push mov cmp je cmp je xor jmp mov call mov pop ret push mov pushl pushl call call pop ret push mov mov push xor cmp jb mov push pushl pushl call add mov pop pop ret push call pop ret push mov mov sub je dec jne pushl call pop jmp call xor inc pop ret incl xor inc ret push mov push pushl call cmp jne push push mov push xor mov jmp pushl call push push push pushl call push push push pushl call cmp jne pop pop pop xor inc pop ret push mov sub push mov push push call cmp jne lea push push call mov cmp jne push call push call push push push push call xor jmp xor inc pop leave ret push mov push push mov push push call mov mov push push call mov test je andl push push push call cmpl je call push mov call mov sub xor mov div cmp jb jmp push push push call push call push push push call pop pop xor pop leave ret push mov push push xor lea push push push push push push mov call push call xor cmp pop setne leave ret push mov push mov mov add cmp jbe push mov mov add push pushl call pop pop test je add mov mov add cmp ja pop mov mov mov add add mov test je sub mov mov inc dec jne pop pop ret push mov andl push movl add push push pushl call pop ret push push push mov push call add push movl call pop ret push push push pushl call add ret push push push pushl call add ret push xor call test je call test je call test je inc mov pop ret push mov push push push lea push lea push push pushl xor mov mov call add test je cmpl jne mov push push push call push add push push call xor add inc mov pop leave ret push mov push mov call xor pop pop ret push mov push mov call xor pop pop ret push mov push mov call xor pop pop ret push mov push andl lea push push pushl pushl push push call test je push call leave ret push push push mov call lea lea push call pop test je cmpw jne movzbl push movzbl push movzbl push movzbl push push add push call add xor inc pop pop pop ret push mov sub push push mov call lea xor cmp ja cmp je inc jmp mov lea push lea push mov mov mov mov call test je pushl mov pushl call pushl mov call pop mov lea push lea push mov mov call test je pushl mov pushl call pushl mov call pop cmp je cmp je xor inc call mov pop mov pop leave ret push mov sub push mov xor push mov mov mov mov call lea cmp ja test jne mov call mov push lea push lea push call test je pushl mov pushl call pushl mov call pop call cmpl mov je mov call mov pop pop leave ret push mov pushl pushl push pushl call add pop ret push mov sub push push push mov mov push pop call mov xor mov mov call test jne lea push lea push mov push mov mov call mov test je pushl mov call pushl call pop jmp push push pushl call mov call test je call test jne push pushl mov call mov mov pop pop pop leave ret push cmpl jne call pop ret xor inc pop ret push push call mov pop test je push push call mov pop ret push push call mov pop test je push push call mov pop ret push mov and sub andl andl push push push mov push call mov mov neg sbb and pop mov push mov call push add lea call call mov mov test je push call add push call push call pop mov push push pop lea call mov push call push add lea call call cmpl mov je push call pushl add call pushl call pop push push pop lea call push lea call cmpb je mov call mov mov push mov call push add lea call mov test je push call push lea call cmpb je mov call mov mov push mov call push add lea call mov test je push call mov test je mov push pushl push pushl call mov lea call lea call mov mov pushl mov call pop pop mov pop pop mov pop ret push mov push call pushl call neg sbb and add pop ret push mov push push xor cmp je xor inc jmp push lea push push push push push push mov call mov cmp je push call xor cmp setne pop pop leave ret push mov sub push push mov push lea push movl call cmpl jae xor jmp mov push pop call mov xor mov mov call test jne lea push lea push mov push mov mov call mov test je pushl mov call pushl call pop jmp push push pushl call mov xor call test je call test jne call mov push mov pushl mov call mov mov jmp movl cmpl je test je movzwl push lea push push call add lea push push pushl call mov call mov pop pop pop leave ret push mov sub xor push mov push mov mov mov cmpl jne cmpl je call mov add cmp jbe push movl call mov andl andl lea push lea push call test je pushl mov mov call test je movl call mov pushl call pop incl cmpl jl cmpl jne cmpl je push push pushl call xor cmp je mov call mov test jne push push pushl call mov pop pop leave ret push mov sub push mov lea push pushl mov pushl call test jne push pop jmp call test lea jne push jmp push push push pushl call mov movl xor pop leave ret push mov push pushl xor call pop mov cmp je push pushl mov mov push call pop pop pop cmp jbe inc jmp pushl call pop mov mov pop pop ret push mov mov push push mov call pop mov test je pushl xor push pushl call add mov test jne pushl call and pop jmp xor inc mov pop pop ret push mov and sub mov andl push push cmp jae sub testb lea mov mov jne mov lea push mov push call lea push push call lea push xor push push push call pushl lea pushl push call add test je testb push lea push push je call jmp call mov add mov pop pop mov pop ret push mov sub push mov push push lea push pushl mov pushl call test je pushl xor pushl lea mov call pop pop test je pushl mov mov mov lea lea movb call pop test je mov mov andl andl lea push pushl lea call test je mov mov call test lea push push lea push pushl jne movw jmp movb call push call pop jmp lea push push lea push pushl movw call pushl call pop jmp lea push push lea push pushl movw call pushl call pop mov pop pop movl xor pop leave ret push mov sub mov push push xor mov mov call mov push push push mov call mov mov cmp je push call pop mov cmp je push mov push pushl call mov mov cmp je pushl mov pushl mov call test je mov xor cmp setne mov pushl call pop mov cmp jne cmpl jge mov lea push lea push pushl call test je mov mov mov mov push pushl call test je pushl mov pushl pushl call xor cmp setne mov pushl call pop incl cmpl je mov pop pop leave ret push mov push mov push push test je mov push pushl call test jne cmpl jne mov push mov call pop test je push push call push push call push push call push pushl call test jne pushl push pushl call push pushl call test jne pushl push pushl call mov push pushl call test jne pushl push pushl call pop pop pop pop ret push mov mov push push mov push pushl push pushl call test jne pushl call jmp call mov pop pop pop ret push mov push push push push call mov pushl mov mov mov call pop xor pop pop pop ret push mov sub push push push mov mov mov mov call xor mov mov movl cmp jne movl cmp jne movl mov call test jne mov mov cmp jne lea push lea push push call mov cmp jne lea push lea push push call mov cmpl je pushl mov call pushl call mov pop jmp push pushl pushl call mov call test je call test jne cmp jne mov mov cmp jne mov mov push pushl mov call mov cmpl je movzwl push lea push push call add lea push pushl pushl call mov pop pop pop leave ret push push call pop ret push push call pop ret push mov sub push mov lea push pushl mov pushl call test je mov call test lea je push jmp push push push pushl call mov movl xor pop leave ret push mov sub push mov lea push pushl mov pushl call test je mov call test lea je push jmp push push push pushl call mov movl xor pop leave ret push mov sub push mov lea push pushl mov pushl call test je push push lea push pushl call call mov movl xor pop leave ret jmp push mov sub push mov lea push pushl mov pushl call test je call test lea je push jmp push push push pushl call mov movl xor pop leave ret push mov sub push mov lea push pushl mov pushl call test je mov call test lea je push jmp push push push pushl call mov movl xor pop leave ret push mov push push mov call pop pop pop ret push mov sub push push mov call mov call test je push push call cmpl mov jne mov call push push push call test je call mov lea push call pop push push push lea push push lea push push push call test jle lea push push push call mov call test jne push push call mov call test jne push push call call mov call pop pop leave ret push mov push mov test je pushl push pushl call pop pop ret push mov push push push push push xor call pop mov test je mov push call test je push call mov pop test je mov push call pop push mov pushl call push call mov pop lea push push call pop movb pop lea push push lea push mov call mov pushl call pop pop mov pop leave ret push mov push push push mov test jne push pop jmp push lea push mov call test je mov mov call test je mov call test je mov call test je mov call test je mov call test je mov push push push call mov push push push call mov push push push call mov push push push call mov push push push call mov push push push call mov push push push call mov mov call call mov call test je call test je mov call lea push pushl call mov call test je mov call xor jmp mov pop pop pop pop ret push push xor push push call cmp je push call inc mov pop ret push push push call neg sbb neg ret push push push call test je call jmp xor mov mov test jne xor jmp mov call test jne mov mov call push call pop jmp call xor inc pop pop pop ret mov push mov test je call push call pop pop ret push mov and sub push push push lea push push call test je xor jmp call test je call test jne call mov mov lea push lea xor push mov mov call test je cmpl mov mov mov jb push jmp push call pop test jne mov xor cmp je mov call test jne call jmp call cmp je mov call jmp xor mov push mov call mov pop test je push push pushl call add mov call test je pushl push push pushl pushl push mov call jmp xor push push push mov call add push call pop mov test jne call jmp mov call test jne mov call push call pop jmp call test je mov call jmp xor xor mov cmp jne mov mov cmp je call push call pop mov mov cmp je call push call pop jmp mov call mov mov mov mov mov call test jne mov mov cmp je mov call push call pop mov mov test je jmp call cmp je pushl mov call jmp xor mov mov cmp je call test jne push call pop mov mov test je jmp pushl mov pushl mov pushl mov push call test jne mov cmp je push call pop jmp call lea push push push push push push mov call mov cmp jne call jmp call test jne push pushl call call mov cmp je push jmp xor inc pop pop pop mov pop ret push mov pushl call pop ret push push push pushl call call mov mov test je call push call pop mov mov test je call push call pop call pop pop jmp jmp add push call xor inc ret add push call ret push mov jmp cmp je add mov test jne pop ret xor inc pop ret push xor cmp je mov mov mov test je inc lea cmpl jne pop ret push mov jmp cmp je add mov test jne pop ret pop jmp push mov xor jmp add cmp jne mov mov mov pop ret push mov pushl push push call test jne pop ret push call xor inc pop ret push mov sub push xor push push lea push lea push push push mov mov mov mov lea push pushl pushl call test jns xor jmp mov leave ret push mov sub pushl lea call pop pushl lea pushl pushl push push push pop call add leave ret push mov sub pushl lea call mov pop mov add push push pushl lea push add push call add leave ret push mov push xor push pushl push push push push call mov cmp je push push push push push call mov cmp je pushl pushl push call add pushl pushl call cmp jne pushl call pushl call mov xor pop pop ret push mov pushl call pushl pushl call pushl call pop ret push push lea mov cmp jae push push call test je inc cmp jb pop lea pop ret push mov lea jmp cmpl je inc cmp jb pop ret mov mov pop ret push mov and sub push push push pushl xor pushl lea pushl lea mov mov call mov add cmp jne xor jmp push pushl lea push call add lea push pushl pushl call add call mov mov push call pop push push push push push push pushl mov call mov cmp jne lea push lea push push push push push push push push pushl call test je mov push call lea push pushl pushl pushl call mov add call pushl mov push pushl call cmp je push pushl call test je push pushl call pushl pushl push pushl call add pushl xor inc call mov pop pop pop mov pop ret push mov mov test jne xor jmp lea push lea push push pushl pushl call add pop ret push mov push pushl call pop pop ret xor ret push mov push push push push call mov xor test jne pushl push push call mov inc test je mov push call mov test je push call mov pop pop pop pop pop ret push mov pushl call pop test je mov pushl mov call neg sbb pop inc pop ret push mov pushl mov call pop pop ret mov cmpl je push xor pushl call pop test jne mov pushl call pop jmp add mov cmpl jne pop ret push mov push push push mov push push movl call test jne push push call test jne push push call test jne push push call test je mov call test je pushl push call test je pushl push call mov test je pushl mov call mov call mov pop leave ret push mov sub push push lea push lea call push lea lea push push call mov mov push push lea push lea push push call push lea call push lea push push call mov mov push push lea push lea push push call add xor pop inc pop leave ret push mov push push push push mov lea push mov call push call pop mov test jne push call xor jmp pushl call mov pop test je mov shl push mov call pop mov test jne push call pop jmp pushl pushl push call add pushl pushl push call mov mov add lea push pushl mov push call add test je push call pop pushl jmp mov push pushl mov push call add pushl push push call mov shl add push mov call pop mov test je mov mov lea push push push mov call mov add push mov call pop xor call mov inc cmp jb xor call mov inc cmp jb call test jne pushl jmp mov push push call mov push call push push mov call push call push push mov call push call mov call push mov call xor inc pop pop pop pop pop ret push mov sub push push mov push mov call push push call mov lea push push movl call jmp pushl lea call lea push push call test jne cmp je push call pop pop pop leave ret push call ret push mov mov call push call jmp xor push push push push push push call mov ret push mov cmpl push pushl push je call jmp call add pop ret push mov and sub push push mov xor call test je lea push pushl call test je lea push lea push pushl pushl pushl call add pushl mov mov call cmpl je push lea push pushl call add jmp pushl mov call pushl call mov call pop mov pop mov pop ret push mov push push push mov test je mov mov rep pop pop pop leave ret push mov push push push mov test je mov mov rep pop pop pop leave ret
 mov mov mov push push push push push sub mov mov mov mov mov mov callq xor mov mov mov cmp mov lea cmove cmp jbe cmp je add add cmp jb jmp mov cmp jne mov jmpq mov xor mov mov mov callq lea movl mov mov mov callq mov mov mov mov mov mov callq mov callq mov add mov mov cmp jne jmp callq mov callq mov callq mov mov mov cmp jne mov callq lea xor mov callq lea lea lea mov mov mov mov callq lea lea callq mov lea lea mov lea lea lea mov callq mov callq mov mov mov mov callq mov lea mov callq lea mov mov mov mov mov mov pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 test je push push push push push sub mov mov mov cmpl mov jle mov jmpq mov callq lea mov callq cmpb lea je callq cmpl lea mov mov jle callq mov mov mov mov callq jmpq incl callq mov mov mov callq mov cmp je mov mov mov mov callq lea callq decl lea mov mov callq jmpq callq cmpl lea mov mov jle callq mov mov jmpq incl callq mov lea lea callq cmpl jne mov mov mov mov mov mov mov mov mov mov mov mov mov movzwl movzwl add add callq mov mov callq testb je testb je movzwl mov mov jmp xor xor test jne test je mov testb je orb mov movzwl mov mov movzwl mov mov mov mov callq mov cmp je mov mov callq mov callq lea callq decl lea mov mov callq mov cmp je mov mov mov callq add sub jne add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 mov mov push push push push push sub mov mov mov mov mov mov cmp jne xor jmpq cmp jne mov jmpq cmp je add callq cmpb lea mov mov jne callq mov jmpq callq cmpl jg mov lea xor mov mov mov mov mov mov mov callq cmpb mov jne mov lea jmp cmpl jle cmp jne lea mov movb callq jmp cmpb mov lea je movb callq mov lea lea callq mov cmp je lea mov mov callq mov mov mov mov add pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push push push sub mov mov mov mov mov mov cmp jne mov mov lea mov mov mov callq mov jmpq add callq cmpb lea mov mov jne callq jmpq callq cmpl jg mov mov mov mov lea movl mov mov mov callq cmpb mov jne mov lea jmp cmpl jle cmpb jne lea mov movb callq mov jmp cmpb mov lea je movb callq mov lea lea callq mov cmp je mov mov mov mov movb mov mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 rex sub mov mov mov cmp jae movl jmp mov mov mov cmp jle cmp je mov mov andl mov movl jmpq cmp jne cmp jle mov cmp jle cmp jne movb mov andl cmpb jne mov cmp je mov xor xor callq mov callq mov mov jmp mov mov mov movl mov andl add pop retq int3 int3 int3 int3 int3 int3 int3 mov push sub mov mov callq cmp je lea jmp mov mov mov callq lea mov callq add pop retq int3 int3 int3 int3 int3 int3 int3 sub cmpl mov jne cmpl jne mov mov mov mov mov mov mov callq jmp mov add retq int3 int3 int3 int3 int3 int3 int3 mov push sub mov lea mov callq cmpq lea mov je mov cmp je cmpq mov jne jmp mov mov mov mov mov callq mov callq subl mov jne mov mov movl callq mov test je callq andq mov callq andl mov mov mov callq cmpq je lea callq mov lea callq cmpl jne lea xor callq mov mov andq mov test je callq andq mov test je callq andq xor xor mov callq mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov rex.w int3 int3 int3 int3 int3 int3 int3 int3 int3 sub andl mov xor callq xor add retq int3 int3 int3 int3 int3 int3 sub callq mov add rex.w int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push sub xor mov lea lea mov mov mov lea mov mov lea mov mov callq cmp jne mov lea lea mov movl callq cmp jne mov lea mov movzwl add mov callq mov cmp jne movl jmpq mov xor callq mov mov movzwl mov mov movzwl mov mov mov lea mov mov movzwl mov callq mov add callq mov mov mov mov mov mov mov add movl callq cmp jne mov mov mov mov add movl callq cmp jne mov mov mov mov mov lea mov lea lea mov lea mov movl mov callq cmpl mov jne add xor callq mov mov mov cmp jne mov mov mov mov movb mov add callq mov mov lea callq mov mov mov cmp je mov callq mov cmp je cmp je cmp je add callq mov lea mov callq mov mov cmpl mov jne add xor callq mov cmp je mov callq mov cmp je mov callq mov xor xor callq lea mov mov mov mov pop retq int3 int3 int3 int3 int3 int3 mov mov push sub mov lea mov callq cmpb movb mov mov lea jne movb callq lea mov mov callq jmp callq cmpb jne mov lea callq test jne mov jmp lea xor callq mov test je callq mov test je movl jmp cmpq je lea callq mov mov callq cmpl jne lea xor callq mov mov andq jmp movl xor xor mov callq mov mov add pop retq int3 int3 int3 int3 int3 int3 int3 sub mov test je lea callq andq add retq int3 int3 int3 int3 int3 int3 int3 int3 mov add rex.w int3 int3 int3 int3 int3 int3 retq int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov xor mov mov mov cmp je cmp jne mov mov mov mov mov mov mov mov mov callq jmpq cmp jne cmp jne mov cmp jb mov mov mov mov mov mov mov mov mov movl movl jmp mov mov mov mov mov mov mov mov mov cmp jne cmp jne mov andl mov mov mov callq add retq int3 int3 int3 int3 int3 int3 sub mov test je cmpl jne cmpl jne cmp je cmp jne mov mov callq jmp test je cmp je cmp jne mov add retq int3 int3 int3 int3 int3 int3 int3 int3 sub cmpq je cmpl jne cmpl jne mov callq add retq int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov push sub mov mov mov mov callq mov cmp je mov mov mov callq jmp mov mov callq mov callq mov mov mov mov callq lea callq decl lea mov mov mov mov mov add pop rex.w int3 int3 int3 int3 int3 int3 int3 int3 sub cmpq je mov mov callq add retq int3 int3 int3 int3 int3 int3 int3 mov mov push push push sub andl cmpq mov mov mov mov je cmpl jg mov callq mov test je mov lea lea callq cmpl jne mov mov mov mov mov mov mov mov movzwl mov movzwl mov mov lea movzwl mov mov mov mov mov movzwl movl mov mov callq mov callq jmpq mov movb test je sub je cmp jne mov mov mov mov mov mov mov mov mov mov mov mov callq jmp mov mov mov mov mov mov mov mov mov mov mov callq jmp movl mov lea mov mov mov pop pop pop retq int3 int3 int3 int3 int3 int3 int3 rex sub mov mov test je cmpl jle cmpb je mov test je sub je cmp jne mov callq movb add pop retq mov callq jmp int3 int3 int3 int3 int3 int3 mov push push sub xor mov cmp je cmpl jg mov callq mov lea callq cmp je mov mov lea movzwl mov mov mov lea callq mov cmp setne mov jmpq mov lea lea callq cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov movzwl movzwl mov mov mov mov mov mov mov movzwl mov mov mov movzwl mov mov mov movzwl movzwl mov mov mov mov lea mov callq mov mov cmp jne mov callq mov cmp jmpq xor add pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub xor cmp je cmpl je cmp je mov cmp je callq jmp cmp jne mov callq jmp callq mov mov add pop retq int3 int3 int3 int3 int3 int3 mov mov mov push push push sub mov mov mov add mov xor callq mov mov mov lea mov cmp jle cmp jne mov lea callq mov test je mov callq mov mov jmp mov callq cmpl jne jmp mov callq cmp je lea callq cmpb lea mov mov je movb callq lea mov mov callq jmp callq jmp cmp jle mov lea cmp jne mov mov callq mov lea lea callq mov cmp je lea mov callq jmp callq mov test je mov callq mov mov mov mov mov add pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 xor cmp mov jle lea shr inc mov neg lea movzwl add add sub jne cmp jne movzbl add mov retq int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push push push push push sub andl andq mov lea mov lea lea xor xor and mov callq cmp je mov test je mov test je cmp jg testb je mov jmp xor xor mov lea movl andl callq mov mov test je test je xor mov mov neg test cmovg sub movslq cmp cmovl add cmpl movslq mov je mov mov jmp mov callq add sub je mov add test jne xor mov mov add pop pop pop pop pop retq mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov push push push push push sub mov xor mov xor lea lea lea xor mov mov mov mov mov callq cmp je cmp je mov cmp je cmp jb lea lea lea xor mov mov callq lea cmp jne cmpb jne mov movabs add mov cmp je mov mov mul shr imul cmp jne mov mov callq sub mov mov movabs imul imul sar mov shr add cmp jbe mov mov mov mov mov mov mov movzwl mov mov mov mov lea cmp jne movzwl movzbl shr shl or cmp jne cmp je movzwl cmp jne movzwl movzbl shr shl or cmp jne cmp je mov cmp jne movzwl movzbl shr shl or cmp jne cmp je cmp jne movzwl movzbl shr shl or cmp jne cmp je mov cmp jne movzwl movzbl shr shl or cmp jne cmp je cmp jne movzwl movzbl shr shl or cmp jne cmp je mov cmp jne movzwl movzbl shr shl or cmp jne cmp je cmp jne movzwl movzbl shr shl or cmp jne cmp je mov cmp jne movzwl movzbl shr shl or cmp jne cmp je cmp jne movzwl movzbl shr shl or cmp jne cmp je mov cmp jne movzwl movzbl shr shl or cmp jne cmp je cmp jne movzwl movzbl shr shl or cmp jne cmp jne mov xor callq mov cmp je mov xor mov mov mov callq movzwl mov movzbl shr mov shl or cmp jne cmp jne movabs cmp jne mov mov mov mov mov mov jmp movabs movzwl mov mov movzbl shr shl or cmp jne cmp jne cmp jne mov mov mov mov mov mov mov movzwl movzbl shr shl or cmp jne cmp jne cmp jne mov mov mov mov mov mov mov movzwl movzbl shr shl or cmp jne cmp jne cmp jne mov mov mov mov mov mov mov movzwl movzbl shr shl or cmp jne cmp jne cmp jne mov mov mov mov mov mov mov movzwl movzbl shr shl or cmp jne cmp jne cmp jne mov mov mov mov mov mov mov movzwl movzbl shr shl or cmp jne cmp jne cmp jne mov mov mov mov mov mov mov movzwl movzbl shr shl or cmp jne cmp jne cmp jne mov mov mov mov mov mov mov movzwl movzbl shr shl or cmp jne cmp jne cmp jne mov mov mov mov mov mov movzwl movzbl shr shl or cmp jne cmp jne cmp jne mov mov mov mov mov mov mov mov movzwl movzbl shr shl or cmp jne cmp jne cmp jne mov mov mov mov mov mov mov movzwl movzbl shr shl or cmp jne cmp jne cmp jne mov mov mov mov mov lea mov movzbl and shl mov callq mov mov mov movzwl sar add mov sar add lea not mov movzwl movzbl shr shl or sub movzwl callq lea mov mov callq lea mov add callq movzbl add shl shr or mov xor lea mov mov mov movzwl sar add mov sar add mov not mov callq mov jmpq mov cmp jb mov xor callq mov mov cmp je mov mov mov cmp mov cmova xor mov callq mov lea lea or lea mov cmp jne mov cmp jne mov cmp jne mov jmp sbb sbb cmp jne mov mov mov mov cmp jne mov cmp jne mov cmp jne mov jmp sbb sbb cmp jne mov mov mov mov cmp jne mov cmp jne mov cmp jne mov jmp sbb sbb cmp jne mov mov mov mov cmp jne mov cmp jne mov cmp jne mov jmp sbb sbb cmp jne mov mov mov mov cmp jne mov cmp jne mov cmp jne mov jmp sbb sbb cmp jne mov mov mov mov cmp jne mov cmp jne mov cmp jne mov jmp sbb sbb cmp jne mov mov mov add sub jne mov cmp jne movabs mov mov mov xor callq mov xor callq lea mov mov mov mov pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov test je mov mov mov test jne test je cmpb jne mov xor xor xor jmp add cmpl jne mov jmp mov mov add mov shr and and lea shr add mov add inc test jne mov mov mov movb test je mov mov test je mov mov mov mov mov retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 data16 cmp jne rol test jne retq ror jmpq int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov andq mov mov callq int3 int3 int3 int3 int3 int3 int3 int3 jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 data16 data16 xchg mov sub jbe cmp jb test je test je mov dec mov add test je mov sub mov add test je mov sub mov add mov shr jne mov shr je mov mov add dec jne and test jne mov retq data16 mov mov inc dec jne mov retq data16 data16 data16 data16 data16 data16 cmp jae mov mov add mov mov mov mov dec mov mov jne and jmpq data16 data16 data16 xchg cmp jb mov prefetchnta prefetchnta add dec jne sub mov mov mov movnti movnti mov mov movnti movnti mov mov add movnti movnti mov mov dec movnti movnti jne sub cmp jae lock jmpq data16 data16 data16 data16 data16 je add cmp jb test je test je dec mov dec mov test je sub mov sub mov test je sub mov sub mov mov shr jne mov shr je sub mov dec mov jne and test jne mov retq data16 dec mov dec mov jne mov retq data16 data16 data16 data16 data16 data16 cmp jae mov mov sub mov mov mov mov dec mov mov jne and jmpq data16 data16 data16 xchg cmp ja mov sub prefetchnta prefetchnta dec jne add mov mov mov movnti movnti mov mov movnti movnti mov mov sub movnti movnti mov mov dec movnti movnti jne sub cmp jae lock jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 data16 data16 xchg mov cmp jb movzbl movabs imul cmp jb neg and je sub mov add mov and shr jne mov and shr je data16 nop mov add dec jne test je mov inc dec jne retq data16 data16 data16 cmp jae mov mov mov add mov mov dec mov mov mov jne jmp data16 data16 movnti movnti movnti add movnti movnti dec movnti movnti movnti jne lock jmpq int3 int3 int3 int3 int3 int3 rex sub mov mov mov and testb mov je mov movslq neg add movslq and movslq mov mov mov add testb je movzbl and cltq add xor mov add pop jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov mov callq mov add retq int3 int3 int3 int3 int3 int3 int3 pop add add imul pop add outsl add je pop add jo je imul jp add add int3 int3 pop add add add jbe imul jae pop add outsl add je pop add jo je imul jp add add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push add jo add rex.x outsb add add add add int3 int3 int3 int3 jne insb jns outsl jb insb insb (bad) xor int3 int3 jne insb jns outsl jb insb insb (bad) xor int3 int3 jne insb jns outsl jb insb insb (bad) xor int3 int3 jne insb jns outsl jb insb insb (bad) xor int3 int3 jne insb jns outsl jb insb insb (bad) xor insb jns outsl jb insb insb (bad) ss mov sub andl andq mov mov lea xor callq lea xor mov callq mov andq andq andq lea mov lea lea mov lea lea mov lea mov mov lea movb mov lea movb mov lea mov lea mov lea mov lea mov callq mov test jne mov lea callq lea xor mov callq lea lea movb movb callq movdqu lea lea lea movdqu mov lea lea mov lea mov mov lea mov lea mov lea mov lea mov lea mov lea mov lea mov lea mov lea mov lea mov lea mov lea mov callq cmpl mov je callq jmp mov callq mov test je mov xor callq mov add retq int3 int3 int3 int3 int3 int3 int3 mov movabs test je cmp jne lea movabs mov xor movabs and cmove mov not mov retq int3 int3 int3 int3 int3 int3 int3 sub mov mov callq mov mov add jmpq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push add jb je rex.wrxb je imul jp add push add jb insl add jb jbe add int3 int3 sub add add jo add mov add add add add add out ja add add add add add add add add add add push jp add add add jp add add add add add add add add add add jns add add add add add add add add add add add xchg add add add add add add lret add add add jbe add add add ja add add add ja add add add ja add add add add add add add add add jp add add add mov add add add add add add (bad) ja add add add ja add add add add add add sbb add add add cmp add add add pop js add add add add add add xchg js add add add add add js add add add js add add add js add add add jns add add add jns add add add jns add add add add add add insb jns add add add add add add add jbe add add add jbe add add add jbe add add add jne add add add jne add add add jne add add add add add add add add or rex.wxb movslq imul rex.wr movslq (bad) imul movslq add push gs gs jae push jo outsb rex.wr movslq ds je rex.wb imul gs je imul rex.wb rex.xb insl jo gs push gs gs add rolb rex.wrb rex.wrb jo outsl movslq fs (bad) addr32 jo movslq jns (bad) movslq add rex.wrxb push jne jb push imul gs outsb je add rex.rb insb insb outsl movslq gs outsl outsl insb add pop add rex.rx gs outsl outsl insb push imul add rex.x rex.xb js add outsl jae jb insb cs add popq rex.wrx imul rex.r gs movslq outsl outsb je js add repz imul je jb (bad) jne gs js add add imul outsb je add jae rex.wrb rex.rxb gs jne jb outsb je (bad) movslq je je movslq sbb rex.wrx imul (bad) je push (bad) movslq je add jae rex.wrb rex.xb jo push outsb fs gs (bad) movslq je outsb outsw add jae rex.wrb rex.xb jo push outsb rex.xb insl jo gs push gs (bad) movslq je outsb outsw add rex.wrx imul (bad) movslq je add add imul jae add add imul movslq gs je je jae xlat add imul movslq gs je je jae outsl insl jo gs add jae gs outsl outsl insb rex.rx insl push (bad) movslq je sub rex.wrx imul outsb push (bad) movslq je add add imul rex.rb outsb je add add imul rex.b fs jo gs add imul jbe outsb je add imul gs outsl jb add and rex.wrx imul insb push outsb fs (bad) movslq je add rex.wrx imul (bad) movslq je outsl outsl insb add cmpsl add imul (bad) insb imul jo jb xchg add imul imul jns jb imul add add imul jae gs outsb insb outsl (bad) fs outsb fs gs add add imul je jb jb je movslq add mov rex.wrx imul imul jns jb imul add jae rex.wrb rex.b outsl movslq je imul add add imul outsb (bad) je push jb jo gs add add imul jo add add imul jae gs gs movslq leaveq add imul imul jbe movslq sidt imul jb je movslq rex.xb outsb imul je outsl outsb add add imul outsl outsb imul je outsl outsb add rex.wrx imul (bad) je rex.wrb gs outsl jb push imul add imul (bad) insb imul je sbb jae insb insb outsl movslq gs (bad) movslq je outsl outsl insb rex.rb add add imul fs jo gs xchg add imul je (bad) insb imul movslq outsb jae (bad) outsb movslq js add add imul rex.xb outsb imul je outsl outsb add mov rex.wrx imul movslq rex.wb imul rex.r gs movslq outsb jae (bad) outsb movslq add jae rex.wrb rex.r rex.wb imul rex.r gs movslq outsb jae (bad) outsb movslq add rex.wrx imul imul outsl je movslq add pop add imul gs (bad) movslq je (bad) add imul movslq jbe fs (bad) movslq je pop add imul insb outsl movslq gs (bad) movslq je xchg add imul imul jbe outsb je add add imul insl gs je push jb je movslq rex.x add rex.wb cs pop push
 cmp jne ret jmp push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret int3 mov push mov sub mov push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne lea mov mov mov mov mov cmp je jmp lea lea mov lea mov mov mov test je mov call movb test jl jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je mov push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je mov push push mov call jmp mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret push call pop mov mov test jne inc ret andl xor ret mov push mov push xor push push cmp jne cmp jle decl mov push mov jmp xor jmp cmpl jne mov mov mov mov push mov jmp cmp je push call push push push call test jne jmp movl mov push pop test je push call jmp push push movl call pop pop test jne push push call pop mov xor pop cmp jne push push call cmp je push call pop test je pushl push pushl call incl jmp push call push push push call test jne mov cmp je push call pop jmp mov test je mov add jmp mov test je call sub cmp jae push call andl andl pop push push movl call xor inc pop pop pop pop ret push push call mov xor inc mov xor mov mov cmp jne cmp jne mov jmp cmp je cmp jne mov cmp je mov mov pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je mov movl pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmpl jne cmp jne movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov cmp je cmpl jne movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov mov cmp je cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov movl call mov call ret movl ret mov push mov cmpl jne call pop jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov push call push call push call push call leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test jbe mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret push push call andl mov push call pop test je mov sub push push call pop pop test je mov shr not and movl jmp mov mov mov xor cmp sete mov ret mov movl xor call ret mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret mov push mov pushl pushl pushl pushl push push call add pop ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp je test jne mov mov not mov pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea sub push push push mov mov push mov movl mov lea mov ret mov mov pop pop pop pop leave push ret mov ret push mov sub mov push push push mov add mov mov mov cmp je movl lea mov mov mov movzwl test je mov movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne mov mov mov cmp je mov cmp jae mov mov test je lea sub lea movzwl mov test jne mov lea test je cmpw je add cmpw jne xor lea mov mov mov test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne cmp je mov cmp jne xor pop pop pop mov pop ret mov jmp push mov sub push call mov cmpl jne xor inc jmp lea mov call lea push call lea mov mov call lea push call cmpl mov je test je call jmp xor pop mov pop ret push push push call mov mov mov andl andl call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov test je mov mov call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov xor movl inc jmp xor pop pop pop ret push mov push andl push mov cmpl je push call push mov lea push pushl push pushl call test jne pushl call orl pop pop mov pop ret push mov push push mov mov push mov mov push lea call push mov mov call pop pop pop pop pop pop ret push push pop push mov pop push pop push mov pop push pop mov xor mov mov mov mov mov mov mov pop ret push mov sub mov push mov mov push call lea mov call call lea mov lea call test je push xor lea push push call mov call call test jne cmp je cmp jne xor inc mov pop pop pop mov pop ret push mov push movzbl cmpl je call call mov cmp jae andl jmp sub cmp jb mov call test je andl xor inc jmp call call mov xor pop pop ret push mov sub push push mov movl mov call test jne xor jmp mov mov call test je lea push lea push call test je mov mov push lea test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne movzbl lea sub push push mov call pop pop xor cmp pop setne mov pop pop mov pop ret push mov sub push mov mov push mov or call mov test jne or jmp lea call call mov lea lea call test je push xor push lea push call test jne call call cmp jne push call jmp call xor push push push push push push lea push call mov cmp jne inc cmp jb mov pop pop pop mov pop ret push push call xor mov or mov mov mov mov xor mov xor cmpb jbe mov jmp call test je mov call test je mov call mov cmp je lea mov movb push lea lea call movl push lea lea call movb push lea lea call add call mov push lea lea call pop call mov push lea lea call mov xor mov push lea lea call andl push lea lea call mov xor mov push lea lea call mov mov push lea lea call add mov mov xor mov mov mov test jne test je mov and mov je shrd shr inc jmp mov push lea lea call pop mov mov test jne test je mov and mov je mov push lea lea call pop mov dec cmp ja jmp add mov mov call add push mov jmp add mov mov lea jmp add mov mov mov mov xor test je mov cmpb je inc mov inc jmp push jmp add mov mov mov mov push lea jmp add mov mov lea push mov lea call pop shrd shr jmp cmpl je call pushl call andl jmp xor inc ret mov orl call ret nop ljmp adc add xor add add add dec add add add add add push mov sub push mov lea call call lea push call mov mov call pop mov pop ret push mov and sub push push mov mov push test je movzwl mov xor cmp jne mov add mov mov mov xor add cmp jne cmp je mov mov add mov add mov add mov xor mov cmp jbe mov mov mov add movl mov mov mov mov test mov je mov mov mov test jle movzbl mov imul and shl add imul mov xor mov inc dec mov mov mov test jne mov mov mov mov cmp mov je inc add mov cmp jb xor pop pop pop mov pop ret mov mov movzwl mov add cmp jb mov add cmp jae mov xor mov test je xor cmp jne mov inc inc mov test jne test jle mov mov mov mov test jle movzbl lea cmp ja add movzwl mov imul and shl add imul xor inc dec mov cmpb jne mov call mov mov test jne mov mov mov call mov lea push push lea push call test jne lea push lea push push push call neg sbb not and lea push call mov test je inc add mov test je mov mov test jle movzbl mov imul and shl add imul xor inc mov dec mov test jne mov mov mov mov call jmp mov jmp test jne xor ret xor mov jmp lea inc cmp jne ret push mov and cmpl jne call push push push push push push call add xor inc mov pop ret push push call xor mov decl jne mov movl mov movl push pushl call test jne call push push push push push push call add jmp xor inc ret mov push xor push push push push call add orl call ret push push call xor mov mov movl movl mov mov mov push push push push push call add push push call mov test jne call push push push push push push call add jmp push push mov call test jne call push push push push push jmp mov xor inc mov mov movl push call push pushl call test jne call push push push push push push call add push push push call push call mov mov test je push push push push push call add push call test je push call jmp xor inc ret mov push xor push push push push call add orl call ret push push call xor mov movl mov mov mov mov mov movl movl movl mov call mov mov call test je mov push push mov push push push call add jmp call mov mov call mov mov push push push test je push push call add push push push call push call mov test jne push push push push jmp push push call cmp jne push push push push push call add mov push call mov mov lea push call jmp push push call add push push push push push call add mov test je push call jmp xor inc ret mov push xor push push push push call add orl xor call ret test jne xor mov ret mov push push mov xor xor mov cmp je sub cmp je add mov xor mov cmp jne pop pop ret and cmp jb push pop sub ret lea ret push mov imul push imul push push mov push pop push mov pop mov mov mov mov push pop mov xor mov xor mov call shr mov inc cmp jle push pop mov call shr mov inc cmp jle push pop mov call shr mov inc cmp jle imul imul call movzwl mov shl or mov push mov pop shr dec jne push pop mov call shr mov inc cmp jle mov add call movzwl mov shl or stos stos stos stos xor pop pop pop pop ret push mov push push push mov xor push mov cmp jne mov jmp movzwl push test je mov movl sub mov test je movzwl test je movzwl lea cmp ja lea movzwl jmp mov movzwl mov lea cmp ja lea movzwl jmp mov mov movzwl movzwl sub jne add xor cmp jne jmp xor cmp je add add movzwl test jne xor pop pop pop mov pop ret mov jmp push mov sub push push xor mov inc push push call test je push xor push push push push call test je push lea mov push push push call mov mov test je lea push lea push lea push pushl call test je push pushl push push call movl mov mov mov pop pop pop mov pop ret cmpl je call test jne ret andl mov ret jmp jmp jmp jmp jmp jmp jmp jmp
 push push mov push push mov mov xor pop stos inc dec je dec jne pop pop pop ret pop sub push jmp fsts fildl dec mov scas xor cmp stos mov sbb imul and lret adc push fldcw nop out dec int loope mov xlat inc imul fmull sahf mov lods xchg movsb inc xchg xor push push iret sti hlt insb pop cli cmpsl in jnp (bad) ffreep mov je cmp loope es stc sub inc mov scas clc (bad) jl mov mov inc dec insb pushf or dec in cmpsl push push push jl sbb or pop add sbb inc sub cmp sbbb call fs xor mov (bad) xor sub adc add iret inc pop imul cs loopne sahf lahf mov cmc mov jl mov add imul std pop sahf sbb push shrb mov fwait mov add dec or mov mov loop daa push jo sbb fsubr bound inc jp sbb cli sbb mov loop xor ror adc mov dec or scas into lea test push fmuls cmpsb xchg enter jle outsl aad lods sub cmpb mulb mov movsb inc add outsl les sub add das lret cmp dec sbb mov mov enter popf shrl jae dec jbe lret or or in pop ja lcall pop cmp inc int3 pop ret jo inc sbb xchg scas mov mov pusha and imul cltd ja mov add daa stos jbe call cmpsl bswap ffree mov xor cmp sbb int3 push cmp push fwait adc rcll (bad) lea mov inc mov cmpsl stc xor sbb sub movsl or mov lahf les ret mov movsl mov daa pushf std inc jnp adc ret push push dec xchg cmp insl fmuls int jmp les shrl psraw jg mov xchg pop (bad) jl add ret (bad) push mov test scas xchg lret inc xchg sbb mov dec jb inc add aad aas js pop cmp sahf cmp xchg outsl (bad) scas cmp mov and and sub mov push or xchg int int fs je std jg or pushf shl inc shl (bad) mov test fdivs lahf imul lcall or jne mov stos outsb adc mov bound cmp ds fldcw insb inc jnp adc pop jmp hlt imul lea xchg xor lret or mov mov push jnp mov mov sahf cmpsl js out xor in lds mov push jle dec jnp sub and or fdivrs xchg ljmp pop jle pusha popa cmp movw adc add adc enter push sub and int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub push mov mov and xor not inc mov cmp je sub jmp movzwl mov lea mov push push inc inc cmp jne mov mov add mov mov mov add mov mov mov dec inc inc mov and jne mov inc mov mov cmp jbe mov add mov dec xor inc mov inc and test jne dec cmp jne mov add pushl push call test je add incl mov cmp jb mov cmp jae mov add add mov add movzwl mov lea mov mov add jmp xor pop pop pop mov pop ret int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov arpl fldl xchg mov mov lods aaa or and xlat fbstp push incb loop fisubrs mov into cmc mov cmp int3 out movsb int3 xor inc xlat mov out in ss std dec inc and daa mov imul flds in jno jmp ds insb lock mov mov mov (bad) mov and mov xchg pop push rol mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl add (bad) (bad) adc inc mov push sub xchg and sti loope gs inc mov movsb (bad) lock sbb push lods xorl dec fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov rep inc xchg cmc pop mov xchg test xchg sbb sub inc mov xchg (bad) jp roll sub lahf mov in sbb sbb sub popa add mov shrl lods push add call cwtl fnstenv shlb sub sahf mov jb sahf mov mov mov pop in (bad) aad addb mov or das leave imul xchg into xchg mov pushf (bad) ret loopne inc mov xchg decb jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl push movsl fisttps std js aad repz jnp sbb imul push (bad) mov sbb repz js lahf fdivl les sahf aas mov mov push sub mov (bad) addr16 test ficoms ss xchg mov addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov outsl mov andl pusha test xchg scas adc jg or pop cmp mov jb sbb into mov in das mov cmc cmc jno out dec mov pop pop pusha je aad test and ja in xorl inc dec mov xlat sub cltd ss in outsl push xor pop dec xchg jne mov addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov pop ret jp out mov imul lahf test mov xor ljmp mov xchg nop xchg and xor mov cwtl pop fcoms hlt xchg jne mov xor mov mov not icebp lretw mov (bad) jg xlat mov mov add xchg sub stos pop (bad) in fs push gs orb inc aas in dec popa pop arpl cmp push out inc lods push sub inc stc dec jge mov cs pop fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl pushl js rcrb pop pop out xorl jns mov xlat add ss push add dec pop push sbb lea scas arpl mov lods lods mov fcomps cmp aas lcall xadd pop ss xchg adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl pushf fs clc popf movsb dec and (bad) loope sub mov gs push fcompl inc gs out cmpl test sub xor add cmc rcl mov push call add hlt mov mov cmp mov aad jp pop scas std adc adc jo pushf push xchg or mov ds inc jae fists faddp mov addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov aad enter es xchg (bad) std sbb mov mov xlat fucomip out mov sub and sub nop pop movsl add loop popa and pusha push inc mov push filds jae adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl adc sub inc jo test add cli sub mov (bad) aad addl add push xchg test (bad) mov inc xchg dec jg add data16 (bad) (bad) inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl xchg lds out xchg lds mov imul lds xchg imul inc int adc mov jbe fadds mov mov (bad) imul outsb data16 (bad) stc cmp push push mov (bad) es nop pop sub and pop mov mov mov insb popf and fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov fs pop fsubrp xor out imul sub rclb mov test outsl nop fstl ss push mov ja int3 push inc in push popl nopl cmc push cmpsl sub cmp in xorb add popf xor out fnstenv dec xchg inc cmpsl scas jbe cli mov data16 das sub out jno fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl and dec loop out pusha mov fwait ss adc jl and loopne daa fisubrs pop repz imul jle dec pop or fidivrs and movsl xchg dec repz jmp fbld adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl shlb mov jecxz stc mov popf bound loop aaa or cmc mov sub shrl sub adcl mov outsl dec mov sub lods push shl decb std negb subl sub addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov adc fildl test push inc cmpsl repnz lock repz lods cs and mov xchg and pushw push dec orl add jnp andb cmp xor out cmc cli sub mov aas dec push sub lea cmc mov and xor out jo cmpl cmp sub jp fwait ss mov test mov xchg clc (bad) or test pop or mov fpatan mov int3 cmp out (bad) mov adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov mov daa adc mov les stos dec xor jle inc mov sbb outsl adc fst lods jmp (bad) std inc mov jne jne shlb mov adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl push notl shrb cmpb adc mov (bad) adc (bad) mov dec (bad) jp sub into test es mov xchg pop xor cmpsb cmpl mov cmp sahf ljmp addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov fcmovnbe pop mov stc xchg ret in adcb fmuls test sbb std mov call lea jne mov into sbb xor xchg xor jb fdivrl push inc xchg fucom xor addl cmp jbe mov addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl les sbb xchg xchg lds mov sub iret notl inc nop push fwait inc dec cs pop iret jno inc rcl mov mov adc mov jmp xor push roll adcl fisubrl cmc out cli out adc xchg sbb xor in hlt mov (bad) outsl dec fstpl push dec pop add jmp aaa pop dec addb adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl pop arpl scas jbe nop mov rclb imul lds adc fldcw xorl dec popf or (bad) or mov dec ss sahf push mov test loope sar dec or xor mov push daa push cld fistpl xchg pop or mov je fnstsw addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov mov andl popa iret shr cmp out fidivl pop cmp dec pop inc sahf dec dec jns xor mov xor inc sub dec mov addr16 std jne dec das stc dec out sub xor addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl fnstenv sahf ret and (bad) sub dec xchg ss mov cli cmp dec jns les xchg imull das std inc lret pop shll pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl add pop and test inc cltd mov out jmp fnstcw mov std and (bad) xchg popa movl pop popa int3 shlb add mov mov jno cmp adc adc jae fxch or pop add movsb pop rcr nop or mov mov repz pop jae pop jmp mov sub lods out mov add roll cltd pop stc and inc icebp or ljmp addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov or mov jg cmp jmp clc subl test jns pop testb in pop imul dec and ret cmc lret fistpll pop xchg inc adcl stos ja inc rolb lea inc dec sbb xor fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl xlat cmp addl arpl pop shlb scas aaa cmp adc mov xchg mov sbb jnp pop pop sub mov in jle andb cwtl dec dec jo add push es into fwait cmp pusha push fistps xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl sbb roll cwtl shlb xlat out jbe pop ljmp mov out mov push jecxz mov jo pop pusha xchg adc jae sub mov fs lea xchg das mov hlt mov ds inc nop lds mov mov xchg out cmpsl dec lods (bad) ljmp fisttpll xor aas test jae jnp dec daa inc cmp or dec js pop cltd cmp in addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov xor mov cvtps2pi cmp adcl sbb mov cli shll sub xchg fdivrp fwait pop add adc cmp jecxz mov testb cmp loope mov mov fistpl jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl add leave sbb movsb xor mov sub loopne dec mov mov stc add adc cmp aaa dec add outsb mov in dec aas mov mov add mov xor xlat ret pop fimuls sub outsl sbb mov lcall xor xchg sbb std imul and mov lret out fs addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl push popf jb std push rep or and fldcw mov push insl mov aas pop out add and and movsl jg into rorl dec cmp jb in pusha orl and insl mov movsb push fimull addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov int mov out outsl or dec push adc popa mov movsb icebp xchg xchg jg stc mov cmp ficomps ret fildll push dec bound sub mov sub cli push ds cld mov inc iret pop addr16 imulb movsb je push in lret ret call add jecxz xchg in pop lret ja sub push lea mov adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cltd fidivrs popf mov cmc push push or test repz xchg push scas fidivs mov pop jb pop fiadds sbb movsb push and loop sub addr16 cwtl mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl and push mov push imul fucomi movsl repnz pop inc rcll push dec mov push ficomps rclb cltd mov (bad) and sub call addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov xchg inc fisttpl inc mov push fldcw inc jnp loop xchg and mov ret mov push cli test outsl scas pusha fsubs sub cmp inc iret and fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl testb in jl (bad) sub inc inc mov scas ffreep enter pop xlat ds fstpl les sti inc lret inc sub pop push jbe jp test jns cmc jle popf pop pop adc out scas or cmp mov dec xchg fwait rcr or push inc xor jge mov leave sbb mov adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cld inc ss loopne orl pop or inc adc xchg arpl mov xor push js cmpsb mov push (bad) sarl xchg mov out jge or dec pushf popa adc jnp scas mov addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov jle xorl dec and jecxz fists in mov add addb cmpl xchg fidivrl fstpt insb in fstp out dec add hlt and push xor scas shr mov push jge sub mov or test sbb xor inc mov stc dec adc adc stos push clc cmp pop ret fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl push push bound inc imul mov ror xor lahf mov sbb jg imul call sbb add rorl movsl nop pop nop lcall out sbbl pop mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl test hlt lock pop jmp sub (bad) sar sbb cmp movl lds scas mov into inc xchg mov fadd mov cmpsl xchg adc mov addl insl inc aad into js sub (bad) push (bad) fldl nop shlb out or lret adcb stos sbbb popf and dec cltd mov pop fisttps pusha mov jg fldl dec int movsl push cmp addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov lcall movsb or add mov hlt js fiadds stos push out mov stos stos mov lret sub add mov out push dec push xor fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl lret enter ficomps loopne mov cwtl adc mov jle (bad) loopne mov shrl push xchg mov mov sub adcb ljmp std cld fldt adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov mov icebp cmp xor outsb stos or jmp and icebp add pop cld lock pop pop sbb iret jmp xor mov andb mov lock push jg xor std ja stos jmp or mov xchg std mov cmp (bad) testl (bad) movsb push loop inc inc adc sbb pushf mov fidivs inc xor scas out mov sub fidivs adc cmpl inc fistpl push fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov cmp jge test ja cmp mov sbb lds fsubrs xor xchg ja sbb push rcrb and xchg mov addr16 xchg adc stos cmp (bad) into adc testb xor test cmp sarb or das loope clc lahf stos jl adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl xchg adc add rcrl inc or int3 insb pop or data16 loop or xor jno (bad) (bad) push out cwtl inc mov dec xorb outsl xchg test aad lds xchg inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl inc sbb movsb daa mov iret in and fisttpl and fdivrl outsb andl movsb aad sarb push push jbe loopne adc test pushf inc pop aas add mov fstpt xchg cli cmp std popa push and adc cld mov mov fwait pop jbe movsl push aaa dec andl sub inc shll mov or loop insb mov iret lret jge xor addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov pushf adc adc call and mov sahf out sti fwait jmp add dec pop sbb jmp inc outsb mov (bad) or add imulb push xchg xor push int xchg cwtl rol mov out jne into pop mov ficoml sbbb and (bad) nop sbbl jb movsb or std or xor pop stos inc xchg mov (bad) in mov jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl sahf ss mov scas (bad) mov push scas push push loop xor add cs dec shrb rol cmp movsb jp std xorl int mov push pop and lods loopne in push mov mov in rcrl mov jns stos cmpb bound mov mov cmp int3 jle xchg adc cmp addl jno (bad) lds cs addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov xor aas out stc mov mov push das jle push addl iret mov out adc scas lret fisubs sub pop lahf orl jg inc outsl lret in sbb mov mov (bad) out insb nop or fsts dec pop sti loopne addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov addl aam xchg daa add pushf daa fisttpll mov or rolb cmp shlb nop stos mov test sbb test add add in iret es aas fiadds add cmp xchg sbb bound hlt mov mov inc loop cmp or test stos adc fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl movsl fistpll xchg test push cltd push shlb push sub orb data16 mov xor testb add sbb loope adc addl cmc jbe hlt lea xlat imul and orb scas (bad) xchg xchg jmp push mov movsl jae out call ficompl adc mov adc iret sti jb aad fimuls addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl inc fstps lea sarb lret xchg fwait and pop cmc or into adc enter mov out jmp ljmp or shlb sbb jg nop adc xchg push mov add outsl out add mov xchg lahf adc scas jp rolb lahf loop pop dec push cmp sbb mov lea imul addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov adc inc sbbb xor mov int3 es test in xchg mov xorl or mov ds cmp fiadds mov andl dec lcall andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl dec cwtl xor inc pusha mov sub pushf mov adc aad add jne rorl call loop mov pop lret mov sub std nop mov jne fstpl sub int3 push xor leave xor leave je mov bound addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl jne xchg shl xchg add add movsl roll lock cs lcall sub lea jge push push push orb add push cmp addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov nop (bad) dec pop dec cs lods negb fs shrl jmp out int stc sub mov dec sub leave dec xchg aas sub dec lcall fs test mov mov adc cmc cmpsl mov mov fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cld cmpsl repnz insb or hlt daa iret sti addb pop or inc les xchg dec addl rol mov shll sub sbb xor ficoml jnp addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov les lcall xchg jns andl sub aaa fs xor scas sub or sbb push xchg enter push sub imul cmp sbb pop repnz aaa filds pop xor xor and pop adc dec xchg mov std jne cmp stos ss mov mov adc mov into fisttpl popf das xchg jno lods dec inc adc lock or (bad) repnz add adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov pop add dec add mov mov adcl dec xor int jl dec jbe int3 fisttpl add rorl jmp add fsts mov maskmovq fwait int3 insl pop inc pop outsl nop sub into out inc ds adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl leave sbb push lock fdivs into jns sbb xchg in out or xchg movl mov pop movsb mov lret mov js inc ret stos (bad) cmpsb js mov stos cmpl jecxz inc shll mov mov andl pop and pop dec int mov or out lods (bad) (bad) push data16 mov stc ror jno xchg ljmp xchg sahf xchg pusha (bad) or sub adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmpsb out aam sbb adc cmp ret inc xorb cli test shl je xor (bad) cwtl std fistpl test mov push int pop push (bad) jb insl cmc movsb fdivl push (bad) hlt movsbl ja (bad) dec out inc cld add je,pt dec inc cmpsl add fbld aad outsb or mov xor jle jge xchg sbb adc mov in cmp dec imul stos sub outsl fstpt lods mov dec inc fnstsw adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov push loopne (bad) (bad) sbb div stos movsl xchg dec xor push addr16 ljmp inc scas jno cmpb push ror mov js ret add xchg (bad) negb xchg add or data16 mov popf and ficompl cmp xchg inc cwtl mov push mov andl sub and sbbl pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl rolb nop clc xchg adc pushf fisttpll and mov out sarb dec and lods adc xchg jp inc ljmp mov std push xor fistl icebp sub push cmpsl adc jl (bad) lret sbb test test repz adc mov xchg sbb xchg faddl mov sub pushf mov adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov shll push lea fwait jl jnp add sub ficomps popa outsl mov in mov mov (bad) mov xchg aas add cmc cmpsl sub jmp pop outsl xor adc sti aad dec adc paddq test inc (bad) inc or add lret xchg mov fistl cld and pusha aas sbb pop mov shlb xchg in iret notl neg addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov pushf popf adc cmp shrl xor jge mov outsl andb stos push jmp jg xchg pop scas out leave jnp leave push (bad) xchg jl pop push adc xchg jl cmp (bad) adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl iret xchg sub inc imul fwait jmp popf in sub pop cmp (bad) hlt pop and repz or cmp inc idivb push cmc push clc stos and iret dec jae notb out jmp cmp js in sbb add sbb loop xchg push and imul leave pop stos mov or and daa jbe loop (bad) adc inc mov fistpll cmp dec cmpsb mov cmp adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl lahf push pop inc inc and jbe sub fcmovnb hlt adc notb or movsl inc add inc or xor stos xchg sub inc popa mov mov adc sbb rcll das into pop jns ror push mov add fdivs mov movsb fldl cmp rcll sbb xor push das push shlb pop cmp xchg mov jl cmp loopne mov mov popa sbb incb jno xor push xchg mov fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov pop ret pusha pop xor scas enter aam jae lahf jns out xorb int3 or data16 (bad) dec mov inc cwtl shl xchg push popf adc pop inc int in orb fistl or out cmp int cld leave and xor add (bad) dec pushf jle mov mov test repnz push xchg and xchg aad pop xchg mov pop xor push inc jnp inc int3 mov push lret dec cmp push sahf (bad) fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov cld sbb es push scas fisubrs dec outsb mov or pop sub jae nop shl shll cli out pop movsb pop sub inc lahf push loope adc imul cmpsl aas cmpsl cwtl scas js jne cmpl add or lods repnz sbb sti sub cmp or aaa stos iret je dec lock xor divb call into cmc fs and dec incb mov and lret inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl scas rclb into dec jge pop stos xchg xor xchg aam inc cmc loopne andb cmp ja jle movsl xor cwtl jnp mov pop mov sahf sbb dec mov xor movsb and scas fucompp pop adc jmp mov les xor jmp test stc or cmc mov push push test cmp cld or (bad) sub jnp xchg cmp push mov push xchg lahf popa sbb addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov cmpb rcr sub lret sti bound jne in jnp lock or push test in psubsb mov sarl xchg les cmpsb inc lock dec sbb sub fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl rorl addb jmp subl push sbb dec cmp pushf cltd shlb inc add xchg orl test mov insl daa pop mov cmpsl inc mov lret jp sarb dec pop shl xor test aas xchg insl cld aam sub shr mov test push sub and (bad) or push cmp in jge pop in and addl push push shlb cmp mov aam movsb ficoms addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl subl cld inc mov push dec fnstsw out mov jg (bad) stos mov sahf test loop imul (bad) or sahf imul or pusha inc (bad) lret lea jb rclb mov dec leave (bad) add pop lret inc incl cmp leave mov mov xchg pop imul pop xor repnz or addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov pusha icebp mov xchg jno cmc jnp or xor bound cmp dec xchg cltd orb cli sbb cmp test xlat roll sbb and loope imul aas in arpl mov insb and pushf enter push lods icebp adc mov cmp pop int3 hlt mov movsb imul cltd cmpl (bad) push cli sahf fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl les xchg jb sub xchg pop sub or mov cmp pop adc sbb xor ja mov xchg sbb cwtl and lcall fs pop xchg lds push xchg sub mov incl imul pop lea fsubrs or mov rcrl daa mov dec mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov and xchg jmp inc sub into mov adc inc shrl les push and mov jecxz mov leave bound or stos push jmp in lret cmp das cmp stos enter mov xchg enter stos mov (bad) loope scas sbb or cmpl adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov call loope sbb push stos mov enter nop jb movb scas adc and lret insb adc and and nop loope jo mov jnp sbb addl xchg (bad) shlb cmpl xchg xor ja mov add pop leave mov mov scas in testb sti inc lret push outsl mov fisubs sub push fnstenv mov sub mov dec cli rorb or cmpl fs adc sbb mov lds and addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov pop bound push mov sub lods add fwait sarb cmc inc jne lds popa ljmp jge ret cmp popa gs mov scas mov push scas subb in lret fistl test dec int inc push pop iret jl dec les push leave lahf icebp outsb add push push mov and data16 inc sub mov clc jb pop cmp push mov fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov sub out mov mov call sti mov inc xchg pop mov repnz jmp xchg mov jbe or lock int mov aad or jae jmp scas imul shll fsubrl rorb cmpsb in add or fistpll xorl mov push scas testl nop sbb xor addr16 scas int js movl addl mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl imul sarl sub inc mov mov mov pop std cli sub mov std (bad) lods push fstl xor mov sti gs mov mov adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov lods (bad) dec out mov sbb mov mov test mov bound cmp sbb push aad iret lea sub sbb orb dec add out adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl (bad) test (bad) xchg mov push clc outsb addb lock xchg add cmp sarb lock lret lcall roll in ret pop xchg cld pop loope inc ficomps or xor repz sahf scas fsubl mov xchg mov push push das dec mov or (bad) xchg mov mov adc andb adc ror call lcall gs adc fdivl pop add test xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl add adc iret dec dec test fstps cmpsb push xchg leave xchg mov push xor mov ljmp shlb movsb xchg bound adc ja out cld outsl mov sbb std test push push clc dec mov push sub leave cmp fiaddl mov ss sbb mov loop mov int fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov out cmp xor cwtl cmp xchg in and in and mov movsb fldl mov lock jmp (bad) into add mov imul xchg ret je out (bad) in je adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl fldt sub add int3 mov mov movsl call xchg jbe lods std pushf int3 sub push int3 in push hlt sbb scas loop dec mov shll mov cmpsl and push mov test fsts push mov adc xchg nop xor dec push and je enter jmp test pushf jnp mov mov push orl sti stos push into add fldl mov addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl (bad) cmp adc or mov les fnstsw outsl sbb and adc sub mov sub div lds mov mov leave mov out inc and mov mov jp xor xlat aam fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov fs xchg inc push mov (bad) sbb xor bound cli test inc push leave into jo push outsl push mov sub jge dec bound stos xchg pop or jle mov into or int3 cwtl mov das fsubp pushf cmp fsubrs cwtl push mov cwtl xchg addl or jne or adc xor sbb sub imul cs dec pop fistl fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov fndisi(8087 or popf nop cmp mov push jecxz push mov lds sub mov jp test std cltd ficompl dec mov mov cld flds bound aad mov (bad) mov lods lahf adc jb loopne inc pop mov lret nop mov push pop (bad) jl pminub mov mov jb arpl gs stos mov stos mov mov push test ret iret mov addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov les pop mov xchg xchg mov sbb and ds xchg lods dec mov rcl mov adc in mov pop sub scas and addb mov sbb inc enter fstps mov insl repz xlat mov cmp in stos subl mov push mov ss rcr sbb (bad) lods fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov xor mov jmp mov xchg sub and mov pop dec mov and loop fidivrl xor fsubs xchg outsb mov ds jmp fdivp xor mov ss mov or test rcrb orl xchg mov push fldl and adc jo xchg mov ds fcoml jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl std mov fbstp mov sbb std mov fidivs ljmp mov push fbstp pop or xchg pushf subl mov movsl dec ret addb repz jbe test adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl test clc scas ljmp scas xchg test (bad) aam ret mov nop jg jg jno loope fdivs mov mov (bad) pop or sbb scas dec cmpsl dec dec mov fildl mov adc shll (bad) fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov bound xchg (bad) xchg mov pop fisttps imul loope pop jle lock stos popf out sbb les mov add ss int3 pusha xchg fcmovnu jmp dec xor dec test inc adc scas xor mov jmp outsl xchg (bad) inc xchg mov cwtl dec lcall mov mov pop xchg xor sub xchg or sarl xor cmp lret xchg shll repnz das cmp and xchg inc fidivs add adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl adc jp mov cmp adc stos orl pop enter leave add pop push sbb pop mov dec xchg nop mov pop test rcrl cmp nop icebp inc rcll std or shlb push ljmp cli mov sbb mov sub ret aas mov jae xchg cwtl jno mov shll mov loop mov insb test addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl dec mov cwtl dec stos mov into sub pushf xchg mov push dec mov das cltd jbe test jge mov pop fldt (bad) cmp jp mov movsl dec or fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov jge mov lods outsb aaa sub outsl enter insb cmp xor pop xchg or mov sti add pop xchg jecxz sbb sbb scas jns mov jmp cwtl inc xchg pop cmpsb leave aaa call jno cmc test mov pushf sti (bad) std mov nop and and mov (bad) jbe icebp dec lods or mov adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl push outsb in jae cli sbb inc test sbb sbb push in mov lret sbbl push xorl sub dec fadds and sub mov movsl pop add inc xchg jno push test xchg mov mov sub (bad) out mov sbb adc pop clc nop daa fiadds adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov pop dec mov push andl std daa shl repnz int jbe popa xorl lods outsl ret mov mov addb addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov mov jle xchg pop pop cwtl inc cmpsl sbb add ret ficomps jecxz test mov mov test xlat pop mov (bad) jmp inc out and mov mov add scas pop cmc adc cmpsl mov lods fimuls push in lock and arpl mov and int xchg mov mov outsl mov dec pop xchg mov pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl in xchg sbb (bad) sub les test mov lahf js mov in cmp loope pushf fwait mov mov test mov (bad) setb or mov mov mov or push cmpsb adc outsl inc movsb xchg loope xor mov int3 adc mov jecxz sarl rclb jbe mov mov mov test and mov (bad) mov xchg ficompl mov mov xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl pop sbb mov cmc nop lea inc add mov pop adc pop mov add in inc xor int3 fadds inc mov sbb leave mov ja mov or inc daa (bad) dec mov pop ss rorl fcomp addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov into fbld rorl mov ss in jbe and mov into xchg movsb mov and jne addl scas sar mov cmc mov (bad) in push ret fistpl sbb fwait add lret or mov cmpb xor rolb stc mov loopne mov addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl add movsb mov scas jp push cmp jbe pop enter je jbe repz popf aad test mov inc cmpsl or stc pop cmpsl mov jecxz jno fdivrp push sub lahf push in lock stos (bad) outsl nop roll movsb mov inc loopne mov mov fiaddl adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov mov shlb int3 test loopne mov inc andb mov mov loopne stos pusha jo in mov push mov insl xchg ficoms jo inc (bad) cmpsb mov (bad) (bad) orb out ljmp dec mov int je mov push fnstsw clc sarl jecxz pusha ret mov jo lea jo test scas mov mov (bad) sub mov xchg push out sti js scas les fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov cmpps popf mov xchg cs gs cltd mov stc loop scas push mov hlt outsb cwtl stos mov scas xchg mov andl (bad) mov push test dec nop orb (bad) in mov fs mov btc add push push sub leave inc pop mov xlat jo dec adc sub (bad) mov mov or mov fnstsw lret daa add pop pop sub add lcall mov mov jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl sti xchg sub pop pop mov shlb cli das mov jecxz dec arpl (bad) xchg xor fcoml adc push inc js in lods in mov sbb fstpt in frstor adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl leave push popw mov cwtl inc sub les daa test imul push xchg xor cmpsl outsb mov scas les adc outsb movsl pop mov (bad) sbb addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov (bad) roll mov mov xchg xchg mov and out cmp into mov stc bound imul enter mov xchg adc mov mov into (bad) inc push adc daa mov imul out popf pop scas test test sbb mov mov adc mov xchg push je in or addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl pop pop mov lret xchg test aam sbb cmpsl subb jg pop xchg leave or imul fadds call jmp mov pop daa (bad) loopne lahf int3 fistl jle nop mov test dec filds mov jge cmc movl pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl data16 pop mov cmc or sub scas add lods stc fsts dec sti mov fldt fs mov xchg scas mov fmulp mov mov jge negl lret adc mov mov dec cli leave mov mov aad adc or jbe ret mov pop mov sti pop pop inc fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov out pop mov iret cmp cmc push lret rcrb jecxz ret pop xchg frstor push mov mov in or outsl testb repz push iret adc jmp sarl lret push movsl lds cli mov movsb (bad) jmp sbbb enter insl or xor jae mov mov cmpsb fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl loop movsl mov mov dec outsl addl xchg (bad) (bad) sub jae orb pop or lahf mov mov test fistl pop push jmp mov das or cltd repnz or and in adcb mov incb or push mov sbb cld test loop lods inc sbb daa ja mov repz arpl add sbb pop add jns mov sbb in xchg mov cmp fildl ret adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl push mov (bad) ret dec sti sub int or sub fwait mov lds fmull mov aam icebp dec mov imul adc sbb fwait pop pop andb rcr mov xor adc cmpsb dec cmpsl pop cmp aam insb or adc inc test bound daa std ljmp adc divb adc arpl icebp ja pushf mov sub xchg mov mov (bad) icebp adc pop addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov addb inc enter mov insb jmp pop int iret xorb sub cmp mov lock (bad) push adcb xor fstp enter adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl fisubrs fmull xchg xorb sub sahf aam mov cwtl and lahf daa xlat sbb lds into jp cltd enter xorb fwait sub aad mov arpl movb ss mov xchg mov leave imul add andl adcl addb addl sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl stos lea rcl mov push sarl imul xchg outsb negl int3 add mov sub sub dec mov daa mov rorb and xor push add subl jnp or std mov mov stos pop mov cmc pop aas vpaddsb insl popf mov dec mov pushl outsl dec and cltd lods mov sbb mov fcmovu out les mov aaa push mov aam mov fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov inc mov les into cmc push cmp push cmp xor popa das pop pop or sbb jb sub dec jl xchg pop push mov mov stos les dec lret push imul mov sahf cmpsb in les jmp cmpl mov pop es andb imul xchg testb mov in out fidivrl movsb test cmpsl adc mov add enter fwait xchg adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl push fdiv stos jb (bad) push push fdivrp mov orb fs mov mov (bad) mov add mov jne out sahf bound (bad) int mov jo rolb pop jle xor adc xor lret fwait push rorl sbb int3 or adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl adc jbe sbb out pop pop pushf cmpsl sub mov mov test push div dec add shll (bad) mov pop stos xchg rorb movsl lret mov pop and fcompl mov sub lds sbb mov int nop mov test mov mov xor jge mov or mov jp mov orl pop addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov lods cwtl adc enter insl mov xchg xor pop into mov je (bad) push jl push cmp cld sub mov xchg sub cmc jno mov mov not dec and jge xchg mov (bad) sbb mov mov add lcall dec xor xchg adc add jp mov dec ljmp into mov mov fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl loop push sbb push fdivrl orl popf lret (bad) ljmp into push daa popl arpl push mov lcall dec shrb ss or xchg aam sbb test adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl inc push push js scas lods subl xchg mov dec xchg nop cmc add pop fwait lds xor or lea and ret mov or cs aaa int3 add mov sahf mov pop fidivrs addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov loope dec icebp lcall call xor jp pop les cmp mov jae fcoms xchg mov test jmp test sbb or xor xchg rorl in or cli test call popa das or or ljmp xlat test ss cmp mov cmp test sub cmp dec les insb lahf lret in mov dec inc jno fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov sbb push xchg mov imul jne mov arpl cltd mov mov add sub mov dec popf cli dec adc jle inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl adc mov xchg mov lahf mov scas lahf (bad) adc and cmc notb outsl mov rcl mov fdivp mov test aas mov movsl test fmuls adc (bad) std and aam stos aad stos in push jae pop pop mov test leave cmpsl incl (bad) aas and test leave and jae stos pop fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov and mov clc or mov mov mov mov cmpsb xor ss mov adc mov sub outsb iret pop cli push xor in mov or movsb jge xchg jecxz lret (bad) cmpsb mov push das cmpsl mov loope xchg dec int jae xchg mov movsl mov xchg mov sbbl pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl adcb fwait imul sbb add mov mov test mov in lods or mov ficomps dec or lods mov mov and test jp popf mov dec jbe xor fcompl push cmp inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmp mov popf sbb fisubs cmp mov cmp in cmpsl es fldenv and mov shlb xchg ljmp fstpt adcl xchg orl pop mov cld rcrb loop cmp cmpsl fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov addl notl jmp sub dec mov sbb mov pop scas lcall sbb jmp iret sbbb inc fnsave in pop rorb addl scas mov mov mov xchg inc or adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl sbb mov aam aaa add in mov fxam addl inc xor iret test mov mov add dec imul iret loopne cmpsb mov cmp mov and in xorl pushf cltd test xchg repz mov roll fs mov mov fnstenv jo jle xor scas xor and imul mov and addb addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov or js mov add int cmpsb arpl mov push add stc stos mov lds and test mov xorl inc pop fwait test scas sarb popa andl rolb (bad) scas xchg ja jo pop ret lods pushf mov out push pop scas filds ret icebp dec or push fwait sahf cmp stos mov movsl dec xor push xor and loop jno xchg jo cmpsb imull cmp addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov iret mov popl leave subl jmp xorl addb and loop add xorb (bad) ret leave lret xor in mov (bad) popf add push out push (bad) int3 daa inc nop or sub int3 outsb jp mov xchg imul inc ficomps shl sbb ja xor loop lret test out sub movsl (bad) lcall cmp add addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl hlt movsb loop xchg fimuls xor sbb mov icebp sahf adc repz or lret mov push xor ret adcl neg cmpsl addl add enter popf out lds mov pop cmp bnd ds insl repnz mov xchg les xchg pushf fadds iret push add andl clc pop stos adc pop in jbe inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl shll push mov adc hlt in xadd add in fcoml pop cmpb int dec (bad) jmp popa mov cltd lcall mov addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov jp test clc sbb push pop sbb mov cmp enter xlat jge mov andl add scas cmpb fcmovnu clc sti idiv sub stos jg mov cmpsl push sbb aam fdivp adc in pop (bad) cmpsl mov (bad) loope bnd push in neg xorb xor mov adc cmp xchg cmpl jge and mov add gs and test pop pop pop lret test mov std int3 scas jo (bad) fldcw xor fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl in pop inc cld int ret inc cli or lret fnsave fucomi pop cmc (bad) divb rcrb cmpsl hlt loop icebp xchg inc sub mov cmpsl in lahf js pop add repz pop and roll in pop xorl sbb xchg inc push add cwtl xor ljmp push clc sbbb push cmc and and jmp jg cld sub sbb pop addl repz xor call mov pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl sub fcoml (bad) out push adc nop pop push pushf pop adc and enter popf xchg sbb jno mov mov andl addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov xchg xchg pop pop push daa mov sahf mov out bound test shrb out adc and xchg jge fbstp xchg addb int dec mov add mov sub push jg repz int3 aad sub cmc mov jbe fdivrp mov fisttpll jb mov subb mov xor cld in repz mov xor sub testl sub mov fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl insb gs sub rolb mov sbbb repz stos mov in cmpsl out xor out or mov int3 ds sbb cmp repnz push repz sub or dec or pop sbb xlat jle loope lock push cmc fstl xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl lret fadds push push cli xchg and sbb orb push fsubr xor in mov movsl out dec out repz add fsubrp bound in in std mov (bad) fldt pop mov mov pop pop mov mov adc add scas and daa in pop mov fsubl fcmovnu repnz xchg loopne pop lret pop mov sbbb and jno adc nop sbbl loop jl addl fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov sbb ja mov out orl enter and loope and leave xchg repz shrl les push popf pop lods shr xor fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl in push mov shlb inc mov add repnz mov add inc stc cmp mov xor xchg sbbl out jmp mov and pusha cwtl fnstenv ja pop cmpl loope xchg in (bad) rorl xor pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov fmul mov hlt xor movsb addb jae cli mov subb push sbbl and in mov xor scas pop bound shr sbb fbstp jmp addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov add jle lcall push or iret and repnz pop repnz ss push mov jmp mov test and shrb adc hlt mov addr16 (bad) fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cmp cmp sbb subb inc movsl sbb or scas repz jle pop cltd cwtl push cmp xchg andl inc in out popa and push xor testl out cmp inc aaa jnp das mov adc scas sbb (bad) jns lret insb mov loopne sub adc dec neg outsb repnz pop int lret cmp test xlat ss fiadds mov adc xor mulb push rolb repz outsb xlat ljmp mov add addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl pusha mov (bad) lock sbb pop stc mov xchg mov push pop xchg sbbb xchg lahf cmpsb fimull add cmp popf or mov xchg jp dec and pop shll and test movl inc int3 xchg icebp jecxz or inc fsin pop loopne out scas sahf imul mov dec adc add mov mov push aam add cmp mov inc jmp fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov xor cltd mov push out (bad) aaa out aam sub movsl add in adc das movsb xlat aam les cwtl jbe out jmp jo sub pop js iret adc xor jecxz in jo mov jae sub push scas and mov and pop aas fwait and mov pop das lods mov push xor in mov in pop sbbl xorl lea jnp jle cmp push repz cld add pop mov arpl mov jg xchg imul mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov xchg pop arpl test xor cmpl mov mov sbb xor pop loope sahf orl sub fldenv or scas sbb xor xchg test insb loopne das lret mov push imul xor (bad) sbb inc adc sub push mov jo and sbb jne and int3 pop push repz adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl and jbe xor stc pusha push xchg nop mov adc sub mov jp pop lods add int dec fnstenv mov push lahf into sti js es repz mov es fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov xchg loopne icebp dec addb test mov cmpsl icebp sbb pop jp imul bound xlat shll out aas pusha cmpsl icebp adc xlat hlt or mov sbb icebp sbb mov pusha rcll push dec cmp cwtl adc jmp jae pop mov dec lea pop or and addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl push push cld imul (bad) mov test pop (bad) pop icebp lods popf mov cltd mov popf stos into dec cmp gs pop dec shll push test enter insb adcl mov lds xchg xchg insl push int in js addb inc addr16 pushf xchg call jmp imulb mov aad xchg xchg outsb or out pusha daa enter inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl std jae fxam popa mov xchg xchg jno cmpsl mov in js ficoms ret loope dec xor push das and lret jmp xchg xchg stos cli ja and pusha (bad) sbb pop jmp addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov call pusha icebp mov lea sbb sub dec xchg pusha inc (bad) pop test cmc insl aaa adc mov rorl sti xor cwtl fnstsw mov inc movntsd push adc in dec cmp pop or mov xchg and ja out in dec adc push xchg jmp push roll in lods in leave pusha test pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl into addb clc (bad) stc xlat jmp inc mov mov jo inc fnstsw repz dec lret ror mov cli shll sub adc shll adc and mov cli or movsl loopne std stc mov or pop cli orb cmp jno bound inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmc lds xor loope adc or stc (bad) push adc fidivrl js aam mov (bad) mov xor mov jmp dec xor movsl cmp test movups loop and and dec test gs into loope sbb xchg addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov popa jns or js mov pop mov daa jno push lock xchg je cs adc arpl push mov pop outsb add pop lea jno mov out (bad) nop adcl adc push jb pop fucomi outsl or inc cmpl push insb push dec cmp xchg push lods push push popf aaa adc push inc insb (bad) aam jmp inc out and in mov inc jl inc inc mov dec cmp inc jbe xchg mov push popa ds ror std (bad) fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jp xor xor dec xchg and les pop jle xchg je xor xchg push dec icebp xlat sbb xchg xor pop xchg xor in loope test aad adc mov xor sbb (bad) insl aad incb adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl push pop add cmp xchg inc shl jge inc push add (bad) push xor inc cmp mov addl test xor test pusha inc fwait jg ficomps insb sbb cli add sub add mov add sub jbe lea lret adc mov out sbb mov outsb daa je (bad) fcoms adc xchg cli cmp sbb (bad) fxch lea lret inc lds inc adc lret sub pop xor xor lods fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov cs mov andb xor cmp cs push loop jb scas lcall out mov pop jns ds mov xor testb ds std inc insl clc sbb jp or in movl pop add or cmp mov pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl or pop or mov mov push test xchg and outsl loopne push lret pop mov lds pop mov push sub clc lret shl ljmp les aad dec imul xlat les and inc ljmp out inc mov jg fisubrs sbb cld mov or (bad) sub enter std sbb and fnsave repz pushf cmpsl dec clc fldl jmp push xchg jnp sti loope fstpl pop (bad) mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl xchg out data16 cmc xchg push mov ret aad jle mov jp (bad) xor ss es fldl cmpl inc xor lret inc fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov or jmp les adcl (bad) mov lds push lahf inc xor pop xchg sbb (bad) cli fld lds xor enter enter insl xor lds aaa push scas sahf mov cwtl lods es (bad) inc ret inc fnop xchg roll lahf sbb lcall pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl xlat hlt setg in rcrb or stc inc je aaa mov or (bad) add insl xchg adc sahf enter fs mov xchg scas adc popl cmc fwait test mov cmp cmp add xchg push fimuls sub sbb pop or clc popf shrb ja mov xor adc int sbb push and inc xor sub test stos notl mov aam addr16 jl ret sub iret inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmp fisttpll jo aam fimuls int3 in or xchg ficoml or mov jmp pop adc pop cmp and ret data16 mov mov or inc sub addl in addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov cmp int je shl xchg mov xchg out add into insl adc les aaa je or xor andl cli test stos adc std js outsl inc dec add push fwait mov in imul add xchg mov xlat mov std push jecxz cli icebp in jge lcall ret inc adc mov fsubp imul cmc push aaa icebp cli lea push (bad) in push xchg ret arpl gs mov rcl imul (bad) test repnz ret dec add stos adc mov addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl inc sbbl loopne xor cmpsb loope (bad) setb inc inc mov dec adc xorb lods inc mov cld xchg shrb outsb fldt or movsl jae mov popa mov push inc sub lds mov jo push lods mov adcb push push ss push jg nop insl mov sub mov mov addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl push push (bad) mov test pusha fs (bad) sbbb pusha push frstor or jge in icebp dec adcb pushf filds pop dec pop popa inc adcb xchg cs pusha push dec frstor or jnp imul or pop sahf sbbl into lods sahf xchg das add add stos fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov inc ljmp notb hlt jns or mov outsl fmul xchg andb shlb cli and pusha cmp mov jg imul js xorb clc jo mov inc and cmpsl jbe ljmp adc (bad) jno mov mov movsl mov add xchg pusha leave xor repz mov xor into mov jmp and push pusha (bad) cwtl cwtl adc dec jns push lea outsb shll inc and xchg adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl xchg sub dec and inc loopne xor nop incb xchg cli in adc sbb nop rorb mov addr16 cmp cmpsb cmp fdivr fcmove or hlt iret fsubr sahf mov divb mov lcall cmp test lret (bad) cld enter inc push dec jns popa jge mov sub (bad) pushf jmp jae bound pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov adc andb rorb mov mov stos popf (bad) mov xlat das lea mov mov addb das mov push sti lea icebp xchg insb xlat fcomi lods clc ret mov ss lea mov aaa ja insl mov cwtl das addl aad flds push and popf or or xor movsl dec xchg les hlt int3 and (bad) addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov inc sbbl es cld push invd movsb mov out sbbl mov mov adc fadd negl cli jno cli nop mov and adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl pop fucom scas enter xchg inc shrb fisttpll adc repz daa lods jae sub sub fldl mov xchg add call cli adc into jo adc dec loop (bad) fstpl cli nop sub or orl scas lds inc fwait rcr ficomps (bad) and xchg sub roll add pop xchg and ret test jbe insb jo addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl lea xchg mov pusha xchg leave movsl push cmp repnz sahf out ljmp jmp lods ljmp sarl push push sbb in je mov addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov js sahf mov mov cmp mov add rorb subb mov int mov inc jbe (bad) jg cmp andb repz pop lcall sub data16 int jecxz insl sti in fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl and aam add add lds ret xchg pushf mov push (bad) fsubrs adc xchg sahf addb cmpl add mov data16 (bad) cmp push out xchg lahf pop aam test or cmpsb lds rol xor andb cs mov mov or xor movl inc push cmp xorb adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl xchg xor (bad) push lock rorl test mov lds cwtl dec out nop fwait dec cmp int jmp (bad) pushl aad mov sbb adc cmc fimuls cmpsw add inc movl inc cs adc push push mov lahf icebp pusha adc pop icebp dec adc mov lock xor mov (bad) loop js out fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov add std icebp mov int mov daa xor add mov pop jp pop addl aas push add daa dec inc push mov push mov adc fxch mov sahf jmp inc adc aad and test lret stos xchg nop ds pop nop dec fcoms mov mov xlat inc in inc dec mov pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl add lock sbb (bad) sub pop xchg push loopne sub loop xor cmp xlat negl pop push data16 fcmovbe cmpsb lds xor mov mov iret je or push js add rorl mov outsl (bad) in fs push loopne in imul addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl andb movsl fdivs xor movsb loop lea inc nop push int3 dec dec and sub push clc xor sti xchg pushf idivl mov (bad) out outsl int3 xchg mov fstps xchg insl addl adc cltd in sarl fstpt insl addr16 in lcall or sub jecxz mov addl int3 stos push pop sahf jl mov add and xorl test andl mov bound xor push xor bound mov push stos sbb and addb divl andb das inc xchg addl fcmovne mov mov aaa int3 (bad) cld outsl cmp addb adc inc inc mov inc adcl addl in pop pushf and mov ret mov mov addl adc add addl andb incb orl sbbl in mov adc enter addb push mov ds add pusha add addb adcl addb sub xor testb andb ret jl clc or push and mov push xorl and fnsave mov and fiadds addl add sbb andl mov mov mov fdivrl mov lods addb subl cmp sbb addl scas mov int3 inc xchg lea mov andb cmp mov scas xchg in andl xor in (bad) sbb mov and mov inc mov jecxz andl addr16 mov xchg daa addl andl xchg addl addb and js mov test pusha andb mov and clc sbb andl (bad) jmp lods xor andl pop daa movsl pop imul cld in pop cmpsl addl dec (bad) mov cmc (bad) jecxz arpl lds ret mov loop mov and add fiadds and andb pop iret out outsl aas popa adc outsb mov addb add jae sub test jne sbb inc mov add add sub test and mov add add jecxz ret (bad) fisubs addl fadds push inc imul addb addl pusha fadd add (bad) xchg in xlat inc jne mov and and cld inc addb andl mov leave and mov mov lret mov xchg pusha xchg pop mov mov add pushf xorb add lcall add addl mull jb pop add mov sbbb xchg push add add les out sub dec int or and mov push fildll jmp addb stos sbb clc addb in xchg andl mov ret popa enter push test mov addl sahf addb mov push nop pusha orl andb andl fidivs popa or into ret mov mov and addb (bad) mov xorb add mov test or ret lcall addl test loope js cmp ret pop mov mov pop popf dec sub mov mov inc mov sbbb mov mov jmp aad (bad) pop sar mov add mov aad ja sub addl bts and addl inc jbe addb addl jge test cwtl movsb sbb mov addl loopne pop rorl andl push imul (bad) sbbl addl inc mov pop inc sub xchg and andl addl push xorl adc ret lea addl in sbb fmuls mov mov cmpl rcll orl add (bad) daa inc fnstenv rcr mov mov xchg push aaa iret or mov andl xor mov addl lret pop mov andl add mov and mov xchg aam into leave lock xorb lcall addb cmp addl addb add adc pop andl addb xlat (bad) fbstp sub addl mov mov das lcall add addl mov jle out aaa rolb repz mov ror ret addl pop inc les aas pop leave adc shlb and add lods mov aam xor mov stos and andb add mov pop dec movsl enter sbb xorb add adc mov andl xor movsl mov jp dec mov jmp or add cmpsl push mov jg test mov into dec xor mov inc fisubs addb addl iret int3 push fs mov and mov jle cmpsl xor cmp addl dec std dec adc mov addb ret mov or addl add sahf adc jp insl xorb add mov and out inc pop mov or add andl add mov cmp mov clc lret shlb insl andl addl dec cli push test addl xchg mov pop mov out cmc out addl mov and nop movsl xor andl pop cmpsb jb jle nop sub and and cltd (bad) repz hlt in jge inc cmp jg xor xorl dec andb sti jg std mov addl pop icebp mov and addb repnz pop mov sub test or add cmp mov mov xor mov addl hlt orl mov cmp or and cs mov mov pop shlb cmpl mov xchg and into outsl andl mov sti mov pop adc and orl cmpsl cmpsb pop subb addb addl dec andl jecxz and sti jne rcrb mov mov or adc or addl in insb lods jg cmp andb xchg add mov addl add xchg sahf in push pop cmc add add mov and jo das xor andl ret (bad) pop mov pop sahf mov incl andl jo dec insl addb sbbl jnp mov andl stos sahf adc addb jns dec sub lds xchg and andb mov and add imul adc mov (bad) pop stos inc ret xor andl (bad) movsb mov fcompp dec inc aam out mov add (bad) pop mov call sub mov jp pushf mov add outsb cmp test sub add lods pop xchg mov add addl push test in andl add sti lahf orl andl mov (bad) mov addl ret scas and pop push leave lahf repz andb mov sub xor xchg loopne mov addb add cmc cld inc outsb and pop cwtl andl sbb lods pop insl push in adc mov addl add mov mov sub and lcall xorb clc insb lahf jge outsl popl mov leave pop mov xor mov and add andl lock jno rcrb andl add mov mov lea ret mov mov add sbb ret jno cwtl out jae repnz xorb add cmp add lds std andb andl mov addb or add jnp and subl lahf xchg xchg addl fadds jge mov mov and ds cmc lock andl mov push mov js inc add andl pushl repnz mov addb mov jp jge andb andl es and addb stos out fstp movsb lods mov icebp addl cmpb sbb mov addl leave add mov mov stos popf nop popf aad sahf test in jno add andl fwait mov cmc mov addl cltd add test addb mov pop push mov andl mov mov adcb jo addb aam ds andb (bad) scas pop xor mov andl xor repnz call cmp andl jl cmpb dec xorl addb xlat xorb and xchg data16 and add mov mov mov addb repnz xchg and mov fs int cmp orb addl xor mov xchg cs outsb sbb andl stos push loop call sti mov mov mov mov sahf lahf ret loope cmpb addl mov andl mov in shr into mov add addl mov adc mov addl rol cmp ret andl subl dec sar cltd cmpl addl hlt sub orb addl addb add and inc xchg add andb mov push lods stos stos xchg cmp add sahf addb add jecxz inc fadd mov addb addl outsb mov andb or jo rorl jle and add xchg mov clc cmp xorb andb pop or mov subl add insl ljmp add addl adc and addl cli pop addb mov pop fildll pop pop addb addl ds out loop repnz cmp (bad) roll andl push insl ss andl mov sub add andl test test pop lcall addl mov mov add jmp or leave stos add imul ljmp add andl xor jmp and sbbb adc adc sub test mov xorl rorb in andl call leave in mov andb mov andb xchg jg xchg mov mov addl push jge pop inc push mov add and test mov addl dec stos addb xor and add and daa cld dec test and addb dec jge inc test push mov addl lcall add addb cmp mov mov mov sahf subb (bad) stc mov inc mov add andl add cmp addl out shrl add repnz mov mov xor andl and push sub mov subb mov addl sub addb fidivrs stos jmp int3 sub andl out std sbb addl imul addl dec adcl and mov mov addb outsb pop scas hlt test xchg addl lea inc hlt mov addb popf (bad) mov addl mov mov in ret mov mov xorl orb addl cs sbb andl sub cmpl insl adc andl and push mov ja cmp fistl mov and mov xchg mov xchg andl jle mov test cmp or andl sahf xchg pop leave test sub mov add call xchg or addl aas or sbb lcall add imul xchg in sbb test ret addb addl and pop scas jmp mov add addr16 mov mov and add adc sub aas das mov bnd xchg fsubs and andl mov addl mov into mov xchg add addl inc fiaddl add adc xchg and jl jae clc addb mov std cli xchg mov mov addb addl faddl adc mov and mov testl addl scas and test sbb andl mov dec cmc mov mov add popa add add inc iret mov xorb add pop lock cli or addl push call xor xchg jnp and xor mov cmp xchg andl addl pop popa ret icebp inc or addl xor adc andl sbbl in or andb push subb sub pop inc cwtl mov dec add and push andl subb cmpsl cmpsb xor inc xlat andb andl outsl mov and addb addl mov addl pusha inc stos add flds into jmp mov addl pop mov sub addr16 addb push call jne ret lahf add andl sub push xchg fisubrs dec inc andb add pop lea addl cld xchg andl and andl mov movsl xchg sub and mov sbb shrb add mov addl sbb addb (bad) fdivl add xchg or test fadds mov test cmp mov mov addb cmp in jg addl pop add loopne push mov andl in sbb mov mov cmp and imul mov mov sbb sub mov andl mov out mov addl pop cmp push adc andl mov sahf xor cs or addl xorb and push mov andl data16 andl mov adc (bad) lret xchg addl addb das xlat inc popa addps fiaddl add addb icebp jo dec sub mov addb add lock popf loope addb sub dec jno addl inc mov mov dec shlb push push mov and add sub adc popa and andb push (bad) out pushf popf xor cwtl inc jnp sbb mov addb add fidivrs pop mov mov add insl addl xchg adc cs sbb addl add in lock ret addb addl je cmp pusha mov test add sbbb into js push mov mov and sub inc mov repnz adc addb andl and mov scas pop rorl fucomi in in addl add pusha stc or xorb add inc add andb andl outsb es in and subb push mov mov lds bound and orl lods jmp mov cli push jae andb subl aaa mov mov andb lcall mov add push aas mov lods in mov andl mov push cmp xchg cmp cwtl fdivl addb mov and xchg fadds leave dec sbb and add dec int in fs aam pushl mov addl iret out andb fldcw bound push mov addl push inc jmp addl cmp mov roll addb mov mov andb add stc cmp or dec jecxz mov addl stc (bad) mov adc push xor addl cmp mov addl mov addl cmpsb rolb andl jbe pop rclb andl iret pusha add add sbb and adcb xchg insb leave dec inc fisubl mov addb arpl cltd orl addl pop mov cmpsl xchg adc dec leave adc andl ljmp add lahf jl dec push out pop test out sbb mov mov mov push sarl addl rorl stc cmpsl imul xorl xor mov and sub rolb and mov test stc or dec loopne dec sbb addl ret (bad) pop mov andl ljmp call test mov daa (bad) fisubl mov andb ret repnz movl enter test addb cmpl inc xchg jmp andl out cmc clc dec xor je mov addb cmpsb or push test mov adc shlb and andb xchg nop out pop pop sub stc push into xor mov addl adcb mov add xchg mov xchg rcrl addl add jg and mov jae jle addl jae cmpsb add stos lea lods push addb addl pop cmc lret jmp jmp imulb addr16 mov and add test addb andl loope lea andl fidivrl mov mov mov add mov xorb add and js andb andl add mov addb jbe andl addl andb sbbl mov xor stos jbe add mov andb xor andl repnz inc addl mov addl andl (bad) jp testl mov rcl mov in mov andl movsl adc daa dec divl mov addl xor std mov addl inc push jno int3 frstor addb aam push pop (bad) fisttpll pop add andl jge sbbl addl add arpl adc xlat cmp mov lahf pop pop dec and andb mov sub ds sub addb aas jne push out test and mov lret in sub fld add addb and loopne addl fs stc add inc fiaddl mov cmp daa xorl in int xor shrl out cmc fiadds andb hlt mov jecxz or scas roll andl sbb addl mov cmp hlt addb or les mov andl adc ret add mov jl cwtl add addl andb mov addb sbb add pop adc pop andl xchg cmpl imul sub addb add popa repnz (bad) imul addl addb movsl lds pop mov mov andb andl add mov stos and sub addl orl lea (bad) push mov addb fs jmp mov addl add addl xorb add push fs mov add int lock addl add fimull mov cmpsb addb mov mov int and mov addb addl xchg clc addl andl aad sti xchg mov mov mov les daa push sbb andl push out or out sub adcl mov mov add pusha xor fsts lea mov mov add pop imul andb andl and sbb cmp pop aam jnp xchg je andl addl mov addl shlb pop lods incb and cmpsl imul roll and addb mov xor fistpll and mov addl andl (bad) icebp pop andb andl repz int sbb scas inc (bad) shlb andl mov push enter (bad) mov or addl dec cmpsb push jg mov mov addl add fstps xchg nop mov mov sub shll addl mov xor das (bad) out shr or mov add mov int pop in and arpl andl mov cmpsb repnz pop and jo adc addl or jle in sub mov dec fbstp sbb xorb jmp xchg andl push adc pop cmpsl fistps lods and andl fisubs addb jp cmpb mov andb out push xorl pop xor (bad) add add iret adc orb addl in sbb xchg adc addl clc fdiv or sbb flds addb pop mov rcr repnz andb iret sahf mov andl mov mov mov addb aaa mov mov jne out mov addl mov push roll addl stc in fmull fiadds hlt mov andl addb addl addb arpl movsb mov jae fbld addl inc in call incl aam addb add addr16 mov and mov push sub mov inc into xchg insb in rol fimull mov and add out cs stos out pop test and andb pop or pop movsb mov cmc mov fnsave popf mov addb add pop outsb jb mov add subl jg push in and addl es js enter andl adcb lock outsl rcr mov mov jl add addl test mov andl jmp mov fbstp inc lock jo les aad or addb andl mov inc and mov test inc add cli cmc lods mov mov add insl adc xchg addl sub dec (bad) mov sub add andl mov addb insl subb sbbb jno and adc mov orl addl mov into mov mov andb inc jne loopne out andl fiaddl (bad) xchg (bad) jge xlat sbb xor add and gs or sbb addb mov aaa subb adc imul or imul addl cmp (bad) xor add pushf addl push cmpsb or mov (bad) icebp mov addl lret addl push andb popf pop outsl mov mov sub pop lods lcall and mov mov add mov sub mov addl push ljmp addl out mov andl testl roll addl in mov adc addb mov cmp scas push call addb je sub pop sahf jmp sub addl std inc jge jmp addl imul mov andb hlt mov rorb xor adc andl xor addb ret mov sub mov mov dec sub xchg in pop xorb mov mov xchg andl in xchg mov sub mov and adcb imul addl outsl adcl mov addb or inc addb and addb add scas lock jae enter cmp push or mov andl icebp mov andb mov into mov test addb add scas xor cmpsb lods addb andl xor cmp dec cmp mov faddl test scas idivl jnp and add or add mov and andb sbb mov mov sub loop cwtl stc incb mov addb add mov rcll andl sti mov int3 lretw and addl call mov orl addl cli fidivrl mov lahf cmpsl mov addb addl mov stos xorl dec mov addl das mov fmul outsl (bad) xor andl pop cmpsl std hlt movsb in and mov mov jno repnz jae xchg mov and mov add ja cmpsl pusha xor and jne mov add and enter andl add andl fdiv test mov and sbbb stos pop andl addl subb dec ds addl xchg enter push mov cmp adc add addl cmp adc ficompl (bad) jmp mov and addb mov mov mov andl outsl and pop int3 in rorb andl dec into pop fs dec xchg andb andl mov popf outsb lret sti (bad) in and addb lock fldl in addl mov (bad) stc cmc scas dec mov ds mov addb ret mov mov ror xlat mov mov enter popf add andl mov sahf test sub out out mov add mov and dec jne andl faddp movsb lea xchg nop lret addl test andl xor dec push mov addb pop (bad) sub mov sbb mov mov in fcoms addl repnz addl stos mov pop movb addl sbbb repnz xchg add add movsl cwtl sti fldl addl sbb sub fnsave lret andl fsubs addb subl mov shlb mov andl mov into or adc andl mov into aad call mov andl jmp pop mov (bad) les jbe and mov sub xchg adc inc aas andl pop test jb rcrl cmpsl addb add or mov add add mov ds add addl xor adcl andl cmp mov addb adc test xchg andl sub pop mov (bad) cmp andl xor pop clc ret ret clc bound test andb and fisubl addb add push fwait cli xor mov addl out (bad) sbb addl add test subb sbb rcr (bad) pushl and add inc rolb mov (bad) in lcall add and in aad and adc mov mov add inc dec leave jns mov cmpsb addb andl andl leave xchg push enter or imul addl add lahf ljmp mov add imul sahf mov cmpsb bound mov add xchg int mov inc imul dec jecxz add mov orb xor clc add sub iret dec pop fiadds addb mov loope dec push inc das jle andb sbbl addl pop loop (bad) mov andl rol pop add mov xchg loopne add and dec int enter es addl pop sbb cmp sub addl leave mov cmp stos and addb clc sbb mov addl test mov ret xchg addl sbbl dec mov mov scas enter test add andl movsl and test xor sahf andb add push or lock xchg mov mov test icebp add andb mov call cmp addb addl movsl ljmp pop lds addl sbb add addb mov inc xchg or cmpsl inc in addl int3 mov xor int and cmpb mov filds addb popf pop add add jecxz cmp (bad) sarb mov std and mov (bad) andl into rcrl push dec addb subl pop bound mov andl xlat outsl insb insb dec andl rol les roll andl pop push sahf pushf in or add addl xor mov addb and push les andl xchg rcll add add adc mov cmc shrb mov andb push out addb add dec cmpb mov xchg aam dec xchg mov insl stos sahf test or adc push mov inc addl in shrl pop stos push mov incl mov and add fninit cli popf adc and andl xorb add das and mov andl hlt cmpsb xchg pop loop jl sbb andl add movsb mov addb mov jge sub mov pop push scas jle subl mov and fbld add push addb andl stos in add aam push andl mov andl ja pop shlb mov add fsub adc std test sarl leave aam insb jl and xorb add movsl loope mov sbbl add addl sbbl add mov adc mov pop fisttpll aam and addl add push addl adc int sbb xor mov andb out mov mov mov and cmpb mov mov xchg add and xor cmp addb mov jl mov roll mov pop xchg xchg and addb popf pop jnp mov cmp mov addl mov ret jae ret clc ret in int mov addl in lods mov mov mov jecxz sub addb pop adc fwait sbb mov add mov adc cmp addl mov fneni(8087 stos xchg or mov addl or out clc sub mov adcb mov pop or cmp rolb scas mov mov addl subb addb mov enter cmp inc mov icebp cld addl iret mov mov and addb adc mov addb shll andb mov add mov outsb getsec repz jne mov mov fstl rorl andl imul popa fiadds addl lods cmpsb outsb (bad) addl addl in mov add addl leave pop sbb ds repz addl lods sub add push cmp mov addb mov arpl andl dec add and mov fs pushf addl addb push mov imul stos cmp mov andb sub sbb push sbb addb add stos rolb mov cmpl sbb mov andl mov mov and add and ljmp addl jle sbb roll mov addb add jp cmp sbb int3 jnp andl loope or stc or push push and addl aad mov mov xor fsubr sbb jge mov add addl xor es test mov mov and or fdivrl sbb andl shll shrl and mov add push (bad) add jmp dec loope sbb mov add push inc push or inc lret (bad) rcr mov test andb andl mov add mov sbbb js sbb addb imul mov addl push shll and scas push mov or aad addl fmul cwtl enter andb push int3 mov rcrl and addl addb mov rcll and add cmpsl adc jp sub mov mov xorl in pop movsl add add lret movsb sbb je pushf add addl and clc lds andl sarl andl cmp sub addl adc xor addl imul push hlt addl cwtl enter lock les icebp test addb jle mov orl addl (bad) jl jns cmp jmp addl stos xchg mov jmp xchg in roll mov xor aas or ret xor mov or aad mov add xorl xor xor andb sahf test mov pushf mov andl add cmp andl dec roll addl mov in mov fidivrs xorb mov std roll pop xor mov addl lods mov adc mov and dec mov inc push inc add addl adc jl scas mov andl dec adc addb add jp mov inc ret cli jg fadd and andl shrl mov addl (bad) imul inc fnstcw lds add addl lahf push addb adcl push outsl les and xchg lock xchg int andl ret int3 mov ds mov and add push lea xchg and andb jg fisubrs sub addb add nop mov jmp sbb mov add push int rcrb pusha and addl or int enter icebp pop out addl sbb xchg roll mov fmulp mov nop orl arpl in addl adc adcb xchg (bad) addb andl aam inc lock mov in lret add mov or iret mov mov mov add lret sub sbb jo adc xorb add fadds add addl orl add mov andb mov mov or lret dec add xor mov addl and addl popa mov daa int3 adc out xchg xorl pop andl je fstpt andl mov addl lahf cmp lock mov stos adc and add jl js cmpb andl rorl push or addl add xchg xchg adc mov mov addl mov addl cld cmc call adc addl jecxz sbb out sbb jle andb add jge pop adc lock jne xorl mov addl sub cltd jbe scas imul andb mov ret inc dec repnz add sub mov addl call and addl pop xorl add test addl push js jae test ret addl adc push mov test and xor xor xchg stc in sbb mov mov addb int sbb es mov jbe addl dec mov addl mov xor pop mov roll andl mov xchg aam xorl je sub xchg call lea mov andl pop movb out andl push push (bad) add add addl mov scas das nop outsl mov addl cli push and addb (bad) in dec aas (bad) aam push pop int inc adcb mov add out (bad) leave cli (bad) push sbb sahf dec xor addl addb imul jnp mov mov andb jmp mov sahf test andl mov in jo out repz mov das add outsb arpl mov add mov jns sbb mov addl xchg adc pop repz andb insb int xor in xchg outsb out push xor add addl ja xorl stc stc xor addl mov rcll sbb aas data16 addl aam or int xchg andb and xchg jg adc addb addl outsb push test aam out inc lock fwait mov and stos leave or inc nop xlat enter andl push sub mov andl dec in cmp mov add mov and mov add loopne mov scas imul sarl and out and loopne add mov cmpb ret loope dec iret push stos jae popf or mov adcl addb jecxz int aaa xor add addb test mov xorl mov andb js fsubrl and xor andl call cmpsb fstpl andl popf adc mov stc addb mov in dec les mov nop mov pop and addb rcr add addl fsubrl jbe test mov jp mov addl mov addb sub int3 cmpsb aas add andl dec push mov ret mov aas (bad) fadds addl test dec jb mov andl std mov fcoml addl clc mov andl in dec xor roll les mov addb xchg push and add addb test andl xlat and jae jbe movsl insb andl addl xchg gs mov xorl inc jmp aas pushf dec pop push cmpb add add mov cltd and addb mov andl cmc lret (bad) addb and ret xorb mov xor call sub mov add mov cltd mov add addl and mov addl jmp pop pop leave stos outsl nop mov mov addl push xor mov xchg push addb add push out and fmuls adc add add in int dec int3 mov mov andb xchg inc sub jp loop sahf jle andl cmpsl push push mov addb xorl in insl rorb andl and andl cltd sarl stc mov and add and and andb pop lahf aam dec cmc scas xor mov addb add js pop andl and mov and addl (bad) test test mov sub dec in pop sbb addb addl popf xorb pusha test mov addl test xlat inc addb andl push loope jne repnz mov sti ret lcall in andl mov add push mov sub add cmpsb mov fldl dec and inc andb andl and mov andb adcl push fstl and or lds sbb addl or addl xor cmp mov andl mov fbstp push cmpsl mov sahf push add and adc push ds push mov addl leave xchg out dec imul mov and add je in and addb add daa mov mov out (bad) popl addl jo sub cltd jbe cmp pop and addl ds (bad) push adc mov mov in add ret add andl fnstsw addl mov and sahf jl mov push xchg aaa mov andb cmpl xchg xchg insb mov mov addl or jge push (bad) fldl addb addl cmp std aam mov addl add addb adc les fsubrl mov addl cmp andl addl mov addl and addl ret sbbb addb ret push stos cmpl addb xor test out addb subl pop mov (bad) enter andl (bad) and es jbe (bad) (bad) andl popa loop xor mov addb scas pusha cmpsl dec push jp js push mov addl loopne xor pop dec test mov addb js lods std jle mov cmp addb add stc inc xlat jbe scas stos lods addl addb pop dec incb outsl mov inc cltd add mov andb and push inc stc mov push add addb add shlb pushf fcmovne ret (bad) and addb cmpl insb addl aas xchg pop cmp inc aas push mov and add jns xlat cld bound andb push enter scas in mov add or scas cld dec jbe xorb add add adc shrb sahf andl int imul sbb je pushf inc and addl lock addb mov dec dec xor push adc or add addl cmpsb int jg,pn pop add addb pop jp cmpsb sub addl mov xor push lea addl test push stc repnz jg out push add add sbb orl addb out js out in movsl mov and movsl rcrb inc adc add mov andb test stos (bad) pop jne and orl int3 cmpsb data16 mov addl fst mov sub mov pushl and sahf jecxz mov mov mov mov pusha add and push inc insl paddq addb mov test (bad) fdivrl andl xchg or or add xchg and addb inc popf addl insw mov pop jb mov addl nop mov addb pop add imul andl xchg add lcall andb add mov repnz andl aad or lock jb,pn addl mov mov andl dec scas stos inc cmpsl enter addb dec rcrl xor mov mov adc insl pop and addl xorb insb test andl addl mov stc xorl jno push scas subb lods and dec xchg mov add add clc shlb cmp andl xchg push outsb out push testl sbbb or lock cwtl addl xorl mov xchg jecxz xorb mov in add pop pop and xor mov andb pushf lods outsl add pop mov andl cmpsb sub xchg mov addl fisttpll shll cmp andl rolb xorl cmp addl fnstsw enter jmp (bad) loopne mov andl ss jnp andb mov ficoms or dec cmpsb loope andl pop push insb push addl addb ret push mov mov andl xchg jae (bad) sbb and add inc into subb mov addl dec lret pop insb mov addb add roll lds dec stc andl mov jbe jle xchg and addl frstor inc pop mov addb mov jecxz or mov jno ret mov add repnz jnp ret push mov stos rcrb mov and cmp fnop add addb andl sbb fstpl mov andl dec inc (bad) sti faddl (bad) mov add mov jge xchg xorb add cmpsb fldt and imul lcall and add xchg xchg jbe xchg insb clc push mov andl addl mov xchg xor andb addl movb sub stos mov andb cmp mov jg fcoml andl ss cmp andl nop andb add mov addl jnp and add and or inc mov andl ficoms iret orb cmpl add inc sbb sbb jp sbb addl js xor fcoms mov mov cld cmp shll mov dec add addl xor out movq push ret fildl addl fimull jo mov addl mov mov mov mov push mov mov orb addb adcl addl or addb mov pop nopl and mov andl std and int3 orb mov sbb xor lahf add into pop cmp adc addb aad mov iret repz in and pop lcall addl mov andl je adc jle stos mov andl hlt addb addl mov mov sti (bad) cwtl mov in js cs andl sub rcrl loope mov js aaa cmpsl add addl (bad) mov addl cmp addb fsubr sbb (bad) in insb or test lds addb add xchg add andl cmp in xchg pop xor mov mov addl outsb jns mov andl iret filds addl mov lea andl aam or outsl sti cli mov mov and add pop gs sbb mov mov ds adc sbb loop xorb add cmpsb adc push in and rorb mov add movsl mov mov sbb pop mov insb addb mov add fildl addb addl sbbb addb decb add inc (bad) fnstcw (bad) cmc addb andl and mov jmp std mov addl add xor lds and mov add call lahf andb andl stos mov ror mov mov adc sahf add add push cmc andl adc add push sahf adcl addl mov jo lods mov movsl shll mov repz das sub lahf scas dec repnz addl cmpb sar cmpsl add and dec inc and addl test add and add pop in xor and addb push cmpsl cmp addl test xchg mov addl sub addl scas pop adc push enter pop iret incb sub andl (bad) inc andb add rorb andl mov addl das sbb std imul orl and mov addb movsl cmp stos mov addl xlat sbb arpl cmp addl jnp xorb cvtps2pi andl addl cld in mov mov addb bound stc add add addb and mov shrw andl mov addb addl stos addb addl out aas dec andl test jp mov bound mov and dec sti jns int push aam adc addl nop movsb les (bad) mov and mov push sub mov andl mov testb mov add das pusha add add orb add test orb dec popf pop test andl jge cmp and andl scas xchg lcall aas mov and add mov loope,pt push or andb out xor or repz addb add jle repnz add mov ja mov imul add out cmp inc fmull test mov inc xor xchg addb addl fwait add imul fwait inc stos and xlat xlat mov and shr lock add outsl orb and aam pop movsl sub andl das jge andl out pushf (bad) push nop mov mov add cmp sahf pop jl adc data16 add addr16 int3 push andb andl mov andb add add movsb lret movl dec dec addl dec push inc jge pop int lret add addl bswap into push and andl xchg lock add and lret sahf fiadds sub addb mov cmpsb mov add sbb push scas andb andl cmpsb xor dec fisubs xchg andl mov andb sahf (bad) sahf jmp shlb andb mov and sbb mov into (bad) lahf add or cs add andl xchg mov sbb pop lea addl imul aad fisubrl popa mov mov addl les and outsl (bad) addl andb fldl mov frstor mov addl mov or pop sbb addl cmp addb mov iret call push mov push addl js xchg cmpsb add sub enter cli andl addl push push dec frstor mov addb cmp (bad) iret add add xlat mov addb call inc xchg mov mov mov pop jle push xchg call andl std int test mov andl nop xor lret enter andl push sub mov add sub out subb andl or iret jp test push loope out ret and mov out adc andl addl imul mov add add sti lahf cmpsl popf andl add add mov in mov dec xchg or ret adc add jmp inc push orb add ret test cmpsb out addb sbb aad cmp iret xor andl inc andb cmp xchg jge inc or andl cmovns aas int subb and andl xorb add jge bound imul andl add mov and addl dec addl addb mov fnstenv mov adc dec andl addl mov andl push xorl js loop dec addb andl lods outsl outsl mov rorb repnz mov mov mov jp mov mov add imul scas roll or xorb add adcl and mov ret and fwait add mov cmp lahf test gs inc andl addl out jg jnp cmp mov addl mov clc out xchg pop mov andb adc sbb mov and sbb jg sahf mov aas orl and and loope or addl xchg dec inc sub xchg mov andl out orl push faddl andb hlt sti aas out push adc mov addl (bad) xchg sbb andl addb sub add andl mov and nop andb add mov mov addl addl or addl je sti push xor clc push xchg addb addl and mov je leave cli es pop add addb fisubrl imul andl orb pop andl addl push push scas flds addb aam or or add add push lock ret lds andl mov mov ds sti mov stc inc mov mov mov mov push dec test mov fadds addl andl orb mov add addl push out xor mov addl pop fs addl fxch testl pop xchg in pop fcoms add add roll (bad) mov andb mov not and andb xchg hlt mov addb add in (bad) (bad) loope andl ficomps int andl (bad) fmul jmp cmpsb cmp and add aas inc adc and andl xorb add in mov add push ret xor cmpl js add mov cwtl ljmp addl insb xchg fildl nop insb push in dec sub mov pop sub adc push rorb jg jo addl in andl add mov repz ret scas fcompl and mov inc inc or mov pop dec rorl mov mov add in push cmp xchg addl cmp mov add and iret mov mov addb jmp filds add ret popa js sbb rol andb sub dec popf adc sub xor cli mov addb cmpsb push sub push fucom jg lock andl outsb sub andl xchg mov xchg (bad) shll andl rorl push xorb subl and add sbb add sarb sbb and addb lea addl ret (bad) ret (bad) test rolb mov addl push mov mov inc mov or sbb addl stos jecxz scas jge mov andb add mov inc popf inc loope ret and andb out add subb andb mov iret ds mov pop loop add add addb sahf ret cli (bad) call addl add test pop add addb sahf xchg addl add pusha and push andl addl imul mov mov addb std sub mov andb mov cli mov daa jmp subl sub cld andl adcb xchg test addb sbbl mov xchg addl sub sub sti inc xchg test xorl jg push add addl and mov outsl loop imul loop,pt in les addl mov mov adc addl test js jle mov andl sub outsl andb mov lahf int3 and scas lret push pop push addb add dec ret int addb cmpl imul lea andl or xchg jbe mov enter addb lods sub add shrl and andb adcl xorb add faddl inc adc xchg sti andl sbb mov push and addl shl addb mov adcl addl xchg sbb in sbb xchg scas ret mov and sahf enter addb addb andl inc xor mov mov andl (bad) sahf cltd shr sbb rolb addl add pop lret add sub cmp mov aam mov add (bad) lret mov xor add andl inc ret pop push les add mov adcb and jmp or andl addl jmp lea andb orl ret roll mov andb adc sbb or popa andl mov mov add andl mov faddl addl test daa sbb mov loopne insb cmp mov cwtl iret xor arpl mov subl addl subl addl inc andb addl push nop daa dec or enter cmp xchg add andl xchg fsubl mov add mov adc fiaddl mov nop adc call andl in sar add andl mov xchg xchg mov xorb mov and mov xlat loope mov sbb lods add addb mov push cld xchg lea addl push mov adc addl ljmp addb xorl neg xchg jo shr (bad) xor cmpl addl pop mov movsl addl mov sbb (bad) mov addb mov xor lock andl fiaddl addl mov fsubrl aas ret andl dec imul ja mov mov and loop mov arpl jb dec cmpsb adc addl (bad) orl iret cmc sbb mov addb or pop test repnz addb add cld movsb pop dec dec xchg jno int3 into addl addb dec mov mov add fists add xchg stos subb mov add in pop xchg addb andl jmp bound addl adcl mov mov and add add pop ret cld mov and andl int test xorb add cmp pop lds add adcl jl ljmp mov std push cs pop addb mov repz adcb mov mov addl bound sbb addb lds mov addb addl jmp sbb andl test cmp mov addb and mov jae xchg orl xorl jnp pop (bad) out fisubrl adc andb andl jae lcall addb dec sbb mov jbe and add push js andb sbbl dec mov addb shll dec test jmp cs test faddl andl test mov add and sbb andb and pop popl addb jb addl mov test mov stc cmpl pop cmpl adc adc adc or inc sbb xchg addl lds and xor addr16 addl xor mov mov inc and test ss mov addb leave cltd shlb loopne into insb sbb addl xor dec imul andl mov popa addl inc mov and sbb andl add aaa xchg or adc mov addl add addb jmp inc adcl andl pop cmp push loopne and xor gs dec xchg push mov cmp addb push dec pop std xor addl and addl sbb inc sbb pop roll mov xlat (bad) pop jae addb or stc xorb mov andl dec or pop call mov addl andl mov and (bad) in mov clc mov addl or mov addb in andb dec pop cmp cmpb mov addl mov lods sbb fldl mov arpl movb andb sbb lods ret imul andl test addb subl lret push dec fstl andl hlt adc xorl and add sbb outsl addb and andb mov jbe pop pop mov addb add add andb addl jbe nop and clc scas sbb in pushf and addl adc stc lods mov jmp pusha int addl popa mov push addb addl fstl cmpl lods mov and sti push pop mov lods pop push fldcw mov mov orl mov rcl cld rcl test sbb xor mov mov add addb or mov pop xorb add pushf mov and cs ret jecxz add mov addb (bad) push inc imul mov sbb mov andb addl stos andl addl iret ljmp addl addb stos out iret add and mov test dec xchg xorl and mov scas loope movsl or mov adc in pop and add test lods addl xchg add mov jg or addb test and andb addb addb int mov andl sub scas andb add jp mov nop cltd leave pushf jl mov andb mull sbb cmp andb mov cli pop mov xchg addb addl andl pop mov stos (bad) jp sahf adc sub addb mov pop sbb adc andl xchg pop push fldl int3 test andl addl lea addb pop mov lss mov adc addl jmp xchg subb fisttpll addb mov andl (bad) pop sub jmp xorl mov xlat sub mov mov andl ds mov xorl mov mov and test mov addl leave xchg sub bound mov negb xorb mov add dec lcall addl addb orl dec lods in jbe (bad) shrl mov add dec inc data16 sti dec add push popf xchg orl mov add pop ljmp jecxz addb add mov mov add pop andb add mov mov andb add sub push jl pop mov addb add test mov and icebp pop stc (bad) bound adc sub jle and addl mov jmp addl test ds mov stos xchg lods addb addl loopne jo loope inc adc addl lods loope cmp jecxz addb andl jmp testl andl jns (bad) aad loopne addl add mov xchg flds and addl sbbl and stos xorl sahf imul pop pop or pop mov and cmp nop pop in dec adc mov addl scas icebp jp push rorl pop cmp repz and mov lcall mov andb mov repnz andl ss sub mov daa rolb push xor andl (bad) fsubs mov xorl cmp addl cmpl and mov mov addl inc pop xlat rcll pop fwait stc addl nop jb outsl sub addl sub addb sbb addb rorb adcl push push pop mov andl out inc faddl addl xor mov and stc jmp mov dec andl daa mov cmp imulb andb mov pminsw shll fistps mov addl add js andl push (bad) icebp in mov xor push mov pop add addb aam addl inc mov dec mov fwait lea mov addb pop xor lods pop sbb xorl fdivs or sbb addl and andl xor addl cmp cltd and int3 xchg mov dec bound mov and pop inc xchg loop scas imul andl enter pop ds inc cmp mov addl subb andl mov add dec add mov addl mov popf cpuid js mov addb les out aaa in arpl addb add (bad) jge cld aam or mov addl mov addl subl stos push stos int3 addb add subw pop addb cmp add js fsubl andb mov xorb and add or out aad and and andb lcall cmc cmp sub addl cmpsl fsubrl mov add repz addl add pop addb mov les mov addb addl cmc orl and (bad) pop ljmp mov mov cmpsb (bad) fdiv call pop mov andl mov xorb lcall addb or mov add cwtl fstps addl add andl insb mov pop add mov andb cmp add fisubrs mov andl addl pusha ret cmp andb or sbbl andl sbbl not andl subb jae (bad) add and (bad) call addb pusha dec pusha inc pop gs adc ja nop andb andl and ficoml mov andl mov mov popa lcall addl scas pop mov sub addl movsl or addl sub xor fdiv add mov into insb mov andb add shrl andl mov stc pop xor mov xchg ljmp xchg adc mov addl mov pop mov addl sbb add addb cmc sbb mov andl pop fidivrs xor pop andl addl mov andb adc addl ret jbe,pn in (bad) into stos fadds andl adc inc mov jno andl jg addb add bound lods jo mov andl es andl outsl dec mov mov in mov sbbl add addl mov jmp and mov bound add test mov stos in andl stos pop pop cli jno adcb mov add movsb repz andl jne loope ret andb mov loop xor ljmp mov mov add pop icebp mov mov addb orl fs jne sahf jo out addl mov sbb adc andb add mov pop orl nop icebp out and andb mov mov mov addb add imul addb pop jnp jno xor mov pop sbbl addb mov sahf cli mov add push mov nop dec mov and test dec in jp cmc xlat jl setb add dec mov (bad) sbb mov dec test pop mov and mov xor pop bound mov add jb popa popf imul add addl jbe pop pop xorb mov add cld push adc outsl cmpsb jmp loop jmp and cmpb sbb jg mov in sahf addb andl addl mov addl test cmpsl rcr mov and or xorl adcb into bound andl push stos sti xor sub stos aam addl das arpl inc addl andl aam fmull addl test adc cli ret addl fdivp add lahf or aas cmp std mul fisubl addl jp pop mov mov push add andl cltd stos mov insb stos in push andb add arpl cmpsl leave repz and addb dec dec fcomps sbb xchg cmpl popf pop addl sbb xchg movsb or xchg fstps mov addl andl mov xor mov add addb (bad) andl pop sub sub andl addl add mov addb subl addl call out sbbl andl pop jmp adc adc add je out jmp subl addb jl pop in das inc mov xchg and andl cmp out xchg loope dec je shll add mov fwait sbb andl inc inc or addb pop test scas sbb mov (bad) (bad) ficomps mov add leave addl test andl adc andb mov lea rorb addb add incl mov gs cltd sbb dec mov cmpsl addl addl mov and add mov sarl and andb subb xorb add inc xor pushf sbb add xor ljmp addl movsb scas addb mov pop orb lret mov mov nop xor mov sub mov aaa addl sbb cwtl shll andl sbb subl andl lret shr xchg cmpsl jge test into inc xorl mov jo popa xorb add mov fsub andb andl fisubl jecxz mov pop mov addb jp (bad) pop mov push loopne andl addl cmpsb pop enter xlat addl popa sbb adc rcrl addl cld int adc int ret addl xchg int add mov addl roll mov cmpl pushf mov andb andl pop test rclb andl mov imul movsb int3 loope addl pushf mov jno addl sbb (bad) mov mov mov cmp inc inc frstor add xchg nop pop stos bound addl pop imul inc adc pop andl jbe bound dec hlt outsb pop (bad) adc andb mov or loop lds cmp addb addl mov addl push stos xchg inc fimuls lock mov andl sbb pop cmpsl jle mov test add mov jae sbb fndisi(8087 andl addl adc addl pop fildl dec adc add add cmpl addb jne ljmp lds pop andl pop add orl subl cli scas lea mov andl or ds movsl aad andl lcall lcall pop add addl xchg inc insb (bad) lcall addl out or xchg lret add andl adc in and ret push addb add adc adc test add pop addl addb xor rcrb fstps mov andb sbbb std les addl rcrl and addb adcl int3 inc xchg test andl or mov and add and pop add lea dec mov andb lret and jbe xorb add pop aaa ljmp and scas outsl repnz cmc xchg inc xor andl addb test mov xorl mov pop out inc sbbl subb xorb clc pop mov addb xchg xorb (bad) (bad) cmp fs addb andl pop mov mov andl popa test jne push mov mov add test xor addl in mov andb andl mov cmp add mov and insb js pushf cmpl loopne pop stos add andl addl cwtl xchg cmpsl addl sub sub andl adc xchg inc push sub mov mov int3 ret xchg mov add add andl cli movsb add xchg dec into mov flds andl in cmpsl shl dec pop cmpsb scas inc sbb addb mov mov fldl movsl mov and addb push and addr16 andb fidivrs add cmp or addl pop neg (bad) mov andl fldl scas add andl andl movsl pop jb insb lock inc and lea aas rolb addl clc and dec mov mov andl fdivrs mov addl addl pop push sbbl andl repnz mov pop addl andb stc pop orl andl addl insb pop mov fs cmpl addl rcrl xorl pop xor in dec pop add add ljmp aam or andl sub cs andl lret div push movsl hlt ret mov addb adcl push add rolb andb fcom mov frstor andl xchg mov or andl andl addb cmpsl orl mov cld mov stos lahf andl fldcw addb add xchg jno andl addl addb enter cmpb xlat ja pusha mov andb mov ret add cmp cmc addb add pusha mov addb add mov addl or sarl mov xchg mov and add mov and andb andb stos addl addl (bad) mov addl mov orl stc stos sub add daa adc mov addl shl shlb and add addl (bad) mov jae shll andl pop andb addb andl lret and mov adcl xor mov mov add dec or add xorb add cmpsl add mov add or das inc add mov add cltd fadds dec lock out repz push add xchg jecxz loop push inc xchg mov andb or insl jl test andb ret (bad) and and aam inc mov mov and addb jecxz movl and and loop ret push ds addb mov xor out mov and add (bad) out orl andl xchg andb arpl xor (bad) negb or addl mov mov mov rolb int fsub addl andl imul mov test and mov add mov mov andl pop cli loope icebp out dec or push push filds andl mov test xor int stos insb mov addb adc fiaddl xlat test andl jl in orl addl cli mov jecxz insl jo leave ss addl popa test push mov add or and add pop cmpl daa xorl mov sbb fldenv subl add add mov adc xor addb mov repz daa xor andl addb orl dec mov xorb mov inc in xchg cmpsb ret mov mov addl xchg int push jbe lea jecxz add addl and mov mov xchg cmp mov addl fisttpll xchg int3 hlt jno andl leave push add fwait ret pop pushf adc add add lds icebp mov addl cmp mov insb rolb andl cmp fstpl addb cmpl insl adcl jno out cmp andl xchg and mov test andl push add xorb test sarb add add flds jmp mov addb add dec dec mov sahf mov aas lock inc jge andl inc loopne int mov lahf mov (bad) and addl pop sub mov mov and addl addb addl test sbb mov mov addl fwait add xchg cmp pop addb andl movsl cli xor and mov insl dec sti inc dec cld mov mov add add inc mov mov loope or xorb add xchg cmp adc add andl adc or mov cmpb fiadds popa mov in mov addl mov mov push shlb add addb xchg lea cmp push nop mov andb int xor andl fmull dec and fiadds aad add and das test sbb insb sub leave adc addb mov imul cmp loop test mov jg push out lcall andl jp pop adc test mov addl xchg fwait adcl addl pop push (bad) fst sub inc (bad) adc mov out cltd mov addb mov mov mov and or mov add mov jne add sub andb data16 jle andb mov inc pop iret shl push add or dec fsubs ficomps addb addl push dec andl (bad) out pop xchg nop imul cltd or addl jae mov adc aaa je mov addl lea mov mov addb mov lea inc inc xorl sub inc test add add mov push andl and sbb add (bad) adc insb sub addb cmp push roll xorb mov inc (bad) aam adc push pop out andl dec in (bad) mov fadds out xchg es fadds andl sbbb mull addl ds xlat and and lock (bad) icebp mov mov add adc xor xchg mov cmp xchg mov andb mov sub mov add movsl int daa sbb andl test xchg jbe xchg xor in andl cmp mov clc pop fiadds std mov and add leave mov js adc and andl lea mov addl orl and cmp pop mov fnstcw or addl add mov inc ror sub enter and sbbb stos sbb add addl jne lahf es push dec fsubl addl scas sub pushf (bad) mov addb andl sbb sub cmp in lock and mov jne mov sub mov mov add out cwtl mov cmp jecxz cmp addl mov mov andb andl mov and cmpsb cmp mov mov jge cmp andl addl jbe jecxz xchg shlb add addb out add mov andb pop sub mov and adcb arpl cmpb scas mov and and mov cmp in addl mov int3 xchg andb andl sub andl cs lds mov addl roll nop xchg out fisttps addl xchg sti stc xchg inc scas mov mov xchg outsl mov cmpsl dec add andl xchg lods jb iret mov addl xchg andb xor addl and sub outsl cmc subl mov addl mov addl cmp addl nop pop inc xchg (bad) fcompl adc mov andl rcll mov sub mov mov cmpsl mulb mov mov mov addb adc std mov inc (bad) pop add add lcall stos pop cld addl into jge ret andl mov popw in mov mov mov bound roll adc lods xor xchg or xorb mov or cwtl mov repnz sbb xorl cmp or andl jmp subb jp and mov int addb test xchg andl aas rol cmp outsb mov pusha fidivs push addb add movsl or add add testb andb iret or mov xorb mov add adcl mov sub andl notb pop adc mov or cmp mov addb mov arpl jle sahf das cltd and andb jl jmp lock addb add mov in and fwait andl lods lods fdivl xchg and addl pop fidivrs mov fbstp sub addl repnz addb addl stos lds mov addb or mov mov addl lcall andl repz aam mov aad mov addl add faddl adc sbbl mov jmp add out xchg and jns insb shrb test daa int xlat mov add mov cmpb add push mov addl stc xchg les mov addl ret xchg jecxz rolb mov mov andb jnp cmc mov fimuls addl push sbb and aad andl and addl andl (bad) jnp jmp scas movsl int3 inc subl mov ljmp movsl inc and addb frstor movsb addl push js popl jne sub sbbl addl sbb and cmpsb cmp daa mov addl pop stos into cmc xchg add addl cmp push fstl popf aas andb add sbb mov sbb in add andl cwtl lahf aaa xor fists addl mov xchg repnz jae mov mov jnp fldcw cmp addb movsb cmc xchg add (bad) jle scas nop ja and mov mov mov aaa adc add addr16 lcall andl addl add xorl xorl in addl mov fisttpll mov sti addl das shrb andl aaa and mov sbb xorl js dec mov xorb mov mov andl out fcmovnbe and xor shl xorl addb popa push fstpl movsb mov addl or push push add mov andl addl add cmpb cltd or mov test fwait sub ret adcl addl adc notb cmp andl sub mov cmpl aam and movb and or mov or and add sbb and andb rclb adc neg add mov addl ljmp les popf andl addl addb fcomp pop mov addb mov xlat push mov add or rclb js dec clc fbstp mov (bad) mov and jae or addb andl mov sub andl mov dec or sbb mov mov add cld cmp in push xorb sarb add fs dec lods ret insb movsb in push cwtl aam sub sahf andb andl movsb xchg dec adc addb sbb cmpsl ja addb pop xor add or jmp movsb addl cmpsb aam in fsubrp mov andb cmpb andl popa jmp dec fdivrl movsl mov add and lcall decb addb mov loop or mov sbbl test into add andl incb mov pop jge ret cmpsl and add mov ret push or orl addl fsts addb dec scas into scas js test insb jmp (bad) lahf imul andl cmc push bound pop push scas andb add in clc cs aas test adc addb rorl call xchg dec mov addl addb addl mov addl xchg into cmp shlb andl es fldlg2 cmpsb addl push sahf or cmpsb clc andl addl mov mov addb xorl mov add add cmp adc loopne addl cwtl jo cmp out int shrb addl jp addb subl cmp cmp pop ret xorb mov mov andl outsl insl xor xchg cmovge outsl repz add addl mov and mov out cld sbb sahf nop fsubrs push outsb mov insl push andl mov test popa adcb addl std push cmova lret inc sub adc stos addl addb or fadds andb mov push xchg lcall mov add test popf and popf xchg mov mov push js jge andl jg iret jnp inc cmp addb fldenv dec inc pop jg jne and andl (bad) adc sbb mov addb add add pop pop sub inc lds add andl push cld fbld addl add mov fsts addb mov mov push addl outsl mov (bad) aad frstor addl add jp out addb andl inc adc scas sbb andl call adc add mov icebp adc pop repz add jp sahf lds outsb mov addl les xor cmp xchg addb adc int cmp and andl addl fnstsw pop lea addb mov mov mov mov add push sahf pop mov test sub enter andb and lret insl jge add addb mov std test and add cmpsb mov andl mov mov addl outsb push cltd fisubrs mov addl pushf leave mov je repnz mov fisttps dec lods xchg xchg addb mov test aad nop or addl mov mov addl daa sbbl (bad) shrb andb mov mov in adc pop pop adcb mov imul lret stc cwtl xlat adc addl mov repnz cmp fisubs addl out pop movsb shr xchg sub andl testb mov filds addl sub addl sbb jno cli ljmp andb les cmp in addl pop (bad) mov jbe andl cltd (bad) lea mov roll test adc cli add test out insb jb nop xorb mov inc (bad) frstor cmpl mov in xlat add inc add addl mov push and mov popf mov add jb push add mov addb les cli das nop sub pop mov add push test fdivrp inc inc addl addb lea mov shrb push subb mov addl out mov repnz addl (bad) or sbb cmpl andl addl cmpl addl jp pop inc rorb inc punpckhwd adcb mov addl setg test or addl sub enter cmp mov add dec (bad) test jp sub lea addl add loopne,pn push xchg and adc testb andl in xchg mov sbb mov mov mov and push sbb andl and jecxz (bad) into stos sub andl repz test in mov mov add in xorb add and dec clc int int jp addr16 andb andl andl mov push add mov adc call fisttpll jle andl addl fwait mov repnz mov addl mov fs (bad) shrl andl subl mov mov and xorb adc pop das js andl lods jg jmp addb mov (bad) or push xchg mov data16 cmpsl and sub addb in push andl add push xchg test imulb mov addl (bad) mov add addl sbb pushf ret jno add andl cmpsb jmp sbb nop andb add mov mov addl xorl mov shll pop test xor mov addl lahf mov in mov andl and mov add addb dec cld (bad) cmc inc addl popf fstl pop andl addl in mov inc rclb addl rorb repnz add add gs adcb loop addb adc in jo xchg test cwtl movl cmp addb subl mov andl xchg dec xlat mov (bad) mov addl lea cmpsb push sub add addl xor addl sub push stos lods or mov mov addb cmp cmpb andl pop xorl addb std ljmp movsl andb mov pop cmpsb into adc jb in popf inc addb add lds addb cmpl mov sbb andl incl xchg cmc lods inc mov and add in mov cld lret and andb imul cmc sbb shl push mov addb add movsb add and push inc inc cwtl repnz mov call add jp adc adc mov std cmp or addl pop lock mov mov mov in aam push jp mov and call stc xorl add adc ss rcll addl push fmull pop push (bad) insb mov mov add push xorb add imul add (bad) mov mov mov orb gs or roll addb dec fnstcw jnp add addb mov push mov and cmp dec mov pusha pop ret addl fsubrs andb and test pusha addb mov sub or add mov pop loopne sub pusha fsubs and addb cmpsb lods addl out cmpl addl mov xlat sbb addl enter addb mov dec or add test gs andb add mov addb fnstsw and xchg addl lods fstl cmpsb lock addl jb sbb les addl sub out sbb add addb push mov addl sbbl andl addl cmp mov andb or in sub addl cs pop cmpl andl das sti loopne fdiv pop add andl xchg lds sbb mov addb addl mov rorl addl mov cmp xorl sbb inc (bad) and andl mov mov fst cmpsb add addl jmp cs andb or addl cltd pop mov push andl andl cmpsl or and add add sbb mov andb ret pushf add test add addl xor les mov out add das sbbb andb add sub jns mov addb inc call loop mov andb mov scas add addb jmp xorb add and loope dec hlt sub addl dec pushf test add mov addl add loope nop pushf cmpsb cmc addb mov or and cwtl mov mov mov push sbb aaa adc mov and or ds test or xor fiadds add dec movsb jo sbb andl xchg mov mov cli loope inc in addl add xchg mov xorb add mov popa xor jns outsl mov add addl push and xchg cmpb mov andb stos andl addl adc push addl pop xchg add pop ja inc mov out mov andb add add jno movsb sub cmovp mov and adcb adcb movsb jae xchg stc rolb mov addl jmp xchg scas addb mov or mov andl mov mov push and addb mov add popl addl or cmpsl es mov addl stc daa int andl out mov push ds addl cmp ljmp mov add mov xor hlt adcl add push sub xor jge andb mov bound xchg fildl addb jp and sbbb rolb addl rol adc push adc andl lods stos dec movsb addl jecxz xlat mov push sub mov push je push and xchg cmp addl and or andb lods fwait xor out xchg les andl cltd sub je andl pushf jp cld leave pop xchg xorl pop (bad) mov push test xorb mov pop inc imul leave sbb pop andl hlt clc pushf scas int xchg andl and jp mov addl mov dec ret mov inc testl addl stos stos mov push stos addb add mov cli stos addl addb int3 fs scas xor xchg aam andb mov enter xchg mov ret addb add xchg add nop and addl sarb call addl addb cmpl andl (bad) scas arpl adc and andb xor lock xorb add cmp mov andl les jnp and addl jbe mov and test sub sti adc push jo insb fwait addb addl inc bound mov sbb mov addl test addb sub addl in mov andl or js mov jne fisubs addb mov mov add adc popf sub cmpb orb mov mov add fisttpll and adcb push inc sbb addb and sbbl rcrl mov addl mov pop loopne or cmpl andl addl out fstl jae andl mov lret repnz loopne jmp andl ljmp addb mov mov subb mov jbe and add imul and addb cmpsl adc mov jg jb nop sbb mov addl pop adcl addb xor mov xchg xchg mov mov add xchg in add andl in jne and dec push mov add mov int jno aam (bad) ljmp addl mov mov xor daa nop mov andl mov (bad) popa mov mov addl fldl addl scas push add addb pop and andl (bad) lcall addl addl fldl addb pop fldl2t push sbb xchg sbb in add add jno pop scas jns roll andl idivb add add subb sbb fnstsw nop addb andl adc sti addb andb xor sbb inc and mov addl xchg nop xor andl mov es mov addl sahf fcmovnu add xor andl outsb in test hlt and loopne sub addl xchg popa addl addb fldl les add add addb add pop pop arpl faddl mov jecxz adc paddq addl xor andl adc and add enter push lods syscall pushf and andb aam jle dec mov cmp gs out mov mov addl in out cmp adc and lret sbb stos andb mov cmpb add xchg mov cmc inc movsl ljmp dec incb lods addb mov aad test mov mov mov ja addl mov push pop jne aam cld sbb subb addb andl and mov iret sahf add in imul mov add mov aad loop stos push addl sbbl loopne clc push and andb andl test and addb xor ret out incb inc mov pop andl addl shlb loope clc push pushf popl and out cmp repnz and mov andb mov andb mov xchg mov push add and cmp xor addb mov mov out and add scas imul movsb and addb popa mov jne orb addl outsb sub add mov xlat mov addl or mov xor addl out mov out int repnz addb icebp lods pop push cli dec andb add shll cmc andl dec pop xchg in movsb stos call andb mov fsts rorb andl inc xor pop andl out aaa es cwtl add addb cmp sbb pop dec andl addb sub das push loop in andl addl mov andb cmpl aas xchg das inc inc add add fnstsw pop sahf or shll mov in pushf jmp pop rorb stos andl sbb cmc and xor fstps addb xorl mov addl andl adc nop xchg add andb mov and clc jecxz jcxz adc addl add cmp sub addb mov gs add cmpl mov addb add in jne shll adc addb push addl addb cs pop andb mov int pop (bad) leave roll mov andl and mov out xchg cld mov addb orl bound andl sbb mov jecxz mov mov and add jb and andb xor pop (bad) addb add (bad) fstps mov add int3 jmp mov dec popf fldt add faddl fildl lahf push add fdivp test addb mov cs addb addl mov sub movsl fwait popf mov and sub andl lock mov xlat cs lahf addb andl loope cmp adc and mov inc sbb ret push cmp sbb fldt sbb xorl fldl test mov push test iret cmpsl clc andb andl int jnp testb addb push push loope sub mov addl les insb sti int mov andb addl (bad) repz out or mov andb sub pusha roll les andl push pop popf push adc cmc mov addl mov addl mov add fldl lcall mov or and mov andl or or (bad) andl rolb je cltd mov add (bad) fisubrs pop ljmp addb aam xchg stc dec into sar imul xor stos push xchg mov mov lcall cmpsl add andl mov sbb roll leave andb add lea out xor adc mov mov arpl out adc addl sbbb stos cmpsb pop dec addb addl test push test mov addl int and xor addb mov mov addl ds hlt andl addl mov mov addb sub cmp addl push add andl andl addl sub jmp mov aam nop adc xorb mov mov cmp push andl mov xchg sub mov addb lcall add out cwtl pop andl popf fiaddl mov pop stos int3 addb add mov mov xchg cmp mov add cmc ret cli xlat fwait shl andb mov int3 test lret cwtl test add addl xchg sti or adc andl fistpll pop xchg mov addr16 mov add xchg cmp and add mov and andl pop rol adc repz sub addl pmulhw repnz and cmc andl pop int push cli popf int addl add xchg jb xchg lods ret and das sub andl sub sbb call add addl lods in ss jg sub addb ficomps iret fdivs addb andl andl nop in mov stos mov mov add movsb or mov stos test xor xorb add push push cli ret push cmpl andb andl nop lcall addl sub push cld andl addl lods addl cwtl cmpsb sbb sub xorb xchg mov andb daa pop or xor shll aam and andb subb in xor flds andl sahf jo in dec fwait mov lea incb addl cmp sbb push cwtl fiadds mov cld int and inc or les loope into xchg outsb and addb and addl sub mov addl nop call stos xor jmp andl xor rcrb add andl cmp addl addr16 lahf xchg pop js mov addl lods lcall jnp aaa jnp dec mov mov pushf outsl scas mov addb addl stos add pop sub mov addl dec cwtl inc pop ds mov addl or mov addb xor aam and subb inc stc xorl cmp in mov test addl xor and addl or (bad) pop xorb nop mov mov mov lods adc xorl pop ja mov arpl sub xorb mov and adc push dec pop rcr mov addl pop add mov andl xor add cltd cmp and mov aaa dec (bad) repnz data16 ficoml iret test jo mov stc andl int3 fisubrs fldl add sti aaa movsl xchg mov mov cmp andl jb not mov outsl test mov andb in out addb add test pop xor andl xchg repz nop cmc addl lea mov ljmp add mov imul cmp lock xchg and andb pushf insl (bad) sbb lods repz and orl addl ret rorl andl aas jg jmp addl add sbb mov addl cltd cmp add addl loopne,pt lods andl addb loopne loop inc ja subl mov mov jg and mov add push sbb test pop mov mov add mov aas inc outsl adcl add and push jns shll jnp daa in mov add lock add mov addb das xor sbb addr16 and addl addl outsl jmp pop mov dec mov and aam inc scas out addb and xorb pop push shll cmc mov andl adc dec (bad) bound int addb mov mov outsl into mov and add cmp or adc addb icebp jge shr cmpsl add addl add adc addl (bad) and adc mov int3 adcl mov test (bad) aam xchg add andl ljmp ja stc jecxz andl and out push push adc lea andl stc xor andl mov in addb addl or addl out test sub add addb xor add adc addl js (bad) js adc addl rcll stos lea xorl in xchg or fcomps loopne repnz add add mov cmp add pop addl xchg mov mov mov add mov rol addb adcl jecxz stos incb addl incl mov andb mov push xor cmc icebp cmpsb pushl mov and or ss and mov lds mov andl in (bad) jge inc xchg stos mov addl xlat nop adc mov loopne mov addl addb (bad) testb lea adc pop andb mov cmp mov popf clc mov add addl fcoml jge sbb mov mov xchg andb imul mov and add mov in and andb cld mov jne inc pop lods dec mov addl testb sub ds mov add or addl add xlat push loopne sub adc mov andl sbbb incl xor std jg jbe addb addl inc add pop movsl or addl cmc lock push clc inc nop addb andl xor ret jge add mov addl cmp cld mov mov add cmp data16 mov dec add xchg insb test addl lret adc inc cld stos and addl call push add mov andb xor aad andl addl dec add add jae addl mov mov andb repz lock sti andl bound pop add and pop loop jbe addl clc cmpb sbbl addl out iret out mov addl mov jle lea addl add in das ds shlb iret fistl addl test insb testl andl sahf cltd sub call mov add inc andl dec andb add jg add mov addl push movsb xor adc fldl andl adc cmpb adc addb addl daa mov addb clc sub leave sbbb andl adc das adc adcb dec addl mov insb mov test sti and andl addl mov andb mov ret jle faddl addl adc js imul jmp addb fldenv pop inc jmp scas ret pop andl sbb jnp addb adcl mov and add sub andl jns andl roll mov mov das add addl mov addl insb cmp addb in ds outsb xchg mov addl shrb sub add add ds movsb push stos and or add orl add out mov pop cmp addl add addl cmc adcb xor mov and add cmc xchg jge imul mov roll lret mov addl andb andl jae sub addl add xor imul mov lret fs pop in xor addb addl pop add cmp andl fdivrl popf push addb andl mov sub mov andl add jno loope leave pushf addr16 mov mov add pop popl jmp xorb add mov pushf shll xor mov add int3 iret in divl out xor xchg push mov addb mov sbb int3 lret (bad) add mov adcl adc add addb push jge sbb mov jo addl out movsb mov test andl out inc es cmp fs dec call add andb and (bad) cwtl addb mov ret jbe inc test push sub andb andl sbb popl mov and addb (bad) lcall addl sahf xchg pop rcll mov testb sbb addb xchg adc mov mov and rclb fiaddl pop add mov inc mov (bad) imul pop das andb add fstps jnp andl pop cmp lea addl movsl jae mov mov gs cltd addb addl mov addl sti add addb xchg repz pushf out andl andl xchg xor inc jo sub addl pop sbb sub mov mov addb push sti cmp add dec in and dec add add jmp arpl andl jl jl sub mov mov mov push rclb cltd faddl addb jne mov testl andb pop xorb cmp lcall xorl fisttpl pop cmc adc pop add addl fsubs cld xorb add pop xchg xchg pop push andl aad and into xlat lret addb add inc push ds jg xor addb fs cmc into sahf cmc int3 andb mov sub dec sbbl mov add addl popf sti push jae addb subl in test andb adcb lea mov and add jnp rol jae and andl stos mov addb add cmpsl jno xor andl xor lret stos lret jp lcall addb xchg inc mov add push lcallw and inc mov pop rcl jp lea mov addl push xor mov out leave mov and xchg xchg je lods xor mov mov mov arpl mov andl out push add insl hlt adc mov mov add push addr16 xchg sub and je lcall dec add mov adcb xchg int3 push or add test adcb addl addr16 std mov in pushf cwtl cmp or mov andb pop orl andl push into std sti inc ss add andl or adc mov orl into or icebp andb andl lahf outsl jge jecxz and addb nop mov mov mov add icebp aaa fcomps sub addb das pop mov cmp pushf or mov rolb into loope jl adc popf add andl pushf and addl (bad) andl cmpsb mov inc and and andl test and addb iret in mov addb jmp pop mov mov mov lock in outsb loop andl xchg lea push xchg test out int3 and addl adcl addl add add mov mov inc addl mov dec lock fisubs mov lret mov addb mov inc cmpsb loop insl xchg cwtl ret and addb mov pop xorb mov inc add push xchg andl mov xor andl add dec adc loope ret aas mov or addl jp push mov shr fidivrs sbb jns push sub lods pop addb add addl addl addb jbe in fstp andb mov dec ret int andl cltd xor push in cli mov mov dec add mov inc mov push push stos leave test add addl aam sub adcl addb mov cmp mov add cmpsb les xchg sub add cmc sub xorb add jge aas add icebp addl add xchg adc call dec les addl add xorl addb mov movl out stos test add les mov mov xor test mov andl imul andl xchg xchg addl add (bad) nop pop cs sbb push sbb idivl addl jns hlt cmp clc cld andb andl icebp xchg mov addl testl addl and cmc ror aaa addl sbb bound add int3 and andb loop je ret jns mov and addb add push rcll andb and iret jae xorb loope addl cmpl and add int3 (bad) out push mov sbbl mov add orb clc mulb addl scas mov sub addl (bad) pop leave in mov in addb mov cwtl lret xchg call andb add int (bad) int3 lods stc add mov andl pop mov push pop faddp loope jecxz andb mov mov pop adc jp andl lcall mov addl adc addl and repz pusha dec mov mov andl mov es xchg cmp addl addl sub mov mov addb jne out addl test jns idivb sti addl sbb and mov cmp into pop cwtl mov addb cmp fmulp addb xorl aaa or mov andl mov xchg push flds mov andb (bad) (bad) mov andl push mov stos andnps std xor addl (bad) fdivrs push xor in andb mov inc sbb mov addl jle dec mov out addl addb leave mov (bad) int3 fsubp lahf mov addl movsl xchg sub mov icebp lcall addl or ficomps sub addb xorl sub ficomps addl ds nop shlb stc ret loop inc adc and add arpl inc addl clc pop popf pop push xchg les addl adc mov add mov sbb les addl add insb cli stc sub bound addl mov shl add mov addl mov lock addl xchg nop imul test call sti addb andl mov andl dec rclb add xorb (bad) jg cmp or mov add repnz sbb sbb cmp mov xchg mov add add and add mov sub cmp add mov add inc jns lock or mov arpl andl xorl iret jg andl xchg mov aas or add and andl mov xorl push andb andl ret adc addl bound andb int3 lahf in fldenv push sahf or addl ret mov addl fildl es andl ficoml mov test andb add (bad) mov mov addl inc or addl mov pop repnz addb addl or addl jge mov addb mov push adcb andb addl mov imul xor inc mov les mov xorb adc ret xorl (bad) mov addl repnz lcall addb pop int mov add (bad) cmp dec cmpb mov mov es xchg sbb outsl xorb mov xor mov and add mov pop ds dec dec stos pop arpl ret add addl xchg adc (bad) cmp cmp addb subb mov andl pop mov sbbb nop sub aam pop addb add mov jecxz addl addb mov push push adc mov addl cli xor addl lcall mov mov cmp in test pop clc addl xor rolb cmpsb fisubl addl testl subb mov inc int and andb jne sub mov addb add cmp mov addb xor mov enter mov push out and addl int mov insl imul addl fs add addl mov adc xchg pop xchg mov mov and jg jp int add mov mov cmpb sbb andl int aam dec mov sar es mov mov add sbbl in or mov clc xorb add test sub andb andl (bad) (bad) jle dec fildl and andb andl addl mov addl xchg pop ds add out mov andl mov or es mov hlt lock and adc dec les add and xor outsl movsl addb mov sti mov frstor out faddl mov jbe dec lods stc cmp addl jnp out cmpsb addl inc push xchg shll addl push pusha push adcb mov mov xor xlat and nop jae shlb mov jg icebp arpl pop sti in jge or andb add shrb andb test and adc addl cmp rcll andl mov insb pop out andl outsb sub mov inc es shl into out ret addb mov pop stos addl inc icebp movsl mov xlat cmpsb jle je and sbbb cwtl sbb and xorl out out rorl dec cmp jne addl or fnsave xchg cmp addb mov roll andl xorl add mov xor xorb mov or xchg iret shrl mov andb adc add adc andl inc addb push jb rorl addl sub inc andl mov nop loop pusha addb add push dec xchg addl addb push cmp addl rorl movsl in imul mov add mov adc lret scas addb addl addl pusha xchg jnp pop mov and add scas and imulb andb sub scas sbb addb add lods sti enter and xor xchg sahf insl push mov xlat mov addl add (bad) fldcw addb mov imul add adcb sub xor addl and int call addl lds or andl and movsl test fildl addl add cmp (bad) hlt and addl fisubs and mov dec ljmp andl cmpsl flds addb xchg dec aam mov andb subl fnstsw jnp mov hlt mov andb cmp xchg nop andl fdivrs add and pop ret dec scas and in xchg cmc jae addl pop pop fsubr or shl cmp andb andl imull movsl push and addb fisubs dec addl lret push mov ljmp lds addl push cwtl roll dec mov mov loope (bad) xchg xlat pop enter add andl je adc mov andb add addl mov add sbb andb loopne scas add addl and je mov insb addb addl enter andl pushf stos test addb mov mov cmp fldl add and aam andl addl into jnp and xorl mov inc loope popf cmp (bad) push incl addl push lahf mov ret addl or ja pop je movsb loop mov andl jp push cwtl stos sub pop addb adcl pop xorb mov movsl adc sbb mov andb sbb andl aas std (bad) in pop mov addb sti in cmp jmp addb cmpsl leave jbe test mul addb add ret ret clc test loop addl addb ret shll into (bad) testb andb mov cmc add (bad) es pop sub addb add imul and rcrl addb sbb popf test mov andl push insb in sbb cmp cmc outsb (bad) dec mov andl inc jne or add mov addl ret and addb add arpl popf jmp mov andl prefetch mov pop pop ljmp addb add fldz addb mov in in addb addl into dec xchg fwait cmp pusha mov pop imul addl pop addb andl and xchg mull andl test xor (bad) push fistps popa jne mov mov add sub js mov insb roll xorb add mov push adc add andl sti test add mov andb divb xlat mov mov andl addl int3 mov (bad) sub addl out adcl mov rorl fsubs andl addl xor xchg leave cmpl andl test or subb les andl adc mov xor xorl push sub cmp mov cs fnstcw pop addb addl andb add sbb dec pusha mov push pushf mov addl mov mov fadd push add andl std xor mov add mov popf pop rclb xchg pop (bad) scas cmp addb mov add and sbbl sub mov addb addl jne mov addl mov loop addb mov pop into stos mov rol addl dec and pop movsl mov and subb xlat inc sahf mov xorl push mov addl xorb addb repz and aaa jp iret addr16 andl cld addl andl and call xchg nop mov pop xorb mov (bad) (bad) icebp dec fdivrs inc andl (bad) adc faddl pushf mov mov addb fadds mov jp and pop cmp addl loopne xor xor mov addb (bad) mov jmp into addb add addl je addl addb dec mov scas movsl sahf subl out les addb add out xchg or sub mov sub andl mov fdivrs hlt hlt inc mov and add xchg adc test cmp and andl add mov addl cmpsb (bad) mov andl jecxz mov mov daa and addl mov movsl stos mov addl mov test mov sahf cmp mov add xorb or xchg mov and pop repnz mov pop mov in and mov scas rcrl iret cmp out jmp xorl cmpl subb xorb add push imul or gs and add mov orb loope push test mov mov andl addl shl mov andb subl mov andb andb mov test mov andb and arpl inc pop repnz add add xchg jno mov andl fildl addl rolb or sahf addl mov sub addb push cltd push cmpl (bad) mov mov mov mov fldl andl jp scas mov add mov andb add adc mov xchg stos andl cld pop test lahf xchg dec lock pop addl insl inc cmp cltd jno daa sbbb mov sbb addb addl and mov or addl addl fcoml dec addl mov jo cltd (bad) and andl addl push jnp (bad) pop in xorl mov shrb xor add andb dec push (bad) fwait inc sub icebp sub addl sbbl push adc mov andl push add adc adc xorl cmpl xchg xorb mov or addb mulb add addl fstl and mov test aad jle test mov addb imul adc addl outsl dec mov add add or cli mov push fcompl addl and mov andl and sub mov mov subl cli or adc addl pop sub mov andl mov movsl dec (bad) faddl mov mov jns std adc addb add xchg imul push addl add addl mov ficomps leave and addl outsl dec sub lahf addb mov and mov mov addb addl repnz mov and jae pop iret pop inc xor in into adc addl mov scas inc xchg inc and mov add jp and addb cmpsb mov jmp jo mov add movsl pop mov popf andb andl lods xchg and orb or mov addl sbb inc addl in sbb mov addl mov sbb les push andb mov addl mov addl mov andl (bad) fnstsw scas (bad) mov mov jecxz xor inc mov fadds shll mov orl andb movd outsb subl addb filds inc lods jmp xchg enter inc in push mov mov mov sbb call addb mov imulb cld lret fwait jo mov add mov mov xchg addb test xchg les gs mov addl inc out push outsl inc into and mov addl xchg adc addl test addb mov cli mov mov fld orb addl mov and andl addl fidivrs fsubr xorl adc add add jecxz cmp andl fiaddl andl js xor je addb sbbl andl mov andl mov adc (bad) je mov andl lea xor push fcom push mov addl xlat mov andl mov addb test out loop sbb add andl cwtl imul add add mov add imul or movsb test cmpsb lcall addb pop jg xor lock int push jbe adc addl andl and lea addb and popa lcall pushf sbbl and add adc mov fstpl and andb cmpl fcom (bad) mov addb add mov sbb fldl repnz add mov add add add mov les adc fcomps mov mov jnp dec addb addl stc test push mov mov inc add into push js test addb mov mov xchg cli mov xchg and mov mov cli ret or add movsl pop out andl addl andl stos bound aad mov add test shrb xchg les popf sub adc and addb xchg cs cmp mov cmpl dec in (bad) iret stos inc pop push sbb les and sar dec mov and and out lret lods les andl cmp mov push dec stos roll andb and and xchg out test or xorl andb andl (bad) call and addb sarl andb mov rcll outsl pop fbld addl mov mov mov mov test pop add andl mov addl sbb and sbb addb addl nop or nop addl jg jge lds andl xchg stc sbbb mov andl add nop loop aad jg filds addb mov les cmp cmp iret cmc push addl mov mov jns jne jbe aad loope (bad) mov addl cmp fstpt mov mov addb mov (bad) insb mov push add add nop mov out jbe outsb mov addb test int int3 and sti xchg cmpsb andl cmc or or addb xorl mov dec xchg ja mov andl iret inc andl mov andb lods mov mov and adc dec xor dec mov addl rolb loopne in andl fucomip lock dec repz add cli xchg xchg xchg (bad) pop aam loope addl addb popa cltd mov loopne fs and sub mov andb les add addb add xchg andl test adc jp andl aam movsl or add mov and add js mov andb pop dec loop ret pop cmp sbb xorb add mov fiadds mov xchg xor addl inc popf pop in popa andl add sbb mov test and addl addb addl loop push or inc mov and lods pop stos mov orl add xchg push ret leave cmp andl fsubp fisubs nop mov loope addl add dec mov subb js push loope xorb add adc and test adc repz jbe fiadds add andl stos fiadds shr and and orb popf cltd test scas xchg mov andl addl mov addl addl mov mov inc (bad) addl clc push pop cli xchg inc enter add and sub addl out mov and xchg fadd andb andl cmpsl movb mov adcl lock lret rcrb mov mov addl push mov mov xchg sbb mov test ja in adc addb sub mov mov add mov and fidivs stos imul addl in imul inc addl outsl push addb mov lds xchg in mov or and mov ja lds int3 add addl jle call addb pop sbb xor mov adcb mov addl cmp mov xor addl outsl lahf addl xchg andl faddl xorl mov jbe xorb mov std arpl addb out out cmp mov mov addb mov jg push jmp subl and mov fwait sbbl andl outsl repnz ret mov addl lods les addl addb (bad) pop cmp mov mov int3 cmpsb xor adc mov andb push (bad) cmp mov add fsubs fwait add addb andl lock stos xchg xor andl int outsl inc xchg and add dec lods jmp ret dec or andb testb cmpsl mov test dec fsubl fsubl addb add test sub add andl addl add lds or xchg popl addb mov nop jecxz push out addb addl decb mulb mov and sbbl addb andl pop repnz add andl fs subl daa xchg mov mov add aam hlt xchg xorb add sub fwait ss mov add mov mov or imul add mov sub mov add and andb addb inc cwtl andb test and cmc pop sbb cmc xor stc or addl fyl2x (bad) sahf ret push xchg pop mov andb testl hlt jbe,pt loop subb and addl addl xchg adc cmp push andb andl cltd in and addb dec out cmp andb ret lahf es shlb addl mull mov mov bound jecxz addb add andl pop roll addl negl or addb out imul cwtl mov cwtl sub andb mov addr16 push out push or addb (bad) fadds sbbb and mov xlat lea filds outsl inc addl andl push push addl aam popw fldl mov xchg (bad) dec xorl cmp in mov lret movsl mov loopne addl or lea popf inc add (bad) addl leave push xchg loopne aam mov xchg mov andl fsts imul addb orl repz loopne adc out xchg cld inc xorb mov mov (bad) xchg orl call andl pusha adc fs jb jl fcomps sti lock mov and iret push inc loopne xor xchg push (bad) shlb addl cld inc pop cltd mov mov ret jl test mov add adc (bad) mov mov add pop add icebp cmpb sbb cwtl xchg (bad) addl into test dec fadds addl mov mov orl or int3 addl sahf scas mov jecxz dec mov and add xor mov mov or and andl mov addb add popf xlat or mov andl push les mov and addl mov leave hlt xchg addb mov test test js xchg faddl mov insb and mov and sub cli dec mov and addb andl and mov mov xchg mov adc addl mov add insb sbbl addl addl adc xchg mov or add andl add mov addb aad pop test addb mov jmp xor addl mov mov andb rorb js sub test andl iret cltd stos xchg andl and xchg sbb mov orl andb andl int3 andl mov and inc test mov mov addl sub movsb mov addl xor dec out addl xor lock pop mov addl in insl js pop and mov add mov xor scas push addl imul mov jne or inc icebp lea fdiv push addb addl outsl mov inc mov xchg mov and mov movzwl popa jle pop testl addl movsb ret mov je inc fldenv pushf addl (bad) cmp adc add sub andl addl sub push jae aam mov mov addb mov stos icebp pop or cmpsl add add fists addl popw mov outsl cmpsb fdivrs addb inc imul addb xorl bound pusha xchg xorb mov xor xchg xor andl xchg js xor xchg add addl mov ja adc addb push mov test inc andl icebp add popf mov repnz jecxz popf xor testb addl rcrb addb aas cmp inc addl addb mov lock xchg jl xor addl inc in sti daa popf pop sub sbb addl clc les addb orl andl fs mov and add add loopne cwtl in and andb fiaddl outsb arpl ret or addl cli jl aam test and fadd js loop inc mov lea addl add pop mov inc mov and addb mov lcall inc in pusha dec cli addb addl mov dec ret mov and (bad) test lahf push enter pop addb andl andl inc cmpsb sbbl addl aas add addl adcl andb andl mov orb sub andl addl aaa lret dec dec addl inc inc adcb or aam mov arpl and pop js inc lea mov clc pop addb aas test andl mov andb mov (bad) into jns addl jbe pop fdivl icebp and rcrl sub adcb andb andl or andl das cld mov xor addl inc inc push addb addl in sbb sub addl xor scas xlat ret push add andl int pop and andb add incb addl nop fildll addl std dec les andl addb addl inc push stos sub jno addl cmpl addl scas insb addb addl dec int mov push andl addl jae xorl or xor jg mov xor addl pop xchg xchg repnz addl mov test imulb sbb addl mov jg push fcoml adc mov push (bad) mov sub andl xchg jge cld fstl cs lods andl mov lcall mov mov addb std mov addl mov fisttps lea addl dec stos mov mov add lahf ret adc ljmp mov add mov lahf in pushf aaa jg pushl mov andb lods cmp call adc addb add xchg ja jne in movb andl fsubrl or andl sarl add add mov and add pop out mov mov sbb xchg and andb ret lods sbb fldenv mov addl and test sbb and or or icebp test filds sbb addl add clts pop xchg je fnsave and mov icebp cmc push and cmpsl shr addb addl in jecxz icebp (bad) sub addb and cmp mov push addb andl rolb mov andl icebp outsb cmpsl and inc lahf arpl mov add mov mov push mov lcall mov (bad) roll add andl nop fsts add mov adcb xorl andl addl loop adc jnp andb add jne shl pop in mov mov andb (bad) test outsl lds adc cwtl andl or popf rorb rol xchg mov mov addl mov mov cmpl add int or inc mov and add sub fpatan int and addb movsl orb dec (bad) push addl lea xchg ja mov addl cmp mov mov dec mov xchg add andl adc dec aam rcl push outsb mov addl add and or xchg add add mov aam sbb push add dec adc and imul andb mov xor andl aam dec andl lcall dec bound sub in addb mov test inc addl bound fildl inc adc int3 outsb adc andb add out ds shlb mov mov addb cmp cwtl mov add add mov les mov sahf (bad) jmp pop frstor lock andl push adc addb subl iret insl add xorb mov mov testb mov add mov aas loopne ret aad mov andl (bad) in test fnstenv cmp and mov xor fs xchg mov or andl out mov addb add repnz mov add add mov iret scas cmpb addl cmp test dec push mov add mov push dec pop addb subl aad movsl or sbb andb xorl mov and add lcall inc jbe xchg and andl les xorb add xorl andl fimuls and addl inc lret imul addl xchg sbb fs addl addl addl mov ret imull andl sahf les pop and jecxz cmpsb and mov outsl in ljmp fdivrs xorl adc mov add adc shlb and inc xlat std test bound fldt addb and xchg idivl test roll addl mov add addb mov andl sbb idiv andl (bad) push nop lea andl mov lds cwtl addb mov adc shl add aaa mov jg andb andl (bad) or push mov and addb ror add mov add sub loop inc xor dec lods fnstsw mov addl mov mov lock js (bad) xchg addl andl xchg fldl mov addl jns push xor mov adc cmpsl fisttpll fwait orb mov notl jge addb addl dec push mov addl mov or addb mov iret into int addl mov ret out xor xchg clc rolb addl mov andb add repnz add add popa xorb addl shll arpl mov mov dec add addb andl push xor sahf nopl mov loopne xchg outsl fadds push andl xorb add addl push push inc fdivp mov addl cmpsb sbb andl call fnsave out jle ljmp addl aam pop fadd orb addl addb xchg mov mov andb mov outsb inc push adc add lods jecxz hlt inc mov cmc or loopne pop addl andl test std sub andb mov add mov and add sahf loopne lahf lea andl mov mov in nop pop inc cmpb xorb add xchg pop or addb aaa push loop sahf jbe popf out add mov cmp sbbl in adc nop fmull push addb mov in test shll mov add outsb daa sub jb in pop je mov ret mov and cmpl or sub or addb andl out cwtl fwait xchg mov andl out jae pop xor xlat js mov mov add popf cmc call shrl (bad) xorb add in out test js mov add mov jecxz dec clc dec addr16 and addb jno dec roll addb xchg addl adc jmp or addb outsl sub mov mov scas add mov test adc xchg das pop mov ret mov mov add and fimull js stos cmp xchg addb xchg mov pop divl repz mov mov hlt sub test and addb sbb mov addl stc ljmp ds lret jle aad addb imul push mov pop lea andl adc inc add addb add js out pop pop hlt andb add popf cmp mov addl inc sbb sbbl pop dec addl mov cmp jg aad addr16 andl outsl stos scas nop sbbb add sbbb and mov adcl xchg mov addr16 sahf add addb es stc xchg add xchg ret andl addl mov mov addb dec cwtl mov add add xchg repnz andl aaa mov adc addl jbe jmp ret aad bnd addb and icebp test or das mov loopne aaa xchg xorb mov add mov xchg xor aas add mov andb (bad) adc andl enter xchg mov addl mov adc fdiv mov jg jp mov addb roll iret push and mov addb add mov int in pushf addl addb mov stos mov lock fists add and jo sbb addb add mov add mov sbbl addl mov mov aas pop mov and add add cmpl and andl mov addl call scas mov mov add mov jno addl lahf inc and addl test push mov addb mov mov adc xchg int3 sbb add addl mov fstps addl (bad) addl mov mov outsl cltd jecxz std mov scas fimuls addb out adc in addl add dec xchg addl loop andl add andl jnp and add mov subb add add xchg adc lock sub addl inc in adc inc add push addl ljmp andb cmc icebp in hlt pop scas lcall nop push addb mov addl aad sbb mov addb mov xchg loopne fs andb andl nop cltd jno and popl addl int mov rep mov addl add fsubrp xor addl sub (bad) sarb addl rcr jmp repz sub addb repnz and adcl ret andb add mov mov adcl mov outsl and mov push sar sbb addl xor (bad) int orb bound andl pusha push jmp jg es mov and mov in inc movsb scas sub push test add addb les andl gs gs dec pop xchg stc andl addl add sbb in (bad) xorl cmpsb stos mov imul mov cli or subl mov loope fisttpl scas movsb sbb mov cwtl stos cmpsb xorl mov mov mov (bad) (bad) nop sub add xorl (bad) sti mov xorb mov xor pop mov jne subl dec andl pushf stos cltd cmpsb mov pop pop bound add addl or cld repnz les addl addr16 stos pop repnz mov addb test mov int adcl and repz out addl addb (bad) and jmp sbb dec jns roll mov andb cwtl fidivrl int3 mov pop cmpb addb cmp das (bad) lock andl cmp call addl scas jmp int mov and add adc and andb test (bad) test adc repnz addl xchg clc cmc andl jp inc test mov addl add jno mov in test and addl mov sub jge aas movb add (bad) leave xchg cmp mov popf adc addl ret xchg jnp test pop mov test add leave mov pop cld les pushfw mov push and mov test (bad) mov mov add mov xchg or addl mov sbb or lds sbb andb andl add addb xor test andl addl out ret lock mov mov addl shrb lock sub andl xorl mov mov push test add and das adc addb lods nop lcall addr16 rolb mov mov flds adc addr16 jbe xchg and addb pop and aam in fsts (bad) addl and into mov mov fsubl addb adc push lahf or adc or mov addl idivb andl xchg push andb add mov push ret in andl xor cmp lahf std addl jne cmc clc sahf roll addl aaa sub ret jp sbb addb adc mov add addb fldl test dec addl jecxz sahf orl and test mov xchg jns lret ja movb xorl ret (bad) in repz add arpl (bad) jp dec loope add add ret mov addl adc fmul xor andl mov addb addl xorb mov and jmp hlt jle sub mov andb inc add addl push lcall and mov mov mov fistps jnp add mov (bad) fs test jecxz xor addb add testl incl mov pop jmp popa lret dec loopne fcmovnb pop push andb mov in mov mov add xchg push xor mov andl dec sbb leave mov andl in mov lahf jl sub and add loopne xor popa (bad) popa in and andb fmull xorb add push lahf cmp fadd andl mov adc addl add cld mov cld test addb mov push push jg or jns mov add push (bad) aad lods inc stos ret mov and daa mov es adc addl push dec mov shll andl call test or jne xor adcb addl add movsl fcompl rol mov add xorb add inc fcomi loopne cmp andl add andl enter addb je bound insb mov enter and sbb inc int3 and sarl or addl push loope (bad) mov out in mov addb orb nop andl mov adc xor fwait test xchg orl and addl addl fwait rcrb cmp in sti int3 cmp mov into movsl shrb and addb cmp push adc idiv test add icebp rep mov adc test addb addl repnz addl mov cmc jp xchg add andl fmull mov mov add mov in neg leave in dec adc jmp cmp dec hlt andl outsl sub adc andl inc (bad) dec das push (bad) dec adc dec addb addl out popa iret and xlat andl repz xchg orb mov adc sti add addb fsubl test addl mov or addb andl addl mov int3 jmp xchg mov andb int3 mov pop mov addl adcl mov outsb addl and in out and addb ja xorb fisttpl xorl (bad) dec inc addb popl andl mov mov addl loop fcoms add addl and mov addl aad fmulp stc out andl popa dec test pusha xor sub fs movl in inc test add add sbb inc pop sub in lahf inc dec notl andb mov (bad) cmp add addl cmpb addl fmull mov nop addl lret push jno jbe and and mov int3 cmp mov and add rcl adc repz mov mov int3 in lcall addl rcll addl (bad) mov add mov push xchg dec ds xchg and mov addl adc addb addl push mov ja cli jmp mov and mov mov mov outsb mov or out addb andl fxch mov addl andl roll in mov mov add sub ret call cmp int3 xorb add jmp xor lea iret rorb in andb andl mov daa lret test movl andl mov sbb and xorl js cmc ljmp mov addl mov andb mov adc movsb jle pop out mov push dec out mov and adc scas sub pop and andl xchg jge ljmp mov andl popa outsl xor mov mov iret mov mov in andl lods stos add andb repnz sbbl pop hlt int3 mov mov addl inc les enter addl jmp int3 roll out and add andl mov das andb add int push inc xchg xchg dec andl leave popf dec int jmp andl int3 or jge es push mov pop push addb addl std (bad) jp adc addl test fiadds fiaddl mov mov mov mov andl lret xchg mov cmp fdivp andl addl xchg inc loopnew mov xorl int scas loope pop add add add add sahf addl mov xchg inc andl dec adcl addb andl andl lret jnp mov addl add addl mov addl or and int3 jmp cmp addl shlb addl div ret int3 test add add ljmp add mov andb mov sbb flds addl in jo xor jo mov cwtl cwtl negl inc ret mov add test sub and add pop repnz and andl mov (bad) pop mov addb add rcll andl in lea and addl (bad) fwait cmp nop lds add mov addl leave add test sbb aas movsl movsb popa cmp add addl jmp jmp addl andl out jl pop xchg addb andl sbb iret and mov cmp test add push push or add or sub mov in faddl addl andb andl push sub addb pop xlat insb int3 mov and subl cwtl or fiadds addl and bswap int3 sbb inc andl mov mov push addl addl repz add and js cmpsb jmp imul mov addl aad mov mov andl adc int3 inc and addb int3 dec jp testl pusha enter lods jb pop imul addl jae rolb mov mov mov popl sub loope add add andl xor stc mov andb add andb addb fisttps mov pop mov andl sub lahf ja insb sub int andl adc or andl jl adcb addl cmpsl pushf cmp mov andl iret addb addl je xorl mov outsl add add push int3 flds or andl sub pop adc xor addb loopew (bad) mov addb xorl xchg lea xorb mov test les mov mov andb sbb dec loopne sub imul and nop rcrl mov push rclb rorb addl jnp xor sub mov mov fucomi and addb add movsb fisubs mov add add sbb mov addl addl addl xlat mov add mov xchg aas jb fucomp cltd mov mov addl adc andl orl andl mov cmp out fstps xchg and andb pop scas subb mov addb add mov (bad) push outsl subb insb andl pop mov sub daa dec scas mov mov and out and inc hlt and shlb addb mov xor mov add or or sbb mov and cld mov sbb cmp andl xchg pusha int3 pop fidivrs in test orl andl sbb rcrl mov mov add andl cs addl xor roll (bad) cmp mov add mov mov addb pushf cmp mov andl addl andb sub pop mov jecxz addl int3 lea movl int3 cmc inc or add mov andb and lea push dec xchg aas hlt jle addb mov in addl add (bad) movsb sub push gs and addb ss aad ret in adcl add pop cld xchg ds add or subb addl test andl pop sbbb push xchg add andl jecxz daa lret mov pop sbb mov add mov pop dec test int3 movsb hlt adcl andb sub test addl andl rcrl les mov mov addl int3 xchg andl jecxz mov sub jg inc pop test fiadds addb mov mov mov addb in in lods in jb hlt andl addl mov mov addb int3 scas dec (bad) jge add add stos mov vpaddusw dec addl sbb pop insb jge andl dec jp jmp orb xorl scas adcl jae mov andl movsl inc subl xorl inc or add addl pop addl and mov cld cmp mov addb outsl mov fmull movsl sbbl addb add int3 add mov adc addl addb fwait jmp addb int3 push dec andb mov fcmovne hlt es add mov mov bound addb cmpl stos cltd addl xlat setae mov addb xchg pop mov mov mov mov sbb addl pop shrl jmp lahf add and add push jo int and addl (bad) flds and int3 fld call inc fiaddl addb addl fwait xor hlt xchg lahf mov fiadds int3 mov and mov adc addb andl xor andl out adcb xorl outsb or test cmp addl andb andl dec cli adcb mov subb sub jl and adc movsl cmp ror movsl mov andb orl mov andb fiaddl hlt sbbb mov and or (bad) mov pop gs hlt adc add and repz xchg xorl andb andl jge xchg pop push (bad) dec sbbl addl xchg cmpb (bad) xchg addl fbld adc addl int3 inc (bad) jle addl test lods ss fiaddl andl push int3 popf mov into ret push test andb add addl faddl mov addl aaa xchg dec (bad) push aad cld xor addl in pop iret pop out out addb addl int push dec xor cmpb andl rclb fnstsw and fld push cmp mov mov adc movsl andb add or add inc jecxz in and subb or push or xorl popf push xchg and adc jnp stc sbbl add int3 pop pop mov addb fimuls ja fistpl fnstenv mov andl adc mov xorl rclb push dec xorb mov adc fxch andl xlat add loope faddl andl cli insl sbb addl inc add test gs mov mov addb mov (bad) mov mov add cmpl xchg mov addl addb mov and add lcall fsubs mov add cmc cltd scas aas stc rcr or or andl int3 mov andb loop aaa dec add clc mov and add pop test test dec and andb aaa sub orb addl leave mov jae lret lahf xchg mov addb push in shrb add addl add int3 loopne mov xor mov addl cmpsl mov cwtl push cmp mov insb xor addl stos js aad sarl movsb addb andl and mov fwait in and cltd adc les mov mov add add sbbb addl stc mov dec in andb andl jno or add mov addb xchg sbbb mov and cmpl mov xor addl inc aad adc fistl sbb andb dec mov or push test push aam push stos andl movsl aas aas cmp in fcmove cmc mov sbb andl out mov testb mov adc cwtl into sahf aaa int3 sbb sbb mov push jne stc xchg or je cmpl addl and shrb push cld lahf xchg push addl fidivs repz addl mov mov ret dec notl test mov addb sarb insl int3 sbb cmpsl mov mov add mov sub push jecxz cmp andb mov xchg data16 add and jnp andb mov (bad) in xchg addl sbb addb addl xchg aad fldenv lock mov aam pop xchg mov addb mov mov lods mov andl add fs or lea mov test jmp rcrl jmp test addb jno ja and data16 jmp in addl jg push cmpsl rcll outsb xor mov mov adc cmc movsb int3 lods push xor andl bswap xchg (bad) faddl or xchg int3 cmp mov lock jle lret dec shl xorb mov fwait adc jno cmp mov add mov pop push add addl or (bad) iret shll addl andl pop clc dec andl mov sbb int3 jmp fdivrp mov mov add xor add add add pop xlat inc mov andb mov mov mov add dec std mov bound mov inc push sbb into loopne ds orl add mov xchg aas adc adc sahf dec push in mov mov and add mov mov mov loope out mov test mov jecxz xor addl adc add sbbl cmc cmp jle addl add movsl dec call xor addl and in mov add xor (bad) fsts adcl addl mov xchg in addl addb andl (bad) stc int3 and mov imul sar icebp mov addb fmull sub ror mov add std adc mov andb andl add mov or xchg inc int3 lods andl addl adc aad bound andb sbbl movsl std andb mov mov or pop orl int3 andl (bad) pop les cs pop outsl cmp and and add xorb addb cmpb aaa mov andb andl int3 jge pop and andl and cmpb test and or mov addl xor mov addl je fisttps addl lds int3 orl ror add andl enter arpl mov addl mov andl fsubl mov add andb mov mov sbb jno mov adc or andl addl addb int3 pop dec lods pop loop addb mov fisubrs and addl les clc pop int3 andl addl flds xchg (bad) decb xorl sbb mov int3 testb andb jnp cld aas and addb xor and add test cmp (bad) faddl andl dec ret mov mov lods mov add sub scas jmp addl mov fistl xorl addl mov addb dec cmpsl jo inc loop push mov addl cli ret dec push dec add call addb popf das and push push imul xchg iret addb add int ret jnp testb add add sbb mov outsl arpl andb mov movsb fcos push xchg aas xchg addb add push inc add mov addb andl sub andl mov nop mov and add bound push dec fldl mov mov sbb xorb add mov addb mov (bad) mov addl add int push mov nop imul addl jmp mov addb addl xorb sbb inc ficoms inc lahf subb and cmpsl movsl mov sub addl std adcl mov lods push flds addl add mov cmpsb xorb add stc mov in jmp addl test mov add rorb mov cmpb sbb push enter mov xorl or add pushf mov mov addl andl xorl repz jns pushf test andb dec add cmpsb fmul and stos sub andl fsubl sbb or addb mov movb push mov aas xchg inc andb andl cmpsl mov xchg cli xor mov adcl aas pop fwait add add mov int3 lods xor addl pop dec mov mov test xchg mov ljmp fmul xor and addl mulb cli cmpsb mov andb sahf jbe pop sub xor (bad) cmc shrl and subl into lock andl pop xchg pop sub in scas roll addl adc out add addb add cmpsb mov add adc addl scas sub xorl aam jbe cmp addl out push addl mov orb movsb popa lret roll andl mov pop lcall andl sbb andl xorb sarl sub sbbb mov andb out inc inc add addl xchg jmp addl mov and insb fistl addb in in (bad) nop jge in xor addb add (bad) cmpsb xchg in daa std sbb add add aad andb mov mov gs (bad) in mov andl fsubs addb subl xlat ljmp and jb sbb add andl (bad) call push pop test mov mov (bad) fidivrs ljmp push mov addb add loop xlat andl cmp jge or hlt lea and addl arpl and addl push js and add addl lock cmpl addb mov iret addb andl sbb cwtl out adc andl add cmpsb lret xchg cmpsb dec test addl add sub mov cmp push insb dec mov fiaddl andb andl mov and addb test and orl dec mov jmp in scas sub andb xor movsl orl andb xchg sbb andb andb subb add and cmpb andl xor shlb sbb pop andb andl mov xorb lds mov sub scas fcomp ljmp xor addl and gs sub addl sbbl addl aas sub aam aaa lock push add andl test xchg addl pop inc and adc mov pop hlt adc test sti cwtl aas sti or mov mov insl cmp cmpl (bad) pop out fldl mov cwtl scas int3 bswap jecxz sub xlat andl or push insb cli cmpsb popf mov lahf xorl andl cmpsb out stos lret out stos jnp andl mov stos cmc hlt mov addl pop outsl aaa sahf (bad) sbb rorl sbb mov mov addb sub out aas call andb adc popa inc jo std addl mov inc xorb add cwtl addl lahf shlb (bad) xorl loop roll jl mov mov mov adc and mov addl mov addl add addl mov and mov mov std add andl test repnz fadds add add out out adc andl jp stos (bad) imul adc add push lret pminub (bad) fcompl loope xchg addb add subl mov addl fwait std push aad sub inc addl out pop pushf pop and or andl mov fsubrl jp add adc and andb and and popf shl ss xor orl xorb add pop or into cld aam sub mov add xchg cmp addl add mov in mov jno addl sub xor sbb mov addb addl pop ss or sbb mov sbb jno cltd enter cmc inc repz xor addb andl push and mov rep xchg hlt mov mov add pop mov cs aad xorb add mov andb andl decl mov and orb adc cmc mov addl rolb movsl push addl addl shr and enter push add mov andb mov inc cmovp cmpsb mov addl rorl insl mov cmp mov andb and out or andl jmp loopne xlat mov mul xorb andb andl jnp sbb and addb sahf dec inc pop xchg aam out inc nop pop addl test lds cmp addl (bad) push fdiv mov mov movsl pop popf scas sub les addb mov jmp add andb add bswap repz mov mov add andb (bad) mov movsl sbb inc rolb andl cmp dec addb addl hlt invd aam push scas addl addl int3 lock add addb and push addl lahf fadd dec sbb add mov (bad) js jo aad xorl popf adc loopne push xchg mov mov mov pop mov orb jl addb je pop fstps mov sti sbbb add outsb (bad) enter stc pop mov fcoms mov cltd stc cmp push jg outsl pop xorb mov push inc pop or andl mov shrl stos aaa sbbl add addl imul addl pop push int mov mov or test mov addb add sub cmc in sub addl addb adcl addl or sub cmpsl addl add inc out add nop sbb andl xchg aad add subb andl clc cmp imul and add jae rcrb rol mov mov addl inc mov daa les mov addl enter cmc mov andl das push mov pop push jmp jl nop and addl cmc push data16 pusha call addb mov fildl addl scas push popf mov addl lods jp clc stc out stc addb andl adc fcmove sub pop pop jcxz andl xor dec and out rcrl mov mov add sub xorb add outsl jge iret cmp inc ljmp xchg andb andl fsubs stc xchg test addl into andl addl sub test mov addl or mov andl addl push enter andl lods push loopne xchg cmpl andl lret lret xchg addb mov mov stos push add addl pop pop inc pop jmp outsb jmp addb loope gs jno test addl test sbb xchg jae clc lea xor addl repz stos movsb jns adc pop mov mov gs es cmp add andl aas pop imul outsl andb add nop inc loope aas (bad) scas popa andl sahf nop mov lcall andb mov test out adc andl stos int mov mov addl cmp add addb pop shl adc mov and addl mov sub ja and orb popf sbbl cmp addb std fstl sbb andb imul sbb andl popa cmpsl inc fldl andl jp into enter or stos addb xorl xor addl jp cwtl inc andl mov xchg faddl mov addb stos int3 dec jnp jle dec insb dec cld push pusha mov addl in sahf sbb (bad) xchg xor aad mov addb mov dec xor add mov addl addb xor adc mov addl adcl addb lods bnd xchg roll addl xchg pop push cmp lcall andl out cwtl mov and add fwait sarl es sbbl popa and andb lret fidivs xor fnstenv cmpsl movsl mov addb add into dec stos xchg repz pop jle insl andl sbb sarb ret cld and addl stos stos sbb lret addb mov mov and subl mov pusha loope jmp clc add sub addb test pop test xorb aad jmp andl inc and and push out stos push mov and mov jne mov pop mov addl add rolw addl fldt movsb into jl andb andl (bad) sbb into add mov sbbb xchg popa js xor or andl addl mov jae testl andl aaa clc out addl shll aad cmpsl mov iret cmp addl mov cmc orl das jmp and and pushf aam sbb adc fsubr adc insl addb mov mov sti push pop mov and add add and and addb jle cmp addl jo out andb jg int addb xchg jbe les jne frstor mov add sub lcall andl les cli andb add jne xchg or andl cmp shrl ljmp andb mov out push mov dec adc mov in pop add addb addl fstl and mov mov mov dec add addb pusha mov andl pushf sub mov and subb rcrb les repz mov addb xor mov aaa pop jmp addl in icebp ss mov pushf mov cmp andl push dec andb mov mov les xorl add movsb mov andl add mov add mov adc daa addl add addl add cmp addl stc shl add mov addb push incb push mov out xor ret mov add orl pop mov add add lcall addl mov imul lret cmpsb fidivs notl andl jge jns jle loop popf addl jo fucomi fbstp stos mov and dec insl mov andb add mov xchg cld and andb xchg jmp pop popf popf mov addb add pushf sti inc push cmp pushf pop pop lods lcall mov add in xchg jecxz sbbl test mov xchg pop (bad) cwtl add fstpl addl cld mov addl fsubl jge int3 add add dec mov and insl ret xorb fucom addb andl cmpl addb push imulb loope xchg mov xchg in mov mov add or stos jae xorb add cwtl cmp out andb andl add mov subb add pop int3 inc mov icebp andl addl mov addl pop push fdivl std cmp mov addl std mov addl lods mov mov addl addb mov movsl stc call aaa jns fsubrl test andb andl orl mov sbbl or add pop outsl mov adcl addl cmpsl dec rolb enter addl xchg shll ja les cmp add andl mov or pop push fildl addl andl push sarb andl pop or mov mov addl push dec (bad) call inc negb addb addl gs pop jg xlat mov addl add cmp addb mov mov lock xchg cltd sbb andl jb popa test in andl addl (bad) aam xorl notl mov push add ljmp add add mov addl fs leave mov js lahf aad stc andl sarb in mov andl aam xorb mov aas mov cmpsl in sbb mov mov addl sbb mov and stos in iret sbb addl mov cmpsl push push andl mov out test popf in mov roll addl inc addl addb jmp stc mov imul addl xorl dec addb add ret mov addb andl addl cmpsb insb mov mov mov addb dec sbb pushf dec and andb cmp lock push in jp int js loop mov mov addl and mov andl or movsb pop mov and addl adc scas mov addl mov cmp pop pop dec decb addb addl (bad) mov and sbb rorb in shrb std cmpsb addb andl and sub addb dec movl addb mov outsl or scas into cwtl mov adc addl cmp mov add xchg dec and psubsw fcomps and adcb sbbl xor addb fsubs or outsl mov xchg addl and jnp addl mov push mov cs jmp andb iret and loop out add and adc addb mov cmc hlt test and add fmulp test andl aaa fucomp mov gs mov inc les addl mov cmpsl xchg mov addl xchg mov aaa test outsb mov mov lds mov addl les out mov xor addl int3 (bad) es pop sbb mov jno pop imul mov call sub mov rcll xor mov addl mov andl testb sbb addb mov repz pop popa addb addl xorb sbb ret mov and orb or xorl (bad) int3 xchg aam jge push sbb fiadds addl test jbe or andl fsubs jp andl mov shll pop addb add sub stos arpl mov andl mov xchg cmpsl scas mov andl pusha mov lea bound andl dec cltd push stos iret mov leave nop mov pop aad mov addl je add sti cmp xor addl xchg jns lock sbb int mov addl push movl mov add std movsl xchg sbb andb mov das movsl add jmp andl xchg inc adc mov addl fiadds (bad) mov mov jp mov mov andl andb jo sarl mov mov addl push mov addb add xor fsts mov add stos sti sub fbstp sub dec into and addl mov addb mov and add addl or push enter addl in push cmc popa mov sbb addb andl nop dec jae push in sti jge andl adcl xorl push insl push add test push cld sub sub cmp ret jne mov add rcrb push dec adc addl ljmp push roll mov cmp jge andb addl notl pop pop pop andb mov adcb out outsb andl imull out fisubrs andb and and insb mov shrb addb mov fmulp dec shrl mov mov lods push mov mov and addb mov addl push rol mov insl call addl pop jbe adc sti pop test andl cmpsl xchg or push ljmp andl movsl (bad) mov xchg jge (bad) adc andb add cs mov andl dec cmpsb dec mov xor das fisubs addl data16 push xor jge add xchg adc andl clc cld andl xchg push mov or jge add addb mov andl je jp mov (bad) dec cmpsb andl addl xor cmpsl rcrl insb add mov mov addb sub aaa dec and pop test addl cmpsb mov imul addb aas fs ja jmp addb ds pusha jnp orl mov pop xor rorb xorb mov sub test mov addl lock add add addl ss and mov sahf pop mov dec dec sub clc xlat ret test push andl (bad) (bad) xchg lods lcall mov add jne pushl lea cmc addl addb mov mov addl fidivrl mov aad andl mov xorl mov sbbl fistl andl enter pushf orb and add mov xorl add pop cmpsb inc pop orb push mov addb add inc add sbb je mov add and sbb in in mov and addl push inc push sbb addl fcmovu push mov aas xor into mov addl pop imul ds dec std lea and sti addb addb andl iret xlat push in and mov mov andl xlat push pop fisttps jp lods xchg mov add and cmpsl test mov and mov jmp xchg mov sti inc xchg int mov add mov mov add mov and stos shl mov addl (bad) and aaa aaa loopne dec fldcw andb addl andl addl add mov and adcb cmpsb push and mov andl xor sbb lahf addb mov xorb flds andl xlat cmp addb into jg cmpl add mov push mov mov addl mov mov call out xchg addl addl xchg mov inc (bad) ljmp lods andb add gs mov addl push mov iret jno cmc addl adc mov andl xlat cmpl outsb xchg pusha test test mov addl add test dec add addb mov and and mov mov andl dec int3 andl addl pop xor push pop xorl cmp test insb add add es mov cmp mov inc addl fninit mov faddp call js mov mov test arpl fmulp addb adcl cmp mov mov andl and lahf adc add mov popa push rcrb add addl mov addl and ja mov andl scas jge fs (bad) mov addb add xchg xor imul add add cmp mov loope adc addl xchg jecxz rcrb mov andl jg fisttps fiadds andl (bad) lods push xchg xchg cld andb mov add stos outsb fists inc loope and add adc pusha mov mov pop and andb xchg and cmpsb int3 imul mov addl xorb mov aam andl adc sub add mov cwtl mov addl ss das jge ss add iret je iret lods notl mov addb aas ljmp jbe cmpsl cmp jae ds addb andl pop and mov mov add cmp fsubl mov add das lock scas fsubl (bad) cli lea addl andb andl add mov adcb imul mov sbbl addl mov mov into mov andb xchg stos andl movsl push stos sbb jb add and popa sbb pop test subl andl int mov mov and add and xorb lahf fsubrs and addb les addl cwtl mov addl pop andb addb cmp dec add mov addb mov push ret inc orb (bad) pop xchg mov andb add jp andl push push pop jmp addl mov addb mov andl insb mov mov addl test les add addb cmp mov andl mov and rcll mov adcb push mov pop mov addl flds loopne addl scas (bad) xchg addl arpl mov or or mov mov xchg ret and movsb addb sbbl ret iret mov addl sub add andl or push pop xchg cmp add addl pop add and mov scas inc ds add add addl push fucom sahf testl addl jl les cmpsl xchg adc icebp addl addb jp sub jb mov andb test andl jge jl ljmp mov lods mov cmp andb int xchg test test mov and add cmp and andb test test mov addb add cmp andl sahf rol pop cmp mov aam and addl hlt and adc stc mov addb mov pop mov pop test addb addl push mov and mov and call add xor sbb addb andl mov and mov add fcomps fisubl mov add push xor lods lret enter mov add jl shlb stos adcb andb andl mov cmc in lret testb mov adc adc xchg lods out iret andl addl andb cmpl ljmp and lret faddl jne and andl jecxz mov add and inc (bad) mov mov or addl or or xor mov adcb hlt and addb icebp stos xor mov andb neg mov xorb addl xorl mov ds xor jl fildl addb lods dec xchg mov dec aaa lods enter addl test shlb andl and gs inc jb in andb mov imul cmp pop jle xchg mov mov addb addl mov addl xor add addb cmp mov jns test andl stos xlat das notl sti push mov and addb sbb mov andb cmpsb fiadds addl pop and addl mov add mov mov xchg inc mov mov mov mov adc xchg xchg xor addl test push andl xlat lods mov push addl mov and sbb adc jb popl addl and in andl sub inc cmpsb fildl add adc nop addl addb push sub pop loop out mov andb orb div xchg lea scas or add jmp stos sub mov mov jge jle addl andl lcall (bad) aam and add outsb fiadds and andb fcmovne pop xchg dec aas mov sti mov addl sub adcb add andl fsubp sub add cs (bad) mov addb mov loopne xchg mov add addl mov and hlt cli mov and jecxz lret rorl icebp inc dec push adc xchg int testl daa cmp rclb mov and mov mov adc add loopne aas mov mov add cmp mov or addl and andb andl lret cmp out mov scas sbb and cmpb fildll fistps mov and adc inc addl mov jnp jno or data16 loope addl mov cli ds nop fiaddl andl pop add mov addl mov addb mov push in shlb andb andl push push mov cmp mov orl aaa addl mov sub push dec mov addl out movsb mov mull mov or mov mov addb stc add mov mov add mov and or mov addl mov push (bad) fmuls cltd mulb mov adc or addb addl insb lahf dec add ret xchg addl add addb adc inc or mov push xor addl jp jmp lcall addl xchg push incb fnstsw xorl xchg dec frstor lahf cli lcall addl mov cmc dec stos addl sub jns andl daa pop insb jbe test addb pushf (bad) mov in mov andl lahf subl andb dec add addl mov or sahf mov addl (bad) rcl mov add andl jae andl mov mov add into add add add sahf out push les push fnstenv andb mov mov mov add cld test addb andl notl addl into mov idivb cltd test fisubs movsl mov and add push pop nop jns adc lret and andl xchg or xorb add xchg mov mov addb cmp jno xchg or add jg (bad) mov addb mov jl lea mov push lret movsl js fists addl aaa push pop orl mov data16 andl inc mov popa sbb andl es test mov mov add mov lds addl adcl test cmpsl (bad) cmpsb mov and enter cmp imul mov addb xchg mov enter mov sbb jo or adcl addl addb jae pop mov andb iret test aad aaa loope popa mov mov push loop popf mov andl mov xor stc sbb xorl cmp and and add inc adc andl mov addl cltd movsl (bad) mov mov addl nop lahf mov mov bound addb rcrl mov andb add push pop jmp inc andl insl cltd cmp mov andb mov ret pop data16 mov andl mov addb test push mov add addb or enter fldcw addl out jns cltd cmc pop pop push addl dec psubsw jg xorl in (bad) rcl jnp les movl cwtl add add mov mov addb and std andl pop std movsl andl mov dec fisttpll addl addl (bad) sbb std movsl std mov addl or cmpsl xor jecxz fimuls mov addl mov ror aad inc mul add addl outsl addl addb addb addb ss clc leave addb add scas cmp add add xorb ljmp andb cmp andl xchg test pop js xorb andl push dec push pop add scas mov mov andl xchg pop xchg rcl es and add and aaa lock and andb test add aam sbb pop mov addb add icebp subl pop xlat leave lods andl adcb in in addl or hlt nop and addl insb jl cmp addl stos xchg test mov out pop test addl sbb shll mov and sbb and sarb mov andl sbbl cltd shr xchg stos and andl xchg mov jbe out xor mov mov add movsl lret jnp les les addl push xorb or cld andb andl mov mov addl mov and orl cmpsb movsl sbb mov addl loope lods addb aas sbb dec stc mov andb test andl mov and adc ja imul push mov andl push pop mov sbb mov andl and mov sub outsb push add scas repnz nop out and addb popf movsb push or addl std fs testb mov addl pop jl mov mov outsb rorl lahf mov add andl orb and andb add xchg push addb push mov sbbl addl dec aad addb addl js cmp addl mov (bad) pop add addb and mov add pop adcb push or addl lret mov std clc outsl out xorl rclb scas into jg cmpsl clc aas add add lret dec fiaddl fwait les shll addb mov jl mov push addb in inc scas movsb loopne mov xorl out ja in inc mov mov andl sub (bad) leave repz addb lcall andl mov mov addl stc fnsave andl not nop jmp ljmp inc gs pop mov add add int3 idivb addb jecxz iret shl xor jp andb mov mov aam mov addb add mov pop addb and mov xor andb rcl neg lea andl add or and andb xor or mov addb add xchg mov mov add andl fcoms and and mov stos add or mov sbb or and cmc xor sub lcall jl add addl movl push mov addl add dec int3 addb andl cli fmulp and mov push or decl jb addl add fnstsw xor iret sarl popl addl lret xchg push andb andl andb cmp add mov sbbb ljmp add inc xchg fcompl addl dec mov int push mov andb fs mov and push jo test andl push sub mov addl stos or lret addb mov mov andb andl pop cmp and addb test add pop imul mov add xor cmpb addl hlt jle fidivl sub addl and push mov cli adc add andl or jecxz mov add mov test mov addl (bad) cmp and cmp imul addb cld add xchg andl pop fstps addb mov lea es addl jns dec mov aam shrl mov orb fstpl pop cmpl mov adcb movsl insl xor mov add add (bad) xchg (bad) mov mov mov xor mov mov cld jp leave sub addb adc loope mov pusha xor andl mov jnp scas andl cmp movsl mov sbb dec mov add addl jle (bad) sbb addl push xchg andl mov adc stos orl mov add repz fadd addl addb mov lock ds shll ss dec push andb mov fs cmp inc xchg inc push or andl test dec mov pop mov addb cmp and into addl mov and add add (bad) or mov mov in loop xorb add pop lcall mov insl andl orb jmp addl add pop mov xchg and addb mov cmpsl rcrl add sbbb push push pop leave fsubs mov addl cmpsb adc int insb addb andl cmc push xchg andl cmc mov popf xchg addl add mov cmp mov sub add dec cwtl mov inc and push ds cmp repz andb andl and andb inc aaa pop fsubr mov addl pushl andb and cltd cmc es push mov mov andb data16 int3 adc push mov add mov addl icebp push notl jae dec mov mov addl or mov nop lcall mov adcl cmp and add mov ds lock outsl shll mov orl into mov pop popa (bad) jmp mov mov addl adcb dec into jmp leave addl addl rorl mov mov or js,pt jne rcll pop std sbbb addb xor rolb mov mov add mov cmpl addl fistpll subb sub addl mov xchg xchg inc mov popa popf add addb cmp jbe sbb and mov addl xorb add addb filds addb mov lea adc and sbb cmp sar popf icebp xchg roll addb ds inc roll addl sarl mov sub pop or addb sub test sub addb cmpb lret xorl inc andl mov das sbb addl std jo aam xchg les mov andb fwait and mov addb enter sbb test and mov jbe rclb mov addb jae movsl out push cmovle fidivs addl (bad) sti outsb xor addl addb mov movb movsb fdiv push arpl add xchg (bad) fadds scas mov andl pop mov iret addb adcl inc xor push and andb xchg int rcrb jmp addl outsl nop mov jge ds jl cwtl and andb inc fucomi in pushf mov sub mov addb add xchg jmp add andl mov adc jp cmp mov add and jle cld mov cmp addl mov daa addb addl lahf fsubrs pop test addl shlb push andl aas enter mov andl arpl dec bound ret push sub addb cmpsl ret mov mov add les jmp push mov push loop mov add fdivl movsb les and subb inc ret lea cmpsl (bad) jp aas stc int andl addl pop addl fistpl inc shrb adc andl andl jae mov addl cmp andl pop jns mov loope,pn mov addb mov fistpll and dec sti push andb andl inc pop pushf test and addb pop xchg insl xchg int3 addl rcrb dec aad push shrl add jge mov mov addl jae mov mov mov jne jae ja jae addb ret sub call lea rol andb add sub addb ljmp test mov andb mov addl mov addl aam cmpsl push adc andl cmc int ret xor andl daa loop ret or cmpb andl mov leave addl addl fadds addb xchg andb adc nop jmp fiaddl andl rcrl rol lods fists add mov adc mov mov je inc cltd stos xorb mov les mov addl lds mov push adcb and mov fbld mov addl fstpt addb cmp addb add sub leave inc xchg addl addb das cmpl andb sub add fldl addl xchg xlat xchg dec test adc mov inc shr cs call andb aam pop scas push lods mov and add and xchg jmp and andl stos add push mov addb add cmpsl andl inc (bad) fistps mov xchg lahf add and addl push aas xorl addl repnz sbb dec dec aam addb addl cmp shll sbb addl adc mulb addb andl or andl in loop mov xorl scas jge pop xorb add loope jbe sti andb andl imul mov sub loope,pn inc test mov addl stc xlat push rorl andb andl xchg sar out add addl daa sbb andl and scas cmpsl dec lds add and lds rcll mov addb cwtl roll mov andl mov sub and addb in mov add add daa ret leave stos rclb xor pop mov addl test loopne mov addl and push lea mov addb test stos std outsl sahf (bad) mov addl rolb sahf adcl addl aas shrb mov jnp xchg aad fistl aas addb addl andl in imul sub addb mov enter xchg scas imul mov andl adc or andl addl mov mov mov addb pop lea pusha push add add push test int3 loop addb popl xchg mov or mov mov push inc in daa mov sub addb sbb in imul andl xor mov mov addl pop test xchg or cmp andl dec nop or rcrb mov addl rorl adc sub xchg andl or pop ss andl cmp test pop repz mov addl addb lcall mov andb pop not mov add addl mov andl mov adc mov andl rolb and add fsubr mov test xchg and andl xlat mull addb add pop jo shr xchg or pushf pop sbb andl dec addl add cmp insl addb mov mov dec test icebp sarl add xorb pop rcrb adc mov int3 jnp (bad) sti aam hlt mov addb andl cld xlat iret and mov out sbb mov ret mov mov add loopne xor fisttpll mov add ljmp rcr mov pop xchg and add andl or and subb mov int3 mov addl mov test sub mov addl andl addl addl xchg clc das dec mov mov andl sbb jl fists or xorl pusha pop sti xchg sub mov addl sti (bad) jnp icebp mov pop fbld andl imul mov add cmp cmpsl sub mov addl test addl (bad) mov int (bad) xlat or addb inc mov lods pop jne les clc andb add (bad) shll andl xchg enter mov or mov fisttps jae jle stc jecxz addb addl popf outsl repnz push ret mov addl nop es loopne cmpsb faddl add mov pop xchg mov adc sti mov faddl addb pop lret orl and sub mov loopne xchg or sbb fisttpll xchg addl in push mov mov add xchg sbbl mov sbb xorl xor push xorb mov loope lcall mov andb jno sbbb and icebp mov add mov addl adcl test mov addb mov les mov andl rclb cmc sbb cwtl dec mov addb gs loopne or andb mov ss pusha jge mov lock push addb add sti mov mov (bad) mov andl out lretw pusha mov fidivs mov fs jp add dec sbb decl and add adc sbb xchg (bad) and andb lahf ds push mov addl aas mov insb fs cmp addl mov xchg imul jae addl add xor sub testl inc jbe addb mov adc add (bad) rcrb or inc fisubrl add mov inc xchg fwait mov mov subl and addl cmp popa aam call sub andl icebp mov addl add or mov cmpsl in out or shrl mov jb lcall movsb add outsl adc add andl xchg mov jge pop xchg movsb add mov add adc andl addl pop scas adc and xchg scas loope mov add xchg notb dec add and xchg fmuls sti insb movsb enter addl js popf mov adc aaa xchg or xchg add and sahf cmp addb mov and push fsubrl mov xchg mov add sbbl in adc and mov addl mov mov sbb addl mov negb enter addb mov jb add addl mov pop ret cmpsb nop cmc cmp add andl sbb insl andb addl insl jmp cmpsl arpl mov jle xor mov andb mov ja into and sar dec nop push sbbl mov addl andl and mov std nop (bad) sbb addb mov movsb adc (bad) xor into dec cmc addl les jne sbb mov and adc into jno push pop xchg aaa mov mov mov mov addb or mov arpl push addl mov cmp dec andl das and mov ds in movsb or addb subb xorb mov sbb rcll xchg stos mov add mov xor lahf xor decl stc fldl andl jmp orb mov addl mov into add mov andl popf int mov addb lret addb add addb addb hlt in and xchg pop js andb mov (bad) cli iret into popf ret orl add faddl gs repnz shl addb and cld and andl dec mov and add pop mov inc sahf stc out and andb lock movsb mov sbbl mov addb add mov add movsl adc insb andl adc jge sbb addl add addb andl addb addl or add cmp aad adcb addl es and jg addl push xor fsts addb rcrb cmpsb jo jae sbb addl add in jno loope xorb add fwait imul mov add jge outsl mov xchg loop movsl pop xchg xchg subl addb arpl out in scas push and and aam call add addb mov out cli mov and mov scas aaa (bad) stos xorb lds addl xchg mov fwait xchg add add and jmp andl and cwtl mov xchg andb andl in cwtl and addb pop in loope cli aas pop and push mov mov add inc ret out (bad) sub mov addl cli test jb mov mov gs mov mov pop loop sub addb cmp fistpll fsts andb add stc pop or mov test xchg dec mov addl xchg loope mov fwait addb addl mov addl subb mov addb mov js addl ret mov sbb in int3 xchg cmpl pop andl addl sub rclb mov andb imulb mov mov mov mov into push lock addb inc pop add add sbb andl mov mov addr16 mov andl fists mov lret and sti dec into pushf push xorl add adcb mov addb bound addb into incb mov add out andl loopne cmc in mov xchg stos dec in addb add push mov rclb outsb mov iret addl addb mov dec into das mov addl ljmp push mov addl addr16 shll andl pop cmpb add mov add xchg cmpsb inc imul fstpl adc andl stc test (bad) and andb orl in sbb addb add int3 mov andl mov jp and addl fiadds mov in jecxz push sub mulb sbb addl add mov mov andl pop fistpll mov inc addb andl mov andl (bad) inc les mov mov add adc xorb add in lea mov add addl jle aam push add mov addb lds andl addl mov pop jo mov and mov inc icebp push mov mov andb subl ja cmp andl (bad) lods repz and pop mov call andl movsb xchg roll adc xchg testb mov call (bad) andl stc sub jmp mov mov add or jnp cmc insb push mov addl stc xchg test in mov mov les push bound addb lahf and notb and andb add insl cmc xchg andl subl scas inc jge andb mov fldl loopne in and addb xor cmpsl cmp addl orb mov mov aad shlb addb mov or sti dec cld andl addl mov mov mov andb add jle sub daa jge addl mov addl jnp xorl (bad) aad out andl out push push mov mov testb xchg addl faddp cltd sub lea and ja andl mov dec bound andl pop jge push aas scas or addl sarb mov addb cmc incl pop xorb mov idivb andl add sub mov std cmpsb mov xchg addl addb cmp stos (bad) xchg and push xor addl lds sbb sbb add addb add mov sbb sbb andl leave movsb mov pop mov andl pop adc mov and add inc insb add pusha xor and andb cld add lods shrb mov mov addb add andl cmp add mov shll pop popa mov bound addb mov nop stc cltd jne (bad) jne orl addl cmp xlat loop xchg jne and rcll andl cmpl sti addb andl call mov andl inc int call mov mov add rcrb mov push mov mov add xchg pop pop scas xchg test icebp outsb dec fmuls mov add mov andb andl (bad) sar mov andl addl into xchg and addl mov jecxz pop mov andb lock xchg (bad) testl mov mov aas loopne mov add and lods frstor lds xorl dec ds cs insb xorb test mov mov frstor xchg andl std scas imul push addl fwait sub adc addb mov cmp ljmp andl cwtl inc jo sbbb sub addb in sub std (bad) and rolb addl adc pop push adc int3 xchg jecxz sub mov xchg mulb out and movsl xor add addl or addb andb test scas push addb imul mov loopne fldenv xor addb mov in adc movsl xchg addl repz mov mov inc or andl addl mov mov addb (bad) jg push ds add add xchg mov (bad) repz lds leave orb andl add andl lds addb pop mov addl xchg lods pop jge mov scas andl pushf ds add addl loop inc test fsubs addl (bad) sbb adc addl pusha mov je shl mov addl scas inc aad or jge add add cld xchg add (bad) test filds add call mov xchg es andl xchg std mov sbb fstp mov andl test addl andl cli movsb mov imul addb mov and and andb and test lret fucomi cwtl adcb dec mov addb add push push addl add repz fsubrs add clc xchg pop test addl or addb addl push rclb fwait lea addb inc mov pop xchg cmc rorb xchg sbb or addb andl jmp sbbb addb mov andl xchg xor inc mov mov mov add xor movsb xor nop data16 mov mov aam mov adc out cmp mov addl aad inc jle mov icebp jne mov mov subb mov rcrb mov adcl xchg or stos addl addl test cmp andl mov andb pop dec stos and mov and adc out ret in clc lods mov mov addl addb mov xor imul andl dec rol and addb jnp addl add fwait dec push pop lds mov andb andb and enter mov pusha std mov mov subl add andl mov leave cld subl mov test icebp test andb loope or and sub fcmovnbe dec fmul mov andl xorb data16 dec andl mov mov andl cwtl inc rol daa sub addl mov andl addl leave mov mov mov addb aaa cmpsb mov out cli jbe ret add add push dec fdivl shlb sub addb or mov mov mov std ficomps addb adcl xchg fstl xor inc pop xorb mov cwtl gs pop shlb and mov andb int or lahf add addl adc subb (bad) mov addl int push arpl lock les andl mov sarb push pushf jns addb add xchg mov add add or add rclb int3 jmp andl scas mov xchg mov push fcos inc mov andl lods pop dec aaa pop jle pminub and jg and add and andb pusha movsb mov xorb add mov outsl push mov aam andl add sbbl (bad) nop push cmp in addl add cmp adc addb mov out pop xlat xor dec mov lea add and adc xchg xchg or and cwtl mov mov icebp addb andl and mov mul dec pop enter les cwtl add faddp addl mov add outsl xor lock mov addl or mov mov andb andl add mov addb cmc pushf jmp andl addl sub addl lcall int mov andb fcomip jmp addl xor mov addl dec addb mov pop push sub addl cmpsb test imul push dec and addb push test popf roll addl adc and adc je mov addl mov or mov mov push add add andl out mov xlat int rcl andb add jns cmpsl aas pop jmp stc adc andl arpl std fdiv or addl addb jmp mov addb addl in andl jns test push mov addl out test sti and fistl in andl negl sbb or sarb pop in sbb inc adc andb notb xorl hlt (bad) cmc xchg and jp sub mov andb movsl push push sbb es dec das inc addl cwtl cmp jns mov mov mov mov loopne sbb xorl push pop cmc fisubs mov mov mov mov neg mov cmpsl add int andl push add fimull repz addl pop (bad) mov addl mov xchg es xchg pop sub aaa andl int xorb lret mov addl sbb mov clc sti pop addl addb scas adc mov andb xchg or fadds call add pop ret movl push orb xchg addl idiv jo mov and add loopne push pop rclb rcll mov addl xorb add shll and pop xor jmp xchg add pop xorl addl add dec pop stos push ret xor addl pop stos fdecstp addb addl xchg or lds push movsl push nop cli fisubs and testl cmp addb andl lods aaa and mov test sub mov test jp or xorl loop xorb add sbbb mov add xchg sarl hlt or test jb and sbbb xchg mov fs sbb addb andb rcr mov pop push push addl lret push inc xchg andb jecxz lcall andl jnp adcl call out insb add and mov lods and pop pop addb mov lahf add andb andl inc insl xchg test fistpll andl sbb push pop addl xor push imul addl in mov push addl fwait push data16 faddl addb int jnp aas mul roll andb add fwait push andl mov in push cmp andl xchg push addr16 subl adc mov test stc mov mov or mov addl dec add addb xor addb push sub mov andb in xor test xorl test adc mov add add test xchg iret push bound andl andl cmpsb mov neg push mov xorl (bad) and push into filds data16 sahf clc xorb mov les sub hlt lods andl insb fs or add addl and mov jp int popf jb cwtl ljmp andl in jecxz cmpsl push addb add andl add add add jge rol aas notb fmul and data16 mov stc rol (bad) dec cmp addl test push iret cmp fstp mov addl insb xchg cmpsl outsb movb and stos std out dec imul mov and add pusha sar addb test mov mov mov mov addb add or pushl lods andl sub std xchg mov imul pop xchg imul inc mov fsubrs xor dec push sbbl add subb fidivrs mov scas mov andl mov sbb addb andl andl add add sbb xorl dec add and addl orl outsb sbb fwait in andb andl xor adc add mov subb repz mov adcl mov test mov addl sub ficoms adc scas fs dec mov andb mov ret int3 andl (bad) bound fistps notb add and xorl andl stos mov sbb sahf mov sbb fdivrl cmp andb andl out nop and addb pop addl (bad) divb addl mov mov ficoms andl fistpl inc enter add andl clc cmc xchg andb add pushf pop pop or andl mov xchg in fiaddl xchg push push xor filds andl in add xchg (bad) std aaa mov addb addl mov addl xor andl fsubrl sahf pop pop addl decb (bad) hlt inc addl xchg mov sub mov fadd cmp addb (bad) push xor andl mov ljmp xchg stos scas icebp pop addl les fisttps out rcrl popf or andl pop lds scas sti repz adcl adc mov andl in xchg push ret xchg or mov mov addl scas lcall and cmpsl out (bad) movsb mov addl lods xchg addl test dec andl inc aas lea test filds add pop cmp mov stos or andl pop push shlb add xchg iret cwtl pusha jp cmp xchg push fs addb add sbbl fstp addb addl jmp mov aaa addl ret pop jmp ret addl int pop (bad) mov andb jnp mov lahf movsl loope mov mov addb add and and addl test sub jae idivl and addl and mov in addb mov xchg sbb add addb add rcr xlat test test andl mov test int3 jmp addb andl mov inc and mov jp pop xor shlb jmp xorl sbb addl orl mov and xchg xchg xchg nop lods sbb arpl stos xchg jne jle add mov or (bad) sarb sbb das test xchg andl addl andb addl mov mov mov andb es andl adcb rcrl jbe jmp xchg push (bad) xchg add and xor push inc and addl fstpt xchg lea out dec flds mov movsb sbb andl mov andb mov jge add addl push loope shr outsb test addl (bad) das add andl clc cwtl add dec andb add dec (bad) sbb adc andl and dec mov andb mov aas adc addb addl mov addl cmp addb mov fsubl andl mov inc fisubs in andl addl mov mov addb daa in or subl andb daa mov nop xchg outsb cltd fisubrs addb fadds fnstenv mov andl push or mov mov test andl mov jp mov andl dec jnp andl (bad) pop ficomps push mov mov addb push sub popf mov and mov mov mov pusha je (bad) andl push addl addl mov add add pop adcl andb lcall add addl (bad) outsb cli adc addb or jmp andb xchg add jbe mov mov and add cli fcomi sbb push xor pop jnp and andl clc mov addb add mov ret lahf (bad) cltd fldenv cmp add adcl inc xor addl add (bad) or or addl sub add movsb lds inc adc arpl and sti std movsl lds jns mov addl lods and and mov (bad) fimuls addb and or addl subl jmp mov aas bound add addl xchg scas call fstpt add mov add and mov addb rcr add and push xchg addl inc ss xchg les mov andb and call lahf mov addl sbb test andl (bad) mov cmpsl cmp addb mov mov insb cli andb andl xchg addl sarl popa xchg push addl mov cli or jnp mov sub addl push inc mov inc sbb mov mov lcall xchg test jne mov addb icebp iret fmuls scas repz subb rcll andb add fwait mov aad andl cmpsl cmp rorb andl lock fnstsw mov andl arpl and mov mov andl inc jecxz xchg fidivrs mov addl iret add aas add fneni(8087 es andl addl inc sar jge xor pop add mov addb or addl outsb movsl cmpb mov and pop test mov daa das push test inc mov mov mov cwtl lcall xorl out mov stos push testb mov or mov std int3 movsb cwtl jmp mov andl pop lea test addl add addl mov loope repnz sub addl jl es ret gs or mov addb push arpl mov sbb movsl pop xchg addl cmc addl addb mov jp or addl shll cmpsl cmp xchg cwtl xchg test andl lret mov jmp adc sbb andl inc xchg or enter imul lds fs insl lea andl sarb xchg fcoml imul shlb and andl or xorb add pop int3 adc pusha les mov add push shl sub add mov push clc pop xor and mov test add add rcrl add andl into adc shl addb andl xor addb pop into mov pop pop sahf notb addl add dec cmpsb out jmp inc (bad) cmp addl cmp add addl (bad) pop shll mov cmpb (bad) push andl addl adc addl jl inc sub loopne mov andb mov andl les popf stos lds fwait es inc test mov andl xchg xor mov addb mov aad mov rolb lret andb andl mov dec adc adc frstor mov sbbl pop test je andb mov pop mov addl (bad) scas mov addb dec dec jp xchg jecxz int addb rcrl sahf stos sti jnp insl pushf subl addl outsb sub fisubrs ja mov addl xchg shll andb mov jno xchg addb addl xchg jmp inc roll addl mov andl cltd repz in popa pushf (bad) add pop addl shlb push inc lretw andl addl xorl jnp cltd xchg clc cmc movb andb fimull cmc xchg addl stc add adc or xchg movsl mov addb aas sub mov icebp inc mov xorl sub mov pusha adcb mov mov andl mov andl mov icebp mov rol inc cmp andl outsl loop,pn cmpsb jnp mov sti lret adc addl sti (bad) int3 test andl and (bad) (bad) rolb add lods and add add and inc push (bad) cmpsl mov addl push movsb inc addb add pop xchg addb sbb mov repnz call xor mov adc addl mov inc fsubr push pop popf push andb mov clc iret pop adc inc xchg mov addb add pop pop int3 adcl andl fisubrl cmp stos insl and addl adcb inc lods jbe addl adc cmp mov adc sbb addb addl js addl pop jmp addl dec movsb fdivp pop xchg sbb dec xchg xchg pop addb andl adc push or mov andl sub pushf mov mov add sub jae or jg mov add dec pop std fdivs push jb es fisubrs addl iret mov pop pop addb and subb pop shr andl addl mov addl sbb cmpb mov andb push jecxz fcmovb lret mov mov addl outsl (bad) adc test out add and popf and fisubs stos push dec addb mov pushf fcoms (bad) sbbb andl cmp inc xchg pop lahf lds adc and addb clc movsl (bad) movl andb lea jle rcll addl or int3 mov mov mov pop icebp js mov xorb addl jl les mov addl mull pop (bad) xchg andl cld rcr pop mov arpl and cmp sbbb add addb addl xor addl mov addl test mov addl imul lea cmc test andl addl xchg inc cld jne mov mov addb testb mov andb jg mov push cltd pop andl mov addb adc or andl cmpsb fdiv lret addb cmpl or xorb mov xchg xchg mov xorl or lock push xchg gs add addl and and mov dec mov fucomip cmc aam andl mov sbb cmp mov add stc mov shrl add add stos frstor subb andb mov stos sub and andl sub sbb out cltd cmpsl mov adc push addb andl jno addl imulb shrb (bad) jbe push test and add and mov mov addl popa icebp adc dec stc enter addl orl mov movl iret jp bound insl cmpl test add xor cmpl addb mov test adc mov scas mov addb addl jne (bad) lea dec push test and sbb movups lahf das addb andl int xchg xchg (bad) call xchg nop and mov fmuls (bad) es adc push adc add hlt or imul jbe dec jns insl les xchg xchg inc xorb add jle cli andb andl push cmp cwtl jno cltd sub and sbb cmc into movsl repnz jns jle xchg andl addl iret jns andb sbb jmp jmp xorb addb sbb mov andl pop xchg gs mov andb and push lock andb adc addb mov sbbl out push pop ficomps mov (bad) xchg inc lods cs (bad) stc jo inc mov mov addb pop add push inc addl movsb subb (bad) in push cmpsl stos pop mov dec scas mov addl xor enter addb (bad) xchg mov xchg add in add andl jmp addl int3 xchg les addb ret negb addl aas dec mov lret aas sarl (bad) in push inc addb addl mov andl xchg adc mov fiadds insb add addb mov stos xlat addl push shll push cltd fs addl jp mov addb addl sub push addl les mov repz aam fiadds addb in mov andl add xorl addb add scas int xlat jno movsb gs xorb mov push add addb push fwait push xchg cs inc enter mov addb jmp xchg mov push sub mulb addl mov rcl roll addl arpl mov add addl push xorb dec pop addl addb push insl outsb mov inc xchg test andb add jnp aas sbbl addb add xor lea cltd (bad) adcl addl pop mov mov fs leave jge fisttpll and add add sahf lahf and andb fidivs or inc pop mov addb add rorb rorb addb add sub xor jg and addl sbb addb mov ret adc addb addl sti or (bad) loop cmpsb xchg sbb dec test jecxz mov and jp cmp mov inc addb andl inc lock mov addb push mov in jge adc out mov mov add push jb fisttps es test roll addl orb add addl lcall and orb add addb mov enter cmpsb popf fs mov addl push test sahf mov andb (bad) fsubp loopne test andb fisubs jp insb sub test andb and ret jg nop sbb xorl mov mov inc andb andl adc adcb daa and addb shll push ret (bad) icebp pop orl add cmpb cmpsl (bad) popf movsb int3 aad mov addl pop imul add movsl dec mov mov and mov xchg (bad) mov mov cld outsl adc sub mov icebp andb add inc fldl std ror sbbb xchg andl xorb sbb andb mov jp leave or in (bad) lods mov lods cmp andl add andl jg jmp xchg sub inc xor add addb (bad) jl andb lock add andl sub nop mov xchg cwtl cmpsl inc andl addl push mov mov andb inc test mov cld orl adc jo addb aam xchg jecxz pop andl addb xorl sbb dec jb and (bad) icebp jecxz movsl xorb mov int out dec enter xchg stos or addb (bad) lds or xlat rcr andl cmp fs jge ss test mov addb insb mov mov addb add adc pop mov pop out addb add gs shrl xchg aas addl addb add fisubs xchg andb mov cmpsb xor addb add test xchg in stos addb orl add (bad) sti mov and (bad) movsl lahf addl (bad) in add loope jecxz data16 and add pop incb lock andb fsubl sub insb sub pop add addb add fwait add ljmp fldl add sbbl mov mov or popf mov and andl sbb push add mov fisubs add addl sti repz mov addl ss icebp repnz addb andl outsl cs or and andl cmp mov add rcll aam addl or (bad) xlat or andb andl and addb nop inc clc andl addl ljmp addb add mov addb js adc addl lahf stos xchg mov mov andl scas out sub push out ljmp movsl orl add xchg mov movsb subw inc insb lahf and addb xchg cwtl roll addl add adc addb dec orb mov mov sarl push inc push push xchg add andl mov mull insb addl addl stc and addl xchg push cli pop adc cmpb cmpl xorl mov or cltd mov andl inc sbb sti dec lret cltd andl loopne stc sbb fldcw adc andl cmpsl dec xchg adc mov andl ficompl lret mov andl addl mov mov andb fadds addl or or call addb insl lods cwtl testb testl stos add fcompp jno ljmp andl add dec sbb addl fnsave mov xorl xchg pushf popf test mov and cltd sub mov addl dec sbb cltd sub addb rclb inc adc ds and addb add test pop or movsb addl addb sbb int leave push in andb mov push mov adc mov add (bad) lock addb addl mov add lret nop inc (bad) and test fs jb mov andl ret xchg or je add pop cmc jge ret andl mov mov cltd pop push and mov addb add add or add or mov data16 insb cmpsb bound addl add andl dec dec mov andl addb adc rcrl addl inc sbbl stc xchg cltd scas inc loopne sqrtps sahf sub mov out sbb mov jae jmp sbb or out addb andl sbb mov andl (bad) xchg enter adc int3 mov addb cwtl jecxz sahf out pop push xorb add cmp andb andl icebp cmpl addb andl mov cmpl andb sbb lahf cmp les inc jae loopne out repnz andb sbb rcrb orl addl dec inc sub clc cmc out jmp xor lock and shrb addl mov clc test and add popf rclb scas (bad) roll andl aad andb addl clc cltd jge push aam ret mov cmp mov addl mov mov xchg lock or sti mov add andl sti jg pop andb add mov daa or int3 andl in out cmp jecxz nop idivl dec mov mov leave sub sub cld or flds andl and enter inc push xlat scas test addl pop adc add addb pop out int outsl sub addl dec cmp pushl mov fldl mov imul addb roll xlat and inc jp roll addl lea cmp mov addl lods mov stos xor push andl mov inc xor ret mov xorl xchg iret mov andl or push mov mov andb sub cmp scas ss scas imulb add addl adcb addb push test add daa andl push call int3 movsb les mov in or andl xchg lds and addb and ja cs gs andb mov scas xor addb add pop ja int test mov xchg cmp mov addl shl cmpsl popa fildl mov and add sub int3 ja or jmp and andl jle mov addb add mov and mov add repz xorl add bound xchg xor addl mov mov cmpsb push adc imul scas cmc inc xchg out push mov adc outsl ud0 adc sahf out xchg repz (bad) sub cmp cmpsb push into fildll or adc (bad) (bad) iret xchg test mov add and mov add xlat iret xchg test into push cmpsl inc outsl fistl cltd sub and lea sub add mov cmpsb sbb leave sahf (bad) cmp mov cmc cltd dec add icebp push daa test adc sub pop imul das dec notl jns adc dec aad mov xchg mov sub sbb xchg mov mov mov pop rclb add lea call setnp mov in mov loopne movsb mov jge clc into subl test cld xchg cltd fwait addb hlt test test test jecxz js jp stos popa es push mov adcl xchg lcall data16 in pusha subl out (bad) (bad) stc push in add into inc ja sbb stos andl outsb out jecxz pop mov mov xor inc xchg xor pop sub xchg or mov cmp inc adc lods popl xchg xorl in sub into int3 sub test (bad) push rol cmc nop icebp idiv mov shll hlt rorl hlt sbb cwtl cmpsl pop repz pop add push xchg loop fisubrs or inc push call mov xlat xor xchg imul mov xchg adc aam push out push xchg add fsubrl in push dec fimuls jecxz xchg leave cmp jns js push xchg push or adc lahf aam pop pop das and subb xor mov les jmp add add fucomp imull inc push jb cltd jp rcrb imul pop or popf xchg mov es push pop test inc cmpsl cwtl add shr inc lret cmp adcl gs sbbb mov mov aas pop (bad) aad xchg xchg and cmp ss mov neg sub or mull xchg inc icebp orb lods mov push push adc cmp lea push or xor aam jns test jle cli jns subb mov cmpsb add scas sbb pop in mov or das sti mov mov xor dec sbb out adc subb cwtl sbb pushf outsb sbb jecxz div lahf xchg dec pop inc aam shrl dec mov xchg lods mov or lret clc jno mov fimuls jp mov and fistpll push adc mov mov mov push jnp clc dec xchg sub icebp test mov inc inc insb xchg mov int or inc rcll js adcl test lcall les testl mov sbb repz loop mov jl xchg cmp mov dec xorl jle xor jl add pop mov or dec fimuls push scas cmc iret int orl pop mov mov mov or dec lcall adc mov jno notb dec nop call cld pusha faddl nop lds rol or xlat inc mov sbb cltd cmp dec es addr16 and dec inc arpl xor icebp shlb leave or push xchg clc add sar mov jmp outsl cmpsl mov mov jmp mov or push int add inc popa jae mov mov mov cwtl xchg inc test jl stos mov inc dec add jle pop add jge push test (bad) mov inc shll lahf mov bound push mov mov add rep in mov (bad) push (bad) lahf (bad) push push call xchg mov addl add addb pop or jbe pop pop jp pop lods jae mov pop sti mov xchg enter repz sahf fs (bad) fdivp sub outsl xor stos hlt jb adc loop xor jae (bad) rorl (bad) fimuls sbb outsl stos fucomi mov adc push enter jge ret fstpt std fxch popf insb loop mov stos lods mov aam icebp fists pop stc jge or inc icebp adcl lods pop xor cmp sbb sbb sub movsl mov gs pushl pop pop pop insb or insl or imul aad cmpsl rorl xor inc or sub xchg fmull gs popf cmpl cwtl add pop mov pop fnstsw fldl push clc cmp mov insl std xorl leave push dec mov inc lahf (bad) popa scas lea shll outsl incl sti or outsl mov orl ss notb mov addl outsl in mov test jo jg jno sub pop cld pop scas xor pop mov inc stc in loop fdivp subb (bad) pop and jg sarb fldenv insl imulb cs adc enter dec push ret mov (bad) dec dec popf mov rcrb test adc out lret mov xchg aad rclb sbb pop fiadds sbb mov xchg scas pushf jp test jo cld lea pop lods sub and mov fidivrs cs xchg fiaddl call pop das stos mov ret dec xor subl mov xchg and jo push test icebp test add insb sbb mov rol jb dec ret ljmp enter or jp (bad) mov xchg xor cmc (bad) enter push (bad) adc fcompl ja shr mov scas out int adc inc fnstenv stc xor cmp xchg xor outsl rorb (bad) sub call popf push out test or mov aas dec mov fucom rsm dec int3 mov fsubrs xor cs das in loop (bad) popl xchg fucomp repz arpl (bad) fcom popf xchg jle iret fwait mov lcall cmpsl inc loope mov jecxz push or and lahf andb cmp dec dec loope in jbe cmpsl int3 xchg (bad) loope inc inc and dec movsb scas sbb cltd adc push push push jmp adcb ret pop movsl cld xchg daa xchg enter test daa sub mov xorl dec adc and dec jnp xchg add jb orb push jno and sub nop aad cmp pushf push xor fisttpll pop or jnp pop fdivr mov fidivl adc imul jno inc sti aad mov lret shl cmp or lahf xchg mov xchg movsl scas pop js inc aad dec or xchg mov mov sbb add outsl loopne jle jge loopne xor (bad) sahf test jmp fisubl imull xchg test andl lock sub or sbb ss rcll testl test bswap inc outsb stos neg pop jnp mov cmp mov ljmp ss jo aaa adc mov stc rolb or bound and ss in ja loop loop aad stc sbb out push add adc mov pusha mov enter into push ja adc dec mov pop jl stos mov inc lods pop xor and fs popf inc mov mov stos fnstsw fmulp outsb xchg insb cmpsb movd das pop mov fldcw mov test andb leave mov shrl push jo pop adc add jb outsl (bad) xchg iret shld orb popa adc repnz sub xor sbb fsubl andb jmp and rclb aam mov (bad) insb or cs add push xor and enter and and in addb fistps mov xor xchg in fs jle sub mov stos jp xchg mov js mov mov sub jb push mov sbb sbbb mov jo (bad) jmp xor test mov sbb shlb or mov sti je sbb aaa inc sbb push push loop daa push fldenv mov fs fists jmp dec cmpb cs mov daa adcb jmp (bad) xorb mov dec push adcb daa jg repnz sub mov cmp int3 xchg bound lods or fwait out (bad) in xchg outsl xchg jge dec sbb xor in scas pop movb aas loop dec adc adc xchg jns iret shl push cmpsl fs lock dec mov dec daa subl fisubl xor (bad) mov in inc or movsb jbe jo loope sbb dec dec jae or fsubrs adc in lds adc stos faddp or mov pushf mov dec mov dec fldcw fsubrp inc inc cwtl frstors xor mov push std sub jae push jo push popa imul xor cmc ret cltd ja loope repz (bad) dec cmpb test mov addl fdiv jmp add popf movsb jecxz stos test ljmp cmp add addb pop sub pop fisttpl lods or jnp fimuls mov push enter jecxz jae das mov sub mov lcall popf cmp pop or mov inc sbb cld in or inc into shll jnp sbb clc out lods or or jae int3 inc sbbl sub add subl lods mov jmp les ss mov sbb dec lahf cmp push and in imul pop fildl mov pop mov hlt inc and push sti mov js in mov or xor cld xor push (bad) out xchg pop mov (bad) daa ret ret cmp jp or ret push push adc shlb addr16 addl test mov das cmpl (bad) jmp dec test jecxz int3 push (bad) enter test out in xchg pop dec xchg test mov lret cmp lock dec mov and fldl sti into and pop and mov aam fnstenv inc fldl xchg imul dec cmp pop mov xor mov or mov das orl xchg push pop cwtl ss mov insb add jbe pop xchg iret or inc fidivrs iret inc testb shll addb mov adc je xchg mov bound or ret push sbb fistl in or (bad) aad leave incl or add push jo dec dec fisttpl lahf mov push jb xchg andb mov les sub push adcl mov loope or push dec pop lahf xor (bad) pop mov movsl fsubrp adc pusha adc cwtl inc mov inc jge mov mov lret test mov inc add mov rorb mov jg stos sbb add inc mov pop xor or ret sub dec push pop in sub shl lea imul cmp add subl or xchg jbe jne,pt mov mov fstl test aam xchg dec leave lods in repnz test xor adc xor mov fstpt mov js aad in es add and loope dec sub shlb xchg (bad) mov xchg in inc mov fstpt cwtl mov stos fsubs repz aaa add xor jb mov rorb or xchg out xchg rclb pop jae sub or loopne cmp mov and push jle mov xchg out incl inc test icebp adc shll sbb cld xchg into movl sbbb mov xchg test int jno inc or lahf movsl fbld pop cmp sar loop jp or fnstsw popa pop ljmp aaa (bad) call into cmp test stos inc xchg xor fs inc xor jg in xchg jmp or jg jnp inc mov lahf or faddl push mov cwtl ret lcall (bad) mov sahf mov sbbb mov cmp loop (bad) int addb add (bad) dec ja mov shl mov mov mov inc jne addl sub daa adc xchg mov (bad) pop jbe or push into cwtl mov mov mov push insb or xor rclb dec xchg stos testl or test or enter xchg clc iret ss int3 lret mov xor aas cmp adc pop jge dec clc cmp xchg out cs andb dec push es push mov lods nop xchg adc test (bad) mov push movsb cmp orb mov push adc (bad) push lods cmpsb data16 or (bad) xchg sub dec xor shll xchg rorb adcb sub test mov fsubrl fstps dec lcall jge mov jmp leave sarl sub mov lds sarl outsl xchg negb add mov test mov pop mov std ficoms sub rclb xchg lea sti xchg shr and jbe xchg and lret cmpb out push fisubl fs out mov pusha hlt inc lahf out subb mov xchg (bad) in fmuls movsl (bad) adc into aas mov mov inc fcmovb int subb cmpsb adc sahf movsb stos push (bad) fisubrs mov mov and les dec out xorl lea or mov std xchg pop test (bad) outsl nop lock push fwait jns jl mov mov cmpsb sti out mov mov xchg shrl ret decl dec cs repz int3 or (bad) popf xor mov stc cmp sub sub add mov mov aad jge cmpl cli fs lret cs je push jno cli mov add xchg movsl fisttpl cmpsl repz inc insb sarl clc rorb push fwait cld sbb mov roll sbb fstpl mov add insb cmp cs test ret outsb in orb jg fcompl cmp mov mov inc inc or (bad) clc push or adc mov inc cmpb into in jne mov (bad) push mov xchg xchg stos dec pop mov pop mov insl loop pop cmpb test test popf fimuls xchg lahf xchg clc stc fld lret insl xchg aaa fs lods mov inc cltd adc aad sahf push jecxz mov shrl xchg fidivrs add pop insl stos cmp mov xchg push addr16 xchg pop mov inc les test dec pop mov lea fmul jmp aas or cmpsb data16 sbb or push in lods jp hlt test inc (bad) in arpl test imul push nop mov fisttpll enter dec xchg xchg lds xchg sub or into stos repnz lods ror cwtl adc les or jae stos xchg dec into std mov fs sbb (bad) imul cmp xchg and pop xchg lcall xor sti orb mov xchg xchg outsl fs pop jmp dec test mov inc ret or (bad) jbe mov daa loopne mov add fcoms movsb (bad) cli addr16 loopne leave xchg cmpsb adc movsb fidivs lahf add mov js push fdivl imul mov mov cmpsb rcr lods fwait dec pusha rolb push test cmp adc int3 clc out mov cmp addr16 scas fstpt cmp adc pushf pop mov mov mov inc pop inc jg lcall movsl or int3 jnp sub js daa dec leave jge les add inc cld sahf in xchg jle out add shrb dec mov pusha cmpsb pop stos xchg xchg xor test lods (bad) cmp stos scas test je aad mov ret sub jae in xchg cmp or sbb or fbld dec cmp test or aad stos or sub loope mov adc fwait or inc jecxz les mov jnp iret dec jecxz push lods mov les fcmovnbe cltd xor test mov loop add in mov lret lret xchg jns pop pop push mov xchg adc xchg jne out jl xlat leave (bad) (bad) xchg daa sbb nop add (bad) jae jl jl sbb sti sub test leave xor mov test fimull test out mov ficomps fidivrs adcl ja and test cmp test (bad) xchg fidivrs push lfs cmpsb fistps aaa scas xlat jecxz and ffreep mov adcl cmc roll lods xor lcall popf cltd int sub mov mov loope dec call cli pop adc inc xor jae or (bad) es fst fdivs rcr lcall out pop dec pop mov (bad) adc mov into and fsubs push add jb cmc addb aad or and jp push mov int (bad) push sahf cmp out lahf add mov push shll xor jle ljmp cli je lcall or imul cmpl sahf cmpb push mov mov push xor push and (bad) add test mov orl xor push stc ljmp pop mov sbbb mov popa mov sti stc and dec jno push aaa nop outsl and cltd mov mov cmp cmc cwtl cmpsb jmp jmp in test enter cmpsl or mov iret xchg sarl lds mov leave std pusha aas test cmp fs ja push lret popa xor (bad) pop push imull les xlat jbe push (bad) cmp jl repz push arpl and (bad) xchg sbb mov jbe mov or jge insb ss outsb mov int3 and mov test cmp mov pop aam jns dec enter add into popf xorl andl inc sub xchg push xor imul mov mov xchg nop out sub cs jp jecxz add orb scas sbb cmp in in mov pop mov into dec bound orb test add das sub test enter add sbb (bad) popf mov mov into xchg xchg aas push je vpcmpeqd rcr jp bound pusha jmp ja push or mov and pop gs xlat out inc adc or jecxz mov mov mov (bad) mov test in mov cmp adc dec xlat cmpsb xchg mov sbbb js icebp hlt cmp lds mov sbb mov mov or bnd mov fdivrl jl movsl ljmp mov pop call add add mov aad pop push or push jno push stos mov dec dec xor dec mov xchg cltd dec das in mov outsl mov cmp ds mov shlb and sarb push jmp lahf inc sbb test inc out and mov (bad) add (bad) push mov mov stc add xor rcrb hlt into inc mov out shrb repz in out inc (bad) cmc add mov imul outsl mov add push sbb xchg movsl pop mov adc xor or dec pop out test mov out mov or leave mov lahf xchg pop popa ret dec cwtl xchg lods (bad) or imul in mov cmc xchg push mov adc leave fucomip mov bound inc dec xchg sahf mov subb jg lret mov cmc stos push sti push adc inc cwtl jb outsl push push dec mov lods lret dec loope aam ljmp and cs add mov cmpb out inc dec pop shl add add leave sbb in or xor cwtl stos adc ret pop add xor stos cli dec jae leave xchg imul mov subl daa clc int3 sbb adc jns icebp in loopne shlb ret push cmpb pop loopne shll int fdivrs mov mov inc xor gs pop inc mov out mov test outsb jl xchg cwtl adcb testl in jle xchg xchg gs sbb test mov test push adc xor mov int cmp inc subb xlat je xchg or jbe or scas and pop push inc arpl shll into mov les cmc js cltd xchg mov or cmc popf mov js dec mov cmp movb int push pop jb fisubrl int3 mov mov mov popa mov xchg mov ret stc mov jne gs xor orb inc xlat in fwait inc jmp xchg mov push loop mov pop lock imul pop mov stos fs orl fsubl mov lds xchg mov ljmp adc loop lods cmp xchg mov sbb cmpsl mov les or cmpb cmp lods pop in leave and stc mov mov lahf test movsl dec and (bad) lret sbb mov inc push cmp stos mov xor mov (bad) adc xor btc fdivrs ret int3 cmp lahf les insl ja sub xchg mov mov add xchg lods cmc inc or fwait mov adc add sub movl hlt lds or fistl xchg rclb clc cltd lods popf aad loopne mov or ss cmp lods cmp and sub add fistl idiv in sub clc cltd les inc jecxz testb gs aas push mov cmp xchg lea out pop insb sub imul mov scas xchg or andb cmp repz rep jl add mov lds sbb orl imul or cmc push jg in cmc mov mov adc lret faddl adcl mov xchg ss inc fs cmc fwait add orl or mov cwtl rolb insb sbbl andl xor and fmull ja (bad) icebp pop enter adcl or mov lea cmp ficomps mov jnp jbe in dec mov test add loopne out insl pop (bad) sbb pop addl dec enter push push arpl aam cmpsb orb push call fucomip test inc ffree jns ss in fldcw xlat mov movsb fisttps or lods cmpsb sbb sti pop rcl or adc loopne sub adc clc sub or add pop inc sbb mov fisubrs sub cmp sbb int xchg pop fists mov mov icebp lock cmp cmp adc int inc jmp cmp mov ret push xchg fsubl (bad) outsb scas adc lcall inc (bad) cld in pop mov cmp out mov imul xchg xchg inc add and (bad) jb jno add pop mov aad imul ret pusha popf adc movsb xor (bad) test cwtl neg cwtl inc test cmc inc pop nop jno mov rolb sub and inc xlat mov or addb movsl jmp ds pusha (bad) and jno cmpsb stos data16 mov push cld adcl adc bsr mov inc fadds push in mov xor sbb outsl mov test and jns add shl shl rcl adc jmp lahf sbb scas push xchg int3 cmc test stos push sub inc les test test fsubrs mov into imul sbbb jae push cld mov imul push or jnp rclb sahf scas movsb mov push ret jg and test test mov dec mov or sbb inc xor add lock add xorb sbbb rol mov call jge loopne adc pop ljmp lret jno test lcall das andl xchg lock pop iret xchg xchg mov dec push loop jns or shrb mov enter pop mov cmp out xor mov ret subl je inc nop shlb shlb out sbb andb dec fwait lahf das leave xorb subb jl jmp clc push enter lods sbbl jnp add loope inc scas es ljmp push roll xor xchg hlt push pop int xchg imul push push shrb cmp shrb xchg and lods aam outsl stc dec imul movsl enter (bad) popf jno dec test into ret int3 movsb cmp or orl xchg out and les xor or xchg pop inc pop in shll and (bad) sbbl (bad) or or push dec test jecxz sub cmpsb rorb enter or xor adc cwtl pop and ret test rcll lcall scas incl subl std sbb iret addl insb xlat cltd pop xchg pop mov jo mov je fimuls hlt jmp xor mov xchg adc (bad) mov add pop cmp mov adcl cltd rorb inc in rclb jmp adc insl mov outsl push mov frstor movsb divl mov jle les orl and cmpsl test icebp aas dec or fwait or jecxz in mov shll sti mov push icebp adc bswap adc js int3 movsl and xor jg inc rorb sub nop testb xor lds adc stos je addb mov mov in cmp adc jle scas rcrb out pop push or sahf push fwait push daa scas fstl add xor stc and shlb cmp lds add xor cltd dec aas mov cmc mov and rorl inc bound xchg lea scas shrb std jno adc (bad) xchg enter int cmpl dec push lock test loop sub or dec stos adc lods sarb mov xchg mov and add sbb xorl mov fmul mov dec lea add pop or popa dec test scas and leave (bad) aad loope xchg test and mov insb cltd push scas int test adc loope xchg test insl bound jo int in inc mov xor mov mov popf cmp pop call or stc stc cmp mov add or (bad) ret test stos xchg inc inc std xchg pop orl mov pop popl sbb mov iret pushf push outsb stc lods movsb and daa xlat stc movsl test xor iret addl inc fidivrs jle imul xchg insb xchg xor pushf rcrb movsb mov in mov xor dec xchg push adc adcl rcr push or mov mov adc in inc mov ja lea popa andl ret rcrb fisttpll scas adc jmp jmp sbb add pop loope nop fisubrs mov mov stos fisubl out cltd or mov lea insb jmp or or cmc imul inc mov rcrb sub xor mov jg add enter inc shr mov iret sbb xor test (bad) jne jmp int3 mov mov or jp out or push sar pop clc movsl cmc jecxz lds or mov int3 (bad) mov jo icebp call mov stc pop int add mov lods adc dec (bad) pop push fwait ljmp add rclb or and adc xlat pop sbbb imul sbbl push bswap ret pop bound fisttpl movsb adc pushf mov test add dec out cmp scas popa lea shr add insb xchg xchg shrb outsl xchg lods rorl es ljmp mov push jae test xchg test (bad) and inc mov and sub pop mov adc leave fsubl jb push or stc sahf in les pop out mov push jg test cmp (bad) mov jl incl sbb add mov jecxz fs std mov lcall cmp inc fnsave lds sub std cmp out jae mov jge sbbb int aam rcrb push mov jge adc xchg push adc jmp mov mov (bad) pop jnp fistpl enter shlb mov mov fcomps lds icebp fistl pop adc sahf cmp fsts arpl add out jb aas cmp cli and xchg into rorl lds adc xlat jmp fldl xchg jp rcrl dec daa fldcw or aam shll xchg lcall or fiadds adc lods push push divb or fcomp mov fwait outsl push out jbe fiadds outsb pop nop mov dec in stos fidivs pop and pop sub scas cmc incl xchg int test mov mov pop es clc inc iret pop aam icebp xorb cmp push cltd dec add inc stos mov mov inc xchg call repz or insb stc stos cld inc xor sbb mov dec mov shl mov mov sarl mov add ljmp xchg sub xchg mov negl push repz (bad) pop dec aaa popf inc jle shl test pop enter jnp lods in mov out mov xchg mov jns add sti cwtl or jle insl das mov daa popf jg xlat xchg lods mov mov push push xor sub push jmp outsb dec add lock adc pop and adc adc out (bad) mov jb jmp push js gs or and push and fdiv in push sbb aam dec pop sarb or insl daa or jbe es mov mov mov mov push sahf xchg lods sbb sbb in xchg mov movsl rcrl jno and pushl repnz cwtl fcomps aas cs pop pop jbe shll (bad) push sarb shl outsl cwtl mov test lret xorl sub mov or stc loope inc pop scas xchg imul outsb jmp int les add mov cmc mov mov adc push test lods push mov lds jnp xor mov inc jl cmpsb stos mov pushf add inc mov inc push lcall jmp cmpsb or das xchg or lahf test (bad) movsb jae lea outsl lods lds lock xchg xchg lds jnp or xor fldl2e mov dec sub pusha stos rcrl mov xchg mov fldt stos loope in sahf ljmp pusha xchg and test inc cmp nop in mov stos mov repnz fistpll mov imul xorl aaa (bad) (bad) sbb nop and (bad) sbb xchg jmp test sti push xor orb add fstl mov sub lods rcr inc cwtl stos mov outsl inc popf cld mov adc mov andb scas or mov pop push jae in shl dec mov fwait jnp outsl pop sbb or rcrl sbb into cmp push adc movsl adcl xor sbb push stc sub aas xchg idivl sub xchg inc add fmull fisubrs cwtl ds xor movsl repz shl (bad) push push (bad) pop xlat xlat ds jb and inc loope mov xor hlt and jl in fwait iret ja jmp adcb xchg loop fidivs push mov pop inc arpl jbe xchg subb out dec sbb jae stos nop fwait mul fsubl dec sti test sti (bad) popf mov or roll call mov or dec and stos jnp adc cmpl lods mov dec pop addl imul xor add rcr lock push push stc push into or add mov cli notb lret cld icebp arpl test jp adc inc pusha adc imul inc in movsl mov mov xchg test mov pop xlat dec insl adcw pop adc xor sub int3 imull imul js pop int cmpl add dec mov shrl lods pop cmpl cmc mov pusha jle in clc loop xor out xor hlt mov mov xchg jo out mov or jl push cmpb cmpsb mov adc add mov out xchg adc pop or mov sbb inc loope or cmp push cmc lods dec ss stos mov out dec cmp push mov call push add hlt or jmp cmc popa cwtl pushf mov xchg lcall shrb fcompp leave inc mov xchg pop push pop aaa add sub jns fistl into les push (bad) cwtl inc inc push push mov lret mov test sbb add mov lret loop adc into adc outsb jno subb jns into hlt xchg add les cmp mov les sar xor xor repnz sbbl mov inc test lea les fucomp fcomps jo loopne in shlb call pushf addb movsb cwtl out mov sub mov or mov mov and xchg shlb sbb test orl or filds addr16 xchg incl sahf jmp xchg outsb push lret mov pop mov movb insl cmpsb rol inc test jle fs push mov inc rol sbb jo add insl or fidivs cld notb in xor fists repz inc mov orb out in mov cld fnstcw mov adc dec jns fidivrl jmp pop (bad) lahf or or mov mov push jecxz andl test mov sub ds popf xchg mov pop fiadds test xor mov pop loopne add jecxz rcl adc xchg iret push scas aad mov xor xchg lret mov mov sahf inc iret inc pop push inc sbb cmp jmp lret out xor add push xor mov or mov mov test xor push mov stc lods sub and add pop iret cmc cmpsl and xlat repz mov test popf mov je jnp sub xor mov in (bad) pop cltd xchg mov and jnp cmc pop sub xor xchg cmp cmpsb testl fidivl mov mov mov mov cwtl sar sbb (bad) sbb arpl insb sbbb cmp pop cmpsb (bad) or sar mov clc adc mov xchg int3 cmp nop fwait cmpsl dec test (bad) out sbb addb sbbb and and add and push push in dec inc addb xchg inc jg (bad) cwtl enter or fildl les loope xor mov mov rcl pop push sbb enter call inc add xor xchg rcll mov cmp or frstor mov and into dec les adc jno jle mov hlt or rcll fcoml sub sbb jg mov addl adc outsl subl adc ret gs int sbbl or mov mov lods pop addb in shlb sbb movsl sahf outsb mov iret sbb xchg lea dec mov push jmp leave (bad) fldl test in shlb jp mov xchg ss mov push andb mov add lahf loope sbb notl xchg lahf push cld test pop int scas mov cmpb jno hlt dec clc add rcr mov mov or orl rcrb lret addl test jb in subl pop fsubl in sbb or repz lds xlat mov pop dec nop data16 int3 mov shlb lahf jnp lea nop test dec mov sar and rorl sub daa xor scas les mov or jg fistpl jne adc dec repz scas movb into int3 stos rcrb testb adc icebp or ficomps xchg xchg sub inc dec fs dec scas mov push ss or push and in sub push xor into cmp sub aas inc out sub ljmp pop and push nop rorb push pop sub sub std (bad) iret test stos sbb mov sub fists jmp jp movsl test mov rolb push sub push fistps pop xlat mov xor mov cwtl shrb ljmp mov pop ficoms add psrld adc out xchg ficoms lcall mov jne (bad) loopne (bad) ljmp (bad) out dec add in add add rcr fwait jmp in inc (bad) push pop pop lea sub shl (bad) cld mov pop (bad) jg cmpb icebp sub sub test xchg (bad) push sbb xchg mov sub push pushf popl mov pop mov std stos lahf jnp lock arpl push push jle xchg jb int3 jg out push sbb lahf addb dec addl in pop repnz outsb frstor lock divl mov filds addb (bad) int3 xchg adc xchg mov enter mov stc imul in push or mov mov jns fdivrl cmpsl sbb or adc ret in cltd std fdivrl push in scas jmp cmp dec ret subb mov jb mov xchg test les push push sbb fcmovne icebp pop (bad) jne dec loop lds (bad) icebp xchg andb lods xchg frstor mov mov push inc dec cwtl add lahf (bad) mov test dec lret insl test rcrl (bad) or test addb dec int fsubrs mov or iret hlt in addr16 add std mov xor cld lods test jg cmpl lods mov lea add lret sub push pop push aad movsb xor dec jnp test fiadds mov clc xchg fnstcw mov cmpsb push xchg clc dec outsb sarb test aas fsubrl lret mov iret pop out jo in jle subl push or arpl stos or mov or mov xlat push sub add sub jmp (bad) cli inc mov sahf aad add jo stc addl pop data16 xchg pop mov test xor mov data16 cmpsb loopne inc std mov cwtl (bad) lret stc out push in roll gs adcb or mov pop pop sti add lock shrb add nop subl dec sub int3 push jo xor xchg fcomps dec cmpsb test pusha mov (bad) test scas test push enter (bad) shll faddl lea outsl outsl xor xor xchg mov mov cmpsl add push add and (bad) push ss out add (bad) mov lahf xchg popf out stc sti dec xor sbb mov lods jg mov frstor mov daa lods jae imul clc mov or push leave popa mov stc push in ret movsl shrl adc push cwtl fs imul jle addb jecxz jl fstpl xchg cs cltd in mov sub mov faddl stc sbb jo stos cmc test (bad) cs out sub nop out in xchg cltd inc mov stos cmpsl and xchg xor or xchg mov and movsl xchg or add (bad) push jmp inc ret or jnp das fsubl lahf addr16 movsb orb xchg addl mov add (bad) in inc cli inc pop xchg inc xor arpl add les icebp add std hlt in mov loopne nop or push lds mov (bad) or mov leave and xchg jp xor insb mov jns imul stos fiadds inc out outsb int hlt mov lcall stos ret int test popa jle testl xchg mov xor gs scas addb in sbbl cmpsl xchg loope repz add andb sbb xchg mov xor addl jl xor test faddl fcoml jns idivl pop lret mov xor ja xchg nop mov out loop jle out imulb xchg pcmpeqw movsl xchg outsb fsubs xchg inc jmp rcll test rorl (bad) notb add xchg mov int les pushf lret xchg addb xchg and test jl xchg and jle push rcll stos mov dec xchg adc (bad) pop mov pop roll and or mov cmp mov jle mov pop jge mov pushf hlt cmpsb cmpsl and in jle or xchg rorl (bad) lfs ret xor lea xor es xchg jmp subl add sub cmp cli xchg mov (bad) jnp (bad) pusha xor arpl fadd mov roll aas pop ficomps jae orb fldt mov in fcompl sbb iret jae add test cmp xor shl fcoml fidivl push jmp cmp movb add xor flds orl bound fcompl dec js fmulp jmp stos sbbl xchg test lahf fstps loopne xchg popl jle inc xchg loop bound sbb xor ljmp add lcall fidivrs sbb fcmovnb cmp push mov xchg scas adcl test mov int cmp sbb fisubs scas lock pop adc test add int3 loop inc cld test lcall mov xor iret mov xchg fistps cltd mov xor and lcall xlat loope mov enter ss mov jp sbb mov fdivrp xlat cltd sub xchg in dec mov mov nop jbe add int jle cmp int xchg xchg cmp (bad) sbb cmp xlat and movsl fldl pop daa xor jmp xor addl mov cmp lds mov mov subb dec xor out xchg outsl inc test mov mov in or mov xlat and push xchg fsts and (bad) and dec mov (bad) outsl cmp xchg xchg icebp and (bad) fldt jmp out sbb add mov in lcall add jbe push (bad) cmc and jnp (bad) pop popl int3 aad lods and fcmovu push dec adc (bad) inc cltd data16 sub pop inc addb fdiv (bad) dec mov les cmp dec bound sahf divb mov push jmp or adcb rorb cmc fcoml mov xchg sbb roll lcall aas push sbb or push mov cmp cld or call int3 sbb pop andb aad icebp rcr xchg adc ret in pop rcll rolb addl lock std (bad) mov push orb and and daa mov dec inc movsl lods mov fcoml mov leave inc xor jge aad les or add fbld cmpl stos sub aam enter xor mov pushf shrl hlt popf bound pop mov xor iret cwtl dec movsl push fmull jno xlat in xor stos xorb cmp sub orl out sbb test jae dec mov xchg out xchg mov sub in jno das push inc or and and push dec mov cwtl (bad) es mov push mov pop push daa outsl cmp loop in outsb mov sbb aad pusha sub flds fsubs mov sub cmpsb xchg add fnstsw stc dec test and adc arpl mov or mov cli and out inc pop push pusha int push adc pop popa push mov xor pop cwtl mov or dec and cltd rcl icebp scas cmpsb mov pop in icebp dec cmpb dec movsl icebp xor jne mov xor push fcomps mov push push mov cmp cmp mov push mov sahf adcb and jnp aad mov adcb stos daa inc mov in lea in mov es je cmpsb (bad) insl sti push stos mov push and or add iret andb inc lea lahf stc pop out sti roll sti insb (bad) stos sub shrb gs imul pop jo out or loope nop mov nop leave mov dec iret push inc ror in std loopne dec and xor and out sub cwtl or push decb sub jbe fildl sub mov arpl sahf in push aad int iret pop in fcmovnbe fwait cwtl in (bad) sbb cwtl mov les repz jae cmc mov push xor jbe sti dec ljmp int3 pop jle dec jmp mov roll inc into fistps loopne lds jno movsb fisttpl shr iret adc scas inc fwait imul test in lcall repnz hlt pop fiaddl cmc cmp pop pushl or fsubrp mov sub lcall push dec xor mov in jmp decl sub stos jle loope hlt sbb jle and xchg lds das ret mov es mov jno (bad) mov sbbl mov lea in js mov cltd fwait sbb insl in lret or sahf dec fs xchg cmc mov sti jle dec arpl lods fistl inc repnz or and fs xchg mov stos sub jp pop xchg inc mov (bad) jge adc mov ficoms ret mov out ss xchg fwait xchg and add test aas ficoms inc outsl dec adc das xlat mov bound mov fstpt (bad) or xor adc pop inc inc scas je pop cmp sar push int push lock mov test mov adc lea int fisttpll out ret orl push sti aaa ds inc mov lds cmpsl push pop cmp jle bound movsb test outsb out cmpsb pop cmp or mov mov clc push or pop subb fildl rorb mov push mov fldt xchg aaa insb cmc jne fiaddl scas cld pop push notl sbbl fsts adc dec clc je xchg and or xchg push (bad) (bad) jmp cmp mov mov lahf pop jle fildl mov int lret mov xorl pop nop mov push std in sub scas adc dec cli scas int jbe lods insl sbb inc nop imul fcmove or fsts rol xor or ret cltd outsb jne fldcw push and and mov (bad) icebp nop sbb loope jb nop mov icebp std popa ljmp ficomps loopne xchg inc pop outsb fs jo aad sub ja out rcrb mov jge mov jns les or outsl punpcklwd call orb dec int3 jnp jns adc cmpsl mov (bad) ja lahf or cmc subl mov add adc rcl mov cmp pop fs subb cmc movsb sbbb bsr pushf cmpsb aad jge push call aam sbb (bad) ss pop lret or mov inc call cld cld sub movsl adc nop hlt and xchg scas movsb loopne push xor int xchg xor xor rcr les subl push mov inc subl ret (bad) movsb sub enter sub sarl out xchg xchg inc cmpsl mov movsb repnz pop lcall inc sub out jno sbb add ror addl test out scas sbb pop loopne in cmp or jl jb out shlb xchg shl mov xchg (bad) cmp mov adc fcomp fdiv sub dec sahf mov sub pop xchg dec out in gs mov adcl mov fiaddl xchg std sbbb dec (bad) jnp std sbb adc in nop xor shrl imul inc adc in sahf fwait les mov imul mov mov add sub pushf sbb subb (bad) xor push faddp or push pop pop mov (bad) in push clc xchg out adc xchg dec int3 loop push push pushf jmp addr16 mov xchg (bad) leave lods xlat jge movaps cwtl mov scas or in jmp lods mov cmp fdivs outsl clc xchg mov js push in mov dec je sub mov out test pushf cwtl stos or mov lock test or lds stc es mov inc (bad) xchg je jle xchg inc inc les sbb mov or insl arpl popf sub popa adc mov add adc test mull mov in add mov push jne jecxz inc jne mov add or add xor add inc add or or add jnp add lea add mov add or add or add or add or add or add or add or add pop add or add test add mov add or add or add or add or add or add xor add inc add or add jb add test add pushf add or add or add or add or add or add or add or add imul add mov add fwait add or add or add or add or add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl ja cmpl je cmpl je cmpl je cmpl je jmp cmpl je cmpl je jmp push call jmp push push push mov push call movl jmp mov add mov cmpl jge push mov push mov push mov push call jmp jmp mov and movzwl mov mov shr and movzwl mov mov mov cmpl je cmpl je jmp push push mov push push mov push call jmp jmp mov push mov push mov push mov push call jmp jmp push push push mov push call mov mov call jmp mov mov movb lea push push call lea push mov push call lea mov push push push push push push mov push call mov cmpl je push lea push mov push mov push mov push call xor jmp mov push call push mov push push mov push push push push push push push push push call mov push mov push push mov push push push push push push push push push call mov push mov push push mov push push push push push push push push push call mov push mov push push mov push push push push push push push push push call mov push mov push push mov push push push push push push push push push call mov cmpl jne push push push mov push call xor jmp jmp lea push mov push call jmp mov push mov push mov push mov push call jmp xor mov pop ret int3 int3 int3 int3 push mov push mov inc dec loop pop pop mov mov inc call push call ret or popf shl adc fmuls and lea fmuls lods inc mov push mov cmp cmp mov mov sbb xor js push mov jns pop test mov fwait inc daa fistps pop lahf push test jo cmp ret outsl add scas inc aas (bad) cmp xor stos scas in inc pop push test stos (bad) leave cmp dec dec sbb gs shll or adc sbb push mov add add jbe jnp mov jecxz sbb sbb leave repz or mov scas loop rcrl jne loop imul inc push decl out add jge jno inc roll int3 push cmp xchg int sbb shrb mov mov ljmp sbb dec mov (bad) rcrl jmp hlt jl,pt insb xlat daa sbb in push adc into fcomps xchg int pop dec push or fadd stc jl or out mov lock ja or call pop xor out lahf jge rcl push pop push cwtl fwait out mov mov stos outsb adc mov outsl lahf ds or sarb rorb pusha inc jae (bad) sbb addb popf mov adc ret pushf fucom sbb ja mov lds test sbb jecxz dec pop mov lds lods add pop cmp repnz xchg sbb fnstsw sub push xchg aaa and mov mov fsts xchg decl dec xlat cmpsl gs movsb and sub movsb in lods iret (bad) sar xor mov inc cmc mov imul pop scas inc test loopne shll loopne sahf cwtl inc inc cmc mov push stos sbb hlt jl,pn out sahf das inc mov andb xor movsl mov dec nop push pop mov or mov fisubrl lds xchg or sub mov cmp jmp cwtl xor or dec rcrb dec ret dec shrl mov sub (bad) sar xor cmpl dec pop cmp shl pop fwait push lock sub lods sub sbbl inc xchg xor subl mov inc mov cwtl inc cli dec lret pop mov out push xrelease mov imul mov pushf sbb nop (bad) in (bad) jp sti repz cmp call ds sbb sub rolb xchg dec xchg lods hlt (bad) sub fwait xlat jle stos mov inc push lahf mov inc rorb int sbb inc std jg pop cmp mov push mov xchg testb sbb pop outsl nop cs cmp fisubrl mov or dec sbb mov cmp scas add sahf add fldcw rorb cs mov int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push mov push push push push push push push push push push push call mov cmpl jne xor jmp push mov push call mov push call mov mov pop ret int3 jmp int3 int3 push mov push mov push mov xor mov mov inc mov inc cmp jne test jne jmp xor inc pop pop mov pop ret int3 int3 int3 int3 int3 int3 adcl andl mov push pushf orb scas insl jmp add pushf pop shl mov xor pop test call or jl cmpl push jecxz fnstenv mov lahf lods jecxz pusha xchg nop icebp mov or sahf cmp xchg cmp leave mov adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jge xchg out inc addr16 cmp mov aad jecxz fcomps dec (bad) (bad) sub add mov cmpsl add jae scas xor out test mov shrb mov in lahf mov mov inc sub in flds cli mov and (bad) xchg aaa (bad) mov pop mov popf xor xor inc stos (bad) dec insl mov sub frstor mov addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov es sub pop and and rol loopne mov add inc mov arpl jmp scas sbbb mov sub test pop shlb ror jp in mov pop push or xchg push lds or pop ret (bad) stc stc movsb sbb fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov scas xor fldl pop and pop inc mov add int3 movaps dec (bad) sarb mov or js movsb aam or jge and aam nop push adc mov test fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl in aam sbbl test xchg and mov cld fisubl jno sbb adc mov das aad iret add cmp mov and fstpl fcoms sbb push xor pop test mov xchg roll adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl fiaddl fwait add mov xchg fiadds xorb pop int3 cmpsb pop flds lahf sbb lcall loopne adc pop sbb loope rcr addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov cmp and imul push xchg hlt fnstsw push inc cmp icebp pop mov enter jb push inc push sarl cmpsb mov sbb adcb mov cmpsl scas mov and icebp std mov mov add mov nop jmp xor in cld outsb push shll cmp fcomi jne sbb in mov adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl add pop mov nop or data16 and popa icebp xchg (bad) adc sbb fimuls sbb gs xor cmpsl icebp and lds mov (bad) out add or mov test cmpsl stc testl cli imul mov loope inc push rcr mov cmp adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl idivb scas jl jns (bad) rcrl push outsl xchg xor iret out mov lcall push (bad) lret std mov or ja pop pop push mov or lods (bad) repnz push cs repz sub jg push aad dec pop mov pop das fistpl subl inc fbld xor sahf inc mov or adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov lahf shr cltd adc jp outsl stc mov pusha aam outsb testl daa mov inc mov adc inc movsb or push push pusha push mov gs pop addr16 (bad) pop push mov xchg and pusha xorb adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl in pop divb jo pushf adc jmp jge lea leave jbe scas test int inc xchg cli lcall push cmp mov inc in ja lcall cmpl or cli mov xchg mov in ds test outsl dec mov inc push add cli ljmp jae mov adc mov loope or pop int cmp addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl sbb xchg outsb int lock mov int rolb xchg jbe addl jmp das lods out mov adcl xchg shll je fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov pop js adc push push shlb popa xor push mov incl inc sbb sti scas test addl scas jg ret mov icebp inc ret int or cmp inc dec loope xchg pop mov into into or xor inc fwait pop add mov adc cmp (bad) inc inc in mov push (bad) nop dec push iret cmpsl xchg sub popf add mov enter pop sub cmp out fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl lods adc fdivr (bad) sti push sahf or mov lds iret pop mov inc mov push dec and dec push insb (bad) cmp jl xlat pop outsl adc cmp xchg mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl jo fidivrs dec jmp arpl std outsl xor xchg out or ficoms test aaa aam test jb out mov rcrb lret sub mov cmp or sub (bad) pop repz dec stc xor sbb mov and rolb (bad) clc addl popa in sti xor or pushf xor add stos add sub jp (bad) and ljmp out pop test xchg dec cmp and addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov mov lock xor fisubrl int3 loopne ret inc repz pusha push mov push jp sahf inc lret fistl addb lock popf mov aas push int3 mov adc inc mov mov xor test sub (bad) int3 inc fiadds ss shll mov cmp stos jo nop adc scas or mov sbb xchg adcb jg fsub fimull (bad) imul loopne movsl lret or pop (bad) into xchg mov adc fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl or pusha hlt push ljmp movsl adc mov cli int test andl test hlt xlat pop test mov lcall cmp lods ror xchg das or in and pop mov dec adc sub cmp mov (bad) sub aas sub (bad) ret sbb xlat mov pusha jge mov mov pop dec dec pop jl movsl xorb stc jo jmp jbe cmpsl lods mov and adc fneni(8087 jo mov mov xor fcomps stos repz addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov mov jmp mov mov lods in lahf imul inc add call out cli testl adc pop ret cli incb stos mov add xor adc out loope ret xchg mov dec or dec (bad) xor or jae std mov mov sub sti xor pop orb inc iret cmc int and aad mov addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov or int inc fcmovbe scas lret and push push (bad) int pop rorb xor add xchg or ret daa dec pop fst inc and pop sub dec loopne mov cmp mov sbb repz sub stos dec int3 bnd mov addr16 icebp xlat and cmpb cmp jbe sub scas mov lcall ret jge mov (bad) in mov lods (bad) repz dec addr16 cwtl es cmp mov enter jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl adc iret inc lds es sub es push add xor testl adc cltd and pusha dec pop loop sbb jbe ret xor xor mov xor cld out jbe inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl inc pop and lret mov or testb stos inc fldenv test pop push test mov pop leave jno lea fstl xchg clc (bad) jp jge jns (bad) sti adc addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov mov movsl mov sbbl and xor mov js scas cwtl inc mov or dec cltd lret mov and push enter xchg ljmp ret mov hlt pop sub jmp pop leave xor out int cmpsb lds cmp and xchg stc inc push or or scas jo or mov lock dec mov pop cmp xorl cmp out mov imul pushf fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mulb pop jno dec jl addr16 fnstcw cmp dec cmp stos aam popf shr cmc test cmp (bad) sbb jb aam les loope xchg jmp ret pusha test loope lret cs xchg push xchg sbb pusha in add sub (bad) xor mov rolb lods test jge inc pop xchg dec xchg pop mov sti in jge sbbb xchg je pop inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl ret cmp int3 push adc imul jns ret pop in xchg sub dec pushf lahf in stos mov ficompl push insl xor cli fcompl and mov cltd lret jg dec cmp test clc test or add hlt xchg test sub fmul call push or sbb xchg dec inc out sbb inc loopne xor addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov icebp lods and jnp push adc out lods push cmp sbb stos add cmpb ds push mov cmc sbb or push test jnp pusha jg xchg xor mov jae es mov (bad) addr16 insl imul or addl fstl andl jbe addb inc xorl mov addb mov addl addl addl fldl fnsave pop mov addl jl add scas mov stos mov loope xchg cmp or insl mov mov and stc insl sahf pop xor cmc mov addl das inc bound mov insl jge push xchg js int3 xchg in gs or pusha lods mov (bad) cwtl cwtl xchg cmpsl mov and pusha dec mov int3 mull lods and adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl jne incl jae ret lea mov sbb arpl push and jnp add or aam ret in lea lds sub outsb mov ss in add and in adc adc iret in sbb subb fiadds aad fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov jp pop jmp (bad) jnp (bad) out test cmp cli rclb pop aam icebp sub jecxz xchg sub lret push push lea cli xchg or inc xchg jb sbb inc mov inc pushf adcl inc fnstsw mov scas lea out aad out inc or or ret orl cmp aad fucomi scas lea je add sub pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl and cmpl mov jae mov stc push pop lods out cmp sbb xchg lea push jl rorl aas cmp lea push or sti pop fnstcw orb jecxz pusha inc nop test pop cmp pop cmpsl arpl xchg int jbe jno cmpsb pop daa faddl xchg mov sbb jecxz leave pop pop test std cmp push pop push fildl jnp stc xchg jl aas into mov mov or cmpsl and rcll pop push push mov adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl add clc mov fmul mov add aad adc ljmp lcall jg pusha mov or pop popw (bad) or shlb imul das popa mov inc jmp mov mov sub incl nop in xchg orl loopne push iret lds iret lcall inc add shlb sub mov xorb addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov ljmp dec nop dec dec mov es pop mov jmp insl sbb pop mov push cmpb rolb adc into and mov aaa arpl xchg cwtl mov andl sub mov cmp popa push jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov outsb mov js pop test sbb test icebp into jns aaa scas insb into fldenv imul movsl outsl lds decl aam into cmc aaa popa in inc fwait imul cmpsl xor lcall into add lcall addl mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl xchg nop inc push xchg mov into loopne and repnz sahf push inc icebp aam aam mov imul xchg pop jg aaa repz pop ret insb lea dec xor mov xor jae es mov lcall inc mov dec jnp mov ret mov addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov sahf sti daa jge xlat cwtl mov ret out je das out mov jg pmuludq push sbbb mov or loopne add sbb push push gs xor cmp adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl stos imul je iret int3 pop rcll out inc pop imul sub xchg andb push xor and adc (bad) nop es out outsb (bad) pusha in xlat iret fstpl cmpb sbb data16 mov inc xchg imul xor adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl pop push push xor int3 mov add sti or mov test add sbb cmp popa (bad) adc cmpsb cltd xor inc rcll add mov shll std cmpsb inc push std mov testb jp sbb imul xchg notl outsl in and pop les jle addl popa cmpsb shl lret cld lret pusha int3 out xchg pop test or mov cmpl cmpsb das push stos arpl fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov inc cmp mov sub cmp loope loope bound test das inc test mov dec in mov dec mov js cwtl popf adc loope stos lret sbb fiadds test xchg jg sbbl repz pop mov lds sub sub pop or fstps push inc dec push or addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl into xlat cld clc mov loop mov js pop xchg fstl movsb nop and jae sbb outsb xchg fs dec adc iret ds daa xor sub shll sub nop push mov or sbb and loope test das fadds mov in mov inc cli adc mov add pop add dec sub jp lock adc pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl inc movb mov subl xchg sbbl fwait xor xorb jae dec dec mov (bad) push (bad) popl mov sbb into incb push repz xchg or mov in shll testl or not mov insl lret addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov and mov out or fwait mov and adc cli mov or mov cli mov pop outsb rcrb das sbb pop arpl test roll xchg imul nop mov adcl inc xchg or mov les mov into xchg xchg aaa sti incl movsl sbb cld stos lcall adc xchg inc loope addb jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl test sub stos push dec rcrb popf pop out into xor fnstenv lcall shr out nop shr fadd dec test int3 adc mov mov fs pop sti jae in sbbb (bad) sbb mov es and je mov pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl push movsl insb leave test mov add dec inc sar int3 pop fstl mov xor push repnz test outsb data16 and (bad) call scas (bad) jbe out andl addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov sbb cltd push adc xchg jge insb lds leave sahf xor out leave out mov inc addl and or sbb cmp icebp adc fisubs sti mov fistpl les lock push aas (bad) jge cltd jne xor add loope pop aas mov mov xchg stos repnz cwtl xchg imul sahf adc call popa stc aad xchg or inc fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl popa inc inc xchg mov mov and add push shll pop sub sbb bound push lret lods mov or jg push mov fimuls or stc repnz dec out inc cwtl dec cmp cmc (bad) push push in pop in mov pushf inc mov push into inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl fists dec stc in xchg dec movsb ds out lds imul mov stc lahf inc idivl les lcall or mov shll movsl adc addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov dec fs mov adc mov lahf pop in test js in mov aam imul mov out mov insl add test mov stos addl push shrl inc adc nop jae aaa or repz sbb bound sbb push push mov orl adc scas sahf fildll sarb xor inc dec sti cmp je xor xchg (bad) rcll test stc pop sub fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl hlt lcall jl into sbb stos cltd inc subl fimull mov je xor test subl adc or adc lds push in int3 jecxz nop loope ror addl rorl fsubs lea aas mov imul or xchg xor dec outsb je inc mov stos cmp cld (bad) scas push adcl data16 pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl xchg ss cmc jnp fadds sbbb fcmovne add xchg into roll push inc orl dec push lock pop mov cmp imul ror or push xchg rorl subb cmpb sbb xor cwtl mov fsubp fldcw nop (bad) or or mov mov andl fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov das jno jecxz mov ret (bad) icebp hlt push stos xchg negl mov cmpsl shll test stos movsl mov adc cmp cmp sbb mov lock (bad) mov adc mov inc xor mov icebp or cmp nop sahf and pop out je nop adc push and pushf lea pop add sub or or ds or in pop faddl inc out hlt fsubl hlt movsb mov lock repz mov or cmp adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl xor dec mov mov lock cmpl mov adc inc adc movb jle insb loopne or fidivs cwtl loopne pop aam pop xchg push dec sti mov add pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl sub (bad) xor mov aad fistl rorl int imul push xchg adc xchg mov ret push dec std xchg insl cmp out mov aas xchg sbbl fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov in mov aas out mov (bad) mov mov xchg and xchg mov pop lea rcrb xchg aas sbb jae ds lret repz out idivl pusha (bad) outsb sub add jbe lcall pop mov push mov push mov test push pushf xor lret push push mov fsts hlt mov fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cmpsb push jbe xlat push rorb mov in std test push xchg mov jp lret insl inc add call fisttpll arpl add push outsl loop jns addl insb into xchg in lahf rcrb andb inc subb jmp cwtl call inc pop shl inc cmp mov je mov (bad) fisttpl or addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl orb in xlat les lock movsb mov les add xchg xchg cmc ljmp ss in mov cmp leave shl scas lds sub mov loopne popa mov push pop cmpsl mov cmpsl stc pop adc roll js jnp xor (bad) fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov or inc in mov stc (bad) filds iret insl int andb mov xchg push xlat sub rol pusha xchg sub jnp aas cwtl xlat sub add push sub mulb subl inc addl or addl fstl andl jbe addb inc xorl mov addb mov addl addl addl fldl fnsave pop mov addl roll aas xchg mov xchg push adc fnsave sub je sub test mov lds cmp mov push movsl testb fdivrp in dec mov adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl adc test out stos lds lds lea fcmovnbe jnp jge or jnp mov lret mov data16 xor mov pop jmp std lea mov fcoms vpackusdw ljmp das inc cltd sbb fidivl test mov incl mov inc jno and addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov push mov sbb fwait ja sbb inc fsub inc jp cmpsl and sub int3 (bad) fiaddl in js ret dec lret pushf arpl or insl clc jmp out dec and pinsrw lods out orl flds jecxz xchg inc pop std (bad) jne push idivb shr popf addl pop fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl sbb leave aas jns (bad) insl imul push ljmp mov pop scas jne sahf xchg inc and mov and mov loopne pusha jbe sub or mov imull addl mov (bad) mov cltd pop (bad) sub jnp lahf adc inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov into pop (bad) mov popf cmp movsl jle xchg hlt add inc lock mov lds nop xchg pusha adc inc stc in mov xor mov mov les jl,pt stc sti mov addl jmp out andl pop and inc call addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov inc outsl cwtl add mov negb jns imul stos push jl fcompl or ret in push push mov mov cmpsl lea xor mov cmpb rorb cltd mov pop repz lea outsb add adc add loopne sbb inc mov loop jae mov adc (bad) xchg sbb mov cmp mov lahf jecxz fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl push xor jne test lods dec xorb jmp add mov cmp xor iret xlat std hlt mov cmp xor daa das sub addl jecxz pop enter out out pop ds jns sub mov lock cli bts mov not adc lcall int dec aas stos xchg fwait sti inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl push xchg xchg mov or iret pop inc mov mov pop xor push (bad) cli aas shl insl cmp ss sahf pop xchg and and and daa lret orl addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov push inc cwtl xchg outsl lahf dec pushf lea xchg mov cmpsb mov fwait cmpsb je jbe js xchg mov cmp imul movsl push loop xchg es test hlt mov mov shl jp or insb cmc outsl sbb addb inc adcl mov int orb dec xor mov outsl and rclb lret std mov (bad) pop jmp pusha cwtl sets popa mov enter mov in cld cli or test add int adc fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl (bad) (bad) pop imulb and xor cwtl adc int3 fwait jb mov mov sahf nop repz fnstcw jb outsb test mov or sbb xchg lea sbb mov iret xchg enter jns aam sub lcall push pop pop jo mov pop mov inc pusha addr16 inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl flds icebp pop in lret inc add daa repz lcall mov cltd mov jnp cmp dec addr16 sbb sbb sbbl xchg andb cmp xchg addr16 in inc fidivrs shrb jnp cwtl pop xor or xchg inc xchg in jae cli aas sub fcompp mov jp xlat inc (bad) sub xchg add rol fmuls (bad) fnstsw adc cmc lcall dec sbb popl jp addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov pusha xor xor mov jle mov (bad) out repz push arpl (bad) or push inc rol gs (bad) stos imul and or ffreep xchg out (bad) xor lock push jns pop pop mov (bad) (bad) cmp pusha insb mov fwait into add std loopne or pop out xor xor mov push out lea dec inc subb inc xchg loop int in fwait and loopne out shll iret adc addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl dec xchg push les idivb hlt mov pop mov in dec push scas insb (bad) jb inc mov pop cmpsl sbb push push sbb lods divl fcompl sarb (bad) mov sub cmp negb pop ret rcrl lcall cmpsb push pop or inc out push pop outsl jge mov jmp (bad) fstp mov add ret (bad) add push xchg pop fwait dec js in cmp fwait add into mov pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmc mov popa mov add jg outsb pusha hlt add nop or or outsl divl dec adc nop jb sub xchg (bad) adc dec adc xchg push and mov xor or mov mov jmp adc xor hlt rclb or lock cmp push add mov lret xor jno loope sbb subl xchg pop orl pop addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov lods xor lock cmp sbb push lock dec adc fsts test and xchg mov stc cs mov mov xchg roll js inc jmp xor xchg pop dec pop push add push lea ror std mov jae js adc andb loope jb inc pop (bad) dec push mov iret shrb adc leave inc sub fmull jb fldt jb mov addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl inc stos (bad) fnsetpm(287 jae mov pop mov adc test mov jns mov xlat pop or call dec xor cmp shl dec shll mov frstor scas ljmp xor xchg ljmp imul test test (bad) sbb xor inc clc es lcall jg mov addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl icebp push mov into adc mov in cmp bound nop incb (bad) movsb arpl fisttpll into imul mov cli andb lds popf movl pop addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov cmc push mov mov push mov test cmp in mov popa std xor cmpsb add les mov pop mov cmp pop in cmc xor mov sub xchg roll add sarl push hlt aaa xchg add (bad) cltd jae and outsb pop adcl lret inc mov fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov xor cmpsb (bad) cwtl ds xor stos clc dec subl int3 int3 int3 int3 int3 int3 int3 int3 int3 test add sar and xchg jnp call sub push fwait nop sbb lcall fistpll lea outsl popa mov mov xchg cmp mov and cwtl (bad) sbb sbb cmp das nop fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl out sbb and jnp add sbb jbe xchg nop lods jns or mov stos cltd pop stos inc rcll inc mov inc push test aam push mov xchg add test test stos cld adc jp mov cmp push repz sub push push pop lret mov stos xor repnz nop add scas lods inc mov jecxz cmp xchg xchg inc inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl sub cli sarl cld cmp dec cmpb aaa (bad) jnp mov xor adc mov ljmp lret lds xchg out xchg lods scas mov xor lcall popa leave xor pop sbb add popa in mov xchg icebp das hlt and push in cmp std inc ja test add sbb adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov rcll js mov lods gs jmp addl add mov lret and mov out (bad) mov inc js mov xor fbstp scas xor dec ret jnp xchg dec mov sbb pop nop enter push fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl or and repz fcompl addl mov mov jle fwait jns push shlb sbb xchg into in fwait mov lea mov in dec fcomip pusha push pop sub addl push outsb dec das and test cmp int cmpl pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl scas cmpsb lea movsb lods fcmovbe xchg adc mov xor push push scas mov sbb call stos or inc xor adc rorl shlb mull fidivrl adc push add fisubs test stc mull or sti lret mov add mov jae movsb jmp jle fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov loopne sbb push leave fidivs (bad) cmpsb xchg addr16 lds sbb push loopne and scas mov jnp or lea push mov leave or in mov add xchg insb cltd dec fldenv jmp mov lods push jne mov insl sarl mov and scas movsl shlb aam orb mov jp idivl rorb pushf jp ror pop sbb pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jns paddb pop xchg ds jbe cmp in call mov inc fwait or mov jle repnz ja push jmp jae dec das ljmp or std in ja popa xchg movsb nop fisubs test add xor call adc cld mov push pusha lcall dec push push pop pop mov fs test and push xchg orb shlb addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmp pusha xor stos inc dec sub clc nop jg shl mov popf lock adc mov jmp adc subb xchg sub clc in fndisi(8087 movsb mov in adc daa shll in std cli lret ret aas sbb mov or xlat lods imul xchg subl mov enter leave mov out sbb mov ret lea addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov or add ljmp lds adc fwait mov push test lea mov mov out imul popa popa in pop ss lods into popf push hlt test mov inc dec pop push call adc lds into shlb sbb xor xchg bound sbb push out jmp push pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jecxz test push loopne out divb (bad) fsubl dec aaa push dec jge pop cmp fbstp fisubl int3 sarb (bad) dec js mov mov movsb ficoms fmull int3 subl xchg sarb mov xchg lds ret or arpl jbe mov xor std mov pop cmp inc mov std stc sub enter add mov subl (bad) loopne mov lret xchg jl test adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl scas xchg sub jmp xor std out mov addr16 and fwait movsb and and push jmp pop lea add daa dec aas mov addl cmp fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov popf inc or mulb daa stos loope mov (bad) sbb jb dec cmp leave pop fs jae push inc nop repz push pusha mov scas sbb outsl orb lahf iret mov lods or and mov sub xchg jp cmp mov mov xchg cmpsb xchg pop iret add lea mov add sbb cmpsl stos mov adc mov das push push mov popl popl mov xor sbbl jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov lea jae xor in mov call dec mov icebp cmc mov pop xchg adcl rcrl pop mov (bad) fimuls mov push fstpt cltd jae mov cmp xchg in ret sbb mov push xchg test inc bndldx lret repz sub popa test mov cwtl xchg cmp dec jge mov xor cmc xor pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl pop outsb lea and aas divl loope sub out push jle sbb scas add inc cmpxchg imul roll test dec xchg jo sub mov (bad) adc mov lcall test lcall pop lods mov repnz mov mov adc outsb and in call enter push and popa add push xchg inc cmp lea addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov sub and push adc xchg xchg das jge das push shlb shl xor mov lret jl nop ljmp push jne xchg cwtl test test loopne mov and cmp std aad cld rcrl das shlb orb mov movsb repz lahf shll pushf push lret add add adc ds jo sbb mov ret outsb mov cs cmp mov fimuls std fsts mov enter mov dec enter xchg jmp addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl pop lret sbb mov test push jl push inc data16 xchg mov fcomi ret cmp movsl loop daa dec jae jo inc popa push dec mov orb mov fstl addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cld jp sti test das adc clc mov fucomi pushl icebp cli pop dec std test mov jnp sub cmc sub imul and mov or xlat inc add fs xor (bad) xor cmpb push push add nop ss fdivr pop xchg int3 inc xchg popa pop push adcl into in xchg rcr lcall test cmc mov stos mov orl cmpsl mov sbb sbb test sub aas and xor scas dec aas stos fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov or adc into rcll or sub mov lods out movsl popa popf loope lret in fs mov lods jnp cmpsb not orl lods mov in fs and mov test addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl and popa aas xor shrl in cmpb add bound xchg push inc adc inc xchg push push adc fcomi les and add shr loop fmul lret cmpsb or inc cmpsl lahf pop add outsb inc divl popa loop in push mov add add cmpl ss lea nop push push fsubrl inc test (bad) pushf mov or addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl outsb push ja cmp (bad) jmp sbb pop andl inc int cld or mov sub ja out jb add mov mov arpl subl int cli sbb lcall xlat out cmovno fs into cmpl push sub addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov add dec sbb add mov test jnp jp pop ficoms stos push dec cmp cmp and adc push (bad) xchg in dec and rol sahf jb and insb fwait cmpsb xor in sub sbb or ljmp mov stos sbb mov add sub in les dec and sub cmpsl add xchg sbb out mov lea sub and aad mov pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl aaa shlb stc fcoml or push pop or lea add pop mov mov mov scas pop pop fdivrp mov repz stc jae fsubl xorb repnz (bad) adc pop js scas in sbb mov lahf sbb push xchg orb bound pop xchg test and push lods scas jae ficoml xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl adc mov adc call popf xor or shlb out hlt out andb xchg sbbl inc and mov daa sbb fidivs jbe pop jae movsb lods insb movsl testl clc (bad) call out add sub xchg push pushf mov dec test xchg mov inc inc mov (bad) loop xor into xor cwtd clc sbb xchg outsb jb popa repz stos (bad) sbb or cli mov fsub cmpl adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov xchg fwait xchg sub inc cli fstpl mov cmpsb inc inc add adc xchg dec stos outsb xor mov push js test or lret das lret (bad) pop pusha cmpsl xchg sbb scas pop jg hlt fadd fildll inc (bad) clc pop adc shll pop fwait out ja ja push push test xchg sub clc das jnp sarl pop xchg mov popf in addr16 addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cmp cltd mov stos mov sub (bad) push subl cmpsl test ret mov aad ror test stos sti test sub (bad) movsl lret es adc inc or stc inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov add inc addl mov icebp stos enter or dec inc in sub rcr inc push fadds pop adc sbb xchg aad aad dec pop out and aas push inc int mov jbe xchg add lea or or decb push add int3 data16 lea test lret xlat push je out xchg or in cli inc dec dec inc (bad) sahf push pushf push sbb loope orl and fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov aaa call inc sbb dec ja jecxz frstor enter int pop or xchg test mov ror cmp mov adc loope mov repnz adc lds and faddl leave adc add ret testl mov mov cmpsb cmp push jo subb mov lea pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov xchg loopne jo cld add dec pusha fwait int lds in das dec js cli sbb jb pop pop mov int cmc add push in ss int adc add xor data16 stos push sub mov mov cmpl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl pushf orb stos fnsave movsb divl dec mov ja jbe test adc sub stos fnstenv and aam add pop test mov je jecxz jb mov adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov xor xchg cmc daa push lea pop mov xchg addr16 xchg or sbb cmp or or mov lcall xchg pop cli or aaa lret pop test (bad) sub fs data16 add adc sti jp xor lret mov cltd jp mov mov repnz ds jo xchg filds mov add aas sub mov addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl sub icebp jbe int3 outsl mov divl sbb std and lcall xchg rclb inc push iret xchg xchg iret hlt xor (bad) stc mov mov pop mov push rep lods dec pop mov jb (bad) and dec push cmp pop arpl xor cltd cmpsb test fs addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl add cs mov je xchg sbb cmc mov mov mov add sti movsb mov iret or push xor xchg jg lret data16 lods lods xor loope arpl xor mov cmc test or lea insl mov je test push mov mov js cmp xchg aad push test xor add cmpsl xchg out rorb or out faddp fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov or (bad) data16 imul cmp jge ret mov cmpl repz dec nop cmp jbe insl xchg cmp in mov imul push xchg cwtl jmp in mov out sub jo fcmove pusha mov add mov nop inc mov es call out fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl lcall loop notb mov xor push lahf popa sar shll insl inc mov add fs inc mov lret sti push movsb or leave push jl add rcl into adcl jle (bad) cli push outsb lea adc (bad) daa fsubrs adc ret (bad) xchg fists cli sub repz fcmovne mov pop iret or rcr negl scas push xchg sub adc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl inc mov js sub jne (bad) push test push adc pop add xchg mov gs add es test in sbb fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov push out mov sub int cs stos in out es (bad) pop mov xchg inc in or fisubl jmp sbb fidivrl adc gs inc mov imul inc cmc cmp add inc sbb adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl lock loop mov fldt adc add dec cli push push pop xor std mov (bad) xor fwait inc or mov pop xor jecxz sub or xor out cwtl mov xchg mov push movsb xchg ja fs rcll ds mov mov mov iret add mov imulb in xor add push and test xchg out std mov movsb add add or cld addl pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl in aas clc (bad) cltd loop insl ret insl xchg jb and adc mov test jae std cmpsl sbb aaa mov lds dec aam sbb fs in cmpb movsl int3 addb addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov lds pop in push aad push mov movsb popf sub sbb outsb inc cmp fsubp jecxz aas jg dec pop xchg or mov sti pop test add jg or jp lds movl roll mov shlb aam ret pushf cmpsb sbb scas pop cwtl int3 push mov call mov pushf lahf out mov (bad) test pop lret mov sbb lret notl mov data16 add or inc dec and mov cmp outsb imul mov int3 outsl inc xchg fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov mull lods xchg out dec add enter mov jae mov add push pop sub in scas cld shr pop fwait js or xchg and lret shl or adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov jle sub arpl lahf sbb je movsl (bad) cmp rcll test shlb pusha or xchg mov inc dec cmp in push loope xchg xchg ror lret sub pop inc mov fisubrl xchg cmp and push mull mov (bad) (bad) in mov pop adc fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov scas fsts (bad) fildll lea push pop ja jb mov sbb add dec mov cli shrb xchg scas iret xchg xor in out call testl dec test xchg fs lret ljmp adc jnp push mov or adc fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl xchg or push or push cs aas pop out aaa xchg hlt or adc add aam aam test inc mov xorl mov adc cld lret push cli mov test xchg fs adcl dec jge ds shlb stos cltd pusha inc inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mull out ret cmp ficompl mov clc (bad) in push mov xor sub stos inc das insl sbbl push mov inc je test aad jge ds xor test fisttpll adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov aam dec cwtl sbb mov adc incb int3 push mov xchg mov jmp repnz or clc enter rcl out xor mov mov lea insl sub dec pop add jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl pop shlb mov jbe es testb jge,pn jns push cmc pop xchg dec stos or inc cmpsl jb cmp xor add pop lods loop fimuls pop scas sbb cmpl sbb jmp ljmp ljmp jg and addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl scas jns dec jle incl and or test ficoms sbb ljmp fcomp adc fstpl xor repnz fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov sbb int3 movsb sbb int inc cld mov dec jl mov pop xchg test arpl sub enter add test mov dec adc inc sbb cmpsl add andb adc (bad) xchg xor xor std lret mov iret les mov mov notb jno lds (bad) jns or outsl scas fadds push jnp adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl fldln2 sub adc mov mov inc inc aaa xchg adcb dec stos push mov inc sbb adc stos movhps ss sub idivl sbbl addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl and xorb pop adcl (bad) rcll xchg jle (bad) (bad) sub mov mov lods cmp in jne pop jne fwait dec sub mov movsb enter cli or movsb int3 xor jl inc push orb xor fdivrl push leave loopne xchg mov or popa fldenv push lahf mov push mov movsl sbb mov add je add iret inc (bad) dec aas jb push pop shll sub addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov inc and push dec mov sahf jnp scas call rorl and cmp xchg inc mov (bad) push aad push cmp jg push jbe inc inc dec int inc leave add mov adcb movsb test push jp mov (bad) scas inc fcom loop sub dec dec lods cli subl icebp (bad) push ret fstps sub popa mov cmp in insb jae mov test fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl or test shlb sbb pop (bad) adc push mov orb push stos notb iret or and pop lret ljmp xor and ljmp or cwtl mov (bad) push inc push dec jb cld cs into jne leavew mov out lahf adcb ds out jmp mov addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl xchg cmp iret and nop and stc lahf push xor addl test scas mov lret gs test jb gs rolb repz repz inc pop inc cli fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov orl test les pop stos cmp mov shl sbbl setae inc push mov jno repnz fistl pop pop fwait mov in pop add or inc sbb mov push cmp aam mov fstpl sbb mov (bad) lods xchg das add call and mov out ret pusha dec xchg into sbb sbb cwtl add loope and lods and data16 pop sar fldl or or test or scas fwait sub test icebp shlb adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl add pop aad int lret orb (bad) (bad) adc lret sub push stos das push shrl es sub loopne sahf xor (bad) mov and mov stc inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov in nop xor mov inc lahf (bad) adc pop sbb scas divb cs std pop (bad) mov ss sub jnp aaa sub pop pop ret push inc mov push dec test call iret push mov mov inc mulps stos cmp movb cmp test sub lahf push xchg call xchg cmc pusha push add jbe fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov in call xchg fs and jbe pushf mov xchg addl xchg cmp loopne lcall jmp inc push call pcmpgtd mov js fwait cmp test lret add fs mov pop lcall lods cmp cltd and sub or sub push push int3 mov shlb int3 push and add jg mov (bad) adc pop adc adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl lods add out xor lods mov push ss mov add xchg sub push sub mov mov popf xchg mov pushf inc push movsl jnp cmpsl mov mov cmpsl add xchg sbb lahf les add test insl sarb cmc movsl inc test aas xor aad nop add mov movups inc movsb or push adc push bound sub addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl (bad) std sub jae fsubrp xor mov lea push scas ss daa xchg fs cli pop sti mov or das pop xor xchg or inc mov sub sbb mov pop test out xchg sub into push xchg cmc fs xchg outsl dec frstor jg shll pushf stos mov (bad) xor cwtl aas loop dec out js andb pop addb lret arpl pop lret addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov mov rorb inc mov addb cwtl and add stos xchg dec inc inc gs dec pop pop fcmovu cmpb cmp test pop xchg adc cmpsl inc mov dec rcrb adc pop and js imul hlt pop ficomps loopne rcrb adc mov push stc sbb pop enter fnstsw into inc mov test or adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl shlb push lret mov out int aaa xchg mov sarb aad mov push orb testl or adc pop movsl mov inc cwtl int adc out in mov lea jno adc xchg xchg stos inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl adc xlat (bad) push cli leave bound xor sbb xchg xchg mov and mov (bad) xlat adc rorl xchg adc mov or shlb test xchg shrl fwait mov xchg in rcll inc test mov in jo loop lahf leave test or les and sti rcr cmc lea xchg inc pop fisttpl fsubrp fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov fnsave add loopne pand sub sub int (bad) addr16 mov stos int inc jno adc cwtl idiv xchg orb sbb pop cmp arpl lahf add mov test outsb movups rcrb stos adc lret mov (bad) pop lret rcr movsb or mov sbb or xchg xor push adc andl lock fs out ja push sbb out out lret jl popa mov jo movsb and xchg sbb cmpsb sub jo in fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl lahf jg lea aad in xor loope dec cmp sub and cltd lock xchg push or mov popf or hlt sbb xchg mov jp xlat je pop das sbb js gs sbbb rorb repnz cmp inc xor inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl add loope hlt mov lcall inc jmp cmpsl xchg mov sub or aaa xor sub dec adc mov and pop test es pop test addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov lret cmp stos sbb add sub je addl pop (bad) sub inc loop mov fldl mov (bad) push xlat xor mov jge add mov jne xor iret ret add lahf mov lods ljmp pop ss mov adc pop mov test cmpb adc lret stc cwtl cmc mov pop loope sar fs pop add push push mov movsb ficoms mov test test and jae fdivrl lret decb dec adc xorb scas xor lahf xchg and fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl or sbb mov loop xchg xchg sti jnp or mov push add jp adc imul dec fstp jg lahf mov fidivrs testl mov popl in flds jp subb cli lea and addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmp setae adc or mov in mov xlat mov clc xchg pop fiaddl adc sbb test sti stos pop pop and sbbl add test test adc lea pop adc imul loop fs xlat scas mov or dec or add addb sub jmp fisttpll rcr mov gs cli call xchg jg addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov cs cmp nop sarl lods scas sub xchg les stc xchg mov outsl lock pop addb pop (bad) leave jp orl sti push (bad) lods xor shlb (bad) cmp sub pop sahf xchg (bad) sub cs mov (bad) push sbbl out xorl cmp add adc imul xchg test cmc jnp pop cld jecxz mov stos test mov or fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl add (bad) (bad) test pop pop ds stc sahf jo incl out cmp ljmp cmpsb xlat andb dec mov ljmp test fcompl sbb push fidivrl or sub sarl mov adc mov shr in fnstsw addl inc iret stos jbe push std xchg cli dec lock xor addl cld addr16 repz (bad) ljmp scas (bad) incl inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov shlb sub add insl test mov aad shll pop or in and in loop test lock in or add inc lahf xchg sub dec xor in jecxz gs (bad) sbb test xchg push pop mov xor outsb ja addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov inc xchg sub fsub loope iret xchg cwtl dec jo xor add cmp jbe pop pop enter pop jge hlt pop xor mov aas xchg push stc cmpb xlat js fmull test jp mov aas imul lret dec pushf movsl adc dec (bad) shrl mov pop fiadds out xor cmp sahf xchg jns mov sahf xchg repnz push pop in mov pop inc in pop orb jl int3 adc lock sbb jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl dec and fisubs add fidivrs icebp mov nop rcrl inc stos (bad) mov pop mov xor cmp xchg bound sbb int3 enter jnp loopne xchg add fsubs lahf mov mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl lock xor stc gs out mov lds inc push xlat ret (bad) dec sarl push cmpsl aas addl rol jb mov mov ret mov adc mov jbe sbb xor (bad) sbb jno mov xchg xchg jae loopne jne rclb fdivrs test lcall mov std xchg ds inc lret ret or jb movl adcl mov andl addb adcl mov mov andl adcl andl addl inc xchg adcb adcl andl mov cmpl mov loop adc (bad) xor xor mov adc mov cli and fldcw sbb or scas and lds ret dec movups lds fs (bad) (bad) in xchg inc cwtl mov adc in lret push nop loopne leave sahf mov pop mov std xchg mov divb in dec in cmp mov xor in movsl mov pmaddwd jl lea mov sub jb adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl outsb inc mov sub lret inc jecxz cltd movb (bad) ja das xor inc pop std jge ret test inc testl push push in pushf push fdivrs cld out jecxz std mov pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl insl fsubs push repnz lds push jno rclb out shll adc push mov pop jecxz lret xchg lds inc sub sbbl fldt pop mov adc inc dec mov (bad) hlt add mov push lcall mov stc cld cltd push inc adc filds cmpb iret adc (bad) and add inc cmp cmp or addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov cmpsl cltd in lcall test jmp popa dec and mov (bad) clc test dec push (bad) cmpsb jg les sub adc add cmc icebp sbb test popa jno popf or jmp mov mov pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl stc ret adc xchg std inc xchg call hlt and out addr16 enter test addb aaa adcb xor cwtl jg xor into das loop test cmp adc lds aas mov fwait xchg scas roll pop imul ret vmread inc outsl adc leave inc aas pusha push xchg test sbbl and outsb (bad) out add sub scas test inc inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl xor cwtl sahf addl or mov xchg lds adcb push ficompl hlt (bad) stos and or fmuls stos je ficoms cmp add xor push mov jecxz int3 loop push int3 (bad) int3 sub addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov sbb loope push mov fst jp mov out popf xchg insb mov andb idivb sbb iret cltd dec cmp loopne jb aam aas mov pop push adcb shll mov jecxz or fsubr (bad) int3 lret rcll das jne fisttpll stc xchg inc aam andl test nop cmc sub fmull shl push arpl dec cld subl or orb adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jnp rorb push subl clc dec loop push data16 repnz pop leave xchg (bad) pop lret jp inc add fiadds jo stc inc inc lahf add mov jns test pop (bad) xchg dec inc or cmp dec (bad) aad cmp mov dec (bad) std mov pop lds push mov addb cmp sarl (bad) mov xchg pushf into aas or int xchg mov adc cmp adc pusha mov int3 inc mov daa in inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl subl cli rclb icebp fs sub fmull aam pop insb movsb scas sub adc push (bad) fcmovnbe push in in (bad) pop lea dec mov push sbb mov stos mov fsts mov (bad) mov inc adc enter iret push jge mov bound xor int3 sub test scas pop push fbld out pop loop (bad) fucomip pop scas loope push sbb add lahf mov sub add fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov xchg test mov lcall mov jae push ret adcb mov loopne jg sarl sub push and fdivrl pop fiadds push dec inc pusha das lock in pusha fst sub inc (bad) popa sarb inc adc std int3 jp inc jae lods test xchg iret test cltd or sub add and lds jl,pn jl mov or (bad) xchg dec add inc subl pop mov mov fistl in push leave mov divl mov xchg inc lcall jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov (bad) test sti imul outsl and xchg mull mov push out pop mov ret stos fcom out mov aas aaa xchg (bad) fildl (bad) mov sbb insl test lret mov imul pop ja dec divl frstor (bad) out and mov xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov and cmp mov loopne sarb in jns ficomps lea addr16 bound mov jl xor push cmp stc imul lea orb rcrb pop inc mov leave lds cmc (bad) jmp pop aas lahf mov pusha (bad) jle leave fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov or leave cmc push inc sti adc (bad) cs or xchg adc lods test adc and jne inc cmp rorl mov lcall enter (bad) mov incl inc (bad) shrl ror cwtl stc les addr16 fidivl push in xchg pop rcrb mov jae and fldcw fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov dec insb out in cmp aad jl jmp jbe fwait lret mov pop outsl jge dec fsubl and imul add les inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl shlb xor adc cs (bad) rorl mov mov int3 or push mov test cmp icebp inc xchg xlat aam repz ficomps push push orl push lahf xor jg stos insb push push imul scas addl mov jbe aad xor cld mov xorb mov or test pop push andl out fldt push rorb hlt fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov stos cs ljmp imul loop cmpsb pop loope xor mov jp and mov or (bad) mov adc mov call xchg pop loope push mov push mov add clc adc js fwait xchg xor ret xchg in aam stc push repz add jae mov (bad) aas push mov add adc mov or addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl pop add push adc shll dec adc std inc (bad) popf push stc xor cmp add loope adc bnd mul sahf mov and fistps movsl pop mov addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl aas mov sti or cli xor lret mov inc jae out or (bad) nop inc dec lahf jb les xchg xor mov popa iret pop mov pop mov scas push aaa push push dec int3 jge pop xchg ds and cli mov xchg xchg fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov std lods mov push add mov loopne call int3 int3 mov sub mov test je mov mov mov push call mov mov add mov pop mov push push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 outsl filds addl jae sbb cmp jo add adcl jne dec xchg add ror addl addl or repz addb addl cmp loop add pop nop mov stc fldt addl add sbb fiadds add sub sahf mov andl aas (bad) xchg mov rcrb addl add aad dec fmuls add addl addl clc cmp mov addl addb jb mov or pop inc add and adc inc fucomip andl add addb jmp daa addl (bad) inc mov mov sbb addl push push xor and adcl jbe and xchg arpl out addl addb insb jp pop leave mov addb imul lock addb les cld addl jne jo sti test xorl addb cmpl pop and and addl mov jge add pop addl sbb in aad outsb mov addl in andl in into int3 mov loopne pop jmp add cmpsl mov test addl addl dec mov sbbl andl addl xlat addl cwtl addl andl andl addl adcl addl sbb xlat jmp addl mov lds jae je dec and addl int std add ljmp addl xlat pop nop in sbb addb movsb insb add cwtl mov and and and add addb pop xchg ret mov andl and dec aam mov addl sbb cmpsl adc addb sbb arpl mov addl andl addl clc sbbl addl cmpsl imul dec xchg xchg sbbl orl sub push sub add adcb addl addl jmp add adcb dec mov addb lock stos jb mov mov mov add loop xor ret sub addl adcb cmp addb addl addb jnp lcall addb shl nop sahf xchg andl add out sbb sub addl sbb or addb addl int3 mov xchg addr16 inc out addl add inc fdivrp pop int mov int andb addl lock and inc mov lahf xorl fldl negl enter add or jge pop sub addl popf loope addl xorl mov outsb roll add and nop das subl and add addb lahf inc shr js cmp addb addb int3 xor adc addb faddp addb and dec add inc scas js cmpl add addl mov addl add sbb xor sbb addl popf adc xchg jno rcl sbb andl addl mov add inc out addl add gs adc mov addl int3 subl loop addl sar cmp addl mov addl and dec iret sbb rcrb addl or cmpl addb addl (bad) mov orl xchg jecxz sti sbb andl addl cmp popf xchg andl addl andl addl popf movsb leave mov addl xor fsubr jns andl addl addl test cmp addb adc pop inc add addb adc xor ret jnp add andb xorl addl int3 test ret (bad) popf pop mov ret addl and or int3 add cmp pushf inc mov addb mov out mov addl gs xchg xchg addb sub cmpsb addb add cmpsb xor inc in outsl or addl test addb xorl inc xchg int3 (bad) lret inc lods and addl test and mov addl sbb xchg in sbb mov add xchg xchg mov dec fsubrl add addb jne cltd mov add cmpb insb adc not dec mov ja addl pop out fwait into pop cmpsl arpl push mov add andb adc or in ret addl addb bound sbb addl addl clc mov addl mov orl addb pop popf or cs loopne andb addl push addb and out lea pushf int3 lods add xorl popa push pop sbb mov xorl addl addl and push add addl jb mov mov out addl addb jg jle stos andb andl sbb orl mov andl add addb sub out nop stos insb pushf or out mov addl pavgw ret addl rcrl or std orb mov and push or push out rcll xor and pop xchg sbbl addb int3 scas ljmp add cmpsl out adc xchg movl addb or clc sbbl into bound addl xor add push addb add addb mov subl mov pop add stc jge rorl cmp add ret int3 mov cwtl decb jmp dec addl and lea and outsb fcomp cld ret add addb ficoms add adcl addb in fildl enter stos andl addl sbbl addl std or das addl addl std and addl cmp jns addl int3 pusha sub addl mov addl add pop int3 ficoms pop xor call andl pop cwtl cld movb and addl add pop xor addl dec (bad) into shl mov andb mov addb les adc mov addl iret or mov adc addl les and push or andl int3 xchg cld addb and pop lea orl add orl add addl adcb cli xor mov or addl pop out faddl add mov subl test sub and decb mov adcl addl int3 dec dec mov xorb addl addl addl jge loop jp add addl adc add testl subl mov sbbb sub mov addl in imul lcall addb add adc bound adc andb addl lcall addl and mov addl sbb pop into addl addb das les addl inc cmp imul int3 mov mov out fwait adcl addb and fstps mov xlat xchg rolb addb xor xor into xchg fidivl addl cmp cmp in or cmp out inc (bad) addl and bound and adcl jae addl addb xchg adc adcl addl add stos mov ret add addb xchg mov pushf mov and orb xchg sub dec addl add (bad) or mov orl and lret addl mov mov andl scas aas lcall addl mov das sub addl and roll loope addl sbb sbb addb addl addl (bad) call addb sahf sub adc incl add scas in sbb in jp cmpsl inc dec pop sub addl mov adc mov push inc leave and addl jo fdivr pop addl jmp jl outsl xchg addl mov addl mov and mov andl rcl sub addl fiadds xchg mov addl and addb addl nop cwtl insb push or add std xor test add addl inc sub into xor andl add fcomps addl loop out addl addl jae sub mov sbb addl scas jno repz dec mov scas shlb xorl pop jg (bad) adc (bad) addl xor test imul ja addb addl aad movsb addl mov inc rolb addl movsb sbb addl addb pop sub addl addl addb xor and add addl addl jg iret mov (bad) mov and orl xor adcl aad dec testl addb adc inc imul mov leave dec addl addb outsl xor mov insb jbe add addl addl (bad) push stos and call addl jmp loope jns je enter andl add addb popa roll test addl xchg insb push addl addl xor mov mov add (bad) mov jmp lock cmpb addl test addl add rcl cwtl adc add addb adc sbb andl addl andl addl hlt orb addl pop mov lea addl cmc cmp cwtl in jp addl xorb mov addl and insl inc xchg inc xchg cmpsl stc mull xchg movb addb (bad) (bad) xor cmc test iret testl scas les addb pop mov cltd in andl addl std ja dec jb cltd inc mov addl sahf push push xorb addl ja addl add addl sarl addl shll addl stos mov jmp dec add addb and shlb and xchg add xchg fadds addl andb addl and stc shll xchg lock addb fisubl cltd xchg jg out test addl add aaa push adc addl or rolb andl stos mov add mov addb and dec add addb addl addl add sub jmp inc push add addl mov push add addb mov loop xchg add addl in mov addb addl xlat outsl addl rolb clc iret add andb xchg (bad) out or andl sub xorl xorb adcl mov add addl and jne lret popf addl add cmc xchg ret inc mov (bad) andb addl subl andl cltd lods es pop dec in sbb adc xorl jns and addl addl jns addl addl cmp sub addl inc cmpsl repnz lahf in in or add and (bad) mov test mov aam and add addb mov inc ficoml addl inc sbb inc jle addl and and sbbl addl addb cmp mov addl add xchg jl ret mulb movsb mov dec xchg addl push cmp jg addl pop sub inc subb roll addl pop in jo adcl mov or mov std jle and jp scas mov lods jae loope insb daa sbb ret push sub xorl pop pusha out mov jge push ja mov lahf mov jne and jg mov in and jge xor sahf pop daa add (bad) clc shlb daa in and repnz enter sbbl movsb sbbl mov enter in aaa loope cmpsl (bad) mov fiaddl pop or cvtdq2ps mov test xchg test outsb test push movsb inc notl icebp imul lock ror adcl pop andl pusha out pop mov sbbb orl daa mov sbb test orb (bad) adc fs das adc xchg test fstps cmc aam subl or jecxz (bad) fidivs fcom gs fwait subb lea push xor test cwtl aas dec cmc jl cmpb movsl xchg aam int push insb into loopne movsl subl lahf mov pop mov pinsrw inc lock int xor push orb sti inc in in loopne mov mov xchg aad std in mov add aam push push aaa loop pop adc mov xchg subb hlt shll xchg push orb xorb or outsl ret data16 ret mov mov cmp and mov dec add psubusb sarb sub call mov sti mov jbe mov xorl fstpl int3 cmp les and push inc and sahf inc mov mov xchg pop fimuls out inc push pop pop mov mov hlt loop movl dec lds push subl sbb lock (bad) int pop xchg (bad) mov sbb cmpsl sarl and nop xor add push adc aaa ret (bad) cld dec xor xlat pop push mov mov and sub and mov ss cs lods out push outsb adcl pop add lock out out fucom xor mov jbe scas push mov pop sbb mov aaa ret mov pop or (bad) data16 std or decb and andl pop add xor test pop ret mov shll xchg mov je (bad) mov xchg mov mov dec popl jbe xchg adc or ret push hlt cmpsl cmpsb push rclb jnp bound dec rol lcall ror cmp stos subb dec addr16 addb push int cmp mov or test daa inc mov push cmp scas sub test shlb in int xor (bad) jbe push into shr aam addl jae mov or xor adc jne fdivl dec push mov mov add shll mov push call out xchg mov test mov mov xchg or pop inc mov inc adc out xor movups cmpsl mov jp into adc jmp icebp adc cmp mov inc push orb mov out sub pushf pushf mov out bound adc pop loopne in adc push loop outsb mov adc aam fdivrs push xor mov in icebp or nop repz jecxz cmpsl daa loope mov loope inc or jo push and subb nop fmuls mov xlat adc fcomps jno pop mov aam mov (bad) mull push sbbb sub add stos into mov fsubl mov rorl mov inc sbb dec lcall mov icebp fnsave push push fwait orl xorb jb cmc jae in sahf push ljmp cmpsb pop mov cmpsb iret or test icebp add sbb xor int jp shr or popa fcmovnu cmp test xchg sbb fldt movsl ja cmpb arpl rol fldenv adc int cmpsb sub fsubrs xchg shll sbbl and mov cmc mov cmp xchg leave xorb (bad) pop fists (bad) lret ja xchg jge mov push or (bad) movsl inc sti jle addr16 xorb mov xchg mov sbb or test outsb pop leave jb addl andl hlt orl mov fcmovne fstenv loop and aas dec int3 daa cmp sub mov jmp or mov cmp nop add ret jbe pop cmc call nop cld sbb andl insb adc mov test repz dec addb xor mov cmpb sbb jp lds fstps iret mov mov inc inc sub loop xchg std jge cmpl jbe frstor xorb cmova popa pop pop and pusha addl sub rorl mov inc push stc js jb subb test add or add or add or add arpl add jne add test add sahf add or add or add or add or add or add or add or add push add or add jnp add popl add mov add or add or add or add or add or add or add popa add or add nop add or add aam add out add clc add or add or add or add or add popa add or add nop add or add or add or add or add or add and int3 int3 push mov sub movl movl movl movl movl mov mov push mov push call mov push push call mov movl movl movl push mov push call mov lea push call mov pop ret push lcall mov sub addb inc test push sbb cmpsb into mov insb addr16 jle sbb dec fidivl cmp in ss (bad) iret pop pop cmp add pcmpeqb add push hlt test mov mov push dec inc fadds xchg inc adc pop fs insb cmc jb and out adc and aaa sbb pop test and mov jbe ds mov xor pop clc mov addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl nop popl popa push pop int push mov lods out in inc xchg adc mov push addb fisubl lock repnz popf ss push adc jnp inc xchg jo sbb mov and mov orb outsl push sbb or inc test stos (bad) push sbb dec mov inc sbb fsubrl xor cmp loope jbe sbbl inc test inc orb mov rol enter jbe fs mov into cmp adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov add mov pop orl mov (bad) dec iret addb push sub sti nop test insb mov mov add or jecxz pop jae sub and insl push mov mov add add shlb cmpsb rep fs cmp sbb mov popf pop jp xor popa int3 and push addl addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov sub sbb cltd inc enter lods test jae cs subb adc add (bad) test push insb dec mov push add imul pop inc xchg push push and inc pop push and rcll xor movl fwait jmp ss pop in scas pop cwtl jbe push add js ljmp sbb lret jnp lcall repnz adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl shl stos or ljmp loope lods fiadds jecxz xchg adc repnz clc xor xchg mov mov iret pop loope jp adc mov fincstp shll inc pop in loopne icebp push bound cltd addl sbb mov imul inc icebp push xlat subb and cmp cld inc je test jb ficomps mov mov adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl pop lds sbb sub out cmp cmpsl ror hlt push or and bound add shrl mov or ss mov int3 out fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov mov cld nop cli mov repz mov jae jg cmpsb mov sti lods push gs and cmp mov cmp dec cltd sahf daa clc add xchg loopne pop ds add pusha adc adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl xchg cmp mov mov dec arpl rclb stc test out lcall aam ret pop cpuid int mov das movsl out lcall popf mov icebp xor mov jl and cmp jb adc ffreep dec cwtl out push xchg (bad) out jns mov adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl and mov nop jo pop lahf clc test mov xchg js or dec loop mov fucom stos and xchg test mov dec xchg aam xchg mov push jle fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov out jnp je jmp jbe loop mov insl mov test bound shll fiadds loop xor clc dec and test sbb popa xlat mov lcall paddb sub pop mov sbb jle inc or dec ret inc int3 cmp mov jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov push or div data16 pop jo mov cmp je sbbl lds or test adc push xchg adc jne lds lock sub inc push (bad) (bad) cld push mov mov loope loope sbb adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmpsl daa decl sbb xchg scas or mov das mov clc int xchg mov daa jo sbb out xchg sti jno es mov std or or into movsl sbb pop xchg js roll subl outsb loopne,pn orb addb mov test test hlt cmc cmp mov into mov subl cmc mov (bad) (bad) fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov add dec mov in push sub and jle adc cmp orl popa add loop repnz sahf ds cmp sar adc inc push fisubs dec add sbb (bad) adc int3 out clc in scas lcall stc xor outsl mov pop add cmp mov repz jmp xor jo ljmp pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl xchg int shrl testb fsubrp fstl dec ficomps or pop ret sbb ret addr16 pop cwtl (bad) xchg cwtl mov repnz cltd arpl stos adc enter (bad) lds xchg sbb jmp test dec out push test push insb xchg movb inc fnstenv mov stos pop leave add lock enter adc andl orl mov aas mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl jge jge xchg cmpsl mov xchg (bad) jae loop xchg dec lds imul mov push aas xchg (bad) lock mov pop jns cmc fiaddl imul int3 mov stos mov adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov pop and xor dec cmpb stc cmpsl add adc jbe inc mov xchg pop (bad) inc or sbb xor inc mov mov out fmull mov xchg jl fcmovnb inc in push subb fnstcw or sbb ret jle fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl sbb fsubrl scas cmpb inc andl mov xchg aas test mov shll and lds sbbb mov lods pop xor dec addr16 and testl loop sbb lea adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl dec lock sub orl js mov sub mov fimuls xchg sub leave lods (bad) jns (bad) repz push aad rorb subl adcl pop cmpsl mov xor cmp push mov push jbe or mov dec ja scas in and movsb (bad) addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov push in jb int3 jp pop mov mov sbb fsubp mov adc lahf mov testb popa test addl dec (bad) fists lret or or (bad) popf icebp loop pushf cmpsb andl into (bad) enter imul push pop mov bnd and adc lret jbe in lret mov mov cmp repz sti ja pop jne sbb stos rcrb aas adc cmp mov xor pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl aad push mov adc lea mov cmp clc pop sbb mov adc leave jp add push mov fnsave cmc es rol lds ljmp shrb adc lret xorb inc adc lods mov mov loope pop jp adc mov mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl test jbe ljmp inc xorb pusha rolb adc xchg imul aaa mov xchg subb fsubl popa mov push fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov sub test push xchg sbb cwtl lahf imul add sbb mov cmp imul lock inc add (bad) mov cmc inc jge push inc and test pop xchg mov add lock cmpsb push xor sahf lret pop cld (bad) jp mov mov push xchg jecxz andl add cmc fs stos mov sbb sub lds adc push jnp adc mov test fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cwtl in sub or js xchg cs xor jp push cwtl cmpl push dec push adc and add sbbb fimuls cmpsb sbbb or ret and pop mov sub dec (bad) outsl rorb mov dec popa stos jnp mov or movsb lea mov inc push call sub (bad) pop xorb fcom mov mov ffreep test adc lock jne lods mov ss pop dec inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl pop and jle fsubrl inc mov adc enter lcall lock ds stos xor push and or fistpll aad shr pop push cmpsb cmp mov ret clc or sub sbb test addr16 int mov inc sub fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov das mov in add std faddl out fstp stos jnp or (bad) lret fiadds and in dec adc pop mov loope repz push add (bad) rorl std mov sti mov jl mov add stc jle xchg sub movsl sbb mov push dec jg sti ja incb fsubrl adc jge sbb in cmp mov push lret lahf stc lock ss and adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jo cmpsb adc sub cmp xchg adc dec out mov and inc push shl inc xchg jnp lds sbb cltd ss movsb (bad) fwait pop inc test test xlat lock call mov mov xorl mov dec adc (bad) test jb jmp pop adc push aam dec (bad) mov es mov call idivl push loope cld mov pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl in mov std jle pop daa or into mov ret add fs lahf or int pop in push test mov mov add adcl mov ret pop in mov mov push adc fsubs mov add pop leave shll sub divl xlat cli xor fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov xor mov test aam cmp dec repz cwtl daa subl mov (bad) iret cmp test in mov jbe aad call and adc mov aaa call xchg cmpl mov inc push clc dec jmp or insl addl mov xor or lret cmpsb fadd dec clc xor loope leave inc pop sbbl pusha clc xor fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl adc xchg pusha add mov mov inc or (bad) jo ljmp cltd jnp xor sahf mov daa dec aas insl scas sbb sarl xor push mov add pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmovbe mov lods ret sbb hlt xchg cmpsb lret push jmp inc cmp dec jp mov clc addr16 dec cwtl adc (bad) xchg inc xor fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov or test add (bad) and (bad) addl hlt mov jmp mov jmp and out ljmp fsubrs mov movsw pop cmp push push lods mov dec daa mov loop adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl dec mov mov jbe,pn mov cmpsl les mov addr16 sti int push test fisttpll mov jbe jmp movsl push nop mov adc scas jns mov test (bad) sahf add aam gs out test inc iret push jo cmp dec push mov roll lahf mov or push jb int js jge sbbl into or jmp sti sbb fmuls sub jae inc cmp adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmpl push sub ror mov test adc scas dec (bad) std sbb dec or inc int3 ret mov out sbbl dec sub lock jl push xchg testb mov and hlt fiadds xchg pop movsb cmp stc xorb int movsl and addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov pop mov xor mov cmpsb xchg orb add and sbb js push ds jbe cmp mov ret jo in jae xchg sbbb inc call cmpsl cmpsl lret js add pusha mov jne cmc mov ljmp insl repz mov pop sub jae mov in imul pushf lea stos mov sbb dec into fsubrs dec sbb jge fidivrs mov imul pushf sbb sbbb pusha rcll jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl scas popf mov push in stc and push mov cmp cmp inc (bad) stos idiv shll sti cmp jmp or dec test imul popf ficomps xor adc push lea dec pop stc (bad) out test lds rcll loopne std jg leave orb pop adc das dec mov in inc add lds andl lds inc rep adc xor andl mov pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl inc scas pusha pop popf out scas into scas mov test loope test xor cmp (bad) xchg (bad) in imul sbb add mov xchg mov addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov mov jecxz fidivrs mov xorl sar je pusha es (bad) (bad) das test cmp sbb jne sub and mov aam lret push mov fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl ja insb add lds sbb sub dec lock nop adc sbb push das mov cmc hlt lods and in fdiv test mov add or call mov inc push scas mov into push popf add and mov or sbb (bad) popf int mov dec inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl daa jo pop popa mov mull mov or cmp jge pop and int3 add xchg mov sub jp out popa in and in je sbb xor adc and int3 shll pop lcall mov insl lea orl add lret dec fdecstp or dec ljmp addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov pop mov jo es inc int fldenv std cmp out in pop mov xor mov orl inc mov fwait test shlb icebp xchg mov inc mov sbb push rcrl shr add sbb lds out xor mov inc sbbl out sar ret cmp push inc push ret jne add xchg jle dec xchg inc jbe cwtl in adc imul xchg inc fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov pop mov jae lods mov dec mov outsb pop jmp pop sbbl fnstsw roll cltd cmp leave cmp pop (bad) mov or stos xchg lea adc jp nop mov add pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl adc cltd or ja leave imul inc inc or sub jns dec jnp cmp outsb mov fcoms fbstp sbb int3 inc cwtl cmp pop mov cmpsb loop push aas sub jmp cmp (bad) addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov outsb pushf mov call fcom fidivrs in add ret and pop ljmp test dec push inc mov adc mov stos inc aad jge add inc inc cs mov mov aam popa mov call pop or mov xchg (bad) mov scas pop sbb inc (bad) stos mov dec subl hlt cmpsl xor addr16 (bad) mov jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl push push les shlb add andl loop mov add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jecxz fstpl gs mov ljmp nop outsb push pop call xchg fdivl lds cmp ret or hlt shll pop loope mov sahf jbe aas xorb inc into mov insl push jl gs pop stos pop jmp mov stc mov test out sbb fdivr and jae shll cld adc xchg push add dec inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov shlb dec out push and mov sub inc fidivrs cmp adc mov lahf in mov or add (bad) sbb mov repz lds mov popa dec mov mov push repz pop cmpsl negl popf ret fldl rcl out rcrl cmpb mov mov addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov xchg mov movb sarb jnp in insb cmp mov and adc jmp inc dec lds fnstenv xor bound out cmpsb push cmpsl daa dec inc adc add jmp mov gs sbb popa aaa stos push cmpsb shll (bad) sbb pop addb pop mov cltd jo pop jo lahf mov jno mov fldl xchg fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl in jg in inc enter aas (bad) test dec pop mov xchg and sub cmpsl pop in lea shrl push ret or lret mov or (bad) cmp adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov push mov movsb xchg xor adc repz lds stos cwtl or jge mov bound call test repz pop andl test pop js jb lods shlb mov addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov aas lods sbb lods jns sti popa mov hlt lods mov fidivs test pushf or xorl je testb pop jns sub gs fstps stc xorl jno pmaxsw jecxz pop stos mov pop test push sub rolb aas fwait (bad) loope stos lods pop incb sub and mov les push stos mov xchg fistpl lds iret out (bad) in fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov push push pop int3 mov mov jge cmp and loop mov in sbbl xor add cmp sub aad fiaddl test imul popf push push into subl aad sbb not je cmp mov orl mov hlt mov sbb push cmc adcl ret dec cltd push mov xchg mov andb in mov jg addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov mov and push test int3 cld outsb pop inc cwtl aad cmp or jmp adc lea adcb sbb aaa pushf test mov push scas pop push lcall pop ja mov aad test popa pop dec jae dec fisubrs adcl add addl call pop fldl fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov subb cld mov stos dec mov mov test and pusha jl mov imul pop sbb jae dec sbbb les in popf andl fcompp jnp iret jp aad xor xor scas lods fs jmp mov inc mov int push bound push sarl mov and or idivl std lock js and xchg jbe out add adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl add or xchg dec lds fisttps outsl xchg sbb xchg dec test es filds sub in rolb loope cmp test add sbb scas inc lret ret rolb imul add and les mov ficompl mov or mov sbb fldenv mov mov inc testb pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmp subb lock or jp test arpl movsb dec mov imul scas pop out mov pop mov inc ljmp into xor mov push pop xor xor sbbb adcl in mov inc mov lret mov cmp lahf gs aas xchg or adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov aam (bad) out ja add orb sub bound adc sub subl cmc or aas mov jg dec jmp setno mov xor ja push jge inc jle mov xchg dec push push fcom jbe movsl jmp repz adc dec add addl adc in and int test mov inc ds pop lahf mov rcr pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl add xor addl push inc adc xchg lret cmpl push mov scas popa sbb and mov into push xchg clc adc fs lret rol xchg icebp outsl mov cmpsl mov scas insb test fstps and ljmp sbb cltd call or aam into icebp xor and repnz mov addl test cmp rclb test dec push push fnstenv inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl int3 cmpsl or les push sub in mov jnp fcmovne inc jbe xchg lahf inc mov cld rcrl push test adc rorb out fucom popa inc pushf fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov ja cmc mov mov enter jg mov or mov movsl jmp les in pusha add xor jg cmpsb es out icebp cmpsl sti inc and sbb lcall mov xor cmp outsb cmp icebp push mov mov inc jnp mov (bad) or and orl or (bad) dec fidivl out lea ret dec lods mov push cmpsl or or mov push xchg test add out fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cmp orl lea dec (bad) loopne,pt sub lea stos out xchg jae mov cmpsl xor ffreep mov rcll lods es xor enter adc push sub sahf and xor in test aam pop or adc dec mov adc hlt daa rcrb call orb icebp push addr16 sbb xor movsb jno shll pop jae data16 notl addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl test inc and popa add adc mov mov push fwait sbb cmp mov jnp mov int3 into mov or sar fs in adc mov jnp,pn lret xrelease push out jmp lret mov addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov or xlat nop mov lret dec lea sbb mov cmp lret push shrb add das or sub sbb adc mov in xchg mov popa insb aad scas cmp lea and xchg pop pop dec or sub jl pop mul jbe jnp,pt fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl adc mov cmc leave repz leave lds pop jnp insl or jmp movsl call cmp jle pop add mov shl mov ficoml pusha mov mov jecxz xor aam test mov push and pop aas add mov into fs (bad) jne dec lret jne fs shll pop xor adc shll fists mov pusha mov aad dec int3 mov cmpsb ret or xchg push add adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl add xor int mov call push pop aam mov and mov dec lods xchg data16 push call xor ljmp shlb aad lods lret add and (bad) fcoml or std lcall pop addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov loopne sub fyl2xp1 xchg add or inc xchg xor pop jbe or add fisttpll jae or rorb gs lds jbe loope push aam dec mov adc mov lds movsl pop mov cli aam dec insl mov andnps mov adc pushf call cwtl xchg cltd push xor adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl movsb jbe inc fcmove mov and push jae dec pusha pop add lcall push jne rolb rcrb inc mov (bad) xchg or dec imul loope lret mov push bound movsl in fistpl pop in mov cmp ds inc mov (bad) fdivs (bad) in push insl cld fisubl pop mov xchg std or adc ror xchg repnz adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl lcall inc aad hlt loopne xchg inc dec xchg mov sub punpckhbw sub adc data16 pop sahf std addb mov loop stc outsb int3 sub loop inc cs clc sub xor out cld hlt push and fnstcw gs inc sbb xchg movsl in outsl arpl jecxz pop pusha cltd xchg jnp imul ret pop scas aas in xchg addr16 repz int3 enter addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov cmp push sub loopne lds or adc arpl cmp cmpsl cmpb loopne add push repnz sbbl mov cmpsb test adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov dec mov int3 inc jns cs inc mov mov pop mov stos push roll pop aam sub jmp jl xor rclb pushf das mov add aad adc fnstenv inc sub inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl (bad) std lcall push bound in lods xor add andl iret jo adc adc pushf jmp push push push jne push sub nop ret jno mov mov mov jnp jb xor mov mov (bad) cmpsl bound scas sub jmp add dec fbld out xor (bad) mov jae cmp aas decb imul test jp pop int3 clc or pop addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov pop (bad) fldl and add lcall cmp xchg mov les push dec pop inc test lock inc jo push xchg sub mov xlat add cwtl loop jns std stos adc xchg jno aas addb mov push cwtl fs dec sbb daa ljmp add fisubrl iret xor aad popf sbb loop lret mov out push stc inc jo js out pop sbb inc mov fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cwtl push xchg or out loop jo dec mov lods dec mov scas movsl sbb int3 aaa mov mov fstpl cmc test sub jl cmpsb pop xchg in outsl lods adc loopne mov pop add jbe mov cltd fstps sub xlat dec outsb ret inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl pop decb or xchg lods cmp scas mov negl xchg test xor lret sti adc xor mov test aam dec xchg daa lock jnp lret add fs sub mov add in subb aas test inc iret std mov sbb mov mov cltd mov inc pop ret stos xchg mov into mov movsb fs dec ret (bad) mov mov addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov roll movl sbb fcmovnbe out mov mov mov xchg cwtl repnz popf enter mov push in sbbb mov jge add jb nop and int3 rcl clc shr in leave scas inc push and test sti rcrb loop xor fisttps lret jae mov jno testb clc repnz pop inc sarl testl lret rcll fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl stos subl or leave jmp or test dec adc push test mov mov ljmp mov shl andl jae out dec std mov fdivp mov movsl mov clc loop add inc inc int mov push sub jbe mov mov mov mov subl mov mov in mov xchg cmpl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl xor cld fstp inc iret inc cmp sbb xchg sub or repz xchg in adcb push and ja fabs or test aas (bad) enter mov sub addr16 lods inc xchg mov adc clc jmp cmc std movd mov cltd std add cmpsl ret mov xor aam movsb fistl in mov stc (bad) ja add fs xor mov add xor pop add addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov icebp mov xor int3 mov sbb pop lcall jb,pn in sub push cmpsb adc push (bad) (bad) pop xor loop xor add sub sbb push aas loop jp xchg into xor stc cltd stc xlat cmp sub imul sahf or push js xchg arpl into outsl ror lds jbe push xchg push orl mov aas mov xor lods sub xchg or mov cmc fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jge shr pushf mov movsl inc lods pop dec mov inc mov pop xor jmp mov test sti lock stos cmp shll cmp hlt add and insb test mov mov in lock xor mov push add fcoml and lcall mov fiadds adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl dec pcmpeqb mov scas hlt push or andb jb mov and nop in movsb sar hlt fs lret filds fcompl mov fnstsw dec push mov add nop dec (bad) nop into cmpsb push shlb repz roll clc mov lock arpl cmp andb in repz es pop or rcrb xor adc xor movsb iret fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov ljmp sub dec mov (bad) mov or out mov or cmpsl imul fcompl pop filds mov imul push jle outsl add or test call lods push lods arpl xor (bad) shlb in sbb jno adc repz inc sub mov add mov adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov clc jne mov daa frstor push testb fnstcw xchg test cwtl mov nop pop xchg add leave mov pop mov mov push push mov sbb sub cmp xchg insb loopne sub jno test mov lea mov scas les test mov push mov (bad) lret enter inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl sbb ss mov sbb call in adcb jecxz push and fcoml repz stos addr16 nop cmp stos lods addr16 sub lea (bad) push inc fwait xor xor jecxz dec out or lock arpl test xor fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov addb sbb and les roll mov dec inc and lods out rorl pop mov in mov xor mov enter and or adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl outsb into pop out or cmpsb in add or in mov lea mov inc ss xor adc jecxz mov mov int3 flds je lock dec ja aaa or dec jmp (bad) shl xor push sub mov test pusha dec repz (bad) shlb pop das mov sbb cltd cmp mov mov repz ss mov inc in inc fldl mov lahf int jnp mov scas pop in callw adc adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl adc pop sbbl cmc (bad) in mov adcl scas jl sbb sub dec fwait add orb test andb mov test loopne bound iret inc (bad) pop cld fstpl xor mov mov cmp mov dec jp xchg inc mov push mov lds movsl push add dec repnz fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov lds int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push mov push call push push push mov push call push call mov push call add push mov push call mov mov push mov push call add test jne xor jmp push push push lea push call test je lea push call lea push call jmp mov mov pop ret int3 jmp jmp int3 int3 int3 int3 int3 int3 pop addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov iret fdivr nop mov sahf jge jbe mov ljmp pop xchg outsl mov nop test mov insl popa or or adc fs sub sub stc lahf in enter fwait mov mov add insl sub insl sbb or andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl lahf in scas insl cmp repnz and shll roll in stos inc mov jle inc xor test inc add jecxz rorb stos lock adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl test or std sbb cmp xchg lahf inc pop lds movsb jo or sub les pop mov fimuls jmp cs ljmp jns stos or pop mov fadd repz nop sub into ret mov adcb or and (bad) inc or outsl fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov sbb inc sub mov stos dec xchg cli jge movsl (bad) loopne shrb dec mov cli cmp lods pop in arpl shr pop outsb or inc mov je xchg out in or aas rolb xchg mov pop call xchg leave aad sub mov les fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl rolb cmp pop in adc inc subb mov inc pop mov (bad) lret addr16 dec shl mov test xorb xlat enter xchg cmp dec xor int3 mov sbb leave mov out and add push mov push leave shlb loop mov dec test jnp mov jb mov dec inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl movsb (bad) mov nop sub jbe sub pop imul (bad) dec jmp xor push jp cmp sbb adc xlat mov or mov add lds ds lea pop jl sbb test xchg dec in fs in xor inc stos flds jnp push subl adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov sbb fimull push push incl dec mov add xchg orl test or push fidivs cwtl cmp pop sahf cli dec mov push jo lea sub jne cmp mov pop sub xchg mov or sub (bad) adc sub or jmp mov add fsubl cmpsl inc sub cmpsl mov push jbe lea cmpsb shrl add lea aam ficoms mov and jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl push jae insl adc or mov push push fnstenv hlt div mov icebp lds inc pop and cltd je std stos stos lea cmp cmp xchg lea cmp dec int xchg les pop jg cmpsl jnp adc aas mov mov (bad) inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl sysret in insl dec adc add xor pop mov out sub movsb fcmovnb mov insb mov dec stos push mov or pop fnstsw xor (bad) hlt xchg cltd fdivp jno pop out xor cmp and dec cmp xchg cmpsb fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov add scas xchg lds mov std iret repnz (bad) xchg cmp test pop ljmp insb dec dec xor jbe ror mov ror adc loopne mov aam andb test enter push sti (bad) or xor mov rorb scas xor outsl cmpsl (bad) (bad) mov sub mov xor and jg dec nop mov adcb xor shll inc jne je pop enter jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cld or aas (bad) sarb push jp fwait int das ret mov jnp adc push inc idiv xchg cmp rol addr16 icebp jbe inc shr xchg push cmp or icebp test mov incb jbe rcrb icebp inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl lcall icebp insb pop stos jmp fstpl rcll (bad) or test cmc mov test les sbb cmp jle imul fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov jle lcall aam jg clc aas mov pop aam or loop popf divb mov ds jbe imul outsb inc insl lods jne cmp andl add and popf pop or fisubs cmp ret mov pushf addl (bad) mov testb pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl aam aad xchg xor jp mov pop pop outsb or add and inc loope pusha push push jecxz lret rolb ja fisubs lret cwtl (bad) idivl adc mov les fdivs loopne mov nop out mov mov lret pop adc mov xchg jge push adc cmp adc add sbb push inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl sti les rep sarl cwtl pusha test lret js adc sbb mov in (bad) cli jl rcl jbe cmp jecxz xor (bad) jmp outsb or inc les mov fsubrp mov pop in test lret mov aas mov enter je iret into sbb rcr scas stc mov pusha jg jmp mov xchg cmc iret add imul mov icebp ss sbb repnz int fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov pop lahf jns jg stos loop cs int add roll scas and pusha sti cmp stos dec fs xchg stos mov lods (bad) mov jae test lahf adc aam imul lds in out (bad) das scas xchg xchg js jp (bad) lds inc cmc sahf inc dec jns (bad) mov pop mov cs dec mov fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl or outsl xchg jbe add divl mov sbb les int sub add push xchg pop push push xchg pop test js jbe cwtl outsb adcl inc (bad) int pop mov jecxz push dec jle icebp xor lds xor cli sbb dec push dec aad dec psrld mov pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl sub mov movsb push js push inc cld pop lcall incl sbb push add mov push sbb sbb jb movsl insl push movsl enter add sub sub fistl in xor pop insl imul sti mov adc pop imulb imul cmp sbbl mov and push mov test inc cmp xchg int or into je inc mov addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov pusha fnstsw cmpl or nop hlt mov test mov shrb (bad) adc pop ja xor insl xor shrl movsl jns lods outsb xchg insl rolb int3 mov (bad) andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov pop mov out fimull (bad) rolb addl cltd arpl xchg ja shlb xchg in push sbb mov sbb (bad) mov ficoms mov rcl jl inc stos (bad) lret (bad) iret mov or insl or inc test orl pop in cmc push out pop (bad) mov pop mov mov mov push cld and sub inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl out jge or and pop mov cmp push add in iret and loop out test shrb loop xchg pop inc pop shl imul push cld cs addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov inc fimuls adc int3 pop cmp in je js jns in iret shrl leave addl (bad) mov add idiv lds arpl call cltd sbb jge in lea mov ret and test mov repz or test dec mov pop xor sti out or in sbb fidivrl sahf sub or adc xchg lahf cwtl stos cli out adcl (bad) pause sub adc inc cmpb cli inc xchg cltd and jnp adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl inc (bad) pop icebp cld cli js mov or inc push cmpsl cli fidivrs pop add xchg popf xor or inc popf ret cmp arpl mov pop pop mov pop xchg xbegin fmulp mov cli loope popf mov subb sti loope cli push inc mov inc push enter and mov mov subl in adc and push sub mov pop add or outsb push mov cmc push cltd or xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl sub sbb cmp fwait cli imul int3 fmuls leave pop (bad) push sbb (bad) dec pop test mov mov test and jno (bad) out jecxz int add shrb xchg pop sub xchg lods sbb ds push pop cld adc push pop or (bad) (bad) in mov stos ljmp ror push mov inc xor xchg inc clc pop sbbb mov jns mov inc jp adc push insb fistpll lret int sbb adc fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov xorl imul xor xchg dec dec int mov push lret scas call jbe int3 movsl int add jp je adc nop int pop jno loopne pop xchg lret pop cmp int test xchg sbb scas fdivrl imul cwtl mov test mov (bad) xor ret xor outsb pop mov in fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl xor movsb outsl dec call in lcall or fsubrp sub cmovs cmovae ljmp flds test int test mov adc pushf cli pop mov movsw xlat lret xchg sub and dec jbe fwait sub sbb repnz xchg mov adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl xchg movsb loop cs dec lret js aaa ja xchg les je add push fiadds or fld or fsubrs xor lcall push pushf xor in xor push mov fildll mov jnp fsubrs dec sub test addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov andb shrl (bad) or lea pop xchg subb out sbb test dec sub hlt mov jae add leave mov cmpsb jno std xchg loopne fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jp shrb sbb int jg pushf push sub fsubl test repnz imull cmp movsl mov lds mov sbb fwait pop fisttpl xor push xor popf je xchg fnstcw mov inc xor mov cwtl orl push adc jae rol cmpsl sbb mov fsub lds (bad) div outsl mov inc sti xchg cwtl stc fcoms jbe fidivl xor xchg icebp stos (bad) mov sub pop int3 sbb addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl scas sub lds fwait push cwtl pop lea mov jns xchg lea xor popa shlb inc adcl pop test add mov adc and adc mov inc sub dec outsl xchg shl lea icebp mov jl mov repnz adc adc (bad) insb andl movsl cmp insl jae sbb addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov js dec insb sub into cwtl sbb (bad) aaa xor stc repnz pop loope mov jle insl sbb mov negl mov cmc mov pop xchg or daa mov movsl add add push lahf aad int3 fucom and imul sbbl cmp out pop add rorb fwait mov pop icebp int3 jns je xlat test sbb or xchg sarb dec lret xor mov daa ds fldcw dec loopne sub dec add fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl dec dec leave and mov mov cmp sub loope mov jo push rolb adc (bad) hlt mov adc sbb shrl fnstsw mov fmulp cltd sbb fnsave cmp adc push into jmp call int mov mov and fldl mov inc or (bad) (bad) rolb data16 xchg adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl adc out jae fucomp inc fs mov mov fnsave sbb aad test push std jecxz je push (bad) jp adc jb pop mov add in outsb jb lcall mov mov mov sbb gs and test jecxz (bad) jno scas test adcl fucom call addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov sub sahf enter out daa testl jmp (bad) mov inc int es rcrl fnstsw sarl xchg mov outsl push xchg mov clc cwtl int mov scas jbe adc int3 fnstcw testb fld mov mov daa fnsave jae xlat cmp into sbb mov jne int3 out add ss inc pop xor adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl sbb xchg add mov mov into xorl push fld or mov lret call jno stos mov xorb mov jge pop mov adc xchg stos cs fstpt lds pop iret imul inc repnz adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov pop imul mov bound pop addr16 lds mov and outsl test lcall push lret add jecxz mov jp dec jle add cmp scas ljmpw adc cmp adc stos push sbb addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov fiaddl in test cmp enter inc or sbbl mov add dec loope les lret sub movsl sbb mov xchg mov mov aam xchg xchg mov ss pop sub pop jns lock mov pop xor jno push stos dec jne pop aam xchg call sub mov or ret push add stos cmpsl fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl aam mov mov jl lock xor xorl scas and ja pushf dec mov and pop xor je mov push cmp cld mov adc xor xchg clc pop aad xchg mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl imul mov test or aam aas cs mov or outsb add xor push mov xchg mov sarl leave int fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov push scas mull or in xor jae jae sbb loopne mov popa mov xchg idivl (bad) out loopne jmp aam test stos cmp mov pop cld xchg lds stc test stc pusha test idivl (bad) icebp xor addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl lock aas scas shll sbb lods cmc outsb int3 mov mov test mov adc mov adc icebp push cld xor cmpsl call out lods loope xchg iret and cmp jge add sub popa clc nop pop add pop inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov pop mov imul sbb test sbb and push cli pop stos xchg scas pop frndint push or jb data16 pop mov pop arpl dec das mov inc inc push cwtl in in mov jp or push ds sub add xchg std fistl push inc rorl push adc pop lds or push sti insb push into loopne std lds mov add xchg adc stc xlat push ficompl fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov and jmp jp movsb cmp clc push insl dec pop mov xor (bad) (bad) mov and cs mov ficoml orl pop insl shrl adc cmp ret mov xchg adc adc xchg sbb aas insl cmp cmp ret xchg push push dec shrb pop and addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov arpl or stos xchg cmp iret insl call sbb sub cmp xchg cwtl popa push (bad) jmp jle cmp pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl push movsb nop xor cwtl pusha cmpsl fnstsw push sub out xchg sbb pusha out and mov xchg dec cmp and imul mov push push adc jb add jbe mov popf in cmpsl xor incb dec rcr loopne push in or mov push pop mov out and in push fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov stos pop nop ret rcll push mov cmp loope (bad) ret mov orb shlb lea sbb test push (bad) in pop cmp enter loopne pop js ret or enter lret dec push int3 add mov xchg jle xchg add (bad) into pop add xchg and inc je notb mov test scas outsb pop in mov sub sbb adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl (bad) dec xchg lcall mov sarb aam mov mov sti cmp push cld mov lea sub mov xor and or movsl inc or fs cli iret aas cmpb rorl adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl xchg hlt cmpsb pop inc pushl xor or cmc lret bound (bad) call iret insl push push pop out test jge push pusha jg cmpsb out sbb cmp das lea addb cmp pop mov test nop in in mov xor pop lret mov pusha or mov xchg fst xor fwait pop dec (bad) and addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov and in fnstsw roll insl stc mov adc test mov or fucom mov fadds lock ffree mov in mov out test fsubr inc imul (bad) rcll fst pop inc adc mov inc in sti stos jecxz movsl cmp out mov dec cli xor js mov cmp mov cmpb or or mov cmpl sbb adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jge mov rcrl pop mov mov jo arpl cmpsb mov xchg aam pop xchg inc ja cmp popf or test leave fucomip mov cmp xor mov nop jns jp lods fsubrp enter xor cmp pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl divl or scas stos sar in xor test xlat mov pop xor mov fnstenv cmc out mov sub test jmp push out jle push xchg jns insb in loop sahf orb cmpl jle sbb sbb mov xchg cmpsl repnz lcall push xor cmp pop addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov imulb jmp (bad) sti lds lret loope mov lods fbstp icebp rorb push add imul and popa push scas icebp cmpsl out daa sarb sub mov mov lcall jns das ret popf loop rorl sub jp and xchg jns xor sub out adc push popa mov repnz dec mov shrl stos add pusha mov adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl arpl pop je scas pusha mov dec and dec mov pusha mov jge sub adc sbb in or mov incb dec test xor xchg pop inc or mov xor dec adc mov shr or std lods push sbb jmp xchg int3 addb mov inc ljmp push cwtl cmpsb int ds cmp adc sahf imul ds mov pop sub nop sub add insl inc xchg repz (bad) lds xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl outsl and movsb jecxz lea aas xchg xchg mov and cs cs mov (bad) mov fwait inc push lods js add rol jb scas push stc mov sub in or std jge fiadds sbb mov add into fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov xor inc and sbb and xlat mov pop mov movsb popf sbb ljmp in xor cltd push test cmc adc lods pop lods add mov sar test sbb xchg mov movsl int ds cmpsl fldenv inc out pop and push push jns adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl pop sub fucom pushf in or call ss mov fstl inc cmp bound cmp fldl push movsl mov pop push (bad) pop push scas mov test int pop adcb imul inc mov fildl xor and push push adc push orl xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl rclb cwtl (bad) fistl and dec xchg es nop pop xor repz inc (bad) jbe cmp xor xor sub stc mov lret enter cmpsb in clc xchg in lods sahf mov xor lock iret mov adc mov xchg pop shlb sub pusha or int mov scas ljmp mov lock imul add adcl ret mov fidivs (bad) cwtl (bad) out adc test addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov mov push xchg pop sar icebp nopl lret mov mov icebp push mov xor testb icebp push mov xorb addb icebp aas jecxz jb mov fists fcompl addl dec movsb mov cmpsl mov fnstsw or xchg xchg (bad) fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jecxz pop in icebp mov push dec aam pop jno ror dec sub gs in mov arpl push sbb ret jne jmp mov jne jo xchg add (bad) loop,pn xor inc (bad) pop lds fwait mov adc cmp cwtl sti mov mov push loop sub jne cmpsl adc int3 adc jge xchg inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl push in push dec and sbb add dec sahf or push mov dec cli dec sbb sub cwtl adc cmp mov jo orb push fbstp xor pop insl lock sbb lcall mov add fcmovnu lahf push sub nop leave mov lods insl nop int cmc mov add or int3 xchg out xchg xor scas mov stc mov fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov repz inc cmp nop and fwait sbb mov (bad) adc cmpsb aad ret or push pop cld call inc mov pop or iret loopne adcb sub pop or add (bad) mov pusha ja sub int3 ret (bad) push push ret xchg xchg out adc rcll mov pop lds jne add mov scas pop or pop dec out adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl push (bad) addb inc jl xor pop out imul stos outsl or xchg jg pushf rclb dec xchg xor decl jo arpl (bad) cmp mov cmp or push aaa lods iret pop and xchg inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov cmp jae enter (bad) int3 xorb negl cwtl repz mov push mov jg cld xorl xchg jmp in adc outsb mov jmp or mov in dec mov mov addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov jle loope cltd pusha push xorb insb les pusha shll cld or ljmp popf sbbl aad mov dec xor xor xor adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl data16 outsb not mov jmp cmpl mov adc fsubs xor xor into mov pop add pusha inc je repnz pop gs pusha outsl sbb push test xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl pusha xor lds jnp lock rcl pop int jecxz fwait adc cwtl sbbb fldenv mov cmp insb xchg or mov aam and xchg mov popa jb addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov scas sbbb test je in ret jp mov int3 push in xchg xchg test fwait cmp lock inc aam (bad) imul jle inc mov imul mov aas jo or popf push (bad) insb adc fstl adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl outsb movsb call in or loopne xchg mov pop cmp stos cli sub xchg cmpsb mov adc cli inc cmpl adc jb fnstcw cli lods push cmp lds andl xor cli cmp insl fwait xchg or mov fmuls cli or xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov lcall pop sbb insb xchg xor mov and data16 or or inc lock mov test movsb mov int mov ficoms lret inc rorb daa mov adc test adc pop and rcll (bad) loop int fcoml mov cmp stos mov mov lcall mov fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov xor in mov ljmp mov or out divl mov ds lahf mov repnz pop cld (bad) incl mov dec sbb or aam in push fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl lods cmpl mov fstpl lea daa loop pushf lahf xor fmul cmpsb aaa fdiv lea jae xchg push sbbb push pop lret lods sbb xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov cmp dec out idivb test popl test mov test adcb or jbe (bad) cmp mov add (bad) imul and int xor xchg dec jns adc pop icebp xor scas fiadds popa adc and (bad) cmp inc push mov lcall inc lods mov mov inc fidivl fisttpll pop dec into push test addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov imul call mov sti outsl xchg loope ror fildl imul repz je rcll popf cli or (bad) stos hlt jp xchg jp push push cwtl inc and (bad) cltd fs xchg sub (bad) add xor (bad) pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl sbb (bad) cmp test sbb adc cli jbe lds jp jecxz sahf popf (bad) xchg mov push mov (bad) xchg (bad) es fs push lds fwait push hlt mov pop lds mov in xchg stos inc pop dec add mov hlt pop mov pop cmpsl push inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl jle int3 push in aam fnstcw add mov fdivp cmp cmp mov push ljmp enter addr16 mov cmp (bad) sarl inc std rorb insl cmp jle rcrb jmp (bad) gs or pop add outsb addb jecxz filds fbld lcall sbb lcall ja mov pushf jae test gs lcall push (bad) stc cmp cmp adc fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov in xor adc iret test mov xor test negl roll xor test inc pusha mov int3 test imul fidivrs push jbe out mov stos cmpsl mul lret (bad) mov inc inc jbe xor test and dec mov mulb mov jae shlb mov xor les repnz fisubrs adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl lret ffreep xor lods test nop into xchg testl out lods xchg push movsb mov pushf lcall cmp out or or (bad) push rclb sbb icebp add cwtl in mov mov sbb ret arpl lock adc cmc lcall fisubrs out icebp mov and maskmovq mull icebp (bad) fmull movsl pop pop pushf inc sub mov aad ds stos (bad) pop jmp scas or and addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov sub push cmpsl mov test push inc add push mov fwait cmp xchg cmpsl jne pslld jg cmc insb lahf inc pop test cmpsl mov ds push int push jle mov push lods dec jae cmpl xchg mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov daa mov xor jno lea lcall mov pusha faddl mov insb push addl mov popa lds fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl ss pushf sub fisttpl mov pusha lret xchg inc out ret bound xchg pusha mov adc pop jge in ja (bad) cwtl xchg push mov fs in addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl nop xor mov and cmp pusha mov or pop adc in xchg mov cmp push cld pmulhuw in adc mov pop xchg daa adc popa sbb mov mov ljmp aas inc lret push add clc jbe dec xor mov jl movsb cwtl mov xor cmp add mov and xchg cs or jae lock in repnz or je mov jmp adc and inc pop leave mov addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov in outsb push dec popf mov sbb repnz lods test dec xor dec loop iret jmp repz xor pop test pushf cli inc xchg scas idivl mov mov jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl iret clc js push dec sbb shrl lds dec xchg nop aaa xor mov mov stos pop inc mov rclb out mov iret sub fs mov mov xchg fmull xchg xor sahf xor xor lret mov cmpsb out stos mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl gs test adc divb mov imulb cli dec lods insl dec or fwait hlt fs sar loop adc ffree jns jp push mov movsl int dec cmpsl fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov push cs sbb mov sti stos cmp test scas enter push or sbb outsb xchg mov mov dec cmp cmp in adc pop popf sbb shrb cmp int lds add adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl outsb dec pop in sub sarb mov xchg cmp or mov xchg scas pop out (bad) icebp int imul jnp xchg in lods add sub notb jno mov lods push cltd sbb test push es inc sub adc adcb sbbb rorb popf pop mov insb inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl add jecxz psrlw lods popf repz int3 inc mov subl daa shl adc cld sbb jmp jns in mov shll aas lea ret add adc stc fisttpll imul inc imul inc push mov dec xor xor adc lea lret push iret adc and dec mov and (bad) in mov stc push jle mov pushf out cwtl clc mov add addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov pop fidivs fadds adc fwait pop adc aas sub adc jge movsl xor stc xor inc iret fisubs into mov pop aam add mov cld mov mov frstor adc and icebp jnp paddusw mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jl pop or rcll mov adc cmp es in stc add xchg jg mov popf fstpl lods or or frstor repz addl and js imul lea paddusw call subb hlt inc jae sub popf repz adc sbb in mov (bad) lds test jmp lret daa lods dec inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl jne iret in ja and fstps mov shll loope loop cs nop mov inc lds movsb (bad) cwtl mov popl push cltd lds mov pop dec mov cmp out inc aad lods xor mov add xlat lret iret sbb xchg fwait into cwtl add stos lds push ds dec dec dec adc lds lahf stos out sbbb sbb cmpsl daa fcmovnb outsl pop cmpsb or lds xchg aad addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov or test push mov xlat cmpsb sti pop insl adc (bad) fwait lds pop daa xor (bad) flds cmp movsb shr shll xlat test mov pop mov sahf xchg shll cmp mov and imul sub test add test dec int3 xor xchg fisttpll test jge je push aam orb mov enter push xchg mov xchg aam adc addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl into cmp sti (bad) aam lea push inc les rcrl and mov test fsubs sahf xchg mov lahf in aam ss ret add adc push xchg sbb clc loop and dec xor cmc push aam int cmp rcll loope jae inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl lret mov mov xchg add sbb and push mov add xor xchg data16 sbb adc push xchg jbe inc pop sbb sub xchg test call push xchg in icebp cwtl jecxz xor outsb pop mov jne shl sub xor dec lcall sarl adc and push test or mov fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov loop cmc push xchg sub pop clc mov xor icebp cmp xor xchg pop jmp movsl ret jns jmp xchg adcb andl fsubl addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cmp ret stos xchg vpsrlw shlb xchg jp orl lcall (bad) jae cmp sbb jne rclb xchg repz sbb leave les outsb push stos je inc lods mov mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl and lahf xor sbbl icebp outsb nop mov add das dec push aaa push push sbb int3 (bad) addr16 in dec dec jmp fidivl gs xchg inc out inc ret and pop pop dec lock sbb adcl mov popf push fisubrs xlat jmp sbb into mov xor test dec mov bound stos cmp fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 addl inc inc addl mov pop fstl fildll xchg inc out aaa dec add dec outsl loop xchg mov push movsl insb xor jns adcl (bad) div fwait sbb lea cmp icebp mov inc test mov or addl sub fdivrs clc shll jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl ja xchg stos jb mov addb mov mov fwait mov xchg (bad) mov loop mov lcall aas popa shrl fs test aam addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl pushf adc mov ds sub leave sub shl repnz pop mov pushf sub roll ret in cmc push push cmc fildl adc jge mov pop nop adc int adcb mov mov mov cld and push fistpl das fwait jno mov xor adc subl clc movsb push xchg addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov cmpsb aas pop xchg adc cmpsl xchg cmp mov mov outsb sbb outsl repz sbb adc dec orl pop jge mov ja jb xor dec fsubp fnsave insb and cmp xchg jnp dec xor fsts adc fdivr loop cmc stos mov (bad) push inc daa in cld shlb and fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov inc xor lods mov or add jmp and inc cmp shlb arpl ljmp push int push fmull add clc test in jae xor stos pop ljmp fwait push fstl adcl xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl int3 out and out inc (bad) cmp add jle cmp mov mov cmpsl and andl push push jns (bad) adc xor xor (bad) mov in das and (bad) xchg mov scas inc sub xchg mov (bad) insl inc cmp loopne dec fisttpll insl sbb scas das mov add sbb in mov sub popf xchg mov addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov jnp iret outsl repz mov aad pop sub mov jp fucom ljmp and inc inc fnstsw mov fs or sub mov cmp jg xchg data16 outsb add xchg inc lds scas dec gs clc mov mov jp stc outsl inc fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl xchg repz jmp adc ja andl push mov mov adc xor int3 cld clc addr16 mov imul test xor lea xchg rcr jae test pop (bad) in ds mov ficompl or ret add add lahf lea jmp add add out sub mov movsb push push inc adc lods mov int3 cmpl inc xchg mov addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl add dec (bad) sub lods push push jecxz,pt test pop mov in aam shll std lret mov cli mov test sar iret cmpsb mov dec xchg aas and jmp cmp mov and lret out mov mov or push inc adc jbe ljmp test jl out movsb mov addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov push aas icebp psrlw sbbb xchg idivl push mov jl jbe mov adc cmpsb mov out and out (bad) cwtl icebp jmp mov (bad) stos int3 mov push test push or lcall pop cld cmp je ljmp sar mov sub inc fucom daa and test mov mov add xchg sbb cwtl mov shlb cmp cmp pop insb jne add adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl inc xor lahf flds pop lea and jno add into loop add aas or xorb in jecxz clc pop pop sub sbb dec leave in negl adc test push mov sbb mov mov lcall add push imul cmpsb mov aad shrl sbb sub stos cwtl mov insl push and mov leave mov ja iret loopne inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl fcomps imul cmpsb test outsl andl imul frstor jno jnp or loopne cmpsb xchg mov es movsl in bound jo mov jae mov das xchg adc sbb pop dec outsl adc adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov iret sub nop call mov sarb xor (bad) add lds pop ja mov iret aam jns xchg lock aaa cmp pop adc jne out leave fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl push in and insb gs lret sbb test dec jl faddl sbb stos cmp mov sbbl repnz call adc xor outsl dec push sbb lods pop mov xchg or nop add xchg mov push xchg xor cmp inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl jae fdivrp repz stos xor fstpl les aas js dec out pop mov or jno orps mov inc cmpsb fldcw cmpsb ja push clc cli int3 mov or or pop xor addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov adc fstps push enter jl mov ret sbb sahf or enter fsub int3 mov mov adc enter outsb and scas sti pop shlb out decl ret mov or stc cs inc cmp gs mov xchg adc ja mov (bad) in hlt lock xchg sub daa jo icebp fstps sbb mov xor (bad) mov sub int fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl sbb insl leave pop mov mov sbb and fwait bound loope pop loop jp pop jne adc int3 loop xchg enter inc pushf movsl pop loopne sti mov ret xor jbe mov pop icebp push fnstsw cmpsb in lcall mov xchg mov jno dec leave add mov lret cmpl inc repz aam add insb mov jp dec jmp int mov iret fbld int mov adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmpsl pop pop out adc dec cli add loopne fsubrl add and shlb ret dec mov icebp adc lock scas rcrl bound dec sub hlt xchg cwtl dec enter adc cmpsb add stc and out mov shl dec shll dec aam push dec inc mov arpl int3 sar jo jmp icebp push adc scas in mov sub xor shll or stc mov xchg xor or addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov sbb les repz or sbb push fisttpll popf daa mov in add bound shll sbb xor stc out sub cwtl lret cmp inc lret repnz fbstp mov enter insb lcall enter inc mov sbb sbb mov in lret into and rolb ja scas popf push lods into lcall andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cld and xchg xor adc std lock cmc adc and outsb jne add jmp (bad) int fistl sti (bad) outsl movsl aad sbb jb inc mov packssdw inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov hlt test jg call pop shl and sub push in add sbb enter jp mov pushf mov nop mov dec data16 mov addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov sbb inc outsb imul lods pop out pop xchg xchg ja xlat and push in lock cmp repz mov inc mov sbb pop push js cld lea es pop fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl inc mov jae arpl push push fucomip bound out jb loopne or sahf scas popa pop dec ret xchg fwait dec lahf add andb stos dec nop add mov mov dec inc mov jae (bad) inc pushf lea cwtl leave cld adc (bad) (bad) fcomps mov xchg pop add imul xchg and clc addr16 fnstcw push insb fwait hlt push mov subl fcmovnu pusha mov std ficomps jge sti adc jge inc cmp stc mov pop addr16 addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl push inc aad push movsl mov in or xchg andl ss xchg xorl bound arpl aad adc jnp push xchg or dec mov iret (bad) in xchg gs fnstcw lret jp stos xchg mov in sub inc adc test jbe push mov cmpsb test scas cli sbb out adc cli and ret mov in arpl jle adcl loope sbb mov es fidivs mov adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov scas aam daa lret out outsb mov inc inc repz movsl lret jne shrl or pop inc jns andl jp xor xchg mov dec jge ret test mov pop push pop rcrb out lock mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl dec in pop (bad) cmp addb movsl xor inc xchg mov cmc test out insl mov addr16 dec in popf js ficomps or in insb outsb out in lods sbb adcl jg jmp inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl (bad) andb int3 je push xchg ljmp push frstor lret ss mov xchg mov cld add xchg sahf and notb fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov ljmp xchg and movsl jnp adc not sub pop icebp fstps ljmp sbbl cmpsl pop lret cmp cmp mov push jb,pt jbe andb adc jnp inc imul inc add push pop lods inc jge push fisttps xor movsl jp fcom push out xchg scas cmpsl scas int3 mov in push xor xor sbbl pusha aaa fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl into sbb loopne in in mov dec jbe out sbb mov cwtl fildll cmpl les les cld or push add sahf pop cmp movsl mov mov mov mov dec inc ret jg cmp std and sub fsubl xchg cmpb addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov fxch clc in xchg sbb adc cmp cltd repnz je inc movsb mov hlt adcl push xor or lret aad dec lcall add cltd adc stc repnz add mov dec stos pop jecxz outsb dec mov movsb sti aas popl stc push lahf mov loop adc push adc jg cltd cwtl sub out xchg fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov popa les push ja rorl stos rorb scas cwtl lret nop into xchg (bad) rolb push popf arpl jge mov imul or sub xchg push into stc pop movsb xchg fdiv sub clc subb xchg xorl popl sub lods rcll sbb push dec sbb xchg add mov das xorl cltd mov aam push push stc (bad) stc inc dec imul inc xor cmpsb jle xor rolb dec mov jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl and ret and inc jne (bad) daa lods sahf cmpsb xchg outsb xor loopne int sarl xchg xchg jg adc loop or mov cmp out mov loopne fidivl loop in inc push cmp pop mov stos shl and add nop push dec or test mov orb shr cmp mov inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl add fmuls (bad) dec into int3 xchg mov int fucomp enter inc je orb stos lods cs mov dec fidivs (bad) fnstcw dec cmp add mov mov pop dec adc je outsb das mov push in das orl imul mov scas mov ret gs xchg and pop daa mov mov lcall (bad) inc sbb repnz addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov adc les push imul sbb (bad) jne cmp cmp movsl divb sbb (bad) cmp or add cmp outsb ljmp (bad) ja pop cmp loop push jmp xor sub xlat cmpsb jbe addb pop inc fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl pop and aad dec push mov ja loope adc popf insl imul iret mov xchg les xor mov inc jmp divb jae push scas sbb imul ljmp push mov dec mov ficompl test adcl clc pop rcll (bad) cmp std addr16 ret or fisubrs adcb inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl (bad) lret dec add cmp sbb rorb ljmp jbe push fs push sbb xchg lret insb je xchg sbb jle scas pop sub cmpsb test roll (bad) fwait add out fs jne mov les jae jnp xorl pushf jae mov dec xor cmp loope fcmovu addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov push clc into scas xchg sbb push nop call bound mov add stos lahf xor lret pushf pushf and pop outsl imul movsb inc jmp xchg jnp clc or adc pop dec cmp pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jne add and loope mov loopne jne pop mov gs frstor sbb jp test ret jb ds je or dec cmp test (bad) jo pop movsb out jp,pt xor jl mov push lahf jl addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov mov outsb pusha inc adc and adc xor sub push stos lea xor jno (bad) and mov cli xor ss mov cmc and jo jno fimuls jg inc cmp inc int sbb mov cmc adc xchg push xchg movsl sbb fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov add test out mov xchg xor adc mov pop leave lcall dec pushf sub stos jb push fldl mov inc dec inc sbb in mov inc jge (bad) or cmp cmpsb adcb lock inc mov lret jecxz inc addr16 pop bsf or pop int and iret lahf iret call mov dec repz cmc out cmp inc loope (bad) aaa out lahf pop cmp (bad) std dec adc fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl lods aas std lods in lret fmuls nop stos test or loop ret cmpsb cltd movsb clc adc xor adc inc js insb cmp xchg (bad) out in pop xchg rolb rcll lock pop push mov loopne outsl mov jno mov mov sarb mov dec push fstps dec pop xchg rorl or jge inc enter add (bad) push dec inc cmpsl mov push dec add ret push inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl out int3 shl mov outsb inc loope push insl sbb repz mov xor int3 out inc sbb jmp popa mov jmp scas nop or (bad) mov jl adc xor xor or mov adc out roll jns xchg iret add aas xor jg sub pop dec insb les ss sbb cs roll mov lret mov call loopne add jmpw mov xchg testl scas push mov jmp addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov out test dec clc or fwait pop ret mov mov sbb int3 rcr enter jbe sub rcll xchg leave lock in mov int inc add and or mov jge cmp xchg movsb loopne jg adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl adc mov sub mov sbbl mov cmp pop popa test jb lds shll or es push mov mov adc nop cld cs jge sti xlat (bad) xchg testb jno xor push and jne into add jo mov jmp fadds adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmpsl les adcb cmp pop and std xorb lcall cmp jecxz stos lcall adc hlt xchg call pop mov dec out jo cmp icebp leave test insl pop imul inc xchg sub sbb xchg (bad) cs sti push addr16 outsb mov sbb nop popf outsl add add sbb sbb repnz add cmp inc jb les mov cwtl pop les stos nop cmpl cmp cmp sbb adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov cmpsl pop shll mov pop mov insb sbb or xchg fistpl pushf xchg pop push inc outsl add popl sarl add aaa outsb in cmp aaa mov in loope fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl pop sub aas addl cmpsb inc cmp mov ret nop stos cmp gs pop adc cmp push testb in int xchg (bad) sbb inc ficoms inc bound movsb mov pop or pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl jo dec cli mov in mov ja arpl popf mov nop aad push pop push inc pop ljmp stc inc and mov mov fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov into jae mov stos mov or jnp lahf ds (bad) jmp outsb insl xchg cmpsl stos jp iret popa stc ljmp mov jl jbe clc fs sub xchg mov jnp cmp popf cmp js mov ds adc and test movsl icebp inc pop ss movsl jp inc adc call scas loop cmp call out cli push jns out arpl (bad) and push xchg push push lahf fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cmc repnz fbstp add aam or pop lea cld xchg inc push jg out dec adc popa test xchg hlt lods mov and daa xor sahf mov loopne call pushf xchg xchg pop fimuls sub sbb into xor xor mov adc push mov adc mov mov fstl mov push pop inc or xor maxps rclb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl adc jmp push (bad) push cmp iret push adc pop and sbbl aam mov xchg out loopne mov hlt hlt fstl call loopne sub addl xchg les cmc xchg (bad) push mov sti xchg pop (bad) cli notl ljmp addl or add scas sub test fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov push inc pushf xor push aas lret add subb xor insl mov scas (bad) out xchg rcr test mov out jb lea in dec adc mov jno ret xchg stos mov push fisubs cmc pop movsl pusha inc and adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl and jp jbe and jae xor mov pop pop into mov push flds filds scas test lret add les jo xchg or in test mov call adc add arpl push xchg mov push mov fldl inc inc or popf sti movsl stc popl or inc xchg imul cmp mov out xor shrb pop sbb sub mov ds mov adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov pop test mov rclb add mov enter mov es xor outsb push cmpsl add leave jae ds push adc adcb jns cmpsb or addr16 add fsts xchg mov xorb push push adcl rclb jmp gs cmc adc jbe int3 dec in sahf xchg pop mov scas das or add mov mov jl int inc mov fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov push lods shr inc lods mov jbe ljmp dec inc mov sti dec cmp push mov jnp mov das loop iret push cmc cmpsb repz std jne push sbb into cmpsb test rorl arpl cmc xchg fnstenv lock (bad) mulb inc jnp xor jecxz aas sbb lea lcall mov nop les sahf sub pop mov xchg pop dec mov in xor fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl sbb add lret popa pop ret cmp cmp pop xlat int3 shr fisttps aad nop (bad) (bad) imul stos sahf icebp (bad) or mov or dec xchg xorb xchg mov push sbb cmpsb mov pop popl and lds inc (bad) (bad) mov subl xchg xorb fwait (bad) adc push push mov fneni(8087 aad inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl test mov cmp mov fisubs mov scas inc aam jns xchg les push push push (bad) mov cmp cmpsl in cltd fildl hlt std jecxz sub stos outsb movsl movsb sbb popa lods push xchg inc jp aas xchg mov (bad) imul ljmp addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov mov and inc inc sarl xchg aad ret mov pop enter pop outsb jnp (bad) sarb xchg adc arpl xchg pop and sub fistpl jge repz sub or and ret jg and add pop scas dec mov jae sub sbb call rcll cwtl jnp mov cwtl fistpl jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl bound pusha gs (bad) jns enter cmp cmp pop lret pop enter mov test call pop add ja or pop mov xorl pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl shl cmpsb dec adc aaa mov (bad) mov jge sti sbb xchg insl mov pop into (bad) jns ret and and mov aaa aas mov out add push xchg mov (bad) loopne stc or dec cs push incl jo push repnz adc orl addl daa push jbe lret mov dec das dec fs sbb cmp mov les mov fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov adc loop lret adc dec adc mov nop (bad) cmc ret movl std int3 push mov push aaa dec test add add jae add jno add add add in push push push push mov mov mov sub mov mov mov push push push mov mov call lea lea pushl push push lea push call add push push call add movl mov mov mov cmp jne mov inc mov test je cmp jne cmpb jne inc jmp cmp jbe inc cmpb ja cmpb je cmpb ja inc cmpb jne movl lea push call testb mov je movzwl push push push push call push call push call jmp mov mov mov mov pushl push call add ret mov pushl call add movl mov pop mov pop pop mov pop ret jmp repz adc sbbl sbb xchg ja fisubrl stos dec dec mov lret cmp push scas jbe dec andl test cmp inc sub test push js popf test and movsb mov jns int3 out ret mov addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl arpl les mov xor pop movsb loope loop mov or rol jne sub cld mov arpl lcall sbb dec sub jb sti mov add xor cmpb fwait out popl adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov (bad) imul nop sti lods mov jmp push fwait xchg or mov movsb dec negb xchg in jmp les pushf (bad) aaa lret and xchg repnz dec in das dec test in in mov sub lret jmp adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov sub scas xchg ja adcl cwtl arpl push dec iret and cmp loope pop hlt inc cmp scas adcl pop pop pusha ret and xchg mov stos mov dec inc js mov shll ss out cmp adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl push call js mov popl aam mov pop shr pop mov xchg aas xchg bound lods pop and rcl ljmp dec in sbbb add sbb stc nop xlat loop or cld pop fdivrs xor sub jmp mov jle xchg push lds mov adc jl,pt mov lcall or lds and jl into inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl sub rolb cmc sub mov roll fstpl and inc mov fnstenv (bad) mov add inc test call lock movsb in aam stos movsb lods dec jae pusha lods push xor loope cmpsl (bad) cmp pushf daa sbbb out rcll pop les call clc or xor or sbb cmp cmc fsubrl xor sbb rcrb rorb scas test add stc addl cmpsb les scas fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov adc mov push lds mov mov or lret cmp push pop push xorb add mov int3 cmp dec push out dec mov or mov addb mov adcl jns mov and mov fwait shrb mov les adc stos push inc inc lea xchg neg jmp mov adc out fistps in jle xchg push cmp mov rcr adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jecxz insb cmpsb xchg push lods jnp std adc jnp cmp xchg mov fwait lahf and mov ds dec es inc cmpsl (bad) xchg mov aaa sti mov sub xchg iret push dec in test mov loope rol test stos pop ss test inc movsb in push mov pminsw and push jmp cmp inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl jo add ret mov cmp loope mov or adc mov or les jo cli and and xor mov clc movsb roll lock inc mov and fnstsw inc adc fisubrl scas jns ror mov repnz jge push mulb ja add cltd dec movsl test sbb jnp adc test mov out fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov add xor mov mov cmc fnstcw imul arpl out jp and inc xor mov ret fsubrl mov push jb inc lcall xchg pop xchg cmpsb je (bad) dec out jle sub out mov pop outsl cmp fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov or and lea test rorb inc adc mov cmpsl das int and xchg push cwtl xlat add fsubr xor push rorl loop sub mov jmp ja fwait push or dec dec (bad) adc add (bad) rcll dec cltd dec inc decb repz adc mov cmp addl mov call cmp xchg xor inc (bad) cltd sbb mov fldl inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cwtl sar pushf and movsl dec mov rol inc stos or aad xchg add add inc and rcll test mov lcall std fsubrs (bad) or add popf pusha addr16 shrl lods das xchg pop dec jae jne popf push addb dec mov call sbb push adcb out xor mov in sbbl fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov test shrb pusha (bad) xchg mov lret and insb and dec or popa repz popf insb std push jl mov push inc mov adc and add iret std xlat pop sahf mov add xchg sub adc sub adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl rol cmpsb xor or outsb fucomi jp jmp (bad) push and xor lods cmpsb lock pushf push cs adc leave fmull sbb cmpsl mov dec mov and shlb mov in jg loope pop xchg add mov in dec call mov xor xchg xor pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmp or in cmp out jg rclb pcmpgtw inc repz jmp cmc fsubrp jle cs xchg mov stos cwtl pop dec out sahf sbb adc mov gs mov mov pop xor orl call sbbb or push and mov imul mov mov imul cmp mov jae leave xor xchg inc loopne cwtl rcr addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov ret mov mov mov fisubrl insl sub sub mov pushf les imul aas dec sbb (bad) sbb mov jae add push xchg sar adc push jo hlt jo and mov xor lret addl jb out inc aas iret test sbb ss cld (bad) insl jecxz xchg fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl in shr out or enter or addl in mov (bad) into mov cmp cmc inc sub push jmp cmp mov stc ret cld push inc stc incb sub fs xlat repz jp ljmp scas inc jo ds sub leave push int3 aam bound inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl stc and push sub aaa dec inc fmull scas in push enter nop jns outsl xlat ljmp jne mov mov xor es mov lahf (bad) rorl icebp call stos insl cmp cwtl xchg pcmpgtd je pop fstps and mov dec and lcall mov int sbb ja mov jecxz ds pushf mov add fs xor mov (bad) mov cli xchg fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov lea loope in rcll mov sbb push cwtl clc dec rcr sarb sub movsl les fbstp stc adc xchg cmp in repz popa pop push push mov push cmpsb pop push jbe out pop jae jne adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl aas adc pop ss pop ds jnp adc jo mov in rcrl leave out pop xlat inc dec jecxz ss mov nop int mov sbb ss mov hlt std xor xchg and push and xchg inc jge scas xchg shrb pusha push add mov xchg pop pusha xorb inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl cmp xchg sti lcall jno lcall jg mov dec pop cmp push dec pop ret andb jmp jae clc mov inc mov xchg sbb addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov shlb mov ficomps jp iret xor push sbb out test lds mov mov xchg xlat repnz aad mov jo mov jbe mov in lea popa mov outsl (bad) mov insb ds cmpsb dec aaa scas push mov fdivl dec inc leave push cs call xchg pusha cltd pop adc ret fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov cmp push ficoms cmp fxch cmp jnp add out sub dec and arpl stos jbe push into sub decb push into dec adc sub sub stc ja and repz cwtl into or in sbb ficoms inc inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl push add lds mov cmp dec push xor orl stos push dec inc or or xchg dec movsb or push movsb add fnstcw fs iret rol mov lea adc addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov fsts cmp loope cmp movsl xlat sub mov addb hlt mov rcrl aaa les inc mov sbb cwtl xlat fcoml or mov jae aam pop in mov add inc andl and shlb fildl mov fisubs dec pxor or pop adc divb sti lods (bad) scas lret xchg cmpb adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov aas jg mov aaa xchg jmp imul push jmp (bad) int xchg sub adc ficoms sub ret test orb loope xor jae sub andl jno fldenv call lods inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov (bad) jns xchg mov mov clc mov rorl mov sbb outsl pusha jecxz pop cmp and pushf ret cmpsl into in cmp and aam cmpsb loopne add movsb adc inc outsl hlt adc movb notl push xchg mov rcll stos xchg dec outsl test cmp in ds mov add mov cmp addr16 add mov add inc inc jae fisubs mov cmp pop roll fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov roll add roll or ret movsb mov mov int mov or outsl inc and or xor adc (bad) sar (bad) cmpsl test or xchg mov mov daa xor and nop and sub loope push dec sti stos pop outsl fcoms insb clc xchg iret call mov ret and fwait pop movsb mov fisttpll jns and jnp outsl xchg mov fdiv fistpl jle scas mov orb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl jo icebp test fadd fistps dec sarb js sbb fstps aad shlb xor test arpl enter mov push xchg jecxz xor je fdivl xor sub test adcb sub jns inc push mov sbb inc mov call and sbb orl aaa orl in lret sbb add rcr stos icebp push jge inc sbb enter addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl test mov cltd cmp cmp mov rcl loope push mov fnstcw dec add popf sbb rorb lock cs aam add inc push pop push out mov std rorl lahf pop mov cmp cmpsl nop imul movsl shlb adcb incl sbb add fdivrs mov aad lods xor push (bad) mov or orb (bad) and addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov iret aaa sti addr16 mov or dec xchg int (bad) stos jp nop cmp xchg mov (bad) pop sub xchg insb mov and and rol pop insl fst lahf fdivs cmpsb outsl mov cmpb loope and dec or arpl ljmp pop jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov dec pop push daa sbb sarl lds mov mov in pop faddl jecxz dec rcrl mov lock or shlb stos mov pop xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl dec xor ret mov adc repnz mov push lahf test daa xchg cmp mov or xchg lcall sbb fisubrl lret sbb incl fldenv cltd scas je sub xor (bad) jnp cmp pop xlat call mov add fisttpll cmp sti cmpl dec add nop cld jg or inc fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov inc shrb fldt adc in test cmp movsb mov fisttps ret aad fsubp iret inc cmp dec sbb mov and pop jb push mov cmp jnp and int3 jne xchg lods fisubs loopne cs insb inc cs daa stos in jnp mov sub lret mov (bad) pop xchg pop and xlat and out cmp mov out mov mov jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl lahf repz adc fidivs and fcmove or lods std mov mov sub push sub (bad) add sbb add andl sub dec repnz les stos inc test adc cli add inc mov lcall mov mov xchg inc push add test and fcoml inc imul addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl out mov outsb shl jge fbstp lea mov sbb push adc xchg xchg xlat into mov imul dec into aam inc sbb fisubrs push gs push rol fstpl bound pop mov pop aas int adc mov daa pop mov xchg mov dec stos sbb pusha pop ds push dec mov jo push loop cmpl sahf xchg jl mov xlat xchg dec adc mov addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov pop shll adcb and push aaa sbb mov imul sub inc out mov jae inc out dec mov dec mov shl call insb add xor scas jle pand jno xchg in stos mov and rorl les sub stc add jnp dec addl mov sbb out ljmp andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl cli daa addr16 idiv pop mov mov (bad) pushf lea cs pop mov lcall imul jge stc in inc mov insb mov mov addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl jecxz jbe mov inc ficoml lret out xor popf fistps cmpsl push dec or daa lds xor idivb xchg jge ljmp test iret xchg jp xchg notb add push aad ret mov les jmp pop loopne js popa stc out and xchg fisttpll and sbb stc inc sbb popf fwait nop xchg mov test jnp scas inc aad lahf cmp ret inc test mov icebp xchg sub adcl pusha mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov jp mov les pop mov repz fucom mov xchg repnz hlt jb movsb mov jl add inc or js pop insl cmc movsb (bad) test sub adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov cmp mov xor adc out fwait or cli push (bad) clc fistl aam mov gs rcrl not xorl ror nop and addr16 testl jbe imul xchg addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl mov sbb mov mov roll pop or cmp pop ss orb out or addb and fldl addb addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl andl mov lret test jo or mov (bad) cmp or mov lret test and jae nop lcall andb andb or int3 aas adc mov mov ljmp mov insb nop cltd mov movsb inc fs xor mov lods xchg push adcb sub inc pop mov aad add mov nop adc dec call push inc (bad) ss js mov stos push jbe andl pop mov xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl push adc dec sub in aad or mov stos add mov or popf fstpl ja sbb pusha add mov data16 push mov push vmwrite and es les fstpl xchg fwait and ret mov data16 dec mov ds daa pusha xor int les insb insb fists inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl scas int3 dec dec pop dec mov les insl xchg js cwtl fs lds out cbtw xchg fwait lods and sbb cmp scas xchg add push ret arpl mov sbb jbe sub push popa mov or push add ret pop mov scas enter cmpsb lods jecxz jb lds xchg jmp lds mov lahf xchg xchg jbe sbb inc cs fwait adc adc push sbbl sbb mov or mov (bad) stc add addr16 es addl mov andb mov pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov bound inc push rcrl xor cmpsb push mov jne filds mov mov pop (bad) mov push lods test push mov mov pop xorl add iret push lret cld cmpsl fucomip (bad) cmp repnz and adcb addl adcb addl mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl mov cli or cli pop (bad) add inc test pushf ret (bad) imul daa bsr stc cmp nop aad xchg lret push sub cmp inc addb addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl jmp sahf jl push mov inc inc mov mov pop enter loop lcall or fildll adc add subl inc adc ja jne adc add addl mov addl addb pop int3 addb sbb addb inc inc andl adcl andl addl inc xchg adcb adcl andl mov xorb pop lock dec add lret mov pop lret xchg int3 cmpsl call aas jecxz xor into add lcall pop int mov sarb out inc rclb sub in addr16 or into or lret in mov int or cmp adcl fcoms icebp xchg pop popf std adcl mov leave or and mov or inc adc mov xchg inc lods cld mov movsl fcoms sti fldl mov addl xchg mov mov xchg addl xorl mov addb mov addl addl addl fldl fnsave pop mov addl loopne mov mov into stc mov in nop lods dec xchg lret loope shrb push pop (bad) enter jp cmp xchg mov jmp movaps stos push xchg pop subb pusha sbb imul (bad) pop xchg pop xchg inc lea jb popf pushf insb ss into cld aas pop rcr xchg fstl jecxz repz jo fucomi frstor fadds addl adcl addb mov addl mov addl pusha sbb mov sbb mov int3 addl mov adcl fldl adcl int3 andl andl ret (bad) outsl and popf sbb add inc and xor jo shrb mov filds sbb arpl sbb sbb (bad) cmp addb pop insl addl sarb dec popa jnp cld rolb or insl push stos mov popa mov lahf pop out in fcomi jg lahf testb cltd xchg mov stc xchg inc push subb addl addb addl adcl xorl pop andl inc andl adcl andl addl inc xchg adcb adcl int3 int3 int3 int3 int3 int3 push mov inc or inc push mov inc call mov dec mov dec push push mov push push jmp inc mov call pop add ret call mov mov inc mov jmp int3 pop cmp jmp enter inc adc pop dec xchg int sbb jmp jg pop cmp jmp or inc roll dec shl mov pop pop shlb inc sub gs and xlat je sbb test lock int dec push sbb pop arpl aaa sbb xor cmp and or dec in outsl adc mov lds jg mov xor adc sahf and sbb jl test sarl scas sub int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je cmpl je jmp mov jmp mov and movzwl cmp je mov and movzwl cmp jne mov and movzwl push mov push call mov jmp xor mov pop ret int3 int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld mov mov testl jne mov mov mov lea mov mov mov cmp je lea cmpl je push push lea call pop pop mov or je js mov push call add lea push push call add lea mov mov call mov lea mov jmp mov jmp mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret push mov mov mov push mov push call add pop ret
 push mov push push mov jmp lea mov push push call push call test jne call cmp je cmp je mov push pushl call cmp je mov mov movl test je push push pushl call push push pushl call pop pop xor pop ret int3 push mov mov movl test je push push pushl call push push pushl call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push lea push pushl mov movl call mov mov test jne pop xor pop mov pop ret push mov movb cmp jle mov test je cmpw jne movzwl lea cmp jne cmpw je or call mov test je mov push mov mov call cmp jne push push pushl call jmp cmp jne andb jmp cmp jne cmpl movl jne lea call test jne mov test je lea push push call test je mov and cmp jne mov mov mov inc cmp jl push call mov pop pop pop mov pop ret mov movb push call mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov push mov lea lea push push push push push call cmp jne push push push push lea push call lea test je mov cmpl je mov test je mov lea mov push pushl call test jne lea push call lea push call push push push push lea push call test jne jmp pushl call pop pop pop mov pop ret int3 push mov sub push push mov push push movl call mov push lea push lea push movl movl movl movl call test sete mov lea push call mov movl movl movl mov movl movzbl and or mov movl andb xor movl movl mov call andb mov movl movb movl movl movzbl and or mov movl movl movb movl mov pop pop mov pop ret int3 int3 push mov sub push push push mov call mov test je cmp je cmp jne cmpb je orb lea push pushl mov movl movl movl call test je cmpl jne push push xorps push lea movq push movl movl movl call mov test je push call test je push lea push pushl call test je lea push push xor call add test je lea push lea push movl call test je lea push movl movl call cmp jne lea mov call test je xor cmp jbe lea mov mov movl testb mov jne push call testb jne call orb mov movl push call push push pushl call mov mov test je push push mov sub lea movl call test jne push mov call jmp call inc cmp jb lea mov call mov pop pop pop mov pop ret lea xor call mov pop pop pop mov pop ret pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push cmpl lea je push push mov call mov test je push call movl movzwl test je mov pushl push call xor mov mov test je push call lea push call mov test je push call mov movl test je mov movl call lea push call mov movl test je push push pushl call push push pushl call testb movl je call mov mov test je push call movl mov movl test je mov push call mov test je mov push call testb movl je mov test je push call movl mov test je testb je push call pushl call mov test je push call xor cmp jbe mov pushl call inc cmp jb mov test je push push pushl call lea push call cmpb je pushl call mov movl test je cmp jne call movl pop pop pop ret push mov push mov mov movl movl movl test je push call pushl movl call pushl call lea push call lea call lea call push push pushl call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov movl call lea push call mov movl test je push push pushl call push push pushl call mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov orb call push cmp je push push pushl call pushl call pop mov pop ret call pushl call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push lea push push call mov mov mov mov mov add mov lea push movl movl movl call test setne test jne cmpl je lea push movl call test setne mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push mov call xor test setne xor xorps mov movl movq movl add mov cmp je lea lea mov and lea add mov mov and inc not xor lea xor cmpw lea jne push push lea push mov lea call push lea push lea push call lea push push push call mov test je call cmp setne xor and xor testb jne cmpb je cmpb jne lea call test jne mov pop pop pop mov pop ret mov pop pop pop mov pop ret cmpb je mov and call xor test mov cmovne mov pop pop pop mov pop ret push call push call lea call test jne mov pop pop pop mov pop ret testb mov jne push call testb jne call orb mov movl push call push push pushl call test je mov call mov test je push push sub lea call test je mov testb jne push call testb jne call orb mov movl push call push push pushl call mov test je push push sub lea movl call test jne push push pushl call testb jne push call testb jne call orb mov movl push call push push pushl call test je mov call mov test je lea push mov call test je mov testb jne push call testb jne call orb mov movl push call push push pushl call mov test je push push sub lea movl call test je push call push call mov call xor pop pop pop mov pop ret push push pushl call mov pop pop pop mov pop ret push mov call mov pop pop pop mov pop ret push mov call mov pop pop pop mov pop ret pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov and sub push push push push call push call push call push lea call call push lea call test jne mov jmp lea call mov lea call mov mov testb je mov test je call andb add dec jne push call pop pop mov pop mov pop ret int3 int3 int3 sub call push call int3 push mov testb movl je push xor cmp jbe mov mov pushl mov call inc cmp jb pop mov test je push push pushl call movl movl movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb je push xor cmp jbe mov mov pushl mov call inc cmp jb pop mov test je push push pushl call movl movl pop ret int3 int3 int3 int3 int3 push mov mov test je push push pushl call pop ret int3 int3 int3 push mov push mov call test jne or pop pop ret mov mov mov mov mov lea mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push testb mov je mov mov pushl call mov mov lea lea lea cmp jb cmp jae cmp ja je sub push push push call add decl mov lea lea call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov cmp jae testb je push mov mov mov pushl mov call inc cmp jb pop cmp jae mov mov shl test jne test je push push pushl call movl pop pop pop ret test jne call push push pushl call jmp push push push pushl call test je mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push push pushl call movl movl pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov lea mov lea lea cmp jb cmp jae cmp ja je sub push push push call add decl mov lea lea call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jae mov shl add call pop ret int3 int3 int3 push mov push mov lea mov test jne test je push push pushl call pop movl mov pop ret test jne call push push pushl call jmp push push push pushl call test je mov pop mov pop ret pop xor pop ret int3 int3 push push mov mov test je movzwl test je push xor xor cmp jne movzwl cmp je cmp jne add mov movzwl lea cmp ja shl add mov add add jmp lea cmp ja shl add mov add add jmp lea cmp ja shl add mov add add jmp test je or mov mov pop pop pop ret pop movl mov pop ret int3 push mov and sub push push push push mov call push call mov mov lea mov push pushl mov call test je cmp jne mov add mov cmovne push push lea push mov lea call test jne lea push movl call lea push push push push and push movl mov call mov test jne mov lea push lea push push lea mov call mov test je test je push call push call mov test jne lea push lea push call test je push lea push push call add mov pushl call mov push pushl call cmp je mov test je push push pushl call pop pop xor pop mov pop ret int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov push lea call lea push push call test jle cmp jae mov lea call test je mov push lea call xor lea push push mov call add test je or lea call test je mov push lea call add cmp jb push lea push push call test jle cmp jae mov lea call test je mov push lea call xor cmp jbe mov mov pushl call mov pushl call inc cmp jb pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push add push mov mov movl mov push mov mov mov mov push lea push push call cmp jbe push mov call mov test je mov mov lea push lea push push call mov mov test je testb je push call pushl call push push pushl call mov pushl call test je cmpw je mov lea push lea push mov call test jne lea push mov mov pushl lea push push push call mov xorps mov movq mov movq lea mov mov movq mov movl mov add movq movl mov movl movl call cmp lea je push push push pushl call jmp push call cmp jne mov push mov mov mov mov push lea push push call cmp ja mov push lea push mov call test jne mov mov jmp mov pop pop pop mov pop ret pop pop xor pop mov pop ret int3 push mov and sub push push mov push mov call mov mov cmp je push push push pushl call jmp mov test je mov push push call push push push push push push push call mov mov cmp jne xor jmp mov lea push add call mov mov test je push call mov mov cmpb je test je add mov push push mov call test jne cmp je mov call cmp je push push push pushl call jmp mov test je mov push push call mov push mov pushl lea push push push call mov xorps mov movq mov movq lea mov mov movq mov movl mov add movq movl mov movl movl call cmp lea je push push push pushl call jmp push call cmp jne mov push mov mov mov push mov mov lea push push call cmp mov ja xor pop pop pop mov pop ret test jne push push lea call test je push mov push lea call pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push push push push mov call mov add add push pushl mov call test je cmp je xor pop pop pop mov pop ret push push mov call mov lea push push push push and push movl mov call mov test jne mov lea push lea push push push lea mov call mov test je test je push call push call test jne mov test je movb jmp mov movb mov lea push push push push and push movl mov call test jne mov lea push lea push push push lea mov call mov test je test je push call push call mov test mov jne mov test je mov push push push lea movb call test je mov jmp mov movb cmpb je test je push push pushl lea call test je mov lea test je mov cmpb je inc dec jne cmpw je mov jmp test je mov sub cmp jne lea jmp cmpb mov jl sub mov call cmp jb mov jmp mov jmp mov mov pushl call cmpb mov je mov test je push push pushl call cmpb je test je push push pushl call pop mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push push push push call mov mov mov mov xor mov test je lea mov mov movl mov movl mov mov lea push push push push mov movl movl movl movl call test je push push lea push push call movzbl mov test cmove pushl call pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl jne mov push mov mov mov mov push lea push push call cmp ja xor mov pop ret push push push pushl pushl call pushl pushl push push call mov mov test je push mov call cmp je movzbl push push push pushl call pop pop mov mov pop ret mov test je pushl mov push call pop pop mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov push mov mov mov mov push mov push lea push push call cmp ja mov pop mov pop ret push mov mov test jne test jne pop xor pop mov pop ret mov lea push lea call add test je push lea push lea push mov lea call test jne push lea push call xor cmp jbe mov mov test je push lea push call test je inc cmp jb testl je lea push call lea push call test jne pop pop mov pop mov pop ret mov call cmp je push lea push push pushl call pop pop xor pop mov pop ret mov test je mov push lea push call pop pop xor pop mov pop ret pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov sub push mov cmpb jne cmpl jne mov cmp jb cmp ja mov add push lea call add test je push lea push lea call xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push mov call mov cmp je push push push pushl call jmp mov test je mov push push call test je lea jmp xor push lea mov mov movl movl movl movl call mov mov call cmp je push push push pushl call xor test sete pop pop pop mov pop ret mov test je mov push push call xor test pop pop sete pop mov pop ret push mov sub push mov push call cmp je cmp jne push push lea push push push push push push call test je testl jne push push lea push push call test je cmpl ja cmpl jb mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push pushl mov call test je cmp jne push lea push lea call push lea push mov call pushl call pop pop mov pop ret int3 int3 int3 int3 push mov and sub push push mov push mov call xor mov mov movl movl cmp je mov push pushl mov call test je cmp jne mov lea push push push push push movb movl movl and call mov test jne mov lea push lea push lea push push push push call mov test je test je push call push call mov test jne cmpl jne cmpl jne xor jmp lea nop xorl add cmp jb cmpl jne xor mov movb pushl call cmpb jne push lea push push call add lea push movl call lea push lea push call mov mov push add push adc push push call mov jmp mov lea cmp ja mov sub mov mov xor cmp jae mov mov mov shl test je xor cmp mov cmovne mov push mov mov mov mov push lea push push call cmp jbe movzbl add mov lea push call cmp je cmp jne push push lea push push push push push lea push call test je testl jne push push lea push lea push call test je cmpl ja cmpl jb lea push mov call mov push mov mov mov mov push lea push push call cmp jbe cmpb je mov mov call mov inc cmp jb test je cmp je mov push pushl call test je cmp jne push lea push lea call push lea push movb call pushl call pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push mov call mov movb pushl call lea push mov movb call mov mov cmp ja jmp mov push mov mov mov mov push lea push push call jmp push lea push push call add lea push call cmpl jne lea lea mov mov cmp jne add add sub jae mov cmp je lea mov lea rep movl movsw lea push call call mov jmp push lea push push call add lea push call cmpl jne lea lea mov mov cmp jne add add sub jae mov cmp je lea mov lea rep movsw mov movl lea push call jmp push lea push push call add lea push call cmpl jne lea lea mov mov cmp jne add add sub jae mov cmp je pushl lea mov lea rep movl movsw call mov lea push call cmpb je mov push lea push call test jne mov mov mov mov mov lea jmp push lea push push call add lea push call cmpl jne lea lea mov mov cmp jne add add sub jae mov cmp je lea mov lea rep movsw mov movl lea push call mov push mov call test jne lea push lea push lea push push mov mov call cmpb je mov push lea push call test jne mov mov mov mov mov lea jmp push lea push push call add lea push mov lea call test jne mov test js xor test jle jmp lea movsbw mov inc cmp jl xor mov lea push call cmpl jne lea lea mov lea mov cmp jne add add sub jae mov cmp je pushl lea mov lea rep movl movsw call mov lea push call cmpb je mov push lea push call test jne mov mov mov mov mov lea mov push push push push call jmp movb push call mov push call cmp sete movzbl push mov call push call push call mov jmp push lea push push movb call add lea push call cmpl jne lea lea mov mov cmp jne add add sub jae mov cmp je lea mov lea rep movl movsw lea push call cmpb je mov push lea push call test jne mov mov mov mov mov push mov push lea push push call jmp movb mov call push mov call mov xorps mov movq mov mov movq mov movq mov mov mov movl movq movl mov movl movl call cmp lea je push push push pushl call jmp push call cmp je mov mov mov mov mov push mov push lea push push call cmp ja mov push pushl call cmp je xor pop pop pop mov pop ret push call pop pop xor pop mov pop ret lea add add xor add xor inc add aaa inc add inc add icebp movl movl movl movl movl movl movl movl movl movl movl lea movl movl movl movl mov movl movl movl orb lea movl movl movl push movl call push lea push push movl movl movl call add movl movb mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push push push push push mov call mov test jne pop xor pop pop ret push push push push push lea call mov test je push push push push call mov test je mov push push sub mov call test setne test je push push sub mov call test je pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov cmpl jne push mov cmp jae mov testb jne push call testb jne call orb mov movl push call push push pushl call mov pop test jne xor pop ret test jne xor jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov call test je mov test jns push call or jmp push lea push push pushl mov pushl call mov or test cmove cmp jne cmpl push jne mov test je push call movl push lea push lea call test je mov sub push mov add push lea call test je push lea push lea call test je mov lea mov mov cmp jne add add sub jae pop mov pop mov pop ret pop xor pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea push push push mov push push lea call test je mov mov cmp jbe cmpl jne lea push push push mov call push push pushl mov call test je cmpl lea jne mov test je push call movl push lea push mov call test je mov push push mov call test je push lea push mov call test je mov push lea push push lea push pushl call test je cmpl jne push lea push push push pushl call test je cmp jne mov mov call mov pop pop pop mov pop ret mov xor call mov pop pop pop mov pop ret push jmp test je push push pushl call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push mov call test je mov xor xorps mov movlpd jmp lea test je push call push push pushl pushl pushl call test je lea push pushl call test je mov mov mov mov mov push mov push push push push mov call test je call mov mov xor mov nop test jb ja cmp jbe mov movl jmp mov mov cmp jae mov lea mov inc mov jmp mov test mov jne test je test ja jb cmp jae mov mov jmp mov movl push lea push mov push pushl mov pushl call test je cmp jne mov mov mov mov sub mov sbb sub sbb push mov push pushl pushl push call test je test ja jb test jne mov pushl call mov inc mov cmp jb mov pop pop pop mov pop ret pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push mov call test je lea push mov pushl call test je mov mov mov or je cmpb je mov lea mov sub je dec jne movl mov jmp movl xor mov call test je mov lea mov test je push call mov push mov or push pushl pushl call test jne mov movl xor pop pop pop mov pop ret pushl mov call test jne pop pop pop mov pop ret mov test ja jb cmp jb mov sub push sbb add add push push push mov push mov call mov cmp jbe mov cmpl jne lea push push mov mov call test je mov xorps movq mov lea mov movl movw movb call cmp jne push lea push push pushl call test je mov xor cmp mov push mov sete push push push mov mov push mov call test je test jne test je test jb ja cmp jbe mov movl jmp mov mov mov push pushl call mov test jle sub sbb mov or movb je movb mov mov mov sub mov sbb push mov push pushl pushl pushl call test je cmpb mov pushl mov mov je push push pushl push call jmp push push pushl push call mov cmp je test je push lea push mov push pushl mov pushl call test je cmp jne test jne test je mov jmp pop pop mov pop mov pop ret int3 int3 int3 int3 push mov push mov test je push push pushl call cmpl mov movl jne mov test je push call mov test je push push call cmpl ja mov test je push call mov test je push push call cmpl ja mov test je push call mov test je push push call pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov push cmpl ja call test je mov lea test je push call push push push pushl pushl pushl call test jne mov pop xor pop pop ret cmpl ja push lea push lea push push pushl movl call test je cmpl jne mov test jne shr movzwl jmp xor movzwl mov test je add mov pop movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push push push push push push push push push mov call mov mov mov cmp je lea push push push push lea movl movl call test je lea push lea push lea push lea push lea call test je cmpb jne mov lea push call test je push mov test cmovne push lea push mov lea call test jne sub mov push lea call test jne push push push push push push lea push call mov mov cmp je pushl mov lea push lea push call test jne mov push call or lea call xor cmp je test je push mov call jmp cmpb je mov lea push call lea push lea push lea push lea push lea call mov push call push or call push or call mov cmp je push push lea push call test je pushl push call mov pop pop pop mov pop ret xor jmp mov cmp je test je push call pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl push lea jne mov sub je dec jne push push push jmp push push push push push call test jne push push push push push call test jne movl xor pop ret mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov cmpl ja mov test je push call mov test je push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmpl ja call test jne xor pop pop ret mov push lea test je push call push push push pushl pushl pushl call test jne mov pop xor pop pop ret pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl lea jne mov sub je dec jne push push push jmp push push push push push call test jne push push push push push call test jne pop movl xor pop pop ret mov add test je push call push pushl push pushl call test jne mov pop xor pop pop ret pop mov pop pop ret push mov push push push push lea push push push pushl mov push pushl movl call mov neg sbb and je testb jne push call testb jne call orb mov movl push call push push pushl call mov test je lea push push push pushl mov push pushl call mov neg sbb and jne push push pushl call pop pop xor pop mov pop ret mov pop mov pop mov mov pop mov pop ret int3 int3 int3 push mov sub cmpl ja push lea push lea push push pushl movl call test je cmpl jne mov test jne shr mov pop ret xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp jb cmpl ja mov push mov cmp je push push push call add pushl lea push movzbl push push push push pushl mov call mov or test pop cmove pop mov pop pop ret pop or pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push cmpl mov push mov ja push lea push push push push push pushl mov call mov or test cmove jmp mov cmp jne pop xor pop mov pop ret push test je testb jne push call testb jne call orb mov movl push call push push pushl call mov test je mov push push push push pushl call cmp je mov test je mov mov pop pop pop mov pop ret push push pushl call pop pop xor pop mov pop ret push mov push mov cmpl ja push mov cmp jae pop or pop pop ret mov push mov cmp je push push push call add lea push movzbl push push push push pushl mov call mov or test pop cmove pop mov pop pop ret or pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je testb jne push call testb jne call orb mov movl push call push push pushl call mov test je cmpl ja mov cmp je push push push call add lea push push push push push pushl mov call mov or test cmove cmp je mov test je mov pop mov pop pop pop ret push push pushl call pop pop xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov test jg test je lea push mov call test jne mov test jg pop xor pop mov pop ret push push push lea push push push push push movl call test je mov test je call mov test je push push lea push push push push push call test jne push push pushl call pop pop xor pop mov pop ret lea push lea push push push pushl movl push pushl movl push call push push pushl mov call test je mov test je mov mov mov pop pop pop mov pop ret int3 push mov sub push lea push push push or movl call mov add test jne xor pop mov pop ret push lea push lea push push push movl pushl pushl push push call push mov call test pop je mov mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmpl movl jne mov test je push call mov test je push push call testb je push push pushl call mov pop pop ret int3 int3 int3 int3 push mov push mov cmpl je xor pop pop ret cmpl push lea jne push push push push push call test jne mov pop xor pop pop ret add cmpl jne push push push push pushl call test jne mov pop xor pop pop ret mov test jne pop mov pop pop ret push push pushl pushl call dec neg sbb pop inc pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jne mov movl test je push lea push pushl push push call cmp jne cmpl jne mov pop ret xor mov pop ret xor mov pop ret int3 int3 int3 int3 int3 push mov sub push push pushl lea pushl mov movl movl movl movl call test je cmpl jne mov movl test je push lea push push push push call cmp jne cmpl jne mov jmp xor cmpl movl jne mov test je push call mov test je push push call pop mov pop mov pop ret push mov sub testb jne push call testb jne push call lea push call test jne call mov jmp mov call orb movl push call mov pop ret int3 int3 push mov mov mov mov shr xor add imul add mov inc cmp jl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp jl xor jmp lea jmp lea mov xor inc and xor mov and shr xor xor mov cmp jl cmp jge push lea mov xor add and xor mov and shr mov xor xor mov cmp jl pop mov xor and xor mov and shr xor xor xor mov mov inc mov mov shr xor mov and shl xor mov and shl xor mov shr xor ret int3 int3 int3 int3 int3 push call ret int3 int3 int3 int3 push mov sub push mov push lea push mov mov call test je cmp ja push call mov test jne xor pop mov pop ret push xor movl push nop call push call call push mov call mov shr and mov shr and add movzbl cltd mov idiv mov add mov add movzbl mov mov shr and add movzbl cltd idivl add movzbl mov mov shr and add movzbl cltd mov idiv mov add movzbl mov movzwl push push lea push mov sub sar push push call add test jne mov mov sub sar test jne test jne cmp jbe mov test js test je push push lea push call test jne push push push push push push pushl call mov mov cmp jne call cmp je cmp jne inc cmp jl pop pop xor pop mov pop ret pop pop mov pop mov pop ret int3 int3 push mov mov test jns push call or pop ret push lea push push pushl pushl call mov or test cmove mov pop ret int3 int3 int3 int3 push mov mov push mov test jne push call test je push push call mov test jne push movl call xor pop pop ret cmp jne push call xor pop pop ret push pushl push pushl call neg sbb neg pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov test jne push call test je push push call mov test jne push movl call xor pop pop ret cmp jne push call xor pop pop ret push pushl push pushl call neg sbb neg pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push mov test je cmpl je push lea push push call test je mov test je mov mov mov mov mov test je mov mov mov mov mov test je mov mov mov mov mov mov mov mov mov pop pop pop mov pop ret cmpl je xor pop pop pop mov pop ret mov mov test cmove push pushl pushl pushl call test je test je test je mov mov mov mov pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl push mov push mov mov push mov mov je cmpl je cmpl je push lea push push mov call test je test je mov mov mov mov test je mov mov mov mov test je mov mov mov mov mov push mov mov mov mov lea push push mov call test je mov pop pop pop mov pop ret cmpl je xor pop pop pop mov pop ret cmpl je xor pop pop pop mov pop ret mov push push push pushl call neg pop sbb pop neg pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push call push call neg sbb neg pop ret int3 int3 push mov sub push push push mov mov push mov lea call add test jne mov pop pop pop mov pop ret lea push lea push call mov cmp jne call sub neg sbb and pop pop pop mov pop ret xor nop cmpw jne mov test je cmp jne cmpw je mov lea mov push push call test je cmp jmp testb je testb je lea push mov call test je mov lea mov push push call test je cmp jmp testb je lea push mov lea call add test jne lea jmp lea push mov call mov test je cmp je cmp je mov push mov lea push push call cmp je xor cmp jne jmp testb je lea push mov call test je mov lea mov push push call test jne lea push pushl call test jne jmp xor cmp setne inc call mov test jne mov cmp cmovne pushl call push call pop pop mov pop mov pop ret int3 int3 push mov push mov mov test jne xor pop pop ret mov sub je push push dec je dec jne xor cmp jbe mov mov pushl push call test jne mov inc cmp jb pop pop xor pop pop ret mov mov movl mov mov test jne mov mov jmp mov cmp jb mov lea cmp jae mov add mov test jne cmp jne pop add pop mov xor pop pop ret movl mov test je push push call test je pop pop mov pop pop ret mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov test jne mov mov pop ret mov cmp jb mov lea cmp jae mov add mov test jne cmp jne add mov xor pop ret movl mov pop ret int3 int3 int3 int3 push mov sub push push cmp ja jmp mov mov jmp mov mov jmp mov or jmp mov mov jmp mov mov jmp mov mov jmp mov mov jmp mov mov jmp mov mov jmp mov mov jmp mov mov jmp mov or jmp mov mov jmp mov mov mov push mov test jne push call test je push push call mov test jne movl jmp cmp jne push call cmp je push push push or push push call test jne push call pop pop mov pop mov pop ret lea push push push push call test jne mov xor test mov cmove test js test push mov cmovne push lea push mov mov call mov mov push call test jmp xor mov pop pop xor pop mov pop ret mov xor pop mov xor pop mov pop ret lea cwtl pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add pop inc add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov push mov mov test je cmpw jne add test je test jne xor jmp lea push mov mov call mov xor test cmovs jne cmp jae test jne xor mov jmp lea push mov mov call mov xor test cmovs mov jne cmp jae test jne test jne pop pop xor pop mov pop ret test jne mov cmp je lea push push push call add push call lea push mov mov call mov xor test cmovs or test cmovne pop lea pop pop mov pop ret test je mov lea mov cmpw setne xor cmp setne add add cmp jae mov cmp je push push push call mov add add cmpb je mov mov add lea push push push call add push call pop mov pop pop mov pop ret int3 push mov sub mov push mov neg test cmovne push push lea push mov lea call test je xor pop mov pop ret mov mov lea push mov movl movl movl movl movl call pop mov pop ret int3 int3 push mov push mov pushl movl call testb je push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push lea mov push pushl movl call test je mov push call test je mov mov movl mov mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 push mov and push push push mov push mov push pushl mov pushl lea push call test jne mov cmp jne mov mov mov lea push call movzbl pop pop pop mov pop ret cmp jne lea call movzbl pop pop pop mov pop ret cmp jne mov push pushl lea push call test je mov pop pop pop mov pop ret cmp jne mov mov pop pop pop mov pop ret cmp jne mov cmpl je xor movzbl xor test mov setne pop pop pop mov pop ret push lea call movzbl xor test mov setne pop pop pop mov pop ret xor pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov xor xor push mov cmp jae nop movzwl mov imul add mov mov push mov mov call test je movzwl push mov mov pushl call mov mov test je movzwl push push push push call mov test je mov mov push lea movzwl movzbl push push call add mov mov test je push push push push call mov test je push push call mov mov mov push sub push mov sub push push push push call mov mov mov lea push push push mov call mov inc mov cmp jb xor xor cmp jae jmp lea movzwl movzwl mov imul add add mov lea mov mov test je movzwl movzbl push push lea mov push mov lea neg call test je xor jmp mov mov lea push mov movl movl movl movl movl call mov mov inc cmp jb mov movl movl movl test jns movl jmp dec mov mov push movb lea push mov movl mov push pushl call mov movl movl movl test jns movl jmp dec mov push movb lea push mov movl mov push pushl call pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push mov lea push mov movl movl mov push pushl call neg sbb and movl mov lea push mov movl mov push pushl call mov neg mov sbb and mov lea push pushl call mov push mov call mov test je pushl push call mov test je movq mov cmp mov movq movq mov movq mov mov cmovge cmp mov cmovge movl sub movb movw pushl sub push push add push mov add push pushl push push mov push push push call pushl pushl call pushl call xor xor mov cmp jae movzwl mov imul add mov mov movq movq movq sub movq sub mov sub sub lea push lea push lea push call test je mov lea push mov mov push mov lea push push mov call test je mov test je cmpw je movzwl add mov push lea push mov call pushl push call mov mov test je push push call mov pushl lea push push pushl push call mov cmpl je pushl push call mov inc mov cmp jb lea push mov mov pushl call pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push pushl mov call mov test jg pop xor pop pop ret movzwl xor push test jle xor jmp lea imul add movzwl cmp je inc movzwl cmp jl pop pop xor pop pop ret mov movzwl cmpl lea jne pushl call mov pushl mov push call pushl push call mov mov pop pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push mov lea push mov movl movl mov push pushl call neg sbb and movl mov lea push mov movl mov push pushl call mov neg sbb and xorps mov lea push pushl movl movq movl call mov sub mov sub mov lea push pushl mov call push call pushl call mov test je pushl push call mov test je testb mov mov mov mov movl mov mov movb movw je lea mov lea add mov mov add pushl add pushl add pushl push push push push push push push pushl call pushl push call push call lea push pushl call mov test jne test je addl addl subl subl lea push pushl call pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov lea cmp ja mov cmp sete movzbl push pushl call test je xor pop pop ret pushl pushl push pushl call pop pop ret int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps mov movl mov movl andb mov movl mov movl mov mov lea mov movl movb movl movb movq mov movl mov movl mov mov lea mov xor mov mov mov movl movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea push lea call testb movl je mov test je push call movl testb je test je push push pushl call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push mov mov movl mov movl mov mov lea mov mov mov mov test je push call movl mov mov test je push call mov test je push call cmpl je movzwl movzwl add mov mov je mov mov lea mov mov test je push call mov mov mov test je push call mov inc cmp jb mov test je push push pushl call mov mov movl mov mov testb je testb je mov test je push push call mov mov movl pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov push lea push pushl mov call test je mov pop xor pop mov pop ret lea push push pushl call test je mov push mov call mov test jne pop xor pop mov pop ret mov push mov movzwl movzwl add je shl test jne xor jmp call mov test jne pop pop xor pop mov pop ret mov mov mov mov pop mov mov pop mov pop mov pop ret sub jmp sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push mov cmp ja je lea cmp ja movzbl jmp mov testb je pop pop xor pop mov pop ret mov testl je mov push pushl xorps movq movq movl mov call pushl mov mov movl mov mov mov call lea push pushl push push call test je pop pop xor pop mov pop ret mov pop testb mov mov cmovne pop or pop mov pop ret mov mov test jne test je cmp je cmp je cmp je cmp je cmp je cmp je cmp je cmp je pop pop xor pop mov pop ret mov testb je pop pop xor pop mov pop ret lea cmp ja movzbl jmp mov mov test jne test je mov push call mov test jne push call mov test je pop pop xor pop mov pop ret mov testb je pop pop xor pop mov pop ret mov testb je pop pop xor pop mov pop ret mov testb je pop pop xor pop mov pop ret pushl push push pushl call pop pop pop mov pop ret sub push inc add push inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov mov imul jp inc add add add add add add int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov testb movl je mov test je push call movl testb je push push pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov sub mov cmp cmovb add push push pushl call add mov add mov pop xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push cmp jne mov pushl mov add mov shr push mov push call movzbl pop pop ret cmp jne mov pushl mov add mov shr push mov push call movzbl pop pop ret cmp jne mov mov mov shr push movzwl add push pushl mov call movzbl pop pop ret cmp jne mov mov mov shr push mov add push pushl call movzbl pop pop ret cmp jne mov mov mov mov shr mov lea push add mov shr push mov push call movzbl pop pop ret xor pop pop ret push mov push pushl push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push pushl push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push mov mov lea mov test jne orb lea push mov movl movl mov push pushl call neg sbb and lea push mov movl movl mov push pushl call mov neg sbb and jmp mov mov mov mov mov test je and or mov xor cmp push cmovne or mov mov mov lea push mov movl mov push pushl call mov mov mov test je and or mov xor cmp push cmovne or mov mov mov lea push mov movl mov push pushl call decl cmpl jle andb pop pop mov pop mov pop ret lea push mov movl movl mov push pushl call neg sbb and movl mov lea push mov movl mov push pushl call mov neg sbb and cmp jne cmp je push push push push sub mov push mov push sub push pushl call mov mov pushl call pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push pushl call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub testb push mov jne lea push mov movl movl mov push pushl call test je mov sub inc cmp setl test je push push lea push push push call test je mov test jne mov mov movswl mov imul sub sar mov shr add imul imul push push push mov call mov pop pop mov pop ret xor pop mov pop ret push mov sub push push xor cmpw push mov mov cmove xorps or movq mov lea push mov pushl movq movq movl mov pushl call mov mov dec xor test cmovg movzwl sub cmp jg mov mov je cmp ja jmp mov and mov sub jmp mov and mov jmp mov sub jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov add cmp cmovg cmp cmovl cmp je mov push lea push mov movl movl mov mov push pushl sub call mov push mov push push push push test jne push push jmp push push pushl call mov mov pushl call pop pop mov pop mov pop ret mov pop jo add jo add jo add inc add jo add inc add in push mov testb movl je mov test je push call movl testb lea je test je push push pushl call lea pop pop ret int3 int3 int3 int3 int3 push mov sub mov push add push mov mov mov cmp ja jmp xor mov xor jmp mov mov xor jmp xor jmp mov jmp mov jmp mov jmp mov jmp mov lea push mov movl movl mov push pushl call test je mov sub inc cmp setl test je push mov push call mov test jne push call mov test jne push call mov test jne cmpb jne mov push movzwl push mov push mov pushl call pop pop mov pop mov pop ret pop pop xor pop mov pop ret pop xor pop mov pop ret mov add jno add jno add jno add int3 int3 int3 push mov sub push push mov push mov lea push mov movl movl mov push pushl call neg sbb and lea push mov movl movl mov push pushl call mov mov mov neg sbb and sub mov mov sub mov mov sub mov mov sub pop pop mov pop mov pop ret int3 int3 int3 int3 push mov push push mov push push mov call mov push add call mov push push mov lea mov push mov push push push pushl call test jne pop pop xor pop pop ret mov push pushl mov push push push push pushl call neg pop sbb pop neg pop pop ret sub jmp sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push push pushl call mov test je push push pushl call xorps movq movq movq movq pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov xor mov cmp jbe mov push push xor jmp lea mov add mov test je push push pushl call mov mov mov test je push push pushl call mov mov xorps movq movq movq inc movq add mov cmp jb pop pop mov lea call pop mov pop ret int3 int3 int3 int3 push mov sub push mov push push mov test je cmpw je xorps sub lea movq movl call test je push push lea call test je xor movb mov cmp jbe jmp lea nop push pushl call cmp jne lea push mov xor call mov test je mov mov movq movq movq movq movq movq movq movq cmp jbe movzbl movzbl inc cmp mov cmovl lea push call test je mov lea push pushl mov movb movl movl call test je push pushl lea sub push call test je mov test je lea push push pushl pushl call test je push pushl call test je lea call cmp jne cmpb je mov jmp xor push push lea push lea call test je cmpl je lea push lea call test je mov movb test je lea push lea push pushl push call test jne mov lea push lea push mov call mov test je push call lea push call mov xor test je mov mov add cmp je inc add cmp jb jmp mov lea push call push call lea call mov test je push push pushl call mov inc mov cmp jb jmp mov test je push push pushl call jmp movb mov lea mov mov mov test je push call movl add dec jne mov pop pop pop mov pop ret pop pop xor pop mov pop ret int3 int3 int3 int3 push mov sub mov push mov push push lea push movl movl movl movl movl movl call test je mov sub je dec jne mov mov jmp mov xor lea call test je mov test je push call lea push or push push pushl call test jne mov jmp mov lea lea push pushl pushl call mov test je mov push push lea call mov test jne movl jmp cmpl mov jbe cmpl jne lea push push add push lea call mov test je pushl lea push mov call add test pushl setne push pushl call test je mov jmp mov mov test je push push pushl call mov test je push push pushl call xor cmpl mov mov ja mov test je push call mov test je push push call cmpl ja mov test je push call mov test je push push call pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push push mov mov push mov lea movl movl movl call test je mov test je push call lea push push push push push pushl call test jne mov xor cmpl ja mov test je push call mov test je push push call pop pop mov pop mov pop ret lea push pushl lea pushl call mov test je mov test je cmpb je push push pushl call jmp mov test je push push pushl call mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov push lea push movb call mov push call test jne movb jmp mov mov call test je push mov call test je movb jmp mov mov xor call push pushl call cmp jne mov push mov call mov test je push mov call test jne mov mov inc call push pushl call cmp je testb mov jne push call testb jne push call lea push call test jne call mov mov mov lea mov shr xor add imul add mov inc cmp jl jmp mov mov mov mov mov shr xor add imul add mov inc cmp jl orb mov movl push call push call call mov push mov call mov mov xor call push pushl call cmp jne mov push lea push mov call mov test je push mov call test jne mov mov inc call push pushl call mov cmp je jmp mov push mov movb call lea mov pushl mov call push pushl call cmp je pop pop xor pop mov pop ret int3 int3 push mov sub push push push mov push pushl mov call cmp jne pushl lea push push push lea push movl call add test jne mov mov mov sub mov mov test je mov test je lea push mov mov movl movl movl movl call mov xor test cmovs mov jne test js push push lea call test je mov mov test jne xor jmp lea push mov mov call mov xor test cmovs mov jne test js push push lea call test je mov add lea inc test jle mov add add jne test je push push pushl call xor jmp test jne testb jne push call testb jne call orb mov movl push call push push pushl call jmp push push push pushl call test je mov mov mov mov add inc movb push mov call add test jle mov mov add inc movb push call add test js add mov movb sub mov mov add mov test je push mov push pushl call test je push mov push pushl call jmp mov mov test jne pushl mov push lea push lea push mov call mov test je push push pushl call mov test je add push call mov push mov lea call mov cmp je shl add je mov cmpl jne movl mov push lea mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov call mov pop pop pop mov pop ret mov test je push mov push pushl call test je push mov push pushl call jmp mov test je push push pushl call mov test je push push pushl call jmp mov mov cmpl je test je push push pushl call xor pop pop pop mov pop ret mov test je push push pushl call mov test je push push pushl call push call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push push mov push lea push call mov xor test je mov add mov cmpl je inc add cmp jb push xor call pop pop mov pop ret push mov call pop pop mov pop ret int3 push mov push mov call test jne or pop pop ret mov test je mov movq shl add movq movq movq movq movq movq movq mov lea mov pop pop ret int3 int3 int3 int3 int3 push mov mov push push push mov shl mov mov shl add add lea cmp jb cmp jae cmp ja je sub push push push call add decl mov shl lea call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jae mov shl add call pop ret int3 int3 int3 push push mov mov mov inc shl test jne test je push push pushl call movl pop mov pop ret test jne call push push pushl call jmp push push push pushl call test je mov pop mov pop ret pop xor pop ret int3 int3 int3 int3 int3 push mov push push push call mov test jne pop mov pop ret push push push push xor call mov test je testb jne push call testb jne call orb mov movl push call push push pushl call mov test je lea push push push movl call test jne mov cmp push cmovb mov call mov pop pop pop mov pop ret push push pushl call push call mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov xor call mov test je sub mov call add mov push mov push pushl call jmp mov push push push push push call mov test je push push pushl call mov test jne pop pop xor pop ret mov test je push push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je push call movl push push pushl pushl call mov mov test jne xor pop pop ret mov test je push push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov test je push call movl mov test mov mov cmove mov mov test cmovne push push push push pushl push pushl call mov test je test jne push push push push call mov test je push pushl push call add push pushl push push push push pushl call cmp je mov test je push call movl pop xor pop pop ret pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push mov mov mov test je xorps movq testb movl jne push call testb jne call orb mov movl push call push push pushl call mov mov test jne push call pop pop xor pop mov pop ret mov jmp jmp lea mov test je push push call cmp jne lea push push push pushl movl call test je mov test je mov add mov cmp ja mov test je mov mov add jne test je push push pushl call movl jmp test jne testb jne push call testb jne call orb mov movl push call push push pushl call jmp push push push pushl call test je mov mov add push pushl push call add add test je mov mov jmp mov jmp mov mov jmp mov jmp push push pushl call pop pop mov pop mov pop ret xor push mov push pushl call test je mov test je push push pushl call test je push call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push lea push lea push push push pushl movl movl call test je mov lea cmp jbe xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov test jns test jne xor mov push lea push mov cmp jae mov inc cmp jne movb jmp lea push mov call test jne mov test jns or pop mov pop ret cmp jae cmp je cmp jne cmp jae cmp ja lea cmp ja cmp jne cmp jbe mov shr and mov cmp sbb and add add mov mov cmp sbb and add add movb mov add jmp mov inc cmp jb mov movb sub mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push mov test jne xor jmp lea push mov mov call mov xor test cmovs jne test js mov push mov push push push pushl push push push push call test jle test jle mov cmpb je cmp jl xor pop pop pop mov pop ret pop pop movb pop mov pop ret pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov test jne xor jmp lea push mov mov call mov xor test cmovs jne test js push push push push push push push push call test jle push lea push test je testb jne push call testb jne call orb mov movl push call push push pushl call mov test je push push push mov mov call lea add cmp je push push pushl call pop pop xor pop mov pop ret mov test je mov mov pop pop pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov test jne xor jmp lea push mov mov call test jne mov test js push mov push mov push push push push push push call test jle test jle cmpw je cmp jl xor pop pop pop mov pop ret xor pop mov pop pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov test jne xor jmp lea push mov mov call test jne mov test js push push push push push push call test jle push lea push lea test je testb jne push call testb jne call orb mov movl push call push push pushl call mov test je push push push mov call lea add cmp je push push pushl call pop pop xor pop mov pop ret mov pop pop pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 int3 push mov push mov push push push mov xor nop mov mov shr movzbl and mov cmp sbb and add add mov movzbl mov cmp sbb and add add inc mov mov lea cmp jb pop xor pop mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov test je test jns lea push mov call mov xor test cmovs jne test js lea push push lea mov test jne xor pop mov pop pop mov pop ret testb jne push call testb jne call orb mov movl push call push push pushl call mov test je push push push call mov add xor mov pop mov pop pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov test jns test jne xor xor push mov test jle movzwl cmp je cmp jb cmp jbe cmp jne inc cmp jl sub lea lea test js lea movzwl cmp je cmp jb cmp jbe cmp jne dec dec jns pop cmp je test jle lea push push push call add xor mov pop mov pop mov pop ret lea push mov call mov xor test cmovs jne test jns pop or pop mov pop ret int3 int3 int3 int3 push mov mov push mov test jg movl movl movl mov pop pop ret push push push push push push pushl push push call mov test jg pop xor pop pop ret lea push test je call mov test je push push push push pushl pushl push push call cmp je push push pushl call pop pop xor pop pop ret mov movb mov pop mov mov pop mov pop pop ret push mov sub push push mov mov mov test jns test jne xor lea mov add push push call mov test je push push call mov test je pushl push push call mov add xor push mov call pushl call test je call push push call test setne call test je pop pop mov pop mov pop ret lea push mov mov call mov xor test cmovs jne test jns pop xor pop mov pop ret push call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push mov mov mov test jne xor jmp lea push mov call mov xor test cmovs mov cmovne test je lea push mov mov call mov xor test cmovs mov cmovne test jle test js lea add mov lea test je call mov test je test jne push push push pushl push call add jmp pushl push push push pushl push call add test je push push pushl call push call pop pop xor pop mov pop ret pop mov pop pop mov pop ret push call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov xorps push mov movl movq movl test jne push lea push push call add movl lea push lea test cmovne push pushl movzbl push push push push push push push call test jne pop pop mov pop ret mov test je movq movq movq movq mov pop pop mov pop ret pushl mov call pushl call mov pop pop mov pop ret int3 int3 int3 int3 push mov push push push call mov test je pushl mov pushl pushl push pushl call add mov push push pushl call mov pop pop pop pop ret pop xor pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push push lea push lea push push push push push push push and push or call test jne mov mov test je lea push mov mov call mov xor test cmovs jne test js je lea jmp mov jmp xor push push push push push push call mov test je test je push call push call mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov sub push mov push push lea push lea push push push push push push push and push or call test jne mov push lea push push push pushl push call mov test je test je push call push call mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov lea push push push push mov push pushl call test jne jmp lea mov test je lea test je testb jne push call testb jne call orb mov movl push call push push pushl call mov test je lea push push push push push pushl call mov test je push push pushl call cmp jne mov lea push push push push push pushl call test je pop pop pop mov pop ret mov pop pop pop mov pop ret mov mov movb mov pop movb mov mov mov pop mov xor pop mov pop ret pop pop mov pop mov pop ret mov movl mov movl xor pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov mov add mov lea push push lea push push push pushl call test jne mov test jne mov cmp je cmp jne test jne xor mov pop mov pop pop ret shr dec cmpw je inc cmp jbe xor mov xor mov cmp pop mov cmovge pop pop ret pop mov pop pop ret mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push mov mov test jne push push call push call mov test jne movl push push call pop pop pop ret cmp jbe push pushl push push call pop pop pop ret int3 int3 int3 int3 int3 int3 push mov sub push push push mov mov test jne lea pop pop pop mov pop ret mov mov or xor and test jne and jmp or or lea push push push push push mov call mov test cmove jne push push push push push push lea push push push push push push call mov test jne mov inc lea mov cmp jbe lea test je call mov test je mov push push push push mov lea push push push push call mov test jne pushl mov mov call mov add test jne mov push push push push mov lea push push push push call mov test je lea cmp je test je push push pushl call xor cmp cmove testb je push call push call test jne pushl mov mov call add mov pop pop pop mov pop ret mov mov test je test je push call push call pop mov pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov call pop ret int3 int3 push mov push push push push mov lea push call cmpl jne mov test je mov lea lea call test je lea push push pushl push push push call test je mov mov push mov incl call mov push call mov pop pop pop mov pop ret push xor call mov pop pop pop mov pop ret int3 int3 int3 push mov push push push push mov lea push call incl push call xor movb cmp jbe mov mov push lea push push sub mov cmp cmovb push call test jne add cmp jb jmp movb push call decl push call mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je push call movl testb je push push pushl call mov pop pop ret int3 int3 int3 push mov mov mov sub push mov cmp jne cmp jne lea push call test jne xor jmp mov mov push pushl push push push push pushl call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push lea mov push pushl movl call test je mov push call test je mov mov movl mov mov pop mov pop ret pushl call xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl movl call testb je push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push mov test je mov jmp xor mov test je mov jmp xor mov test je mov jmp xor push push pushl push push pushl pushl call test je mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov movl test je lea push push push call test lea push je lea push pushl call mov mov mov mov pop mov pop ret lea push pushl call mov mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push push push mov mov cmp jne testb lea jne pushl pushl call pop pop pop mov pop ret mov mov push pushl lea push push call test jne mov movl cmp jne cmp jne mov lea mov call movzbl pop pop pop mov pop ret cmp jne mov lea mov call movzbl pop pop pop mov pop ret cmp jne mov mov cmp jne lea push call mov mov mov pop pop pop mov pop ret cmp jne lea push call mov mov mov pop pop pop mov pop ret cmp jne cmp jne lea push call mov pop pop pop mov pop ret xor pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push pushl mov call movzwl mov xor xor mov cmp jae push mov lea movzwl imul mov cmp movzwl je inc cmp jb pop pop mov pop pop ret movzwl imul add je add mov xor mov mov movzwl imul cmp je inc cmp jb jmp movzwl imul add je add mov mov push mov push push pushl call mov pop pop pop pop ret pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push shr push mov mov push xor xor cmp jae mov mov movzwl imul movzwl push mov mov pushl call mov test je lea push push call test je mov cwtl cmp jge cmp jle mov cwtl cmp jge cmp jle push push call test jne inc cmp jb mov lea push mov shr push push mov call mov pop pop pop mov pop ret pushl orb pushl push push call andb pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push mov mov cmp je cmp jne mov sub test jle lea test je testb jne push call testb jne call orb mov movl push call push push pushl call mov test je mov lea push push push pushl mov mov mov mov call test jle cmpl mov jne orb push jmp push push call push push pushl call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push mov mov cmpl jne mov test je and mov mov pop pop pop mov pop ret movswl movswl mov mov cmp jne cmp jne lea push call test je lea push pushl call jmp lea push pushl call mov mov mov mov movl call mov mov test je mov mov mov pushl push push push call push push push push call mov mov pushl push push push call mov pushl mov pushl mov pushl push lea call sub je dec jne push push push jmp push push push pushl call push call mov pop pop pop mov pop ret pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov push mov movl movl test je push push call test je push push push call test jne lea push push movl mov call test je sub sar mov jmp xor cmp je cmp je movl mov jmp movl cmpb je call mov test jne xor jmp mov dec je dec mov mov je push pushl lea push push push call add lea push jmp pushl mov push push push call push push push call push push push push call mov mov pushl push push push call mov jmp mov mov pushl push push push call mov mov mov mov lea push call test jne xor jmp mov mov push pushl push push push push push call sub je dec je mov jmp mov test jne xor jmp mov pushl mov mov call add mov test je push call mov pop pop pop mov pop ret push call decl je mov push mov push pushl call pop pop pop mov pop ret mov test je mov push mov add mov call testb jne push call testb jne call orb mov movl push call push push pushl call test je push mov call mov jmp xor mov mov test je mov push mov push mov mov push mov mov push mov push orb orb call xor test setns mov pop pop pop mov pop ret pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push mov call mov mov mov test je mov sub cmp jbe mov push pushl mov call test je cmp jne mov lea push push push push push xor movl movl and call test jne mov lea push lea push lea push push push push call mov test je test je push call push call mov mov test jne cmpl jne cmpl jne xorl add cmp jb cmpl jne xor mov mov mov pushl call test jne push lea push push call mov add lea push movl call lea push lea push call mov mov push add push adc push push call mov mov jmp mov mov mov mov test jne lea cmp jne cmpl je cmpw jne cmpl mov je push mov call lea push pushl mov call push lea push mov mov pushl call jmp mov lea push call lea push lea push call mov mov push add push adc push push call mov cmp jb xor jmp sub cmp jne cmpw jne xor mov mov div mov mov xor div push mov push mul mov shr mov push pushl lea push push push call add lea push pushl mov call lea push push mov mov pushl call mov mov pushl call test jne mov call pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub lea push push push push push pushl mov call test je push lea push call test jne mov mov pushl call mov push mov call mov test je pushl push call mov test je lea push push movl call mov mov test jne mov mov mov mov sub mov mov sub cmpl je mov mov mov mov jmp movl push push pushl pushl pushl push call test mov cmovne mov dec mov cmp ja mov lea pushl push call mov mov mov movd cvtdq2ps sub movss movd cvtdq2ps movl movss movd mov cvtdq2ps sub movss movd cvtdq2ps lea push push push movss call mov push pushl call mov test push pushl cmovne mov call mov test push pushl cmovne mov call mov test cmovne lea push push mov movl movl call mov mov lea push lea push lea push lea push mov push movzwl mov mov mov pushl lea call push call pushl call pushl call mov jmp mov pushl push call push call mov push call mov push mov pushl call pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movzwl sub je dec je mov dec cmp ja movzwl mov mov mov mov mov mov pop ret mov add mov mov pop ret mov add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push push xor push add push adc push push mov call mov lea push lea push mov call lea push lea push call mov push lea push push lea push push push call test jne push lea push push lea push push push call test jne mov mov push lea push push lea push push push call test jne push lea push push lea push push push call test jne mov lea push lea push push push lea push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov push mov push mov mov test jne mov pushl mov mov andb push call mov mov mov test je movzwl xor movl test jle mov xor imul movzwl cmp je inc movzwl cmp jl jmp movzwl imul mov mov mov push pushl call push push push pushl movl call pushl push push pushl call push push push pushl call push push push pushl call jmp push push call mov mov movzwl push movzwl push push pushl xorps mov movq call mov test je push pushl call mov test je pushl mov pushl call test je push call test je mov mov mov call mov test je sub lea push push push push lea call add lea push push push push lea call add lea push push push push lea call mov add mov push pushl call test je cmp jne mov lea push push push push push xor movl movl and call mov test jne mov lea push lea push lea push push push push mov call mov mov mov test je test je push call mov push call mov test jne cmpl jne cmpl jne xor xorl add cmp jb cmpl jne xor mov mov mov pushl call test jne push lea push push call add lea push movl call lea push lea push call mov mov push add push adc push push call mov lea push mov lea call mov or test cmovne sub lea push push push push lea lea call mov mov mov add lea mov lea push push push pushl xorps movq mov movl movl call test je push push pushl call mov mov pushl call mov test je push push call mov push mov mov pushl call mov test jle push lea push push call mov cltd idiv add movl movl mov lea push push push pushl call push pushl call mov pop pop pop mov pop ret pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov movl call mov movl mov push movl mov push mov lea mov andb lea push call push lea push push call mov add mov movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea mov call testb je test je push push pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push lea movl mov movl mov mov lea mov mov test je mov push mov add mov call lea call testb movl je mov test je push call movl pop ret sub jmp sub jmp int3 int3 int3 int3 int3 push mov push push mov push pushl mov pushl lea pushl mov call test jne cmpl mov jne cmpl jne push mov add call mov pop mov pop ret xor pop mov pop ret int3 int3 push mov push push push pushl mov call mov push mov mov andb push call push push mov call or push push pushl call mov push push push pushl call movzwl xor xor cmp jae mov movzwl imul mov cmp mov je inc cmp jb xor pushl push push pushl call pushl push push pushl call push push push pushl call movzwl xor xor cmp jae mov mov movzwl imul cmp je inc cmp jb xor add mov mov push mov push push pushl call pop pop xor pop pop ret movzwl imul add jmp movzwl imul add jmp int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov test je lea test je push push lea push mov call movb mov mov pop pop ret int3 int3 int3 int3 push mov sub push mov cmpb je lea push pushl movb call push lea push mov mov pushl call mov mov cmp je mov cmp jne push pushl call or push push pushl call push push push pushl call pop mov pop ret cmp jne push push push pushl call push pushl call and push push pushl call movzbl push push push pushl call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push movzwl mov cmp pop jne mov add mov mov pop ret sub je dec je mov dec cmp ja movzwl mov mov mov mov mov mov pop ret mov add mov mov pop ret mov add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push pushl movl movl andb movl movl movl call mov movl mov movl mov mov lea mov andb movl movl xor movl mov movw movb mov pop mov pop ret int3 int3 int3 int3 int3 push mov push lea push lea call testb movl je mov test je push call movl testb je test je push push pushl call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb movl je mov test je push call movl mov movl mov movl mov mov lea mov mov test je mov push mov add mov call lea pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov push mov push pushl call test je mov lea mov mov push mov push pushl orb andb push push call test je mov pop pop ret xor pop pop ret sub jmp sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov cmp jne mov push mov pushl pushl call mov push pushl call mov push push push pushl call push push push pushl call mov pop movl mov pop pop ret cmp jne mov push mov pushl push pushl call mov pop pop ret cmp jne mov test je pushl mov pushl mov push pushl call mov mov mov pop pop ret cmp jne cmpl je pushl pushl call pop pop ret lea cmp ja pushl pushl pushl push call movzbl pop pop ret xor pop pop ret int3 int3 push mov push mov mov test jne mov pushl or pushl mov mov push mov pushl call andb mov pop pop ret int3 int3 push mov mov sub add push push mov cmp ja jmp mov test je call test je push push lea push mov lea call lea push pushl mov call xor test mov setne pop pop mov mov mov pop ret mov test je mov test je lea push mov mov call mov xor test cmovs jne test js pushl mov push mov call pop mov pop mov pop ret mov test je cmpl jne push call mov pop mov mov pop mov pop ret mov pop movl mov pop mov pop ret push call pop mov pop mov pop ret lea inc mov add mov add mov add in push mov mov movl test je mov push call mov test je mov push call testb movl je mov test je push call movl testb je push push pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push mov mov lea push mov movl movl movl movl movl movl movl movl movl movl movl call mov mov test jne xor pop mov pop ret mov push mov andb push push push push push push push push movzwl push push push call test jne xor test setne pop mov pop ret mov xor test setne pop mov pop ret int3 int3 int3 push mov and sub push push push mov call cmp je pushl movzbl push push pushl call dec neg sbb inc pop pop pop mov pop ret mov movzbl cmp ja jmp mov test je mov add mov add push mov call movl mov mov pop pop pop mov pop ret testb jne push call testb jne call orb mov movl push call push push pushl call test je push push mov call jmp testb jne push call testb jne call orb mov movl push call push push pushl call test je push push mov call jmp testb jne push call testb jne call orb mov movl push call push push pushl call test je push push mov call jmp testb jne push call testb jne call orb mov movl push call push push pushl call test je push push mov call mov test je cmpl jne mov call mov test je cmpl jne mov call mov test je mov pushl mov mov call test je mov mov mov test je mov add mov add push mov call push call mov pushl pushl push push push call push push mov call lea push pushl call mov sub push mov push mov sub push sub call push pushl call pushl call mov call mov test je cmpw je mov push mov pushl push mov call mov pop pop pop mov pop ret test je mov push mov add add mov call pushl call test je mov push mov mov pushl pushl call push call pop pop xor pop mov pop ret les inc add inc add mov add mov int3 int3 push mov sub push mov call cmp je push mov jmp lea push call test je cmp jne pop pop mov pop ret pushl call mov xorps movq mov lea movq push movl movl movl movl call pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov sub push xorps mov movq mov mov mov movq mov mov mov mov or movq movl movq movl mov movl call cmp lea je push push push pushl call pop mov pop ret push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov push movzwl push push pushl call mov test je push pushl call mov test je push pushl call test je push call test je push push call mov test je push call mov test je lea push push movl movl call mov mov mov jmp xor mov push call test je mov movl test jne pop mov pop pop mov pop ret mov push mov call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je cmp jne call movl testb je push push pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov push push call mov mov mov cmp jne push push push mov call mov mov mov mov test je mov movl mov mov add lea push push pushl push call mov test je pushl push push call pop mov pop pop pop ret pop pop xor pop pop ret int3 int3 push mov push lea mov call testb je test je push push pushl call mov pop pop ret int3 int3 mov push mov lea movl mov mov testb je testb je mov test je push push call mov mov movl testb movl je mov test je push call movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov push push call mov mov mov cmp jne mov push push push call mov mov mov test je mov lea push push push push mov movl call mov test je mov pop pop pop pop ret mov push push pushl push call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov mov xorps push mov mov movl movq movl test js test jns lea push pushl test je call test jne xor pop pop pop mov pop ret call test jne xor pop pop pop mov pop ret test jns mov sub mov test jns mov sub mov and mov je push pushl mov mov movl movl mov call mov mov push pushl call push push push lea push call test je mov mov sub sub mov mov mov sub sub cltd sub mov mov sar mov add mov and mov mov je cmp cmovle mov mov mov mov sub sub cltd sub mov mov sar mov mov add mov test je cmp cmovle mov lea test je cmp cmovge cmpl lea je cmp cmovge mov sub sub cmpl mov mov je testb je mov mov test je push call mov mov mov jmp xor test je push call mov mov mov jmp xor push lea push lea mov push mov push push push pushl call test je mov mov mov mov push push mov push push push push pushl call neg pop sbb pop neg pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov sub push mov test jne push pushl call xorps lea push push movq movq movq movq movl movl call test jne xor pop mov pop ret pushl lea pushl mov push push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov xor mov test jne test jne cmp jbe mov test js test je lea push call mov jmp xor test js mov sub push lea test mov cmovne cmp ja cmpw je pop test mov mov pop cmove pop mov pop ret pop pop xor pop mov pop ret push push lea push mov mov call pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor test jne test jne cmp jbe mov test js mov test mov cmovne push xor test jne cmp je test jne pop mov pop pop ret mov jmp push pushl lea push push push xor call add test js cmp ja je mov jmp mov movb add pop test jns cmp jne mov test je mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push mov xor test jne test jne cmp jbe mov test js mov test mov cmovne push xor test jne cmp je test jne pop mov pop pop ret mov jmp push pushl lea push push push xor call add test js cmp ja je mov jmp mov xor mov lea pop test jns cmp jne mov test je mov mov pop pop pop ret int3 push mov push mov push mov test je cmp ja xor mov test je mov cmp je inc dec jne jmp test jne mov test je test js sub mov jmp movl test js pop mov pop pop ret mov test je movl pop mov pop pop ret int3 int3 int3 int3 int3 int3 push mov xor push mov test je lea cmp je add dec jne jmp test jne mov mov test je test js sub mov pop pop ret movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push xor push test je mov mov sub test je mov test je mov inc dec inc dec jne dec dec mov jmp test jne dec dec mov jmp xor movb mov mov test je mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push xor push test je mov mov sub test je movzwl test je mov add dec inc dec jne sub dec mov jmp test jne sub dec mov jmp xor xor mov mov mov test je mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push test jne xor mov pop ret lea push call mov or test cmovne mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov lea push pushl sub pushl call pop ret int3 int3 int3 push mov sub mov mov mov test jne mov mov pop ret mov push test jne xor jmp lea push mov mov call mov xor test cmovs jne test js push xor movb push jmp lea add cmp jl mov movb lea test jne test je push push pushl call xor jmp test jne testb jne push call testb jne call orb mov movl push call push push pushl call jmp push push push pushl call test je mov pushl mov pushl mov sub pushl call mov cmp jne cmpb je jmp test jne mov pop mov pop xor pop mov pop ret mov test je push push pushl call mov pop pop pop mov pop ret mov pop mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov test jne mov mov pop ret push mov push test jne xor jmp lea push mov mov call test jne mov test js push xor movb add test jle cmp jge test jne test je push push pushl call xor jmp mov movb test jne testb jne push call testb jne call orb mov movl push call push push pushl call jmp push push push pushl call test je mov pushl mov push sub mov pushl call mov cmp jne cmpb jne mov jmp test jne mov mov pop pop xor pop mov pop ret mov test je push push pushl call pop pop mov pop mov pop ret pop mov pop mov pop ret int3 push mov mov mov lea push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov mov mov lea push pushl call add pop ret int3 int3 int3 int3 int3 int3 testb jne push call testb jne call orb mov movl push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 testb push mov jne push call testb jne call orb mov movl push call push push pushl call pop ret int3 int3 int3 int3 int3 int3 int3 int3 testb push mov jne push call testb jne call orb mov movl push call push push pushl call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov mov test jne test je push push pushl call pop movl mov pop ret test jne call push push pushl call jmp push push push pushl call test je mov pop mov pop ret pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 test je push push pushl call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov test jne pop xor pop ret testb jne push call testb jne call orb mov movl push call push push push pushl call mov test je push push push call add mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov mov mov add jne test je push push pushl call movl jmp test jne call push push pushl call jmp push push push pushl call test je mov mov mov add push pushl push call add add pop mov pop pop pop ret pop pop xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmp push push push mov push mov pushl mov mov mov mov seta call mov add test je mov mov mov mov sub add cmpb je sub test jne test je push push pushl call mov movl jmp test jne testb jne push call testb jne call orb mov movl push call push push pushl call jmp push push push pushl call test je mov mov mov mov mov add test je cmp je lea mov mov sub add push push lea push call mov add test je push pushl push call add mov add mov mov mov mov mov mov push pushl sub add call mov add test jne mov cmpb jne mov mov mov call pop pop mov pop mov pop ret pop pop xor pop mov pop ret int3 push mov push push mov mov mov cmp jb test je push sub mov xor push lea mov mov mov sub jb lea mov cmp jne add add sub jae cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp je mov inc inc cmp jbe pop pop xor pop mov pop ret pop pop mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push pushl mov call push push lea push mov call mov push mov push push pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push call mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push pushl movl movl andb movl movl movl call mov movl mov movl mov mov lea mov andb movl movl movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push lea push lea call testb movl je mov test je push call movl testb je test je push push pushl call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb movl je mov test je push call movl mov movl mov movl mov mov lea mov mov test je mov push mov add mov call lea pop jmp int3 int3 int3 int3 int3 int3 push mov push push push push mov push mov push pushl call test je mov lea mov mov push mov push pushl orb andb push push call test je mov pop pop ret xor pop pop ret sub jmp sub sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push pushl mov push pushl lea mov call test jne cmpl mov jne mov shr cmp jne mov cmp jne mov add call pop movzbl pop mov pop ret xor pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push pushl mov call mov mov mov push mov andb push call mov mov push mov mov andb push call mov mov push mov mov andb push call mov push push push push mov call mov call mov push mov push push pushl call pushl call pop xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub lea push push push push mov push pushl call mov test jle lea call mov cmp jle xor test jle movzwl add cmp ja inc cmp jl test je mov push push push pushl call test js push push push pushl call mov cmp jne xor movzwl xor xor test je movl jmp lea cmp je cmp jb cmp jbe cmp jne movzwl add test jne jmp movzwl test je nop cmp jae cmp je cmp jb cmp jbe cmp je xor jmp test jne mov mov inc movzwl add test jne xor mov mov mov lea push lea push mov shl movzwl pushl lea pushl push push push call mov xorps mov movq mov movq lea mov mov movq mov movl mov add mov movq movl mov movl movl call cmp mov lea je push push mov push pushl call jmp push call cmp je mov add push pushl mov call test je cmp jne mov push lea push call push lea push push call mov shl mov mov test cmovne add lea push push mov lea call push lea push lea push mov lea call push lea push lea push mov lea call push lea push call mov mov pushl call test je mov mov pushl call mov push push call mov pop pop pop mov pop ret mov mov xorps mov movq mov mov movq mov movq mov mov mov movl movq movl mov movl movl call cmp lea je push push push pushl call mov pop pop pop mov pop ret push call mov pop pop pop mov pop ret mov xorps mov movq mov mov movq mov movq mov mov mov movl movq movl mov movl movl call cmp lea je push push push pushl call jmp push call push pushl call pushl call pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 mov push push call mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push mov push push mov push pushl call test js push push push pushl call cmp je mov shl push movzwl push lea push mov call mov call push pushl call push pushl call xor xor cmp jae mov movl mov lea movzwl imul add movzwl cmp jb cmp ja lea push lea push mov call push lea push mov mov pushl call mov inc cmp jb mov mov pushl call mov pop pop pop mov pop ret pop movl pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov push push test jns movzwl mov cmp jb mov cmp ja pop xor pop mov pop ret movzwl mov cmp jne shl pop movzwl mov pop mov mov mov mov mov mov pop ret mov cmp jne lea push cmpl lea je pushl call mov test je pushl push call mov test je mov mov mov xor mov mov movw movb pushl push push push push mov sub pushl sub cltd sub sar add push push push mov sub sub cltd sub sar add push pushl call pushl pushl call pushl call pop pop xor pop mov pop ret pushl pushl pushl push call pop pop mov pop ret int3 int3 push mov sub push push mov mov push mov xor mov lea mov movzwl mov mov pushl push push pushl call test js push push push pushl call cmp je mov mov call mov test je lea push pushl movl call test je mov mov mov lea push pushl movl call test je mov mov push push mov pushl call test je mov movl mov push mov call mov mov inc add add mov cmp jb push push push pushl call pop pop pop mov pop ret int3 int3 int3 int3 int3 push mov sub push push push mov push pushl call mov push push push pushl call mov shl mov test je mov movl test je push push push pushl call mov test js pushl push push pushl call push pushl push pushl call incl mov add test jne push push push pushl call push pushl push pushl call push pushl call pop pop pop mov pop ret int3 int3 push mov push push mov push pushl movl movl andb movl movl movl call mov movl mov push movl mov push mov lea mov andb movl movl andb movl movl andb movl movl andb lea push movl movl movl call add movl mov pop mov pop ret push mov push lea push lea call testb movl je mov test je push call movl testb je test je push push pushl call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov movl mov lea movl mov mov mov lea mov mov test je push call add dec jne testb mov movl je mov test je push call mov testb movl je mov test je push call movl testb movl je mov test je push call movl testb movl je mov test je push call movl mov movl mov movl mov mov lea mov mov test je mov push mov add mov call pop lea pop pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov push mov push pushl call test je mov lea mov mov push mov push pushl orb andb push push call test je mov pop pop ret xor pop pop ret sub jmp sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push mov cmp jne lea push call movzbl pop mov pop ret cmp jne lea mov mov shr push movzwl push push call movzbl pop mov pop ret cmp jne mov lea mov mov test je push push call mov mov movl mov pop mov pop ret cmp jne cmpw jne mov lea mov mov test je push push call mov mov movl xor pop mov pop ret cmp jne mov mov cmp jne cmpl jne lea push call mov mov mov pop mov pop ret cmp jne cmpl je cmp jne cmpl jne mov test je push push pushl call mov movl mov pop mov pop ret cmp jne cmpl jne lea push call mov pop mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub mov push push push pushl mov mov mov pushl call mov push pushl call mov mov mov push push push pushl call push mov push push pushl call mov push mov mov andb push call push push mov call and or push push pushl call push push push pushl call mov test je push push push pushl call push push pushl call pushl call mov xorps movq movq movq movq movq movl movl mov mov mov lea push push push pushl movl call mov lea mov push mov mov mov inc push push pushl mov call mov call mov mov pushl call lea push push call push call mov mov lea mov sub sub shl mov sub mov sub cmp jg mov sub cmp jg mov sub push push push lea push mov mov add call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push pushl mov pushl push push push pushl call lea push pushl call mov sub cltd sub mov sar push push push pushl call push push push pushl call pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push orl testb mov je cmpl je push lea push push movl call add lea push push push push pushl call test je cmpl jne push push push pushl mov call mov mov pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov mov mov mov lea push push push pushl movl movl call test je mov test je cmpl jle push push lea push mov lea call lea push call test je lea push push jmp push push mov mov pushl call pop xor pop mov pop ret int3 int3 int3 int3 push mov sub push push push mov push push mov push pushl call mov add push mov mov call mov test jne pop pop pop mov pop ret push lea push push call add lea push lea push push movl movl movl call test je cmpw je incl lea push call or lea mov call mov lea push push push pushl call mov test js lea push call test je push lea push push movl call add lea mov lea push push mov push pushl movl call jmp decl mov lea push lea push push call test jne mov test je testb je push call pushl call push push pushl call mov pushl call mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl andb movl movl mov mov movl mov andb mov movl mov mov lea mov andb movl movl movl mov mov pop ret int3 int3 push mov push lea push lea call testb movl je mov test je push call movl testb je test je push push pushl call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb movl je mov test je push call movl mov mov movl mov mov testb je testb je mov test je push push call mov mov movl pop ret sub jmp sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push pushl mov pushl lea pushl mov call test jne cmpl mov jne cmpl jne push mov add call mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 int3 push mov push push push pushl mov call movzwl xor xor cmp jae mov mov movzwl imul cmp je inc cmp jb xor add mov mov push mov push push pushl call pop pop xor pop pop ret movzwl imul add jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea push mov push pushl call push lea push mov mov pushl call mov mov pushl call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov movzwl cmp jne movsbl xor mov div push push lea xor mov inc mov test jle mov movl movl movsbl inc add cmp jl xor mov mov pop mov pop mov pop pop ret sub je dec je mov dec cmp ja movzwl mov pop mov mov mov mov mov pop ret mov lea mov mov pop pop ret mov lea mov mov pop pop ret int3 int3 push mov push push mov push pushl movl movl andb movl movl movl call mov movl mov movl mov mov lea mov movl movb mov pop mov pop ret int3 int3 push mov push lea mov call testb je test je push push pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movl mov movl mov mov lea mov mov test je mov push mov add mov call lea call testb movl je mov test je push call movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov push mov push pushl call test je mov lea mov mov push mov push pushl orb andb push push call test je mov pop pop ret xor pop pop ret sub jmp sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea push push push push push push call test je cmp jae lea push call sub lea push lea movl call xor test jne mov cmp je test je push call mov pop pop pop mov pop ret mov add lea push push push push push lea push push call mov mov add test jne mov lea push push call mov mov add test je push push pushl call test je mov push lea push push push push call test je cmp jne mov jmp xor push mov push pushl call jmp mov push call test je lea push push lea push push xor call add test jne push push lea push call mov add xor push mov lea push push push push mov lea movl movl call add movzbl test mov cmovne test je push push pushl call test jne push lea push call lea push call mov pop pop pop mov pop ret pop pop xor pop mov pop ret int3 int3 push mov mov sub add mov cmovne push push lea push mov lea call test jne lea push call test je mov add je push lea push call mov xor test setne mov pop ret mov xor test setne mov pop ret xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push add xor xorps push mov movl movl movq movl cmp je mov mov and lea add mov mov and inc not xor lea xor cmpw jne push lea push lea push call sub mov push lea call test jne mov lea lea push lea call add test je mov push lea push call lea push call mov push push push push lea add push push call test je push lea push call cmpb je mov add push push lea push push call add test jne mov jmp xor mov add mov lea mov call mov mov test je push lea xorps push push movl movq movl call add lea push lea push pushl movl push push push push push push push call test jne xor jmp pushl mov call pushl call mov pushl push pushl call jmp xor test je push push pushl call test jne push lea push call lea push call xor pop pop pop mov pop ret pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push mov push pushl call test je cmp jne push mov mov call mov add lea push push push push and push or call test jne mov push push call test je test je push call push call pushl call call pop pop mov pop mov pop ret int3 int3 push mov sub push push push push push call push call mov xor test je lea push push lea push push movl call cmp jne mov lea test je call mov test je lea push push lea push push call cmp jne mov mov mov mov movl test jle mov mov call cmp jne lea call test je lea lea mov call test jne mov cmp je inc cmp jb lea call test jne jmp lea mov mov cmpb jne mov test je push push pushl call push push pushl call test jne call movzwl xor jmp lea cmp je inc cmp jb movl pop pop pop mov pop ret lea mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov push mov sub push push push mov mov test jne xor mov mov pop pop pop mov pop ret movl mov mov mov dec mov cmp jl cmpw jne cmpw jne sub sar add movl mov mov pop pop pop mov pop ret add jmp mov ret mov movl or mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 push push mov mov test je movzwl test je push xor xor cmp jne movzwl cmp je cmp jne add mov movzwl lea cmp ja shl lea add movzwl add jmp lea cmp ja shl lea add movzwl add jmp lea cmp ja shl lea add movzwl add jmp test je or mov mov pop pop pop ret xor mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb xor pop ret movzbl mov shl sub lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub cmpl push mov jb xor pop mov pop ret lea push call pushl add lea mov call add neg sbb and pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov push push pushl mov mov call test je cmp jne mov lea push push push push push xor movl movl and call mov test jne mov lea push lea push lea push push push push call mov test je test je push call push call mov test jne cmpl jne cmpl jne xor lea xorl add cmp jb cmpl jne xor mov mov pushl call test jne push lea push push call add lea push movl call lea push lea push call mov mov push add push adc push push call mov cmpb je mov lea push mov lea add call test jne mov test js push push push lea push push push call test jle cmpw je cmp jge xor mov mov pop pop pop mov pop ret pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 push mov sub push push mov push pushl xor call test je cmp jne push push lea push lea call mov test jne xor jmp lea push mov mov call mov xor test cmovs jne test js push push push lea push push push push push call test jle cmpb je cmp jge movb push lea push call mov pushl call pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmpl ja mov call test jne xor pop pop ret mov push lea test je push call push push push push push pushl call test jne mov pop xor pop pop ret pop mov pop pop ret int3 int3 push mov and push push mov mov test jne mov test je mov lea cmp jae mov test je cmp jne inc cmp jb movb xor pop mov pop ret movb cmpl je mov test je push push call test jne push call mov pop mov pop ret cmp sete test je xor pop mov pop ret mov xor mov dec cmp ja jmp push push call mov pop mov pop ret push push call mov pop mov pop ret push push call mov pop mov pop ret push push call mov mov pop mov pop ret mov je inc add inc add int3 int3 int3 int3 int3 int3 push mov sub push push push mov mov test je mov lea xor cmp jae lea cmpb jne inc cmp je inc cmp jb xor pop pop pop mov pop ret inc cmp sbb and je lea push mov mov call test jne mov lea cmp ja push push push mov call mov add test je push lea movl movl movl call push mov call test je lea push push lea call test je lea call mov add mov mov xor call test mov je push lea push mov call mov test je mov lea xor cmp jae lea cmpb jne inc cmp je inc cmp jb xor mov mov call cmp jl cmp ja test push mov cmovne push lea push mov lea call jmp inc cmp sbb and jmp xorps movq movq movq movq movw movb push lea push call mov lea push lea push push push push push push push and push or call mov test jne pushl mov pushl push push push push call mov test je test je push call push call test mov sete pushl call mov test je push push pushl call mov pop pop pop mov pop ret cmpl ja mov test je push call mov test je push push call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov test je mov lea xor cmp jae lea cmpb jne inc cmp je inc cmp jb xor push call pop ret inc cmp sbb and push call pop ret int3 int3 int3 push mov mov sub mov push push push test je mov lea xor cmp jae cmpb jne inc cmp je inc cmp jb xor pop pop pop mov pop ret inc cmp sbb and je lea push mov mov call test jne cmpl jne mov push pushl xor call test je cmp jne push lea push lea call push push lea push mov lea call test jne push lea push call test je mov mov mov pushl call pushl call pop pop mov pop mov pop ret int3 int3 push mov sub push movl mov push push mov xor xor mov test je mov lea cmp jae jmp lea cmpb jne inc cmp je inc cmp jb xor lea call test jne mov test je jle test je mov xor lea cmp jae cmpb jne inc cmp je inc cmp jb mov testb je lea call test je test je push call jmp inc cmp sbb and jmp inc cmp sbb and je lea push push call mov add mov test je movl pushl lea push movl movl movl call test je xor jmp mov test jns mov push pushl call test je cmp jne mov mov test je mov lea xor cmp jae jmp lea cmpb jne inc cmp je inc cmp jb xor push call call mov pushl call mov mov mov lea pushl push call mov mov pushl call mov pop pop pop mov pop ret inc cmp sbb and jmp mov push pushl mov call test je cmp je xor jmp mov lea push lea push push push push push push push and push or call mov test jne pushl mov pushl push push push push call mov test je test je push call push call test mov sete pushl call pushl call test je mov push push lea call mov mov pushl call pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push push push push pushl mov call test je cmp jne mov lea push push push push and push movl mov call mov test jne mov lea push lea push push push lea mov call mov test je test je push call push call test mov jne test je mov jmp xor mov pushl call test jne xor pop pop pop mov pop ret mov xor mov cmp jbe mov shr cmpl jne lea cmp jne lea mov lea add cmp jae mov mov mov mov mov inc dec cmp jb lea push push lea call add test je push pushl lea call add mov jmp mov test je push push pushl call pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub lea push push call test je xor pop pop mov pop ret mov push pushl xor call test je cmp jne push lea push lea call mov cmp je mov push lea push call pushl mov call mov pop pop mov pop ret pushl mov call pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov sub push push mov push pushl xor call test je cmp jne push lea push lea call push lea push push call add lea push call pushl mov call pop mov pop mov pop ret int3 mov push mov push mov movl lea push movl movl movl call mov movl movl movb movb movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub lea push push mov call test jne xor pop mov pop ret lea mov mov mov mov mov mov mov lea push push push push mov movl movl movl movl movl movl call pop mov pop ret int3 int3 int3 int3 int3 push mov push mov test je mov test je xor cmp jne mov jmp cmp jne inc mov xor cmp jl lea cmp jg lea movsbl lea inc lea mov cmp jge test je or test je neg mov pop mov pop ret movl pop mov pop ret int3 int3 int3 int3 int3 int3 push mov sub push mov push mov mov mul movzwl shr imul add movzwl mov push movzwl mov shl xor add mov mov mov cmp ja mov shl mov cmp not cmova mov mov mov shl xor cmp ja mov shl cmp ja not mov shl xor cmp ja shl mov not cmp cmova lea xor shr xor shr lea xor xor shr xor shr and movl add je movl mov shr shl xor mov shr and xor mov shl xor mov lea xor shr and shl xor lea xor shr and shl xor mov xor xor xor divl mov inc mov add mov mov cmp jb mov mov mul mov sub shr add shr lea sub sub lea mov mov mov sub lea jmp lea movzwl mov lea test jne pop pop lea pop mov add test jne sub sar mov mov pop ret int3 int3 int3 int3 int3 int3 push mov and sub push mov push push mov mov mov mov mov mov mov mov mov jmp lea push push lea push push call test je cmp jne lea push call mov sub je sub jne mov mov mov mov mov lea push call test je lea mov lea mov lea push push pushl movl push mov movl movl movl jmp mov mov mov mov mov lea push call test je lea mov lea push push pushl movl push mov movl movl call test je push call push push lea push push call test je pop pop xor pop mov pop ret push call jmp int3 int3 int3 int3 int3 push mov and sub mov push mov push push mov mov call push call mov pushl lea push push push push call add mov lea lea call mov test je push lea xorps push push movl movq movl call add lea push lea push push push push push push push push push movl call test jne xor jmp movdqa movdqa psrldq movd push push pushl call test je mov mov push mov push lea push push mov call mov test je push mov call jmp mov mov test je push call xorps movdqa test jmp push pushl call cmp je mov test je push push pushl call pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov push mov mov push lea push push call test je cmp je xor mov pop ret mov mov pop ret push mov sub push mov push add xor xorps push mov movl movl movq movl cmp je mov mov and lea add mov mov and inc not xor lea xor cmpw jne push push lea push mov lea call push lea push lea push call lea push push push call mov pop mov xor test pop setne pop mov pop ret int3 int3 int3 int3 push pushl call test je cmp je xor ret mov ret int3 int3 int3 int3 int3 push mov and sub push mov push push mov mov test je push pushl call test je cmp je or pop pop pop mov pop ret mov lea push push push push push movb movl movl and call mov test jne mov lea push push lea push push push push call mov test je test je push call push call mov mov test jne cmpl jne cmpl jne mov xorl add cmp jb cmpl jne xor mov mov jmp mov test je pushl call test jne push push push call add lea push movl call lea push lea push call mov mov push add push adc push push call mov xor pop pop pop mov pop ret pop pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push cmpl je xor pop pop pop mov pop ret mov lea rep xor xorl add cmp jb mov lea push lea push push push push push push push and push or call mov test jne mov push lea push push push push push call mov test je test je push call push call xor test pop pop sete pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov sub push push mov test je push push lea push mov lea call test jne cmpw lea je mov cmpw jne mov add cmpw jne push pushl call test je cmp jne push call push lea push call add pushl test sete call mov pop pop mov pop ret pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push pushl call test je cmp je xor pop mov pop ret testb jne push call testb jne call orb mov movl push call push push push pushl call mov test je andb andb lea push push push push push movl call test jne mov mov mov pop pop mov pop ret mov test je testb je push call pushl call push push pushl call pushl call pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push mov push push lea push push lea push push pushl movl pushl call incl cmp je test jne cmpl jne test je lea push mov mov call mov xor test cmovs mov jne cmp jle cmp je lea cmpw jne mov add cmp jne pop pop mov pop mov pop ret cmp jne xor pop mov pop mov pop mov pop ret pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov push push mov push mov test je push push lea push mov lea call test jne cmpw lea je mov nop cmpw jne mov add cmpw jne push pushl call test je cmp jne mov lea push push push push and push or call mov test jne mov lea push push call mov test je test je push call push call test mov sete pushl call mov pop pop pop mov pop ret pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push push push mov xor call mov test je lea push lea push push mov call test je cmpw je inc cmp jae lea push lea push push call test jne mov test je testb je push call pushl call push push pushl call pushl call pop mov pop pop mov pop ret jmp int3 int3 int3 int3 mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret jmp jmp jmp add add
 int3 int3 int3 int3 int3 int3 data16 mov sub jb cmp jb test je test je mov dec mov inc test je mov sub mov add test je mov sub mov add mov shr jne mov shr je mov mov add dec jne and test jne mov retq nopl mov mov inc dec jne mov retq data16 data16 data16 cmp jae mov mov add mov mov mov mov dec mov mov jne and jmpq data16 xchg cmp jb mov prefetchnta prefetchnta add dec jne sub mov mov mov movnti movnti mov mov movnti movnti mov mov add movnti movnti mov mov dec movnti movnti jne sub cmp jae lock jmpq data16 data16 data16 xchg add cmp jb test je test je dec mov dec mov test je sub mov sub mov test je sub mov sub mov mov shr jne mov shr je sub mov dec mov jne and test jne mov retq nopl dec mov dec mov jne mov retq data16 data16 data16 cmp jae mov mov sub mov mov mov mov dec mov mov jne and jmpq data16 xchg cmp ja mov sub prefetchnta prefetchnta dec jne add mov mov mov movnti movnti mov mov movnti movnti mov mov sub movnti movnti mov mov dec movnti movnti jne sub cmp jae lock jmpq mov sub movq movq lea xor xor mov callq mov callq test jne mov jmp mov callq mov cmpl jne mov jmp movl jmp mov inc mov cmpl jge mov mov callq test jne jmp jmp mov callq mov add retq int3 mov mov mov mov retq mov mov mov mov sub xor mov mov div mov test je mov jmpq cmpl jne cmpq jbe mov mov lea callq mov mov mov mov callq movl jmp mov inc mov cmpl jge movslq mov movzbl movslq mov movzbl xor movslq mov mov jmp mov lea mov callq mov add mov mov add mov mov sub mov jmpq jmpq cmpq jbe movl jmp mov inc mov cmpl jge movslq mov movzbl movslq mov movzbl xor movslq mov mov jmp mov mov mov mov callq mov mov mov callq mov add mov mov add mov mov sub mov jmpq xor add retq mov mov mov mov sub mov mov mov mov add mov mov imul mov movzbl shl mov imul mov movzbl shl or mov imul mov movzbl shl or mov imul mov movzbl or mov imul mov mov imul mov movzbl shl mov imul mov movzbl shl or mov imul mov movzbl shl or mov imul mov movzbl or mov imul mov mov imul mov movzbl shl mov imul mov movzbl shl or mov imul mov movzbl shl or mov imul mov movzbl or mov imul mov mov imul mov movzbl shl mov imul mov movzbl shl or mov imul mov movzbl shl or mov imul mov movzbl or mov imul mov mov imul mov mov mov xor mov imul mov mov add mov mov imul mov mov mov xor mov imul mov mov add mov mov imul mov mov mov xor mov imul mov mov add mov mov imul mov mov mov xor mov imul mov mov add mov cmpl je mov dec mov lea mov mov lea callq mov add mov lea lea mov mov callq mov add mov lea mov mov lea callq mov add mov lea lea mov mov callq mov add mov lea mov mov lea callq mov add mov lea lea mov mov callq mov add mov cmpl je mov imul mov imul mov mov mov and shl mov imul mov imul mov mov mov and shr or mov imul xor mov imul mov mov imul mov imul mov mov mov or mov imul xor mov imul mov mov add mov mov imul mov imul mov mov mov or mov imul xor mov imul mov mov imul mov imul mov mov mov and shl mov imul mov imul mov mov mov and shr or mov imul xor mov imul mov mov add mov jmpq mov imul mov mov mov xor mov imul mov mov add mov mov imul mov mov mov xor mov imul mov mov add mov mov imul mov mov mov xor mov imul mov mov add mov mov imul mov mov mov xor mov imul mov mov add mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov imul mov mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov imul mov mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov imul mov mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov imul mov mov mov xor add retq int3 int3 mov mov mov sub mov imul mov imul mov mov mov mov xor mov mov imul mov imul mov mov mov mov xor mov mov shr and mov lea movzbl shl mov shr and mov lea movzbl shl or mov shr and mov lea movzbl shl or mov and mov lea movzbl or mov mov shr and mov lea movzbl shl mov shr and mov lea movzbl shl or mov shr and mov lea movzbl shl or mov and mov lea movzbl or mov mov shl mov shr or mov xor mov mov mov shl mov shr or mov xor mov mov mov shr mov shl or mov xor mov mov mov shr mov shl or mov xor mov mov mov imul mov mov mov xor mov imul mov mov mov imul mov mov mov xor mov imul mov mov add retq int3 int3 int3 mov mov mov push sub mov mov cmpl je cmpl je cmpl je jmp mov movl movl jmp mov movl movl jmp mov jmpq mov add mov mov mov lea callq mov cmpl je mov jmpq mov shl shl cltq lea mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov lea cltq mov mov sub mov jmp mov dec mov mov sub mov cmpq jbe mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov jmp mov sub mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov lea mov xor mov rep xor add pop retq mov mov mov push sub mov add mov lea mov xor mov rep mov xor mov rep mov mov cmpl je cmpl je cmpl je jmp mov movl movl jmp mov movl movl jmp mov jmpq movq jmp mov inc mov xor mov mov div mov cmp jae mov mov add mov mov mov mov jmp cmpl jne movq jmp mov inc mov cmpq jae mov movzbl not mov mov jmp movq jmp mov inc mov cmpq jae lea mov lea mov imul movzbl shl lea mov lea mov imul movzbl shl or lea mov lea mov imul movzbl shl or lea mov lea mov imul movzbl or mov lea mov imul mov lea mov lea mov imul movzbl shl lea mov lea mov imul movzbl shl or lea mov lea mov imul movzbl shl or lea mov lea mov imul movzbl or mov lea mov imul mov jmpq lea mov xor mov rep movq jmp mov inc mov cmpq jae mov movzbl shl mov movzbl shl or mov movzbl shl or mov movzbl or mov mov jmp movq jmp mov inc mov cmpq jae mov mov mov mov xor mov mov jmp lea mov imul lea lea mov mov mov mov mov callq lea mov imul lea lea mov mov mov mov mov callq movq jmp mov inc mov cmpq jae mov mov mov mov xor mov mov jmp lea mov imul lea lea mov mov mov mov mov callq lea mov imul lea lea mov mov mov mov mov callq cmpl jbe movq jmp mov inc mov cmpq jae mov mov mov mov xor mov mov jmp lea mov imul lea lea mov mov mov mov mov callq lea mov imul lea lea mov mov mov mov mov callq mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov movq jmp mov inc mov cmpq ja movslq imul lea add mov mov imul add mov movzbl test je mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov jmpq movq jmp mov inc mov cmpq jae movslq imul lea add mov mov imul add mov movsbl cmp je movslq imul lea add mov mov imul add mov movsbq mov mov mov mov jmpq cmpl jbe mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov movq jmp mov inc mov cmpq ja movslq imul lea add mov mov imul add mov movzbl test je mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov jmpq movq jmp mov inc mov cmpq jae movslq imul lea add mov mov imul add mov movsbl cmp je movslq imul lea add mov mov imul add mov movsbq mov mov mov mov jmpq mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov movq jmp mov inc mov cmpq ja movslq imul lea add mov mov imul add mov movzbl test je mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov jmpq movq jmp mov inc mov cmpq jae movslq imul lea add mov mov imul add mov movsbl cmp je movslq imul lea add mov mov imul add mov movsbq mov mov mov mov jmpq cmpl jbe mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov movq jmp mov inc mov cmpq ja movslq imul lea add mov mov imul add mov movzbl test je mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov jmpq movq jmp mov inc mov cmpq jae movslq imul lea add mov mov imul add mov movsbl cmp je movslq imul lea add mov mov imul add mov movsbq mov mov mov mov jmpq movq jmp mov inc mov cmpq jae movslq imul lea add mov mov movsbl cmp je movslq imul lea add mov mov movsbq imul add movslq add mov mov mov mov jmp xor add pop retq int3 int3 int3 mov mov mov mov sub cmpl jae xor jmpq movl jmp mov inc mov cmpl jae jmp movl jmp mov inc mov cmpl jae mov add mov mov lea movzbl mov movzbl xor mov add mov mov mov jmp movl jmp mov inc mov cmpl jae jmp mov mov lea callq test je xor jmpq mov add mov mov sub mov mov mov mov mov mov mov lea callq xor mov mov div mov test je xor jmpq movl jmp mov add mov mov cmp jae mov mov add mov mov mov add mov mov mov lea mov xor lea callq test je xor jmp jmp mov mov cmpl je xor jmp mov mov add mov mov mov mov sub mov mov mov add retq mov sub movl lea lea lea mov callq test je xor jmp movl jmp mov inc mov cmpl jge movslq lea movb jmp movl jmp mov inc mov cmpl jge movslq movzwl test jne jmp movslq movslq lea mov mov jmp mov add retq int3 int3 xor mov sub inc mov inc cmp jb retq int3 int3 mov mov mov sub mov mov mov mov cmpq jbe mov mov mov mov mov inc mov mov inc mov mov dec mov jmp add retq int3 mov mov sub movl movl movl movl movl movq mov lea lea lea callq lea lea mov callq mov cmpl je jmpq mov callq lea lea mov callq mov cmpl je jmpq xor mov callq mov cmpl je jmpq lea mov callq mov cmpl je jmpq mov mov callq mov cmpl jne jmpq mov mov mov mov xor callq mov cmpq jne jmp lea mov mov mov callq mov cmpl je jmp lea lea mov mov callq test jne jmp mov lea mov mov mov callq test jne jmp callq movl cmpl je mov callq cmpl je mov callq cmpq je mov xor mov callq mov add retq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq
 mov mov mov mov mov push push push push push sub mov mov mov sub testb mov mov mov jne xor mov mov cmp jbe lea mov cmp jb mov cmp jae cmpl je cmpl je mov lea mov add callq test js jle cmpl jne cmpq je lea callq test je mov mov callq mov mov mov add callq mov mov movslq mov mov add mov mov mov callq callq inc add cmp jae jmpq xor jmp mov xor sub cmp jbe lea mov cmp jb mov cmp jae cmp jb cmp jae testb jne cmpl je mov cmp je jmp mov add mov mov mov add callq inc add cmp jb mov lea mov mov mov mov pop pop pop pop pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 data16 data16 xchg sub xor xor mov mov callq add retq int3 int3 int3 int3 int3 int3 data16 data16 mov mov mov mov jmp int3 int3 int3 int3 int3 int3 xchg retq int3 int3 int3 int3 int3 int3 data16 data16 nop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor retq int3 mov sub movq movq lea xor xor mov callq mov callq test jne mov jmp mov callq mov cmpl jne mov jmp movl jmp mov inc mov cmpl jge mov mov callq test jne jmp jmp mov callq mov add retq int3 mov mov mov mov retq mov mov mov mov sub xor mov mov div mov test je mov jmpq cmpl jne cmpq jbe mov mov lea callq mov mov mov mov callq movl jmp mov inc mov cmpl jge movslq mov movzbl movslq mov movzbl xor movslq mov mov jmp mov lea mov callq mov add mov mov add mov mov sub mov jmpq jmpq cmpq jbe movl jmp mov inc mov cmpl jge movslq mov movzbl movslq mov movzbl xor movslq mov mov jmp mov mov mov mov callq mov mov mov callq mov add mov mov add mov mov sub mov jmpq xor add retq mov mov mov mov sub mov mov mov mov add mov mov imul mov movzbl shl mov imul mov movzbl shl or mov imul mov movzbl shl or mov imul mov movzbl or mov imul mov mov imul mov movzbl shl mov imul mov movzbl shl or mov imul mov movzbl shl or mov imul mov movzbl or mov imul mov mov imul mov movzbl shl mov imul mov movzbl shl or mov imul mov movzbl shl or mov imul mov movzbl or mov imul mov mov imul mov movzbl shl mov imul mov movzbl shl or mov imul mov movzbl shl or mov imul mov movzbl or mov imul mov mov imul mov mov mov xor mov imul mov mov add mov mov imul mov mov mov xor mov imul mov mov add mov mov imul mov mov mov xor mov imul mov mov add mov mov imul mov mov mov xor mov imul mov mov add mov cmpl je mov dec mov lea mov mov lea callq mov add mov lea lea mov mov callq mov add mov lea mov mov lea callq mov add mov lea lea mov mov callq mov add mov lea mov mov lea callq mov add mov lea lea mov mov callq mov add mov cmpl je mov imul mov imul mov mov mov and shl mov imul mov imul mov mov mov and shr or mov imul xor mov imul mov mov imul mov imul mov mov mov or mov imul xor mov imul mov mov add mov mov imul mov imul mov mov mov or mov imul xor mov imul mov mov imul mov imul mov mov mov and shl mov imul mov imul mov mov mov and shr or mov imul xor mov imul mov mov add mov jmpq mov imul mov mov mov xor mov imul mov mov add mov mov imul mov mov mov xor mov imul mov mov add mov mov imul mov mov mov xor mov imul mov mov add mov mov imul mov mov mov xor mov imul mov mov add mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov imul mov mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov imul mov mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov imul mov mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov shr mov imul mov mov mov imul mov imul mov mov mov xor add retq int3 int3 mov mov mov sub mov imul mov imul mov mov mov mov xor mov mov imul mov imul mov mov mov mov xor mov mov shr and mov lea movzbl shl mov shr and mov lea movzbl shl or mov shr and mov lea movzbl shl or mov and mov lea movzbl or mov mov shr and mov lea movzbl shl mov shr and mov lea movzbl shl or mov shr and mov lea movzbl shl or mov and mov lea movzbl or mov mov shl mov shr or mov xor mov mov mov shl mov shr or mov xor mov mov mov shr mov shl or mov xor mov mov mov shr mov shl or mov xor mov mov mov imul mov mov mov xor mov imul mov mov mov imul mov mov mov xor mov imul mov mov add retq int3 int3 int3 mov mov mov push sub mov mov cmpl je cmpl je cmpl je jmp mov movl movl jmp mov movl movl jmp mov jmpq mov add mov mov mov lea callq mov cmpl je mov jmpq mov shl shl cltq lea mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov lea cltq mov mov sub mov jmp mov dec mov mov sub mov cmpq jbe mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov jmp mov sub mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov add mov mov add mov lea mov xor mov rep xor add pop retq mov mov mov push sub mov add mov lea mov xor mov rep mov xor mov rep mov mov cmpl je cmpl je cmpl je jmp mov movl movl jmp mov movl movl jmp mov jmpq movq jmp mov inc mov xor mov mov div mov cmp jae mov mov add mov mov mov mov jmp cmpl jne movq jmp mov inc mov cmpq jae mov movzbl not mov mov jmp movq jmp mov inc mov cmpq jae lea mov lea mov imul movzbl shl lea mov lea mov imul movzbl shl or lea mov lea mov imul movzbl shl or lea mov lea mov imul movzbl or mov lea mov imul mov lea mov lea mov imul movzbl shl lea mov lea mov imul movzbl shl or lea mov lea mov imul movzbl shl or lea mov lea mov imul movzbl or mov lea mov imul mov jmpq lea mov xor mov rep movq jmp mov inc mov cmpq jae mov movzbl shl mov movzbl shl or mov movzbl shl or mov movzbl or mov mov jmp movq jmp mov inc mov cmpq jae mov mov mov mov xor mov mov jmp lea mov imul lea lea mov mov mov mov mov callq lea mov imul lea lea mov mov mov mov mov callq movq jmp mov inc mov cmpq jae mov mov mov mov xor mov mov jmp lea mov imul lea lea mov mov mov mov mov callq lea mov imul lea lea mov mov mov mov mov callq cmpl jbe movq jmp mov inc mov cmpq jae mov mov mov mov xor mov mov jmp lea mov imul lea lea mov mov mov mov mov callq lea mov imul lea lea mov mov mov mov mov callq mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov movq jmp mov inc mov cmpq ja movslq imul lea add mov mov imul add mov movzbl test je mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov jmpq movq jmp mov inc mov cmpq jae movslq imul lea add mov mov imul add mov movsbl cmp je movslq imul lea add mov mov imul add mov movsbq mov mov mov mov jmpq cmpl jbe mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov movq jmp mov inc mov cmpq ja movslq imul lea add mov mov imul add mov movzbl test je mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov jmpq movq jmp mov inc mov cmpq jae movslq imul lea add mov mov imul add mov movsbl cmp je movslq imul lea add mov mov imul add mov movsbq mov mov mov mov jmpq mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov movq jmp mov inc mov cmpq ja movslq imul lea add mov mov imul add mov movzbl test je mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov jmpq movq jmp mov inc mov cmpq jae movslq imul lea add mov mov imul add mov movsbl cmp je movslq imul lea add mov mov imul add mov movsbq mov mov mov mov jmpq cmpl jbe mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov mov imul mov imul mov mov movq jmp mov inc mov cmpq ja movslq imul lea add mov mov imul add mov movzbl test je mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov mov imul mov imul xor mov mov div mov mov mov mov shl mov mov imul mov imul mov xor mov mov mov div mov mov sub mov mov mov mov shr mov xor mov mov shl lea mov imul mov jmpq movq jmp mov inc mov cmpq jae movslq imul lea add mov mov imul add mov movsbl cmp je movslq imul lea add mov mov imul add mov movsbq mov mov mov mov jmpq movq jmp mov inc mov cmpq jae movslq imul lea add mov mov movsbl cmp je movslq imul lea add mov mov movsbq imul add movslq add mov mov mov mov jmp xor add pop retq int3 int3 int3 mov sub movq movl movl lea mov movl mov lea mov xor callq mov cmpq jne jmp mov mov callq mov cmpl je cmpl jne xor mov callq jmp movl cmpq jne xor callq jmp mov callq mov add retq int3 int3 mov mov mov mov sub cmpl jae xor jmpq movl jmp mov inc mov cmpl jae jmp movl jmp mov inc mov cmpl jae mov add mov mov lea movzbl mov movzbl xor mov add mov mov mov jmp movl jmp mov inc mov cmpl jae jmp mov mov lea callq test je xor jmpq mov add mov mov sub mov mov mov mov mov mov mov lea callq xor mov mov div mov test je xor jmpq movl jmp mov add mov mov cmp jae mov mov add mov mov mov add mov mov mov lea mov xor lea callq test je xor jmp jmp mov mov cmpl je xor jmp mov mov add mov mov mov mov sub mov mov mov add retq mov sub movl lea lea lea mov callq test je xor jmp movl jmp mov inc mov cmpl jge movslq lea movb jmp movl jmp mov inc mov cmpl jge movslq movzwl test jne jmp movslq movslq lea mov mov jmp mov add retq int3 int3 xor mov sub inc mov inc cmp jb retq int3 int3 mov mov mov sub mov mov mov mov cmpq jbe mov mov mov mov mov inc mov mov inc mov mov dec mov jmp add retq int3 mov mov sub movl movl movl movl movl movq mov lea lea lea callq lea lea mov callq mov cmpl je jmpq mov callq movl lea lea mov callq mov cmpl je jmpq xor mov callq mov cmpl je jmpq lea mov callq mov cmpl je jmpq mov mov callq mov cmpl jne jmpq mov mov mov mov xor callq mov cmpq jne jmp lea mov mov mov callq mov cmpl je jmp lea lea mov mov callq test jne jmp mov lea mov mov mov callq test jne jmp mov callq test jne jmp movl cmpl je mov callq cmpl je mov callq cmpq je mov xor mov callq mov add retq mov sub cmpq jne mov jmp callq jmp xor add retq int3 jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq rex sub mov mov add pop retq int3
 cmp jne ret jmp push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret int3 mov push mov sub mov push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne lea mov mov mov mov mov cmp je jmp lea lea mov lea mov mov mov test je mov call movb test jl jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je mov push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je mov push push mov call jmp mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret push call pop mov mov test jne inc ret andl xor ret mov push mov push xor push push cmp jne cmp jle decl mov push mov jmp xor jmp cmpl jne mov mov mov mov push mov jmp cmp je push call push push push call test jne jmp movl mov push pop test je push call jmp push push movl call pop pop test jne push push call pop mov xor pop cmp jne push push call cmp je push call pop test je pushl push pushl call incl jmp push call push push push call test jne mov cmp je push call pop jmp mov test je mov add jmp mov test je call sub cmp jae push call andl andl pop push push movl call xor inc pop pop pop pop ret push push call mov xor inc mov xor mov mov cmp jne cmp jne mov jmp cmp je cmp jne mov cmp je mov mov pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je mov movl pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmpl jne cmp jne movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov cmp je cmpl jne movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov mov cmp je cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov movl call mov call ret movl ret mov push mov cmpl jne call pop jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov push call push call push call push call leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test jbe mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret push push call andl mov push call pop test je mov sub push push call pop pop test je mov shr not and movl jmp mov mov mov xor cmp sete mov ret mov movl xor call ret mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret mov push mov pushl pushl pushl pushl push push call add pop ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp je test jne mov mov not mov pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea sub push push push mov mov push mov movl mov lea mov ret mov mov pop pop pop pop leave push ret mov ret push mov sub mov push push push mov add mov mov mov cmp je movl lea mov mov mov movzwl test je mov movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne mov mov mov cmp je mov cmp jae mov mov test je lea sub lea movzwl mov test jne mov lea test je cmpw je add cmpw jne xor lea mov mov mov test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne cmp je mov cmp jne xor pop pop pop mov pop ret mov jmp push mov sub push call mov cmpl jne xor inc jmp lea mov call lea push call lea mov mov call lea push call cmpl mov je test je call jmp xor pop mov pop ret push push push call mov mov mov andl andl call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov test je mov mov call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov xor movl inc jmp xor pop pop pop ret push mov sub push mov lea call call lea push call mov mov call pop mov pop ret push mov and sub push push mov mov push test je movzwl mov xor cmp jne mov add mov mov mov xor add cmp jne cmp je mov mov add mov add mov add mov xor mov cmp jbe mov mov mov add movl mov mov mov mov test mov je mov mov mov test jle movzbl mov imul and shl add imul mov xor mov inc dec mov mov mov test jne mov mov mov mov cmp mov je inc add mov cmp jb xor pop pop pop mov pop ret mov mov movzwl mov add cmp jb mov add cmp jae mov xor mov test je xor cmp jne mov inc inc mov test jne test jle mov mov mov mov test jle movzbl lea cmp ja add movzwl mov imul and shl add imul xor inc dec mov cmpb jne mov call mov mov test jne mov mov mov call mov lea push push lea push call test jne lea push lea push push push call neg sbb not and lea push call mov test je inc add mov test je mov mov test jle movzbl mov imul and shl add imul xor inc mov dec mov test jne mov mov mov mov call jmp mov jmp int3 push mov and cmpl jne call push push push push push push call add xor inc mov pop ret push push call xor mov decl jne mov movl mov movl push pushl call test jne call push push push push push push call add jmp xor inc ret mov push xor push push push push call add orl call ret push push call xor mov mov movl movl mov mov mov push push push push push call add push push call mov test jne call push push push push push push call add jmp push push mov call test jne call push push push push push jmp mov xor inc mov mov movl push call push pushl call test jne call push push push push push push call add push push push call push call mov mov test je push push push push push call add push call test je push call jmp xor inc ret mov push xor push push push push call add orl call ret push push call xor mov movl mov mov mov mov mov movl movl movl mov call mov mov call test je mov push push mov push push push call add jmp call mov mov call mov mov push push push test je push push call add push push push call push call mov test jne push push push push jmp push push call cmp jne push push push push push call add mov push call mov mov lea push call jmp push push call add push push push push push call add mov test je push call jmp xor inc ret mov push xor push push push push call add orl xor call ret push mov push push xor push mov mov test je cmp je cmp jne imul imul not not jmp imul imul jmp imul imul mov and cmp jae lea jmp push pop sub mov movzwl and mov cmp jae lea jmp push pop sub movzwl mov add shr shr cmp jl push xor mov pop push mov pop push mov pop pop pop mov mov mov mov xor pop pop ret push mov push andl push mov cmpl je push lea push pushl push pushl call test jne pushl call orl pop mov pop ret push mov push push mov mov push mov mov push lea call push mov mov call pop pop pop pop pop pop ret push push pop push mov pop push pop push mov pop push pop mov xor mov mov mov mov mov mov mov pop ret push mov sub push mov lea call mov push call lea mov lea call pop test je push push xor lea push push call mov call test jne cmp je cmp jne xor inc mov pop pop mov pop ret push mov push movzbl cmpl je call mov cmp jae andl jmp sub cmp jb mov call test je andl xor inc jmp call mov xor pop pop ret push mov sub push push lea movl push lea mov push mov call test je mov mov push lea test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne movzbl lea sub push push mov call xor add cmp setne mov pop pop pop mov pop ret push mov sub push push mov or lea call push call lea mov lea call test jne or jmp xor push mov push lea push call test jne call cmp jne push call jmp push push push push push push lea push call mov cmp jne inc cmp jb mov pop pop pop mov pop ret push push call xor mov or mov mov mov mov xor mov xor cmpb jbe mov jmp call test je mov call test je mov call mov cmp je lea mov movb push lea lea call movl push lea lea call movb push lea lea call add call mov push lea lea call pop call mov push lea lea call mov xor mov push lea lea call andl push lea lea call mov xor mov push lea lea call mov mov push lea lea call add mov mov xor mov mov mov test jne test je mov and mov je shrd shr inc jmp mov push lea lea call pop mov mov test jne test je mov and mov je mov push lea lea call pop mov dec cmp ja jmp add mov pushl call add push mov jmp add mov mov lea jmp add mov pushl call jmp add mov mov mov mov push lea jmp add mov mov lea push mov lea call pop shrd shr jmp cmpl je pushl call pushl call andl jmp xor inc ret mov orl call ret mov cltd xor add mov xor add in add mov add mov add test jne xor mov ret mov push push mov xor xor mov cmp je sub cmp je add mov xor mov cmp jne pop pop ret push mov push push push mov xor push mov cmp jne mov jmp movzwl push test je mov movl sub mov test je movzwl test je movzwl lea cmp ja lea movzwl jmp mov movzwl mov lea cmp ja lea movzwl jmp mov mov movzwl movzwl sub jne add xor cmp jne jmp xor cmp je add add movzwl test jne xor pop pop pop mov pop ret mov jmp push mov sub push push xor mov inc push push call test je push xor push push push push call test je push lea mov push push push call mov mov test je lea push lea push lea push pushl call test je push pushl push push call movl mov mov mov pop pop pop mov pop ret cmpl je call test jne ret andl mov ret jmp jmp jmp jmp jmp jmp jmp jmp
 int3 int3 int3 int3 int3 int3 data16 cmp jne rol test jne retq ror jmpq sub mov callq mov mov test jne mov jmp andq xor add retq mov mov push push push push push sub xor mov mov cmp jne mov cmp jle lea sub mov jmp mov callq xor lock jne mov cmp je mov callq jmpq mov cmp je mov add jmp mov cmp je callq sub cmp jae mov callq mov mov mov xchg jmpq xor jmpq mov cmp jne mov mov mov jmp cmp je mov callq xor lock jne jmp mov mov cmp je mov callq jmp lea lea mov mov cmp jae cmp jne mov cmp je callq add cmp jb cmp jne lea lea callq movl cmp jne mov xchg cmp je lea callq cmp je mov mov mov callq add mov mov mov add pop pop pop pop pop retq int3 int3 mov mov mov push push push sub mov mov mov mov mov test jne cmp jne xor mov jmpq cmp je cmp jne mov test je movl mov callq mov mov jmp xor mov mov mov test je mov mov mov callq mov mov jmp xor mov mov mov test je mov mov mov callq mov mov jmp xor mov mov mov cmp jne test jne xor xor mov callq jmp mov mov mov xor xor mov callq jmp mov mov mov mov test je xor xor mov callq jmp mov mov mov test je cmp jne mov mov mov callq mov mov jmp xor mov mov mov mov test je cmpl je mov mov mov callq mov mov jmp xor mov movl mov add pop pop pop retq int3 int3 int3 mov mov push sub mov mov mov cmp jne callq mov mov mov mov mov add pop jmpq int3 int3 int3 mov sub lea callq mov mov xor lea mov callq mov cmpq je movq lea mov lea mov lea mov mov mov mov xor callq jmp mov mov lea add mov mov mov mov mov movl movl mov mov mov mov xor callq lea callq callq mov mov callq add retq int3 int3 int3 int3 int3 int3 int3 mov mov cmp je xor retq movslq add xor cmpl jne mov cmp sete repz int3 movslq xor mov add movzwl movzwl lea test je mov cmp jb mov add cmp jb inc add cmp jb xor retq mov retq int3 int3 sub mov lea mov callq test je sub mov mov callq test je mov shr not and jmp xor add retq int3 int3 int3 mov push sub mov andq movabs cmp je not mov jmp lea callq mov callq mov xor callq mov xor callq lea mov xor callq mov xor movabs and movabs cmp cmove mov not mov mov add pop retq int3 sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg lea retq mov mov push sub mov mov mov mov add mov cmp je xor lea mov mov mov movzwl jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne cmp je mov cmp jae movzwl mov test je lea sub lea movzwl mov test jne movzwl lea test je cmpw je add cmp jne mov movzwl lea mov jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne cmp je mov cmp jne xor lea mov mov mov pop retq mov jmp int3 int3 int3 mov mov mov push sub callq mov cmpl jne mov jmpq mov mov xor xor lea mov cmp je mov cmp je mov add xor mov test jne lea callq mov mov xor mov cmp je mov cmp je mov add xor mov test jne lea callq mov cmp je test je callq jmp xor lea mov mov mov mov pop retq mov mov push sub callq mov mov andq andq mov callq lea mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov test je mov mov callq lea mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq lea mov mov callq lea mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq movl mov mov jmp xor mov mov add pop retq int3 rex sub xor mov lea test jne mov jmp mov mov xor mov cmp je lea lea sub sub lea cmp je add mov xor mov test jne callq lea callq mov mov callq add pop retq int3 int3 mov push push push push mov sub mov xor test je movzwl mov xor cmp jne movslq add mov mov mov xor add cmp jne cmp je mov mov mov add add add mov mov cmp jbe mov mov mov mov mov add mov mov cmpb mov je mov test jle movzbl inc mov mov and shl imul add imul xor mov dec mov mov test jne mov cmp je inc add mov cmp jb xor add pop pop pop pop retq mov movzwl mov mov add cmp jb mov add cmp jae mov xor mov mov test je cmp jne mov sub inc mov test jne test jle mov mov mov test jle movzbl lea cmp ja add movzwl inc dec mov and shl add imul imul xor cmp jne mov callq mov mov test jne mov mov mov callq lea lea mov mov callq test jne mov lea lea xor xor callq mov xor test mov cmovne mov lea callq mov test je movslq lea add mov test je mov test jle movzbl inc dec mov and shl add imul imul mov mov xor test jne mov mov callq jmpq mov jmpq int3 int3 sub cmp jne callq mov mov mov mov mov callq mov add retq sub dec jne and movl and movl lea mov callq test jne callq mov mov xor mov mov callq jmp mov xor mov mov callq nop add retq int3 int3 mov push sub xor movl movl and and mov mov mov lea mov callq lea lea callq mov test jne callq mov mov mov xor mov callq jmpq lea mov callq test jne callq mov jmp andl movl andl movl mov callq lea mov callq test jne callq mov mov mov xor mov callq cmpl je callq test jne xor jmp andl lea lea xor lea callq mov mov test je mov mov mov mov callq mov callq test je mov callq jmp mov xor mov mov callq nop mov add pop retq int3 int3 mov mov mov push sub andq lea mov andq andq xor movl lea mov lea mov callq mov lea callq test je mov mov mov mov mov callq jmpq callq mov lea callq mov mov mov mov test je mov callq cmpl je callq test jne xor jmp andl lea lea xor lea callq mov test jne mov mov mov xor callq xor jmpq mov mov callq cmp jne mov mov mov xor callq mov callq xor lea callq jmp mov callq mov mov mov mov callq test je mov callq xor jmp mov xor mov mov callq xor mov mov add pop retq int3 mov mov xor mov mov mov mov mov test je cmp je cmp jne imul imul not not jmp imul imul jmp imul imul mov and cmp jae add jmp mov sub movzwl mov mov and cmp jae add jmp mov sub movzwl add mov shr shr add cmp jl mov mov mov mov mov movl mov mov mov mov xor retq int3 int3 rex sub andl cmpq mov je mov andq lea callq test jne mov callq orq add pop retq int3 mov mov mov push sub mov mov lea mov mov mov callq mov mov mov mov mov add pop jmpq mov mov push lea sub mov mov lea xor movl movl movl movl mov mov callq lea movslq lea mov callq test je lea xor callq mov callq test jne cmp je cmp jne mov mov lea mov mov mov pop retq mov mov push sub movzbl lea cmpl mov je callq cmp jae andl jmp sub cmp jb mov callq test je andl mov jmp callq mov xor mov mov add pop retq int3 int3 mov mov mov push sub mov mov lea lea movl callq xor test je movzwl lea mov jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne movzbl lea sub mov mov mov mov callq cmp setne mov mov mov add pop retq int3 mov mov mov mov push lea sub mov or xor lea movl movl mov lea movl movl mov callq movslq lea lea mov callq test jne or jmp mov lea mov callq test jne callq cmp jne mov callq jmp mov lea xor xor mov mov movl callq mov cmp jne inc cmp jb mov lea mov mov mov mov pop retq mov push push push push push push sub mov mov mov orq andl andq xor cmp ja callq test je mov callq test je mov callq mov cmp je lea movb mov mov lea lea callq mov lea mov lea lea callq mov mov lea lea callq callq mov mov lea lea callq callq mov mov lea lea callq mov xor mov mov lea lea callq andl mov lea lea callq xor mov mov lea lea callq mov mov lea lea callq mov xor mov mov test je mov and je shr add jmp mov mov lea lea callq mov mov test je mov and je mov mov lea lea callq cmp je cmp je cmp je cmp je cmp je cmp je lea cmp jbe jmpq add mov mov mov mov lea jmp add mov mov mov mov lea jmp add mov mov mov callq mov jmp add mov mov mov mov lea jmp add mov mov mov callq lea mov lea callq shr jmpq mov cmp je mov callq mov callq andq jmp add pop pop pop pop pop pop retq int3 cmpw mov mov jne mov retq movzwl test je mov sub mov test je movzwl test je movzwl lea cmp ja add lea cmp ja add movzwl movzwl sub jne add cmp jne cmpw je add add movzwl test jne xor retq mov retq int3 mov mov push push sub lea mov mov mov callq test jne xor jmpq xor xor mov mov callq test je andq lea lea xor mov callq andl andl test je mov lea lea lea callq test je mov xor mov mov callq andl movl mov mov add pop pop retq int3 jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 rex sub mov movl add pop retq rex sub mov mov xor cmpl sete mov mov add pop retq
 cmp jne ret jmp push lea sub sbb not and mov and cmp jb mov pop xchg mov mov ret sub test jmp int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret push mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret mov mov mov push call xor xor xor xor xor jmp push mov push push push push push push push call pop pop pop pop ret push mov push push pushl call add pop ret int3 mov push mov sub mov push mov push mov xor push mov movb movl lea cmp je mov add xor call mov mov add xor call mov testb jne lea mov mov mov mov mov cmp je jmp lea lea mov lea mov mov mov test je mov call movb test jl jg mov mov cmp jne cmpb je mov cmp je mov add xor call mov mov add xor call mov pop pop pop mov pop ret movl jmp mov cmpl jne cmpl je push call add test je mov push push call add mov call mov cmp je mov push push mov mov call mov mov mov mov cmp je mov add xor call mov mov add xor call mov mov mov call mov cmp je mov push push mov call jmp mov push mov mov cmp jne pushl push call pop pop pop ret xor pop ret mov push mov push mov xor jmp test jne mov test je call add cmp jb pop pop ret push call pop mov mov test jne inc ret andl xor ret mov push mov push xor push push cmp jne cmp jle decl mov push mov jmp xor jmp cmpl jne mov mov mov mov push mov jmp cmp je push call push push push call test jne jmp movl mov push pop test je push call jmp push push movl call pop pop test jne push push call pop mov xor pop cmp jne push push call cmp je push call pop test je pushl push pushl call incl jmp push call push push push call test jne mov cmp je push call pop jmp mov test je mov add jmp mov test je call sub cmp jae push call andl andl pop push push movl call xor inc pop pop pop pop ret push push call mov xor inc mov xor mov mov cmp jne cmp jne mov jmp cmp je cmp jne mov cmp je mov mov pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je mov movl pushl push pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmpl jne cmp jne movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov mov cmp je movl push push pushl call jmp mov mov mov mov push push call pop pop ret mov xor mov cmp je cmpl jne movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov mov cmp je cmp je movl pushl pushl pushl call mov jmp mov mov mov mov push push call pop pop ret mov xor mov mov movl call mov call ret movl ret mov push mov cmpl jne call pop jmp mov push mov sub mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl mov mov mov mov push call push call push call push call leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 push push mov jmp push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov cmp je xor pop ret mov add cmpl jne xor mov cmp sete mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov mov add movzwl push push movzwl xor push lea test jbe mov mov cmp jb mov add cmp jb inc add cmp jb xor pop pop pop pop ret push push call andl mov push call pop test je mov sub push push call pop pop test je mov shr not and movl jmp mov mov mov xor cmp sete mov ret mov movl xor call ret mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov ret mov mov pop pop pop pop pop mov pop push ret mov push mov pushl pushl pushl pushl push push call add pop ret mov push mov sub mov andl andl push push mov mov cmp je test je not mov jmp push lea push call mov xor call xor call xor call xor lea push call mov xor xor cmp je test jne mov mov not mov pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push call test jne push call push push call jmp lea int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov lea sub push push push mov mov push mov movl mov lea mov ret mov mov pop pop pop pop leave push ret mov ret push mov sub mov push push push mov add mov mov mov cmp je movl lea mov mov mov movzwl test je mov movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne mov mov mov cmp je mov cmp jae mov mov test je lea sub lea movzwl mov test jne mov lea test je cmpw je add cmpw jne xor lea mov mov mov test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne cmp je mov cmp jne xor pop pop pop mov pop ret mov jmp push mov sub push call mov cmpl jne xor inc jmp lea mov call lea push call lea mov mov call lea push call cmpl mov je test je call jmp xor pop mov pop ret push push push call mov mov mov andl andl call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov test je mov mov call mov mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov test je mov mov call mov test je mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov mov mov call mov xor movl inc jmp xor pop pop pop ret push mov sub push mov lea call call lea push call mov mov call pop mov pop ret push mov and sub push push mov mov push test je movzwl mov xor cmp jne mov add mov mov mov xor add cmp jne cmp je mov mov add mov add mov add mov xor mov cmp jbe mov mov mov add movl mov mov mov mov test mov je mov mov mov test jle movzbl mov imul and shl add imul mov xor mov inc dec mov mov mov test jne mov mov mov mov cmp mov je inc add mov cmp jb xor pop pop pop mov pop ret mov mov movzwl mov add cmp jb mov add cmp jae mov xor mov test je xor cmp jne mov inc inc mov test jne test jle mov mov mov mov test jle movzbl lea cmp ja add movzwl mov imul and shl add imul xor inc dec mov cmpb jne mov call mov mov test jne mov mov mov call mov lea push push lea push call test jne lea push lea push push push call neg sbb not and lea push call mov test je inc add mov test je mov mov test jle movzbl mov imul and shl add imul xor inc mov dec mov test jne mov mov mov mov call jmp mov jmp int3 push mov and cmpl jne call push push push push push push call add xor inc mov pop ret push push call xor mov decl jne mov movl mov movl push pushl call test jne call push push push push push push call add jmp xor inc ret mov push xor push push push push call add orl call ret push push call xor mov mov movl movl mov mov mov push push push push push call add push push call mov test jne call push push push push push push call add jmp push push mov call test jne call push push push push push jmp mov xor inc mov mov movl push call push pushl call test jne call push push push push push push call add push push push call push call mov mov test je push push push push push call add push call test je push call jmp xor inc ret mov push xor push push push push call add orl call ret push push call xor mov movl mov mov mov mov mov movl movl movl mov call mov mov call test je mov push push mov push push push call add jmp call mov mov call mov mov push push push test je push push call add push push push call push call mov test jne push push push push jmp push push call cmp jne push push push push push call add mov push call mov mov lea push call jmp push push call add push push push push push call add mov test je push call jmp xor inc ret mov push xor push push push push call add orl xor call ret push mov push push xor push mov mov test je cmp je cmp jne imul imul not not jmp imul imul jmp imul imul mov and cmp jae lea jmp push pop sub mov movzwl and mov cmp jae lea jmp push pop sub movzwl mov add shr shr cmp jl push xor mov pop push mov pop push mov pop pop pop mov mov mov mov xor pop pop ret push mov push andl push mov cmpl je push lea push pushl push pushl call test jne pushl call orl pop mov pop ret push mov push push mov mov push mov mov push lea call push mov mov call pop pop pop pop pop pop ret push push pop push mov pop push pop push mov pop push pop mov xor mov mov mov mov mov mov mov pop ret push mov sub push mov lea call mov push call lea mov lea call pop test je push push xor lea push push call mov call test jne cmp je cmp jne xor inc mov pop pop mov pop ret push mov push movzbl cmpl je call mov cmp jae andl jmp sub cmp jb mov call test je andl xor inc jmp call mov xor pop pop ret push mov sub push push lea movl push lea mov push mov call test je mov mov push lea test je movzwl movzwl lea cmp ja add movzwl add mov imul and shl add imul movzwl xor test jne movzbl lea sub push push mov call xor add cmp setne mov pop pop pop mov pop ret push mov sub push push mov or lea call push call lea mov lea call test jne or jmp xor push mov push lea push call test jne call cmp jne push call jmp push push push push push push lea push call mov cmp jne inc cmp jb mov pop pop pop mov pop ret push push call xor mov or mov mov mov mov xor mov xor cmpb jbe mov jmp call test je mov call test je mov call mov cmp je lea mov movb push lea lea call movl push lea lea call movb push lea lea call add call mov push lea lea call pop call mov push lea lea call mov xor mov push lea lea call andl push lea lea call mov xor mov push lea lea call mov mov push lea lea call add mov mov xor mov mov mov test jne test je mov and mov je shrd shr inc jmp mov push lea lea call pop mov mov test jne test je mov and mov je mov push lea lea call pop mov dec cmp ja jmp add mov pushl call add push mov jmp add mov mov lea jmp add mov pushl call jmp add mov mov mov mov push lea jmp add mov mov lea push mov lea call pop shrd shr jmp cmpl je pushl call pushl call andl jmp xor inc ret mov orl call ret mov cltd xor add mov xor add in add mov add mov add test jne xor mov ret mov push push mov xor xor mov cmp je sub cmp je add mov xor mov cmp jne pop pop ret push mov push push push mov xor push mov cmp jne mov jmp movzwl push test je mov movl sub mov test je movzwl test je movzwl lea cmp ja lea movzwl jmp mov movzwl mov lea cmp ja lea movzwl jmp mov mov movzwl movzwl sub jne add xor cmp jne jmp xor cmp je add add movzwl test jne xor pop pop pop mov pop ret mov jmp push mov sub push push xor mov inc push push call test je push xor push push push push call test je push lea mov push push push call mov mov test je lea push lea push lea push pushl call test je push pushl push push call movl mov mov mov pop pop pop mov pop ret cmpl je call test jne ret andl mov ret jmp jmp jmp jmp jmp jmp jmp jmp
 push mov sub movw xor mov mov mov mov movl movl push call push push call cmp jne push call add push call xor mov pop ret push mov sub push push push movl movl movl movl movl movl movl mov mov lea rep movsb movl movl movl movb movl movl movl movl movl movl movl movb movl mov mov movl movl movl movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb movb mov mov mov mov mov mov push mov push call add test jbe mov mov movsbl push push call movl movl movl push call push push push push call push push call mov add mov mov add mov lea mov movb movb movb movb movb movb movb movb movb movb movb movb movb movb movb movb movb movb movb mov mov lea rep movl mov add mov movw mov mov movb movw movb mov mov movw lea push lea push call push call mov lea push lea push call push call mov mov mov pushl call mov cmpl jbe mov call mov call mov cmpl je cmpl jne mov mov movl mov sub cmp je mov add mov mov add xor mov add mov mov add movb mov and cmp jge mov add mov add mov add mov mov add mov jmp mov mov add mov mov movl jmp pushl pushl push push push push push call mov movl mov xor lea rep push call mov mov call push push push push call call push push push call add pop pop pop mov pop ret push mov sub push push push movl movl movl movl movl movl movl movl movl movl movl movl mov mov cmpl je movl mov add push mov push mov push push mov mov dec push popl call mov mov add mov mov mov movl mov pop pop pop mov pop ret push mov call call pop ret push mov push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor mov and test jne mov or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 jmp push mov push push pushl call mov lea push pushl pushl call pushl mov push call add mov pop pop pop ret push pushl call mov pop mov mov sub add cmp pop jae push call add push pushl call add test jne ret mov sub mov sar lea mov mov mov addl ret pushl call neg sbb pop neg dec ret push call test pop mov jne push call mov pop andl mov mov ret push mov push push push mov push mov sub push push push mov call xor mov mov mov and mov shl add mov shr mov xor push call pop test jne push call pop mov call call mov call mov call call call mov lea push call call mov testb je movzwl jmp push pop push pushl push push call push call mov push call mov mov mov mov push push call pop pop ret mov pushl call cmpl jne call pushl call push call pop pop ret cmpl jne call pushl call pop push call ret push mov pushl call test pop je cmp jne xor jmp cmp jne push pop incl testw jne cmpl push push lea mov jne push call test pop mov jne lea push mov mov pop mov mov jmp mov mov mov mov mov orw push pop pop pop pop ret xor pop ret cmpl push je mov testb je push call andb andl andl andl pop pop ret mov testb je push call pop pop ret push mov sub push push push mov xor mov inc test mov mov mov je mov xor jmp mov mov xor cmp jl cmp jl cmp jg movsbl mov and jmp xor movsbl sar cmp mov ja jmp orl mov mov mov mov mov mov jmp movsbl sub je sub je sub je dec dec je sub jne orl jmp orl jmp orl jmp orb jmp orl jmp cmp jne lea push call test pop mov jge orl neg mov jmp mov movsbl lea lea jmp mov jmp cmp jne lea push call test pop mov jge orl jmp lea movsbl lea mov jmp cmp je cmp je cmp je cmp jne orb jmp orl jmp orl jmp cmpb jne cmpb jne inc inc orb mov jmp mov mov mov movzbl testb je lea push pushl movsbl push call mov add inc mov lea push pushl movsbl push call add jmp movsbl cmp jg cmp jge cmp jg je sub je dec dec je dec dec je sub jne testw jne orb mov cmp jne mov lea push call testw pop mov mov je test jne mov mov movl mov mov dec test je cmpw je inc inc jmp movl add orl lea cmp mov jge movl jmp testw jne orb testw lea push je call push lea push call add mov test jge movl jmp sub je sub je dec je jmp call pop mov movl lea mov jmp lea push call test pop je mov test je testb je movswl shr mov mov movl jmp andl mov movswl jmp mov mov push jmp jne cmp jne movl mov pushl add mov pushl mov mov mov mov movsbl push lea push lea push call mov add and je cmpl jne lea push call pop cmp jne test jne lea push call pop cmpb jne orb lea mov push call pop jmp sub je sub je dec je dec je sub je dec dec je sub jne movl jmp sub sar jmp test jne mov mov mov mov dec test je cmpb je inc jmp sub jmp movl movl testb movl je mov movb add movl mov jmp testb movl je orb jmp lea push call testb pop je mov mov jmp mov mov movl jmp orl movl testb je lea push call pop jmp testb je testb lea push je call pop movswl cltd jmp call pop movzwl jmp testb lea push je call pop jmp call pop xor testb je test jg jl test jae neg adc mov neg orb mov jmp mov mov testb jne and cmpl jge movl jmp andl mov or jne andl lea mov mov decl test jg mov or je mov cltd push push push push mov mov call pushl mov add pushl push push call cmp mov mov jle add mov decl mov jmp lea sub incl testb mov je mov cmpb jne test jne decl inc mov movb mov cmpl jne mov test je test je movb jmp test je movb jmp test je movb movl mov sub sub test jne lea push pushl push push call add lea push lea pushl pushl push call add test je test jne lea push pushl push push call add cmpl je cmpl jle mov mov lea mov inc push lea push inc call pop test pop jle lea push pushl push lea push call add mov dec test jne jmp lea push pushl pushl pushl call add testb je lea push pushl push push call add mov mov inc test mov jne mov pop pop pop leave ret test inc add inc add inc add sbb clc sbb add inc add sbb push mov mov decl js mov mov mov incl movzbl jmp push pushl call pop pop cmp mov jne orl pop ret incl pop ret push push mov mov dec test jle mov push pushl pushl call add cmpl je mov dec test jg pop pop ret push mov mov dec push push test jle mov mov movsbl push inc pushl push call add cmpl je mov dec test jg pop pop pop ret mov addl mov mov ret mov addl mov mov mov ret mov addl mov mov ret push mov push push test push jne pushl call pop jmp mov test jne push call pop xor jmp xor cmp ja push call mov pop test je cmp ja push push push call add test je mov jmp push call mov pop test je mov dec cmp jb mov push push push call push push call add test jne test jne push pop add and push push pushl call mov test je mov dec cmp jb mov push push push call push push call add jmp test jne push pop add and push push push pushl call mov test jne cmpl je push call test pop jne jmp mov pop pop pop pop ret mov test je call push push call push push call add ret push push pushl call add ret push push pushl call add ret push push pop cmp jne pushl call push call cmpl push mov mov mov jne mov test je mov push lea cmp jb mov test je call sub cmp jae pop push push call pop pop push push call pop pop test pop jne pushl mov call pop ret push mov cmp jae mov test je call add jmp pop ret push mov push call test pop je mov pop sub ret push push pushl call pop ret pushl pushl call pop pop ret cmpl ja pushl call test pop jne cmp je pushl call test pop jne xor ret push mov cmp ja push call test pop jne test jne push pop add and push push pushl call pop ret push mov push pushl call test pop je mov test je cmp jne andl push pop jmp cmp je mov mov mov mov mov cmp jne mov mov add push cmp jge lea sub lea andl add dec jne mov mov cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl jmp cmp jne movl pushl push call pop mov pop pop jmp andl push call pop mov mov or jmp pushl call pop pop ret mov mov cmp push mov je lea lea add cmp jae cmp jne lea pop lea cmp jae cmp je xor ret cmpl jne call push mov mov cmp jne mov inc cmp je test je movzbl push call test pop je inc jmp cmpb jne inc jmp cmp jbe inc cmpb ja mov test je cmp jbe mov pop ret push xor cmp push push jne call mov xor mov cmp je cmp je inc push call pop lea jmp lea push call mov pop cmp mov jne push call pop mov cmp je push push call mov pop inc cmpb je push call cmp pop mov jne push call pop push pushl call pop add pop add cmp jne pop pushl call pop mov mov pop pop movl pop ret push mov push push push xor cmp push push jne call mov push push push call mov mov mov cmp je mov lea push lea push push push push call mov mov lea push call mov add cmp jne push call pop lea push lea push mov lea push push push call mov add dec mov pop pop mov pop leave ret push mov mov mov push push andl mov push mov movl mov test je mov add mov cmpb jne mov inc cmp je test je movzbl testb je incl test je mov mov inc inc incl test je mov mov inc jmp incl test je andb inc cmpb jne inc jmp incl test je mov mov inc mov inc movzbl testb je incl test je mov mov inc inc cmp je test je cmp jne test jne dec jmp test je andb andl cmpb je mov cmp je cmp jne inc jmp cmpb je test je mov add mov mov incl movl xor cmpb jne inc inc jmp cmpb jne test jne xor cmp je cmpb lea jne mov jmp mov mov xor cmp sete mov shr mov dec test je inc test je movb inc incl dec jne mov test je cmpl jne cmp je cmp je cmpl je test je movzbl testb je mov inc inc incl mov mov inc jmp movzbl testb je inc incl incl inc jmp test je andb inc incl jmp test je andl mov pop pop pop incl pop ret push push mov push push mov push push xor xor xor cmp jne call mov cmp je movl jmp call mov cmp je movl jmp cmp jne cmp jne call mov cmp je cmp mov je inc inc cmp jne inc inc cmp jne sub mov sar push push inc push push push push push push mov call mov cmp je push call cmp pop mov je push push push push pushl push push push call test jne pushl call pop mov mov push call mov jmp cmp jne cmp jne call mov cmp je cmp mov je inc cmp jne inc cmp jne sub inc mov push call mov pop cmp jne xor jmp push push push call add push call mov jmp xor pop pop pop pop pop pop ret sub push push push push push call mov pop test jne push call pop mov movl lea cmp jae andb orl movb mov add add jmp lea push call cmpw je mov test je mov lea mov cmp lea jl mov cmp jge mov push call test pop je addl mov lea cmp jae andb orl movb mov add add jmp add cmp jl jmp mov xor test jle mov cmp je mov test je test jne push call test je mov mov sar and mov lea mov mov mov mov inc inc add cmp jl xor mov cmpl lea jne test movb jne push pop jmp mov dec neg sbb add push call mov cmp je push call test je and mov cmp jne orb jmp cmp jne orb jmp orb inc cmp jl pushl call pop pop pop pop add ret xor push cmp push sete push call test mov je call test jne pushl call xor ret push pop ret int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov mov mov ret push push push mov push push push pushl mov mov mov mov cmp je cmp je lea mov mov mov cmpl jne push mov call call jmp popl add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret push push mov jmp push push mov mov mov mov mov pop pop ret int3 int3 push inc xor pop inc xor push mov sub push push push push cld mov mov testl jne mov mov mov lea mov mov mov cmp je lea cmpl je push push lea call pop pop mov or je js mov push call add lea push push call add lea push mov call mov mov call mov lea mov jmp mov jmp mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret push mov mov mov push mov push call add pop ret mov cmp je test jne cmpl jne push call mov pop test je call push call pop ret push mov sub mov xor mov cmp je add inc cmp jl push mov shl cmp jne mov cmp je test jne cmpl je cmp je lea push push push call test jne lea push push call pop pop lea push push lea call inc pop cmp jbe lea push call mov lea sub push add push push call add lea push push call lea push push call lea push push call pushl lea push call push lea push push call add pop jmp lea lea push push pushl call pop push pushl push call push call pop leave ret mov push push test pop jne mov jmp cmp jge mov mov push push call pop mov test pop jne push push mov call pop mov test pop jne push call pop xor mov mov mov add add cmp jl xor mov mov mov sar and mov mov cmp je test jne orl add inc cmp jl pop ret call cmpb je jmp ret mov cmp jb xor ret mov and sar mov mov and ret push mov test jne push call pop pop ret push call test pop je or pop ret testb je pushl call neg pop pop sbb ret xor pop ret push push mov xor push mov mov and cmp jne test je mov mov sub test jle push push pushl call add cmp jne mov test je and mov jmp orl or mov andl mov pop mov pop pop ret push call pop ret push push push xor xor xor cmp jle mov mov test je mov test je cmpl jne push call cmp pop je inc jmp cmpl jne test je push call cmp pop jne or inc cmp jl cmpl mov je mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov test je mov inc test je test jne add mov mov add xor xor add test je mov test je test je test je test je jmp lea mov sub ret lea mov sub ret lea mov sub ret lea mov sub ret push mov mov test jne pop ret cmpl jne mov cmp ja push mov pop pop ret lea andl push push pushl push lea push push push pushl call test je cmpl je movl or pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov push push mov mov mov test je test jne test je andl test je mov and mov mov mov andl andl and or test mov jne cmp je cmp jne push call test pop jne push call pop testw push je mov mov sub lea mov mov dec test mov jle push push push call add mov jmp cmp je mov mov sar and mov lea jmp mov testb je push push push call add mov mov mov jmp push lea pop push push push call add mov cmp pop je orl jmp mov and jmp or mov or pop pop pop ret mov test je pushl call test pop je push pop ret xor ret push push pushl call test mov jne ret andl andl push mov movl pop ret mov lea mov lea cmp jae mov sub cmp jb add jmp xor ret push mov sub mov mov push push mov mov sub mov add push shr mov mov imul dec mov lea mov mov mov test mov jne sar push dec pop mov cmp jbe mov mov cmp jne mov cmp jae mov shr lea not and decb jne mov and jmp add mov shr mov lea not and decb jne mov and mov mov mov mov mov add mov mov mov sar dec cmp jbe push pop mov and mov jne sub mov sar push mov dec pop cmp mov jbe mov mov add mov mov sar dec cmp jbe mov cmp je mov mov cmp jne mov cmp jae mov shr lea not and decb jne mov and jmp add mov shr mov lea not and decb jne mov and mov mov mov mov mov mov mov mov mov cmpl jne cmp je mov lea mov mov mov lea mov mov mov mov mov cmp jne mov cmp mov inc mov jae cmpb jne mov mov shr mov or mov mov shr lea or jmp cmpb jne lea mov shr mov or lea mov shr lea or mov mov mov mov decl jne mov test je mov mov shl add mov push push push call mov mov mov shr or mov mov mov andl mov mov decb mov mov cmpb jne andl mov cmpl jne push push pushl call mov pushl push pushl call mov mov lea shl mov mov sub lea push lea push push call mov add decl cmp jbe sub mov mov jmp mov mov mov pop pop pop leave ret push mov sub mov mov push push lea push lea mov mov lea and mov sar dec cmp jge or shr orl mov jmp add or xor shr mov mov mov mov cmp mov jae mov mov and and or jne add cmp mov jb cmp jne mov cmp mov jae mov mov and and or jne add jmp cmp jne cmp jae cmpl jne add mov jmp cmp jne mov cmp mov jae cmpl jne add jmp cmp jne call mov test mov je push call pop mov mov mov cmpl jne xor jmp mov mov mov cmp mov je mov mov and and or jne mov mov and and andl lea or mov jne mov incl and add mov and or je mov mov xor imul lea mov mov and jne mov push and pop test jl shl inc jmp mov mov mov sub mov mov sar dec cmp jle push pop cmp je mov cmp jne cmp jge mov mov shr mov lea not mov and mov decb jne mov mov and jmp lea mov shr mov lea lea not and decb mov jne mov mov and jmp mov mov mov cmpl mov mov mov mov je mov mov lea mov mov mov mov mov mov cmp jne mov cmp mov jge inc cmpb mov jne mov mov shr or mov mov shr mov or jmp inc cmpb mov jne lea mov shr or mov lea lea mov shr or mov test je mov mov jmp mov mov add lea mov mov mov mov test lea mov jne cmp jne mov cmp jne andl mov mov lea pop pop pop leave ret mov mov push push xor cmp jne lea shl push pushl push pushl call cmp je addl mov mov mov push push lea pushl lea call cmp mov je push push push push call cmp mov jne pushl push pushl call xor jmp orl mov mov incl mov orl mov pop pop ret push mov push mov push push push mov mov xor test jl shl inc jmp mov push imul pop lea mov mov mov add dec jne mov push shl add push push push call test jne or jmp lea cmp ja lea orl orl lea movl mov lea mov movl add lea cmp jbe mov lea add push pop mov mov lea mov mov andl mov mov mov inc test mov mov jne or mov mov shr not and mov pop pop pop leave ret push mov sub mov mov push push push mov mov lea sub mov and shr mov imul lea mov mov dec cmp mov mov lea mov jle test jne add cmp jg mov sar dec cmp mov jbe push pop mov mov cmp jne cmp jae mov shr mov lea not and decb jne mov and jmp add mov shr mov lea not and decb jne mov and mov mov mov mov mov mov mov sub add cmpl jle mov mov sar dec lea cmp jbe push pop mov lea mov mov mov mov mov mov mov mov mov cmp jne mov cmp mov inc mov jae cmpb jne mov mov shr mov or lea mov mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov lea mov mov jmp mov lea mov mov jmp xor jmp jge mov sub lea mov lea mov mov sar dec mov cmp jbe push pop testb jne mov sar dec cmp jbe push pop mov cmp jne cmp jae mov mov shr lea not and decb jne mov and jmp lea mov shr lea not and decb jne mov and mov mov mov mov mov mov mov mov add mov sar dec cmp jbe push pop mov mov lea mov mov mov mov mov mov cmp jne mov cmp mov inc mov jae cmpb jne mov mov shr mov or lea mov mov jmp cmpb jne lea mov shr mov or lea lea mov shr or mov mov mov push pop pop pop pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop sarb add aas inc add inc inc add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov inc shr inc cmp jb rep jmp lea popl add add add add add add add add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov test inc add inc inc add inc inc add leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop dec inc inc add inc add inc add rorl jmp or std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea in inc add inc inc add inc inc add inc inc add inc add inc add inc add inc inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov inc inc inc add inc add inc add add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret push mov test je push call pop test push je push call pop pop pop ret push pushl call pop ret push push pushl call add ret movzbl mov test jne cmpl je movzwl and jmp xor test jne ret push pop ret push mov sub push push push pushl call mov pop cmp mov je xor cmp je xor mov cmp je add inc cmp jl lea push push call cmp jne push xor pop mov cmpl mov rep stos mov jbe cmpb je lea mov test je movzbl movzbl cmp ja orb inc jmp push xor pop mov rep lea mov shl stos lea cmpb mov je mov test je movzbl movzbl cmp ja mov mov or inc cmp jbe inc inc cmpb jne incl add cmpl jb mov movl push mov call lea mov movsl movsl pop mov movsl jmp inc inc cmpb jne push pop orb inc cmp jb push call pop mov movl jmp mov xor mov stos stos stos jmp cmp je call call xor jmp or pop pop pop leave ret mov andl cmp jne movl jmp cmp jne movl jmp cmp jne mov movl ret mov sub je sub je sub je dec je xor ret mov ret mov ret mov ret mov ret push push pop xor mov rep stos xor mov mov mov mov stos stos stos pop ret push mov sub lea push push pushl call cmp jne xor mov mov inc cmp jb mov movb test je push push lea movzbl movzbl cmp ja sub lea inc mov mov shr rep mov and rep inc inc mov test jne pop pop push lea pushl pushl push lea push push push call push lea pushl push push lea push push push pushl call push lea pushl push push lea push push push pushl call add xor lea mov test je orb mov mov jmp test je orb mov jmp andb inc inc inc cmp jb jmp xor mov cmp jb cmp ja orb mov add mov jmp cmp jb cmp ja orb mov sub jmp andb inc cmp jb pop leave ret cmpl jne push call pop movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp lea mov mov push test je mov inc test je test jne mov mov add xor xor add test je mov test je test je test je test je jmp lea jmp lea jmp lea jmp lea mov test je mov inc test je mov inc test jne jmp mov add mov mov add xor xor mov add test je test je test je test je test je jmp mov mov pop ret mov mov movb pop ret mov mov pop ret mov mov pop ret push xor cmp push push jne push call mov cmp je mov push push call test mov je push push call push push mov call mov mov test je call mov test je mov test je push call mov pushl pushl pushl push call pop pop pop ret xor jmp int3 int3 int3 int3 int3 int3 int3 mov push test je push push mov mov test mov jne shr jne jmp mov inc mov inc dec je test je test jne mov shr jne and je mov inc mov inc test je dec jne mov pop pop pop ret test je mov inc dec je test jne mov shr jne mov inc dec jne pop pop mov pop ret mov add dec je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor dec je xor mov add dec jne and jne mov pop pop pop ret push push mov push imul cmp mov ja test jne push pop add and xor cmp ja cmp ja push call mov pop test jne push push pushl call mov test jne cmpl je push call test pop je jmp push push push call add mov pop pop pop ret xor jmp push push push xor pop cmp jle mov mov test je testb je push call cmp pop je inc cmp jl mov pushl call mov pop andl inc cmp jl mov pop pop ret mov cmp jae mov mov sar and mov testb je push call pop push call test jne call jmp xor test je mov movl or ret push mov sub mov push cmp push push jae mov mov sar and lea shl mov mov test je xor cmp mov mov jne xor jmp test je push push push call add mov add testb je mov cmp mov mov jbe lea mov sub cmp jae mov incl mov cmp jne incl movb inc mov inc mov lea sub cmp jl mov lea sub lea push push lea push push mov pushl call test je mov add cmp jl mov sub cmp jb xor mov cmp jne cmp je push pop cmp jne movl mov jmp call mov jmp lea push push pushl pushl pushl call test je mov mov mov jmp call mov jmp pushl call pop jmp mov testb je mov cmpb je movl mov jmp sub jmp andl movl or pop pop pop leave ret push call pop ret mov push cmp push push jae mov mov sar and lea shl mov testb je push call cmp pop jne movl jmp pushl push pushl push call mov cmp jne call jmp xor test je push call pop jmp mov andb lea mov jmp andl movl or pop pop pop ret incl push call pop mov test mov je orl movl jmp orl lea mov movl mov andl mov ret int3 int3 push mov push push mov mov mov mov mov add cmp jbe cmp jb test jne shr and cmp jb rep jmp mov mov sub jb and add jmp jmp nop jmp nop nop dec inc add inc add rorl inc add add jmp add add cmp jb rep jmp lea and mov mov mov shr mov add add cmp jb rep jmp nop and mov mov inc shr inc cmp jb rep jmp lea pop dec inc add add add inc add inc add inc add inc add inc add inc (bad) in inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov js inc add dec inc add inc or leave ret nop mov mov mov pop pop leave ret nop mov mov mov mov mov pop pop leave ret lea mov mov mov mov mov mov mov pop pop leave ret nop lea lea test jne shr and cmp jb std rep cld jmp mov neg jmp lea mov mov cmp jb and sub jmp jmp nop sbb add dec inc add inc add mov dec shr dec cmp jb std rep cld jmp lea mov and mov mov shr mov sub sub cmp jb std rep cld jmp nop mov and mov mov mov mov shr mov sub sub cmp jb std rep cld jmp lea mov inc add inc add dec inc add dec inc add dec inc add dec inc add dec inc add inc (bad) sbb inc mov mov mov mov mov mov mov mov mov mov mov mov lea add add jmp mov adc add push inc add push inc add inc add leave ret nop mov mov mov pop pop leave ret lea mov mov mov mov mov pop pop leave ret nop mov mov mov mov mov mov mov pop pop leave ret push mov push push push mov push mov sub push push push mov xor cmp jne push push push pop push push mov push push call test je mov jmp push push push push push push call test je movl cmp jle pushl pushl call pop pop mov mov cmp jne pushl pushl pushl pushl pushl pushl call jmp cmp jne cmp jne mov mov push push pushl pushl mov neg sbb and inc push pushl call mov mov cmp je mov lea add and call mov mov mov orl jmp push pop ret mov xor mov orl mov cmp je push pushl pushl pushl push pushl call test je push push push pushl pushl pushl call mov mov cmp je testb je cmp je cmp jg pushl pushl push pushl pushl pushl call test jne xor lea mov mov pop pop pop leave ret movl lea add and call mov mov mov orl jmp push pop ret mov xor xor orl mov cmp je push push pushl pushl pushl pushl call test je cmp push push jne push push jmp pushl pushl push push push pushl call mov cmp je mov jmp mov mov test push lea je cmpb je inc mov dec test jne cmpb pop jne sub ret mov ret push mov push push push mov push mov sub push push push mov mov xor cmp jne lea push push pop push push push call test je mov jmp lea push push push push push call test je push pop mov cmp jne mov cmp jne mov pushl pushl pushl pushl push call jmp cmp jne cmp jne mov mov push push pushl pushl mov neg sbb and inc push pushl call mov cmp je mov lea mov add and call mov mov mov push push push call add jmp push pop ret mov xor xor orl cmp je pushl push pushl pushl push pushl call cmp je pushl push push pushl call jmp xor lea mov mov pop pop pop leave ret int3 int3 int3 mov mov test je xor mov push mov cmp jb neg and je sub mov inc dec jne mov shl add mov shl add mov and shr je rep test je mov inc dec jne mov pop ret mov ret push mov push or mov test je or jmp test je push call push mov call pushl call add test jge or jmp mov test je push call andl pop mov andl pop pop ret mov push cmp push jae mov mov sar and lea shl mov add testb je cmpl je cmpl jne xor sub je dec je dec jne push push jmp push push jmp push push call mov orl xor jmp andl movl or pop pop ret mov cmp jae mov and sar mov testb lea je mov ret andl movl or ret mov xor mov mov cmp je add inc cmp jl cmp jb cmp ja movl ret mov mov ret cmp jb cmp movl jbe movl ret int3 int3 int3 int3 push cmp lea jb sub sub test cmp jae sub mov test mov mov mov push ret push push push push mov cmp jae mov mov sar and lea shl mov testb je push call cmp pop je cmp je cmp jne push call push mov call pop cmp pop je push call pop push call test jne call mov jmp xor push call mov pop andb test je push call pop jmp xor jmp andl movl or pop pop pop pop ret push mov mov test je test je pushl call andw xor pop mov mov mov pop ret int3 int3 int3 jmp push mov sub mov or cmp je movzbl mov leave ret mov cmp jne mov leave ret cmp jne call push push lea push push pushl call mov push pushl call mov lea push lea push push pushl call test je cmpl je cmpw jne cmpl je movzbl test jne lea push call test pop jne lea push lea push push pushl jmp movzbl movzbl mov jmp or pushl pushl call mov pop pop pop leave ret mov push push mov test je mov xor xor mov cmp je add inc cmp jl jmp test je lea lea jmp test je lea lea jmp test lea je lea jmp lea jmp test je movzwl lea jmp test je movzwl lea jmp movzwl test je lea jmp lea mov test je cmp jne cmpb jne xor pop pop ret xor push push push push push push push call mov ret mov push mov cmp je cmp je push call mov cmp je cmp je push call pop ret
 int3 int3 int3 int3 int3 int3 data16 cmp jne rol test jne retq ror jmpq sub mov callq mov mov test jne mov jmp andq xor add retq mov mov push push push push push sub xor mov mov cmp jne mov cmp jle lea sub mov jmp mov callq xor lock jne mov cmp je mov callq jmpq mov cmp je mov add jmp mov cmp je callq sub cmp jae mov callq mov mov mov xchg jmpq xor jmpq mov cmp jne mov mov mov jmp cmp je mov callq xor lock jne jmp mov mov cmp je mov callq jmp lea lea mov mov cmp jae cmp jne mov cmp je callq add cmp jb cmp jne lea lea callq movl cmp jne mov xchg cmp je lea callq cmp je mov mov mov callq add mov mov mov add pop pop pop pop pop retq int3 int3 mov mov mov push push push sub mov mov mov mov mov test jne cmp jne xor mov jmpq cmp je cmp jne mov test je movl mov callq mov mov jmp xor mov mov mov test je mov mov mov callq mov mov jmp xor mov mov mov test je mov mov mov callq mov mov jmp xor mov mov mov cmp jne test jne xor xor mov callq jmp mov mov mov xor xor mov callq jmp mov mov mov mov test je xor xor mov callq jmp mov mov mov test je cmp jne mov mov mov callq mov mov jmp xor mov mov mov mov test je cmpl je mov mov mov callq mov mov jmp xor mov movl mov add pop pop pop retq int3 int3 int3 mov mov push sub mov mov mov cmp jne callq mov mov mov mov mov add pop jmpq int3 int3 int3 mov sub lea callq mov mov xor lea mov callq mov cmpq je movq lea mov lea mov lea mov mov mov mov xor callq jmp mov mov lea add mov mov mov mov mov movl movl mov mov mov mov xor callq lea callq callq mov mov callq add retq int3 int3 int3 int3 int3 int3 int3 mov mov cmp je xor retq movslq add xor cmpl jne mov cmp sete repz int3 movslq xor mov add movzwl movzwl lea test je mov cmp jb mov add cmp jb inc add cmp jb xor retq mov retq int3 int3 sub mov lea mov callq test je sub mov mov callq test je mov shr not and jmp xor add retq int3 int3 int3 mov push sub mov andq movabs cmp je not mov jmp lea callq mov callq mov xor callq mov xor callq lea mov xor callq mov xor movabs and movabs cmp cmove mov not mov mov add pop retq int3 sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg sub mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu lea callq test jne lea callq mov lea callq mov mov mov mov movdqu movdqu movdqu movdqu movdqu movdqu add jmpq xchg lea retq mov mov push sub mov mov mov mov add mov cmp je xor lea mov mov mov movzwl jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne cmp je mov cmp jae movzwl mov test je lea sub lea movzwl mov test jne movzwl lea test je cmpw je add cmp jne mov movzwl lea mov jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne cmp je mov cmp jne xor lea mov mov mov pop retq mov jmp int3 int3 int3 mov mov mov push sub callq mov cmpl jne mov jmpq mov mov xor xor lea mov cmp je mov cmp je mov add xor mov test jne lea callq mov mov xor mov cmp je mov cmp je mov add xor mov test jne lea callq mov cmp je test je callq jmp xor lea mov mov mov mov pop retq mov mov push sub callq mov mov andq andq mov callq lea mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov test je mov mov callq lea mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov test je mov mov callq mov test je mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq lea mov mov callq lea mov mov callq mov mov mov callq mov mov mov callq mov mov mov callq movl mov mov jmp xor mov mov add pop retq int3 rex sub xor mov lea test jne mov jmp mov mov xor mov cmp je lea lea sub sub lea cmp je add mov xor mov test jne callq lea callq mov mov callq add pop retq int3 int3 mov push push push push mov sub mov xor test je movzwl mov xor cmp jne movslq add mov mov mov xor add cmp jne cmp je mov mov mov add add add mov mov cmp jbe mov mov mov mov mov add mov mov cmpb mov je mov test jle movzbl inc mov mov and shl imul add imul xor mov dec mov mov test jne mov cmp je inc add mov cmp jb xor add pop pop pop pop retq mov movzwl mov mov add cmp jb mov add cmp jae mov xor mov mov test je cmp jne mov sub inc mov test jne test jle mov mov mov test jle movzbl lea cmp ja add movzwl inc dec mov and shl add imul imul xor cmp jne mov callq mov mov test jne mov mov mov callq lea lea mov mov callq test jne mov lea lea xor xor callq mov xor test mov cmovne mov lea callq mov test je movslq lea add mov test je mov test jle movzbl inc dec mov and shl add imul imul mov mov xor test jne mov mov callq jmpq mov jmpq int3 int3 sub cmp jne callq mov mov mov mov mov callq mov add retq sub dec jne and movl and movl lea mov callq test jne callq mov mov xor mov mov callq jmp mov xor mov mov callq nop add retq int3 int3 mov push sub xor movl movl and and mov mov mov lea mov callq lea lea callq mov test jne callq mov mov mov xor mov callq jmpq lea mov callq test jne callq mov jmp andl movl andl movl mov callq lea mov callq test jne callq mov mov mov xor mov callq cmpl je callq test jne xor jmp andl lea lea xor lea callq mov mov test je mov mov mov mov callq mov callq test je mov callq jmp mov xor mov mov callq nop mov add pop retq int3 int3 mov mov mov push sub andq lea mov andq andq xor movl lea mov lea mov callq mov lea callq test je mov mov mov mov mov callq jmpq callq mov lea callq mov mov mov mov test je mov callq cmpl je callq test jne xor jmp andl lea lea xor lea callq mov test jne mov mov mov xor callq xor jmpq mov mov callq cmp jne mov mov mov xor callq mov callq xor lea callq jmp mov callq mov mov mov mov callq test je mov callq xor jmp mov xor mov mov callq xor mov mov add pop retq int3 mov mov xor mov mov mov mov mov test je cmp je cmp jne imul imul not not jmp imul imul jmp imul imul mov and cmp jae add jmp mov sub movzwl mov mov and cmp jae add jmp mov sub movzwl add mov shr shr add cmp jl mov mov mov mov mov movl mov mov mov mov xor retq int3 int3 rex sub andl cmpq mov je mov andq lea callq test jne mov callq orq add pop retq int3 mov mov mov push sub mov mov lea mov mov mov callq mov mov mov mov mov add pop jmpq mov mov push lea sub mov mov lea xor movl movl movl movl mov mov callq lea movslq lea mov callq test je lea xor callq mov callq test jne cmp je cmp jne mov mov lea mov mov mov pop retq mov mov push sub movzbl lea cmpl mov je callq cmp jae andl jmp sub cmp jb mov callq test je andl mov jmp callq mov xor mov mov add pop retq int3 int3 mov mov mov push sub mov mov lea lea movl callq xor test je movzwl lea mov jmp lea cmp ja add movzwl mov and imul shl add imul xor add movzwl test jne movzbl lea sub mov mov mov mov callq cmp setne mov mov mov add pop retq int3 mov mov mov mov push lea sub mov or xor lea movl movl mov lea movl movl mov callq movslq lea lea mov callq test jne or jmp mov lea mov callq test jne callq cmp jne mov callq jmp mov lea xor xor mov mov movl callq mov cmp jne inc cmp jb mov lea mov mov mov mov pop retq mov push push push push push push sub mov mov mov orq andl andq xor cmp ja callq test je mov callq test je mov callq mov cmp je lea movb mov mov lea lea callq mov lea mov lea lea callq mov mov lea lea callq callq mov mov lea lea callq callq mov mov lea lea callq mov xor mov mov lea lea callq andl mov lea lea callq xor mov mov lea lea callq mov mov lea lea callq mov xor mov mov test je mov and je shr add jmp mov mov lea lea callq mov mov test je mov and je mov mov lea lea callq cmp je cmp je cmp je cmp je cmp je cmp je lea cmp jbe jmpq add mov mov mov mov lea jmp add mov mov mov mov lea jmp add mov mov mov callq mov jmp add mov mov mov mov lea jmp add mov mov mov callq lea mov lea callq shr jmpq mov cmp je mov callq mov callq andq jmp add pop pop pop pop pop pop retq int3 cmpw mov mov jne mov retq movzwl test je mov sub mov test je movzwl test je movzwl lea cmp ja add lea cmp ja add movzwl movzwl sub jne add cmp jne cmpw je add add movzwl test jne xor retq mov retq int3 mov mov push push sub lea mov mov mov callq test jne xor jmpq xor xor mov mov callq test je andq lea lea xor mov callq andl andl test je mov lea lea lea callq test je mov xor mov mov callq andl movl mov mov add pop pop retq int3 jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq jmpq rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rex sub mov mov mov mov mov mov mov mov cmp jne mov mov callq mov jmp movl mov add pop retq int3 int3 int3 int3 rex sub mov movl add pop retq rex sub mov mov xor cmpl sete mov mov add pop retq
