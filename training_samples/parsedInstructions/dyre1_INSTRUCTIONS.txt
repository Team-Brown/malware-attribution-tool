push
push
mov
push
push
mov
mov
xor
pop
stos
inc
dec
je
dec
jne
pop
pop
pop
ret
pop
sub
push
jmp
adc
(bad)
xor
inc
mov
fcos
pop
pop
jle
decl
les
push
and
cmp
ljmp
jge
movl
inc
idiv
inc
mov
out
adc
sub
xchg
sbbl
fcoml
rcr
adc
(bad)
mul
out
jl
scas
pop
std
mov
test
inc
dec
adc
dec
fs
int3
js
scas
outsb
iret
push
lds
stos
out
sub
aad
in
(bad)
mov
push
mov
xor
sub
pmaxub
cmpsl
jmp
in
cmpsl
inc
adc
pop
stos
pusha
push
les
aas
repnz
repz
std
jge
mov
popf
bound
and
stc
stos
ret
inc
(bad)
in
mov
cli
adc
cmp
sub
and
test
(bad)
outsl
cmp
ljmp
mov
sbb
pop
les
adc
inc
mov
(bad)
sub
cmp
les
adcb
and
mov
into
in
popf
icebp
push
add
fnsave
scas
mov
imul
and
test
fisttps
mov
or
out
dec
shrb
add
adc
jecxz
test
js
sbb
test
dec
loopne
insl
jg
mov
inc
xor
push
loop,pt
lods
test
es
mov
xor
jecxz
shrb
add
jg
sbb
inc
mov
in
pop
iret
mov
push
enter
pop
jle
and
dec
in
or
ret
gs
insl
arpl
inc
mov
inc
pop
inc
push
stos
xchg
inc
push
or
push
ljmp
xor
scas
push
flds
fcoms
dec
and
aas
or
paddusb
and
je
stos
lds
fdivrs
jo
popf
imul
sbb
jno
jg
pop
stos
add
imul
push
or
xor
shlb
(bad)
repnz
gs
stc
push
fstpl
lods
sub
and
mov
cs
call
in
outsl
mov
push
fnstcw
aad
insb
movsl
mov
mov
and
insl
std
mov
loope
jnp
ds
sbbl
je
jns
and
lret
add
cmp
cld
add
fsubl
xchg
inc
dec
shl
push
shrl
lcall
add
aas
cmpsl
clc
push
sarl
dec
(bad)
mov
scas
andl
rcll
xchg
sbb
ja
lret
jne
je
pusha
fstl
xchg
lret
inc
ds
dec
daa
sbb
push
inc
testl
(bad)
sbb
leave
cmpsb
mov
push
and
imul
daa
loop
fstpl
inc
inc
pop
mov
and
add
int3
sbb
lods
test
out
arpl
mov
subps
jg
in
xor
stos
pop
fisttpl
je
movsb
jnp
mov
sti
push
and
scas
fwait

adc
cli
repnz
and
test
in
mov
pop
je
into
pop
jmp
fisttpll
adc
adc
fisttpl
or
jge
hlt
xchg
movsb
aam
in
adc
icebp
jno,pt
js
jl
test
sub
jp
cld
faddl
jno
xchg
lods
aam
rorl
out
(bad)
outsl
mov
cs
in
inc
jl
insl
cs
repz
cmpsb
mov
push
mov
push
mov
inc
dec
loop
pop
pop
mov
mov
inc
call
push
call
ret
(bad)
sbb
leave
cmpsb
cwtl
mov
faddl
mov
and
lret
lds
pop
insb
rcl
lret
fmull
out
popa
jg
push
push
jl
lcall
(bad)
xchg
pushf
and
fsubrl
out
outsb
cmc
jne
push
jb
inc
(bad)
sti
lea
dec
cwtl
dec
push
std
cli
mov
fdivr
int
mov
cwtl
inc
imul
push
inc
int
inc
rorb
retw
cmp
test
add
mov
rcll
or
mov
daa
xchg
out
imul
and
mov
jecxz
push
imul
add
jns
jg
sti
sbb
pop
leave
push
push
dec
(bad)
push
mov
fistl
cld
test
out
and
mov
stos
sahf
sbb
add
repz
(bad)
pop
push
mov
push
jg
insl
cmc
dec
rcrb
fstpt
add
dec
sub
and
and
pop
jmp
mov
xchg
inc
adc
andb
insl
mov
data16
mull
mov
outsl
aaa
mov
mov
mov
js
(bad)
and
outsl
or
and
push
push
cs
push
(bad)
ds
mov
jmp
into
icebp
push
xor
rolb
mov
push
or
adc
xlat
fdivrp
mov
mov
mulb
imul
mov
jle
inc
dec
mov
push
and
adc
ret
xchg
push
and
and
(bad)
cmc
jb
or
mov
and
add
mov
stc
fstpl
movsl
ja
sub
mov
pop
int3
and
shl
adc
mov
and
insl
movl
cli
jnp
xor
dec
js
push
cwtl
lret
or
jo
lods
jge
push
dec
jnp
push
into
scas
add
bound
push
add
pop
and
mov
dec
(bad)
xchg
and
insb
stos
or
mov
(bad)
mov
inc
dec
ret
fld
(bad)
loope
xorb
fnstsw
add
aad
icebp
xchg
(bad)
imul
stos
or
leave
sub
imul
movsl
jl
ja
mov
mov
cwtl
push
mov
dec
(bad)
push
repnz
scas
add
stos
add
aad
fabs
(bad)
cmpsl
dec
mov
cmpsb
mov
in
sbb
lret
dec
fcoml
stos
dec
jae
sub
sub
cmp
dec
dec
clc
and
mov
js
test
decl
sbb
cli
jle
push
sub
cmp
dec
ret
fld
(bad)
rclb
and
(bad)
loop
test
repz
fs
pop
cmpsl
rorl
and
add
jle
pop
and
clc
jo
scas
xchg
sub
sub
insb
dec
push
(bad)
(bad)
adc
in
lds
cmc
xchg
cmpsb
test
and
push
arpl
xchg
add
add
fistl
mov
add
stos
xchg
das
and
stos
je
sub
hlt
mov
dec
pshufw
out
xor
dec
lea
or
das
mov
and
into
or
push
ds
fldl
push
scas
and
(bad)
or
sti
cmp
xchg
or
(bad)
int
std
jge
int
mov
nop

and
mov
daa
sub
std
push
cmp
dec
dec
pop
test
mov
sti
inc
out
jb
push
stos
insb
and
mov
pusha
push
pop
cmpsl
in
jmp
sub
inc
jmp
cmp
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int
mov
mov
add
fnsave
mov
int
sbbl
sbb
addl
leave
sub
addl
int
clc
cmp
dec
out
mov
int
xorl
jne
jns
add
mov
sub
xor
xchg
int
orl
mov
sub
and
enter
sub
and
or
imul
andl
add
cmp
int
add
shr
lods
adc
add
(bad)
in
test
cld
cwtl
addl
clc
sbb
mov
les
and
add
or
add
gs
or
movsl
sub
inc
aad
(bad)
daa
xchg
adc
or
mov
mov
int
addl
mov
outsb
mov
add
int
add
sub
and
push
lret
popa
andl
fst
nop

add
and
sub
adc
addl
inc
adc
push
shl
test
or
sub
popa
sbbb
int
or
pushf
pop
mov
lret
pusha
int
addl
jge
rcrb
and
add
add
fldcw
lcall
mov
cmpl
adc
das
hlt
int
or
add
or
sbb
add
andl
cmp
and
mov
push
popa
mov
and
sbb
mov
xchg
addl
insb
and
addl
andl
push
adc
mov
out
lock
jns
stos
mov
andl
xchg
rolb
stc
repnz
into
orb
int
addl
call
shll
addl
mov
or
int
mov
(bad)
adc
xchg
inc
mov
andl
(bad)
dec
mov
(bad)

mov
int
add
in
lods
inc
insl
addl
mov
xchg
loop
mov
pop
mov
andl
pop
or
loop
andl
int
add
negb
outsl
pop
insb
ja
movsl
movsb
out
orb
add
addl
push
jecxz
mov
outsb
or
mov
call
xchg
movsb
add
int
mov
mov
pusha
cmp
addl
fnstsw
test
push
out
orb
mov
add
jbe
mov
mov
lea
andl
add
dec
add
std
movsb
sub
orb
mov
addl
daa
cmp
subb
or
addl
mov
jmp
or
int
mov
jge
mov
int
sbbl
addb
int
add
test
xchg
mov
or
and
int
push
dec
xor
add
aas
jne
in
or
sar
int
fs
add
rolb
mov
mov
ljmp
int
andl
loop
addl
andl
sti
mov
mov
sub
int
add
es
add
sbb
add
and
ret
addl
xor
push
into
cmpl
fimuls
inc
movsl
inc
mov
mov
jle
fdivs
xor
mov
addl
or
addl
test
mov
cmp
add
mov
add
pop
and
mov
mov
(bad)
in
mov
and
mov
jo
andl
test
lahf
bound
repz
rolb
addl
and
int
mull
fs
in
int
addl
fiadds
int3
in
add
andl
mov
arpl
pusha
aas
push
addl
mov
or
in
or
add
stc
or
xchg
fstpl
in
jmp
add
or
loopne
and
mov
shll
movsl
stos
out
aam
jge
mov
addl
jnp
addl
inc
xor
add
mov
sub
je
loope
int
andl
dec
stos
sahf
inc
mov
andl
repz
jp
rorb
sahf
sbb
mov
and
dec
jo
or
add
int
sahf
popa
stos
test
or
xor
gs
addl
hlt
xor
aaa
sub
mov
int
addl
mov
add
int
mov
mov
addl
addl
or
and
int
int
outsb
mov
jl
add
addl
(bad)
fistpl
jp
or
mov
cld
pop
add
int
mov
pcmpeqd
adcb
mov
addl
repz
inc
out
mov
mov
add
sarb
andl
add
stos
push
jmp
xorl
and
pop
sub
add
inc
dec
popa
or
int
mov
dec
mov
int
subl
mov
addl
fsts
or
and
int
jbe
in
lcall
mov
mov
inc
fs
rolb
orl
mov
adc
add
add
or
in
push
ljmp
andl
xorl
addl
andl
or
mov
add
mov
jbe
shll
add
ja
decl
andl
mov
add
test
iret
or
iret
addl
xchg
outsl
bound
addl
negb
int
or
jp
xchg
test
addl
cwtl
int
addl
push
xchg
out
mov
cmp
add
int
add
pop
and
xorl
adc
or
mov
addl
call
or
(bad)
cmp
(bad)
fwait

ljmp
or
mov
adc
int
adc
mov
lods
push
and
int
and
lea
(bad)
and
add
loope
(bad)
fcomi
addl
mov
sbb
or
in
repz
popl
das
and
int
mov
lret
dec
adc
int
add
andl
addl
and
mov
aas
xor
and
shrl
int
xorl
fwait

push
lcall
andl
pop
int3
roll
or
pop
(bad)
mov
pop
dec
add
outsl
mov
mov
andl
adc
(bad)
int3
push
and
and
lock
xor
addl
and
gs
test
mov
int
mov
mov
mov
fwait

dec
addl
addl
dec
mov
int
add
cwtl
in
pusha
mov
addl
mov
ret
fnstcw
mov
jge
iret
ja
jg
test
movsl
fisttps
andl
int
add
inc
adcl
cltd
imul
mov
loop
xchg
icebp
(bad)
mov
or
mov
addr16
je
rolb
int
mov
cmpsb
add
sub
mov
addl
aam
cmpb
sarl
sti
mov
mov
andl
sub
andl
add
add
xorl
mov
or
addl
mov
mov
testb
addl
xchg
xchg
and
sbb
or
lea
inc
cwtl
push
push
adc
mov
outsl
mov
sbb
ja
add
add
inc
sub
mov
mov
add
inc
mov
aad
addl
add
mov
mov
andl
xorl
dec
std
loope
jge
int
addl
andl
add
add
mov
pop
adc
addl
mov
sbb
add
je
dec
mov
mov
andl
addl
add
mov
xchg
inc
inc
mov
mov
pop
push
mov
addl
add
xor
dec
pop
adcl
mov
jno
stos
mov
xchg
add
mov
add
sub
(bad)
fldl
mov
mov
dec
sahf
jecxz
adc
add
sbb
ljmp
andl
mov
incl
int
orl
mov
int
lea
mov
xlat
xor
andl
push
jnp
or
or
or
out
fsubp
and
jg
or
add
ret
repnz
mov
aad
dec
arpl
sahf
(bad)
and
mov
in
sahf
mov
xor
andl
or
icebp
repz
xorl
or
add
mov
shlb
cmpl
int
andl
stos
mov
andl
aad
inc
inc
cmp
das
mov
int
addl
addl
xlat
cmp
sub
int
mov
dec
into
jge
movsl
in
sbb
addr16
andl
cli
inc
jbe
mov
mov
int
add
frstor
mov
int
inc
sbbl
mov
andl
outsb
mov
push
push
test
sub
int
int
jbe
xchg
add
mov
add
sub
or
mov
outsb
adc
orb
lods
add
int
mov
enter
xor
addl
fwait

(bad)
sbb
int3
int
sub
mov
mov
add
les
jno
std
and
int
add
cmp
jl
dec
xchg
xchg
xorl
sti
insb
leave
xchg
call
mov
fstp
push
out
inc
shl
inc
dec
add
push
or
int
mov
test
adc
int
addl
mov
addl
(bad)
pop
mov
addl
int
lods
call
push
inc
mov
mov
andl
fisubl
add
sub
cmc
jno
das
fisubrs
mov
xchg
xlat
push
xorl
andl
(bad)
sbb
int
mov
jmp
cwtl
mov
mov
xorl
lea
sbb
and
add
jns
clc
xchg
jp,pn
add
and
jle
inc
les
addl
sbbb
out
addl
add
xor
and
addl
pop
sahf
stos
cmpsl
cltd
iret
jae
jl
mov
int
add
rclb
sbb
nop

mov
addl
push
mov
aad
lahf
jp
nop

add
mov
add
adc
int
mov
mov
xchg
addl
jb
push
int
mov
add
mov
aaa
jge
add
adcl
addl
dec
(bad)
andl
cwtl
sbb
push
incl
add
add
add
xor
xchg
addl
sbb
adc
add
add
cltd
sti
fistpll
insl
bnd
xchg
andl
or
data16
enter
add
int
subl
add
out
mov
addl
xor
xorl
xor
addl
int
out
fisubrl
mov
lods
cmpsb
dec
aam
int
andl
xorl
mov
andl
scas
mov
adc
mov
and
lea
addl
and
sub
sub
or
subl
andl
fdivrs
mov
int
add
mov
add
int
(bad)
fadds
gs
sahf
jge
int
addl
fcomps
and
andl
int
and
out
faddl
mov
jle
mov
and
mov
sbb
or
mov
dec
mov
mov
int3
cmpsl
add
int
mov
sbb
outsb
fs
addl
mov
xorl
fdivl
pop
subl
mov
std
scas
pop
fbld
andl
add
xorl
sbb
mov
int
mov
inc
out
sbbl
mov
mov
int3
ds
addl
dec
mov
and
mov
addl
jnp
loopne
int
add
inc
lret
mov
sub
mov
mov
andl
(bad)
ffree
add
addl
outsb
popf
subl
int
cmpl
fisttpll
mov
andl
add
mov
inc
sub
mov
addl
outsb
cld
into
adc
sahf
fisttpll
addl
mov
mov
mov
ror
or
int
addl
add
mov
xchg
in
push
add
int
addl
mov
int
add
int
add
out
imul
lock
addl
shlb
xchg
call
int
add
mov
add
dec
sub
push
andl
outsl
push
jne
outsl
movsl
mov
stos
push
add
and
add
or
adc
add
orl
int
or
arpl
bnd
mov
mov
sub
mov
out
jns
cmpsb
addl
jge
jmp
mov
fwait

arpl
int
addl
std
or
add
push
push
icebp
cwtl
xorl
add
andl
movsb
test
and
mov
stos
xchg
or
jle
mov
addl
sbb
xorl
xchg
xchg
lds
int
int
mov
inc
scas
testb
or
iret
jne
sub
add
int
add
xor
addl
fs
addl
and
cmpsl
ret
mov
dec
loope
lea
mov
add
mov
fwait

popf
jg
and
addl
fdivp
cli
cmp
mov
int
orl
mov
int
andl
mov
andl
or
lock
(bad)
sbb
andl
int
iret
fstpl
sub
cmp
add
addl
test
inc
or
mov
das
push
rcll
add
and
andl
and
mov
inc
frstor
addl
sbb
movsb
xor
ror
xchg
arpl
add
dec
fiadds
cs
(bad)
jae
and
int
lds
jecxz
mov
addl
pop
int
fisttps
inc
or
stos
pop
ds
addl
int
mov
mov
pop
frstor
add
int
xorl
sahf
addl
loope
adc
int
add
in
mov
jbe
loopne
xor
mov
andl
rorl
add
mov
mov
addl
add
adc
cmp
cld
mov
andl
bound
cmpsb
addl
andl
or
mov
movsb
and
stos
fcoml
int
add
rorb
loopne
cmp
andl
mov
xor
int
add
iret
popf
addl
inc
out
xchg
mov
mov
icebp
cmpsl
add
int3
push
sbb
int
add
mov
or
mov
int
addl
cmp
pop
into
orl
and
add
pop
and
leave
mov
add
xorl
shlb
or
adc
mov
add
out
mov
addl
addl
int
or
xorl
movsb
outsb
test
movsl
iret
int3
cmpsb
jl
int
int
addl
stc
stc
mov
andl
jl
addl
mov
sahf
clc
mov
cwtl
mov
add
add
hlt
add
andl
in
cltd
pop
mov
and
mov
cmp
loop
mov
mov
andl
sub
int
xorl
and
add
mov
outsb
stos
or
add
adcl
lret
mov
mov
pusha
fdiv
(bad)
fstp
std
and
and
dec
mov
add
add
addl
cmp
shll
mov
int
mov
push
jbe
gs
int
andl
fwait

mov
movsb
out
mov
int
add
adc
adc
andl
mov
andl
(bad)
bound
pop
roll
mov
adc
leave
sbb
lahf
stos
subl
add
addl
and
andl
jg
lock
into
icebp
int
add
int
mov
push
in
jns
mov
push
xlat
(bad)
sbb
addl
andl
enter
int
mov
andl
sahf
fisttpll
and
int
nop

clc
call
mov
lret
xorl
mov
and
mov
outsb
jge
or
pop
cmp
cmp
int
mov
mov
ror
mov
int
subl
je
addl
fcmove
dec
jne
or
and
int
xchg
call
xor
mov
xchg
andl
mov
mov
loop
adc
or
add
addl
je
addl
add
xor
jbe
(bad)

andl
orl
fisttpl
sahf
addl
andl
jmp
add
cmpl
rcll
addl
mov
sahf
popf
adc
add
and
andl
cld
out
insb
addl
in
push
mov
and
mov
stos
sub
jecxz
(bad)
rolb
int
addl
sbbb
lods
cmovns
addl
sbb
and
add
add
xlat
mov
xchg
push
shll
out
or
add
xorl
xor
add
pop
inc
or
addl
les
int
addl
and
int
fcmovnb
jb
xchg
cld
(bad)
int
addl
jnp
and
add
add
inc
repnz
dec
mov
fs
adcb
andl
cmp
int
addl
xor
cmp
andl
xor
leave
and
mov
and
mov
or
int
and
pop
lahf
enter
(bad)
mov
scas
int
xorl
inc
mov
and
or
rclb
jbe
xor
push
faddl
mov
mov
stos
shlb
int
sub
jl
push
mov
pop
jbe
and
and
jp
jge
or
dec
addb
andl
test
lret
loope
out
xchg
sub
int
mov
xchg
xchg
addl
addr16
sahf
in
dec
mov
int
add
imul
int
andl
fnsave
fwait

cli
jg
(bad)
int
addl
call
andl
int
inc
paddsw
mov
add
scas
xor
and
sti
popf
xorl
sub
cmp
add
int
mov
pusha
add
es
cmp
les
add
addl
add
cld
adc
iret
pusha
xorl
int
int3
mov
pushf
and
int
cld
jbe
test
add
jp
clc
mov
xorl
mov
ja
jae
jb
loop
or
addl
jbe
cmp
or
int
mov
sbbb
in
int
addl
fbstp
add
addl
js
mov
int
add
(bad)
sbb
or
jo
add
add
xlat
adc
add
addl
fldz
addl
add
ret
adc
inc
jmp
andl
mov
add
mov
cmp
cli
or
mov
in
jne
mov
mov
int
add
or
lcall
andl
mov
sub
xlat
int3
jb
mov
hlt
xlat
test
adc
shll
jl
adc
push
push
inc
divl
mov
stos
mov
fdivl
ret
ss
mov
and
xor
loop
mov
mov
mov
ss
pop
lock
into
fdivrl
rcrb
fmull
mov
pop
xor
pop
mov
push
sbb
int
loop
(bad)
sahf
push
add
lods
sbb
and
inc
lods
pop
(bad)
jns
and
sahf
popa
iret
jo
imul
nop

jge
imul
push
call
mov
loope
push
inc
lea
fcom
jno
test
sbb
jno
rcrl
mov
adc
jno
aaa
lock
mov
(bad)
rolb
xchg
jbe
mov
fsubrp
add
repz
dec
dec
test
xchg
movsl
or
sahf
xchg
(bad)
sarl
push
jge
push
mov
pop
mov
je
cmpsl
or
ret
xchg
insl
sahf
(bad)
xchg
mov
into
insl
fs
(bad)
push
test
xlat
pop
addr16
jno
xchg
insb
(bad)
push
xor
aam
add
xchg
push
mov
pop
test
xchg
or
mov
jbe
pop
or
fs
movsl
cwtl
das
popf
sbb
cmp
pop
mov
push
jge
call
xor
push
push
movsl
loopne
pusha
jnp
(bad)
sub
mov
and
sbb
lods
jg
ror
mov
xor
adcb
imul
sbb
jl
in
sub
popf
xor
stos
aad
lea
add
adc
sbbl
mov
cmp
(bad)
hlt
shll
fstpt
loopne
sub
stos
jns
subb
adc
xchg
(bad)
(bad)
mov
inc
iret
dec
ret
loop
imul
stos
addb
jle
incl
jne
pop
fisttps
sub
stos
cld
lods
dec
cmc
sti
ljmp
scas
int3
inc
icebp
bnd
add
xor
cmp
or
mov
dec
cli
adcb
sub
cmp
movsb
mov
add
fcoml
mov
inc
mov
inc
sub
cli
cwtl
data16
push
mov
loop
add
data16
test
outsl
sti
mov
xorl
out
sub
imul
sar
hlt
out
jns
mov
jb
in
push
and
shl
hlt
mov
int
into
push
fdivs
dec
fwait

je
push
mov
loop
cld
mov
ret
orl
xchg
xor
icebp
fisubs
int3
cmpsb
xchg
std
inc
je
nop

pop
out
movsl
insl
dec
aad
cmp
xor
js
mov
idivb
ljmp
icebp
filds
daa
push
or
push
out
(bad)
into
lock
adc
loopne
lea
int
ds
push
mov
mov
icebp
cld
adc
faddl
push
mov
pusha
fdiv
lock
dec
popf
inc
add
lods
cmp
call
pop
mov
or
cmpsb
fisttpll
daa
mov
pusha
ljmp
scas
sub
pop
adc
imul
add
int
fdivrl
xor
cs
rclb
mov
push
dec
cmpsl
stos
xchg
adc
imul
fisubrs
mov
subl
inc
cmp
scas
jno
aad
push
(bad)
pop
cwtl
out
pop
jge
and
orb
out
testl
xor
movsb
gs
mov
jge
loope
lods
fadds
leave
stc
add
dec
xor
clc
sub
mov
sbb
mov
add
add
adcb
in
push
sub
lods
xchg
pop
outsl
xchg
out
test
push
loop
outsl
test
xchg
inc
loopne
mov
icebp
mov
ds
sti
std
pop
(bad)
push
sbb
mov
into
addl
movsb
jg
shrl
xor
rcrl
das
cmc
pop
inc
jle
cmp
mov
adc
movsb
jnp
mov
loopne
push
lret
or
pop
pop
jnp
flds
cltd
inc
bsr
ds
in
lea
stos
mov
cmp
xor
mov
cltd
imul
sub
out
addr16
(bad)
int
into
inc
dec
mov
repnz
add
iret
inc
cmovne
into
mov
movsb
jb
movsl
setno
dec
call
mov
fsubs
ret
sub
cld
mov
addr16
lods
mov
sub
inc
fucomp
add
test
push
maskmovq
testl
mov
fsubl
add
insb
pop
mov
mov
stc
add
sub
dec
add
mov
mov
sbb
fdivr
pusha
repnz
xchg
subb
dec
jl
cmpsb
push
jl
cmp
mov
push
fcomip
push
outsl
push
stos
test
fisubrl
in
inc
stos
rol
test
shlb
mov
fwait

cmp
out
mov
dec
lret
pop
je
mov
(bad)
mov
fidivrs
cwtl
mov
mov
enter
xchg
movsl
lods
les
mov
cmpsb
adc
pushf
cmpsb
mov
jae
mov
or
push
sbb
popa
mov
sub
inc
push
rcrb
adc
inc
stos
mov
(bad)
aas
mov
fistps
lea
andl
jl
mov
adc
or
or
and
ret
call
jae
or
std
daa
dec
pop
gs
stc
cmp
pop
add
or
add
or
add
or
add
or
add
pop
add
or
add
addl
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
jno
add
addb
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
jbe
add
xchg
add
lcall
or
add
or
add
or
add
or
add
or
add
or
add
or
add
dec
add
or
or
add
mov
add
xor
int3
int3
int3
int3
int3
push
in
fnsave
xchg
fs
sub
movsl
fiadds
xchg
(bad)
lock
mov
test
mov
pop
(bad)
test
lock
in
lea
mov
subl
nop

lock
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
sahf
cmpsb
cmp
je
jno
xor
int3
lock
xchg
repnz
outsb
into
push
popf
xorl
(bad)
mov
das
leave
out
push
cmp
push
mov
repnz
sarb
outsb
mov
lock
pop
ret
jle
imul
xchg
sbb
or
push
mov
loop
lods
add
adc
cmpl
mov
mov
lret
jle
imul
push
test
dec
out
in
mov
mov
incb
fdivl
pop
sbb
xor
sub
sbb
adcb
das
cmp
in
lds
push
mov
in
iret
cmp
mov
mov
ja
mov
popf
jno
mov
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cmp
ss
mov
adc
jbe
ljmp
and
push
lea
cmp
mov
xchg
jle
sbb
mov
mov
or
mov
sbb
push
cs
adc
xchg
lret
fiaddl
leave
or
mov
jle
pushf
pop
cwtl
cmp
mov
mov
ljmp
stos
frstor
inc
jnp
mov
ret
add
cmp
dec
jbe
pop
xchg
daa
or
in
and
fs
jne
rcrl
add
xor
into
movsl
test
sub
test
call
(bad)
xlat
jmp
mov
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
movsb
cld
mov
sbb
xchg
inc
sar
mov
xchg
rcll
jbe
std
jge
inc
stc
cmp
mov
(bad)
xchg
daa
es
je
cmp
jne
mov
addb
mov
(bad)
idivl
dec
xor
imul
xacquire
lea
fidivrl
fmuls
fldl
leave
lods
imul
mov
add
jbe
test
fcmovne
mov
mov
pop
sbb
sti
jge
lret
jbe
push
xchg
test
shll
xchg
std
imul
cmp
mov
es
sahf
jo
stc
fdivl
popa
movsl
in
lcall
lret
imul
pushf
sar
xchg
std
adc
loopne
xor
rcl
sbbb
and
test
fwait

(bad)
dec
dec
sbb
fs
xlat
insb
das
mov
dec
push
mov
adc
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
inc
jle
movsl
xorl
cmpsb
lock
jge
ja
neg
movb
mov
add
lret
jne
stc
clc
mov
jb
repnz
mov
fimull
imul
into
scas
mov
iret
ljmp
dec
mov
xchg
stos
mov
xor
fstl
scas
sbb
scas
push
(bad)
insb
and
sbb
mov
rcll
add
xchg
and
mov
pop
cwtl
mov
sub
enter
dec
cmpb
xor
sub
push
fildll
xchg
push
stos
pusha
cltd
and
dec
jo
stc
push
jb
lods
xor
mov
push
sub
psubsw
or
xlat
(bad)

stos
(bad)
xchg
adc
ljmp
mov
into
or
dec
push
cmp
(bad)
loope
lret
sub
gs
add
loope
mov
adc
xor
sbb
(bad)
adc
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
stos
into
gs
roll
inc
enter
aaa
sbbl
push
xor
movsb
or
xchg
shlb
cwtl
mov
insb
ja
mov
jmp
gs
cld
(bad)
aas
xchg
mov
cmpsl
cmp
seto
sbb
pop
and
call
sahf
jmp
xchg
mov
movsl
and
cltd
jo
adcb
pop
xchg
dec
mov
data16
and
cmc
sbb
inc
fcoms
pop
movsb
cmp
xchg
rol
and
adc
(bad)
icebp
add
test
lahf
xchg
dec
push
(bad)
arpl
mov
jo
sahf
sbb
jne
push
cmp
xorl
(bad)
lfence
fadd
lcall
cmp
fildl
adc
test
adc
cwtl
pop
out
or
push
(bad)
lea
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
and
pop
add
or
out
scas
xchg
xor
push
dec
lret
lock
xchg
jae
xor
mov
mov
sbbb
jmp
lds
mov
insb
ljmp
fsubrs
sbb
pop
pop
xchg
xlat
addb
divl
push
pusha
jg
in
cwtl
out
std
cmpb
outsl
shlb
lea
lret
std
jbe
xchg
cwtl
lahf
jle
mov
(bad)
call
dec
pop
dec
jmp
mov
adc
test
sti
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
xchg
dec
lret
adc
ja
enter
pop
push
jge
dec
mov
loopne
add
andl
popa
jl
pusha
bound
fisttpll
test
jp
leave
sub
cmp
dec
dec
mov
shrl
sahf
scas
(bad)
xor
es
hlt
pop
ret
sub
lea
in
mov
or
sar
jge
sahf
insb
sub
mov
fmull
test
push
daa
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
les
inc
and
dec
sbbb
movd
insb
xor
add
es
in
mov
fwait

(bad)
mov
fiadds
(bad)
dec
arpl
clc
shrb
jl
push
hlt
mov
jmp
cmpsb
mov
xor
(bad)
shll
(bad)
(bad)
shlb
adc
movsl
jmp
pusha
rorl
sbb
lock
xor
cmp
shll
pop
mov
mov
std
xchg
push
mull
sbb
mov
mov
test
lock
aad
or
sbb
mov
xlat
push
test
rcrl
dec
jb
xor
mov
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
cmp
pushf
aam
inc
insl
sub
mov
mov
xchg
mov
or
xchg
mov
sub
cmc
js
dec
cmpl
push
xchg
push
pop
arpl
jae
lea
imul
daa
orb
mov
lods
adc
jnp
lea
push
sub
imul
je
cli
add
arpl
sub
xor
shlb
in
bound
mov
outsb
sbb
out
mov
sahf
bound
popa
inc
adc
jge
inc
mov
test
inc
push
rcr
xchg
pop
push
(bad)

sbb
mov
ss
xchg
pop
stos
pop
adc
add
enter
idivl
mov
les
adcb
mov
nop

dec
fildl
mov
xorb
insl
rcll
repz
pop
mov
mov
jmp
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
pop
test
call
bnd
fdivrl
or
pop
add
cli
sahf
aaa
in
insb
xor
cmp
mov
das
test
cmpl
adc
call
jbe
in
or
test
or
jns
test
(bad)
jg
(bad)
push
mov
ret
pop
mov
jns
push
ja
mov
mov
mov
adc
adc
movsl
inc
addl
jecxz
sarl
mov
or
xchg
pop
cmp
push
mov
dec
sub
fs
sbb
or
out
push
sti
xchg
test
movsb
sub
or
repnz
cmp
sbb
movsb
cs
inc
add
cmp
sbb
test
pop
mov
inc
in
push
addb
popa
mov
mov
sub
mov
(bad)
rorl
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
fidivrl
imul
int
mov
mov
mov
lock
jge
jl
mov
add
(bad)
test
cld
sbb
rorl
mov
(bad)
sub
sti
sub
jmp
int
scas
dec
mov
adc
dec
mov
mov
cmpsl
(bad)

xor
xchg
push
add
fiaddl
and
cmpl
sti
add
mov
loopne
xchg
jmp
add
into
pop
stos
cmp
push
fists
xor
dec
iret
popa
mov
lds
lds
inc
test
inc
cmp
pop
mov
xor
push
mov
ss
xor
fnstcw
add
inc
bnd
and
and
inc
dec
out
adc
jno
jl
aad
mov
inc
ss
adc
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
and
dec
int3
sub
or
sbb
test
imul
mov
lcall
pop
mov
repz
push
movsl
pop
and
mov
loopne
xchg
mov
inc
xchg
sbb
push
mov
pop
in
enter
adc
outsl
or
add
popa
add
cmp
lea
aad
in
js
ljmp
sbb
xor
lea
inc
jp
and
xor
cmp
clc
inc
jecxz
xchg
call
icebp
aas
stc
and
and
out
sbb
inc
add
sub
mov
jns
addr16
xor
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
sub
fdivl
mov
sbb
loope
popa
or
xchg
add
mov
push
mov
cmp
dec
push
adc
popa
cmpl
je
lea
enter
fwait

imul
mulb
inc
xchg
and
sbb
loope
loopne
xor
adc
xor
addl
mov
lea
jb
push
sbb
push
xor
test
int3
loop
in
sahf
movsb
mull
loopne
mov
push
jge
mov
push
adc
int3
rdtsc
pop
pop
das
(bad)
push
jl
les
bound
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cltd
mov
movb
or
mov
fistl
sub
cmpl
cmpl
sbb
or
call
popa
mov
jecxz
and
xlat
xor
xchg
sbb
daa
lods
mov
jecxz
xor
jge
and
loopne
iret
popf
jp
out
dec
imul
popf
lret
xor
or
jp
jo
push
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
ds
and
pop
ret
lcall
push
jl
rcll
dec
mov
or
repz
jmp
scas
es
mov
rclb
decb
sub
pop
stc
fildll
arpl
mov
dec
xchg
push
add
lods
sbbl
cmp
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
xchg
stos
mov
dec
repz
leave
aad
jge
inc
cmp
int3
mov
xorb
inc
mov
sbb
mov
scas
jmp
in
pop
mov
cmpsl
enter
fwait

cmp
mov
loope
xor
xchg
ror
dec
mov
mov
icebp
inc
jecxz
lea
into
pop
notl
jb
lods
add
ficoml
aam
pusha
xor
test
outsb
in
mov
loope
dec
fwait

or
test
out
mov
adc
in
enter
int
out
pop
xchg
cmp
xchg
insb
add
into
shll
mov
mov
ret
lock
mov
mov
icebp
lds
xlat
into
sahf
cmp
xor
fists
jne
fimull
inc
movsl
xchg
scas
test
out
jo
inc
mov
pop
sbb
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pusha
mov
pop
pusha
movsl
xchg
bound
jb
sbbl
push
cwtl
outsb
pop
cld
popf
ret
ds
test
movsl
lock
bnd
andl
cmpsb
sbb
sbb
sbb
adc
adc
push
pushf
cmp
push
lahf
or
pop
nop

jbe
int
daa
xlat
cmc
xchg
mov
sub
xchg
std
mov
inc
aaa
(bad)
cmp
ret
mov
xor
adc
mov
test
mov
test
mov
xor
bnd
lret
xor
(bad)

sub
or
stos
inc
pop
mov
pop
add
mov
pop
repz
lret
(bad)
mov
mov
es
stc
mov
pusha
into
sahf
push
ret
sub
pop
pop
mov
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
jnp
mov
je
push
lds
add
dec
inc
xchg
test
leave
aas
pop
popa
add
ret
adc
popf
mov
lahf
lea
adc
leave
mov
push
popf
inc
in
sub
cmp
movsl
fwait

pop
xor
sub
jl
fs
test
cltd
jg
jne
mov
add
aam
and
cwtl
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
sbb
mov
add
icebp
dec
fptan
xor
(bad)
fidivrs
inc
inc
out
dec
pop
xor
outsb
pop
pusha
dec
inc
xchg
xchg
cmpl
je
addr16
mov
adc
fwait

push
test
out
push
xor
mov
and
push
cmp
in
loopne
pop
mov
ja
sub
stc
jo
cmp
js
pop
push
or
mov
in
iret
mov
pop
outsb
addl
movsl
shrb
lcall
pop
sbb
mov
jge
andb
inc
mov
(bad)
aad
cld
xor
push
sti
sahf
pop
mov
stc
cltd
cmp
lea
rol
push
xor
mov
inc
ret
icebp
pop
cld
sub
sub
arpl
dec
and
or
ret
mov
aas
jmp
popa
andl
fcoms
or
popa
rcll
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
and
inc
pop
stc
repnz
addb
add
and
popf
cs
test
sbb
nop

loope
mov
out
xlat
and
movb
call
cmc
jo
shll
in
repnz
and
leave
sahf
sarb
ljmpw
addb
mov
test
dec
jecxz
xchg
pop
pop
fstl
and
and
sbb
stos
clc
inc
xchg
popf
push
leave
inc
loope
sarl
cmp
jnp
pop
sub
or
out
test
jne
dec
negl
or
sub
xchg
stos
push
insl
mov
rol
cmp
inc
jecxz
(bad)
jns
sbb
mov
mov
out
cs
jno
adcl
in
in
mov
arpl
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sub
test
lods
push
loopne
xor
xor
xor
xor
pop
fst
fsubl
xor
fs
jnp
add
(bad)
xor
mov
pusha
jge
neg
push
rclb
popf
sub
sub
sbb
repnz
int
andl
xchg
inc
pop
adcl
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
rcrb
sahf
fcomip
mov
and
dec
stos
adc
stc
cmc
push
mov
mov
loop
jle
sbb
test
sbb
int
(bad)

mov
lcall
(bad)
into
mov
rclb
cmp
fwait

dec
or
in
mov
inc
popa
repz
sub
cmp
push
addb
ss
stos
xchg
xchg
(bad)
ficoms
sbb
ljmp
cmp
ljmp
add
lods
or
lods
repnz
dec
fadd
(bad)
pop
dec
loope
sti
std
test
test
cwtl
call
xor
nop

and
inc
idivl
cmp
or
addr16
mov
sti
out
mov
push
push
add
push
int
cli
icebp
cmp
mov
mov
push
mov
jnp
ret
addr16
lea
cltd
xchg
out
mov
push
in
xor
aad
dec
jg
test
aaa
je
arpl
pop
lock
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
movsl
popf
aad
xlat
outsl
fld
nop

mov
cltd
pop
test
test
cmpl
push
mov
xor
pop
jge
test
mov
cmp
mov
int
inc
mov
fsubrs
ret
cmp
shrl
sbb
sub
pusha
hlt
or
cmp
mov
inc
sahf
mov
mov
and
int3
mov
ljmp
inc
lcall
mov
mov
sbb
lret
add
xchg
and
(bad)
jecxz
adc
stos
or
out
aad
cld
mov
movl
call
in
mov
fldenv
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
rcr
sbb
hlt
sbb
sbb
rcrl
and
int
ret
test
imul
inc
mov
je
(bad)
fbstp
jmp
jge
(bad)
xchg
inc
push
jp
int
test
or
pop
jno
ret
xor
sub
mov
cmpsb
stc
test
(bad)
negb
pushf
dec
mov
imul
lret
dec
xor
push
pop
cltd
dec
cmpsl
mov
cmp
in
pop
mov
mov
inc
loop
ds
addl
push
(bad)
mov
movsl
aam
int
popa
pop
leave
addb
leave
repnz
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
mov
xchg
pop
icebp
ja
lea
(bad)
out
and
inc
and
dec
fs
or
and
sub
jle
cmp
and
add
ret
cltd
rolb
scas
ret
inc
or
fcomip
enter
sub
inc
sahf
rorb
out
mov
mov
out
ficomps
add
fmul
sbb
scas
pop
inc
lods
mov
dec
sar
or
gs
lahf
mov
and
xor
lahf
sub
in
arpl
repz
adc
and
sub
add
cs
sub
idiv
nop

(bad)
push
inc
push
cmpsl
push
mov
jb
jb
out
dec
movsl
adc
stos
lods
ljmp
enter
scas
dec
aad
inc
pop
out
scas
push
pop
sbb
nop

repnz
lock
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
push
in
stos
(bad)
jne
jne
push
push
sbb
aas
stos
push
inc
cmp
std
push
sub
out
push
fdivrs
or
sbb
sahf
bnd
sbb
ds
sub
fs
(bad)
mov
stos
xlat
ret
cmp
cli
movsb
push
mov
jne
icebp
adcl
mov
sbb
call
fbld
arpl
cmc
adc
call
sbb
sbbl
sbb
jecxz
addr16
pop
pushl
adc
loop
mov
test
and
out
mov
lahf
adc
push
jo
inc
mov
int
sbbl
insl
loop
rcll
inc
mov
mov
xor
repnz
cmpl
lods
cwtl
sub
pop
xchg
loop
mov
mov
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
push
xchg
mov
push
test
xchg
in
mov
lret
xor
pop
unpckhps
inc
sub
andl
sbb
xor
call
out
out
mov
cltd
adc
xchg
or
sub
popa
sarl
lock
pop
das
sub
sub
cmp
fcoml
mov
fisubs
dec
rcrb
mov
xchg
mov
test
fstl
sarl
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xor
and
pop
add
popf
fwait

mov
fucomi
sub
push
loop
sub
test
mov
lock
jp
outsb
rcll
fs
sbb
je
in
sub
outsb
repz
ds
inc
call
movsl
cmpsl
inc
popf
mov
jne
gs
mov
dec
add
(bad)
fldl
int3
rcr
sarl
push
or
pushf
fistl
jo
aam
xor
inc
das
mov
(bad)
(bad)
std
(bad)
dec
xchg
xor
sbb
imulb
lock
cwtl
dec
push
test
icebp
xchg
repnz
(bad)
sahf
sbb
and
xchg
ss
push
and
out
xchg
orl
or
xchg
fwait

jle
xor
sub
pusha
sub
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
ret
lods
and
pop
sahf
xchg
test
aas
test
and
push
js
or
jns
inc
mov
lock
xor
mov
mov
or
push
adc
sub
lea
lahf
sub
outsb
in
rcrb
das
dec
test
lds
jb
dec
and
adc
aaa
lock
add
fisttps
add
mov
ficoms
stos
push
adc
ret
mov
sbb
lea
movsb
loop
dec
test
jne
cli
and
jg
nop

add
push
or
dec
in
jge
les
into
dec
ds
push
sti
scas
mov
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
lea
cmp
insl
push
fildll
lods
push
jg
or
mov
and
jmp
fcomps
mov
jnp
dec
imulb
xor
adc
adc
mov
pop
(bad)
aaa
and
inc
pop
dec
push
test
push
roll
mov
sub
dec
pop
inc
(bad)
out
fs
dec
data16
bound
push
iret
dec
dec
adc
mov
sbb
push
rorl
fisubrs
and
ss
sbb
outsb
cmpsb
adc
cmc
dec
sbb
pop
dec
rcll
dec
xlat
inc
xchg
adc
and
and
loope
js
imul
ror
testl
in
test
insb
jb
jle
cli
mov
fstl
les
jg
ffreep
cmp
mov
dec
je
les
add
mov
rolb
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adc
outsl
inc
mov
popl
cmp
test
shll
xor
xchg
addb
out
lret
sbb
in
shrb
pop
lcall
push
lock
(bad)
adc
or
lods
mov
jg
ror
mov
ret
mov
stos
outsl
lock
(bad)
rcr
les
xchg
xor
xchg
xor
loopne
dec
jg
xchg
push
mov
mov
iret
shlb
xor
shll
pop
pop
sahf
inc
lods
xor
jg
pop
adc
orl
loopne
andl
cmp
out
ffree
adc
pop
inc
inc
(bad)
in
mov
stos
dec
xchg
push
xchg
(bad)
push
fwait

push
inc
xor
mov
mov
dec
(bad)
negl
cmc
cli
xor
lahf
or
mov
insl
je
outsl
les
jmp
sbb
jle
xlat
add
jb
mov
movsl
popf
mov
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pusha
rorl
xchg
sub
fisttps
es
xorl
jns
xchg
int3
mov
test
insl
aad
lret
sub
mov
fsubs
sahf
clc
mov
add
nop

mov
sti
stos
or
push
test
add
call
lret
in
arpl
sbb
push
adc
dec
pop
push
(bad)
push
adc
fsubrl
cltd
jge
stc
mov
nop

out
xor
adc
xor
mov
(bad)
iret
in
mov
xchg
sbb
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
test
or
cltd
rol
xchg
mov
nop

ret
sbb
rclb
add
push
shl
mov
lods
cwtl
cmpb
push
dec
xor
mov
int3
fildll
add
repnz
xor
insl
insb
into
mov
xor
xchg
adc
fcmove
fwait

movsl
bound
test
(bad)
idivb
in
loop
rcr
inc
jg
sub
mov
rcrb
fstl
sbb
xchg
rcll
ret
mov
xchg
mov
sbb
shll
int3
mov
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
dec
jnp
icebp
jae
jg
inc
dec
movb
testb
mov
xchg
push
xor
or
mov
xor
in
jb
popa
push
sbb
xchg
testb
pushf
pop
add
inc
je
out
out
or
(bad)
lcall
xchg
cmpl
mov
sbb
pushf
out
add
es
dec
push
das
push
sarb
or
push
sbb
and
mov
rcl
aad
push
xchg
cli
cwtl
inc
cmpb
push
mov
out
and
cmc
or
popf
stc
pusha
xchg
mov
add
inc
lcall
call
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
fsubs
roll
jl
push
mov
jle
xchg
push
nop

aas
notl
test
js
mov
jl
push
aam
ret
mov
sbb
inc
mov
scas
fisttpl
dec
jp
repz
and
(bad)
(bad)
push
sahf
lea
addb
push
subl
mov
lods
mov
stc
xor
cs
lea
movsb
rcll
dec
mov
pop
lds
xorl
sbb
leave
push
jp
mov
lea
addl
jb
popa
xchg
xchg
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
xchg
(bad)
lock
icebp
adc
sahf
inc
mov
jns
hlt
jge
pop
pop
add
inc
aaa
adc
or
lea
fnstsw
mov
pushf
mov
dec
in
(bad)
sbb
sub
xchg
lods
dec
mov
adc
in
xchg
push
push
sbb
xchg
mov
test
cmc
sahf
push
stos
lock
clc
cmp
fcoml
push
cmc
aam
xchg
addb
(bad)
cwtl
movb
mov
fldl
push
xchg
mov
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
(bad)
xor
jge
adc
and
pop
pop
sahf
pop
add
push
sbb
adc
mov
mov
sti
int3
cs
lret
xor
frstor
adc
scas
dec
pause
loop,pn
mov
mov
(bad)
into
add
scas
mov
incb
jo
jge
inc
mov
roll
dec
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
lret
adcb
jle
inc
inc
icebp
add
and
inc
cmp
sbb
dec
cmp
inc
push
aaa
cwtl
filds
push
mov
faddp
movsl
ret
rolb
ja
mov
dec
lcall
mov
loop
xor
sub
dec
ss
fstpl
mov
lock
cmp
push
sbb
pop
das
pop
pop
xchg
mov
push
mov
shr
movsb
stc
test
xchg
mov
repnz
sbb
call
mov
push
xchg
shll
mov
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
push
cli
in
loope
push
and
les
push
cmp
pop
arpl
fdivl
fstpl
sub
xor
jnp
mov
stos
test
jge
loope
data16
mov
cmp
(bad)
mov
daa
shrl
les
outsb
popa
sbb
adc
jle
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
fbstp
xchg
rorl
sbb
testl
fisttpll
ret
fnstenv
stos
pop
loop
sub
clc
mov
ret
jl
sti
jb
pop
fsubrp
ffreep
push
or
jg
pushf
out
fs
fistpll
xor
test
mov
mov
scas
stc
sbb
loop
or
in
mov
gs
test
insl
icebp
icebp
call
lret
mov
jb
mov
cmpb
mov
adcb
mov
xchg
(bad)
pop
mov
pop
sbb
dec
lock
aam
(bad)
rep
jmp
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
stos
lds
cmp
or
xor
mov
dec
mov
mov
psllq
repz
pop
xorl
inc
cmp
jne
mov
divb
xor
mov
mov
fcmovb
mov
shll
xor
add
add
dec
lret
mov
and
addb
dec
mov
clc
push
shlb
ss
out
popa
lret
inc
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
fadds
jg
std
cmp
popa
enter
scas
xchg
mov
mov
or
push
bound
bnd
das
add
filds
imul
cmp
fst
into
pop
adc
sahf
xchg
sub
xchg
sbb
add
jge
movsl
test
sub
call
mov
mov
daa
xor
lea
sub
mov
adc
jg
and
mov
(bad)
mov
and
push
stos
ds
pop
movsl
jo
and
pop
pop
out
je
outsb
test
aam
xor
orl
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
mov
xchg
mov
ret
push
pmulhuw
pop
add
dec
je
and
mov
mov
jns
sbb
add
cli
xchg
mov
pushf
adc
stos
xchg
movsb
mov
sahf
(bad)
xchg
movsl
icebp
add
loope
jnp
xor
dec
mov
(bad)
fwait

in
lret
and
negl
lock
ficompl
pushf
mov
push
sbb
mov
cmpb
lods
fisttpl
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xor
xor
fstl
cld
aas
daa
mov
frstor
xchg
mov
jl
out
push
stos
pop
outsb
mov
ljmp
jp
push
add
mov
aaa
aad
(bad)
rclb
pop
outsl
mov
mov
js
mov
scas
xchg
inc
mov
mov
mov
shrb
fists
push
xor
mov
or
sti
jmp
push
(bad)
dec
fcoml
mov
(bad)
in
pop
adc
xor
inc
js
mov
lcall
dec
outsb
sti
adcl
mov
(bad)
btr
dec
push
sbb
xlat
imul
aas
or
and
dec
cmpsl
jecxz
jecxz
cltd
xor
mov
pop
sahf
add
scas
iret
sub
mov
rcr
fcomi
mov
push
int3
jecxz
push
xor
xchg
in
xchg
call
and
insl
mov
fstpl
call
int3
mov
or
fs
insl
sub
inc
mov
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sbb
cs
je
cmpl
subl
cmpl
mov
mov
xlat
add
cmpsb
nop

ret
scas
stos
stc
add
adc
popf
outsb
fwait

movsb
inc
lea
sub
addr16
enter
mov
in
pop
mov
out
das
xor
in
mov
(bad)
mov
push
pop
mov
or
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
sahf
idivl
loopne
fsubr
clc
loopne
pop
cltd
xor
xchg
arpl
dec
jg
sbbb
(bad)
push
sahf
ljmp
out
push
jge
lret
push
leave
jns
(bad)

xor
cld
adcl
movsl
mov
inc
and
scas
out
fisubrs
mov
mov
cmp
aam
test
jmp
jnp
push
mov
sbb
dec
stos
push
xlat
pushf
mov
push
ds
stos
scas
movsb
js
mulb
ffreep
add
sbb
(bad)
lret
fnstsw
flds
jnp
push
mov
xchg
push
hlt
cmp
mov
fmul
mov
jne
lods
icebp
mov
call
mov
mov
cmc
xor
xchg
mov
out
push
xchg
int3
or
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
mov
popa
int
push
sbbl
and
mov
mov
hlt
dec
ret
movsb
stc
dec
fisttpl
in
jle
add
imul
xor
or
jp
into
imul
dec
rorb
jns
mov
xchg
xchg
cltd
fs
pop
rclb
cwtl
xchg
out
incl
test
in
dec
adc
ja
mov
jnp
mov
jp
stos
test
std
jl
jmp
xor
loop
xor
out
out
cmp
dec
dec
mov
cmp
sbb
inc
nop

movsb
pop
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
dec
imul
fstpl
sahf
push
lahf
subl
sbb
push
and
jns
add
mov
or
imul
iret
mov
pop
or
loope
jbe
pop
test
lahf
pop
jne
pop
jo
in
bound
fadds
pop
adc
aad
subl
pop
iret
mov
ss
in
cmp
xchg
hlt
mov
sub
popa
sbb
sahf
jb
jg
mov
push
add
ljmp
sahf
xlat
movsb
and
cmpsb
adc
lea
inc
sbb
outsl
inc
subl
out
mov
xchg
lds
rclb
es
xchg
sub
xchg
fisttpll
pop
enter
dec
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
mov
movsl
repnz
mov
inc
inc
cmpsl
mov
adcl
out
(bad)
lea
sbb
mov
push
add
test
idivl
push
and
aam
or
xchg
or
mov
roll
out
sbb
hlt
mov
mov
mov
out
sbb
cs
movsb
stos
jb
inc
mov
jbe
sub
loope
les
mov
cmp
sub
mov
outsb
xor
popa
mov
cltd
popf
les
mov
fcmovnu
enter
dec
lock
sbb
jo
test
mov
std
rclb
and
movsb
mov
out
adc
sub
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
sbbb
test
and
cmpsl
rcrl
mov
rclb
filds
and
or
mov
loopne
mov
sbb
std
mov
push
movsl
sbb
andb
lods
inc
jbe
dec
pop
xchg
mov
aam
push
xor
jge
(bad)
cmpsb
push
xchg
xor
cli
aam
(bad)
bound
xchg
sbbl
das
sahf
xchg
fcoml
fucom
pop
lods
out
movsl
sbb
mov
dec
push
popa
daa
inc
aaa
jno
ja
pop
cwtl
(bad)
test
(bad)
cltd
loop
push
lahf
cmpsl
stos
lods
pop
mov
shrb
cmpl
in
pop
jbe
test
cmp
ret
cmpsl
notb
sbb
xchg
iret
(bad)
fdivrl
arpl
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sub
in
test
dec
lea
or
cltd
xchg
push
test
loopne
call
adc
or
bound
fwait

popf
ja
mov
dec
test
call
and
loop
pop
mov
data16
fwait

pop
lock
add
int
out
sbb
roll
sbb
lods
js
movsb
push
lods
sub
aad
xor
iret
sub
xchg
mov
sub
mov
jbe
mov
or
pop
mov
stc
mov
nop

repnz
xor
push
sbb
sbb
cli
jne
push
sahf
inc
shlb
mov
mov
clc
outsb
sbbb
add
popf
mov
adc
aas
jl
hlt
imulb
pop
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
cs
xchg
xchg
(bad)
subb
pop
xorl
(bad)
push
(bad)
xchg
fcmovbe
mov
imul
insl
lea
test
sahf
mov
cs
lock
imul
mov
mov
and
icebp
ret
and
loopne
or
outsl
cmc
inc
ret
frstor
or
push
or
cmpsl
je
call
cmp
adc
push
les
movsl
data16
test
decb
mov
es
mov
inc
mov
out
jmp
mov
push
fcompl
jo
scas
pop
sahf
clc
notb
mov
adc
repz
dec
rcll
mov
xor
enter
lods
xchg
adc
out
push
test
push
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
daa
addb
mov
in
scas
add
jb
mov
mov
outsb
das
or
pushf
jge
outsl
mov
push
adc
push
mov
out
(bad)
popa
sub
call
push
xchg
add
dec
loop
sub
push
and
cwtl
out
lcall
add
movsb
sahf
stc
sbb
inc
mov
adc
cltd
nop

xor
mov
push
mov
lahf
xchg
add
mov
(bad)
xor
sbb
jl
mov
mov
xor
mov
loopne
dec
mov
fdivrs
and
mov
push
data16
js
mov
sahf
push
cld
mov
jp
mov
sbbl
xchg
enter
mov
sahf
insl
and
or
dec
je
mov
andb
lret
add
pop
addl
cmpsl
loopne
hlt
push
mov
push
lock
push
pop
cltd
(bad)
mov
xchg
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
fwait

xorl
push
sbb
outsb
sub
fxch
movsb
adc
jp
mov
adc
jmp
add
sub
sahf
sbb
cs
sbb
dec
pop
out
hlt
scas
test
arpl
bound
(bad)
nop

mov
out
testl
xchg
jo
nop

adc
pop
insl
stc
fdivrl
mov
pop
ret
shlb
cs
loope
aam
jns
mov
inc
call
gs
xchg
in
jge
add
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmp
movsb
dec
aam
push
mov
(bad)
sbb
jge
(bad)
jge
mov
sbb
(bad)
loopne
bound
lahf
jmp
cwtl
jae
movsl
add
dec
push
jg
pop
inc
xchg
push
xchg
dec
xor
jge
test
xor
xchg
dec
orb
mov
std
cwtl
mov
mov
push
mov
dec
sbbl
rclb
daa
push
adc
adc
iret
push
sbb
addb
cmpsb
and
inc
jp
lods
lcall
imul
popf
fistpl
inc
xor
lret
jp
mov
stos
cli
adc
xchg
and
xchg
push
add
(bad)
pushf
ss
push
lahf
arpl
call
push
andb
repnz
sbb
mov
pop
xchg
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xchg
je
adc
inc
xlat
push
jmp
aad
sub
adc
dec
mov
int3
loope
out
in
jl
pop
cmpl
xchg
test
jno
(bad)
nop

icebp
(bad)
aam
jnp
or
inc
mov
mov
cmpsb
stos
add
adc
pusha
xlat
mov
rcr
pop
xchg
mov
cmc
push
cmp
out
mov
jno
jb
fcmovnb
xchg
insb
pop
movsl
mov
add
push
jg
cwtl
aam
repz
dec
xchg
scas
xlat
pushf
add
or
(bad)
sbb
mov
fucomp
sar
jo
aaa
jne
in
cltd
nop

rorl
movsl
inc
test
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xchg
jmp
lret
cmp
lcall
add
mov
xchg
adc
fucomi
adc
lods
sub
mov
test
mov
mov
insl
or
fcompl
ljmp
leave
arpl
mov
loope
adc
sbb
mov
insb
mov
cwtl
push
push
psraw
arpl
mov
in
mov
sbb
sti
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
mov
sbb
xchg
add
hlt
cwtl
fcoms
or
jg
jmp
jo
sub
add
push
cmc
test
icebp
push
stos
cmp
cltd
arpl
rcrb
or
outsl
in
iret
jbe
xorb
jns
mov
mov
adc
add
test
xor
(bad)
sti
int3
ret
lahf
and
lea
stc
jbe
jle
shll
sub
add
dec
and
mov
push
jl
pusha
iret
adc
sbb
test
adc
imul
enter
test
push
sahf
mov
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
dec
push
jg
les
inc
(bad)
scas
mov
mov
mov
xor
jnp
orb
dec
scas
decl
(bad)
adc
xchg
enter
bnd
push
xor
aad
dec
scas
mov
jbe
cmp
bnd
mov
cld
xchg
inc
divb
mov
jae
add
pop
jp
mov
jo
push
cld
fistps
cmp
push
nop

cli
sub
push
(bad)
lock
mov
mov
lods
mov
repz
fs
inc
mov
push
xchg
xlat
jnp
pop
outsb
out
xor
popa
jne
jl
lods
add
sub
aad
sbb
dec
inc
mov
lret
clc
xchg
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
push
andb
mov
gs
fiadds
repz
cld
jne
(bad)
test
dec
inc
jl
insb
xor
and
(bad)
fiadds
test
mov
(bad)
jo
subl
dec
dec
xor
ret
orb
mov
mov
add
mov
inc
sahf
xchg
xor
leave
pusha
or
lock
pushf
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
adcb
mov
cmp
push
and
jnp
jo
fadd
sti
adc
push
dec
or
mov
and
insb
ss
xor
cmp
(bad)

xchg
scas
pop
lcall
mov
divb
or
enter
jbe
lock
add
es
nop

mov
xchg
push
fildl
stc
dec
je
inc
add
ret
je
inc
xorb
out
lahf
outsl
jp
cli
xchg
iret
fwait

mov
(bad)
loop
or
movsl
mov
pop
(bad)
pop
lods
xor
data16
adc
push
pop
cmpsb
push
cwtl
in
jne
scas
jns
push
lds
mov
mov
jb
pop
std
lock
pop
cmc
mov
ret
cld
aaa
mov
out
jnp
mov
mov
test
add
dec
pop
mov
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
loopne
and
jne
add
pshufw
mov
mov
(bad)
fxch
mov
or
cmpl
pop
pop
test
mov
lcall
(bad)
aam
pop
xchg
shll
sahf
dec
mov
mov
rolb
int
int
inc
outsl
sbb
jp
shl
mov
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
test
scas
adc
dec
jle
pop
dec
mov
mov
sbb
mov
pusha
jne
fs
cmp
test
add
dec
push
sub
pop
int
xchg
adc
push
fmull
xchg
(bad)
into
cmp
loop
lcall
or
cmpsb
fdiv
xchg
jmp
sbb
jae
cmpb
test
je
outsb
add
imul
orl
jne
sbb
jno
scas
orl
cmpl
mov
icebp
inc
mov
lea
add
rorl
inc
sub
les
cltd
or
int3
lock
mov
ds
loope
jge
inc
add
mov
cmc
clc
pop
stc
out
stos
jl
(bad)
adc
orl
mov
push
loopne
mov
shrb
test
cmp
sbb
orl
xor
(bad)
outsb
outsb
cwtl
pop
cwtl
loopne
jne
xchg
mov
shl
repz
mov
jg
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adc
(bad)
add
push
ss
repz
mov
int
inc
ret
jle
les
or
jle
ffree
cmpl
cmpsl
jmp
inc
fldcw
(bad)
pop
cmp
fs
xor
rcr
inc
movsb
xor
inc
addb
add
inc
ror
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
addl
mov
addl
insb
and
add
add
nop

xchg
xor
add
int3
xchg
js
ret
addl
cmpb
or
mov
addb
push
ret
and
and
addb
and
add
loope
jge
flds
addl
inc
dec
movsb
addb
andl
mov
hlt
add
addl
(bad)
incb
addl
add
hlt
add
andb
add
rcll
jp
int3
addl
subl
cmp
addl
rcll
inc
int3
or
jns
addl
sub
mov
movsl
addl
andl
addb
mov
loop
addl
dec
adc
aad
adc
cmpsl
xor
addl
and
imul
addb
aam
lea
sbbl
addl
orb
stos
xor
addl
fucomp
orl
add
push
sub
gs
in
mov
and
packssdw
les
add
addb
addl
nop

dec
test
andl
add
pmullw
sub
addl
movsl
push
aas
insl
pop
pop
dec
popf
cmp
addl
test
rolb
add
addl
aas
int3
sbb
push
add
addl
movsb
mov
addl
mov
cltd
in
sub
addl
sub
fstpl
cs
xchg
addl
addb
push
push
iret
fbld
addl
fldenv
addl
add
and
int
addl
xorl
int3
fidivrs
pushf
xor
addl
outsb
addl
rcrb
lea
add
int3
xchg
push
lods
out
pop
test
scas
inc
xchg
andb
addl
int3
addb
addl
stos
int3
addl
addl
mov
xchg
mov
and
andl
cmp
addb
sbb
pop
xor
int3
andb
addb
xorl
addb
addl
jl
xorl
addl
pop
pop
addl
and
scas
imul
add
(bad)
or
and
adcb
addl
xor
addb
popa
cld
sahf
mov
addl
stos
cmp
addl
add
xchg
or
add
add
push
loope
mov
fmul
sub
popl
add
addl
pop
int3
int3
and
sbb
mov
addb
inc
push
hlt
push
andl
mov
xor
das
(bad)
stos
pop
int3
sahf
jne
addb
(bad)
sbb
addl
and
imul
addb
sbb
pop
mov
xchg
sub
add
addl
mov
addl
andl
aaa
in
int3
jle
sarb
addb
addl
lret
push
jle
lds
addl
addb
adc
pop
or
push
and
addl
ficompl
pop
mov
mov
addl
or
lds
addl
xchg
loop
int3
sbbl
addl
push
aad
stos
addl
addl
ret
out
dec
addb
add
sbb
addl
addb
test
int3
jecxz
pusha
sbb
addb
add
adc
sub
push
addl
mov
scas
jge
add
addl
fists
or
andl
add
mov
std
jne
addb
add
int3
add
push
loopw
ret
addl
addr16
call
addb
add
xor
repnz
xchg
addb
xchg
dec
pop
loope
testb
addl
sbbl
jge
mov
mov
addl
sub
imul
addl
sub
add
addl
int3
rol
push
cmp
mov
addb
and
adc
push
orl
mov
addl
sarl
push
test
addb
sbbl
iret
dec
popf
addl
pop
int3
test
addl
addb
mov
push
into
int
cltd
rorl
adcl
lods
push
int3
cld
sbb
dec
addb
addl
inc
(bad)
cmp
addb
pusha
jb
lcall
and
xorl
xor
gs
push
addl
addb
mov
xor
mov
addl
add
mov
push
addb
addl
and
stos
mov
addl
cltd
lds
addl
and
ljmp
add
addl
and
and
movsb
leave
int
mov
addb
loope
sbb
xor
call
addl
add
rcll
addl
inc
std
mov
pop
jb
scas
add
add
popa
jecxz
rcl
xor
add
addl
cld
aad
addl
or
push
dec
subb
add
add
inc
rolb
ds
push
addl
push
cmp
jp
addl
and
xchg
pop
xorl
and
addb
arpl
out
jp
addl
add
shrb
call
addl
addl
sbbl
icebp
addl
je
subl
addl
or
addl
mov
je
addl
addb
lahf
adcl
in
andb
and
pop
mov
xor
addl
adcb
sub
sbb
(bad)
das
addl
add
popa
lret
sub
add
addb
in
sahf
scas
or
addl
sub
test
loopne
sub
addl
leave
xorl
addl
add
test
addl
test
mov
xchg
addl
add
inc
fsubr
movsb
int3
aad
scas
movsl
addl
mov
outsb
dec
addl
xchg
addb
add
test
addl
push
xchg
xor
mov
push
pop
lds
addl
lcall
es
movsl
mov
addl
hlt
aad
add
addl
roll
addl
adc
mov
addl
add
and
stos
or
and
cmc
add
addl
movb
add
orl
repz
addl
xor
sbb
addl
scas
xchg
adcl
and
jge
popa
addb
addl
sbb
addl
addl
xor
add
and
and
sbb
xchg
sahf
mov
xchg
xor
addl
lods
outsb
sbb
addb
sbb
aaa
addb
addl
fisttpll
addl
mov
mov
int
addl
and
jbe
push
(bad)
loope
xchg
mov
addl
mov
addl
addl
xorl
subl
addl
movsb
ja
(bad)
movl
test
andl
leave
lea
and
dec
pop
jecxz
and
addl
jmp
call
add
jle
addl
adc
jno
mov
into
pushf
test
addl
movsl
gs
(bad)
int
and
addb
and
add
das
xchg
leave
pusha
bound
addl
sbb
mov
andl
andl
lret
add
adc
int
out
addl
add
or
lock
addl
lret
addl
inc
mov
jno
push
addl
xor
addl
addb
jecxz
push
int3
add
addl
(bad)
jno
addl
addb
cmp
test
int3
addl
movsb
add
ja
xlat
ficomps
roll
addl
xor
mov
addb
sbb
nop

sub
addb
add
andl
addl
addb
add
repnz
mov
jbe
and
andb
xor
subl
addl
int3
repz
xlat
pushf
in
push
addl
add
xor
andl
add
bound
shll
addb
fstl
scas
add
addb
add
jo
das
adc
aam
sub
addl
cmp
addl
outsb
pop
mov
add
addb
xchg
push
addl
addb
out
subb
sub
lea
addl
mov
cmp
int3
loopne
addl
add
and
movsb
add
addl
addl
add
out
(bad)
aad
addl
repz
sbb
scas
mov
addl
addb
mov
rclb
fists
addl
push
and
mov
addb
addl
xchg
rcll
add
addl
jbe
andb
and
and
cmp
mov
addl
ja
jae
cld
cmc
ljmp
addl
mov
ss
int3
addb
addl
cmpl
mov
andb
add
xor
add
addl
and
in
xor
mov
jne
mov
addl
mov
addl
clc
ror
push
ret
andb
addl
enter
xor
addl
imul
push
addr16
addl
shlb
in
ret
lock
shlb
add
add
int
(bad)
jbe
fmull
add
add
stos
orl
fnstcw
cmp
addl
subb
fwait

enter
mov
inc
cmp
(bad)
fnstenv
addl
jbe
aam
sbb
mov
and
popf
pop
stos
insl
in
ljmp
mov
addb
push
insl
shlb
cmpsl
inc
addb
andl
mov
jge
stos
les
add
or
dec
pushf
(bad)
xor
addl
add
or
addb
addl
addl
andb
std
dec
or
addl
mov
mov
icebp
xchg
addl
add
addl
sbb
add
addl
addl
mov
roll
addb
addl
addl
repz
dec
cmpsb
mov
addl
(bad)
fsubrl
addb
jmp
pop
mov
addb
add
xor
addl
orl
mov
lret
add
add
int3
aas
jae
add
nop

incl
nop

addl
adc
out
adc
addl
sub
inc
orl
add
add
mov
notb
addl
orl
movsl
hlt
roll
addl
pop
imulb
sub
add
addb
inc
mov
jmp
cmpsb
addl
addb
fcomps
sahf
test
clc
addl
push
cld
roll
add
dec
and
repnz
cmpsb
sub
add
addl
addl
(bad)
ljmp
addl
xor
test
addl
cmpsl
sarl
icebp
mov
andb
addl
adc
(bad)
addb
addl
addl
addl
fdivl
orb
mov
and
addl
fwait

iret
(bad)
push
addb
orl
int
shll
fadds
andl
dec
repnz
jle
lahf
pop
and
addb
addl
andb
and
mov
jnp
mov
addl
and
in
sbbl
add
addl
and
mov
movsl
dec
jo
insb
addl
cli
mulb
addl
pusha
adcb
in
xchg
sbb
add
mov
xor
add
add
dec
aad
or
(bad)
cmpsb
mov
addl
cmpb
dec
lods
addb
addl
mov
add
add
add
jns
pop
nop

or
addl
fdiv
pop
addb
andl
andl
push
ror
fwait

and
addb
add
dec
push
clc
add
addl
sbb
addb
addl
addl
cmpl
inc
addr16
addl
cwtl
jbe
addl
enter
pop
(bad)
sbb
addl
mov
add
subl
jne
aad
addl
sub
xchg
out
addb
addl
out
pop
(bad)
addr16
addl
or
test
subl
addl
sti
clc
in
fmul
cwtl
dec
xchg
addl
addb
add
inc
test
push
jo
int
and
andb
xlat
repz
cld
mov
push
cmp
movsb
addl
addl
push
sub
adc
add
dec
xchg
addl
push
shlb
jns
cli
(bad)
rcl
addl
addb
mov
cmp
fisubs
addb
add
cld
mov
dec
lds
mov
mov
addl
andl
push
addl
pop
xor
addl
fsubs
dec
lock
addl
push
addl
(bad)
popa
inc
addl
jge
movsl
(bad)
enter
jnp
lods
add
addl
addl
pop
xchg
xorb
mov
add
sti
sbb
arpl
test
dec
outsb
add
add
dec
fimuls
ret
test
aam
andb
addl
ljmp
mov
addl
push
addl
add
addl
sbb
andb
and
and
xor
mov
cmc
sti
or
addl
addb
adcl
xchg
addl
add
test
out
add
and
in
add
mov
addl
or
xor
and
and
fcomip
push
int
sahf
xor
mov
addl
addl
add
cmp
push
addl
adc
sahf
or
rcll
addl
sbbb
out
xor
add
movb
add
addl
sbb
rolb
addl
orb
xor
mov
addb
push
push
or
and
addb
and
add
scas
fsubr
pop
test
add
(bad)
stos
ljmp
addb
andl
and
and
addb
adc
xor
add
jp
xor
addl
cmpl
addl
andl
addl
gs
cmc
or
addl
cmp
mov
adc
addl
(bad)
jp
pop
(bad)
push
sahf
ljmp
add
subl
nop

sbb
test
addl
mov
sahf
addb
addl
addl
andl
leave
dec
cltd
lods
sti
cli
int3
mov
loop
addb
add
mov
das
addl
addb
stc
std
jnp
addb
add
jmp
jnp
and
andb
mov
mov
subl
addb
addl
pop
fcompl
addl
add
subb
stos
leave
cmpl
addb
add
flds
cmpl
addl
idivl
outsb
cld
cltd
mov
add
add
addl
test
pop
xchg
addl
sbb
fadd
push
and
addl
outsl
mov
addl
(bad)
shrl
addl
addb
movntps
addl
fbld
add
andl
jmp
push
mov
mov
addl
sahf
addl
add
lea
jne
add
and
xorb
xor
out
mov
addl
test
sbb
andb
addl
popf
cs
mov
addl
xor
xchg
repz
addb
jge
addl
and
cmpl
gs
andb
adc
addl
addb
nop

mov
mov
andl
adc
lods
inc
sub
push
addb
addl
dec
pop
mov
add
addl
addl
and
stc
stos
insl
fmulp
sbb
out
mov
addl
mov
addl
fistl
addl
andl
push
mov
in
addl
dec
rcrb
addl
mov
(bad)
cld
inc
fdivrp
mov
addb
cmpl
addl
jmp
mov
notb
add
addl
je
test
mov
addb
mov
sbbl
add
add
imul
addb
adc
sbb
ja
sahf
mov
popa
stos
jge
addl
and
sbbl
addl
mov
test
addl
add
insl
cmp
add
mov
dec
inc
addl
cmpl
sbb
addl
xorl
loopne
addl
cld
sar
dec
pop
test
daa
addb
andb
addl
aam
inc
movsb
mov
addl
pusha
or
addl
cmp
lcall
addl
and
xchg
(bad)
repnz
sbbl
(bad)
gs
jl
addl
addl
lcall
add
sbb
dec
fcomp
loope
jbe
push
addb
add
std
fmulp
fsubr
stos
pop
mov
addl
leave
inc
pop
push
movsl
mov
adc
addl
inc
pop
dec
sbb
pushf
(bad)
stos
addl
add
icebp
fsubrl
addl
lea
mov
in
addl
lahf
jb
jmp
add
add
push
lods
addl
addl
xor
jne
bound
addl
addl
movsl
bswap
xor
sub
addl
dec
mov
push
popa
pop
or
stos
addl
addb
sub
sahf
hlt
pusha
addl
mov
sub
addl
add
and
ficompl
add
addl
addl
(bad)
sbb
ret
addl
cltd
inc
stos
sti
addl
addl
pushf
jb
stc
cmp
push
andb
addl
fiaddl
addl
push
addl
addl
out
lea
add
add
lea
and
test
or
fdivrl
addb
adc
mov
addl
adc
addl
mov
add
andb
and
cwtl
sub
sub
mov
addl
mov
addl
addl
push
push
sbbl
addb
mov
addl
fisubrs
arpl
add
xorl
mov
add
add
(bad)
stc
xchg
lock
sub
add
addl
xchg
test
addl
mov
andb
add
sbbl
and
add
xlat
stos
in
adc
mov
push
inc
lods
addl
scas
inc
xor
addl
and
out
adc
fdivs
and
addb
subb
addl
add
in
adcl
shll
push
and
push
addl
addb
mov
xchg
scas
sbb
sahf
std
addl
out
push
add
or
outsb
jne
test
andb
addl
popf
mov
add
subl
outsl
sbbb
addl
mov
sbb
addl
addb
sbb
repz
add
jbe
cmpsb
sub
add
sbbb
cmp
sbb
xor
(bad)
cltd
addl
addb
xor
sahf
lods
sbbl
addb
add
push
cwtl
mov
clc
(bad)
and
andb
push
xchg
cwtl
iret
mov
push
inc
addl
addl
cs
popf
or
mov
addl
adc
sbb
gs
lret
addl
loop
(bad)
sti
addl
sahf
(bad)
add
addb
add
lods
mov
jns
addl
xorl
jp
fsubrl
addb
push
mov
movsl
dec
enter
push
mov
addl
cmp
(bad)
adc
pushf
addl
addb
popa
test
mov
addl
xchg
lcall
addl
jo
repnz
sbb
mov
add
addl
addl
add
and
add
sub
test
add
add
gs
sbb
and
addl
stos
cmpsl
or
xchg
and
addl
sbbb
mov
test
addb
sbb
pop
mov
mov
and
adc
mov
nop

sbbb
addl
cli
js
je
rorl
imul
addb
xchg
xchg
addb
addl
(bad)
sbb
add
addl
xchg
push
addl
and
movsl
push
(bad)

inc
movsb
mov
addl
mov
addl
pop
addl
adc
out
imul
jnp
addl
frstor
fcom
lods
mov
addl
dec
loop
test
add
mov
int
cld
das
add
add
xor
mov
add
addl
orb
mov
xorb
add
movb
sub
add
add
out
dec
test
push
fnsave
addl
mov
fstpl
and
mov
and
mov
add
xorl
sar
mov
addl
inc
daa
xchg
addl
addb
cmp
add
jno
addb
push
scas
sub
addl
std
mov
addl
mov
mov
addb
xor
lea
addl
addb
xchg
addl
adc
addl
lock
xchg
ds
(bad)
bnd
addb
lcall
and
addl
movsb
jle
or
add
mov
adc
lea
addb
add
test
dec
xchg
or
(bad)
addl
mov
addl
addl
test
loopne
loope
dec
addl
add
(bad)
(bad)
sti
dec
add
addb
add
push
cmp
mov
addb
stos
int
stos
cltd
mov
addb
add
nop

add
xor
jns
subl
addl
sbbl
test
addl
test
stos
inc
mov
addl
pmaxub
sahf
cmc
mov
sahf
jle
add
addl
addl
lea
inc
mov
addl
add
and
popf
stos
or
test
addb
mov
into
int
addl
add
fmulp
stos
cmpsb
add
addl
imul
inc
popf
add
addl
cmp
andb
addl
and
add
andl
addl
addl
dec
push
cmpsl
push
addb
and
and
sbbl
stos
cmpsl
push
scas
dec
popf
les
and
addl
dec
stos
out
addl
add
cmp
xor
addl
push
rcrl
add
addl
out
addl
and
push
or
xor
add
addl
sub
cmp
addl
out
dec
repnz
das
(bad)
movsb
jg
jno
addb
rclb
addl
push
in
into
cli
mov
addl
add
dec
jnp
(bad)
or
and
addl
jns
add
add
addl
movsl
dec
movsb
int
int3
shrl
jl
addl
pop
jmp
and
addb
and
add
cmc
pop
pop
out
and
sbb
addb
rcrb
inc
les
test
stos
nop

addb
andl
xchg
addl
out
add
addl
add
repz
cmpl
xor
add
pop
out
mov
mov
add
and
pop
js
addl
adc
addl
ret
dec
shlb
addl
addb
xchg
jge
xchg
jno
shrb
popf
sbb
addl
dec
addb
addl
addb
mov
cltd
sub
pop
cmp
subl
add
andb
addb
push
scas
push
clc
xchg
decl
add
addl
mov
lcall
andl
cwtl
in
inc
mov
loopne
repnz
addb
addl
or
xchg
xchg
andl
add
adc
sub
mov
sbb
addl
bnd
pop
sbb
andl
addl
add
addl
sbb
addl
orl
pop
and
addl
jno
mov
push
mov
subl
addl
out
add
cmp
or
test
addl
addb
scas
hlt
sub
nop

in
and
addl
adc
add
ret
addl
fsubr
scas
leave
lods
out
mov
mov
addl
mov
addl
mov
mov
andl
addl
xchg
cwtl
add
add
jae
stos
mov
testl
addl
jne
out
lods
xchg
addb
addl
lahf
pop
stc
ret
cli
jmp
addl
stc
or
fisttpll
andl
subb
fistpll
iret
cld
addl
addb
addl
add
test
add
and
add
add
addl
gs
orb
test
and
xchg
fdivl
pop
mov
addl
mov
addl
ljmp
add
mov
or
addb
and
imul
add
(bad)
xchg
testl
lods
cmc
add
fiaddl
and
addl
sbb
push
dec
add
addl
movsb
xchg
addl
ds
adc
add
add
lea
addl
sbb
sahf
cltd
push
fcmovbe
addb
andl
mov
imul
add
addl
sub
addb
addl
sbbb
addl
call
addl
adcl
mov
sbb
and
shll
ret
subl
addb
inc
cmp
neg
sahf
addl
lds
add
addl
addl
ds
fisubrl
loop
addl
sub
loopne
daa
mov
addl
fsubl
addl
and
add
pop
repnz
and
addl
xchg
xchg
mov
and
addl
add
sti
mov
es
pop
lods
addl
addl
sahf
xchg
mul
mov
addl
xchg
addl
aam
inc
mov
addl
xchg
jl
dec
arpl
add
addb
add
jg
roll
addl
orl
loopne
jp
popf
xor
xchg
mov
addl
lea
or
addl
mov
jae
add
addl
addl
ljmp
add
mov
faddl
addl
xchg
mov
cmpsb
movsl
clc
push
sub
addb
and
cmp
addl
es
jbe
add
add
mov
addl
std
lret
addl
test
ret
addl
addl
and
in
imul
and
orl
xor
(bad)
out
lret
incl
and
jnp
xchg
andl
enter
addb
addl
fdivp
jge
test
and
cmp
mov
addl
scas
std
push
mov
addl
mov
addl
nop

mov
fildl
addl
push
xchg
ljmp
movl
or
or
jmp
mov
addb
add
and
sbbb
addl
pop
(bad)
push
sub
add
add
mov
adc
addl
cmpb
cmc
mov
addb
rorl
addb
and
add
jne
push
push
push
lcall
addl
popa
into
(bad)
mov
addl
insb
pop
outsl
sbb
cmpsb
fistpll
add
adcl
cmp
icebp
and
sbb
add
add
jnp
repnz
dec
mov
add
inc
adc
scas
(bad)
jecxz
dec
mov
add
repz
sahf
jmp
adc
adc
addb
xchg
mov
jg
std
jmp
inc
call
add
mov
in
addl
lds
insb
repnz
test
add
cmpl
fisttpll
addl
sahf
jb
cwtl
into
(bad)
jmp
clc
addb
addl
mov
xchg
addl
orl
mov
addb
add
stc
push
jge
sub
out
addl
addb
mov
lahf
xor
addl
(bad)
ret
and
addl
iret
xchg
in
mov
add
push
jl
adcl
ficomps
addb
add
rolb
sbb
addl
sbb
push
movsl
add
addl
mov
pop
pop
xor
add
addl
pop
lret
retw
jb
addl
or
cmp
xor
addl
les
push
sarl
jmp
mov
addl
sbb
mov
shl
add
addl
lea
addl
ficoml
andb
loop
nop

addl
sub
mov
je
pushf
add
addl
jecxz
add
addl
push
xchg
addl
vfnmsubps
addb
mov
cmc
and
sbb
mov
and
addl
in
addb
addl
leave
cmpsl
icebp
nop

call
lret
addl
lret
arpl
or
and
and
orl
shll
mov
andl
(bad)
mov
aam
mov
addl
cmp
addb
addl
andb
andb
add
fistps
mov
outsl
addl
and
(bad)
ret
xchg
adc
add
rcrl
add
addl
shll
push
addl
andl
addl
test
movsl
addb
add
sti
push
frstor
xchg
addb
sbbl
and
addl
in
mov
jmp
add
addl
daa
mov
in
mov
addb
mov
xchg
and
addb
and
add
sub
int
mov
addl
test
je
aaa
hlt
jne
leave
sahf
jno
lock
andl
movsb
movsl
call
addl
sahf
xchg
xchg
inc
add
addl
mov
addl
xorl
inc
addl
or
add
addl
rcrl
inc
xor
add
lahf
mov
enter
addb
add
out
ret
lret
sahf
or
add
addl
jmp
into
neg
roll
addl
loop
das
cmp
out
addb
addl
addl
cmp
subl
addl
xorb
filds
addl
and
nop

jmp
addb
add
xchg
jge
testl
and
andb
jp
cmp
addl
addl
andl
add
imul
addl
jbe
mov
dec
stos
and
addl
incb
xor
roll
add
addl
cmpsl
mov
sahf
addl
subl
addl
aad
repz
sbbb
rol
ret
mov
addl
pop
call
inc
insl
fiaddl
and
stc
jle
orl
mov
push
dec
addl
daa
add
jmp
addl
es
add
lock
jp
mov
addl
mov
and
addl
inc
out
sbb
lds
addl
fs
addl
fildl
sahf
inc
scas
or
addl
incl
addb
addl
cwtl
cmp
add
addl
and
subl
add
cwtl
stos
test
addl
addb
pushf
jge
fiadds
andl
mov
test
push
jnp
jg
addb
addl
push
test
and
arpl
xor
addl
(bad)
mov
addl
mov
addl
loopnew
addl
subl
fldl
addb
popa
nop

jmp
add
addl
push
ret
in
cwtl
insl
cmpsb
push
xorl
add
add
lock
stos
and
add
adc
jecxz
sbb
mov
add
aaa
pop
xor
addl
stos
push
mov
jmp
aas
stos
and
add
add
mov
xchg
mov
addb
sbb
cwtl
mov
sbb
addl
and
lahf
jne
xor
pop
lods
adc
mov
and
addb
cmc
loop
and
xchg
shl
add
addl
addl
mov
inc
sub
addl
or
xchg
addl
sbb
addl
(bad)
sti
nop

stos
inc
mov
addl
in
jl
scas
(bad)
cmp
jge
add
xorl
push
or
popf
dec
mov
andb
addl
ss
mov
ljmp
addl
dec
xchg
scas
push
mov
addb
mov
sub
addb
add
mov
addl
addb
xor
addb
addl
mov
andl
sbbl
add
stos
andl
addl
add
sub
addl
add
int
addl
and
int
sub
andl
add
fadds
addl
sub
shlb
call
and
addl
addb
xchg
adcb
addl
addb
je
addb
(bad)
adc
jp
aas
inc
dec
addl
jl
mov
add
addl
addl
add
cwtl
jbe
addl
xchg
addl
inc
xchg
movl
addl
mov
xor
add
addl
xchg
(bad)
mov
addl
cld
mov
movsb
push
jecxz
dec
mov
and
sbbl
out
cmpb
inc
mov
addl
addb
jge
(bad)
addl
add
and
inc
addb
addl
rcrb
and
or
sbb
and
out
in
lea
sbb
xorb
test
and
push
fnsave
addl
and
lds
mov
addl
dec
gs
add
add
dec
cmc
add
add
mov
fisubs
mov
push
add
addl
jmp
pop
std
mov
addb
sub
pop
test
fs
orb
and
add
xchg
addl
cld
cld
jge
cmpsb
push
js
addl
and
loop
je
sbb
xchg
or
add
addl
cmc
(bad)
fistpll
add
xchg
push
xor
add
(bad)
and
pop
mov
addb
lea
addl
mov
dec
ljmp
addb
inc
sub
sbb
andb
addl
lods
mov
addl
addb
imul
inc
addl
imull
addl
shl
pusha
mov
addb
sbb
scas
xchg
cmc
sub
rolb
addl
andb
xor
mov
addl
push
out
hlt
xchg
mov
lret
cmp
addl
xor
andl
xlat
mov
adc
add
add
xchg
filds
outsl
pusha
addl
add
cmpsb
sbbb
in
addb
add
repz
lcall
out
mov
addl
xchg
repnz
add
addb
add
mov
xchg
dec
inc
addl
cmpl
addl
xor
mov
addl
(bad)
fstl
inc
scas
cwtl
scas
addl
addb
xorb
addl
(bad)
jae
repnz
addb
and
scas
lods
shll
addl
mov
xchg
stos
push
fwait

addl
add
aas
mov
sbb
addl
xor
iret
cmp
addl
addb
mov
adc
cmpb
andb
addl
adc
mov
addb
addl
ss
addl
addl
int
sahf
int3
add
insl
mov
and
cmpl
sbbb
popf
test
pop
adc
cmp
andl
ja
pop
nop

mov
mov
addl
sub
incb
addl
xchg
add
addl
mov
je
jl
(bad)
shlb
addl
and
int
mov
addl
mov
addl
addl
sbbl
pop
filds
addb
mov
push
addl
lods
pop
int
addb
xor
xchg
out
and
addl
les
add
addl
sbb
mov
and
(bad)
fwait

adc
addl
mov
cmpsb
mov
addb
and
add
inc
(bad)
sahf
adc
lahf
sub
xchg
repnz
addb
xor
test
mov
arpl
andl
andl
adc
add
sbbl
daa
loopne
jge
inc
add
addl
addl
addl
xchg
addl
cmpl
std
movsb
addl
dec
inc
mov
outsl
sarb
mov
addl
sahf
popf
pusha
orl
pushf
addl
mov
and
mov
addl
xchg
(bad)
adc
addl
pusha
imul
addl
les
fwait

push
jmp
addb
stos
adc
mov
add
add
mov
push
addl
addb
sub
inc
lods
subb
addb
add
adc
subb
clc
and
andb
(bad)
aam
sahf
mov
addb
addl
adc
pop
addl
add
inc
in
jo
mov
jg
addb
add
mov
aam
dec
int
addl
cld
mov
pop
sarb
loope
add
addl
subb
addl
mov
and
addl
addb
rcr
mov
addl
jnp
mov
addl
stos
jg
imul
add
xorl
sub
add
addl
addl
add
repnz
fwait

inc
addl
addb
add
add
daa
jl
das
dec
gs
andb
addl
mov
addb
addl
subl
addb
add
adc
jg
andb
and
and
subl
jg
lcall
addl
jae
addl
add
shl
sub
addb
addl
cmp
jl
addl
add
lods
fisttps
andb
and
sub
mov
addl
mov
addl
adc
mov
addl
subl
addl
cmc
jl
in
imul
sbb
leave
jae
mov
addl
add
jl
inc
xor
add
add
fwait

inc
std
imul
addb
add
addl
fwait

add
fnsave
addl
test
orb
aaa
andb
add
lcall
addb
xchg
iret
sub
or
addl
les
inc
and
addb
push
fnstcw
add
addl
lods
(bad)
movsl
negl
addb
addl
push
test
addb
(bad)
mov
cmc
fiaddl
in
cli
addl
sahf
into
or
out
addl
ss
push
in
dec
addl
and
addl
addb
sbb
lea
addl
xchg
icebp
mov
addl
push
cmp
mov
movl
int3
adc
mov
mov
lods
into
bound
pop
addb
add
or
addl
addb
xor
and
add
addl
nop

mov
and
andb
xchg
adc
movsl
mov
addb
addl
push
xor
push
sbb
addb
add
add
addl
aad
mov
cmpsb
fwait

xchg
addl
ret
add
addb
add
dec
jae
cli
mov
dec
shr
cmp
xorb
mov
dec
and
addl
push
or
mov
addl
mov
orl
add
addl
dec
xchg
lret
addl
ss
lret
sahf
mov
addb
and
and
test
mov
addl
push
sub
addl
add
shr
and
sbb
add
xor
push
jle
mov
pop
test
sahf
add
add
shl
out
adcb
andl
add
sub
add
adcl
addl
addl
xchg
in
cmp
mov
and
sbb
sarl
test
and
mov
sub
das
addl
add
jno
xor
jb,pn
addb
addl
xlat
cmp
sub
in
add
addl
add
and
fiadds
dec
mov
addl
mov
addl
xchg
addl
mov
addb
cmp
push
enter
addl
add
stos
addb
sbb
add
add
jecxz
lea
insl
lock
addl
subb
xor
addl
sub
inc
and
addb
and
add
jle
adc
addl
repnz
or
addb
andl
push
or
dec
sub
addl
mov
rcll
jnp
add
addl
sahf
xor
add
test
jne
roll
addb
jmp
mov
in
addl
mov
addb
sbb
xor
dec
push
imul
addb
cmpl
movsl
nop

aad
addl
addb
cs
scas
addl
nop

cmp
mov
addl
scas
scas
out
sar
mov
je
addb
cltd
adc
outsl
out
xchg
pop
addb
add
stc
les
add
xchg
xchg
xchg
add
mov
addl
pushf
jmp
and
andb
(bad)
push
push
nop

addl
addl
lods
or
gs
addl
add
xchg
movsl
push
test
addl
stc
dec
in
outsb
fldl
addl
add
addl
andl
xorb
test
mov
and
addl
jmp
xchg
mov
addl
lods
cmp
mov
addl
addb
movsb
pop
cld
addl
push
repnz
mov
addl
out
aam
int
and
pushl
mov
addl
scas
xor
push
filds
addb
orl
addl
clc
mov
test
addl
addb
mov
adc
aad
andb
addl
sub
jbe
dec
addb
addl
test
loop
addl
addl
test
dec
mov
and
orl
xchg
mov
and
add
ds
addl
add
mov
fldenv
addb
addl
add
addl
je
hlt
xor
addl
and
sahf
mov
mov
mov
addl
addl
std
or
addb
out
clc
pusha
stos
inc
cwtl
rorb
jge
dec
scas
addb
add
outsb
addb
cmp
leave
xlat
enter
push
add
add
leave
lret
mov
inc
stc
push
jl
add
addl
lods
mov
addb
xlat
fadds
add
add
cld
int3
scas
push
lret
and
ds
jecxz,pt
addb
in
(bad)
jg
cmc
stos
pop
mov
addl
jle
aas
rcrl
addl
add
addl
lahf
movl
fsubrs
cltd
dec
addl
andl
cmpsb
cmc
addl
jge
mov
addb
cld
mov
mov
addb
or
addl
addb
and
and
mov
addl
inc
push
addb
addl
mov
addl
adcl
jge
std
int3
mov
addl
jae
jle
adc
push
cmp
addl
jmp
add
add
test
xor
(bad)
repnz
andb
(bad)
cltd
mov
addb
addl
mov
addl
add
scas
subb
shrl
addl
push
lods
out
lock
sub
addl
xor
add
addb
add
in
shr
int
xchg
imul
xorb
ret
icebp
xor
addl
jno
cmp
aam
lds
pushl
add
addb
cwtl
mov
and
addb
mov
or
addl
out
aas
je
inc
sub
addl
and
lock
aad
xchg
add
addl
iret
incl
addb
cmp
loopne
addl
push
int
mov
add
mov
xor
mov
test
andl
mov
sub
add
sbbl
addb
loope
(bad)
mov
and
xor
mov
stc
test
ja
aam
movsl
addl
addb
adc
addl
pandn
nop

cs
jmp
addl
fldenv
push
ss
add
addl
std
out
sahf
and
sbb
pushf
addl
and
mov
add
addl
cmp
addl
dec
repnz
shr
fstl
addl
addl
gs
mov
inc
jle
addl
xor
imul
and
addl
test
ret
cmp
stos
add
addl
movsl
fst
mov
addb
xor
xorb
dec
sar
scas
and
addb
and
add
std
mov
sbb
addb
dec
and
in
push
cmpsb
mov
addl
les
pop
push
add
and
addb
inc
xchg
cmc
add
addl
xchg
mov
add
pop
push
addl
shrl
push
addl
subl
and
imul
je
addb
sahf
test
test
mov
cmc
adc
addl
addl
xor
mov
addl
addl
out
cwtl
in
or
rolb
addl
imul
addl
push
pop
jl
and
push
fidivrl
addl
addb
add
jecxz
andl
addl
addb
push
imul
addl
lods
punpcklbw
addb
into
and
mov
add
(bad)
testb
pop
sub
and
ljmp
addl
xor
mov
addb
lods
push
adc
jne
push
adc
add
addb
add
int3
fwait

mov
rolb
addb
test
add
addl
shrb
fbld
mov
addl
xor
jne
add
addl
addb
das
test
addl
xchg
mov
rcrl
add
and
test
adc
xor
mov
addl
add
adc
pop
add
addl
push
lds
xchg
popf
addl
cmp
shrb
addl
pusha
incb
js
cmp
mov
and
addl
fcmovnb
mov
add
orl
addl
addl
js
sbbb
xor
and
orl
addl
addb
sbb
addb
sub
popa
movsl
imul
add
and
xchg
lea
add
addl
sbb
addl
and
aas
scas
mov
sahf
test
xorb
andb
into
out
fsubs
andb
addl
outsb
fidivrl
pop
mov
mov
addl
pop
mov
addb
add
dec
lods
repnz
into
enter
addl
testl
add
add
nop

leave
mov
nop

std
icebp
faddl
addl
andb
(bad)
push
mov
int
sub
add
andb
in
movb
add
add
jmp
mov
addl
jge
addb
andl
inc
mov
add
andl
sbb
nop

add
addl
fldl
addl
test
addb
dec
inc
or
les
ficoml
mov
addl
mov
out
fdivl
sahf
addl
push
mov
loopne
xor
cli
addl
addb
sbb
scas
pusha
imul
pop
sbb
std
movl
out
mov
addb
addl
addb
ret
movsl
repz
xchg
ficoms
addb
add
mov
rcr
addl
addb
sub
xchg
stos
stos
addb
add
add
les
and
andb
in
mov
xchg
stc
(bad)
loopne
nop

inc
sahf
addl
addl
ret
mov
fwait

addl
add
jb
xchg
int
adc
addl
enter
fstl
movsb
addl
mov
mov
add
addb
add
xchg
jp
out
lret
pop
es
or
addl
addl
addl
push
add
add
addb
xor
and
lcall
test
lret
mov
addl
push
into
ja
aam
addl
mov
adcb
movb
addl
dec
lods
stos
mov
addl
and
or
testl
andl
addl
iret
xor
andb
addl
ret
stos
addb
addl
and
add
addl
and
orl
push
xor
andl
add
lea
into
adc
addl
add
orl
addb
addl
xchg
out
addl
and
addb
andl
fsubrl
test
xorb
sbb
add
test
andb
addl
movsb
insl
xor
dec
movsl
addl
out
fnstsw
adc
faddl
addl
hlt
adc
or
movl
(bad)
test
adc
out
test
and
addl
out
jno
add
addl
dec
dec
push
fs
lahf
mov
addb
sub
and
addb
and
add
loope
out
fs
outsb
movsl
jmp
add
aad
aaa
inc
iret
addb
andl
iret
adc
outsl
and
addb
test
push
cmpsb
sbb
addl
add
xchg
mov
fnsave
or
addl
call
jne
addb
xor
addl
or
fadds
addl
mov
addb
add
imul
test
addl
add
addl
int
shlb
mov
addl
add
fld
jmp
addb
shll
xor
daa
dec
inc
outsb
test
addl
andb
movsl
xchg
mov
addb
ret
addl
addb
bound
or
(bad)
sahf
addb
add
sbb
(bad)
and
andb
cmp
cmpb
addb
addl
mov
lahf
mov
addb
add
call
shll
addl
pop
test
addl
xchg
add
addb
add
in
mov
xorb
add
js
addl
xchg
int
xchg
add
mov
addl
test
mov
addl
addb
js
inc
scas
popa
add
addl
xchg
add
lret
cmp
xorl
cltd
shll
addl
jge
addl
popl
loopne
popf
addl
icebp
test
adc
call
add
(bad)
stos
mov
test
dec
add
andl
cmp
mov
add
adcl
lods
mov
clc
pop
addl
addl
sbb
mov
and
sbbl
enter
addl
addb
lahf
push
jo
faddp
addl
add
jno
add
add
and
(bad)
mov
adc
roll
add
addl
addl
and
dec
lcall
add
or
sbb
outsl
addl
cmpl
addl
xor
ljmp
addl
mov
stc
or
xchg
shrb
sbb
add
add
out
fisttpl
jecxz
inc
ret
add
add
sbb
mov
lods
cmpb
add
lret
rcr
mov
addb
(bad)
out
inc
dec
(bad)
and
addb
and
add
fmuls
xlat
outsl
fidivl
ja
mov
add
rolb
or
push
iret
addb
andl
stos
je
adc
push
mov
fldenv
add
andl
into
mov
add
pop
or
hlt
mov
or
addl
mov
add
adc
push
addl
dec
and
adc
addl
addb
adc
roll
addl
roll
addl
xchg
rol
jmp
addb
addl
addl
xchg
out
inc
movsl
xor
insb
addb
add
jl
roll
addl
mov
mov
add
add
bound
icebp
jle
adc
addl
xchg
cmp
addb
addl
adc
addl
add
jle
sti
repz
into
sahf
addl
insb
ffreep
fcompl
addl
adc
dec
sbb
addb
add
mov
mov
addb
fwait

adc
xchg
and
addl
into
fistpl
mov
addl
adc
adcb
add
addl
addl
dec
stc
daa
xchg
shll
mov
add
cmpl
mov
iret
add
addl
orl
addl
test
lahf
addl
faddl
addl
jo
inc
fld
andb
addl
dec
shrl
jl
mov
add
subl
adc
addb
sub
mov
and
cmpl
sar
inc
sahf
aad
cmpsl
cld
jns
cltd
addl
addb
gs
inc
add
andl
lret
loop
or
addb
addl
lret
cmp
xor
add
addl
addl
and
and
mov
add
mov
mov
scas
and
addl
addl
mov
sbb
into
mov
addb
add
enter
jg
mov
add
mov
nop

icebp
cwtl
mov
jl
cmp
add
fdivrl
pushf
rorl
add
fnstsw
xchg
lock
ret
(bad)
shll
addl
insb
sbb
cmp
add
add
push
inc
cmp
addl
and
addl
and
fsubl
add
or
jae
jne,pn
add
addl
push
jl
imul
idivl
adc
addl
push
jl
pusha
push
addl
xchg
lret
jmp
test
addl
xorb
addl
stos
jo
add
mov
addl
mov
and
fs
cs
dec
cwtl
jle
addl
add
sbb
addb
movsb
mov
addl
addl
sbb
add
addl
addb
aas
rolb
(bad)
mov
add
fnstsw
andl
loopne
add
pushf
addl
addl
enter
and
stos
cmc
rol
fsubr
arpl
addl
ret
inc
test
push
and
loop
addl
je
xchg
leave
iret
out
mov
addb
add
aas
sbb
popf
mov
dec
jle
xor
xorb
or
aam
addb
addl
jecxz
addl
pop
push
mov
cmpsb
out
addl
addb
dec
or
dec
jnp
mov
addl
add
lcall
add
pop
scas
scas
push
add
addl
in
out
daa
addl
add
pushf
stos
addl
test
lret
jo
addl
loop
mov
xchg
icebp
movsl
ds
addl
sti
into
xchg
xorl
addl
ror
hlt
addl
addl
cmp
mov
fwait

popa
sbb
and
addl
sub
pop
lods
lcall
addl
sbb
andl
mov
jae
xchg
int
adcl
addl
add
addl
mov
and
mov
xor
and
add
addl
call
addl
lods
xchg
addl
lods
mov
stos
faddl
addl
test
jo
xor
inc
cmp
addl
jg
mov
outsl
fnstsw
add
add
mov
lahf
test
mov
add
addl
inc
inc
testl
xchg
enter
daa
and
addb
and
add
inc
mov
rcl
test
add
clc
inc
les
addl
and
aam
sbb
(bad)
xchg
sbbl
addl
clc
pop
test
addb
addl
addb
addl
addl
orl
cltd
addl
xlat
lret
push
addl
xor
adc
andb
addl
hlt
addl
addb
test
lods
xchg
addl
addb
(bad)
cmp
or
addl
dec
mov
addl
cmpl
cmp
scas
or
addl
addl
addb
sbb
addb
add
lahf
mov
movsl
or
addl
and
inc
movsb
ljmp
addl
cltd
sub
cli
lret
jle
andl
add
inc
daa
cmp
std
sbb
repnz
shll
addb
push
mov
inc
sbb
add
addb
add
test
mov
and
iret
mov
addb
imul
sub
add
and
addl
mov
addl
push
xorl
and
daa
mov
and
addl
mov
or
add
add
inc
and
mov
addl
adc
jo
xchg
fs
addl
rclb
les
and
mov
test
mov
add
add
pusha
xorl
and
or
cli
sbb
addb
addl
mov
xlat
sahf
mov
addl
addl
mov
in
add
andb
and
and
or
aam
call
sub
sbb
and
in
xor
addl
add
adc
fsubrs
add
and
mov
andb
add
addl
xchg
movsl
pop
jbe
addl
and
dec
mov
addl
mov
addl
and
push
imul
sub
addl
in
jge
adc
roll
addl
int
sub
mov
add
or
mov
ja
mov
xchg
roll
add
jecxz
jle
adcl
xor
add
mov
mov
push
movl
addb
fnstsw
add
inc
ds
cmpsl
lret
addb
sbb
mov
addl
jp
cmp
mov
lock
addb
je
test
cmpsb
add
addl
push
outsl
xchg
push
addl
xor
mov
mov
addl
xorl
pop
pop
jo
imul
addl
test
addb
icebp
cld
jns
addl
xor
addb
test
mov
lcall
addl
test
addb
addl
push
jo
xor
addb
imul
addl
addl
rorl
addl
addb
pop
xor
mov
add
xchg
mov
scas
orl
addl
cli
addl
addl
dec
roll
inc
(bad)
adc
rolb
addb
add
xchg
int3
fs
addl
in
push
addl
and
jnp
clc
subl
add
add
or
dec
jbe
xchg
xorb
inc
push
and
addl
(bad)
mov
addl
leave
xchg
jo
xlat
(bad)
(bad)
stos
adc
addl
or
jnp
imul
addb
lock
inc
cmpb
add
pushf
jg
add
mov
fadds
mov
addl
pop
fldl
addb
orl
sub
addl
js
mov
movsl
mov
add
add
adc
stos
(bad)
cld
leave
or
clc
andb
addl
aaa
hlt
inc
addb
addl
and
addl
addl
ja
aas
jnp
andb
and
and
cmpl
lea
xor
addl
addb
and
addb
adc
int
adc
addl
call
popf
out
add
addl
movsl
sbb
cmpsb
addl
and
xlat
sahf
stc
inc
or
adc
xorb
add
roll
addl
pop
pop
pop
mov
stos
addl
(bad)
jmp
mov
addl
(bad)
and
mov
push
addb
cmp
jne
push
cmc
roll
and
addl
test
jmp
and
push
mov
xchg
movl
add
mov
jg
pop
cwtl
mov
addb
jle
int
jmp
mov
and
rcrb
push
or
add
movsb
jle
test
out
jl
sbb
addb
andl
clc
leave
fisubl
add
cmpl
jb
push
cwtl
lahf
add
addl
addb
addl
pushf
and
pop
pop
fldl
addb
test
nop

fsubrl
xor
add
addl
dec
repnz
lret
xchg
mov
xor
addl
ss
cltd
addl
addb
xchg
lods
ficoms
andb
addl
mov
addl
andb
addl
test
addl
addl
test
addb
addl
ret
aas
test
mov
addb
add
and
out
xchg
sub
and
andb
lcall
sahf
addl
addl
xor
push
gs
and
pop
fiadds
xor
filds
addl
adc
addl
cltd
popl
push
jge
add
addl
mov
test
xorb
sub
mov
and
addl
arpl
adc
addl
dec
jne
cwtl
inc
fcoml
addl
addb
xlat
push
lods
xchg
shlb
addb
pop
or
xchg
hlt
jp
cltd
pusha
pop
addl
cwtl
push
lcall
addb
inc
addb
stos
mov
addl
add
inc
hlt
scas
addl
into
lock
or
shl
pop
aad
add
add
rcll
jg
inc
andb
addl
inc
fstpl
mov
addl
mov
add
addl
mov
and
cmp
mov
mov
addb
and
addl
addl
adc
cmpsb
aad
addb
addl
mov
addl
repz
shrl
addl
shlb
mov
addl
mov
addl
xchg
add
addl
pushf
fsubp
lret
dec
cmp
addb
sahf
xor
xchg
rol
pop
popf
addb
add
pop
leave
inc
or
icebp
jge
ret
sahf
addb
addl
dec
mov
and
addl
xchg
push
or
cmpsl
add
addl
lea
mov
addb
(bad)
adc
in
and
fsubl
and
addb
and
add
add
addb
pop
dec
mov
nop

fnsave
cld
addb
andl
or
dec
mov
add
xorl
addl
add
and
addl
orl
addb
leave
rcr
dec
mov
push
nop

sbbl
add
addl
les
jge
push
nop

addl
xor
lods
stc
out
jmp
andb
addl
and
jge
xor
addl
addb
loope,pt
mov
cmpl
push
mov
addl
(bad)
fcoms
stc
addb
addl
andl
addb
inc
loope
dec
addb
add
mov
xchg
cmc
addl
addb
push
mov
add
addl
cmp
xor
xor
addl
mov
push
add
addb
addl
in
jecxz
adc
xchg
addl
add
subl
addl
xchg
or
int3
repnz
addl
jle
jmp
sbb
add
addl
pop
gs
push
addl
cmpl
cli
pop
cld
and
addl
mov
addl
aaa
adc
js
movsl
in
addl
addb
jae
xchg
add
hlt
pop
xchg
addl
movsl
adc
mov
jge
addl
mov
inc
out
(bad)
popf
lods
adc
addl
cmp
and
mov
cltd
mov
addl
addl
addb
andl
subl
jae
add
add
jbe
adc
popa
cmpsb
fldl
cmp
and
addl
std
loop
in
filds
addl
les
pusha
cmpl
mov
addb
jno
movsl
jge
out
insb
mov
and
adc
mov
addl
and
addl
fnstsw
stos
sarb
addl
add
aam
or
addl
addl
xchg
sbb
cwtl
shlb
sbb
and
mov
xlat
mov
mov
addl
mov
addl
scas
addl
addl
cmpsb
adc
addl
jg
xor
mov
addl
push
sbb
clc
addb
cmpl
addl
addl
dec
mov
adc
addl
adcb
int
xor
sub
addl
and
outsl
jmp
and
addb
and
add
jg
cmc
mov
add
psllq
push
pop
int3
(bad)
addb
andl
ja
or
xchg
test
addl
in
out
fadd
dec
stos
add
addl
fs
aaa
addl
subl
addl
sub
pop
mov
add
addl
in
mov
xchg
addl
ret
cwtl
inc
xor
inc
dec
addl
cwtl
adc
mov
addl
out
pop
adcb
addl
jo
int
andb
addl
popa
and
fstl
addb
mov
dec
dec
addl
add
addb
adc
addl
subl
test
addb
add
sahf
or
ret
andl
xchg
xor
add
addb
addl
pop
addl
add
fsubr
pop
(bad)
mov
addl
adc
addl
xchg
add
addb
add
js
inc
in
sub
addl
test
add
and
addl
dec
mov
jge
mov
addl
cltd
xchg
iret
addl
addb
aas
jb
jle
dec
xchg
cli
inc
cltd
addl
mov
addl
add
and
inc
sbb
test
jle
addr16
add
addl
iret
addl
add
cwtl
xchg
addl
pop
cmp
add
imul
test
addl
imul
add
andl
addb
imul
test
and
subl
mov
andl
stc
inc
andl
addl
add
lock
(bad)
mov
mov
add
and
test
or
add
addl
lea
add
aas
ret
jge
lret
out
xchg
add
addl
fwait

movsl
addl
orl
shll
mov
addl
or
adc
addl
int3
stos
inc
shll
addl
push
gs
mov
add
inc
ret
add
hlt
std
add
add
addl
cmp
cmpsl
movsb
xchg
fs
mov
addb
inc
(bad)
out
in
pop
mov
out
arpl
addb
and
add
jnp
lods
jmp
addl
daa
jmp
inc
mov
addl
and
arpl
sub
xor
add
addl
mov
addl
fiadds
addl
adcl
addl
mov
sbb
cmp
inc
addl
inc
or
call
addl
addb
test
ja
test
addl
stc
outsl
rorl
mov
addl
addl
mov
movl
add
or
inc
stc
cmp
leave
mov
addb
lahf
mov
inc
addb
add
xchg
mov
and
push
mov
add
mov
repz
add
fldt
cld
mov
pop
in
sbb
addl
ja
mov
addl
addl
mov
shll
addl
fmul
mov
addl
push
sahf
mov
aaa
dec
inc
addb
addb
xlat
lret
push
dec
sub
inc
xor
add
addb
add
sahf
push
scas
sbb
addl
rorb
lods
mov
sbbb
addl
mov
add
addb
lea
addl
addb
addl
xor
stc
lods
andl
add
mov
lret
das
add
addl
xchg
addl
add
(bad)
rcll
subb
andl
adcl
addl
jle
pop
(bad)
andb
addl
jne
lods
or
addl
cmc
cmp
addl
addl
or
and
adcl
xlat
mov
and
addl
xchg
addb
cmpsl
stos
and
cmp
addl
incl
addl
jae
addl
and
sbb
or
jl
sbb
addl
mov
addl
addl
addl
add
addl
mov
sbb
xor
mov
addl
push
and
addb
xorl
add
add
loopne
mov
stos
imul
add
addl
jge
mov
mov
addb
aas
push
mov
mov
test
addb
and
add
xchg
xchg
addl
out
out
les
lret
addl
mov
dec
cmc
and
addb
lock
jp
xchg
and
add
insl
xchg
and
popl
add
fldl
addl
orl
addb
(bad)
cs
daa
sbbb
addl
xchg
xchg
vandnpd
out
addl
cld
inc
adc
jecxz
add
addl
and
clc
sub
addl
subb
addl
sub
cwtl
aad
rorl
pop
rorl
addl
addl
sahf
pop
loope
dec
xchg
movb
addl
fcompl
rolb
add
scas
cwtl
les
xchg
or
jo
and
andb
jg
rorl
into
pop
call
add
add
andb
(bad)
fldl
roll
add
and
fldenv
addl
push
imul
scas
addl
sbb
sbb
add
addl
addl
sub
and
addl
aad
inc
and
mov
addl
push
mov
orb
add
sti
addl
addb
mov
jl
(bad)
icebp
and
addl
addl
add
and
lea
add
addl
sbb
addb
mov
or
std
addl
test
lds
addl
dec
xchg
addl
test
addl
test
xchg
addl
addl
xchg
pop
stc
js
push
test
lea
add
add
les
lods
jne
addl
addb
sbb
addb
mov
xor
addb
addl
xor
xlat
loopne
loop
addl
sbb
sub
mov
andb
and
inc
jmp
lahf
mov
addl
mov
addl
and
mov
addl
cmp
test
addb
add
push
addb
andl
lods
sbb
add
add
loope
out
jbe
add
addl
adcb
add
call
and
addb
and
add
shll
loopne
stos
cmc
adc
addl
mov
addb
andl
outsb
jge
orb
addl
sbb
clc
out
sub
addl
add
lea
mov
ret
pop
cmp
addl
fmull
test
addl
sbb
jo
addl
or
xchg
outsl
xor
addl
push
jns
xor
mov
addb
addl
mov
addl
cmp
addl
sahf
xorb
stos
mov
addl
icebp
inc
fldl
addl
pop
stos
mov
addb
add
rcr
add
jb
addl
addb
lea
jns
jle
repz
add
add
enter
adc
xchg
mov
and
xor
xchg
into
addl
addl
and
push
pop
addr16
mov
addb
add
jae
sahf
adc
mov
addl
repnz
int
sub
addl
iret
jmp
adc
ds
add
addb
add
mov
mov
addb
mov
jmp
mov
addb
popf
sbb
mov
addl
ret
hlt
xchg
xor
addl
movsl
mov
jno
sbb
xchg
in
adc
addb
into
arpl
jp
test
aaa
addl
fdivs
(bad)
add
addl
test
addl
add
gs
cmpl
and
push
mov
filds
addl
jbe
or
in
and
add
addl
sti
mov
scas
cmc
addb
addl
fadds
addb
movsl
lcall
and
and
subl
push
jecxz
icebp
mov
addl
addb
ss
sahf
addl
add
lods
pop
xchg
adc
pop
orb
add
and
mov
subb
add
addl
or
addl
repz
cs
addl
mov
addl
mov
roll
add
int3
rcll
int
addl
adc
(bad)
js
mov
addl
jae
mov
stos
pushf
out
addl
aad
jbe
jg
or
add
add
xchg
mov
cld
rolb
addl
orb
movsl
in
ljmp
addl
movsb
jne
sub
add
and
addb
and
add
pop
addb
addl
and
addb
andl
push
and
addb
shrl
add
addl
pushf
addl
subl
lret
imul
addl
leave
or
lods
addl
loope
mov
addl
xchg
dec
out
test
adcb
and
addl
in
jg
aam
add
dec
addl
addb
daa
push
dec
lret
sub
out
addl
subb
jmp
addl
andb
xchg
cld
aas
loopne
addl
cmpl
lea
mov
addl
out
loope
addl
addb
jge
movsl
adc
fmuls
add
add
jl
addb
and
andb
adc
scas
cmpsb
mov
add
or
flds
jge
andl
add
lea
inc
jno
mov
addl
push
bound
fdivrl
sub
lea
addl
add
addb
add
sub
cli
adc
and
xorb
xor
addl
scas
mov
andl
addl
(bad)
add
addl
addb
pop
jmp
mov
sbbb
add
and
xlat
andb
add
addl
or
addl
jp
addl
push
mov
addl
addb
mov
xchg
sti
xor
mov
popf
filds
andl
xor
lahf
out
sub
addb
addl
lock
push
(bad)
fimull
addl
mov
outsl
xor
or
jns
andb
and
and
subl
leave
mov
xchg
addl
pop
pop
fimuls
sub
addb
insl
push
or
addl
add
addl
jg
cld
nop

orl
and
jo
xchg
mov
addl
mov
addl
and
dec
stc
push
and
addl
fstpl
sub
addl
out
mov
and
addl
faddl
(bad)
xlat
push
(bad)
dec
add
add
sahf
dec
inc
push
add
(bad)
add
addl
mov
xor
addl
test
addb
and
add
xor
jne
addl
mov
fldl
addl
and
(bad)
cmp
add
addl
xchg
test
jnp
cmpl
addl
in
test
addl
testb
addl
cmc
push
mov
addl
inc
test
cli
loop
addl
out
xor
addl
fildl
in
je
add
orl
mov
addl
stos
cld
sarl
test
movb
addl
mov
aad
addb
(bad)
loop
mov
addb
add
pop
pop
inc
push
addl
addb
cmp
pop
jmp
addb
add
mov
scas
and
andb
dec
nop

mov
xchg
push
push
sahf
addl
addl
mov
addl
add
shll
repnz
addl
mov
addl
pop
xchg
push
push
cmpsl
filds
add
addl
inc
popl
test
addl
ja
inc
stc
mov
addb
sbb
addb
aam
jns
addl
addb
adc
addl
jge
pop
je
addb
mov
addb
and
sbb
loope
add
addl
test
int3
jl
addl
sbb
loopne
sahf
addl
sbbl
rol
jl
push
aam
addl
jae
cwtl
mov
and
addl
shl
loopne
arpl
addb
addl
xchg
pushf
addl
addl
lahf
xchg
add
faddl
jg
andb
and
and
adc
add
shl
dec
scas
or
and
addl
addl
or
addl
rorl
andb
add
cmc
jb
roll
cmp
addl
and
jmp
movzbl
addl
mov
addl
andb
addl
mov
cmpsl
subl
addl
mov
adc
addb
add
mov
lods
ljmp
mov
lods
addl
xchg
cmp
adc
push
lods
pop
add
add
int
fldcw
add
cltd
mov
stos
inc
mov
add
pop
xor
loopne
and
addb
and
add
jmp
cmpsl
cmc
adc
mov
addl
xchg
adcl
addl
lret
add
cmpl
(bad)
cli
in
addl
add
jbe
movnti
mov
addb
addl
loopne
daa
int3
adcl
sbbl
xor
inc
mov
addl
nop

lea
mov
addb
jge
into
nop

mov
adc
xchg
mov
and
addl
into
test
mov
addl
addl
xchg
stos
sti
jmp
stos
lret
sbb
stos
addb
addl
addl
andl
add
adcb
lods
pushf
addl
addb
fs
lods
xchg
jge
add
add
add
aaa
loop
xchg
arpl
and
andb
sbb
test
addl
sarb
and
xchg
test
pop
cmp
aad
jecxz
addb
add
scas
xor
mov
add
movsb
lods
test
lcall
dec
add
addb
add
inc
add
cmp
push
addb
pusha
xorb
addl
xor
add
addl
mov
movsl
jge
sbb
and
addb
xor
mov
sub
addl
addl
add
and
lahf
xor
mov
addl
int
(bad)
std
mov
addl
mov
(bad)
mov
xlat
addl
fists
aaa
add
add
xlat
pop
int
in
xor
addl
push
addb
addl
fwait

scas
xlat
addl
addl
fldl
andb
and
and
adcl
jge
jecxz
addl
addb
jl
cld
mov
sub
andl
shlb
popl
addl
fwait

mov
out
and
add
addl
aas
ss
test
addl
adc
push
hlt
mov
addl
mov
addl
mov
addl
and
test
out
sub
addb
dec
loop
std
addb
add
push
mov
test
movsl
cmpsl
addb
and
lods
mov
pop
js
and
addl
sbb
jno
mov
add
addl
pusha
sbb
add
(bad)
fiadds
in
fdivs
add
aam
cwtl
repz
push
aam
out
sahf
addl
xchg
scas
sti
addb
andl
das
mov
push
out
add
or
adc
add
addl
push
cmp
addl
adc
pusha
scas
sub
addl
and
and
in
xchg
shrl
fwait

ret
addl
in
rolb
push
mov
andb
addl
lret
std
cmp
add
addl
sbb
addl
movsb
mov
gs
xor
adc
addb
addl
addl
icebp
xor
fiaddl
addl
sbbb
sbb
addb
lret
test
pop
dec
aam
add
add
daa
add
and
int
xor
mov
addl
cmpsb
push
jae
inc
addl
add
scas
lea
addl
xorb
xor
test
addl
addr16
push
scas
sahf
add
addb
add
xchg
mov
addl
xorb
add
addl
sahf
mov
out
cmc
nop

mov
addl
aad
je
out
addl
addb
xchg
and
addl
ret
decb
addl
xchg
jl
insl
add
orl
addl
adc
add
addl
push
add
jmp
sbb
aam
addb
andl
xorl
adc
addl
jle
les
jne
dec
mov
addl
mov
cmp
adc
sahf
into
rolb
addl
add
mov
addb
push
inc
popa
stos
mov
(bad)
(bad)
andb
and
and
sbbl
das
and
addb
subl
jge
ficompl
jb
xor
addb
ffreep
and
cmc
rorb
add
and
aaa
nop

xchg
mov
addl
call
push
addl
and
xchg
mov
addl
mov
addl
addl
lea
mov
addl
adc
push
mov
addb
add
popf
in
mov
out
and
add
mov
aad
or
dec
cwtl
pop
sub
and
addl
sub
cld
andb
addl
sbb
cmpsl
ror
xor
addl
call
and
addb
and
add
scas
inc
aam
addb
movsb
pop
stc
mov
lock
xor
xchg
pop
cld
addb
andl
mov
push
addl
mov
add
addl
addl
adc
lcall
cltd
addl
sbbl
mov
add
addl
inc
mov
addb
sar
mov
mov
addb
orl
aad
addl
addb
faddl
addl
mov
stos
cmpl
addb
addl
pop
std
addl
orl
push
mov
lret
addb
add
outsb
addl
addb
pop
test
rcr
sbb
addl
push
jo
inc
and
and
mov
add
addb
addl
add
addl
add
pop
add
ljmp
addb
add
aas
push
mov
sub
icebp
xchg
sub
addl
lods
pop
lea
add
addb
add
loop
int
rolb
addl
xchg
mov
addb
jnp
and
mov
add
addb
scas
loope
stos
and
jmp
addl
addb
push
fisubrl
addl
int3
fists
addl
add
and
pop
add
addl
mov
addl
mov
andl
orl
mov
orl
addb
mov
mov
jno
andb
addl
js
repnz
mov
faddl
addl
sbbl
addl
addl
hlt
scas
popa
fnsave
add
add
pop
adc
andl
pop
int
mov
or
mov
addl
repnz
addl
lret
test
jle
es
add
addl
mov
rorl
add
xorl
add
addl
call
addl
addl
arpl
stc
movsl
dec
and
addl
add
fcmovne
addb
add
jle
xor
addl
add
push
sahf
jmp
and
addl
xchg
inc
mov
add
addl
pop
xchg
(bad)
adc
mov
addl
xchg
and
addb
and
add
addl
xor
enter
addb
andl
dec
and
addb
mov
push
mov
cmc
dec
adc
addl
add
lret
xchg
int
addl
addl
adc
addl
xchg
add
and
adc
addl
int3
jo
not
pop
daa
cmpl
sbb
addl
addb
movsb
int
test
inc
addl
rcll
addb
addl
addl
jge
and
sbb
addl
cmpb
test
addl
addb
in
outsl
imul
add
add
test
sub
mov
or
addl
jl
xorl
cwtl
addl
addl
int
pop
addl
add
int3
lcall
addl
push
or
and
roll
addl
out
add
addb
add
jmp
or
aad
addl
and
adc
addl
mov
outsb
inc
cld
mov
addl
inc
faddl
and
mov
fiadds
addl
sub
pop
stc
push
flds
add
addl
addl
aam
jp
mov
lret
addl
add
lods
jae
pop
xchg
and
imulb
jmp
addl
sahf
je
or
andl
push
and
addb
addl
or
addl
xchg
xchg
andb
and
and
sbbl
sahf
add
pop
addl
addb
mov
addl
lea
addl
push
dec
xor
addl
stos
pop
sbb
mov
and
addl
and
cwtl
mov
addl
mov
addl
fildl
xor
addl
fdivrl
scas
addl
push
mov
addl
and
lods
mov
addl
jb
xchg
pop
add
add
mov
xchg
addl
or
cmp
std
jne
idivl
addl
test
into
ret
push
and
addb
and
add
lock
nop

addl
movsl
or
fdivrl
andb
addl
xchg
int
jmp
add
and
addb
(bad)
push
lock
xchg
add
add
xor
mov
addl
lret
cmp
xor
addl
andl
dec
sub
fdivr
addl
shrl
test
addl
mov
fwait

mov
addl
rclb
mov
loop
fimull
add
xorl
addl
sub
xchg
loop
test
addl
mov
mov
addl
xchg
lret
addb
add
jle
xchg
addl
addb
mov
scas
adc
addl
int
mov
std
and
andb
cltd
(bad)
ljmp
call
addb
addl
mov
mov
inc
out
aaa
jge
addl
add
loopne
ja
addb
add
pushl
cmp
add
inc
insb
lret
repz
insl
jae
mov
and
addl
mov
addl
xorl
jb
jmp
addl
dec
nop

pop
subb
xor
addl
addb
test
and
lods
icebp
lret
xchg
addl
mov
in
or
addl
test
into
cld
aad
mov
addl
cmpsb
loope
addl
add
xchg
and
pop
les
addl
sbbb
and
addl
imul
pop
addb
addl
push
lea
enter
sahf
addl
addl
cld
mov
and
subl
gs
pop
lret
addl
addb
addl
add
fldl
jl
icebp
addb
addl
add
addl
aam
xor
addl
and
les
addl
mov
addl
andb
addl
or
jmp
mov
addl
xor
cld
aad
test
addl
ss
andl
scas
aad
addb
xorl
jg
fldl
add
add
aad
int
mov
outsb
test
add
mov
sahf
xchg
push
add
icebp
jb
add
add
add
cmpb
addl
xlat
les
andl
andl
pop
je
add
cmpl
addl
add
jbe
xchg
cltd
mov
fcoml
addb
addl
addl
sbbl
sub
addb
adc
outsl
addl
scas
movsl
xchg
sbb
addb
sbbl
xor
xchg
addl
addb
subb
addl
xchg
dec
addb
addl
or
ret
mov
addb
loop
mov
addl
lcall
sti
enter
addb
aam
orl
xor
add
add
stos
repnz
and
andb
daa
xchg
js
sub
mov
addl
addl
jo
addl
add
aam
fdivr
pop
push
mov
addl
das
and
setg
popl
addb
popf
dec
mov
movsl
add
addb
add
cltd
(bad)
je
movsl
addl
xor
std
xor
addb
(bad)
cmc
dec
rorb
addl
addb
pop
loopne
mov
andl
leave
hlt
aam
jge
lea
addl
adc
jge
xchg
mov
addl
add
and
or
and
push
mov
mov
addl
or
mov
addb
push
fcomi
fwait

scas
jo
addl
adc
movl
addl
into
rclb
and
addl
mov
(bad)
rcrb
pop
addb
addl
jge
addl
addl
lds
les
outsb
and
andb
and
and
cmpl
jl
ds
addb
sbbl
hlt
mov
inc
shlb
addl
imul
xorl
andb
add
or
mov
addl
and
adc
test
xorb
in
jns
dec
xchg
and
addl
es
xor
xchg
addl
std
cmpsb
sub
sti
sti
push
pushf
mov
addl
cwtl
push
xchg
out
jle
addl
testl
and
addl
fisttpl
ja
clc
subb
add
mov
mov
flds
add
cmp
and
addb
and
add
rorb
addl
loop
popf
jge
faddl
and
jno
data16
addb
adc
push
jge
lret
add
addl
addl
xorl
ss
addl
xorl
addl
stc
andl
add
addl
fiadds
addb
xorl
mov
cmp
addl
jmp
addl
lea
addl
or
pop
xchg
dec
stos
icebp
sbbl
addb
sub
pop
xchg
repnz
add
sahf
adc
out
push
addl
addb
loopne
jns
stos
pop
incl
addl
pop
fdivs
divb
xchg
fstl
and
fbstp
std
jp
mov
addb
addl
push
lea
add
cmc
filds
addl
loop
mov
mov
addb
arpl
and
addb
add
push
mov
mov
addl
andl
(bad)
pop
cmpsb
mov
addb
insb
popf
dec
(bad)
cmp
je
addl
lret
mov
and
addb
pop
and
sbb
addl
shlb
jae
dec
cmp
addl
lds
mov
addl
addl
lods
mov
addb
cmpl
xor
inc
lcall
and
xchg
sbbb
dec
add
add
faddp
mov
pop
pushf
inc
andb
addl
fstps
arpl
test
addl
xchg
les
mov
addb
ret
mov
mov
and
add
lods
pop
mov
xchg
addl
addb
mov
addl
add
enter
add
addl
dec
mov
mov
addl
xchg
cmp
addl
and
and
dec
mov
addl
mov
addl
jo
add
andb
addl
movsl
lock
push
ss
int
addl
outsb
xor
sub
dec
cld
incb
addl
addb
cmpl
and
addl
lea
roll
addl
cmpb
and
sbb
addl
orl
sub
andl
mov
and
jo
inc
test
xchg
not
addl
xor
sbb
andl
andl
or
clc
iret
orb
addb
mov
mov
add
addl
stos
cmp
xchg
addl
sbbl
repz
addb
sbb
addl
pop
push
mov
jl
addl
fadd
addl
mov
hlt
cmp
push
pop
int
test
addb
or
adc
loop
je
subb
addl
mov
addb
addl
pushf
cmp
mov
addl
lret
cltd
mov
addl
inc
enter
xor
addl
mov
mov
mov
add
xchg
jb
push
arpl
andl
mov
lods
mov
mov
addb
addl
add
dec
sahf
daa
and
andl
add
stos
adc
aam
nop

outsl
addl
mov
mov
add
add
or
xchg
add
add
addb
add
mov
rolb
addl
es
rolb
addl
mov
addl
addb
fucomip
addl
addb
in
das
stc
in
addb
pop
fnsave
out
jmp
add
and
mov
(bad)
mov
mov
addl
add
or
addb
addl
xchg
iret
xchg
addl
cs
xchg
clc
(bad)
push
cmpsb
pop
add
add
mov
sub
and
addl
loope
andl
addl
out
pop
fimuls
addl
lods
pop
jg
mov
and
xorl
sbb
and
xchg
mov
stos
sahf
addl
add
jle
add
inc
push
addb
addl
push
add
addl
sahf
stc
bt
addl
and
outsb
popl
add
or
push
jl
xchg
in
addl
xor
mov
addl
addb
add
sahf
inc
jne
add
filds
add
les
add
add
sub
pop
(bad)
jecxz
addl
or
push
and
les
addl
negl
mov
add
test
mov
adc
addb
cmpsl
ja
inc
pop
sbb
(bad)
and
addl
lds
mov
addb
jp
into
sbb
addl
xchg
ret
rolb
addl
adc
addb
push
in
fistpll
mov
add
addl
adc
addl
addb
into
popf
rorl
addb
cmpl
fiaddl
addb
lods
mov
sahf
xchg
test
fldl
addl
push
mov
movl
addl
cmpb
jne
rolb
addl
andl
sbb
xchg
in
addb
add
and
rol
jno
sub
or
addl
aad
loope
sub
addl
out
xchg
imull
andl
addl
hlt
inc
or
cltd
test
add
addb
addl
addr16
mov
andl
add
adc
addl
(bad)
and
jmp
rcll
addl
aad
sbb
add
add
push
sbb
lods
rolb
mov
or
leave
dec
push
push
adcb
addb
sbb
jmp
or
add
addb
vandps
mov
addl
addl
mov
addl
sub
and
add
addl
imul
addl
sub
addl
add
mov
addl
xor
mov
addl
addb
mov
sub
add
rolb
addl
mov
addl
aad
adc
add
addl
andl
xorb
lahf
pop
addl
addb
adc
cmp
subb
and
subl
mov
add
and
or
test
and
addl
mov
addl
and
mov
lds
test
xorb
je
call
and
sbb
sbb
addl
lea
enter
jmp
pop
lods
addb
add
jo
daa
addb
addl
jnp
lods
test
addl
dec
ror
xor
nop

imul
add
addl
xchg
mov
mov
addb
mov
mov
int3
and
addb
and
add
cmpsb
xor
mov
jb
(bad)
pop
mov
add
pop
inc
push
addb
andl
jae
sbb
mov
addl
cmpl
add
in
aas
jb
mov
adc
fdivl
sbb
addl
xorl
xchg
addl
sbb
rolb
and
mov
addl
outsl
out
mov
andb
addl
mov
addl
addb
jmp
fnsave
repz
lahf
pop
addl
or
clc
mov
addb
addl
addb
cltd
imul
mov
out
mov
addl
addb
pop
mov
addl
fnstsw
stos
cmp
addb
add
xchg
lods
mov
not
gs
and
andb
lods
xchg
mov
add
andl
andl
add
adc
or
add
addl
sbbb
pop
mov
addl
andb
shlb
add
addl
daa
test
sub
addl
sbbl
or
leave
lods
fsubr
or
and
addl
mov
enter
addl
clc
and
filds
and
ret
add
pop
push
in
pop
addl
pop
add
add
test
mov
mov
jp
leave
cmpsl
ret
add
addl
push
addb
addl
rcl
faddl
cld
pop
addl
mov
cld
mov
dec
add
add
push
ja
push
stos
add
sbb
and
addl
xor
cmpsb
cmp
addl
pop
sahf
test
roll
stos
movsl
addl
addl
outsl
lret
icebp
mov
and
orl
cmp
xchg
cld
mov
mov
and
addl
decb
add
addl
icebp
mov
addb
addl
push
inc
push
mov
add
addl
xor
stos
addl
and
push
mov
lock
int
lods
mov
addl
mov
addl
insb
addl
sbbl
addl
inc
mov
pop
push
cmpb
addl
mov
addl
add
add
mov
and
addl
mov
cmpsl
mov
dec
pop
or
addl
push
cmp
mov
addb
inc
repz
pop
xorl
and
addb
and
add
andl
sub
addb
js
mov
fimuls
addl
xor
ja
sbb
and
addb
or
cmpb
add
addl
pop
push
mov
addl
lods
jb
mov
addb
jmp
xor
mov
or
roll
and
and
jae
add
addl
addb
(bad)
add
sti
pop
(bad)
out
mov
addl
or
and
xor
paddd
addb
inc
ret
(bad)
loope
icebp
xchg
popa
xor
addl
test
add
addl
or
les
repnz
addl
adcl
sahf
shrl
push
inc
inc
addb
add
out
jp
pop
xchg
lods
lahf
and
addl
mov
push
addb
add
mov
mov
addl
lods
lea
xor
sub
add
add
scas
stos
cli
int3
test
sahf
mov
roll
add
test
addl
test
pusha
dec
neg
addl
out
fldl
stos
movsl
pop
mov
add
addl
push
in
outsl
addl
addl
mov
hlt
movsl
and
addl
aas
cmp
addl
add
jb
add
addl
push
addl
sub
stos
mov
dec
movsl
fmull
addl
add
and
(bad)
leave
addb
addl
and
call
addl
subl
pop
push
jl
lods
jno
mov
das
sti
sbb
addl
adcb
cld
mov
mov
addl
or
fstps
xchg
addb
addl
pop
adcl
addb
pop
jg
xchg
jmp
xor
sahf
mov
and
addl
inc
push
addl
addb
fadds
andl
mov
stos
addb
addl
sbb
shll
push
add
addl
nop

jo
mov
cwtl
addl
and
sahf
cmp
cs
jmp
mov
addl
mov
addl
xor
addl
or
lret
mov
addl
lret
je
(bad)
mov
addb
add
cmp
adcl
addl
add
lret
cmpsb
loopne
in
xchg
test
add
add
lahf
jge
scas
mov
add
addl
sahf
rorl
repz
mov
addb
push
adc
call
mov
and
popa
in
jno
mov
xchg
addl
jecxz
or
test
and
pop
addl
addl
test
enter
jmp
adc
test
add
aas
mov
lods
mov
addl
data16
addb
movsb
and
pop
addl
movsl
jns
cld
jl
frstor
addb
mov
jno
add
loope
subl
and
addl
sub
jbe
leave
addl
addb
stos
fcoml
cld
cmpsb
inc
xchg
addl
xor
addl
orb
cli
orl
mov
mov
addb
add
test
xor
addl
addb
mov
push
repz
test
addl
fstl
and
andb
je
ror
cmpsb
fwait

jns
sub
addl
lea
mov
add
imul
addl
cmpb
addb
add
dec
push
shlb
mov
add
cmp
arpl
add
addl
mov
addl
cmpsl
add
stc
pushf
and
addl
mov
addl
mov
addl
addb
adc
add
addl
cld
lahf
orl
ss
popf
add
add
xor
add
addl
push
repnz
mov
addl
out
mov
sbb
mov
and
sbb
test
outsb
pushf
inc
add
add
stc
jp
xchg
out
andb
addl
jmp
js
ja
call
addl
enter
addl
cld
mov
je
in
jecxz
andb
and
and
subl
jnp
nop

mov
fildl
addb
subl
cld
dec
mov
mov
addl
fldcw
add
and
addl
addl
push
orl
addl
ljmp
xor
add
jl
outsb
or
addl
addl
xchg
je
addl
shrb
mov
addl
(bad)
push
aas
add
(bad)
daa
addb
xorl
adcl
addl
lock
pop
mov
addl
sbbb
xchg
in
mov
push
sub
in
mov
addb
testb
dec
and
addb
and
add
push
repnz
mov
addl
jecxz
lahf
mov
addl
scas
and
clc
mulb
add
or
inc
push
fldl
add
addl
add
lock
addl
dec
addl
cmp
add
jno
and
cltd
jb
loopne
addl
xchg
or
addl
psllw
arpl
cmp
add
addl
and
mov
movsl
std
push
in
lea
addl
shlb
inc
mov
xlat
pop
addl
andl
pusha
test
imul
addl
add
es
mov
addl
xor
leave
movups
addb
add
jg
fstl
xchg
lcall
inc
and
andb
call
xchg
iret
int3
mov
add
addb
addl
xor
mov
lock
push
addl
add
addl
addl
add
addl
addr16
outsl
gs
cmp
movsb
addb
add
add
subl
xorb
test
xlat
rclb
addl
mov
lea
mov
addl
dec
jae
sarb
pop
leave
addl
addb
test
xchg
addl
add
addl
test
jne
sti
jne
mov
addl
cmpb
addb
addl
add
addl
cmc
stos
push
stos
stos
cmp
add
add
adc
dec
push
xor
pop
push
andb
addl
inc
bound
xchg
push
mov
addl
adc
addl
(bad)
icebp
or
andb
and
and
orl
xchg
fistpll
and
addl
fadds
andl
ljmp
addb
addl
repnz
lea
xchg
adc
addl
hlt
mov
sub
add
pop
mov
add
addl
andb
addl
jle
stos
outsl
add
jnp
addl
sub
sub
addb
add
leave
addb
adcl
adcl
and
addl
loope
addr16
jg
insb
add
addl
pop
in
xor
addl
hlt
mov
aaa
adc
cmp
pushf
xchg
push
pusha
ds
and
addb
and
add
iret
sahf
mov
addl
std
paddw
addb
andl
and
and
addb
loopne
js
mov
or
lcall
add
pop
adc
addb
addl
fsub
addl
adcl
jle
into
addl
daa
fsubrs
or
addb
and
dec
mov
int3
addl
pop
xchg
rcr
mov
addl
addl
add
inc
inc
lret
addb
addl
addb
imul
(bad)
push
dec
dec
xchg
push
addb
add
stos
inc
cmc
fiaddl
addl
mov
add
add
push
leave
push
cmc
cwtl
sbb
andl
ljmp
out
lds
addl
addl
shll
adc
mov
cltd
addl
add
cwtl
mov
push
and
jns
addb
add
(bad)
push
cmpsl
insb
addb
addl
sub
roll
add
addl
dec
fldl
addb
addb
dec
adc
test
jne
int
addl
loope
xor
faddl
cmp
inc
pushf
jecxz
addl
inc
movsb
and
add
addl
addl
in
xchg
fdivrs
addl
xchg
sbb
call
xchg
xchg
add
addl
addb
mov
in
xchg
movsl
je
push
addl
push
push
ret
xorb
add
cltd
sahf
mov
and
andb
addl
ss
ss
rcl
addb
addl
addl
addl
or
cmp
mov
and
sub
subl
addb
cmpl
add
addb
sbb
mov
add
and
test
addl
xorb
addl
and
push
jl
mov
xchg
add
and
lret
adc
aam
lods
jo
in
addl
subl
das
pushf
addl
sub
addl
xchg
mov
adc
mov
addb
xorl
add
jle
or
addl
or
add
cmpl
addl
or
jge
lds
test
and
addb
and
add
adc
addl
test
addl
and
xchg
cmpsl
pushf
fnstcw
mov
addl
cmc
pop
in
add
addl
enter
add
leave
push
jl
rol
adcb
imul
addl
mov
addl
in
lock
popa
je
lcall
add
leave
or
cmp
addl
movsl
ja
xchg
inc
stc
test
addl
addb
hlt
xor
push
addl
adc
addb
addl
jb
insl
push
inc
addl
andl
jle
dec
outsl
pop
mov
adc
addl
scas
addl
addl
addb
or
lret
xchg
movb
add
push
test
mov
and
andb
sahf
insl
lock
cli
jge
add
addb
addl
inc
jmp
fcoms
addb
add
ficoms
push
jbe
addb
add
pop
lcall
aad
mov
addl
negl
out
push
push
add
addl
in
xlat
outsb
addl
addl
jne
and
addl
popa
inc
int
adc
addl
addb
push
andl
test
test
dec
addl
lea
adc
add
and
call
mov
addl
(bad)
and
addb
or
aam
push
gs
push
xchg
addl
cmpsl
jno
push
je
loope
addl
int3
call
addl
mov
addb
addl
cmp
addl
jecxz
das
inc
xchg
inc
in
cwtl
cmpsl
mov
int
andb
and
and
subl
std
xor
andl
into
icebp
add
jl
scas
and
icebp
pop
xchg
addl
add
fistl
add
and
xor
mov
andb
add
insl
dec
adcl
aam
addl
and
aaa
add
lea
addl
mov
addl
xlat
stc
cmc
cld
clc
addl
xorl
addl
(bad)
(bad)
cmp
sbb
addb
add
faddl
add
add
ror
add
add
inc
orl
mov
in
add
addl
dec
sahf
call
addl
mov
add
mov
addl
sar
je
addb
andl
bound
or
repnz
add
addl
int
stc
sahf
mov
add
addl
cwtl
popa
addl
xorl
add
mov
xchg
addb
lock
mov
xor
xorl
addl
addb
sub
mov
add
and
ja
jge
fildl
addl
jae
iret
(bad)
sbb
addl
cmp
sahf
nop

addl
sbb
aad
jmp
addl
addl
mov
ljmp
addl
add
add
xchg
inc
sahf
push
out
and
andb
lcall
(bad)
xchg
addl
addl
xchg
push
addl
add
xchg
mov
xchg
les
addl
mov
(bad)
cld
sub
addl
inc
cwtl
sub
add
addl
mov
inc
mov
push
addl
or
mov
and
addl
or
mov
addl
addb
addl
addb
hlt
addl
es
sbb
add
mov
jmp
mov
push
sbb
mov
addl
int3
addl
add
(bad)
out
and
ror
addb
andl
sbbl
xacquire
addl
rorb
je
jns
jle
and
addl
mov
mov
addb
addl
mov
lea
addl
pusha
fildl
addb
andl
test
sub
dec
pop
add
andl
popf
scas
(bad)
mov
addb
sbb
fnstsw
addl
cmp
addl
je,pn
hlt
mov
xorl
add
xlat
(bad)
gs
(bad)
mov
addl
mov
addl
or
addl
add
addl
insl
inc
loop
roll
addl
test
addl
addr16
andl
addl
pop
mov
addl
adcb
mov
addb
xchg
addb
and
add
(bad)
sarb
addb
jno
mov
pusha
xlat
inc
jbe
or
andl
andl
push
jl
or
jge
add
cmpl
arpl
nop

(bad)
adcb
add
addl
dec
icebp
bound
addl
daa
divb
addb
shl
xor
mov
xor
addl
mov
addb
mov
addl
jnp
xor
movsb
mov
fsubrl
addb
ja
jnp
cmp
addl
repz
lret
cld
dec
aas
push
mov
mov
rolb
addb
addl
test
addl
sbb
addl
push
mov
add
(bad)
sub
lods
imul
addb
add
rcll
andl
cld
or
lea
push
add
addb
addl
add
and
dec
rorl
addl
add
jle
cmp
addl
fwait

push
mov
addl
mov
inc
mov
arpl
addb
add
ds
mov
outsb
movsl
addl
subl
push
fstl
mov
addb
pusha
lret
popa
repnz
addl
mov
jecxz
jecxz
dec
cwtl
addl
addb
lcall
or
addl
xchg
push
mov
addl
pop
cmc
push
add
addl
add
addl
popa
subl
xchg
fldt
addl
in
inc
inc
add
add
loopne
andb
addl
loopne
aad
les
addl
(bad)
xor
mov
add
addl
and
adcl
enter
(bad)
arpl
and
andl
enter
adc
addl
scas
xor
pop
(bad)
jl
addb
addl
test
adc
xchg
sbbl
and
or
in
dec
addl
and
dec
mov
addl
mov
addl
xchg
inc
test
lret
addl
out
fdivrs
lahf
addl
loope
push
addb
add
mov
addl
add
arpl
add
add
cmp
mov
addl
addr16
cwtl
mov
mov
addb
mov
stos
lods
xchg
or
and
addb
and
add
lea
test
push
addl
jle
(bad)
sahf
cmpb
addl
cmp
and
addb
test
adc
add
addl
int3
loope
popl
addl
mov
addl
sbb
cmp
cmp
xchg
adc
add
and
adc
nop

out
sub
addl
xchg
add
andb
addl
(bad)
mov
xor
mov
addl
xor
addl
or
addb
addl
test
addb
and
nop

mov
inc
pop
adc
addl
or
push
cmp
add
inc
insl
leave
mov
push
addb
add
out
outsl
inc
push
inc
dec
jnp
cmc
(bad)
cmpl
andl
mov
push
jmp
nop

addl
addl
outsl
push
fidivl
sbb
fildl
addl
mov
addl
in
faddl
mov
add
xor
jle
mov
add
addb
add
aas
xchg
jge
pop
popa
movsb
inc
pop
add
xorb
les
test
jae
and
addl
jle
xchg
add
addb
cmp
jne
addl
addb
inc
fists
in
orl
sti
addl
adc
fildll
addl
add
and
sbb
add
addl
cltd
jns
roll
add
sub
adc
cmpsb
addl
jp
xchg
fs
add
add
jl
fnsave
and
addl
jnp
mov
addl
stos
inc
fsubrp
fistps
addl
scas
mov
xchg
addb
and
and
sbbl
sbb
cmp
addb
adc
jne
jnp
lea
imul
and
addl
imul
andl
mov
xlat
lods
aas
shrl
addl
mov
addl
movsb
cmc
mov
addl
mov
addl
push
iret
adc
nop

lret
addl
xor
mov
sub
addl
pop
je
cld
pop
fcmovne
addb
add
or
movsl
je
addl
bound
repz
add
lods
sbb
sbb
add
add
addl
inc
add
addb
jl
out
jmp
addb
and
add
scas
lahf
cli
rorb
pop
setbe
addl
fmull
addl
rcrb
add
and
addb
mov
push
cmc
test
mov
addl
push
loop
xchg
mov
mov
addl
outsl
inc
mov
add
xor
xor
and
dec
and
daa
addl
std
mov
addl
shlb
mov
add
subl
andb
addl
xor
add
jl
aad
push
addb
addl
mov
addb
push
push
pop
xor
ss
addl
addl
jle
addl
push
lea
xor
addl
push
into
jae
leave
sub
ret
ret
and
andb
push
cld
cmp
mov
add
sbb
mov
andl
add
fnstcw
std
popf
sbb
mov
addl
stos
jle
orb
add
cmpsb
shlb
add
addb
add
(bad)
out
inc
ljmp
addl
mov
sbb
(bad)
and
addl
or
mov
addl
nop

movsl
je
test
addl
addb
pop
clc
cli
mov
addl
cld
test
push
mov
addb
and
pop
notl
addl
mov
mov
jge
orl
addb
sbb
addl
movsb
and
addl
andl
sub
cmp
andl
mov
inc
add
add
orl
addl
addl
orb
outsl
lock
and
addl
push
addb
addl
shl
out
push
addl
int
add
and
jo
leave
push
test
push
mov
and
push
mov
sub
and
push
sub
mov
addl
mov
addl
addl
adcl
mov
addl
addl
fs
add
add
inc
and
add
adc
mov
inc
add
addl
(bad)
jle
add
stos
icebp
push
cwtl
and
int3
jg
add
add
cmpsb
push
adc
addb
out
push
outsb
dec
int3
jp
add
push
addl
ss
jae
add
subl
add
mov
pop
add
addl
sbb
addl
addb
xorl
test
addl
mov
mov
stc
adc
addl
lds
push
addb
sbb
addl
addb
xchg
js
pop
cwtl
addl
int
jae
inc
push
lea
addb
addl
addl
andl
scas
or
addl
addl
daa
(bad)
xchg
addl
addb
cmpsb
mov
jecxz
fbstp
cltd
push
add
add
sti
cli
jp
scas
mov
and
dec
aas
cmp
addb
addl
stos
jo
stos
addl
add
loopne
push
or
sbb
lcall
add
add
add
fistl
dec
inc
addl
inc
mov
mov
jmp
addb
add
jo
sbb
addl
out
lods
nop

dec
and
addl
addl
testb
addl
addb
ret
addb
cwtl
add
jae
lock
jns
rcll
add
and
orl
xorl
or
xchg
addl
add
nop

fldl
and
cmpl
adc
sub
addl
push
rcrb
cmpsl
mov
jmp
andb
addl
ret
(bad)
das
test
addb
addl
nop

addl
addl
addl
and
orl
xorl
andl
cmp
jne
jb
addb
subl
call
addl
cmp
jns
push
ds
addl
mov
stc
lea
and
mov
mov
mov
addl
mov
addl
call
addl
leave
orl
addl
cmc
lea
addl
sbb
push
or
addb
or
cmpl
and
addl
mov
subb
sub
addl
or
mov
leave
mov
addb
cmpl
push
cltd
and
addb
and
add
stos
push
gs
das
addl
out
cld
leave
or
mov
andl
andl
test
add
addl
fcompl
jge
xchg
or
addl
add
add
jne
mov
addl
sub
popa
addl
sbb
or
addb
cmp
(bad)
repz
(bad)
arpl
pop
sahf
addl
daa
sbb
mov
adc
addl
jp
in
add
ret
addl
addb
adcl
int3
addl
or
or
into
ret
addl
or
xor
pop
or
push
les
addl
or
add
sbbb
push
dec
push
xchg
pop
ret
add
addl
addb
add
fiaddl
sbb
addl
push
jns
addl
addl
test
int
andl
add
test
fsubl
addl
movsl
dec
test
daa
lahf
dec
addl
xor
addb
add
stos
cli
jp
cmpsb
addl
sbbl
sahf
and
addl
pop
repnz
mov
addl
sub
addl
fs
shl
cmp
addb
out
or
addl
add
and
clc
cmp
mov
mov
addl
insb
testl
addl
add
sbb
mov
test
addl
addb
mov
fnsave
xchg
andb
addl
lds
jne
call
addl
int
mov
xor
add
addl
mov
and
addl
xchg
mov
and
addl
lcall
and
and
in
cs
addb
addl
cmp
add
addl
jl
mov
addl
and
jb
in
in
into
mov
addl
mov
addl
mov
sbb
addl
in
les
addb
pop
and
popl
addl
mov
stc
or
add
dec
rcrb
pop
add
add
xchg
dec
sbb
mov
add
addl
aam
addl
cmpsb
cwtl
int
add
add
or
or
pop
ja
xchg
dec
addl
dec
test
addb
andl
decb
and
addb
adc
int
das
insb
add
addl
pop
mov
addl
addl
xchg
addb
jnp
adc
add
lret
insl
xchg
addl
sub
inc
movsb
pop
or
addl
(bad)
movsb
push
test
lods
(bad)
push
dec
addl
push
repz
or
addl
addb
and
mov
addl
dec
in
fisttps
int
addb
addl
sarb
addl
addb
add
icebp
cmpsb
mov
addl
addb
xor
and
add
addl
jae
fs
sbbb
andl
nop

enter
cld
and
sbb
out
addl
addl
hlt
adc
test
scas
addl
add
stos
push
xchg
orl
addl
test
stos
(bad)
pop
and
addl
and
mov
lcall
add
cwtl
stos
lahf
cwtl
addl
andl
addl
sub
addl
push
add
addl
addb
mov
and
addl
xchg
addl
in
and
push
pop
fildl
mov
addl
xchg
pop
sub
lea
addl
add
mov
fcmovnu
addl
pop
adc
rolb
addl
pop
mov
or
andl
call
add
xorl
pop
lahf
add
addl
addl
cs
iret
int
andb
and
and
addl
daa
inc
test
movsl
or
addl
addb
clc
test
mov
addb
addr16
addb
addl
add
fidivl
sub
addl
xchg
jge
movsb
addl
and
shll
aaa
jnp
add
addl
sub
addl
addl
addl
sahf
nop

inc
xchg
hlt
xchg
addl
outsb
rcrl
jp
addl
mov
mov
dec
add
add
pushf
mov
stc
xor
addl
sbb
cmp
fdivl
addl
lcall
jne
xchg
sbb
add
add
(bad)
ret
addl
sub
insl
lcall
and
push
adc
in
test
cmp
and
addb
out
into
jge
sbb
mov
addl
test
mov
fistl
adc
addl
mov
addl
addl
sub
xchg
jnp
mov
addl
cwtl
or
addl
lods
sbbb
xor
add
addl
orl
sbb
addl
xchg
std
enter
jg
addb
addl
xchg
lcall
addl
test
cld
lcall
add
orb
add
xchg
aad
sub
addl
addb
add
mov
add
addl
add
push
mov
addb
in
addl
addl
aad
pop
cmc
addl
add
cld
sbb
pop
add
addl
jae
sbb
addl
outsb
ror
scas
cmpsb
orb
and
orb
add
jno
fwait

(bad)
in
notb
clc
jl
addl
add
scas
push
dec
and
addl
addl
movsl
int3
dec
jnp
xor
addl
addb
mov
scas
daa
addl
or
xor
mov
addb
and
ljmp
addl
adc
repnz
mov
fwait

addl
add
cmpsb
adc
add
push
push
cmpsb
or
addl
mov
andb
addl
out
dec
addb
addl
adc
nop

fdivl
addl
bound
nop

sbb
push
mov
and
addl
mov
call
cmp
and
addl
popf
orb
sbbl
subl
outsb
mov
cli
addb
addl
xor
mov
xor
addl
(bad)
jno
dec
lahf
std
pop
pop
addl
and
les
sub
dec
adc
xorb
orl
add
in
pop
nop

addl
or
cmp
addl
push
cmp
stc
shlb
addl
mov
sub
sub
mov
rcl
addb
andl
add
jle
divb
inc
jne
test
addl
or
faddl
add
mov
addb
in
je
and
addb
and
add
jb
adc
mov
test
addb
cwtl
jmp
sbb
sbb
addl
and
and
pop
fiadds
or
addl
(bad)
jecxz
(bad)
cld
xor
addl
add
insb
xchg
mov
addl
inc
test
addb
stc
addl
and
ret
sbb
addl
jne
outsb
sub
addl
mov
test
addl
pop
lock
insl
adc
addl
pop
cmc
add
adc
add
jge
and
addl
cmp
out
jl
addl
addl
and
addl
sbb
xor
addb
add
mov
inc
sub
addl
push
aad
cmpsb
push
dec
addl
addl
or
and
fdivp
xchg
add
sbb
sahf
testl
(bad)
ficoms
subl
add
sbb
test
pop
(bad)
add
addb
add
gs
imul
addl
js
fs
addl
sub
addl
addl
hlt
fucomi
xchg
inc
addl
addb
mov
addl
inc
cmpb
fwait

addl
sbb
addl
outsb
and
outsl
stos
arpl
xchg
addl
add
shl
sbb
addl
andl
mov
in
add
addl
xor
push
call
addl
lret
xor
add
orl
incb
addb
cwtl
test
and
cmp
jge
xchg
addl
addb
sbb
addb
cmp
dec
lods
xchg
stos
addb
addl
call
cld
dec
leave
add
addl
roll
andl
pop
or
addl
mov
addl
addl
sbbl
pop
cmpsl
cli
xchg
add
addb
hlt
cmpsb
lcall
addl
and
ja
subb
lds
add
add
(bad)
aas
add
add
imul
add
addl
xchg
(bad)
fnstenv
add
stc
xchg
or
jne
add
add
leave
mov
addl
sub
xchg
fadd
mov
addb
andl
mov
les
add
cmpl
add
movsb
mov
cmpsb
and
jmp
addl
xchg
dec
pop
addl
sbbl
aad
sbb
addb
jge
lea
mov
pop
addl
test
test
jle
addb
sbbl
jnp
les
addl
addb
inc
push
stos
repnz
addl
test
addb
addl
addl
orl
push
xor
andb
addl
addl
(bad)
addr16
push
iret
or
addl
addb
outsb
add
push
inc
stc
addb
add
xorb
(bad)
and
andb
aad
stos
sbb
xchg
addl
pop
or
pop
lcall
add
int
xchg
in
addl
stos
cmpl
add
repz
test
pop
repnz
addb
add
iret
stos
push
push
mov
ficoms
addb
call
faddp
mov
test
fsubr
and
addl
mov
addl
test
popf
pop
pushf
int3
addl
addb
xor
addl
push
and
lock
fstpt
inc
add
addl
sbb
aad
sbb
addl
cmpsb
addl
(bad)
stos
clc
xchg
movsb
shlb
addl
addb
mov
sti
iret
jge
xor
inc
andb
addl
sbb
fbstp
cmp
addl
xor
addl
addl
in
push
mov
andb
and
and
addl
pop
scas
stos
std
add
and
push
ret
test
cmp
andl
fiadds
cmp
shlb
addl
popa
call
add
addl
addl
and
mov
leave
fldl
xorb
popa
fistps
addl
xorl
addl
or
addl
test
addl
add
sbb
add
add
add
mov
test
addl
xchg
inc
sub
mov
addb
incl
xor
and
addb
and
add
and
adc
push
addl
ds
sbb
addl
jl
sbb
addb
or
add
addl
addl
cmpl
add
addl
fprem1
addb
addl
cwtl
orb
addl
and
and
stos
and
andb
addl
test
add
andl
addl
aad
test
addl
inc
adc
in
movsl
mov
addl
subl
mov
cmc
jb
addb
add
jb
lret
jle
or
addl
addb
imul
addb
add
divb
add
lea
or
and
andb
movsl
(bad)
out
movsb
addl
addl
jb
out
addl
add
sbb
cli
out
addl
sub
and
mov
addl
adc
add
addb
add
lahf
pop
daa
addl
subl
addb
inc
adc
addl
addb
movsb
sbbb
xor
movl
das
clc
popa
int3
enter
mov
addb
xor
inc
insl
addl
push
xlat
jbe
or
push
add
addl
sub
jae
addb
and
test
pop
jge
addb
andl
addl
jne
repnz
addl
enter
out
and
addl
mov
sbb
addl
sarb
add
addl
mov
and
xor
push
sub
fldl
addl
nop

or
xlat
cmp
andl
mov
pop
jl
addb
addl
sti
dec
ds
add
addl
addl
and
adc
adc
mov
addl
or
addl
and
stc
int3
les
mov
addl
or
decb
jns
addl
add
addl
jge
bound
mov
mov
and
addl
sbbl
addl
xorb
cmc
mov
add
repz
call
add
cmpsb
xor
mov
addl
mov
addb
andl
addb
add
andl
xlat
add
addl
mov
sub
add
hlt
adc
cltd
addl
xor
in
mov
sbb
cmpsl
test
and
and
jp
addl
mov
lds
addl
mov
or
addb
or
xchg
push
js
mov
sbb
addl
sbb
cmpsl
add
add
outsl
xor
gs
testb
addb
inc
cmc
jns
repnz
testb
add
add
jo
test
addl
xor
pop
and
add
fadds
addl
xlat
sub
hlt
cld
jle
addl
addl
or
inc
mov
add
mov
addl
scas
out
std
out
and
add
xor
les
cltd
mov
add
addl
loope
or
addl
addl
and
addl
addl
sbb
add
and
addb
jbe
scas
(bad)
outsb
addl
pop
int
repnz
cs
out
jle
add
addl
addl
loopne
fisttps
push
dec
addl
xlat
mov
xor
mov
addl
iret
icebp
mov
andl
and
addl
or
mov
das
addl
addl
mov
mov
mov
mov
and
xor
mov
push
sbb
addl
addb
loopne
cmpsl
aaa
xchg
test
andl
stc
imul
add
and
jge
pop
or
lds
and
shlb
inc
addl
and
mov
or
mov
mov
mov
addl
jle
es
andb
addl
sbb
mov
or
addl
jbe
stos
cwtl
sbb
addb
add
rolb
add
dec
ficomps
add
add
cmp
popa
xor
adc
outsb
add
addl
lret
and
addb
sbb
test
add
add
and
(bad)
mov
addb
mov
cmpl
addl
cmc
mov
add
adcl
add
addl
push
addl
adc
or
addb
(bad)
adc
addb
scas
enter
mov
dec
in
dec
adc
pop
addl
sbb
cmp
and
addl
iret
adc
and
addl
cmpsb
addl
xor
adc
addb
addl
out
mov
addl
aam
and
jle
addl
addl
dec
(bad)
movb
addl
addb
add
xor
add
andl
into
enter
mov
addl
addl
mov
jg
and
addb
add
cld
jo
jmp
aaa
addl
lret
add
imul
xchg
sahf
addl
nop

stos
sbbl
add
addl
addl
sbbl
pop
cmc
adcb
and
addl
addl
fucomp
inc
daa
filds
and
test
mov
jp
addb
mov
jecxz
test
(bad)
pop
addl
cmc
imul
inc
lock
addl
fisubrl
addl
cmp
outsl
out
mov
in
daa
addl
mov
add
add
adcb
addl
xor
cmp
addl
push
test
addl
cwtl
fidivrs
dec
mov
and
addl
int
loopne
cmpsl
sbb
inc
addl
addb
into
jnp
stos
mov
addl
mov
addl
je
fs
addl
add
aaa
decb
mov
addl
and
mov
addl
mov
addl
test
addl
out
mov
inc
push
mov
addl
xor
addl
cmc
cli
(bad)
xchg
inc
mov
addb
addl
into
or
popl
and
addl
fneni(8087
rorb
dec
loop
xorb
add
lods
or
mov
xchg
mov
addl
inc
dec
cmpsb
cld
shrl
mov
addb
and
add
mov
addl
mov
sub
les
mov
addl
mov
addl
add
addl
stc
xchg
test
addb
addl
and
addl
add
sbb
leave
adc
xor
and
movsl
jb
ljmp
addb
dec
ja
and
and
addl
addl
addb
inc
stc
xorb
call
addl
lahf
jle
scas
jb
inc
addb
addl
jns
addl
adcl
std
push
rclb
add
addb
ja
addl
adc
(bad)
add
add
add
stos
and
andl
fdivrs
mov
mov
leave
addl
addl
mov
mov
and
test
add
arpl
addl
jle
jbe
lods
ret
das
test
addl
xorl
add
addl
addl
sbbl
hlt
leave
repz
and
addl
addb
add
xchg
and
inc
lock
xchg
(bad)
out
addl
or
addl
add
and
push
add
addl
addl
add
loopne
int3
in
(bad)
addl
aad
or
in
add
add
xchg
leave
jb
jb
sub
and
addl
les
addl
je
js
addl
addl
cli
mov
mov
andb
and
and
adcl
cmp
push
out
mov
mov
and
addl
movsl
sub
sti
addl
add
test
add
and
dec
mov
lock
add
addl
xchg
adc
lds
or
addl
fwait

lret
addb
mov
addl
mov
addl
addl
xchg
add
aam
adc
addl
movsl
lret
or
out
mov
addl
hlt
repz
add
mov
dec
sbb
xchg
idiv
hlt
movb
add
bound
addl
call
add
addl
test
js
inc
mov
addb
fsts
mov
and
addb
and
add
jecxz
cmp
jmp
or
add
jae
jns
push
int
addb
andl
loope
add
xorl
addb
addl
xchg
jge
mov
mov
add
in
push
fwait

cltd
xchg
addb
out
cmc
sbb
xor
cmp
addb
lahf
(bad)
fucomi
pop
inc
addl
ret
and
ret
addl
mov
jne
jle
addl
addb
mov
addl
addl
addl
sbb
mov
push
lea
addl
addl
aam
shl
addb
add
or
add
popf
rorl
outsl
addb
add
(bad)
jp
testl
xor
and
jmp
push
adc
pop
addl
addl
lea
popa
mov
stc
or
andl
add
fmull
add
addl
mov
push
addl
rcrb
xor
mov
add
addl
jmp
addl
sbb
fstps
(bad)
call
addl
(bad)
cmp
add
addb
fs
repz
addl
addb
movsb
or
or
addl
sbb
rolb
add
or
stc
int
adc
out
add
addl
or
addl
inc
jle
addl
xor
add
add
stos
sub
dec
cmpsb
sbb
push
andb
addl
xor
addl
inc
xchg
test
push
incb
addl
mov
imul
and
and
sbbl
lea
(bad)
lret
mov
addl
addb
or
addl
xor
cmp
addl
sbb
add
addl
jne
xlat
xor
andb
and
dec
imul
ljmp
xorb
in
jecxz
addl
orl
adc
addb
addb
addl
push
insb
mov
fsub
addb
subl
sub
addb
and
addl
dec
cmc
pop
dec
add
addl
xor
mov
mov
addb
cmp
xchg
cmpsl
and
addb
and
add
jmp
test
add
mov
addl
and
sbb
test
das
sub
and
addb
sub
cltd
and
add
popa
out
xchg
call
addl
(bad)
and
jno
mov
addb
xchg
cli
roll
add
and
fimuls
sti
addl
rcll
addl
stos
addb
mov
int
imul
addb
inc
jb
adcl
addl
and
mov
shr
gs
addb
addl
or
addb
popa
clc
roll
addl
addb
fdivl
addl
addb
cld
cwtl
cmp
insl
sahf
addb
add
lcall
andl
ljmp
lret
sbb
mov
add
addb
addl
xchg
sub
addb
add
mov
add
mov
addl
mov
dec
orl
addl
push
repz
add
addb
add
sbb
pop
xchg
lea
inc
sub
addl
loopne
clc
sub
addl
es
dec
inc
hlt
mov
addl
fdivl
mov
cld
aaa
addl
addb
fadds
addl
cmp
mov
add
and
mov
xchg
xchg
test
addl
mov
mov
addl
add
xorl
addl
andb
add
add
jns
sbb
(bad)
rolb
andl
cmpsl
shlb
add
sbbl
int
addl
addl
inc
std
dec
addl
and
and
adc
imul
addl
addb
(bad)
cwtl
mov
adc
addl
das
xor
addl
add
addl
inc
xchg
loope
int3
sbb
addl
and
popf
aad
clc
pop
mov
test
mov
addl
addl
sbb
and
addl
mov
addl
cmc
and
addl
push
xchg
mov
and
addl
imul
push
inc
sarb
addl
subb
jae
xor
inc
mov
addb
or
jg
lds
add
add
test
addl
dec
adc
addb
andl
mov
and
fsubrl
add
sbbl
or
addl
add
xor
lcall
addl
sbbl
les
addb
jp
pop
or
and
fs
addl
addr16
sahf
pop
cltd
adc
push
andb
addl
pop
addl
addb
adc
or
popa
addl
cmp
mov
push
in
aam
addl
orb
test
jno
or
hlt
movsl
addb
addl
sub
addb
add
scas
xor
nop

mov
addl
or
add
add
mov
and
andb
enter
jb
clc
pop
addl
addl
xchg
icebp
mov
sbbl
add
rcr
bound
addl
sbb
mov
addl
out
stos
dec
xchg
lcall
add
mov
addb
lea
faddl
insl
rorb
addl
int3
roll
addl
and
aad
shlb
sti
arpl
and
testb
addl
ret
mov
add
mov
insl
add
addl
fidivrl
mov
fadds
addb
sbbl
inc
add
stos
addl
leave
mov
add
add
pcmpgtb
andl
movsl
jns
je
add
orl
dec
mov
addl
mov
andb
and
and
addl
mov
addb
andl
ja
lahf
mov
outsl
addl
add
xor
addl
add
jmp
addl
xor
stos
push
lcall
andb
and
jmp
add
addl
ds
or
addl
xorl
cmpl
addl
adcb
addl
addb
sbbl
add
add
sub
icebp
cmc
inc
subl
addl
cmp
fnsave
addl
pop
test
fcomps
mov
and
decl
add
xchg
sbb
mov
addl
jbe
pop
leave
addb
andl
out
add
adcl
add
addl
lret
mov
addl
cmp
fstl
addb
inc
addl
add
and
cld
(bad)

inc
addl
lods
icebp
mov
addb
orl
filds
addl
addl
fdivr
and
sub
outsl
addb
addl
addl
addl
not
adcl
add
xorb
fwait

dec
outsl
addl
addb
mov
mov
(bad)
pusha
fwait

das
cwtl
faddl
addl
adc
frstor
addl
pushf
sub
orb
addl
addl
or
adc
addl
add
int
paddsw
out
addl
js
and
addl
dec
aas
sub
pop
add
addb
add
inc
lea
or
addl
fwait

repz
sahf
or
addl
xchg
rcr
sbbl
sbbl
addl
addb
mov
addl
pop
mov
cmp
addl
(bad)
cmp
ds
and
mov
addl
or
addb
aaa
mov
pop
lret
addl
sub
add
addl
push
cwtl
shlb
cwtl
andb
addl
push
inc
dec
addb
addl
cli
sub
mov
add
addl
es
lods
mov
mov
and
subl
mov
xchg
and
shlb
addl
add
adc
add
and
incl
mov
arpl
add
addl
sahf
adc
and
mov
dec
mov
addl
mov
addl
adc
addl
orl
addl
and
addl
mov
in
sub
test
add
jmp
and
addl
(bad)
(bad)
cmpsl
push
ljmp
add
addl
(bad)
lods
sub
mov
ljmp
add
mov
fwait

inc
xchg
ljmp
es
and
addb
and
add
stc
roll
and
addl
mov
int
stc
clc
mov
addl
lds
std
mov
addb
xchg
pop
adc
xchg
mov
addl
add
pop
pushf
mov
addl
addl
orl
push
xchg
mov
addl
mov
stc
pop
(bad)
cmp
xor
xor
mov
addl
cmc
fdivr
dec
and
addl
test
enter
addb
vpunpcklqdq
addl
fimull
pop
xchg
cmp
addl
sub
push
adc
addb
or
jns
or
addb
add
jno
je
inc
adc
addl
addb
es
xchg
stc
mov
adc
add
addl
mov
mov
and
andb
in
cmp
mov
add
addb
addl
mov
addl
in
fwait

jbe
arpl
addl
addb
addl
jb
nop

add
addb
add
or
inc
lcall
addl
stc
subl
addl
xchg
and
(bad)
nop

mov
addl
andl
addb
cmpsb
mul
inc
addl
roll
sahf
(bad)
jecxz
adc
aam
addl
add
and
(bad)
push
adc
hlt
jg
lea
mov
addl
cwtl
hlt
or
xchg
andb
addb
mov
adc
and
mov
and
pop
sahf
add
add
(bad)
mov
fsubl
addl
mov
loope
or
addl
addl
xor
addb
push
inc
jp
ss
and
subl
xchg
fsubrl
andl
lcall
mov
addl
add
int
push
mov
or
addb
addl
inc
cmpsb
mov
addl
cmpsl
int
addl
and
jns
lods
push
mov
xorb
mov
inc
add
addl
addl
addl
mov
addl
cli
mov
addl
or
mov
mov
add
cmp
addl
orb
xchg
sbb
sahf
int
mov
addb
mov
add
add
fsubrl
sub
add
or
xor
leave
sub
and
dec
mov
pusha
(bad)
push
popa
jge
mov
addb
in
les
loop
movsb
leave
js
add
addl
shl
addl
xchg
or
roll
addl
mov
outsl
aad
push
test
addb
mov
incl
addl
lock
rclb
addl
incl
(bad)
rcr
addl
addb
and
addl
sbb
jmp
adc
addl
push
xor
adc
addl
out
nop

iret
fbstp
mov
addl
and
imul
sbb
fadd
int
addl
addb
sbb
mov
addb
add
int3
fwait

jmp
mov
addl
daa
jecxz
inc
iret
(bad)
xchg
shrb
add
push
test
adc
andl
add
sbb
in
fldl
addl
movsl
addl
addl
and
std
flds
add
add
sbb
or
xchg
jl
sahf
addl
cmpl
addl
inc
das
jle
xor
mov
addl
pop
sub
add
addl
addl
into
aas
jo
cwtl
popf
xor
addb
and
into
jb
cld
fwait

lds
add
addl
fwait

jle
addl
add
sbb
addb
andl
cmpl
sahf
adc
loope
arpl
addl
jbe
pop
pop
dec
scas
push
hlt
andb
addl
mov
or
sti
fnstsw
addl
or
mov
addl
addl
cld
call
pop
xchg
xchg
mov
and
sbbl
addl
addb
addl
add
filds
addl
daa
sbb
and
push
inc
adc
xchg
addl
and
pushl
ror
pop
mov
addl
mov
addl
mov
decl
andb
addl
in
sub
addb
mov
cmpsl
inc
stc
(bad)
mov
addl
pop
jo
insl
mov
mov
addb
adc
movsl
sub
mov
add
add
aam
popf
notl
mov
dec
add
addl
imul
add
sub
pop
add
addb
and
add
cltd
stc
or
fdivrl
add
lods
inc
das
aad
nop

inc
cmp
addb
andl
mov
and
addb
jns
imul
addl
adc
cmp
addl
addb
xchg
sahf
movsl
jmp
mov
add
addl
push
sbb
aam
addl
mov
popa
mov
addl
je
sbbl
sbb
mov
addb
stc
push
andb
roll
addl
jmp
dec
dec
or
aas
addb
addl
iret
rcrb
addb
aam
ss
(bad)

addl
addl
arpl
(bad)
das
jmp
addl
jnp
hlt
xchg
movsb
pop
lahf
addb
add
les
mov
addl
pop
cwtl
out
sub
add
addb
addl
sub
addb
add
xchg
(bad)
mov
addb
add
mov
lret
addl
push
cmp
ljmp
cmc
int
add
addb
add
mov
rcrb
pop
ret
addl
and
fs
addl
jmp
jmp
es
mov
addl
cli
mov
addl
addb
pushf
test
shl
ds
shll
addl
bound
adc
addb
and
mov
inc
add
addl
out
dec
pop
test
addb
add
xorl
addb
addl
xchg
iret
pop
insl
test
addl
das
leave
andb
addl
jle
(bad)
repnz
add
addl
add
addl
je
mov
and
and
addl
sbb
addb
orl
fists
jecxz
addl
add
in
add
and
inc
mov
andb
add
add
aaa
sbb
addl
and
mov
or
add
addl
inc
adcb
and
fwait

(bad)
cwtl
push
daa
cmp
addl
daa
dec
test
pop
mov
jb
addl
xor
jmp
addl
mov
inc
push
mov
add
sub
dec
add
addl
dec
jno
repnz
addl
and
ds
inc
les
add
add
fwait

cld
repnz
nop

pop
dec
inc
mov
push
outsl
pop
addb
andl
jae
add
cmpl
add
addl
fidivs
mov
add
mov
fucomi
addl
adcl
addl
out
in
add
jge
addl
repnz
and
sub
addb
xorl
mov
addl
addl
lods
pop
mov
and
push
add
addl
rolb
out
addl
subl
roll
add
addb
aam
add
addb
mov
ja
pop
cli
addb
add
rolb
xchg
loop
andl
andb
psubsb
sub
add
test
inc
loopne
fisubs
addl
int
call
addl
popl
addl
push
orb
aas
lea
add
add
mov
sub
addb
xchg
xchg
or
jne
out
and
addl
mov
add
addl
addb
dec
push
addl
addb
jbe
idivl
(bad)
mov
addl
(bad)
dec
mov
addl
cmc
adc
mov
push
stos
add
addl
ret
decb
into
out
addl
add
sbb
add
outsl
sahf
or
nop

add
add
and
xchg
jne
faddl
andl
stos
loope
sbb
les
addl
cwtl
mov
addb
jbe
mov
xchg
cmc
movsl
pop
nop

mov
and
or
dec
cld
dec
jl
or
addb
andl
adc
int
addb
cmpl
adc
addb
addl
and
xlat
add
and
lods
adcl
addl
mov
addl
mov
addl
xchg
jo
addl
out
in
jae
addl
lret
xchg
sahf
adc
addl
test
stos
int3
addb
cmpl
fwait

rorl
and
addl
add
popl
addl
add
inc
xlat
int
adc
stos
stos
add
addl
add
adc
add
mov
addb
xchg
(bad)
dec
xchg
or
addl
test
sub
inc
dec
into
and
addb
jmp
xchg
xchg
xlat
out
push
pop
pop
add
addl
or
insl
addl
adcl
jle
addl
sub
jge
push
push
addl
pop
je
addl
pusha
add
pop
addl
sub
or
and
addl
addb
pop
test
cmp
addl
mov
dec
in
pop
addb
addl
xchg
mov
addl
and
addl
stc
ror
in
into
cmpsb
and
add
dec
movsl
decl
icebp
mov
add
addl
pop
outsb
and
andb
add
pop
mov
mov
add
add
push
andl
add
jbe
ss
imul
add
add
sub
sbb
jge
addl
aas
(bad)
adc
cmp
add
addb
add
shr
adc
addl
adc
stos
fwait

shrl
addl
jo
mov
push
cmp
sub
addb
sahf
push
hlt
mov
andl
mov
jo
filds
addl
inc
into
test
add
and
shlb
addb
lods
and
clc
addl
add
add
mov
add
or
in
xor
mov
xor
addl
subb
call
addl
adc
aad
addb
addl
orb
xchg
in
addl
addl
and
mov
and
addl
addb
sbb
nop

int3
or
les
addl
daa
xor
addl
cwtl
mov
xchg
test
mov
addl
(bad)
leave
std
sbb
push
jmp
andb
and
cmp
mov
addl
mov
addl
cwtl
cmpsl
addl
sbbl
addl
sub
mov
mov
addl
add
mov
dec
addb
cmpl
and
addl
xor
push
js
mov
addl
orb
xchg
xchg
mov
addb
mov
fildl
add
div
cli
mov
xor
add
int
xor
repnz
pop
lret
addb
andl
movaps
addb
scas
ljmp
mov
addb
addl
inc
pop
cltd
stc
addl
sbbl
add
or
into
xchg
loopne
cmp
addl
and
mov
addb
mov
shrl
addb
adcl
mov
addl
addb
adc
sub
andb
addl
jb
addl
addb
les
icebp
addl
and
sarl
out
pop
mov
pop
incl
addl
orb
repnz
addl
addb
mov
mov
xor
addb
add
inc
aam
adc
and
mov
xor
add
addb
addl
loop
loope
les
jbe
dec
addl
add
jo
mov
addl
mov
lods
addl
scas
(bad)
sub
add
addb
add
push
xchg
addb
add
lret
xchg
sahf
and
addl
enter
addl
adc
adc
jmp
addl
addb
js
hlt
fstl
addl
adcb
jmp
addl
xchg
mov
addl
xor
and
addb
aas
xchg
addb
addl
cmpl
add
mov
mov
and
addl
push
stc
cmpsl
addb
addl
cwtl
inc
mov
(bad)
roll
addb
mov
and
addl
xchg
sub
sbb
and
addl
sbb
xchg
into
push
addl
add
adcl
add
and
out
adc
addl
shrl
mov
xor
addl
es
mov
addl
mov
addl
addl
int3
fdivr
add
(bad)
addl
cwtl
je
mov
mov
addb
add
adc
jl
frstor
addl
in
aas
xor
add
je
dec
int
addl
addb
xlat
fdivl
addl
sbbb
and
addb
and
add
fcomip
ror
addl
inc
mov
sub
addl
fiadds
stc
mov
fcompl
(bad)
and
addb
jno
or
test
addl
add
inc
mov
aad
into
addl
xorl
addb
mov
movsl
inc
adcb
add
and
adcb
sti
(bad)
fmull
push
addl
cwtl
jns
add
xor
lods
insl
add
addb
adcl
fldl
lods
addl
addb
pop
stos
andl
addl
sub
addb
addl
addl
and
(bad)
loop
mov
addb
add
jmp
addl
addb
add
addb
add
aam
cmp
dec
iret
mov
and
andl
js
(bad)
jmp
pop
add
add
inc
shrl
aam
lds
add
cwtl
imul
add
add
test
mov
addl
cwtl
ror
mov
add
addl
inc
icebp
mov
add
xorb
xchg
adc
addl
jge
jge
add
mov
mov
addl
lods
inc
add
push
mov
and
cmp
sahf
and
addb
xchg
mov
jo
orb
addl
add
and
sbb
mov
jb
mov
addl
nop

loope
enter
push
addl
add
lahf
xchg
int3
mov
jmp
adc
and
addb
andl
orl
lods
pop
mov
imul
mov
adcl
andl
dec
outsl
or
add
andl
lods
lds
fldl
addb
mov
add
iret
fisubrl
andb
and
and
or
push
mov
rcr
xchg
push
push
das
hlt
out
addb
addl
add
orb
addl
xor
mov
addb
addl
dec
fstpl
mov
addl
mov
addl
and
das
gs
leave
xchg
jl,pt
andl
mov
addl
xchg
sahf
popf
pushf
stos
addl
adc
in
and
addb
cmp
test
addl
mov
addl
pop
daa
mov
add
add
nop

fdivr
(bad)
push
add
addl
popf
scas
jb
addl
fldenv
data16
jge
and
addb
and
add
cmp
das
jle
addl
mov
loope
jne
addl
and
dec
sar
andb
addb
xrelease
pop
inc
sbbl
addb
addl
addl
cmpl
jne
lret
dec
sub
add
clc
xor
enter
stos
xchg
addl
xchg
mov
addl
icebp
test
and
addl
addl
addb
mov
lea
addl
loopne
and
addb
addl
xor
ds
addl
addl
xchg
jne
repnz
sub
dec
inc
add
addb
add
lods
jg
lcall
addl
add
add
inc
jb
in
aad
addl
jp
aam
push
push
push
addl
addl
mov
mov
faddl
add
and
std
movsl
adcb
out
addl
mov
mov
addl
xchg
repz
and
addl
popf
addb
addb
scas
add
movsb
xchg
and
addl
inc
xchg
addl
addb
pusha
cmc
(bad)
popl
and
pop
mov
jo
addl
sbb
(bad)
mov
add
cmpl
addl
push
ja
push
push
addl
add
addl
addl
mov
cmp
add
mov
add
imulb
loope
mov
xchg
andb
addl
sti
out
add
adcl
addl
addl
and
adcl
mov
lea
cmc
addl
addb
jecxz
addb
sbbl
lcall
addl
add
addl
(bad)
fidivrl
addl
mov
addl
mov
addl
and
in
stos
(bad)
xchg
cmpsl
addl
xor
fldt
addl
addl
jns
addb
sbbl
cmpsl
les
jnp
add
add
or
in
mov
add
adc
in
dec
mov
addb
jmp
repz
sbb
and
addb
and
add
les
addl
sbb
addl
int3
push
addl
sub
inc
mov
aas
xchg
stos
add
addl
addb
addl
jbe
inc
mov
addb
popa
jb
rcl
addb
movsb
orb
push
addl
mov
roll
and
addl
outsl
adc
addb
cli
xchg
(bad)
repz
movsl
stc
xor
addl
movb
and
addl
ds
(bad)
int
jp
icebp
addl
adcl
arpl
sub
mov
sahf
stc
testl
mov
rcrb
dec
lahf
arpl
hlt
push
addl
addb
mov
addl
add
addb
add
pop
or
andl
iret
outsb
mov
int3
fisttpl
test
mov
mov
add
addl
inc
addl
add
call
sbb
jge
addl
sub
addl
popf
lock
ret
movsb
rolb
add
addl
adcb
test
addl
add
and
addl
cmpsb
mov
addl
mov
add
addl
rolb
addl
idivl
xchg
xchg
mov
and
add
orl
cmpsb
jge
and
addl
lea
addl
add
push
stos
mov
add
add
push
fstpt
mov
addl
mov
sbb
popf
mov
jmp
addl
dec
adc
enter
fiadds
les
addl
dec
test
sahf
mov
addl
addl
cmpb
cli
(bad)
loope
mov
and
sbb
out
xchg
sub
addb
addl
sub
les
addl
xchg
cwtl
rorb
addl
sbb
andb
add
test
sbb
faddl
and
shr
push
cli
mov
addl
mov
addl
adc
mov
addl
jge
add
in
inc
(bad)
stc
addl
adc
cmc
es
push
cmp
addl
stc
std
les
and
rorb
add
add
movsl
mov
push
sahf
mov
addl
out
xchg
xor
addl
addb
xor
addl
nop

shlb
lods
mov
fldl
andl
outsl
rorb
addl
arpl
inc
add
addb
andl
xchg
mov
add
sbbl
mov
push
rcrb
addl
add
clc
stos
decl
gs
inc
cmp
addl
pop
fsubrl
addl
adc
add
and
scas
stos
addl
addr16
sar
loopne
fldcw
addb
andl
mov
add
orl
mov
addl
addl
sbbb
jnp
shl
mov
push
jmp
addl
xor
scas
popa
addb
add
mov
addl
addb
xchg
sbb
and
addb
add
clc
mov
adc
cmpb
andl
cmp
pop
fsubrl
daa
mov
addl
rclb
movsb
mov
and
addb
addb
and
mov
leave
dec
dec
and
addb
add
sub
in
addl
and
add
addl
iret
aad
cmpsb
pop
addl
xorl
fldl
and
addl
mov
addl
xchg
in
fmuls
movsb
cmpsb
xchg
addl
sbb
addl
sahf
pop
out
xor
add
adcl
jg
and
xchg
mov
addl
iret
popf
xorl
addb
(bad)
jge
mov
fldl
ljmp
addl
out
push
and
addl
jno
and
addl
addb
add
xor
addb
xchg
fistl
push
cld
mov
and
andl
rcll
add
and
addl
mov
(bad)
adc
addb
adc
addb
addl
add
addl
xor
test
mov
add
mov
mov
addl
mov
addl
push
addl
cmpl
stos
lret
addl
xchg
roll
mov
addb
add
loope
(bad)
mov
addb
addl
addl
and
andl
add
addl
mov
sbbb
outsb
and
mov
addb
mov
mov
mov
and
add
xchg
sahf
xchg
mov
addl
mov
inc
jmp
stos
adc
addl
and
nop

or
add
andl
jne
xchg
or
jb
add
addl
addl
and
and
add
fdivrl
xor
dec
ss
or
add
addl
addl
inc
mov
aad
addl
mov
xchg
sbb
sbb
addl
addb
lds
and
xchg
or
loope
and
addl
cltd
xor
andb
addl
orl
xor
addl
addl
cld
cmp
add
mov
addl
addb
add
jle
jle
mov
fadd
add
add
add
and
and
test
and
andb
hlt
movsb
negl
addl
addl
cwtl
mov
andl
add
je
(bad)
sahf
lcall
addl
fistpll
xor
pop
scas
mov
addl
add
addb
add
hlt
add
or
addl
rcr
cmp
addb
cltd
or
rcl
loope
mov
addl
sahf
hlt
adc
addl
add
out
jmp
addl
and
addl
add
and
adc
addl
mov
addl
jecxz
insl
jae
push
aaa
sahf
cmpsb
or
addl
mov
cmp
addl
std
andb
addl
ja
clc
xchg
or
add
addl
mov
add
addl
fildl
jo
loope
andb
and
and
and
fsin
push
and
das
xchg
and
clc
scas
sahf
in
sub
movb
addb
and
lahf
jmp
addl
adc
and
orb
addl
mov
addl
mov
addl
adc
addl
faddl
sahf
add
addl
nop

lret
and
testl
pop
push
test
mov
add
add
pushf
fldcw
sub
cmpsb
int3
add
add
(bad)
in
test
mov
addl
orb
xor
xchg
mov
add
xor
addb
and
add
(bad)
repnz
push
sub
jl
int3
addb
andl
push
sub
add
addl
addl
in
mov
popl
addl
addb
call
rcr
jge
pop
add
and
int3
int3
into
mov
dec
addl
mov
in
dec
fiadds
addb
sbbl
adc
addl
addb
sbbb
out
addl
shrl
test
addb
addl
addl
mov
addb
add
jae
addl
loop
imul
and
test
andb
ret
andl
pop
(bad)
or
fmull
test
adc
add
addb
addl
ret
xor
sbb
and
mov
mov
sub
and
addb
add
xchg
jge
addl
insl
and
cwtl
push
stos
xlat
pusha
add
addb
add
cltd
addb
xchg
addl
xorl
addl
movsl
fdivl
add
addb
lea
add
addl
addb
jecxz
addb
mov
fsubl
fucomp
vpaddb
add
addl
mov
scas
inc
cmpb
addl
addb
pop
faddl
inc
jp
push
in
addb
andl
and
xor
xor
add
mov
xorl
addl
inc
cmc
cli
ljmp
add
push
stos
dec
or
mov
addb
adc
xor
sbb
add
add
cmp
addl
addb
sahf
loope
inc
out
idivb
movsl
loope
sub
mov
in
and
add
call
popa
mov
call
mov
orl
mov
or
add
jnp
les
leave
cwtl
pop
lea
push
fdiv
mov
xchg
sbb
int
test
fistpl
push
or
or
mov
lea
movl
fucomi
lds
fwait

lret
sti
aam
dec
and
cmp
mov
xor
cmp
testl
sahf
add
xor
sub
pop
stos
xchg
call
sub
loopne
jb
and
jle
sahf
shrl
in
std
mov
hlt
mov
fs
aas
out
faddl
push
shlb
fwait

sbb
push
push
push
test
clc
lods
imul
add
aam
clc
les
mov
xor
aam
jo
sbb
push
adc
in
sbb
(bad)
leave
stc
stos
(bad)
jl
cli
xchg
add
fdivl
cmp
mov
mov
arpl
mov
jbe
pop
xchg
orl
test
cmp
mov
push
imul
mov
movsb
data16
popf
lcall
cmc
pop
mov
je
cmp
dec
(bad)
in
cld
mov
int
inc
push
add
cmp
(bad)
cltd
jge
jge
stos
jg
mov
mov
sub
jg
push
lcall
movsb
les
orl
inc
fimull
mov
cmpsl
mov
pop
jae
mov
mov
add
popa
stos
int3
push
cmpsb
(bad)
out
lea
inc
sub
divb
ja
xchg
(bad)
or
fimull
fwait

movsl
cmc
mov
push
sbb
push
sarl
dec
movsb
dec
andl
int
pushf
mov
call
mov
fld
push
lret
sarb
sbb
sahf
mov
push
movsl
adc
jp
xorb
mov
sub
sbb
fstps
inc
mov
or
dec
push
mov
test
jo
push
pop
(bad)
jmp
aas
out
inc
sbb
movsl
andl
pop
cwtl
mov
test
(bad)
rolb
pop
int
test
xor
lea
(bad)
repnz
outsb
mov
lea
jg
ror
rclb
fwait

push
out
xchg
addl
outsl
mov
mov
mov
in
and
leave
xchg
cmpb
std
mov
jl
scas
stos
push
ror
stos
movsl
jp
and
pop
pop
shl
mov
mov
fwait

mov
mov
cltd
andb
cmp
cmp
push
into
pop
je
xchg
cwtl
push
jp
mov
andl
ret
enter
jecxz
adc
mov
sbbl
addb
inc
cmp
mov
mov
sbbb
adc
xchg
push
cmp
cmp
xchg
nop

xchg
sahf
push
inc
xchg
testb
dec
pop
leave
in
add
lock
push
cs
add
lds
mov
cwtl
dec
fwait

repz
(bad)
pushf
enter
xchg
fwait

clc
ret
movsb
rorl
sahf
xchg
arpl
fwait

in
out
sub
cmp
movb
stos
mov
cwtl
sbb
pop
rorl
clc
xor
aas
sahf
sbb
sub
push
adc
mov
dec
pop
jp
loop
test
jo
and
mov
mov
xor
jb
sti
daa
shlb
popf
adc
addr16
stos
rcll
jne
data16
and
(bad)
lea
xor
mov
dec
jno
dec
lea
xchg
jmp
faddl
repz
jbe
jmp
stos
push
inc
call
inc
jl
(bad)
(bad)
mov
pop
or
call
mov
mov
cmc
stos
ljmp
dec
hlt
add
jbe
roll
sbb
xchg
ja
fbstp
das
mov
dec
outsb
addl
jnp
(bad)
dec
xor
mov
adc
lahf
mov
dec
(bad)
fwait

and
lds
lcall
repz
dec
ficoml
inc
nop

insl
push
xchg
lock
inc
pop
je
ror
rol
adcb
xor
xorl
shl
les
jne
dec
sbb
scas
stc
cwtl
mov
push
stos
mov
in
test
mov
push
ljmp
(bad)
in
leave
cmc
imul
test
popf
test
xchg
sbb
add
daa
mov
pop
fadds
iret
dec
fwait

ret
ljmp
dec
lea
loopw
push
mov
call
hlt
iret
mov
loope
lock
push
jl
popf
movb
or
mov
mov
lods
push
roll
xchg
aaa
hlt
ficompl
mov
daa
jmp
mov
lcall
loopne
mov
mov
mov
cmpl
cmp
jg
test
decl
jl
fwait

rcll
roll
jmp
repnz
jnp
mov
xchg
mov
jae
lahf
cwtl
mov
paddusb
pusha
je
jle
(bad)
jle
push
enter
mov
xor
push
cmp
dec
je
out
sub
int
cld
add
sahf
pop
jno
scas
aam
mov
and
push
fistpl
int
jmp
dec
jno
mov
(bad)
sahf
or
imul
aad
(bad)
popa
cltd
pop
mov
hlt
mov
lahf
pop
dec
jbe
mov
shlb
inc
xchg
mov
imul
out
sahf
std
pop
ds
in
leave
popa
ficomps
and
jns
add
xchg
ja
lahf
mov
subl
xor
mov
cli
push
and
insb
shl
inc
mov
(bad)
xrelease
repnz
mov
out
test
(bad)
pop
mov
mov
mov
push
mov
(bad)
iret
mov
mov
lret
cwtl
adc
xor
push
mov
add
ret
sarl
add
rorb
xor
cltd
je
int
inc
(bad)
outsb
decl
outsb
dec
(bad)
leave
(bad)
mov
xchg
loopne
cmc
sbb
xor
inc
cli
jle
lea
mov
test
aam
gs
cld
repz
push
subb
test
push
shrl
push
test
xorl
test
arpl
push
psrad
int
lcall
sbb
(bad)
lock
and
cmpl
jecxz
jecxz
out
movsl
sbb
movsb
xchg
dec
sbb
cs
jno
fadds
loope
fwait

pop
sub
addb
fs
xchg
xchg
lret
jp
test
dec
jge
jo
orb
roll
rcl
ficoml
ret
mov
idivb
jmp
inc
cmp
jo
rorl
insb
cltd
inc
call
stos
adcb
lods
xchg
stos
orb
mov
sub
mov
pusha
xchg
mov
add
pop
adc
stc
(bad)
shl
push
in
std
jp
pushf
xchg
ja
jb
push
loopne
ficompl
roll
cmp
movzwl
cmpsb
sub
and
jp
clc
sti
cs
mov
aam
fcoms
jmp
imul
xchg
shl
rcl
pop
add
xchg
int
leave
jmp
bound
sbbb
and
mulb
and
repnz
fwait

(bad)
aam
sub
test
(bad)
push
or
nop

sbb
andl
lods
cwtl
adc
(bad)
aam
hlt
mov
pop
xchg
sbb
cmp
xchg
add
cmp
add
add
(bad)
pop
dec
jle
mov
fdivl
sub
sbb
xchg
push
add
(bad)

enter
mov
jge
cmpsl
lods
jle
stos
mov
mov
sub
and
cmp
nop

push
gs
fmuls
mov
xchg
fcoms
fwait

enter
mov
sbb
test
xchg
in
out
int
rcl
jp
(bad)
movsl
or
mov
push
xchg
cmpsl
aam
out
mov
or
(bad)
xor
in
(bad)
nop

into
insb
insl
cmp
add
int3
xadd
or
les
xchg
jno
addb
cwtl
aad
xor
mov
lods
lahf
mov
xor
mov
xor
sub
orl
inc
in
(bad)
(bad)
out
and
aam
mov
out
xchg
lret
lods
sbb
aam
xchg
std
test
rcrl
popa
arpl
int3
cli
popf
xor
sbb
inc
loope
call
sbb
push
jmp
inc
leave
mov
pop
mov
sub
mov
cld
int
lods
(bad)
xchg
xchg
or
xchg
jbe
fprem
xor
sahf
hlt
push
mov
mov
into
lret
inc
pop
imul
xchg
aaa
mov
jmp
pushf
cld
movsb
test
mov
orb
mov
std
les
and
sbb
jae
(bad)
dec
test
xchg
jnp
call
mov
cmp
mov
shll
mov
test
fisubrl
push
sub
sbb
cmp
fwait

stos
jo
dec
xor
mov
in
fstpt
or
and
adc
xchg
mov
das
cmc
sar
pop
in
mov
add
mov
cli
stos
int3
icebp
mov
mov
enter
in
dec
iret
stc
outsb
jl
pop
mov
adc
scas
or
xchg
leave
and
jbe
sahf
iret
jo
xlat
ret
cmc
int3
pop
mov
xchg
subb
pop
lods
sbb
stos
inc
mov
jno
add
mov
subl
lcall
jb
xchg
and
mov
pop
shll
fucomi
rcr
jae
add
dec
jnp
(bad)
lock
adc
mov
sub
push
xchg
and
cmpsb
xor
or
adc
out
jp
call
les
xchg
mov
mov
jmp
xor
test
in
shrb
call
mov
sbb
mov
rorl
add
cmp
cwtl
cmp
adc
pop
scas
(bad)
ljmp
cmpb
push
cmpsl
cmp
xor
jbe
push
scas
xor
fisubl
pop
loope
call
xor
xor
push
push
dec
push
andl
or
mov
mov
iret
push
pop
orb
and
jle
or
mov
mov
nop

ja
mov
int
cmc
lock
dec
je
orb
push
lea
push
cmpsb
hlt
js
mov
xchg
mov
addb
jne
xor
xchg
mov
test
jge
jg
imul
andl
mov
repz
xor
jns
jne
sahf
xor
aam
imul
or
fs
jo
adcl
pop
ret
in
stos
out
push
in
call
repnz
mov
stos
nop

mov
(bad)
xor
pop
sbb
repz
mov
mov
lods
mov
xchg
jnp
mov
test
mov
xlat
xchg
cld
xor
mov
or
int3
sbbb
(bad)
adc
mov
nop

(bad)
xchg
inc
jge
sbb
mov
xchg
mov
mov
mov
rorb
or
jae
fcompl
and
sbbl
(bad)
cmpsl
outsl
or
mov
arpl
xchg
push
das
lods
xor
sbb
mov
stos
jge
stos
jmp
jmp
dec
in
addb
cmpl
das
test
jbe
rcll
and
mov
xor
jmp
mov
data16
aam
and
cmpsb
(bad)
loop
mov
loopne
push
mov
push
fisubs
sub
ss
cmp
add
push
xor
xchg
cs
or
pop
shlb
dec
xchg
incl
sub
das
adc
xorb
pop
andb
adcb
scas
jle
mov
push
pop
xorl
je
jbe
mov
sbbl
or
xchg
shlb
mov
jge
sub
ror
fimull
xchg
xor
and
push
fs
cmc
stc
sub
xchg
mov
xor
aad
mov
sahf
subb
orb
sbb
stos
jno
dec
or
xchg
jns
push
sbb
rolb
(bad)

test
mov
(bad)
aaa
subb
shll
dec
push
cli
mov
pop
and
and
imul
xor
insl
sbb
mov
aam
shl
nop

in
movsb
or
jb
dec
push
std
out
sbb
inc
int
fbld
stc
mov
fldenv
int3
xlat
es
xlat
scas
sub
je
leave
mov
jl
xchg
int3
mov
(bad)
aam
pop
in
fbld
aam
or
fstpl
fidivl
repnz
jmp
sub
cmp
add
sbb
cmpl
dec
push
xacquire
addl
mov
push
(bad)
(bad)
push
(bad)
std
nop

push
push
lock
inc
cmpsl
jle
jge
mov
mov
stos
das
jge
andb
(bad)
(bad)
lea
subl
inc
sar
cwtl
int
fcmovnu
jne
lea
test
outsb
(bad)
jmp
pop
(bad)
xchg
sarb
cmc
lds
ds
int
in
or
andb
jecxz
(bad)
and
test
fisubs
into
hlt
lock
inc
inc
iret
cld
sbb
mov
add
sbb
xchg
sub
pop
mov
inc
test
insb
mov
mov
daa
insb
int
(bad)
lret
lret
sub
inc
mov
and
into
mov
rorl
lods
fimull
hlt
sbb
int3
in
into
xchg
nop

push
xchg
mov
xor
jle
orl
mov
xlat
fstl
mov
daa
imul
xchg
sahf
cwtl
rorl
cli
test
xrelease
sub
test
cli
scas
into
or
je
sahf
xchg
cmp
xlat
rolb
jo
xchg
nop

mov
insl
faddp
lret
xchg
aam
pop
add
lock
fadd
fstps
and
mov
push
fstpl
xor
sbb
in
cmpsb
aad
(bad)
sub
xor
xchg
push
inc
nop

sub
rol
sub
add
and
pop
push
shlb
rol
cmp
sbb
out
mov
xchg
or
xchg
fisttpll
outsl
adc
xchg
xor
lea
sahf
int
add
out
jno
iret
lcall
rolb
or
push
add
jne
cmc
jle
xchg
(bad)
xchg
outsb
test
sarb
cltd
push
pop
in
xchg
jae
(bad)
push
arpl
lea
xchg
mov
loope
pusha
enter
fwait

nop

sub
xchg
push
mov
jle
sbb
jle
in
cmpsl
out
mov
fld
xorb
pusha
nop

(bad)
les
or
test
cmpl
jae
decl
stos
sarb
mov
movsl
cmpsl
push
mov
mov
xorl
sar
xchg
dec
bound
jmp
call
fcoms
test
push
repnz
xor
in
(bad)
dec
ret
lret
call
xchg
sar
jnp
std
or
(bad)
cltd
movsl
lds
fbstp
(bad)
jmp
clc
push
neg
mov
mov
mov
rcrb
inc
subb
xchg
rclb
pop
stos
jmp
pop
mov
ret
roll
addl
ja
xchg
int
inc
andb
addl
mov
jmp
hlt
pop
rcrl
adc
cmp
mov
enter
add
stos
push
test
pop
call
mov
and
mov
fbld
mov
or
push
test
or
cwtl
mov
hlt
sbb
leave
cld
cwtl
xor
push
pushf
andl
adc
in
jns
mov
sahf
pop
xchg
mov
mov
mov
subl
mov
sbb
add
subb
repnz
subb
xchg
mov
leave
inc
pop
xlat
shl
sbb
rclb
movsb
rcll
jb
mov
je
mov
jo
dec
sub
jmp
call
xchg
mov
je
outsb
jo
dec
lods
test
or
lds
sbb
inc
in
imul
negl
not
dec
enter
rol
aaa
iret
lea
pop
xchg
mov
sbb
or
lea
sub
jle
push
scas
rol
dec
adcl
jmp
testl
outsb
scas
int3
cwtl
jg
inc
xlat
or
(bad)
pusha
push
mov
test
jno
or
mov
sub
cmp
in
push
testl
jb
call
jge
inc
xchg
loope
es
stos
fs
repnz
mov
nop

push
je
cmpsl
pop
fs
call
andl
jmp
stos
lock
je
into
pop
push
sahf
mov
xor
fidivrs
jge
fists
out
enter
add
xchg
xchg
je
ja
xchg
mov
xor
pop
orb
sbb
xchg
jbe
jmp
loope
inc
hlt
daa
jge
xchg
xor
sub
mov
loop
jle
jge,pt
jp
mov
stc
sbb
testl
pop
add
lock
or
in
fnsave
xor
add
jne
pop
sub
insb
in
mov
inc
sahf
in
fadds
scas
xchg
test
test
dec
inc
dec
in
mov
mov
jge
stos
orl
iret
dec
mov
aad
out
in
push
sbb
icebp
ljmp
inc
mov
jg
mov
in
cmc
cs
cmp
adcl
pop
cwtl
je
cmp
sub
push
outsb
imul
addr16
sbbb
or
mov
stos
sahf
pop
xor
in
int
adc
and
addl
js
(bad)
lret
push
imul
popf
xlat
popa
cs
daa
mov
(bad)
mov
and
fs
and
test
in
jbe
iret
jmp
dec
stos
insl
cmc
mov
psubw
cwtl
adc
cmp
jge
(bad)
or
scas
adc
mov
push
scas
test
add
test
xchg
movsb
sbb
fnsave
call
xorl
xchg
push
js
les
xor
pop
jbe
out
or
movsb
out
(bad)
jae
test
cwtl
mov
xchg
test
mov
ss
cltd
cmpsl
fxch
xor
push
rolb
lods
movl
dec
inc
cmp
mov
cmpsb
push
sub
leave
push
push
addl
dec
or
cmp
pop
xor
xor
cmp
enter
fwait

nop

sarb
sbb
lods
aam
mov
int
sub
mov
lea
add
sti
sbb
mov
addb
push
rol
mov
lret
pop
xchg
idiv
mov
jne
pusha
xorl
(bad)
shlb
lods
test
xchg
xchg
ret
outsb
fsub
cmp
les
pop
mov
jo
bound
fdivl
or
adc
aad
xchg
movb
push
pop
pop
addl
mov
add
(bad)
test
push
addb
add
inc
mulb
mov
sti
pusha
sbb
frstor
repz
mov
adc
ja
fdiv
fbld
xchg
adc
scas
scas
xchg
xor
pop
fidivs
orl
sahf
rclb
(bad)
jecxz
andl
pop
xchg
frstor
shlb
hlt
roll
mov
test
adc
sahf
xchg
cmp
jmp
xchg
pop
outsl
mov
bound
les
out
divl
test
je
test
stos
and
(bad)
mov
les
in
rol
loopne
pop
addl
(bad)
aad
aas
outsb
cwtl
fildl
jmp
outsl
inc
add
test
pop
add
scas
jmp
stos
es
mov
aad
arpl
and
gs
mov
aaa
bound
xor
sbb
test
xchg
lea
enter
or
andl
sbbb
popf
sbb
sbb
int3
lret
aad
xlat
les
push
cltd
je
xchg
sbbl
xorl
out
imul
stos
mov
sbb
lahf
movl
fwait

lret
xchg
out
jp
out
loopne
xor
scas
cwtl
xchg
cmc
mov
int3
mov
mov
sbb
mov
cs
fstpl
mov
(bad)
leave
aam
add
(bad)
adc
loop
sub
les
mov
xchg
mov
add
xor
scas
repz
shl
adc
mov
mov
std
pushf
pop
add
dec
repz
dec
mov
in
je
mov
rolb
inc
cli
jne
idivl
mov
clc
ds
cmc
mov
rol
mov
cmp
mov
add
pushf
xor
jl
mov
ss
pop
in
sub
jecxz
pop
cld
aam
push
lock
es
jle
addr16
pop
or
mov
pop
testb
mov
fisttpll
in
iret
push
int3
icebp
cmp
stos
subb
sbb
rorb
cmp
cld
daa
mull
adc
xor
popa
cld
and
sti
sbb
xor
test
mov
sub
jne
loope
outsl
rolb
icebp
outsb
loope
mul
repnz
es
inc
adc
push
cmpsl
subl
xchg
rorl
andl
int
iret
xor
negb
jae
sbbl
add
ret
sti
push
jl
xlat
cmpb
sbbl
pop
movsb
icebp
mov
jae
mov
cmp
std
jbe
stos
mov
out
mov
and
jg
dec
sbb
cmpsl
or
push
xor
xchg
cwtl
and
test
inc
scas
and
imul
pop
push
mov
lock
test
add
out
xorl
fcompl
mov
or
and
in
lock
addb
test
test
xorl
bnd
in
adc
xchg
std
mov
add
loopne
rorb
ds
jge
arpl
insb
jae
adc
mov
outsl
inc
dec
adc
dec
leave
sbb
lret
fimull
test
jo
clc
and
xlat
mov
in
mov
xlat
in
xor
sahf
sti
mov
mov
cmp
aam
cmpsb
mov
andl
jnp
mov
xorb
test
lcall
add
mov
popf
jge
movsl
orl
jmp
dec
jle
rclb
xchg
(bad)
sub
xchg
test
xor
or
sub
into
nop

pop
jecxz
jmp
jge
aad
jae
add
(bad)
dec
sub
xchg
jmp
mov
inc
mov
pop
sub
scas
shll
mov
push
jmp
(bad)
mov
mov
push
cmp
mov
sbb
xchg
cmp
test
inc
cmc
ficoms
mov
outsl
loop
in
movsl
jnp
filds
mov
test
inc
jo
int
out
test
sahf
fnsave
xor
pop
inc
test
ljmp
sbb
jmp
jbe
aad
scas
fwait

sub
jne
pushf
(bad)
andl
cld
int
mov
dec
outsl
jmp
pop
mov
int
cmp
fldenv
not
pop
subb
fstp
hlt
pop
add
fsubs
and
pop
lret
adc
push
fsubr
jns
push
lods
les
jmp
lahf
jg
clc
les
sti
popf
sbb
push
fs
pop
or
out
fisttps
jbe
sbb
lds
mov
xor
mov
fstpl
push
xchg
lahf
and
xor
fisttpll
adc
les
out
mov
subb
cli
mov
les
lods
aam
popa
aam
and
cwtl
ljmp
adc
and
shrl
pop
lock
scas
(bad)
daa
push
test
jnp
roll
jp
xor
add
rorb
cld
lahf
xchg
lods
stc
cmp
insl
popf
xorl
adc
xchg
jns
test
jo
test
subl
(bad)
(bad)
sbb
mov
dec
in
clc
jle
movsl
lea
xchg
lea
mov
cltd
lcall
sti
push
jno
ja
rolb
cwtl
dec
adc
enter
loop
cmpsb
repz
shlb
jae
add
push
xor
mov
mov
mov
push
nop

sbb
sbb
inc
sahf
or
pop
or
fidivl
sub
mov
lds
and
fisttpl
enter
inc
lods
jbe
xchg
(bad)
movsb
or
or
lret
int
int3
subl
xchg
pusha
sub
ljmp
les
dec
sbb
test
subb
adc
mov
and
iret
roll
pop
call
jo
lret
stos
adc
push
cld
mov
pop
sub
addl
fcmovne
pop
je
movsl
lea
add
push
xchg
adc
cwtl
inc
(bad)
mov
jno
sahf
rcrb
stos
lea
(bad)
push
shlb
sub
adcb
sbb
(bad)
push
imull
jae
mov
popf
or
(bad)

rol
xor
jl
ds
out
call
sbb
pop
call
sti
in
(bad)
les
push
mov
or
stos
lret
xchg
jge
scas
lods
out
outsl
test
cmp
movsb
xchg
in
mov
cltd
xchg
jb
jb
xchg
jo
mov
into
andl
mov
xchg
push
mov
adc
cmpsb
cltd
pusha
mov
lcall
push
mov
mov
aam
jge
rcl
fstpl
xchg
sub
stos
int
sahf
orl
nop

push
mov
jmp
lea
mov
andb
into
rcrl
icebp
and
jecxz
test
out
xchg
lods
movsb
jecxz
jnp
test
leave
adcl
daa
cltd
xchg
cmpsb
in
dec
jae
lds
mov
cwtl
adcl
adc
hlt
shll
push
divb
aad
xchg
jp
mov
adc
sbb
or
fldt
or
sub
jmp
repnz
(bad)
lret
mov
hlt
jo
out
shl
scas
xchg
in
add
mov
cmp
or
jecxz
fdivrl
fcomi
pop
jp
(bad)
and
icebp
xchg
fimull
dec
mov
adc
add
int
adc
nop

sar
out
adc
aas
scas
xorl
call
shr
movsb
cmc
daa
loope
scas
dec
imul
sub
pop
cmc
in
imul
jecxz
ret
test
shlb
int3
lret
into
das
mov
xor
je
mov
inc
lret
ret
test
pushf
sub
out
loopne
shr
push
xlat
cld
cmc
jbe
inc
jae
icebp
mov
push
and
les
out
rol
mov
mov
andb
iret
in
adc
lods
push
addl
fidivrl
xchg
ret
repnz
lea
fwait

jns
cli
cmovae
in
loop
cmpsb
mov
jne
xlat
(bad)
in
iret
dec
nop

adc
scas
in
adc
sbb
cld
xchg
loope
adc
in
mov
lahf
repz
shl
dec
jmp
xchg
(bad)
dec
sahf
in
pop
inc
sbbl
loope
inc
pop
(bad)
loop
inc
xor
xor
push
out
pushl
pusha
cmp
mov
xor
cwtl
rcrl
lret
cltd
cmc
dec
sti
cmp
in
fwait

xchg
into
jne
sbbl
jmp
in
mov
std
mov
add
addl
test
add
sbb
aad
jp
adc
fildl
sbb
mov
pushf
sbbl
test
rorb
cs
movsb
shrl
dec
mov
aaa
fldl
lods
das
xchg
xor
out
jbe
imul
xor
and
jnp
int
sub
clc
lea
adc
jge
adc
lea
mov
pop
sub
jge
test
out
sahf
sbb
shrl
jae
or
subb
mov
adc
inc
popa
mov
shrl
loopne
mov
test
popa
aaa
iret
adc
sbb
jecxz
jo
lret
sbb
adc
stos
pop
inc
loopne
mov
pop
xchg
pop
lcall
jae
test
icebp
lea
push
push
jbe
fisttpll
jns
orl
pop
jle
pop
pop
bnd
nop

cs
xor
push
push
test
nop

loopne
mov
clc
repnz
mov
fucom
stos
(bad)
lret
mov
insl
adc
in
fnstsw
mov
xchg
push
xchg
lock
repnz
btrl
fwait

call
loopne
jnp
shll
sbbl
jbe
test
inc
out
testb
arpl
lock
jns
int3
pop
pushf
fwait

mov
pop
movsl
les
les
int3
mov
mov
testl
push
cmpsb
push
push
mov
push
std
subl
xchg
repz
and
xorl
clc
out
out
jge
xchg
shll
outsb
rorb
imul
cwtl
push
cli
sahf
cli
ffreep
hlt
out
in
and
jle
sbb
stc
loopne
sti
pop
add
cmp
les
subl
jno
push
fcompl
andl
lods
scas
loope
lea
ds
sub
(bad)
sub
lcall
ror
stos
stc
mov
fs
icebp
jns
mov
nop

xorl
jbe
push
int
jge
or
test
or
stos
popf
xor
lods
(bad)
out
mov
dec
scas
cmp
cmp
jle
nop

mov
mov
xchg
roll
adc
clc
gs
pop
mov
iret
rolb
mov
scas
cltd
mov
dec
push
mov
pop
xor
(bad)
faddl
xchg
lock
jl
pop
fmul
imul
jmp
xor
clc
mov
(bad)
fcoml
out
test
orb
jnp
mov
test
push
mov
loopne
ja
ds
inc
movsl
clc
mov
lock
fwait

lret
fbstp
push
test
xchg
xlat
mov
mov
jecxz
xor
mov
cmpl
adc
xor
cmp
aaa
cwtl
and
rorb
adcl
sbb
jg
out
jecxz
clc
xor
pop
dec
orl
jl
addb
test
sahf
sbb
mov
or
mov
push
das
movsl
inc
out
(bad)
push
mov
mov
jbe
andl
dec
int3
into
repz
xor
mov
orl
jne
mov
and
dec
loope
xor
pusha
mov
mov
xchg
iret
mov
cmp
mov
jl
xchg
clc
or
inc
ds
int3
filds
stos
movsl
pop
pop
ret
add
xchg
addl
jae
int3
clc
jp
inc
jle
jb
arpl
addl
popl
int3
jecxz
cmp
leave
push
cs
fstpt
scas
fildl
sahf
cmpsl
pushf
int3
call
xchg
sbb
je
std
xor
push
neg
jle
sti
fcompl
subl
cli
sub
rdpmc
mov
cmpl
push
inc
or
xchg
cmp
int3
adc
jle
addr16
xchg
jns
pop
data16
faddl
int3
sbb
lea
cwtl
mov
fdivr
mov
popa
cmc
push
repz
and
sti
xor
push
addb
int3
movsb
int3
(bad)
popa
daa
aad
mov
mov
(bad)
sbb
jl
int3
mov
mov
sub
dec
inc
push
cmp
pop
int
dec
or
in
sub
adc
adc
xorl
sub
mov
notb
xlat
(bad)
icebp
lret
xorl
sbb
jge
or
cmc
fucomi
gs
mov
aad
mov
and
and
mov
pop
les
int3
cmc
stos
sbb
mov
push
xor
dec
fwait

dec
fwait

in
int3
fsubr
popa
and
pop
into
mov
lods
int3
add
dec
ficoml
out
mov
cmp
adc
mov
(bad)
js
xor
rorl
rcll
mov
xchg
cld
mov
popa
mov
sub
xor
andl
xchg
iret
filds
je
pop
lods
test
subl
repz
std
idivb
pop
in
lahf
push
dec
xchg
mov
popa
es
(bad)

test
push
push
and
lea
push
lcall
mov
inc
mov
inc
xor
sub
cmpl
or
sahf
pushf
movsb
push
add
dec
mov
int3
xor
int
jne
daa
rolb
fildl
out
xchg
int3
or
push
adc
pop
adc
cmp
xor
addl
mov
call
aad
addl
pop
xchg
sub
stc
cmp
rclb
ss
and
adc
cwtl
mov
xorl
int3
outsl
int3
lahf
repnz
sub
fs
sbbl
movsl
int3
mov
shll
mov
leave
pop
fwait

mov
out
push
repnz
cmpsl
test
je
pop
mov
in
mov
mov
mov
push
out
mov
mov
and
mov
sbb
xchg
cmp
pop
xchg
movsb
inc
popl
adc
addl
daa
cmpsb
test
inc
int
or
xchg
sbbl
cmc
int3
nop

xchg
lea
mov
pusha
lock
test
in
fmuls
mov
mov
xchg
ffreep
or
push
adcb
add
inc
fcomps
mov
addl
leave
xchg
int3
dec
jge
fnstcw
stos
cmpl
mov
sbbl
bswap
mov
push
jns
in
repnz
stos
pop
rolb
adc
int3
sahf
lret
adc
or
int3
jns
call
ds
sarl
mov
jbe
out
int
packsswb
ds
mov
cmp
pop
andb
or
scas
repnz
lock
out
rorb
mov
inc
test
andl
xchg
jge
cmpsl
mov
cmpl
hlt
int3
mov
pop
xchg
cltd
xchg
cwtl
imul
push
sbb
leave
enter
lock
cltd
out
int
(bad)
cmp
popa
xchg
mov
(bad)
int3
or
outsb
pop
sub
pop
cmc
nop

cltd
popf
or
add
inc
xchg
int3
cli
loope
in
cmp
out
enter
jbe
lret
sbbl
cmpsb
int3
inc
lea
int
daa
pop
out
repz
add
rcrb
pop
mov
mov
sti
shlb
mov
xchg
int3
lods
rcl
jbe
jo
sub
pop
stos
(bad)
aad
movsl
xchg
inc
test
nop

addl
mov
lods
inc
fwait

int3
es
adc
out
add
push
setle
inc
orl
sub
mov
add
mov
xchg
xchg
addl
dec
fmul
add
lea
dec
push
loop
aam
or
out
loopne
sti
mov
fistpl
(bad)
lea
mov
sbb
push
stos
xor
icebp
or
dec
add
sub
cli
xor
int3
mov
inc
shll
(bad)
pop
mov
jne
add
(bad)
int3
sbb
xchg
adc
les
test
pusha
int3
sub
xchg
popf
ljmp
pushf
popf
add
test
test
and
mov
test
fcmovne
and
pop
mov
lea
(bad)
push
aaa
out
test
out
(bad)
mov
mov
rolb
rclb
mov
addr16
aas
jo
stos
mov
adcl
push
sbb
mov
movb
pop
shlb
(bad)
repnz
jns
sahf
out
sbb
sub
xchg
(bad)
mov
sbb
jbe
roll
xorl
mov
cmc
loop
xorb
sbbl
xor
cmp
mov
mov
adcb
xorl
movsb
mov
cli
lea
leave
scas
adc
inc
xchg
loopne
lret
in
cmp
adc
cli
jbe
out
outsb
sahf
dec
xchg
xchg
out
stos
or
xchg
cli
pop
mov
adc
mov
inc
sbb
mov
roll
ret
int3
fwait

lcall
lods
inc
add
adc
mov
or
bound
inc
adcb
mov
gs
out
popa
mov
rorl
sbbl
les
nop

sbb
iret
testb
sbb
scas
mov
lea
aam
mov
and
aad
mov
fcompl
icebp
sub
sub
push
cmp
and
cwtl
push
mov
iret
mov
pop
loope
aaa
leave
cltd
push
jle
sbb
gs
jmp
inc
rcl
out
cmp
cmp
push
jbe
imul
andl
out
repnz
push
mov
xchg
lret
sub
scas
lods
add
inc
push
mov
and
fimull
shrb
icebp
mov
out
xchg
jbe
addl
loope
jo
enter
cmp
lret
mov
adc
or
test
imul
addl
xchg
mov
addb
into
(bad)
stc
ret
pop
call
addb
bswap
(bad)
out
mov
fisubrl
pop
adc
ret
lock
xor
adc
andb
in
inc
push
dec
xchg
push
scas
jbe
mov
testl
jge
push
cmp
sti
inc
leave
cmpl
mov
orl
insl
out
andb
shrl
dec
aaa
sub
insb
or
test
push
stos
mov
cmp
jbe
adcb
push
cwtl
inc
ret
orl
xor
jnp
lds
mov
adcl
iret
xchg
(bad)
loope
jmp
out
stos
cmp
push
stos
imul
das
inc
in
(bad)
popf
sbb
(bad)
xchg
cltd
test
and
jp
aaa
int3
fstpt
pop
adcl
shlb
xchg
mov
cld
xchg
xor
incb
adc
sub
sbb
repnz
push
es
push
ret
int
rorb
movsl
sbb
mov
test
xor
shll
adc
popf
out
lcall
addl
(bad)
push
xchg
xchg
fbld
stos
push
mov
roll
bound
int3
cmc
fcoml
push
cmp
adcl
addb
into
xor
mov
call
xchg
jns
sbb
inc
iret
mov
loop
clc
and
loope
inc
adc
test
fsubp
aad
pop
int
addb
loope
push
inc
mov
ds
cmpsb
mov
repz
pop
stc
lea
and
mov
and
or
rorl
mov
jle
xchg
insl
push
popa
cmpsb
ret
data16
add
sbb
jno
popf
pop
shlb
adcb
sbb
aad
lcall
movsb
mov
xor
xchg
jno
jge
(bad)
xor
pop
movsl
xchg
xchg
sbb
add
ss
addl
ffree
popf
mov
clc
and
test
(bad)
testl
cmpb
xchg
sbb
popf
xchg
xor
fwait

rdtsc
mull
add
jg
and
pop
add
push
out
cmpsb
pop
iret
mov
stos
fpatan
test
adc
enter
xchg
andl
(bad)
push
jle
inc
push
cmp
popl
pop
rcll
stos
sbb
jne
xor
scas
ret
dec
andl
mov
scas
xchg
mov
sbb
cmp
sbb
mov
push
movsb
and
out
dec
out
push
mov
adc
inc
inc
dec
or
in
pop
push
mov
pop
shll
cwtl
mov
lds
xchg
pop
shl
fcmovbe
mov
cmpl
ret
or
push
mov
lods
test
sahf
data16
rolb
inc
out
andnps
sbb
leave
push
lock
(bad)
out
je
xorb
inc
int
push
int3
rcrl
push
sahf
flds
in
out
pusha
rolb
sub
dec
push
test
mov
sbb
push
mov
hlt
fistpl
call
cmpl
adc
out
xchg
mov
test
aam
xchg
xchg
stos
arpl
fadds
inc
insl
and
sub
orl
add
jmp
dec
arpl
mov
jbe
mov
xchg
call
iret
mov
rcrl
sub
lret
out
mov
or
int
pop
xchg
cmpsb
jne
xorl
pop
orl
push
les
(bad)
cmpsb
int
in
cmp
sahf
xchg
shlb
(bad)

scas
(bad)
outsl
rcll
inc
out
xor
pop
or
std
lret
jp
mov
rcl
jmp
lahf
js
inc
cmpsl
xchg
push
inc
loope
mov
and
sbb
jmp
xorl
sbb
mov
xchg
in
cmc
movsb
add
jmp
adc
add
popf
fmull
pop
outsb
sbbl
leave
xor
mov
or
xor
push
aaa
jmp
cmpl
mov
gs
sahf
shl
pop
mov
sbbl
sbbl
xor
movsl
addl
int3
or
sarb
stos
(bad)
je
add
cmc
test
pop
dec
clc
pop
ficoms
enter
xchg
cmpsb
xorl
cmc
stc
xchg
rorb
adc
lods
push
add
sbb
(bad)
sahf
pop
movsl
sub
movsl
out
shr
jl
mov
int3
inc
mov
test
mov
push
mov
movd
test
ret
(bad)
enter
sbb
in
loop
pop
loopne
inc
mov
and
and
in
lods
incb
push
iret
test
sbb
jl
andl
fwait

insl
outsb
mov
leave
adc
pop
leave
pop
jbe
xor
lds
inc
fld
or
(bad)
push
pop
cmp
sub
mov
(bad)
dec
push
mov
sub
mov
mov
enter
pop
and
cli
jne
sti
mov
pop
mov
fsub
or
mov
repnz
je
in
les
int3
insb
out
icebp
orb
mov
mov
fsubp
setno
push
mov
stos
mov
fimull
mov
stos
dec
jge
push
clc
fwait

out
fcomp
out
add
and
lods
or
in
jp
pop
(bad)
lock
sub
insb
or
sub
mov
lds
xorl
lods
sub
(bad)
(bad)
shr
mov
frstor
mov
int3
sbb
or
repz
push
mov
pop
xchg
inc
int
mov
sub
lds
ret
cmc
push
(bad)
mov
aaa
es
insl
test
push
out
lahf
pop
pop
(bad)
inc
mov
rcrl
nop

loopne
push
push
adc
in
xchg
stos
jbe
roll
pop
mov
scas
in
cltd
addb
scas
push
arpl
repz
imul
and
push
outsb
out
lock
fwait

repz
out
icebp
and
jns
pop
jl
add
mov
subb
loop
lods
push
(bad)

lahf
fidivrl
cmpsb
xchg
aad
sahf
dec
int
dec
leave
mov
out
movsl
pop
dec
sbb
mov
repnz
stos
subl
cmp
aam
orl
push
sub
cmp
mov
mov
or
mov
jge
cmpl
(bad)

icebp
andl
jb
lcall
(bad)
cmpsb
pop
xor
insb
cwtl
mull
adcl
adc
jp
cmp
jne
int
addl
push
ret
xchg
mov
add
rcl
test
andb
xor
ljmp
and
mov
leave
subb
fstl
int
int
sbb
cmpsb
orl
add
inc
xlat
and
cmpsb
imul
inc
sbb
test
addb
dec
adc
ret
bound
int
pop
jbe
jg
pusha
inc
adc
pop
push
call
(bad)
mov
adcl
scas
popa
dec
mov
andl
jmp
add
push
sub
clc
pop
fucomi
xor
push
xorl
test
push
shlb
arpl
fs
sbb
xor
mov
stos
cmpb
xchg
mov
aaa
jl
andl
jmp
xchg
int
dec
sub
or
mov
scas
sbb
jnp
cmp
int
or
scas
sahf
cmp
leave
and
lahf
ja
fsubr
mov
dec
out
mov
cmp
daa
je
add
pop
pop
sarb
mov
outsb
pop
or
scas
inc
pop
addb
xor
and
test
repz
icebp
and
add
notl
mov
jp
adc
xor
int
xor
mov
mov
aaa
adc
add
adc
mov
pop
add
or
add
or
add
or
add
or
add
pop
add
or
add
jnp
add
xchg
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
or
add
add
or
add
popl
add
lahf
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
add
or
add
jg
add
xchg
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
or
add
jno
add
mov
add
xor
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
inc
or
inc
push
mov
inc
call
mov
dec
mov
dec
push
push
mov
push
push
jmp
inc
mov
call
pop
add
ret
call
mov
mov
inc
mov
jmp
int3
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
push
mov
push
call
mov
push
push
call
mov
movl
movl
movl
push
mov
push
call
mov
lea
push
call
mov
pop
ret
andl
mov
add
fldl
inc
sahf
inc
lea
addl
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
ret
push
push
popa
xor
xor
cmp
aaa
cwtl
ds
daa
xor
shlb
int
(bad)
fisttpll
add
test
popa
aam
mov
pop
test
jne
shrb
and
cmpsl
es
(bad)
movsl
lahf
andl
popl
mov
aam
mov
sbb
push
or
xchg
add
ljmp
mov
jo
shrb
push
sbb
setno
inc
adcb
add
ds
aaa
outsb
movsl
arpl
pushf
sbb
into
movsl
enter
add
push
out
int3
jle
cmp
xor
je
pop
jmp
and
pusha
xchg
add
in
popa
aad
addb
push
movsb
nop

cmpb
aam
push
loope
loop
add
out
inc
dec
mov
xchg
mov
or
jl
(bad)
fistpll
mov
cwtl
adc
cmp
mov
mov
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
cmp
mov
sahf
jmp
and
pop
adc
ja
mov
push
sub
fsubrp
in
ljmp
sbb
sahf
pop
mov
cmp
sar
push
sbb
arpl
shlb
mov
pop
adc
or
out
loope
add
pop
andb
dec
js
mov
dec
mov
push
(bad)
int3
add
xor
fists
arpl
adcl
andl
jge
enter
int3
cltd
mov
jno
xchg
sahf
and
pop
lea
pushf
add
and
int
push
fiaddl
shlb
es
xor
lcall
xchg
or
mov
xchg
mov
and
popa
mov
lret
xorb
sub
mov
or
(bad)
xchg
pop
rcl
enter
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
repnz
pop
andl
cmpsl
ficoms
in
inc
cwtl
mov
call
in
mov
cmpsl
ja
aam
repz
in
mov
sbb
sbb
fstpt
push
fsub
popl
sbb
mov
xchg
notl
addl
sub
test
mov
push
mov
stc
subl
sbb
mov
jmp
sub
lds
xchg
push
and
adc
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
jbe
or
mov
ljmp
mov
cmp
cmc
xor
bnd
mov
add
imul
inc
sbb
sub
rcl
fcomip
les
pop
into
add
(bad)
dec
std
inc
gs
sub
std
dec
sub
(bad)
cmp
and
pop
xchg
(bad)
lret
xor
and
outsl
mov
movsl
lock
lods
(bad)
push
test
inc
pusha
mov
lea
out
cmp
test
test
sub
push
xor
cwtl
js
and
push
mov
adcl
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
fisttps
aam
(bad)
sub
push
sub
add
fisttpl
out
lods
xor
pop
cmp
sbb
fwait

sbb
out
mov
sbb
fbld
mov
xchg
xor
and
movsl
jnp
xor
pushf
and
lret
inc
xor
orl
push
das
add
sub
fstpt
mov
mov
sbb
out
sbb
arpl
adc
shlb
mov
add
clc
jge
out
cli
hlt
clc
mov
(bad)
push
xchg
andl
cmp
inc
pushf
push
push
xor
int3
stos
mov
add
cmp
dec
cs
push
sub
dec
enter
and
xor
test
andl
test
imul
ja
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
movsb
jmp
xor
loopne
or
leave
fisubl
ficoms
inc
push
dec
das
repnz
fsts
lcall
pop
xor
lcall
jo
or
cld
(bad)
outsl
fiadds
cmp
iret
add
std
mov
call
loop
hlt
cli
scas
enter
add
in
je
push
mov
mov
pop
sbb
addb
sub
push
repz
out
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
(bad)
fmulp
ja
mov
int
jnp
(bad)

int3
test
mov
xor
test
mov
push
xorl
and
mov
xchg
roll
xchg
movsl
repnz
je
adc
sahf
mov
adc
xchg
mov
lods
cltd
int
add
ss
mov
cli
jb
adc
mov
ret
adc
mov
and
sbbb
sbb
test
aaa
mov
adc
add
adcl
(bad)
int
push
dec
adc
out
dec
stc
pusha
mov
lret
fs
test
test
cmpl
rorb
ljmp
aas
rclb
cltd
dec
or
ljmp
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
stos
loope
mov
mov
test
int
cmpsb
mov
mov
imul
andl
add
out
add
arpl
xchg
cmc
mov
or
in
stc
mov
mov
sbb
add
aaa
and
xchg
mov
xor
das
jecxz
dec
rol
pushf
ror
and
push
stc
gs
andb
jg
push
fildll
mov
push
xchg
add
sbb
daa
sub
int3
add
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
jle
xchg
in
sbb
mov
sbb
(bad)
lock
mov
mov
sbb
cwtl
sbb
adcl
or
push
stos
stos
(bad)
push
add
mov
subb
loop
scas
movsl
shll
jns
test
or
stc
into
mov
(bad)
lock
or
sbb
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
or
sbb
and
es
sub
push
ss
jl
inc
int
jmp
mov
loop
add
stc
shll
(bad)
int3
cld
movsl
jbe
push
cld
addr16
sbb
lret
mov
std
sub
in
push
pop
xchg
adcl
cmp
gs
movsl
xor
repnz
dec
fs
sbb
sbb
mov
add
std
pop
jnp
fcmovbe
push
jae
adc
ret
fwait

int
(bad)
push
jecxz
dec
mov
sub
movsl
inc
les
jbe
push
xchg
sbb
enter
pop
jp
lea
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xchg
and
push
orb
(bad)
scas
fstpt
mov
test
sbbb
push
fisttpl
xchg
das
dec
xlat
insl
hlt
jbe
lcall
jo
cwtl
jns
ja
out
gs
sbbl
mov
fists
das
or
sbb
testl
fdivrs
lods
pop
fisttps
icebp
pusha
test
inc
adc
sub
ret
enter
xchg
add
xchg
mov
adc
jo
cmp
mov
aaa
scas
push
mov
jle
andl
push
jecxz
fisttpl
ror
fldl
cmp
cwtl
fs
sub
movsb
sbb
scas
cmp
ljmp
cli
push
cmpl
xor
jge
mov
inc
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
mov
fdivrl
sbb
jp
or
int3
outsl
scas
mov
cmpsb
inc
subl
pop
outsb
add
mov
mov
(bad)
sbb
add
fstl
add
adc
dec
sub
int
andl
addb
cmp
(bad)
mov
adc
loopne
nop

mov
jmp
xchg
decl
stos
rolb
adcl
andl
add
cmp
mov
dec
adc
or
push
int3
sbb
xchg
mov
aam
rcrl
lods
and
stos
bound
mov
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xchg
and
xor
sub
testl
inc
(bad)
mov
loopne
or
xchg
mov
add
xor
iret
cld
cld
fmull
cmp
out
inc
mov
add
jb
test
(bad)
dec
andl
inc
mov
push
sub
lret
popf
out
jmp
dec
xchg
xcrypt-ofb
cmpsl
out
push
stos
mov
sbb
lcall
lret
sub
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
into
repnz
xchg
push
sbb
adc
nop

bound
mov
out
shll
cmpsb
xor
notb
adc
cmp
sbb
cltd
push
sub
add
cmpsl
add
out
xor
mov
aas
sub
push
jne
lods
aaa
test
(bad)
push
push
scas
enter
and
cmpl
mov
fbld
dec
dec
mov
pusha
lods
push
out
outsl
mov
dec
andb
push
insb
jle
mov
cmpsb
push
fcomps
and
pop
add
stos
push
adc
into
xor
je
nop

jo
fld
inc
jno
cwtl
dec
(bad)
cld
add
daa
ret
jns
addb
push
test
cmp
sbb
or
fstl
cmp
mov
mov
jmp
xor
adc
out
sti
cmpsl
dec
jle
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
lret
push
xchg
inc
ret
lock
mov
ret
lods
fucom
jne
inc
jecxz
pop
mov
repnz
jg
push
movsl
fstp
(bad)
(bad)
inc
ljmp
int3
xor
test
pop
das
xorl
push
sbb
add
mov
repz
pop
pop
out
int3
and
and
push
into
daa
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
imul
ds
push
outsb
jge
cltd
fsincos
inc
lret
aaa
in
jmp
xor
add
jns
sbb
push
jbe
into
inc
sahf
sbb
mov
dec
jb
lcall
outsb
fld
mull
xchg
xchg
push
rolb
adcl
and
sbbb
(bad)
movswl
or
fidivrl
iret
popf
xchg
dec
test
decb
mov
pop
mov
clc
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
stc
clts
cmpl
jbe
or
scas
in
cmc
cltd
mov
loop
lahf
inc
and
subb
push
popa
sbb
mov
dec
je
int
test
mov
mov
movsb
sbb
clc
jbe
int3
call
mov
lret
xorb
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xor
faddl
jae
into
mov
adcb
leave
mov
out
int3
call
int
cmp
ret
cmpl
mov
repz
or
(bad)
push
in
andl
and
stos
andb
cs
jge
push
cmp
cmpsl
clc
push
add
stos
ds
outsb
and
cmp
pop
cmp
mov
adc
sbbb
imul
push
ds
dec
and
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
sahf
(bad)
pushf
dec
pop
push
stos
clc
fisubs
push
xor
xor
std
mov
mov
lcall
mov
aas
push
and
jo
rcrb
aad
int3
in
or
(bad)
cld
aam
mov
mov
jbe
mov
cwtl
scas
psllq
dec
jg
lock
fisubs
movsl
jg
jnp
jl
cs
pop
xor
mov
inc
jb
in
pop
cmpsb
cmc
pusha
cmp
cmp
popa
fldl
cmpsl
push
pop
(bad)
rolb
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
dec
sub
inc
fmuls
stos
rolb
enter
jmp
lock
sub
mov
xchg
cltd
das
mov
sbb
je
xchg
lret
outsb
subl
shlb
jecxz
inc
xor
stc
push
std
cmc
xchg
andl
xchg
xor
adcl
sub
xor
mov
dec
nop

enter
sbb
bound
shr
add
cld
leave
scas
xor
andb
fistpll
fists
mov
xor
xor
je
mov
cmp
incl
fstpt
add
hlt
push
rcrl
mov
scas
xor
out
das
xor
cwtl
pusha
nop

imulb
mov
lds
xchg
dec
stos
xchg
test
stos
xchg
roll
repz
test
xchg
stc
sub
sub
movb
pop
mov
dec
cld
sbb
xchg
xorl
add
mov
dec
sub
mov
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
aad
jg
add
outsl
clc
aas
sbb
test
mov
and
in
les
dec
mov
es
and
aaa
cmpl
add
inc
push
push
sub
inc
daa
jbe
push
pop
dec
test
push
fmull
mov
adc
inc
sbb
push
sub
jge
ret
imul
push
arpl
clc
je
js
add
orl
addr16
cmc
(bad)
loop
data16
lret
test
aas
int3
pop
xor
fildll
js
jo
subb
inc
negb
jno
rcrl
cli
mov
mov
ja
mov
sub
cmp
push
fbstp
(bad)
ds
int
jl
nop

movsl
mov
cmpl
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lret
popa
out
movsl
dec
test
test
mov
mov
add
test
nop

mov
in
adc
mov
xchg
add
lods
loope
sbb
nop

cld
nop

fs
and
mov
mov
jecxz
out
lods
cmpsl
sbb
inc
outsb
sbbl
dec
int3
test
test
out
inc
je
push
push
xor
js
cld
or
push
push
jnp
inc
daa
sbb
stos
fwait

xchg
push
mov
sahf
cmp
(bad)
and
int
jns
mov
and
mov
xchg
sbb
mov
movsl
adc
sub
or
or
push
out
loopne
lds
push
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
int
xor
add
jg
mov
push
add
xlat
mov
test
xchg
xchg
mov
aaa
or
lea
adc
inc
aam
push
subb
data16
lret
xor
rcll
jmp
xchg
int3
add
roll
sbb
cmp
mov
cld
add
dec
test
and
xor
adc
insb
jbe
std
leave
push
jo
and
dec
ss
jo
shlb
lods
inc
cmc
adc
xor
outsl
jbe
fwait

jp
test
push
dec
(bad)
mov
scas
test
cmp
xchg
mov
jle
sbb
mov
pop
or
jl
nop

js
std
addl
or
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
cli
adc
nop

cmpb
adc
popf
mov
shl
sub
add
mov
movsl
(bad)
jne
out
pop
mov
incb
mov
adc
data16
dec
cmp
imul
in
cmp
movsl
cmp
sbb
xchg
mov
adc
dec
(bad)
xchg
andl
nop

pusha
add
jo
fiaddl
roll
dec
push
xchg
cltd
xchg
xor
mov
jb
mov
aad
orl
add
and
loope
sub
mov
add
or
jmp
addl
xor
sbb
add
jns
ss
hlt
cmp
pop
inc
fs
mov
xlat
push
orl
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
xor
cmp
pushl
xchg
add
xchg
fwait

addl
cmp
jmp
xorl
clc
sub
xchg
jnp
fisttps
daa
shlb
mov
cwtl
mov
stos
icebp
sbbb
addr16
nop

sub
stos
jne
dec
xorl
xchg
notl
orl
cmp
aam
sahf
dec
jge
push
push
inc
les
mov
cmpsb
mov
cmc
mov
xor
loope
xchg
jmp
or
dec
orl
xlat
aaa
ffreep
push
and
cld
popa
mov
ds
mov
stc
cmp
fstpl
cmp
or
add
nop

push
jl
push
repnz
mov
subb
fdivl
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
in
scas
xor
pop
push
orl
int3
or
andl
xor
adcl
pop
adc
daa
in
sub
clc
roll
adcl
test
ret
lret
pop
fwait

out
cmp
int
movsb
loopne
je
rcrb
lock
xor
sarl
push
add
lret
cli
(bad)
xor
sbb
rolb
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmp
mov
cmp
ret
mov
and
leave
dec
sub
push
stos
xchg
jg
inc
(bad)
mov
mov
(bad)
cmp
lea
out
inc
lahf
xchg
mov
xor
lcall
pop
shl
cmpl
mov
adc
jbe
dec
fcomp
sub
jnp
sbb
xchg
iret
jmp
ss
pop
ja
test
dec
repnz
fidivrs
int3
dec
js
cltd
push
sahf
cmc
loope
mov
sbbl
testb
mov
orl
add
arpl
xor
or
or
xchg
int3
mov
(bad)
mov
in
sbb
andl
stc
pop
shll
imul
mov
hlt
push
adc
cwtl
subl
stos
xor
aaa
subl
iret
scas
xchg
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
out
push
(bad)
mov
mov
mov
jmp
test
in
jp
cmp
xchg
hlt
and
cmpsb
lahf
gs
test
sbbb
(bad)
jg
pop
int3
jge
mov
into
xchg
inc
pusha
jbe
stos
lds
xor
hlt
int3
stos
cli
(bad)
aas
imul
scas
jo
push
add
rolb
test
jbe
aam
sub
or
dec
vmwrite
xchg
mov
sbb
ljmp
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
adc
arpl
aam
test
or
and
subl
js
(bad)
jecxz
xchg
cmp
sub
pop
mov
mov
aam
pop
sti
test
out
or
lods
dec
or
jmp
adc
mov
inc
add
lahf
sub
movsl
fsubl
icebp
rcrb
dec
push
push
in
sub
imul
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
jmp
je
stos
sbb
out
push
aas
push
pop
mov
mov
cwtl
push
cmp
pop
out
(bad)
shll
mov
popa
mov
sbb
cmp
std
xor
jecxz
test
sar
daa
sub
iret
sbbl
jb
mov
xchg
jne
jae
or
xchg
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
sarb
(bad)
or
stc
and
jmp
dec
sti
mov
int3
sub
fistpll
cmpsb
adc
iret
lret
adc
push
inc
or
and
sub
neg
in
jo
repnz
inc
int
or
faddl
ss
testl
loope
pop
roll
pusha
aam
outsw
lods
fstl
mov
inc
ds
cltd
and
orl
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
call
sbbl
push
cmp
ret
in
mov
lea
cmp
or
fcompl
cmp
(bad)
xlat
hlt
imul
pushf
dec
fisubs
mov
imul
imul
sti
repnz
bound
dec
pusha
sti
into
xchg
cld
adcb
push
int3
sti
jns
subb
xchg
arpl
dec
mov
int3
test
cmc
lcall
mov
pop
or
fmuls
sbb
enter
rcr
andb
rcrb
test
popf
mov
sbb
cmpb
addl
scas
int3
or
xlat
mov
imul
xchg
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
cli
or
cld
mov
xor
addb
fcmovne
and
test
mov
pop
test
push
and
jo
mov
mov
dec
lret
mov
sahf
xor
int3
cmpl
and
cld
psubsw
subb
push
daa
dec
xchg
std
xlat
cmc
mov
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jne
cmpl
subb
mov
arpl
call
push
outsl
cmp
js
orl
xchg
mov
mov
dec
leave
mov
bound
pop
adcb
aaa
adc
test
std
mov
add
cmp
subl
and
fucomip
shll
jl
aam
xchg
popf
or
fisttps
insb
faddl
jmp
sahf
mov
fs
mov
adc
sbb
sahf
dec
fcompl
push
push
(bad)
popa
push
incl
and
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
fsubrl
pusha
mov
xchg
cmpsb
xor
in
or
or
test
sub
adc
dec
adc
sbbl
cmc
cmpsl
cmp
or
cmpl
xchg
mov
adc
dec
into
or
mov
jno
cwtl
divb
jecxz
xchg
aaa
fiadds
xchg
jp
fucomip
cmp
mov
add
sub
dec
sahf
sbb
ret
jno
rcrb
mov
ja
adcl
pop
add
add
mov
pop
sub
into
je
dec
popf
into
sar
mov
imulb
fsts
sbb
loopne
scas
xchg
sti
sub
(bad)
imul
ret
aad
lock
add
push
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
add
enter
int
out
jmp
jecxz
inc
fsubr
cmp
inc
dec
dec
mull
int
loope
popa
stos
or
push
pop
sbb
popa
cmp
ret
or
cld
add
add
push
iret
fs
lods
adc
pop
sub
pop
jge
test
(bad)
add
out
lods
and
cs
inc
xchg
or
inc
push
pushf
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
or
and
xor
pusha
dec
addl
out
xor
stos
cld
subb
push
ljmp
int
je
clc
cmpsl
cmpsb
scas
mov
mov
mov
xchg
mov
int3
add
push
arpl
pop
sbb
out
sub
scas
icebp
push
int
aad
addr16
xchg
imul
faddl
movsb
lret
add
popa
into
sahf
cmpb
imul
push
cmp
movsl
std
frstor
jg
and
jno
stc
sahf
out
call
rorl
cwtl
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
testl
lret
sub
pop
and
mov
and
or
pop
sbb
lea
adc
stos
rcll
(bad)
lret
(bad)
sahf
mov
mov
add
cwtl
inc
inc
push
(bad)
movsl
xchg
fcmove
xchg
add
sbb
andb
jae
(bad)
inc
jbe
andl
fcomip
mov
jp
jmp
icebp
mov
les
push
pop
mov
leave
add
lahf
xor
jns
in
sub
bound
fmul
dec
or
xchg
jnp
fs
les
nop

movsl
cmp
add
add
or
int3
jno
xchg
add
sub
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbb
aad
stos
cwtl
movsb
sbb
adc
(bad)
fnstsw
xchg
add
(bad)
fstpt
sahf
mov
sbb
testb
int3
je
fiaddl
mov
out
subl
cld
int
shrb
sbb
sbbl
fadds
mov
cltd
call
andl
es
mov
cld
jl
pusha
fdivr
sub
cmpl
xor
lock
fildl
cmp
jge
or
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
or
insb
lock
mov
add
mov
loopw
negb
arpl
mov
sub
lods
daa
xorl
pop
out
test
stos
and
xor
loope
std
popa
ja
fisttpl
xor
mov
loopne
(bad)
fucomip
adcb
lret
test
mov
dec
pop
jp
leave
fst
push
es
andl
jmp
mov
arpl
(bad)
cmp
into
or
sahf
lret
sti
sbb
daa
cmc
aad
outsb
jle
insb
cmp
sahf
pop
int3
lret
adcb
in
outsl
mov
sbb
ret
fildl
scas
pop
popa
fmull
mov
lahf
and
call
andl
mov
inc
pop
loope
push
pop
cltd
out
(bad)
cmpl
push
int3
pop
xor
mov
adc
(bad)
lock
xlat
mov
xor
mov
xchg
jl
xchg
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
or
(bad)
mov
mov
sub
mov
sbb
(bad)
mov
inc
fistpll
mov
int
pop
lahf
adc
mov
andb
nop

int3
lret
fisubl
and
fistl
cltd
mov
xchg
filds
out
int3
xchg
out
push
push
push
cwtl
fidivl
enter
mov
leave
jo
fists
and
je
xor
jecxz
sub
into
cmpsb
call
or
sub
inc
fisubrs
dec
je
jg
or
insl
neg
mov
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
sbb
orl
adc
ja
jle
mov
mov
push
enter
pop
cmpsl
ljmp
mov
mov
int3
xor
shlb
subl
sbb
sub
rcl
cld
add
push
pop
add
cmpb
adc
subb
mov
push
or
add
int3
(bad)
andb
sbbl
movsl
push
cmovae
frstor
nop

ret
or
repz
add
mov
and
push
incl
dec
(bad)
lods
int3
or
arpl
mov
cmc
rcll
sbb
sbbl
lods
cld
cmp
adc
mov
sbb
lea
dec
hlt
jbe
push
test
xchg
pop
or
ficomps
mov
jge
dec
data16
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
inc
or
add
mov
mov
add
mov
mov
nop

jle
daa
xchg
insl
jne
adc
or
movsb
rcrb
and
xor
adc
int
daa
sub
inc
sbbl
add
rorb
cmpsl
int
ja
rorb
popa
or
mov
ja
fimull
dec
mov
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xor
dec
and
xchg
or
and
pop
mov
(bad)
rolb
sahf
popa
cmp
pop
adc
clc
ja
and
dec
and
jb
sbb
into
data16
out
adcl
ffreep
scas
stos
cmp
or
shll
sbb
imul
xor
dec
stos
ja
rclb
mov
sub
call
cmpl
jnp
jae
rol
inc
cmpb
int
sub
mov
test
lahf
mov
fistps
sbb
xorb
dec
mov
mov
enter
imul
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
adc
movsl
xor
push
fisttpl
(bad)
lahf
jg
cmp
cmp
out
roll
push
in
int
dec
(bad)
movsb
add
(bad)
in
mov
xchg
test
mov
mov
mov
out
mov
andl
mov
xor
scas
sahf
es
adcb
int
xor
xor
sahf
sbb
(bad)
cmp
sub
andl
fcmovne
xchg
xor
out
movsb
popf
cmpl
cwtl
cmpl
mov
jecxz
lret
hlt
ret
stos
mov
idivl
int
cmpsb
lcall
shrl
lea
loopne
fcmovnu
dec
fwait

mov
inc
imul
xchg
sti
mov
xchg
adc
push
fldlg2
mov
sbb
inc
mov
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lods
sub
mov
xchg
test
sub
xlat
lcall
ds
pop
sarb
push
sbb
out
dec
aaa
mov
icebp
xor
sbb
pop
stos
cltd
fsubl
sub
sbb
add
push
dec
pop
cmp
in
popa
mov
outsb
fstpt
push
iret
cmpsb
fs
mov
push
(bad)
lret
aas
pop
push
pop
and
jge
sub
add
mov
and
pop
xorl
jp
mov
and
xor
cmpsl
dec
mov
out
mov
mov
call
orl
inc
into
rcrl
xor
imul
mov
mov
movsb
stos
sbb
cld
sbbl
xor
test
mov
stos
inc
jne
or
insb
stos
inc
pop
in
cmpsb
jbe
fistps
add
mov
loope
sub
cmp
bound
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xor
int3
dec
fcompl
push
push
cmpsl
insl
inc
sbb
mov
lods
push
scas
xchg
scas
mov
int3
lret
or
adc
xchg
cmpsl
imulb
mull
imul
gs
jecxz
shlb
push
add
adcl
aam
movsl
and
fistps
pusha
xor
add
sbb
inc
and
outsb
lds
(bad)
dec
jge
ret
inc
(bad)
mov
std
call
mov
cmp
jno
push
aaa
je
lods
pop
lret
mov
(bad)
ljmp
cwtl
(bad)
movsl
adc
cmp
lahf
xchg
sub
fsts
sbb
test
sti
lea
adcb
and
cwtl
add
mov
and
xchg
mov
jg
add
out
or
jnp
cmp
sbb
adc
fnstenv
mov
sbb
andl
ljmp
xchg
repz
sahf
add
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
pop
sub
arpl
push
xor
sub
loope
mov
or
mov
js
fists
inc
xchg
mov
jno
xchg
dec
push
movsl
int3
leave
jno
pop
scas
mov
mov
xor
sub
mov
filds
mov
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
int3
pop
rcr
xor
cmp
enter
jle
lret
in
xor
and
imul
xor
cmpl
xchg
fucomip
xor
lods
not
push
mov
pop
xchg
cmpsb
out
bound
cwtl
test
out
cwtl
aam
test
sub
out
int3
pop
mov
mov
xorb
xorl
or
andb
(bad)
int
lds
push
jge
hlt
clc
fs
lret
movsb
lret
call
int3
movsl
mov
ljmp
pusha
stos
orl
nop

std
xchg
rolb
sbbb
sarl
loop
mov
lret
push
mov
inc
imul
and
xor
loop
mov
xorl
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xchg
adcl
cmp
dec
rorl
and
(bad)
pop
fstl
in
scas
scas
loope
cmpsl
dec
xor
pop
stos
stos
mov
sbb
les
xchg
out
push
sub
popl
xor
sahf
push
sbb
xlat
xor
ja
loope
cmp
adcl
aas
out
mov
imull
sahf
mov
rcrb
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
aas
decb
insb
xor
push
mov
leave
ret
mov
loopne
jno
inc
aas
or
ja
cmpsl
test
mov
or
fnsave
pushf
std
mov
xor
pop
popf
imul
sub
pop
stc
out
xchg
lock
and
mov
(bad)
stos
loopne
xchg
bound
xchg
push
mov
add
sub
rcrb
or
mov
jge
pop
mov
ljmp
test
and
jns
pop
sub
loopne
xchg
gs
xor
add
jbe
es
cmpsl
outsb
lock
pop
mov
insb
xor
(bad)
int
xor
sahf
sti
jp
xchg
test
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jle
xor
into
add
pusha
dec
bound
xchg
xchg
mov
mov
fisubl
fsubl
movsl
jmp
push
cld
push
mov
rcll
add
inc
or
orl
sub
xor
outsl
xor
movzwl
scas
sti
(bad)
xchg
cld
dec
fildl
sub
push
aaa
movsl
push
or
mov
stos
sbb
push
jne
pop
cmp
mov
sahf
mov
lods
into
xchg
lods
in
repnz
sbbb
add
ret
rol
arpl
stos
aas
int
(bad)
pop
jo
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
mov
pop
mov
aas
(bad)
mov
sbbb
push
and
or
jno
les
jnp
cmpsl
je
mov
jns
jns
sti
sub
sub
lods
(bad)
cmpsl
lahf
push
xchg
inc
stos
cmpsl
aas
cmp
mov
iret
sub
inc
into
add
add
lock
test
mov
roll
xchg
fistps
sbb
(bad)
sub
lahf
add
jbe
pop
(bad)
lret
xor
inc
sahf
adc
xor
aad
mov
xorl
in
int3
test
sub
jecxz
mov
popa
mov
sub
movsl
mov
out
xor
lods
je,pt
mov
push
test
in
sub
mov
jns
enter
inc
leave
test
inc
xorl
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
(bad)
cmpsb
mov
add
sahf
pop
cld
andl
jns
shrb
out
adcb
into
int
mov
add
addb
push
cmp
stos
add
subb
loopne
mov
or
push
jge
clc
ret
cwtl
fisttpll
addb
cld
cmpl
(bad)
push
xchg
mov
fimuls
jle
sahf
mov
js
jle
test
xchg
nop

mov
push
ss
xchg
mov
out
xor
addb
xchg
mov
mov
lcall
je
add
fsubs
in
in
stos
lods
aad
xor
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cld
movsb
(bad)
mov
or
jns
pop
mov
xor
cmp
or
mov
int
cwtl
jecxz
repnz
adc
divb
and
push
arpl
fwait

lret
dec
xlat
gs
test
fidivs
pushf
insl
xchg
dec
xlat
adc
lret
dec
sbb
pop
orl
sbb
test
cli
shl
jne
adc
jne
lods
adc
push
fsubr
jp
popa
cmpsb
andl
mov
out
test
arpl
arpl
(bad)
clc
inc
xor
jns
cmp
mov
pop
jmp
movsl
add
fwait

mov
mov
mov
mov
fdiv
sub
mov
ljmp
lods
xchg
cmp
int
lods
adcl
or
xchg
(bad)
sti
loop
xor
std
sahf
sub
daa
adc
xchg
and
int
sbb
into
orb
mov
rcrl
loopne
and
lcall
ret
inc
int
cmp
mov
pop
sbbl
lods
add
outsl
inc
inc
mov
sbb
add
popa
xchg
stc
shrl
(bad)
outsb
fldl
xchg
std
xorl
fucomip
int3
fucomp
mov
test
test
in
outsb
jb
test
movsl
mov
cmp
es
push
mov
inc
dec
xchg
(bad)
fmull
fdiv
jle
jo
addl
xchg
dec
xor
test
mov
int3
rcll
or
sbb
cmp
popf
mov
outsl
ror
xchg
lahf
ret
test
push
add
pop
add
nop

fists
inc
mov
or
lock
sbb
mov
imul
jge
pop
sub
adcb
fsubr
fldenv
mov
sbb
xchg
sbb
(bad)
std
int3
fisubrs
into
mov
aaa
push
mov
(bad)
cmp
adcb
mov
sahf
addl
(bad)
repnz
lock
mov
stos
sahf
ljmp
dec
es
xchg
lret
xchg
sahf
mov
sbbl
aas
jle
push
cli
pusha
push
mov
jne
mov
pop
dec
scas
xorb
push
insl
sub
mov
inc
fsub
mov
inc
(bad)
shlb
jo
jne
mov
popa
filds
pop
sub
daa
(bad)
lret
or
call
dec
mov
int3
outsl
lock
sub
adcl
fcompl
xlat
pop
cli
shll
repz
mov
sbb
out
inc
out
pusha
ljmp
sbb
sbb
cmp
loopne
mov
data16
roll
scas
int
mov
inc
add
ljmp
nop

call
mov
mov
clc
mov
ljmp
sub
or
push
cld
xorb
dec
jnp
lds
imul
cmpsb
and
out
inc
and
inc
sbb
pop
ds
repz
sbb
adc
pop
shlb
dec
std
xchg
addl
cmp
add
cwtl
add
test
int3
int3
int3
int3
int3
mov
sub
mov
test
je
mov
mov
mov
push
call
mov
mov
add
mov
pop
mov
push
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
adcl
es
cltd
xchg
fwait

hlt
sub
inc
mov
and
mov
popa
gs
mov
cli
fisubs
mov
aam
movsl
mov
jo
push
rcll
loope
shll
notb
mov
mov
rclb
cmpsb
(bad)
mov
scas
scas
xor
xchg
ds
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
data16
cmpl
stos
cmpsl
call
mov
xorb
jo
cwtl
cmc
rorb
negb
mov
in
mov
adc
ds
hlt
jl
xorl
data16
(bad)
mov
orl
lea
paddusw
jg
cmp
mov
pop
sarl
ret
fcompl
mov
ficoml
xor
and
mov
into
(bad)
jg
es
loopne
xchg
test
clc
cmp
out
scas
xor
gs
nop

xor
xor
leave
subb
lahf
inc
(bad)
hlt
test
and
mov
mov
movb
jae
fisubrl
adc
test
mov
fstpt
xchg
stos
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
repz
dec
push
pop
fucomip
in
mov
xchg
pop
addb
mov
jmp
loop
movsl
adc
dec
rorb
mov
lea
sahf
std
mov
mov
jl
mov
ljmp
xchg
fadds
cmp
aam
gs
or
lods
lcall
call
jge
in
addl
sbb
jbe
fbld
push
inc
int
addb
push
mov
jae
fistpll
popa
je
push
dec
dec
inc
or
jo
lea
mov
inc
jno
shrb
(bad)
mov
jns
adc
lds
(bad)
fmull
dec
testl
out
mov
mov
aaa
test
lahf
xor
inc
pop
mov
inc
adc
les
mov
les
add
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
push
xchg
xorl
mulb
cli
les
mov
inc
add
xchg
sub
jmp
call
sub
rol
(bad)

mov
lods
sub
rol
jbe
leave
mov
std
or
xchg
sbb
mov
or
out
xchg
xchg
and
xchg
mov
and
stc
or
loopne
mov
insl
and
mov
out
inc
sub
mov
stos
shlb
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
call
repz
jnp
and
mov
lcall
mov
cwtl
push
mov
add
fptan
iret
(bad)
xchg
mov
sbb
cmpl
iret
mov
adcl
jnp
xchg
push
in
mov
mov
stc
pushf
xchg
pop
rclb
mov
mov
mov
(bad)
repz
cmp
(bad)
add
in
out
mov
mov
lds
xchg
add
sbb
clc
mov
jns
movsl
lret
stos
adc
int
sub
xorb
ficompl
repnz
addb
call
popf
loop
into
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
mov
mov
xlat
lods
mov
lods
lcall
or
std
hlt
cld
fnsave
popf
loop
(bad)
cmp
fnsave
dec
aad
subl
push
icebp
int
(bad)
outsb
fnstsw
mov
or
int3
mov
je
stos
xorb
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
stos
push
subb
outsl
rcrb
xchg
mov
pop
repnz
push
jge
mov
int
add
lds
iret
mov
(bad)
cld
test
into
adc
rcrb
outsl
lret
inc
pop
andl
into
jno
aam
sub
stos
rcrb
mov
xor
fisubrl
xchg
cmp
mov
popf
or
jne
xchg
add
std
rcrb
and
and
push
lret
lock
xchg
xchg
push
lret
call
and
test
sbb
in
jno
push
int
mov
or
sahf
push
push
fildl
and
andl
adcb
icebp
mov
sbb
movsl
sar
ljmp
fisubs
mov
(bad)
sbb
mov
xchg
mov
push
mov
mov
pop
pusha
ffree
test
test
aad
testl
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
push
push
fwait

lcall
popf
adc
cli
call
jge
ja
hlt
sbb
int
sbb
and
mov
(bad)
pop
mov
mov
jmp
(bad)
(bad)
adcb
rolb
lock
cmpsl
cmpsl
aam
lret
fucomip
nop

or
into
movsb
fdivs
cld
xchg
push
movhps
xchg
push
pop
bound
je
stos
lods
jecxz
sbb
and
add
andl
scas
jmp
xchg
std
xchg
inc
pushf
nop

mov
or
xchg
mov
std
jbe
add
or
cwtl
adcb
mov
and
fcompl
roll
sti
push
add
andl
add
dec
jge
sub
inc
xor
das
xor
jbe
enter
shr
shlb
mov
sbb
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
and
stos
mov
popa
out
inc
test
adc
push
xchg
mov
jnp
or
repnz
cld
xlat
out
stos
sbb
adc
(bad)
mov
mov
xchg
jl
bswap
pop
or
jmp
xchg
mov
iret
es
rclb
fwait

pop
xchg
cmpsb
clc
mov
cmp
push
cmp
in
sub
fucom
inc
fdivrs
jns
lret
add
mov
rcrb
push
mov
sarl
xchg
cltd
fwait

in
xor
scas
out
push
push
mov
(bad)
cmp
push
test
aad
cmp
or
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cmp
cld
xchg
fldl
mov
jmp
addb
inc
xchg
mov
lods
es
xlat
push
jl
xchg
sbb
fcoml
mov
jmp
clc
insb
out
push
mov
inc
shrb
dec
push
mov
push
mov
cmp
out
xchg
inc
lock
lock
xchg
jle
mov
cmpsb
sbb
inc
fists
and
fsubrl
dec
mov
lds
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
test
mov
mov
shrb
lods
mov
orb
pop
xchg
mov
(bad)
fcompl
cmp
sbb
mov
(bad)
ret
nop

pushf
xchg
fwait

pop
hlt
lods
xchg
push
mov
cmp
xor
jecxz
or
je
and
gs
scas
lahf
lods
adc
add
int
sub
xor
and
movsl
xchg
(bad)
xchg
mov
mov
xor
mov
inc
xchg
dec
pop
push
rolb
mov
sahf
aas
adc
test
xor
mov
add
mov
jnp
(bad)
pop
stos
es
out
out
push
(bad)
cmp
mov
sbb
push
adc
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
faddl
jns
cwtl
pop
sahf
mov
outsb
daa
(bad)
xchg
dec
fcmovnu
test
mov
push
push
lea
lahf
rolb
int
ret
idiv
out
test
nop

mov
ret
gs
aas
fldt
pop
fidivs
jle
mov
test
test
stos
cmpsb
xor
lea
mov
pop
inc
ljmp
cmc
sbb
adcl
jle
stos
jae
imul
fst
mov
or
or
jbe
cmp
imul
mov
xorb
ljmp
cli
pop
push
mov
es
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
arpl
das
jns
data16
repz
loop
daa
pop
jle
clc
mov
add
int
sahf
xor
mov
shlb
mov
fisubl
xor
xchg
mov
dec
pop
and
fldl
cmp
cwtl
mov
call
orb
cwtl
in
(bad)
dec
ja
mov
adc
decl
stos
lahf
xor
leave
cwtl
mov
mov
xchg
int3
jecxz
rcl
test
mov
sbb
mov
sahf
ss
mov
and
cmp
and
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xlat
shll
mov
jg
sar
adc
mul
mov
mov
pop
fcoms
stos
jne
jp
jge
jl
add
popa
sbb
(bad)
mov
sbb
hlt
lods
andl
adc
lock
cmpsl
mov
fisttpll
mov
jae
les
fisubrl
(bad)
stc
pop
cmpl
mov
(bad)
out
xorb
or
mov
xchg
and
or
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
lret
jle
mov
subl
mov
mov
stos
aaa
fimull
and
int
mov
loopne
leave
repz
popa
and
lret
and
mov
xor
ja
stos
xor
dec
lds
or
addr16
cwtl
sub
idivl
aam
outsl
ret
les
sub
leave
dec
jbe
movsl
inc
sub
mov
mov
insb
mov
out
xor
sbb
dec
mov
xchg
jp
mov
rorb
xchg
addl
out
mov
mov
dec
push
std
js
push
add
sbb
push
das
mov
fwait

cmpsl
mov
inc
(bad)
pop
and
jne
gs
pop
add
test
fsub
sbb
repz
pushf
push
lods
popa
int3
arpl
sahf
(bad)
aad
mov
pop
pop
outsl
rdmsr
jmp
ss
add
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
jbe
out
test
cwtl
shll
xchg
out
out
inc
shrb
mov
and
fcmovne
mov
(bad)
nop

sarl
xchg
mov
cmp
mov
cld
into
std
cwtl
push
inc
mov
jle
mov
movsl
push
ret
push
mov
scas
lcall
repnz
jp
inc
mov
cld
sti
cmp
dec
cmpsl
andl
add
(bad)
jbe
pusha
popa
pop
sbbl
mov
add
ja
lock
mov
sub
mov
cmpl
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
xorl
mov
data16
fwait

movsb
inc
mov
andl
cmc
ret
cmpsb
out
jae
pop
sahf
rcl
mov
lea
sub
sarl
mov
sbb
movsl
addr16
in
mov
repnz
scas
xor
fisubrs
push
lea
fnstsw
cmp
dec
xor
fidivrs
ret
mov
xchg
loope
and
flds
in
cld
sahf
shrl
loop
arpl
adc
lret
mov
lods
mov
test
mov
mov
mov
in
mov
addl
mov
sarl
mov
pop
bound
out
dec
in
mov
scas
jge
dec
testl
jle
(bad)
jmp
inc
mov
xor
xor
fwait

jecxz
inc
push
xchg
cs
and
movsl
mov
lods
cmp
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
faddl
cmpsb
icebp
xchg
and
sbbl
sbbl
xor
test
imul
add
ret
shlb
es
fisttpll
enter
xorl
adc
cmp
push
sub
push
cmpl
jmp
cld
les
dec
aam
stc
and
dec
rcrl
mulb
xchg
insl
mov
jmp
cmpsl
xchg
lea
inc
jmp
jle
xchg
cwtl
xchg
loop
shrb
mov
jge
xor
add
sahf
jmp
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
data16
scas
lea
shrl
pop
stos
aam
mov
lea
cld
inc
leave
inc
aas
xchg
jb
pushf
(bad)
sti
sbb
mov
lds
jp
(bad)
leave
ss
xchg
push
push
mov
mov
cmpsl
push
insl
xchg
(bad)
nop

movsb
inc
std
xor
clc
xor
(bad)
out
mov
out
(bad)
lock
into
xchg
fiaddl
test
fstpt
(bad)
ljmp
cmpsl
push
and
loopne
mov
mov
cmp
test
xchg
mov
aaa
rcr
mov
scas
(bad)
mov
pushf
add
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
fwait

mov
xchg
cmp
aad
scas
xorb
cmpsl
mov
and
mov
loopne
and
out
nop

dec
push
icebp
in
in
aaa
popa
sbbb
(bad)
xchg
mov
jb
popf
mov
std
gs
dec
push
mov
stos
inc
(bad)
push
push
pop
mov
mov
inc
dec
pop
dec
mov
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
movb
cmp
or
xor
xchg
aaa
or
dec
loopne
daa
rolb
(bad)
test
repnz
push
push
lods
mov
addb
mov
aam
std
jle
cli
xchg
dec
js
test
xor
cs
loopne
jge
lahf
add
pop
sub
mov
xor
fstpt
aam
cwtl
mov
mov
mov
cmp
adcl
mov
je
mov
mov
adcb
inc
in
mull
aaa
ret
jnp
cmpsl
sub
xchg
cmpb
mov
xchg
cmpsl
mov
enter
mov
or
pushl
sub
mov
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jns
ret
iret
push
scas
sub
mov
ss
fwait

pop
adc
pop
test
xor
test
sahf
loopne
lock
mov
test
xor
andl
mov
outsl
lea
test
pop
lcall
push
test
xlat
(bad)
cld
(bad)
adc
addr16
popfw
(bad)
adc
or
in
pop
mov
cmp
repnz
enter
popf
mov
cld
dec
add
mov
fwait

mov
mov
imul
sub
dec
shrb
test
sub
mov
ljmp
leave
daa
fstpt
xchg
push
je
and
mov
ret
inc
sbb
fsubl
inc
xchg
in
in
add
rorl
daa
cli
push
les
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xchg
les
pop
std
mov
mov
mov
xor
fisubrl
std
mov
(bad)
add
xor
xor
scas
xorb
cmp
add
inc
pushf
cmp
scas
cmp
negb
test
jle
sbb
insb
test
rorl
jmp
mov
and
cmc
popa
dec
loop
ret
scas
(bad)
stos
and
mov
mov
test
or
sahf
xor
xorl
ja
inc
sahf
lock
mov
fldenv
lea
iret
xor
mov
adc
adc
xor
adcl
es
or
test
mov
imul
lret
xor
jle
push
xchg
or
(bad)
cmc
mov
and
enter
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbb
sub
inc
sbb
inc
mov
sub
ror
jl
in
pusha
lea
jae
imul
mov
cmpps
dec
cmp
rclb
xchg
lea
stos
je
std
push
mov
push
lret
mov
dec
mov
mov
imul
cwtl
jbe
mov
fadds
pop
push
rcrb
dec
xlat
pushf
out
inc
jge
scas
out
dec
je
mov
loopne
xchg
mov
(bad)
pop
fcompl
setnp
iret
mov
insb
repnz
int
nop

lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lds
sahf
lahf
imul
mov
add
push
xorl
sbb
cmp
ret
mov
int3
dec
sub
xor
(bad)
cld
xchg
icebp
mov
enter
adc
in
pop
test
adcb
rclb
pushl
popa
js
imul
sahf
bound
(bad)
hlt
xchg
ret
shll
scas
rcr
(bad)
xor
mov
sbb
mov
jmp
fisubl
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
cmp
sub
mov
inc
pop
mov
(bad)
and
and
sub
icebp
call
testb
test
inc
xlat
loop
cmc
nop

filds
sub
shlb
jle
aam
cmp
idivb
xor
sbb
lock
or
cwtl
int
jns
clc
add
imul
(bad)
into
rorb
inc
mov
jns
lods
mov
xor
mov
fwait

mov
loope
filds
cmpsb
add
xorl
add
dec
dec
push
push
sbb
mov
int
adc
mov
jbe
aas
jge
call
inc
cwtl
out
cmp
adc
insb
mov
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
jb
inc
ja
xor
out
mov
(bad)
aam
sbbl
ds
outsl
leave
(bad)

xchg
fldl
cmpb
adc
(bad)

dec
test
mov
and
scas
xor
add
or
sbb
outsl
xchg
jbe
out
lcall
cmpb
cmp
nop

sub
fnstsw
call
neg
shl
enter
xor
or
repz
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
push
loopne
cwtl
mov
sub
pop
xor
push
mov
in
addl
mov
enter
add
cld
and
icebp
sbb
cmpb
cwtl
sub
incb
std
sub
and
pop
adc
mov
sbb
lret
adcb
lea
repnz
cltd
subl
mov
mov
xchg
fs
aad
push
mov
(bad)
sti
test
jl
ds
lea
ds
loope
mov
shlb
cmp
inc
jae
mov
outsl
sarb
movsl
mov
mov
push
cwtl
out
mov
in
lea
mov
xorb
sub
pushf
loopne
int
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
jbe
(bad)
and
mov
sub
sbb
test
in
in
bound
mov
sub
mov
mov
ficomps
aad
sub
sarl
fcompl
in
mov
mov
sub
jo
or
mov
ja
loopne
add
xchg
mov
jle
jmp
les
fstpt
les
insb
test
repz
aas
or
adc
pusha
push
xor
mov
les
push
cwtl
call
pop
mov
les
dec
lea
mov
xorl
sub
sahf
(bad)
adcl
pop
push
mov
arpl
mov
addl
lds
mov
dec
sbb
pop
add
inc
mov
orb
pop
data16
xchg
scas
mov
out
iret
rol
xor
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
sbb
xchg
into
push
jp
xor
xchg
rcl
mov
adc
jge
out
push
mov
sub
add
aam
outsb
movsl
jbe
cmc
call
test
repnz
(bad)
pop
mov
xlat
lahf
mov
scas
test
mov
mov
shrl
sti
inc
lret
mov
outsl
cli
lea
andl
pop
decb
mov
pop
adc
es
sbb
push
orb
xor
push
xor
sbb
test
push
jecxz
out
xor
lods
push
sbb
mov
mov
stos
sahf
jmp
dec
cmc
mov
test
mov
das
ror
mov
push
cmp
bound
test
imul
sub
xchg
adc
hlt
jg
outsl
jno
mov
xchg
daa
lea
data16
pop
xchg
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
sbb
test
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
rcll
mov
lods
dec
rcrb
daa
sbb
into
mov
repnz
mov
sub
lds
add
notb
mov
mov
mov
(bad)
stos
aad
out
insl
lcall
fdivl
incl
xor
xor
mov
out
cmc
cld
loope
cmp
jl
lcall
add
cli
shll
ja
xor
xchg
inc
sbb
addl
add
andl
add
inc
lcall
jecxz
mov
pop
out
movsb
dec
popa
adcb
stos
rorl
mov
fsub
cmp
sti
int
jmp
aam
jg
cs
push
imul
cli
sbb
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
rcrb
mov
loop
sub
lcall
(bad)
mov
sbb
add
(bad)
ret
mov
push
cmpsl
inc
leave
mov
(bad)
(bad)
sub
xchg
mov
daa
pop
in
bound
xor
dec
iret
lods
pop
inc
(bad)
jecxz
fsts
sub
std
outsl
in
enter
test
dec
popa
cmp
roll
ljmp
subl
test
enter
jmp
mov
filds
repnz
lcall
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
jae
int
sub
jno
hlt
or
subl
xor
mov
pop
sub
dec
outsl
rorl
je
xchg
add
mov
mov
lea
inc
jae
jge
pop
dec
sbb
inc
pop
jo
inc
push
frndint
push
push
mov
mov
xor
iret
pushf
mov
test
repnz
inc
mov
(bad)
sahf
mov
add
lds
mov
aas
test
pop
push
push
call
cmpsl
negl
sbb
andl
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lret
aas
add
cwtl
pop
cmp
ds
test
daa
rcrl
stc
or
test
nop

scas
mov
sbbl
sbb
sahf
sbb
scas
mov
sahf
dec
into
and
sahf
cs
push
cli
cmp
cmpsl
sbb
cmpsb
imul
pop
scas
push
push
sub
mov
sahf
dec
loope
je
jecxz
mov
jle
xchg
sub
loopne
xchg
xor
mov
cmp
in
scas
fsts
pop
(bad)
mov
xchg
(bad)
ljmp
mov
xchg
fisttpll
addl
adc
mov
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
add
pop
roll
enter
mov
das
(bad)
js
push
lods
mov
call
popf
scas
aad
add
filds
(bad)
inc
ss
sub
mov
out
mov
nop

xchg
adc
test
cmp
cli
push
lea
pop
pushf
in
sbb
ret
pop
push
loopne
ret
into
inc
ljmp
adc
nop

les
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
(bad)
incb
fnstsw
push
out
mov
in
pop
ret
mov
imul
popa
loop
dec
mov
sarb
mov
push
sub
scas
or
pop
andb
mov
int
frstor
cmp
jno
sahf
inc
out
test
ret
call
push
mov
loopne
ljmp
mov
in
adc
pusha
rcl
out
dec
mov
sysexit
sub
enter
cmpl
sbb
cli
rorb
sahf
add
xchg
repnz
cmpl
xchg
dec
xchg
cli
imull
mov
in
push
frndint
xor
imul
in
mov
popa
dec
sub
add
testl
cwtl
cltd
and
inc
lahf
jge
mov
cmp
xor
jge
add
stos
(bad)
mov
js
int
jbe
cmp
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
enter
orl
insl
cmp
fdivl
xorl
sbb
lock
push
test
push
cmp
jg
and
mov
std
mov
pop
les
jbe
shl
jmp
roll
cmp
out
xchg
inc
cmp
(bad)
in
inc
lock
jbe
jecxz
cmp
lods
dec
scas
je,pt
and
test
sub
inc
cmp
aad
or
movsl
(bad)
lea
cmp
icebp
lods
cmpsl
leave
out
ret
mov
xchg
jbe
xchg
ja
movsb
sbb
jge
xor
xchg
mov
insl
ret
hlt
ds
frstor
stos
push
enter
xchg
in
ja
(bad)
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
repz
roll
std
xchg
xor
cmpsb
popf
rorl
addr16
enter
mov
mov
jecxz
xor
clc
xchg
cld
mov
cmc
les
stos
call
cwtl
cmc
fisttpll
int3
int3
loope
xor
xor
push
jle
(bad)
in
jnp
xorl
xadd
mov
mul
dec
jns
inc
sub
xchg
lcall
clc
(bad)
xorb
pop
sbb
(bad)
iret
xor
cmp
xchg
fists
jbe
sub
xlat
(bad)
ljmp
jbe
(bad)

dec
cmp
stc
xor
sbb
test
pop
lcall
scas
mov
imul
stc
push
xchg
hlt
je
out
pop
lret
hlt
rep
mov
cmc
rcr
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
mov
fldcw
shll
out
mov
mov
jge
movsl
mov
mov
jge
mov
inc
mov
dec
fcmovbe
mov
test
push
in
mov
scas
jbe
stos
cld
addb
orl
pop
cld
lcall
out
fistps
fldt
adc
rolb
xchg
xor
mov
lea
pop
xchg
cmpsl
in
push
jg
call
dec
xlat
dec
dec
loop
add
sub
in
adc
xacquire
inc
add
inc
in
fbld
cwtl
cmp
inc
orl
out
ljmp
push
mov
mov
cmpb
data16
lea
mov
dec
test
jae
and
scas
call
dec
mov
mov
sub
sahf
mov
cmc
adc
adc
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
add
adc
loopne
jbe
pop
fcmovnb
mov
orb
in
(bad)
dec
cld
lret
cld
fucomip
xchg
outsb
xchg
push
mov
subl
push
cmc
push
adcl
sbb
sub
lea
test
cwtl
lea
repnz
jb
cmpsl
push
sbb
int
ficoms
add
cli
stos
loop
insb
fdiv
repnz
movsl
mov
in
xor
inc
roll
leave
(bad)
repz
push
stos
push
arpl
insb
jo
test
sbb
in
ja
adc
and
nop

movsl
sti
loop
jmp
xor
xor
inc
dec
mov
repnz
je
adc
xor
xor
cmp
popa
xrelease
and
stos
scas
mov
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
push
test
mov
scas
aam
adc
sbb
sbbb
jbe
pop
or
sahf
push
icebp
sbb
addl
mov
push
jo
cld
arpl
fadds
push
cs
and
pop
inc
sbb
in
insb
and
sub
fwait

into
sbb
cmp
fnstenv
sub
repnz
loopne
out
fildl
stc
into
pop
sbb
cmpsl
enter
mov
rcrl
test
sahf
into
cmp
mov
push
and
std
incl
mov
add
orb
mov
and
int3
adcb
push
orl
sbb
stc
mov
in
mov
int3
iret
stos
cmpsl
xor
mov
ffree
lcall
cwtl
lea
out
adc
push
icebp
sbb
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
loope
iret
dec
sub
hlt
mov
sbb
xchg
rcll
scas
sahf
bound
mov
popf
enter
stc
lcall
sahf
addb
ss
and
mov
cmp
movsl
push
mov
add
mov
cwtl
icebp
mov
fbstp
imul
mov
xchg
in
add
cmpl
in
popa
(bad)
addl
sub
push
xchg
pop
jbe
mov
js
inc
mov
jae
fmuls
dec
hlt
lds
scas
outsl
imul
sahf
sub
aaa
pop
pop
mov
les
mov
cld
push
subb
ret
jns
bound
adcl
adc
inc
push
in
loope
ret
popa
loopne
lds
pop
xchg
repnz
stos
je
jge
adc
add
icebp
pop
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xor
test
xchg
pop
lea
(bad)
push
jl
movsl
dec
popa
shlb
pop
sahf
dec
lea
(bad)
and
orl
jno
inc
inc
mov
testb
sbb
xorl
mov
sub
sti
(bad)
mov
mov
pusha
sti
aam
or
sahf
jmp
jmp
icebp
cmp
mov
mov
mov
ficomps
jge
(bad)

into
divl
add
sub
ret
jmp
orb
jle
dec
or
data16
fdivl
clc
push
movsl
jo
lea
fwait

into
sbb
test
andl
into
push
decb
jl
mov
out
movsl
mov
rolb
rcll
lret
icebp
aas
inc
movsl
sbb
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
jge
inc
xor
dec
mov
loopne
pop
fwait

int
sub
orb
cs
pushf
xchg
addl
push
xor
xchg
and
push
cli
pop
test
rcr
(bad)
ror
ret
(bad)
aad
rolb
jnp
sbb
es
pop
or
or
(bad)
sbb
stc
fiaddl
mov
push
into
(bad)
ds
mov
push
xor
xlat
adc
add
jne
movsl
push
int3
popf
out
fs
stc
lods
fwait

repnz
push
pusha
sahf
push
add
les
and
mov
testl
(bad)
xchg
popa
ficomps
test
inc
inc
add
lahf
xor
adc
cmp
sub
cmpsl
jo
xchg
push
insl
xor
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
rorb
int
test
jo
rcl
fisubl
fwait

mov
jecxz
sub
push
sbb
fistpll
sti
les
(bad)
xor
dec
gs
sti
clc
dec
adcl
sarb
adc
push
jmp
js
jp
dec
mov
ret
cwtl
dec
test
sbb
loopne
cmp
cmp
imul
mov
xor
inc
(bad)
addr16
repz
into
movsb
sarl
pop
repnz
mov
call
sbb
fwait

mov
rclb
(bad)
xor
xor
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
pusha
into
cs
into
cmpsb
mov
cmp
sub
in
in
jno
nop

loope
fs
lock
mov
sub
lea
sti
mov
into
les
jbe
pop
xlat
mov
push
out
in
pop
mov
jns
roll
aas
gs
cld
or
stos
enter
into
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
inc
shrl
push
mov
and
test
sarl
push
adc
into
push
xorb
in
xlat
jae
inc
pop
and
lcall
sahf
andl
jecxz
add
add
jecxz
mov
or
jp
rcr
mov
mov
daa
stos
test
sbb
and
cwtl
cmpsb
xchg
cltd
cmpb
jno
test
and
mov
test
sbb
adc
dec
stos
aad
dec
pop
mov
pop
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
lods
insb
fs
pushf
sub
aaa
lock
test
or
cli
jmp
push
out
xor
cwtl
out
test
xchg
jp
mov
sarl
lock
jp
in
mov
xchg
jnp
mov
stc
insl
stc
dec
sub
push
popf
pop
decb
out
jg
sbb
jnp,pt
push
xchg
xchg
enter
ljmp
(bad)
movb
mov
lret
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lds
fisttpl
inc
flds
mov
sbb
mov
pushf
popa
idivl
sarl
xchg
mov
adc
enter
(bad)
mov
jo
mov
cmp
dec
repz
addps
(bad)
dec
pminsw
xchg
pop
xchg
int3
push
addr16
testl
aad
cli
subb
loope
sbb
and
inc
pop
aas
inc
sub
mov
jge
cmc
lret
jno
sbb
mov
scas
xchg
fsubrp
ljmp
adc
cmpsb
xchg
push
and
xlat
fdivs
push
sti
push
imul
test
stc
call
test
jge
cld
pusha
push
fsubs
sbb
push
and
jno
sub
lcall
lcall
push
lods
mov
ret
cwtl
pop
or
xchg
in
shr
pop
cmp
inc
jbe
mov
add
mov
popa
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sub
lcall
fst
aad
std
es
(bad)

xchg
jge
data16
int
sar
mov
sub
dec
fidivl
pop
gs
hlt
nop

mov
in
mov
fstl
fwait

adc
sti
lock
aas
(bad)
icebp
mov
pop
sti
cmp
gs
pop
pop
mov
bound
into
adc
testl
mov
xor
pop
jbe
in
mov
arpl
sbb
inc
cmp
sbb
cmp
test
xchg
add
push
jl
out
lds
ret
jge
mov
mov
push
test
xchg
jae
aaa
xchg
mov
sbb
and
arpl
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
jbe
push
pop
or
xor
add
xchg
dec
jge
outsb
adcl
insb
gs
add
add
fwait

loope
cwtl
lea
pop
dec
scas
pop
iret
sub
xchg
fnstsw
subb
add
pop
mov
cli
rorl
jbe
xchg
mov
xchg
dec
inc
dec
sbb
cmp
pop
mov
inc
mov
xchg
jb
pop
je
push
pop
int
fimull
clc
sub
test
(bad)
int
sbb
je
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
test
mov
addb
sbbl
or
sub
sub
pushf
sbb
and
mov
sub
hlt
jbe
push
out
sbb
jp
loopne
dec
sub
test
fwait

into
sub
push
call
into
fdivr
popa
scas
loope
mov
adc
fcoml
cmp
imul
ljmp
fcomps
jp
dec
add
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xlat
mov
(bad)
nop

push
jp
out
and
fstpl
outsl
sub
lret
pushf
xchg
add
cmp
pop
and
xor
add
addl
jg
nop

add
cmc
aad
mov
fdivs
sub
jne
sbb
xorb
add
mov
jge
sub
jecxz
in
jae
(bad)
jns
cmp
cmp
mov
mov
sub
lods
into
push
xlat
ds
adc
mov
sub
ds
repz
stos
xor
sbb
ficomps
add
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
jbe
movsl
jg
inc
js
stos
push
pop
aam
aad
stos
pusha
lea
lods
jbe
push
sub
mov
fmul
out
or
lret
or
sub
nop

inc
test
push
idivl
lret
testb
or
push
jp
adc
sub
call
push
lock
xchg
sub
pop
jae
in
lds
mov
jmp
sbb
sbb
cmpsl
call
shrb
les
mov
adc
fsubr
lock
jmp
push
leave
cld
lret
scas
or
rolb
jbe
cmp
jbe
shlb
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xor
les
cmpsb
(bad)
js
mov
push
(bad)
icebp
pop
rcll
cmp
lcall
xchg
mov
and
dec
cmp
inc
add
jb
andl
in
icebp
lds
xchg
popa
ret
mov
xchg
adc
mov
aad
rolb
add
jmp
icebp
pop
(bad)
sbb
fildll
dec
icebp
repnz
dec
sti
jmp
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sub
cld
cltd
mov
cmpsb
mov
adc
mov
pop
rorl
or
cld
aam
repz
adc
(bad)
xor
or
add
les
cli
dec
jge
imul
sbb
stc
adc
xor
add
fstpt
xchg
imull
rol
mov
mov
sub
sbb
leave
cs
fwait

adc
stos
test
ret
sub
xor
cs
scas
xor
add
cmp
aaa
jp
push
lock
incl
clc
cwtl
and
aam
orl
sub
loop
fs
pop
sub
clc
xchg
mov
cmpsb
adc
fisubrs
mov
mov
jmp
push
mov
mov
or
xchg
mov
divl
xchg
inc
sbbb
mov
push
cmp
xchg
test
cltd
cs
sbb
test
cmp
jno
dec
sub
jmp
mov
(bad)
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
mov
mov
leave
popf
cld
xchg
dec
into
inc
xchg
mov
fldenv
xchg
xlat
je
out
into
int
addb
jge
push
rolb
xor
rorl
adc
xorl
push
dec
int3
lods
mov
xchg
add
adc
subl
dec
and
out
adc
xchg
xor
rcrl
into
pusha
xchg
mov
data16
mov
dec
in
or
push
pushf
(bad)
les
adc
add
mov
sbb
cmp
or
pop
leave
lea
nop

xchg
push
adc
nop

sbb
out
jnp
inc
pop
dec
xor
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
mov
ljmp
mov
push
(bad)
cmp
lret
aam
lds
scas
test
jle
mov
lods
mov
pop
mov
dec
push
fimull
movsl
or
mov
mov
xchg
loope
xor
movswl
cmpsb
orl
jo
insl
addr16
jae
into
fwait

scas
xchg
inc
dec
into
mov
rorb
sbb
adc
pop
cld
mov
add
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
inc
jbe
rcll
fmull
stc
push
pop
mov
stos
icebp
iret
(bad)
and
pop
xadd
test
lock
fcmove
rcrl
pop
test
int
sti
fs
dec
pushf
xchg
lea
addl
addl
sbb
(bad)
fnsave
orl
cld
loope
fnsave
mov
push
xchg
xorl
rcrb
inc
cld
inc
fbld
leave
dec
sahf
sbb
ret
(bad)
roll
bnd
leave
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
ds
add
test
scas
jo
in
cli
lods
cmpsl
ljmp
push
clc
(bad)
clc
cmp
test
pop
sbb
arpl
or
xchg
(bad)
lea
or
call
jnp
pop
shlb
inc
xchg
inc
pop
jne
push
enter
lea
mov
(bad)
adc
popa
out
or
int
rcll
mov
push
pop
jb
insl
ljmp
loope
add
addb
jl
push
shlb
arpl
dec
jae
jae
lds
cmc
addb
adc
pop
dec
sbb
pop
mov
push
les
pusha
pushf
lea
xchg
ret
pop
fdivrl
add
pop
lret
test
mov
mov
pop
adc
(bad)

sbb
push
xor
flds
pop
das
pop
faddp
cmp
dec
int3
test
cld
mov
shll
mov
popf
and
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
imul
xchg
loopne
mov
call
pop
xlat
xchg
mov
inc
push
ret
push
ret
lds
xor
jle
sub
int
aas
jb
sub
out
sbb
inc
mov
push
ljmp
pop
xorl
rolb
sub
ror
sbb
dec
mov
adc
dec
lret
je
fmulp
adc
push
and
inc
lret
or
sub
xor
inc
lret
fists
cmp
insl
sub
fwait

scas
sub
pop
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sarb
pop
js
pop
lret
sbb
xchg
fadd
xor
imul
and
mov
xor
sub
icebp
jo
xchg
or
sbb
xor
popf
icebp
add
out
and
xchg
add
pop
sahf
sub
popa
cld
ficompl
cmp
cltd
int
ret
icebp
mov
sbb
mov
pop
outsb
sbb
cmpsb
loopne
pop
insb
sub
sbb
gs
in
(bad)
vunpcklps
lods
incl
xchg
and
adc
daa
pop
xchg
adc
mov
or
sarb
(bad)
ffree
adc
fwait

cmp
(bad)
xchg
(bad)
scas
jb
push
adc
add
xor
pop
popf
inc
pop
adc
push
cld
xchg
test
xchg
sbb
xor
lods
fimull
mov
not
es
lock
call
push
mov
jns
cmpsl
lods
pop
imul
lods
sahf
push
movsb
in
(bad)
lcall
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
and
mov
(bad)
(bad)
fists
lods
push
or
sbb
cmc
or
dec
cld
flds
pushf
out
or
fdivrl
mov
mov
xchg
adc
adc
mov
xchg
fwait

push
repz
push
xor
in
and
xchg
jecxz
xchg
mov
test
push
(bad)
roll
mov
(bad)
sbb
xchg
into
jp
(bad)
or
fldt
icebp
addl
mov
shl
xchg
int
sahf
lds
outsl
(bad)

adc
cli
push
std
pop
cmpsl
out
lret
xchg
cmp
rol
bswap
je
outsl
mov
out
sbb
and
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xorl
jge
cmpsl
sub
jb
adc
or
mov
pop
sti
dec
sub
ja
lods
enter
jne
nop

mov
pushf
scas
mov
push
and
lcall
pop
push
jmp
out
sbb
ficompl
sbb
or
lods
push
shlb
mov
(bad)

inc
adc
push
out
add
ret
mov
or
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
fs
add
jnp
sub
lock
out
cmp
jg
fadd
adc
push
push
jno
fadds
jnp
mov
std
int
mov
push
repz
pusha
mov
into
add
in
(bad)
aam
adc
aam
sbb
pop
call
out
sbb
nop

mov
sbb
sahf
mov
cmpb
xchg
pop
inc
cmp
push
cltd
testl
ljmp
lds
mov
ss
jp
push
iret
rorb
test
xchg
push
sbb
rcr
adc
mov
lods
arpl
cmpsl
out
inc
imulb
(bad)
or
sbbb
fwait

sbb
loop
add
mov
adc
or
movsl
fld
cltd
cli
int3
mov
fstl
push
fistps
inc
mov
stc
mov
dec
add
orb
mov
inc
repz
testl
movsb
sbb
mov
xorb
cwtl
lds
xchg
popa
outsl
sbb
pop
sub
aad
roll
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
xor
aam
hlt
jbe
pop
pop
mov
data16
int
test
pusha
push
mov
jp
adc
and
inc
pop
jo
sub
out
lea
divb
mov
popa
push
sti
adc
cmp
imul
mov
les
mov
xor
lret
cmp
push
cld
faddl
out
mov
push
mov
sbb
jno
push
sub
add
fdivrp
shll
cmp
fsubrl
fwait

dec
stc
scas
dec
loope
jnp
enter
fcomi
pop
fildl
comiss
sbb
incb
loopne
xor
jns
fisttpl
nop

movsb
jae
mov
(bad)
pop
leave
out
sub
cmp
mov
loope
and
and
int
ja
mov
xchg
leave
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
scas
jg
or
mov
leave
insl
jbe
adc
hlt
mov
cwtl
in
stos
dec
leave
sbb
clts
data16
ljmp
xchg
jbe
pop
mull
mov
or
rcll
add
ds
xchg
enter
cmp
pavgb
adc
jb
cmpsb
mov
add
mov
mov
(bad)
xor
cmp
or
rcr
mov
push
stos
pop
mov
fisttpl
lods
leave
and
stc
daa
push
std
pop
inc
inc
ds
rorl
nop

enter
out
sbb
leave
push
or
cld
fstl
arpl
cli
mov
ss
out
add
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
scas
out
pop
push
pop
jb
rcl
orb
mov
adc
nop

enter
dec
loop
fs
jle
cmp
add
jne
pop
xchg
fnstenv
lods
movsl
add
test
out
(bad)
fstps
cli
loop
push
notb
test
or
movsl
cs
movsl
loop
fnsave
out
adcb
cmp
push
lea
imul
cli
push
mov
(bad)
cmpsb
lea
jmp
dec
xchg
sbb
test
out
inc
mov
jne
cmp
mov
cli
inc
fsubrs
ret
mov
sahf
dec
and
insb
ret
push
scas
(bad)
loop
cltd
test
inc
les
sbb
std
imul
mov
fldl
int3
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
(bad)
iret
and
sbb
sub
andl
ljmp
sub
rcl
sub
and
cmp
andb
shll
and
add
fs
fadds
fwait

lret
mov
frstor
sub
(bad)
aad
and
lahf
sub
sbb
lock
and
xchg
cmp
cmp
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
sbbb
push
sar
aas
out
(bad)
aad
mov
xor
popa
mov
test
mov
in
adcl
jbe
sub
jmp
sub
test
stos
xchg
mov
jge
xchg
cli
sub
push
sahf
sub
hlt
mov
sub
cltd
mov
adc
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sub
inc
jp
push
stos
and
inc
fcmovnbe
xchg
sub
loop
jle
scas
sub
hlt
or
mov
stos
sbbb
inc
inc
xor
inc
jbe
mov
bound
sbb
and
push
xchg
je
jl
xor
iret
sub
dec
outsl
cmp
or
and
(bad)

push
inc
mov
movsb
jl
adc
mov
test
outsb
mov
xchg
sbb
cmp
add
decb
adc
mov
xor
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adc
arpl
add
sub
mov
je
sub
shrb
arpl
fnstsw
adc
fistps
das
lret
enter
testb
pop
jne
stos
mov
jne
sub
push
add
pop
into
cmp
pop
adc
cmp
cltd
mov
ret
mov
or
xchg
imul
psllw
stos
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cwtl
arpl
stc
mov
mov
ror
push
push
cmp
dec
nop

in
jae
jp
cmp
rol
lahf
adc
jb
cmp
movsb
xor
test
jo
mov
mov
and
fistpll
into
shrb
add
shr
test
das
jae
(bad)
fstl
and
sbb
loop
push
mov
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
lcall
inc
call
xor
push
or
sarb
stos
xchg
outsl
jbe
cwtl
xchg
test
push
test
dec
clc
lret
cmp
push
adc
popf
dec
sub
pusha
pop
jnp
shlb
or
call
cmpb
dec
lahf
xchg
push
jne
fistl
insb
popl
in
jne
shl
loop
sbb
jnp
lods
adc
push
add
shl
pop
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
sbb
inc
scas
lret
cmpsl
mov
cli
mov
popf
jg
mov
and
mov
sub
dec
nop

and
rol
jae
push
jg
flds
add
xor
jge
int3
ret
inc
iret
std
(bad)
into
iret
int
adc
lock
inc
rdtsc
into
loop
test
sub
sbb
cli
test
clc
fcmovne
push
push
mov
sti
mov
out
xchg
xchg
bound
jg
sub
test
and
mov
ffree
mov
dec
jbe
pop
cmp
cs
enter
stos
int
mov
iret
(bad)
xor
(bad)
stc
push
lret
cwtl
inc
cmc
mov
lods
dec
jecxz
ja
add
iret
ficoms
rcrb
(bad)
arpl
repnz
shll
lods
cmp
lret
xchg
fistpll
inc
jno
push
movsl
sbb
out
push
ljmp
(bad)
fs
inc
or
mov
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jl
adc
clc
fisttpl
arpl
in
and
xor
test
push
adc
jae
mov
mov
testb
scas
(bad)
or
dec
rclb
xor
popl
mov
jle
pop
jg
xor
dec
lea
test
sub
mov
and
cmp
push
mov
xlat
or
fwait

dec
popa
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pop
lods
mov
out
ret
pop
test
mov
les
out
cmp
push
xor
xchg
dec
or
std
push
mov
std
adc
dec
stos
jbe
sbb
push
push
adc
pop
aam
es
dec
ret
inc
mov
cli
xorb
test
xor
add
mov
adc
mov
add
pop
sbbl
loope
ja
movsb
and
pop
add
(bad)
fwait

stos
lea
dec
fcmovnbe
(bad)
cmp
xchg
pop
daa
lock
fcoml
inc
sbb
rcrb
nop

loopne
jnp
push
jns
jmp
scas
fistpll
insb
test
test
and
dec
outsb
lea
mov
lods
cli
push
mov
or
test
mov
(bad)
das
inc
fnsave
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbb
sbb
test
test
arpl
sbb
adc
aad
movsl
add
rorb
subl
xlat
les
int3
std
mov
pusha
outsl
addr16
cmp
sahf
add
push
cmpsb
iret
lods
dec
xchg
int3
jle
loopne
fs
setno
cwtl
mov
icebp
adc
fnsave
xor
sti
mov
dec
adc
mov
xor
xchg
xlat
andl
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
mov
cli
cmp
(bad)
add
fbstp
xchg
inc
fdivrl
cmc
psraw
mov
pop
in
jmp
ja
lea
lods
or
xlat
sqrtps
out
das
fidivrl
cmovbe
test
and
push
sbb
mov
in
loopne
mov
je
mov
stos
(bad)
cmp
stos
sarl
dec
movsl
stos
mov
pop
enter
or
jns
xchg
cmp
pop
insl
mov
test
int3
btl
hlt
or
mov
leave
xchg
loop
sbb
fwait

shlb
pop
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
leave
sbb
push
xchg
sub
xlat
xchg
sbb
dec
and
rcl
pop
push
addr16
std
lock
add
mov
jns
je
mov
mov
xchg
ljmp
adc
cmp
fimuls
(bad)
test
lcall
mov
sahf
ret
xor
cmpl
sub
popa
popl
push
sbb
add
ss
dec
roll
add
sbb
fiaddl
lret
or
jg
mov
xor
test
mov
clc
cmpl
mov
cmp
bound
insb
test
lret
hlt
in
xchg
sbb
add
xor
in
ret
in
rcrl
in
lods
jg
add
xchg
inc
xor
out
adc
clc
sahf
fildll
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
mov
(bad)
xchg
ret
dec
(bad)
push
or
leave
cmp
fstps
push
roll
pop
add
sbb
leave
mov
fwait

test
je
les
aad
fisubrl
cli
repz
std
inc
and
mov
(bad)
jmp
mov
inc
jge
jo
cmpl
xchg
inc
jge
cmp
inc
std
(bad)
or
push
stos
mov
adc
hlt
inc
call
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
or
ss
aaa
mov
gs
pop
jae
inc
test
outsl
mov
cli
mov
iret
mov
and
(bad)
inc
loopne
sbb
sub
sbb
sbb
cmc
cmp
xor
wrmsr
out
pop
scas
test
stc
into
movsl
xlat
xchg
not
in
(bad)
(bad)
test
mov
sbb
mov
test
sbb
mov
mov
addb
xlat
push
jmp
(bad)
xchg
int
jmp
fwait

mov
ret
and
nop

and
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pop
mov
mov
dec
and
fwait

sti
lock
push
rclb
push
or
(bad)
dec
sbb
sahf
ss
bound
ljmp
cmpsl
int
fdiv
pop
pop
and
mov
sub
add
pop
jo
test
xor
test
cmp
jecxz
call
int
push
test
pop
icebp
xchg
sub
iret
mov
fdivrs
divl
sti
icebp
push
hlt
dec
sbb
decb
xor
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
xchg
xor
arpl
mov
sbb
test
push
xor
lret
push
fs
aad
data16
cwtl
xchg
mov
dec
mov
out
xor
test
xchg
test
jb
stos
(bad)
aas
rol
test
pushf
sub
std
pusha
test
mov
aas
and
outsb
mov
leave
insb
adcl
xor
fwait

pop
push
stc
pop
add
mov
jns
dec
into
xchg
jno
push
mov
push
or
iret
add
jbe
mov
jecxz
jb
insb
clc
xor
(bad)
sbb
cwtl
scas
jmp
adc
sub
cmc
clc
adc
mov
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cld
insb
in
add
pop
ja
or
push
cltd
mov
or
testl
mov
pop
insb
int
addr16
xor
mov
xchg
out
inc
insb
out
loopne
lds
out
jp
rclb
fsubrs
in
clc
adc
mov
std
insb
add
out
clc
mov
xor
and
rcrb
mov
xlat
jp
stos
(bad)
jmp
mov
imul
shlb
iret
mov
sbb
inc
jg
pop
and
pusha
insb
fidivs
int
inc
cwtl
jae
cmc
sbb
insb
pop
ss
les
imul
add
int
clc
xor
sti
mov
cmpsb
and
push
xor
jg
mov
sti
jno
leave
sub
adc
loop
lea
jp
sbb
sti
roll
sbb
fcmovb
xor
lods
mov
jo
roll
fildl
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pop
and
loopne
and
lds
call
xchg
pop
cmp
nop

xor
stos
xor
jge
sub
inc
sbb
aam
aaa
filds
mov
lcall
lods
cmp
mov
cmp
xchg
pop
mov
pop
jle
cmovs
mov
movsl
icebp
adc
int
jae
push
aad
pop
add
hlt
rclb
sub
jecxz
jle
xchg
leave
mov
aas
je
push
pop
repnz
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
cmc
xor
push
sbbl
inc
add
jbe
xor
and
xabort
mov
pop
push
(bad)
jns
das
scas
gs
negl
icebp
ror
leave
dec
imull
ja
sahf
mov
xchg
mov
fildl
test
xchg
sub
jns,pt
shlb
pop
cld
(bad)
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lret
add
lock
sbb
sbb
xlat
mov
push
mov
mov
stc
mov
adc
in
scas
inc
lret
fstpt
loopne
aad
js
mov
adc
(bad)
xor
std
stos
aam
and
mov
pop
lret
mov
mov
inc
jae
mov
fisttps
test
hlt
mov
or
jecxz
icebp
sbb
sbb
lds
icebp
stos
dec
pushf
pop
or
add
test
lret
adc
les
sahf
cmp
mov
cmp
cmp
andl
out
jp
adc
cmpsl
cs
cmp
mov
pop
dec
js
loopne
xor
xor
mov
adc
rorl
pop
cltd
push
lret
stc
in
outsl
xor
clc
fldl
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
(bad)
bound
xchg
es
icebp
mov
xchg
mov
sub
icebp
push
pop
mov
inc
xchg
stos
cmp
sub
andb
icebp
inc
jecxz
pop
and
daa
icebp
jecxz
cmpsl
rol
rcl
cmpsb
repz
fstp
pusha
clc
icebp
xchg
jno
sbb
xchg
xchg
sti
movaps
icebp
push
imull
xor
or
stos
clc
enter
es
lret
cmpl
sbb
push
push
add
xchg
mov
cmp
movsl
dec
addr16
mov
ds
add
inc
cmp
adc
jo
xor
mov
aam
jae
shl
add
inc
mov
xchg
dec
in
rorl
lahf
lock
mov
lret
lcall
mov
adc
mov
pop
xor
xchg
add
insb
xchg
rcr
inc
mov
cmp
inc
inc
mov
mov
mov
xor
test
lods
adc
enter
in
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adc
imul
xchg
(bad)
jb
mov
outsb
fstpt
adc
pop
adc
ljmp
or
enter
xor
lret
fwait

sbb
int
push
pop
cld
mov
imul
jl
in
and
imul
enter
adc
test
jae
mov
stos
and
mov
enter
ret
xchg
mov
xlat
xchg
mov
inc
sbb
xchg
outsl
je
pop
jno
xlat
fistpll
fisttpl
sbb
sub
add
push
stc
mov
adc
punpckldq
xor
dec
sysexit
dec
aaa
jno
nop

xchg
rolb
pop
insb
cwtl
(bad)
addr16
cld
sbb
inc
mov
mov
xchg
adc
adc
in
aam
xchg
xchg
fwait

cld
xlat
mov
mov
mov
stc
xchg
aad
lods
pushf
loope
dec
push
cwtl
dec
xchg
fdivrs
pop
jge
push
add
jl
mov
xchg
jmp
stos
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
adc
mov
outsb
jbe
sbb
out
fst
fs
cmp
lock
scas
pop
push
pop
ficoms
xorl
dec
mov
pop
enter
cmp
mov
ret
std
fiaddl
jnp
out
add
mov
jmp
cmp
ds
(bad)
cmp
leave
jbe
into
mov
dec
xchg
mov
adc
push
jne
push
sub
mov
out
or
xor
add
jle
icebp
push
jb
xlat
int
mov
(bad)
sti
mov
int
and
test
outsl
out
fistpl
mov
or
mov
(bad)
and
in
std
jb
or
into
in
xchg
xchg
jmp
lods
add
mov
or
cmp
sbbb
orl
push
fisttps
adc
test
sub
movsb
inc
iret
xor
rcll
jbe
push
sbb
inc
sti
mov
push
pop
test
fdivrp
arpl
pop
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xor
add
jg
xchg
shlb
ret
cld
scas
mov
sub
adc
adc
mov
inc
sub
inc
dec
pop
enter
orb
fdivl
std
jnp
das
test
test
out
push
outsb
je
add
sbb
ret
cmpsl
outsb
sub
xchg
push
shll
cld
mov
jl
dec
jl
popa
pop
into
sahf
lods
aad
icebp
sahf
jnp
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
imul
hlt
adc
outsl
into
mov
imul
movsl
and
lock
push
fdivl
sbb
or
xchg
movsb
ret
jmp
lds
test
xchg
fldenv
jmp
stc
ret
mov
lds
mov
add
mov
sahf
shlb
js
(bad)
lock
aam
rolb
pop
nop

std
jmp
xor
mov
scas
cmovl
cmpl
adc
jge
mov
sarb
dec
sbb
inc
(bad)
aad
sbb
lea
mov
movsl
adc
xchg
xchg
out
cmc
mov
pop
repz
bound
loope
dec
(bad)
rorb
fcoml
out
mov
lcall
setbe
nop

popf
shr
sub
rolb
jb
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
int
movsb
or
repnz
test
imul
sarb
shld
popa
(bad)
pop
orb
add
std
or
mov
loopne
xor
inc
cmpsb
leave
dec
scas
push
sub
xchg
dec
mov
push
jmp
xor
setg
push
add
aaa
iret
ret
sbb
fwait

orl
orl
xchg
sub
lcall
xchg
add
mov
int
shrb
movsl
pop
fsubs
movsl
call
cmp
lret
jmp
dec
or
je
lret
xchg
add
sub
mov
jmp
or
lcall
xlat
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
in
xor
jge
mov
(bad)

adc
pop
sbb
call
inc
insl
dec
ljmp
and
icebp
test
push
xchg
mov
(bad)
pop
fs
add
and
mov
idivl
dec
sbb
nop

scas
cmp
inc
push
push
in
sbb
cltd
cmp
ds
mov
xchg
ja
icebp
lahf
xchg
insb
and
es
rcrb
or
sub
sbb
shrl
sub
rol
pop
adc
loop
mov
les
repnz
loopne
fsubs
arpl
test
xor
sbb
ss
xchg
fdivrl
fwait

adc
es
push
pop
mov
push
int
add
and
sub
xorb
arpl
xchg
or
add
mov
repnz
pop
test
or
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
xor
xchg
orl
sbbl
fstpl
call
mov
pop
arpl
in
push
out
xor
mov
push
orl
adc
cmp
or
mov
icebp
or
mov
push
and
iret
mov
outsl
icebp
es
add
push
pop
movsb
imul
push
icebp
add
outsl
lret
adc
mov
xor
sub
ret
xorl
lret
push
or
pop
icebp
test
outsb
fnsave
pushf
mov
fwait

mov
shl
je
andb
(bad)
sbbb
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
push
int3
test
sahf
xchg
popf
in
cmp
push
addb
flds
inc
ja
or
dec
add
icebp
stos
gs
sub
orb
jns
test
jge
push
mov
push
and
cmp
cmpl
insl
sub
xchg
mov
mov
mov
out
inc
(bad)
cwtl
cmp
xor
pop
out
loop
fwait

xor
adcb
xchg
jmp
cmp
insb
sub
(bad)
pushf
add
push
xor
sbb
into
jge
subl
lea
sub
xchg
jg
jecxz
mov
pusha
sub
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
into
sahf
(bad)
(bad)
sub
add
or
cltd
out
adcb
push
and
test
mov
mov
fnop
pop
pop
or
leave
jp
(bad)

cltd
jl
adcl
xchg
in
popf
inc
mov
lahf
add
orb
or
dec
aas
scas
loop
lahf
mov
xchg
xchg
jnp
sub
xor
or
xor
push
or
andb
jnp
mov
add
push
xchg
mov
imul
dec
andl
addl
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
leave
ficoml
leave
cmp
inc
inc
pop
enter
lds
mov
cs
and
add
adc
(bad)
lahf
test
or
loope
pop
push
movsl
push
(bad)
mov
je
and
mov
jno
stc
(bad)
ljmpw
xchg
push
rcr
(bad)
int
add
jecxz
pop
fwait

push
xchg
inc
cmp
imul
les
mov
xchg
fstpt
scas
pop
aad
out
loopne
cmp
arpl
in
and
bound
xchg
lods
int3
adc
shll
mov
aaa
mov
andl
call
fs
fisubl
push
push
xchg
sti
insb
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
inc
mov
out
popf
sbb
sub
cwtl
outsl
(bad)
push
xchg
and
lret
push
rorb
sub
mov
stc
and
test
daa
xchg
mov
dec
mov
fwait

call
add
je
cld
dec
aad
imul
int3
shll
lock
dec
inc
jecxz
test
es
cmpsl
mov
test
rcr
daa
mov
cwtl
lret
and
and
dec
stos
rcrb
fmull
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
scas
and
mov
jecxz
add
sbb
pop
es
bound
dec
mov
add
jle
xor
add
lret
xor
cwtl
outsl
xor
cmc
packuswb
mov
mov
sub
fwait

icebp
fbld
mov
inc
and
sahf
pop
pop
push
jo
sbb
sbb
pop
negl
add
fldcw
and
inc
xorb
and
nop

sbb
sub
jae
int
test
fnsave
mov
ja
jo
pop
inc
shlb
push
xchg
shll
mov
(bad)
in
(bad)
jecxz
je
mov
addb
cmp
xchg
gs
(bad)
iret
jns
jae
sbb
das
scas
dec
sbb
movsb
mov
scas
add
mov
lds
and
in
xor
jne
pop
inc
jle
fsubr
pop
es
out
or
aaa
adc
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
mull
pop
and
ljmp
jmp
ss
into
jbe
or
shld
mov
ret
mov
inc
adc
fsubs
scas
notb
inc
cmp
jne
mov
call
inc
aad
repnz
cmpsb
jmp
fs
rcrl
call
mov
fwait

add
mov
(bad)
pop
mov
lds
push
xchg
mov
mov
cmp
mov
sub
mov
cld
mov
mov
mov
je
sahf
into
mov
inc
lcall
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
shrl
(bad)
lods
lahf
jnp
mov
sbb
and
xchg
mov
popa
fnsave
xchg
mov
mov
mov
mov
xchg
push
lds
test
popa
hlt
mov
pause
pushf
cmp
add
mov
out
movsl
dec
jne
or
mov
call
ret
movsl
mov
imul
loopne
jge
daa
pop
or
jnp
push
fistl
mov
subb
and
inc
ret
ficoms
(bad)
int
loop
les
loop
xchg
adc
test
push
add
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
add
xchg
and
jno
sahf
nop/reserved
ret
dec
sarb
mov
lahf
repnz
lcall
stos
jl
push
sbbb
inc
leave
cmp
dec
nop

gs
leave
test
mov
mov
nop

pop
mov
dec
pop
aaa
xchg
xorl
adc
fs
push
into
push
ja
aad
adc
aaa
fnstenv
mov
leave
in
cmp
cltd
std
dec
push
js
push
xchg
dec
rcr
leave
into
nop

cmp
pop
add
mov
xchg
leave
mov
mov
es
stos
inc
push
mov
xchg
jle
leave
rcrl
add
jnp
mov
jg
test
fcoms
iret
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
dec
test
jo
test
push
ds
js
lds
and
or
enter
mov
jmp
dec
or
fnstsw
test
mov
jg
leave
addr16
fnsave
pop
test
rcll
adc
jg
leave
(bad)
leave
in
fsts
push
pop
cwtl
sbb
or
addr16
int
jp
mov
xchg
call
(bad)

pop
lds
shr
xchg
or
in
xor
jbe
subb
jmp
les
loopne
mov
xchg
cmp
aam
cmp
not
clc
cmp
mov
loope
dec
sub
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
push
xor
xchg
and
fsubrl
stos
in
push
push
jl
xchg
push
mov
jle
sub
jb
cmp
jle
ljmp
jo
mov
mov
mov
push
lret
test
(bad)
shrb
cmpsb
lcall
push
fimull
cs
sub
movsl
mov
stos
push
fcomip
jne
icebp
lret
iret
mov
xor
and
fxch
cmp
jnp
push
adcb
fisubrs
pop
sub
xchg
leave
outsl
mov
sbb
inc
test
das
outsb
inc
fbstp
mov
lock
(bad)
out
fstps
xor
xchg
jo
cli
push
inc
int3
bound
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
or
subl
je
sub
mov
addl
shrb
lret
popa
out
movsl
jo
popf
xchg
pushf
int
push
popf
jmp
xchg
mov
push
loop
stc
(bad)
mov
push
and
mov
aaa
daa
mov
popa
ljmp
mov
test
sub
jge
pop
loop
flds
(bad)
test
pop
mov
and
add
clc
ljmp
je
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
or
inc
adc
sbb
fldcw
inc
or
(bad)
jmp
xchg
cmp
test
(bad)
adc
dec
iret
test
lock
test
lods
mov
(bad)
lods
movsb
jg
repnz
leave
test
cmpsb
xchg
in
andb
into
sbb
cmp
or
sbb
cmp
lea
sub
jne
lahf
stc
mov
gs
mov
dec
loop
xor
je
stos
in
mov
dec
mov
sti
cli
stc
or
or
pop
dec
add
adcb
jbe
xchg
dec
mov
or
popa
std
out
mov
adc
xchg
dec
and
cmp
scas
inc
mov
mov
inc
xor
(bad)
out
sbbl
cmp
into
clc
aad
fs
pop
mov
pop
pop
sub
(bad)
das
fwait

adc
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
push
mov
sub
push
push
push
mov
push
call
push
push
push
mov
push
call
call
mov
mov
push
call
add
push
mov
push
call
mov
mov
push
mov
push
call
add
test
jne
xor
jmp
push
push
push
lea
push
call
test
je
lea
push
call
lea
push
call
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
and
hlt
fcompl
add
scas
mov
iret
sub
add
jbe
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
clc
sbb
push
cmp
mov
punpcklwd
out
mov
movsb
xchg
mov
xchg
jbe
scas
insb
mov
mov
sbbb
stos
scas
jg
(bad)
(bad)
sbb
in
repz
mov
cltd
add
ds
les
cld
out
lret
(bad)
mov
cwtl
jg
or
in
call
ffreep
sub
mov
xor
pop
subl
test
iret
dec
inc
scas
push
mov
fs
jae
xor
xchg
movsb
imul
xorb
cs
das
sub
test
or
xchg
inc
icebp
xlat
lock
cmp
and
mov
fwait

aaa
aad
je
sub
xor
fmull
mov
jl
xor
sub
and
jge
jae
adc
imul
bound
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
andb
movsl
(bad)
aam
shlb
popa
pop
or
jmp
out
xchg
stos
imul
dec
xor
stos
add
incb
jge
in
out
enter
test
cmp
mov
stos
mov
sarl
js
aaa
pop
jge
mov
in
xor
jo
pop
jb
clc
lods
pop
mov
(bad)
cmp
add
int3
out
and
add
add
dec
mov
cld
add
push
mov
ret
popa
sarl
jle
sbb
pop
or
loope
lcall
mov
sub
mov
mov
lods
push
nop

cmp
test
mov
jg
imul
fs
cmpsb
add
out
lahf
scas
jae
pop
enter
mov
xchg
rolb
adc
lret
cmp
dec
sbb
adc
mov
xor
push
popf
fcomps
movsb
jl
sub
mov
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
out
arpl
insl
mov
lcall
enter
fstpl
fsubs
test
stc
push
push
sub
cmp
adc
jp
sub
add
outsb
loope
xchg
popf
mov
mov
lea
push
xor
repnz
pop
cli
xchg
pusha
fs
or
pusha
xor
lret
jne
dec
push
mov
addb
xor
inc
xor
fs
aas
cli
sub
clc
push
ret
xchg
jb
xchg
aas
aaa
int3
adc
addr16
int3
cmp
mov
fsts
mov
mov
into
subl
mov
stos
mov
pop
mov
xor
shlb
sbb
push
fdivp
in
dec
(bad)
dec
(bad)

imul
arpl
adc
leave
mov
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
rorb
mov
int3
clc
sti
fwait

rcrb
sahf
or
pop
test
push
jge
int
mov
lea
or
push
dec
repz
shl
js
pusha
sub
pushf
std
jge
hlt
(bad)
arpl
push
orb
hlt
scas
cmpsb
das
xchg
mov
adc
stos
movsl
cmp
inc
lahf
cs
ljmp
jo
pop
cmpb
adc
(bad)
shrb
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pop
mov
mov
xchg
aaa
test
inc
into
mov
outsb
in
add
cmp
dec
loopne
out
fidivrl
mov
rorb
(bad)
inc
je
pop
jae
out
idivb
cwtl
push
aas
fisubl
(bad)
or
mov
insl
inc
out
adc
adc
sbb
std
in
inc
imul
loop
out
movsl
ret
xchg
mov
scas
nop

cli
(bad)
out
push
mov
lods
mov
je
jnp
mov
rcrl
xor
pop
stos
es
adc
in
inc
pop
add
out
in
xchg
sar
adc
xchg
mov
push
mov
and
enter
jnp
das
aas
(bad)
xor
mov
xor
movsl
icebp
jecxz
in
mov
stc
jae
push
pushf
int
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
lret
clc
or
cmp
xlat
ljmp
push
in
mov
push
sbb
sbb
shrb
pop
popa
imul
(bad)
cltd
jl
pop
shl
in
and
(bad)
aam
add
mov
push
xchg
lea
bnd
mov
aam
enter
dec
cs
fcoml
(bad)
movsl
ret
mov
pusha
in
mov
sbb
sub
cmpsb
xor
aad
out
inc
pop
movsl
les
fxtract
shr
pop
shlb
rcrb
push
pop
(bad)
or
icebp
dec
cwtl
mov
mov
(bad)

jno
int
xor
pop
in
movsl
stos
jecxz
adc
pop
and
pop
inc
stc
test
clc
movsb
scas
in
or
adc
xchg
add
xor
gs
add
(bad)
push
pushf
add
mov
xchg
push
loopne
or
addb
pushf
dec
jae
in
cmp
dec
test
lcall
cmp
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
out
sbb
mov
dec
das
outsb
mov
cltd
clc
mov
out
lods
in
repz
(bad)
pusha
hlt
(bad)
jge
push
mov
mov
mov
pusha
jle
cmpl
mov
fnstcw
lods
outsl
and
int3
cli
sub
sub
push
sbb
icebp
into
and
rcrb
repz
gs
jnp
push
fistps
lahf
shll
lea
push
adc
xchg
push
loopne
lret
mov
insl
in
in
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
es
pop
lret
mov
repz
jb
das
(bad)
push
bound
cli
mov
stos
mov
into
inc
xor
out
lret
outsl
or
rcll
pop
inc
sbb
movsb
adc
jnp
mov
jle
cmp
pusha
sub
jge
xorb
rcrl
inc
ljmp
adc
adc
and
cmp
pusha
gs
fstpt
xchg
cmp
sar
pop
lret
jg
sbbl
sbbb
pop
add
xchg
cmc
andl
lahf
out
test
and
loopne
add
adc
insl
lods
imul
adc
aam
inc
gs
ss
es
jg
xchg
mov
push
cmp
mov
loope
mov
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
mov
data16
sub
xchg
xor
push
fldl
add
(bad)
fcoml
adc
fwait

cmp
test
pop
xchg
xchg
lods
leave
arpl
aam
ret
sbb
mov
cmpb
std
or
add
or
jecxz
cltd
loope
and
dec
gs
cmpsb
and
scas
mov
mov
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jp
hlt
loop
dec
mov
adc
fisubrl
jle
pop
les
cmpsl
(bad)
cmp
mov
rcr
jge
repz
xchg
fisttpll
sbb
mov
pop
pusha
popa
sub
scas
fdivrp
add
sbb
inc
add
xchg
fldenv
mov
inc
mov
nop

pop
fisttps
in
inc
loop
scas
sub
adc
orl
(bad)
sbb
mov
xchg
xchg
fldl
cmp
sub
cmp
scas
sub
mov
fsts
jmp
repz
mov
xor
cli
bswap
jnp
fistpl
outsb
cltd
ret
mov
mov
lock
sbb
xlat
mov
xchg
push
ret
jbe,pn
repz
push
movb
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
rclb
loope
and
test
cli
or
mov
xchg
mov
movsl
cmp
xor
test
stos
xchg
and
jle
and
je
mov
or
shlb
and
adcl
hlt
out
sbb
(bad)
ja
sbb
aaa
pop
movsb
xor
filds
fsts
jae
aad
cmpsb
mov
inc
leave
test
mov
iret
add
aas
sbb
cs
jl
sbb
mov
int3
push
iret
out
cli
call
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
or
enter
cmpb
jb
fwait

mov
add
pop
lahf
cmp
or
sub
cmpsl
xchg
lea
lret
add
loop
xchg
jge
ja
mov
inc
push
enter
cmp
mov
dec
in
or
push
lock
mov
lcall
shl
int3
inc
xlat
and
jp
out
rorb
adc
mov
bound
(bad)
outsl
rcrb
jns
sub
clc
cwtl
mov
jbe
shl
addr16
and
inc
test
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xchg
gs
(bad)
ljmp
adcb
ljmp
cltd
jbe
xchg
bound
stos
xlat
bnd
(bad)
repz
lahf
ret
mov
lea
mov
subb
mov
mov
inc
or
sar
pushf
cli
cli
push
xchg
test
mov
hlt
mov
sub
(bad)
mov
mov
jne
aad
cwtl
or
xor
aaa
sub
sub
jno
lods
sub
adc
scas
imulb
pop
adc
into
sub
inc
mov
loope
hlt
cmpsb
es
xchg
pusha
pop
jmp
or
sbb
dec
push
xchg
mov
fstpt
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
add
in
test
adc
adc
(bad)
jg
mov
adc
(bad)
arpl
add
push
clc
and
mov
pop
loop
sbb
mov
sub
aam
sbb
mov
out
push
out
sbb
dec
test
jno
addr16
in
aam
je
stos
adc
cwtl
xchg
sub
aad
dec
lods
ljmp
out
mov
add
jnp
pop
stos
loop
test
test
mov
std
inc
mov
mov
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adc
fisubrs
stos
add
stc
pop
push
iret
sbb
ret
test
faddl
insl
jbe
or
test
mov
jbe
mov
jl
sbb
xorb
call
mov
adcl
cmp
cld
or
adc
cmp
jnp
gs
jge
jle
movsl
xchg
(bad)
(bad)
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
add
orb
(bad)
pop
lret
ret
es
mov
fsts
in
(bad)
sub
aaa
pop
movsl
loopne
add
inc
out
xor
jno
dec
inc
jnp
sub
jnp
rclb
adc
inc
lret
lret
pop
cltd
test
xchg
lea
mov
outsl
stos
dec
sbb
repz
or
fwait

add
adc
jecxz
xchg
inc
daa
imul
inc
pop
mov
(bad)
pusha
inc
dec
xchg
stos
cld
or
ljmp
(bad)
pop
sbb
push
data16
jo
test
adc
out
in
inc
mov
mov
jge
clc
xchg
fwait

sub
fs
mov
mul
jecxz
out
lock
testl
imul
jecxz
mov
push
data16
mov
in
nop

mov
sub
popa
push
mov
gs
dec
clc
dec
cld
(bad)
dec
push
fists
lock
jns
cld
je
mov
mov
test
hlt
xchg
or
sub
loope
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
(bad)
adc
test
cwtl
push
or
mov
mov
ds
xchg
pop
clc
gs
in
fsts
repz
repnz
xchg
loope
push
fldt
loop
adc
add
das
aam
js
shlb
mov
sbb
in
fwait

mov
cmp
int3
push
decl
test
lret
cwtl
xorb
xor
mov
nop

subl
cwtl
or
cmp
in
jne
inc
out
call
inc
cmpsl
outsb
insb
ds
pop
mov
sub
insl
mov
lret
mov
adc
out
adc
mov
jne
je
iret
data16
mov
xor
add
(bad)
int
xchg
ret
push
scas
xor
sbb
(bad)
and
mov
dec
mov
movsl
or
adc
repnz
push
lds
push
inc
mov
and
push
cld
sub
mov
rcrb
mov
clc
and
mov
jge
filds
push
jbe
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
and
pop
inc
add
fmull
mov
and
xorl
int3
ja
(bad)

stc
push
add
dec
rorl
xor
mov
sahf
mov
or
dec
lock
xchg
les
jno
addl
mov
decl
aam
or
xor
mov
push
daa
cmc
outsb
rclb
lea
sub
stos
movsl
enter
adc
xor
add
or
dec
ss
jae
inc
push
(bad)
outsl
mov
testb
push
adc
pop
mov
fidivrs
pop
xor
lea
nop

leave
ja
push
jl
mov
cmp
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
test
mov
dec
cli
nop

arpl
jae
mov
push
lret
jmp
cltd
lods
adc
adc
xor
adc
idivl
pop
cwtl
xchg
imulb
mov
ret
jmp
dec
inc
outsb
sahf
outsl
push
call
jmp
sarl
fisttps
dec
or
js
gs
push
xchg
and
lea
add
incb
and
mov
fld1
pop
lods
gs
lods
fucom
arpl
das
mov
xor
ret
test
fs
cmp
sbb
movsb
(bad)

clc
call
jmp
jle
add
cli
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sbb
(bad)
mov
call
movsb
adc
push
fiaddl
xor
aad
insb
nop

imul
(bad)
pop
xor
xchg
lret
add
push
mov
and
mov
xchg
adc
add
les
push
ja
les
dec
lds
push
lcall
subl
jae
fisubrs
(bad)
test
inc
inc
inc
sbb
js
loopne
lock
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
inc
sbbl
stos
(bad)
inc
or
fmuls
ffree
(bad)
push
loope
fcmovnu
test
mov
jbe
fs
or
add
jns
data16
push
dec
sub
mov
sub
(bad)
jmp
mov
dec
push
dec
and
addl
push
call
lea
(bad)
sub
in
lret
jmp
lock
push
adc
mov
pop
loop
cltd
out
adcb
xor
out
push
inc
xchg
push
movsb
mov
movsb
repnz
shll
pop
test
jbe
ljmp
and
das
xor
movsl
xor
adc
leave
pop
ja
jp
jb
(bad)
cmp
test
shlb
pushf
in
ds
dec
mov
jno
popl
out
xor
aad
mov
mov
push
xchg
jne
pop
push
dec
out
mov
aad
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
icebp
push
sub
add
mov
xor
lock
imul
std
subb
or
mov
mov
mov
and
out
jge
lahf
push
xor
repnz
cmp
sub
push
xchg
lods
xchg
testl
mov
add
pop
out
xchg
or
rolb
pop
jae
mov
stos
dec
into
inc
mov
mov
adc
addl
lahf
sub
jne
mov
fcmovnbe
jge
je,pn
jge
fisttpl
cmpl
loop
aas
push
icebp
test
aaa
ds
sbb
test
and
or
add
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
(bad)
jmp
(bad)
js
lret
movsl
sarl
sub
xor
sbb
lret
dec
rsqrtps
cmp
inc
nop

icebp
or
pop
sub
sub
sbb
jbe
stc
fisubs
sub
jb
xlat
jne
enter
cld
mov
sbb
fdivr
mov
sti
or
mov
ss
ja
mov
xchg
imul
xor
pusha
lds
(bad)
leave
add
cmp
stc
and
out
scas
pop
adc
jo
cmpsl
enter
xchg
(bad)
movl
and
mov
cmpsb
pop
movsb
mov
popf
das
push
(bad)
loop
adc
(bad)
repnz
sbb
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmp
and
cwtl
sub
dec
jne
sub
pop
ja
cmpsb
les
jg
mov
adc
sub
mov
cwtl
pop
push
inc
push
lea
nop

aam
(bad)
sub
xor
dec
punpckldq
outsl
les
lock
negl
mov
movsl
adc
cmpsl
roll
and
lds
inc
ficoml
les
call
(bad)
cwtl
cmpsb
lods
sbb
shll
sbb
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cwtl
imul
jnp
xor
sub
cld
outsb
int
pop
repz
daa
(bad)
(bad)
push
dec
xchg
push
mov
out
bound
xor
nop

add
push
int
ljmp
loope
mov
cmp
mov
mov
stos
sarl
mov
inc
std
arpl
cltd
sbb
or
and
lahf
cwtl
outsb
popa
or
push
sub
dec
adc
lcall
cs
fists
incb
xchg
dec
shll
int3
and
sub
lahf
test
fistpll
pop
lds
jo
stos
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
fwait

pmulhw
hlt
xlat
gs
inc
es
test
xor
mov
sub
lock
loope
jge
jl
xor
push
push
inc
iret
aam
scas
shrb
loope
xor
xchg
loop
shrb
mov
mov
mov
imul
or
or
xchg
xchg
fs
cmp
jmp
aas
push
xrelease
mov
arpl
test
shl
xchg
jp
(bad)

or
push
mov
jmp
cwtl
imul
call
and
outsl
push
dec
lods
(bad)
(bad)
imul
testb
xchg
pop
movsb
sbb
push
js
xor
push
sub
xor
imul
mov
fldl
int3
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
xchg
js
movsl
mov
add
(bad)
and
ret
fadds
dec
mov
push
mov
mov
stos
sub
arpl
mov
rol
sbb
inc
ret
xchg
push
mov
loope
scas
sti
es
outsb
sub
lea
(bad)
fistpl
or
sbb
inc
jb
rcrl
mov
xchg
adc
inc
cmp
sbb
xchg
je
orl
mov
(bad)
lock
pushf
out
insl
sahf
je
xchg
pop
mov
fcomps
orb
push
cmpsb
(bad)
insl
push
xchg
int
push
mov
mov
xor
aad
enter
stos
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
push
and
test
cmpsl
js
enter
pop
rorb
cmp
mov
mov
and
cld
repz
or
push
les
mov
jo
adc
mov
out
pop
fidivs
aas
lock
cmp
add
ret
(bad)
push
dec
push
les
inc
cmp
xorl
mov
sbb
hlt
and
xlat
add
movsb
stos
loopne
or
sub
and
aaa
jmp
push
push
popf
outsb
xlat
xchg
sti
sub
add
ja
mov
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
daa
daa
nop

dec
int3
mov
ret
shr
int
sbb
int
dec
mov
mov
push
das
inc
imul
movsl
adc
sub
sahf
push
mov
push
loope
movb
dec
das
sub
push
cmc
mov
movd
mov
rep
out
jmp
and
out
mov
stos
inc
(bad)
xchg
sub
jge
xchg
cli
push
add
dec
mov
jmp
das
fistpl
repz
jo
ficomps
cs
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
int3
and
das
dec
mov
rorb
es
cld
sbb
mov
sbb
repz
fwait

or
xlat
pop
adc
shrl
lods
inc
scas
repz
mov
int
pop
dec
cmp
ljmp
mov
test
xchg
dec
mov
addl
push
aad
mov
lods
push
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
stos
rolb
je
and
add
mov
xchg
adc
cld
mov
jno
daa
mov
gs
dec
cmp
inc
push
adc
adcl
inc
push
inc
mul
stos
stos
jge
scas
cld
add
(bad)
fsubs
imull
sbb
subw
dec
mov
in
int3
push
sbb
lock
sub
aam
adc
mov
dec
call
fisttps
pusha
or
jae,pt
push
mov
sbb
xor
lock
and
inc
int
std
mov
sbb
inc
adc
clc
pop
add
sbb
sub
sbb
mov
out
stos
cld
lcall
sub
cmpsl
repz
add
fwait

mov
pop
push
fxch
bound
test
mov
lods
sahf
mov
(bad)
lds
mov
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sbb
(bad)
fstl
mov
(bad)
idiv
xor
mov
inc
and
jp
jmp
and
sub
mov
dec
dec
mov
gs
jnp
xor
sub
or
jns
mov
test
das
test
cli
push
clc
jae
jmp
sub
xor
out
arpl
sub
cs
and
jo
inc
or
jg
pusha
es
mov
rcrl
sbb
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
popa
fwait

ret
loop
cli
sarl
fmuls
mov
fmuls
cmpsb
inc
in
mov
xor
or
add
push
rorl
insl
mov
xor
xchg
call
daa
lcall
loopne
mov
inc
(bad)
xchg
lea
daa
sti
sbb
clc
sbbb
pop
jl
xchg
jmp
push
jb
jge
sysexit
mov
(bad)
mov
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
js
(bad)
jns
pop
mov
add
out
pushf
scas
repnz
ret
xlat
gs
cwtl
clc
je
sub
push
dec
sub
adc
mov
popf
mov
fstpl
jns
addb
lods
sbb
repnz
sbb
fwait

mov
aad
fwait

mov
or
imul
mov
fnsave
addl
inc
inc
fldl
addl
orl
jmp
push
mov
sub
mov
mov
cmpl
ja
cmpl
je
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
cmpl
je
jmp
push
call
jmp
push
push
push
mov
push
call
movl
jmp
mov
add
mov
cmpl
jge
push
mov
push
mov
push
mov
push
call
jmp
jmp
mov
and
movzwl
mov
mov
shr
and
movzwl
mov
mov
mov
cmpl
je
cmpl
je
jmp
jmp
mov
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
jmp
push
push
push
mov
push
call
mov
mov
push
call
mov
call
jmp
mov
mov
push
lea
push
push
call
lea
push
mov
push
call
call
mov
push
push
mov
push
call
mov
lea
push
mov
push
call
push
mov
push
call
lea
push
call
push
push
push
push
push
push
mov
push
call
mov
cmpl
je
xor
jmp
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
cmpl
jne
push
call
push
push
push
mov
push
call
xor
jmp
jmp
lea
push
mov
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
xor
mov
pop
ret
int3
int3
int3
mov
pusha
lea
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xor
out
jns
addr16
cwtl
fcoml
shll
jge
xchg
test
insb
stos
add
xor
mov
stc
fisubrl
lret
mov
sub
push
jnp
pop
aas
fcoms
jbe
sub
xlat
xor
je
int3
lods
xor
mov
pinsrw
call
cmp
pop
mov
scas
icebp
inc
xchg
ds
lods
mov
and
add
inc
mov
ljmp
push
scas
sbb
jge
push
(bad)
(bad)
stos
mov
jg
popa
je
call
scas
pop
mov
sbb
lret
jb
xchg
add
in
lods
mov
rcl
andl
pop
out
jne
test
push
add
sbb
mov
iret
pusha
xor
push
fcoms
stc
adc
arpl
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
adcl
cmpb
(bad)
ljmp
pop
in
add
push
rolb
movsl
nop

sub
outsb
scas
rorl
fisubrs
in
cs
adc
dec
pop
sti
adc
add
leave
mov
xchg
xchg
hlt
xor
inc
pop
jge
test
lret
in
out
push
mov
jne
das
cmpsl
loopne
stos
sub
movsl
mov
cli
clc
adc
xchg
arpl
xchg
(bad)
and
and
xlat
insl
jae
xor
jecxz
fwait

loop
adc
test
add
fimuls
pop
add
iret
out
dec
shll
add
dec
sbb
mov
sbb
dec
scas
call
movsb
cmpsl
repnz
xlat
pushf
dec
jno
lcall
(bad)

scas
sub
mov
lods
out
insl
leave
fs
and
push
lea
int
jmp
jns
aas
in
(bad)
cmp
xchg
ljmp
fwait

mov
push
adc
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
cmp
ror
push
xor
lods
addr16
(bad)
pop
(bad)
clc
or
aaa
xor
fistpll
or
dec
daa
rcl
mov
sti
mov
ds
dec
add
add
es
sub
insb
rolb
add
sbb
aas
les
jne
cmp
and
xorl
xorb
xchg
enter
sub
xor
fmuls
lock
jae
fnstcw
ljmp
or
dec
cld
jecxz
test
dec
sbb
or
add
or
or
xchg
add
stc
xor
lea
incl
test
int
xor
adcl
out
out
int
lret
mov
shl
mov
in
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
add
mov
movsb
push
je
dec
jb
dec
into
mov
pushf
arpl
add
cmp
leave
js
add
push
insl
ljmp
pop
adc
out
sub
cmpsb
or
cli
and
arpl
clc
ja
lret
fcomps
cmpsl
stos
call
cmp
insb
mov
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lods
sbb
in
in
in
(bad)
jns
mov
nop

pop
and
and
mov
xchg
sub
mov
xlat
xchg
cmp
and
movsb
out
das
test
jl
aaa
pop
in
stos
adc
subl
mov
mov
push
pushf
in
pop
push
xchg
gs
test
dec
jmp
push
ljmp
xor
or
jle
rcrb
mov
nop

jne
call
xor
adc
aam
les
push
subl
rcll
add
dec
pop
and
mov
xchg
out
cmp
cmp
es
mov
mov
mov
roll
stos
test
movsb
xor
adc
xchg
loop
cmp
sbb
mov
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
push
add
jno
dec
xor
xor
or
xchg
lock
inc
insb
mov
dec
dec
fwait

sub
(bad)

dec
jmp
jg
insb
lret
adc
mov
adc
cmp
js
ss
mov
sub
mov
push
xchg
mov
lcall
cwtl
into
add
xor
cs
inc
mov
je
cwtl
(bad)
cltd
sbb
or
das
push
sbb
imul
mov
push
sub
or
lock
push
pop
scas
sub
sub
sub
mov
push
scas
ror
popa
idivl
mov
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sub
sbb
push
imul
shrd
inc
punpckldq
popf
shl
jo
xor
pop
mov
lret
faddl
je
and
subl
stos
bnd
inc
icebp
lea
(bad)
dec
stos
adc
call
insl
and
int
dec
adc
fdivrs
xor
filds
aaa
cmpl
or
ret
fcompl
daa
adc
movd
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
push
loope
imul
push
in
adc
not
mov
clc
lods
push
push
push
sahf
out
and
adc
nop

push
js
ror
lods
mov
jle
mov
mov
push
loopne
push
pop
fmuls
mov
or
(bad)
(bad)
ds
ljmp
nop

pop
and
xor
out
fsub
pop
je
cmpsb
mov
arpl
mov
andl
adc
sbb
jg
mov
xlat
or
pop
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
sub
shll
js
ljmp
push
lret
ret
mov
xchg
lods
int3
adc
sbb
cmpl
ljmp
xor
push
lahf
je
scas
lea
out
stos
or
pop
mov
call
(bad)
ja
mov
and
mov
dec
imul
sbb
or
jecxz
fisttps
out
jg
jb
xor
rcll
movsl
mov
ds
je
out
adcb
jnp
insl
sub
repz
sub
inc
idivb
cwtl
xorb
cli
mov
jb
(bad)
sub
sub
xchg
add
outsb
sbb
aad
dec
out
xchg
pop
cli
pop
or
xor
int
cmp
int
or
jne
mov
fsubrs
test
mov
je
iret
cli
lds
test
add
nop

jge
sbb
daa
pop
into
loope
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
lret
addl
aad
sub
jge
cli
cld
mov
or
mov
int
fisttps
mov
aad
jp
sub
ds
and
out
sbb
push
dec
cmp
add
fdivrp
aad
mov
xchg
cmc
insb
push
insl
movsl
pop
push
rolb
add
pusha
jle
adc
dec
cltd
out
xor
xchg
add
xlat
dec
hlt
arpl
pusha
xchg
(bad)
dec
hlt
(bad)
cmp
ljmp
je
adc
call
and
or
xor
in
or
dec
add
test
aad
outsb
rorl
push
pop
movsb
jbe
mov
cmp
mov
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
and
push
mov
cmpb
std
dec
insb
mov
xchg
in
call
push
das
xor
pop
loopne
inc
push
(bad)
in
cwtl
repz
mov
inc
(bad)
orb
adc
push
ljmp
push
xor
call
lahf
stos
setg
shrb
in
orb
xor
mov
(bad)
and
mov
mov
mov
fwait

xor
leave
int3
movsl
outsb
in
cltd
push
mov
jo
jo
shlb
icebp
lahf
jnp
xchg
and
dec
cmp
les
and
xlat
rcl
adc
push
cmp
(bad)
outsb
inc
sti
pop
sbb
cld
xlat
adc
dec
xchg
inc
loopne
sub
push
bound
mov
sahf
mov
mov
mov
mov
arpl
cs
les
push
lahf
cs
fstl
mov
leave
sbb
(bad)
adc
movsb
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
popa
enter
test
sbb
jp
(bad)
out
int3
cwtl
repnz
and
shl
push
jl
and
stos
and
and
inc
call
popa
or
and
mov
jns
xchg
cwtl
loopne
mov
aam
or
sti
sbb
sbb
sub
test
sar
fstl
test
mov
jbe
out
nop

push
xor
or
pop
js
shr
add
lock
lret
subl
mov
inc
mov
and
cmp
jmp
and
push
add
outsl
ds
(bad)
scas
inc
int3
subb
pop
je
ror
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
ljmp
or
xchg
add
negl
test
stos
shlb
subl
fs
jb
rcrl
adc
out
mov
insl
adcl
add
add
mov
dec
nop

int
push
(bad)
in
movsl
outsb
into
mov
jl
sub
les
mov
loope
cs
mov
arpl
test
lock
inc
nop

mov
es
call
(bad)
cmp
cmp
test
sub
iret
xchg
mov
subl
mov
push
stc
rorl
push
xchg
jae
les
sbbl
iret
adc
test
mov
jbe
mov
test
cmpsb
loop
inc
lahf
and
jge
jno
sub
fwait

out
inc
andl
xor
pusha
shr
jno
push
pop
rcr
adc
mov
stos
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lea
mov
or
xchg
fs
ljmp
adcw
inc
push
cmp
mov
int
bound
stos
lock
jl
test
or
pop
lret
pusha
dec
jecxz
rcll
lret
stos
jge
jnp
in
inc
lea
popa
xchg
movsb
(bad)
or
or
cmpsb
loopne
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
aad
insl
push
sub
je
or
rcrb
sub
aaa
jge
xchg
fcoml
cmp
xor
xor
fbstp
(bad)
sub
dec
sbb
cmp
dec
sbb
pop
jno
jo
arpl
add
cwtl
int
cmc
repz
scas
stos
jo
mov
and
mov
inc
mov
sub
sub
inc
(bad)
or
dec
cwtl
in
data16
sbb
push
popf
ljmp
xor
xor
mov
jne
inc
lea
inc
sub
ljmp
fadds
mov
out
pop
mov
push
test
imul
in
adc
sbb
inc
xchg
adc
movsb
call
ret
jno
(bad)

andl
subb
es
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
mov
xorb
adc
mov
dec
call
fsub
mov
sub
lock
imul
mov
int
sbb
mov
popa
orl
fisttpll
mov
jbe
xchg
add
scas
mov
std
push
mov
fwait

call
add
add
push
mov
mov
jno
(bad)
fistps
dec
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
test
or
xchg
or
push
mov
mov
mov
mov
ljmp
scas
cmp
xchg
and
add
popa
xor
stos
(bad)
adc
popf
mov
hlt
mull
dec
add
and
aaa
fiadds
mov
dec
mov
ljmp
sub
(bad)
sahf
mov
mov
test
out
sub
int
addb
iret
in
inc
leave
scas
loop
pop
out
sahf
repz
mov
push
fidivl
mov
or
test
dec
(bad)
daa
or
mov
mov
rclb
add
adcb
rcl
stos
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pop
jle
mov
add
pop
xor
and
xor
push
mov
cmp
inc
mov
es
lret
data16
fsubrs
xor
stos
xchg
mov
(bad)
jne
mov
das
add
and
xchg
push
adc
lret
icebp
arpl
popf
scas
xchg
jp
je
cmpb
pop
movsb
xchg
push
mov
scas
push
sbb
dec
in
and
xor
lea
subl
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
aaa
push
clc
mov
test
or
jb
dec
jl
mov
and
xor
fwait

xchg
(bad)
mov
push
out
scas
aad
mov
ret
push
sbb
jge
int
sbbb
lcall
mov
sbb
inc
addr16
outsb
sub
ror
test
test
push
cmpsl
stos
jbe
mov
sbb
ss
into
lods
push
lock
add
add
subb
sub
and
inc
shll
sbbl
mov
int
pop
jmp
sub
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
ljmp
sti
(bad)
int3
les
movsl
xorl
scas
sub
hlt
push
(bad)
daa
icebp
push
out
or
sub
cmp
push
stc
or
enter
adcb
xchg
add
fdivl
xchg
es
aaa
sub
icebp
call
ret
gs
out
adc
jb
out
lahf
pop
movsl
cmp
inc
mov
dec
icebp
orb
sbbl
call
rorl
js
test
out
mov
movsl
push
adc
leave
fidivl
pusha
in
(bad)
aaa
mov
lds
pusha
das
lea
in
sub
mov
xor
mov
aam
pop
leave
out
mov
aad
cmpl
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
movsl
iret
rorb
leave
push
push
lea
test
jne
xor
xor
les
inc
insb
cmp
push
cmp
mov
mov
pop
xchg
popa
into
adcl
xchg
pop
test
cmp
add
mov
push
lcall
cmpsb
jo
imul
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
fucom
pop
shlb
jg
jl
mov
fstl
adc
stos
push
hlt
inc
loopne
xor
xchg
mov
lds
and
mov
scas
faddl
add
adc
pop
daa
outsb
lods
and
imul
jg
adc
inc
pop
jl
arpl
movsl
add
xchg
pop
cmp
sbb
lock
fistpll
les
or
xchg
mov
fs
movsb
push
lcall
addl
lods
mov
dec
push
sub
xor
jle
push
pop
imulb
cmc
loop
pop
xchg
imul
mov
or
add
mov
movsl
sbb
jle
out
aad
in
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
jo
andb
mov
out
pushf
pop
xor
cli
outsb
cmc
xchg
adc
out
sub
add
test
leave
(bad)
out
sub
loop
addr16
outsb
xchg
jl
sub
cmpsb
(bad)
ror
push
ret
mov
dec
dec
cmpsl
faddp
pop
inc
xor
js
daa
aas
cs
adc
mov
into
sti
mov
icebp
xchg
test
imul
lods
cmp
xor
std
dec
insl
jbe
xor
cmc
adc
jge
and
pop
inc
test
cs
xchg
mov
orb
adc
lahf
pop
pop
insl
cli
sub
cmpsb
and
push
cwtl
popa
mov
sbb
cwtl
cmp
inc
pop
push
in
push
xor
push
adc
mov
dec
(bad)
dec
cltd
or
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
jge
filds
sub
mov
(bad)
clc
je
test
aas
roll
add
lea
pop
subb
fwait

stos
sbbb
adc
ret
mov
pushf
arpl
jns
(bad)
clc
subb
(bad)
cmp
andb
je
mov
xor
or
push
rorb
test
xor
aam
fists
dec
jg
jge
xor
add
sbb
inc
jnp
fcmovnu
imul
lods
ljmp
mov
enter
sbb
in
mov
jno
or
xor
call
mov
(bad)
mov
scas
negl
loope
aad
cmp
dec
jge
add
ds
ljmp
adc
adc
in
and
sbb
mov
popf
dec
adc
int
ret
(bad)
iret
mov
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adc
(bad)
je
fdivrs
loope
or
test
mov
adc
rcll
mov
add
adcl
rorb
xchg
cmpl
lret
or
or
sarb
addb
aad
mov
mov
push
lods
in
add
jmp
or
rcrb
lret
mov
lahf
cs
aas
adc
(bad)
std
push
stc
xor
xchg
orb
iret
cmc
aad
mov
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xor
cmp
push
stos
mov
movb
aam
out
scas
xchg
mov
mov
lret
subb
push
int
push
popl
(bad)
push
arpl
lds
out
popl
pop
lds
popa
repz
and
arpl
int
notl
stos
pop
cs
(bad)
mov
pusha
hlt
rcrb
and
rorb
loop
cmp
adc
sbb
test
push
pop
mov
(bad)
hlt
lret
out
and
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
aad
cli
cmp
xchg
ud1
in
or
cmpsl
adc
or
xorl
stos
adc
int3
cmpsb
xchg
enter
fxam
lds
xlat
sub
adc
popf
icebp
or
notb
nop

mov
add
lcall
(bad)
lahf
fs
xor
(bad)
cmpsb
jb
add
mov
scas
push
dec
xchg
push
cmp
scas
sub
and
js
pop
dec
das
cmp
out
pop
xorb
jnp
loope
add
in
mov
lods
push
adc
cmp
sub
cmp
pop
cmp
push
loopne
jl
call
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbb
or
loope
inc
es
stc
popf
fwait

add
subb
sub
xchg
jno
add
mov
sbb
sbb
push
cli
mov
imul
push
adc
or
adc
push
andl
test
mov
push
das
test
dec
inc
in
inc
xchg
adc
icebp
push
pop
scas
xor
pop
mov
xor
lea
addl
xor
aad
dec
fildl
shl
jl
push
xlat
(bad)
psrld
and
mov
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cmp
subl
or
pop
xchg
test
aaa
mov
stc
mov
repnz
fsubrs
in
jg
lods
xor
mov
mov
jge
adc
xchg
dec
rorl
mov
clc
push
cmp
jb
nop

and
xor
movsb
aam
hlt
test
mov
or
mov
mov
or
add
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
push
jl
aas
popl
jne
fmul
mov
push
inc
mov
pop
popf
insl
cmpsl
adc
sbb
movsb
add
lahf
dec
push
add
adc
add
add
lahf
mov
dec
xor
cld
dec
sarl
and
(bad)
mov
and
std
in
mov
adc
xor
ror
mov
sahf
cltd
das
sbb
push
repz
outsl
jge
icebp
add
jmp
and
jno
fidivrl
inc
subb
push
or
lock
adc
mov
lds
stos
cmc
out
stc
xchg
sbb
jmp
flds
sbb
in
test
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
mov
fwait

out
es
fldcw
loopne
daa
insl
cmp
jg
add
lods
shlb
imul
cli
(bad)
int
add
jns
(bad)
lods
jmp
sahf
inc
sub
push
add
xchg
mov
es
inc
insl
scas
cmp
mov
cmpw
insb
fucomp
sbb
stc
add
test
jmp
sub
notl
dec
int3
and
lea
(bad)
add
push
(bad)
les
mov
jbe
or
orb
push
(bad)
outsb
jnp
orb
sahf
imul
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
inc
and
pusha
sub
out
mov
test
push
mov
xor
cmp
jb
loopne
xor
mov
sub
adc
push
mov
push
xchg
popa
dec
ljmp
mov
and
adc
inc
pop
aaa
cmp
sub
jbe
push
incl
cmpl
push
test
mov
adc
aas
cmp
nop

stos
lahf
push
hlt
nop

xchg
push
adc
or
fs
jecxz
out
scas
cmpsb
xchg
fstps
mov
sub
in
std
mov
fwait

pop
jl
scas
xor
jne
push
sub
in
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
cwtl
mov
jle
test
pop
push
lahf
pop
mov
imulb
test
xchg
(bad)

sub
mov
xchg
dec
xchg
popa
fadds
cmp
(bad)

aas
(bad)
in
iret
xchg
(bad)
mov
into
fs
seta
cmc
mov
cwtl
sti
and
in
outsl
or
shr
xor
sub
add
(bad)
sub
pop
sub
mov
scas
dec
push
fistpll
ja
xor
cwtl
aad
es
call
jbe
test
int3
outsb
mov
lahf
dec
xor
pop
loopne
mov
push
shr
mov
xchg
out
xchg
shll
jne
push
pop
jl
lock
enter
loope
mov
(bad)
pop
adcb
leave
in
ret
jns
lods
mov
ds
inc
inc
lcall
ret
imulb
cmpsb
xor
add
mov
cmp
out
mov
adc
adc
jno
test
sti
adc
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
lret
mov
andl
cltd
jg
inc
mov
push
ljmp
push
push
mov
xchg
jae
or
lcall
cmc
sub
adc
in
rcll
dec
inc
adc
mov
insl
and
out
ret
sbb
rcr
push
dec
imul
cli
leave
push
push
in
xor
adc
cmp
mov
xlat
mov
push
fistpll
js
cmp
movsb
mov
jmp
lock
push
xlat
cmp
sub
cmp
push
or
roll
adcl
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
int3
outsl
ficompl
stos
lock
cmp
sbb
mov
xor
aad
inc
mov
pop
adc
sbb
lahf
ds
outsl
in
inc
push
gs
ret
pushl
cltd
addr16
test
and
dec
mov
repz
shrb
add
dec
and
loop
decl
add
mov
sub
xor
repz
push
test
adc
enter
in
test
lods
ret
scas
in
daa
movsl
mov
imul
cmp
das
test
test
stc
je
ja
lea
mov
jno
mov
adc
test
(bad)
pop
mov
push
repz
push
clc
inc
std
popl
faddp
xchg
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
cld
inc
sbb
(bad)
add
mov
mov
outsb
addl
push
inc
repnz
sbb
add
dec
inc
push
test
xchg
mov
imul
in
mov
adc
das
xchg
iret
adc
mov
pop
mov
cmpsb
sbb
stos
cmp
mov
lds
icebp
fistpll
mov
xchg
pop
test
aad
cwtl
jo
cmc
sub
and
sbb
xor
jo
lock
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
push
mov
leave
inc
adc
stos
push
les
or
push
imul
icebp
mov
xchg
subb
sbb
ret
out
leave
fisttps
rolb
adc
and
xor
adc
(bad)
fiaddl
push
(bad)
shll
xor
sti
mov
adc
sbb
adc
sbb
test
stos
(bad)
xor
cmpsl
adc
inc
xor
cmp
outsb
popf
lock
lret
jecxz
outsb
test
dec
cli
pop
jb
mov
lret
enter
xor
leave
js
imul
push
daa
loope
lret
imul
pusha
rcll
or
push
stos
pusha
xlat
subb
roll
mov
dec
dec
jb
push
fwait

adc
andb
out
sbb
inc
pop
ljmp
and
mov
fcompl
jmp
in
fimuls
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
or
add
fs
scas
pop
subl
inc
das
push
subb
lea
add
and
add
in
and
(bad)
jmp
int
jne
push
jge
xchg
loope
clc
jle
int3
jecxz
test
sti
xor
cmp
cmp
in
and
mov
add
inc
je
add
sbbl
stc
push
ljmp
(bad)
pop
jmp
mov
fildll
or
mov
mov
test
ja
and
pop
cmp
push
gs
push
mov
andb
inc
fs
push
fcoms
shr
cmp
inc
xor
or
inc
stos
jmp
dec
adc
pop
sbb
pop
stos
nop

popa
jecxz
in
cs
push
pushl
test
inc
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xor
add
mov
es
int
movsl
orl
lea
xor
mov
stos
cltd
aas
xor
and
adcb
adc
imul
sbb
mov
and
es
cmpsb
js
inc
stc
jno
pop
mov
push
test
daa
rcrb
mov
(bad)
int3
int3
fisttpll
in
outsb
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbb
add
xor
aaa
inc
jg
push
call
push
pop
lods
xor
ljmp
cwtl
adc
mov
xchg
enter
cmpsl
mov
and
jle
adc
je
sub
mov
(bad)
mov
repz
cltd
pop
leave
lret
test
xchg
sarl
jg
xor
inc
rcrb
(bad)
jno
movsb
je
daa
inc
mov
mov
stos
sbb
stos
add
mov
jo
sub
inc
je
test
ljmp
mov
mov
lret
fisubrs
cld
cmp
mov
stos
add
mov
mov
int3
bound
push
(bad)
in
popf
aad
sbb
sbb
(bad)
fists
mov
lds
sub
mov
jge
into
push
loope
push
xor
ss
jns
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
rcr
sbb
or
cmpb
inc
sbbl
cmp
out
das
xchg
sbbb
les
sub
jb
or
xor
sbb
aaa
xor
sub
clc
aam
cwtl
(bad)
roll
lds
call
leave
dec
(bad)
iret
test
fcoml
mov
jne
repnz
mov
sub
lock
fstl
mov
pusha
xor
cmp
stos
js
cmp
fcomp
fisubrs
fsubrp
fxch
sarl
js
sahf
lock
adc
iret
jmp
or
jmp
shrl
lea
lock
in
mov
stos
cmc
and
in
dec
aam
inc
lock
push
lea
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
cmp
sbbl
shrl
cmpl
xchg
pusha
and
sub
mov
dec
cld
test
out
pop
adc
out
cmp
ds
lock
aam
xchg
mov
mov
push
xor
adc
sbbb
jg
sbb
mov
movsb
scas
stc
fs
add
inc
outsb
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbb
mov
fstl
pop
xchg
cmpb
sub
test
push
stos
add
mov
ficoml
or
in
xchg
mov
adc
jmp
je
ror
andl
mov
stos
ds
mov
cwtl
cmp
stos
fwait

xor
adc
or
jnp
movsl
dec
(bad)
mov
pop
push
addr16
add
lahf
mov
sub
inc
sti
nop

pop
pop
lahf
or
adc
or
xor
inc
add
movsl
lea
push
xor
sbb
adc
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
aam
lcall
mov
xchg
ljmp
pop
imulb
leave
xorl
jo
jl
sub
cmpsb
ja
fsubs
das
div
add
pop
ret
int
mov
dec
cmp
lods
sub
jbe
mov
test
outsl
call
and
jae
bound
dec
iret
popf
mov
arpl
repnz
jle
movsb
ds
std
mov
cmp
mov
xorl
cs
test
push
filds
mov
ljmp
cmpb
daa
lahf
mov
jb
push
xchg
scas
shl
sub
sbb
sbb
pop
dec
sbb
xchg
ss
sbb
jbe
fwait

adc
insl
mov
push
cwtl
add
jle
sbb
xor
test
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
push
je
lock
xchg
push
dec
gs
mov
sub
vcmppd
dec
leave
(bad)
sub
inc
sub
mov
loopne
mov
dec
ja
adc
cmpsb
les
xor
or
call
dec
adc
mov
or
and
xor
or
xchg
mov
mov
adc
or
push
movsl
jb
add
cmc
mov
pop
aaa
stos
addb
adc
loopne
addb
xchg
cwtl
xor
xor
je
std
pop
fnstcw
mov
xchg
or
mov
test
shrb
push
repnz
cmpl
mov
pop
sbb
addb
jge
jle
fnstenv
xlat
inc
cmpsb
gs
or
cli
shll
in
fiaddl
adc
mov
pop
xor
(bad)
add
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
jg
or
sbb
jns
inc
mov
xchg
les
and
cmpsl
cmp
adc
xchg
xchg
sub
push
movsl
adcb
adc
mov
jl
adc
leave
mov
shrl
sub
andb
and
lods
cmpsb
movsl
sbb
maxps
pop
xor
push
mov
mov
xorl
aad
mov
push
mov
xchg
test
pusha
push
push
xor
stc
mov
xchg
loopne
mov
sbb
test
popf
xchg
sbb
out
xor
mov
sarl
test
cmpsb
push
decl
cmp
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
test
mov
lea
adc
mov
test
mov
xchg
or
push
mov
rolb
mov
cwtl
dec
lcall
sbb
(bad)
mov
xchg
std
sub
int3
clc
movsb
sbb
fistps
add
adc
mov
aad
inc
stos
xor
sub
inc
push
insl
arpl
sbb
(bad)
jecxz
mov
clc
jns
jns
or
mov
stc
sbb
and
xor
adc
and
fstpl
mov
lods
int3
insl
pop
hlt
subb
dec
push
cli
jnp
(bad)

andl
cltd
sbbb
mov
cs
lock
pop
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
stos
mov
(bad)
and
dec
or
lods
xchg
scas
mov
sub
subl
hlt
(bad)
sti
lods
jmp
lods
outsb
outsl
adc
xchg
xchg
hlt
stos
push
fsts
inc
gs
and
outsl
push
dec
aas
es
dec
sahf
out
hlt
inc
enter
out
add
jnp
shll
dec
pop
push
ds
mov
in
mov
repnz
aam
mov
xchg
mov
(bad)
fildll
dec
sub
repnz
add
std
xorl
inc
mov
mov
aad
dec
shll
call
or
xor
pop
enter
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
mov
sbb
jp
in
icebp
pop
sub
mov
pop
stos
loope
xor
lcall
test
xchg
pop
daa
sbb
sub
imul
lds
repnz
lods
add
cs
inc
in
test
lods
in
xor
cmp
push
scas
imul
push
xchg
jb
mov
leave
jle
mov
add
or
rcrl
std
lret
lods
gs
aas
add
sbb
sub
rolb
mov
scas
mov
and
add
jge
out
and
mov
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
adc
fsubr
mov
test
push
adc
push
adc
mov
repz
xor
cmp
loope
enter
adc
xor
int3
xchg
inc
adc
int3
mov
mov
lret
(bad)
fistpll
cmpsb
mov
xchg
mov
push
adc
movsl
enter
loopne
xorl
movsl
jbe
fwait

out
mov
rorb
iret
movsb
nop

popf
xor
sbb
mov
push
sbb
orb
repnz
adc
xor
test
stc
xchg
enter
sbb
ss
loop
(bad)
lret
lds
aam
lock
pop
je
xchg
roll
hlt
jp
pop
and
test
push
imul
(bad)
orb
or
stos
rolb
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
jns
pop
mov
mov
mov
jecxz
pop
mov
cmc
and
xchg
pop
sub
sub
mov
ret
leave
mov
mov
les
inc
leave
add
cmc
out
mov
lds
xchg
lock
sbb
imul
jg
test
stos
imul
stc
push
ljmp
inc
loopne
inc
xchg
mov
iret
ljmp
jl
subl
and
enter
mov
xchg
(bad)
add
and
xchg
(bad)
jbe
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmp
int
stos
rorl
popf
mov
pop
ja
rorb
test
push
lea
sbbb
mov
cwtl
mov
jmp
addb
push
mov
cmp
cmpsl
sbbb
sub
mov
into
lcall
pop
xor
inc
xlat
mov
scas
cmc
xor
call
dec
(bad)
cmc
(bad)
ficoms
cmpb
sbbw
fsubl
mov
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
imul
and
mov
or
(bad)
icebp
popa
pop
jo
je
adcb
in
stos
jne
mov
pop
jge
shr
lods
push
test
sbb
je
pop
in
xchg
pop
push
xor
pop
orl
or
in
mov
lods
jno
pop
pop
(bad)
aaa
and
mov
adc
mov
inc
test
mov
mov
mov
movsb
mov
inc
shl
addb
outsl
mov
fnsave
frstor
and
cmp
les
jg
fistpll
inc
sti
add
or
clc
lea
dec
mov
lret
cmp
in
pop
es
test
fs
inc
cld
jp
jae
imul
mov
push
push
jecxz
pop
or
daa
xchg
adc
js
out
popa
dec
xchg
loope
outsb
aam
fs
jnp
mov
mov
mov
into
sub
mov
adc
insl
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
add
dec
loopne
xlat
hlt
mov
lea
or
push
out
fldcw
mov
push
mov
insb
fs
cmc
xchg
cmp
xor
out
jge
jns
mov
mov
jmp
sbbb
lea
(bad)
(bad)
bnd
sbb
adc
push
xlat
or
jno
push
insl
fdivs
mov
or
lock
les
fcoms
int3
mov
add
cltd
(bad)
outsl
jl
popf
or
das
or
pop
bound
cmpsl
fnstcw
dec
jns
push
mov
cwtl
or
xchg
and
push
adc
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
push
iret
sbb
push
test
dec
mov
stos
sbb
test
outsb
lods
lea
fucomip
rcll
jo
das
stos
jle
pop
subb
sub
lea
mov
push
enter
cmpsl
xor
cltd
cmp
sub
or
mov
(bad)
arpl
mov
sarb
adc
imul
cmp
or
push
push
sahf
jp
popa
cmpsl
jbe
cmpl
sbb
or
jge
sbb
test
dec
jmp
ret
xchg
iret
sub
outsl
addl
pop
subb
xor
mov
fnsave
addr16
fdivrs
mov
(bad)
js
lock
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
jge
iret
out
es
mov
cltd
shr
sub
test
xor
sub
push
jae
cs
xor
std
jb
mov
out
or
push
dec
dec
sahf
(bad)
dec
xor
xchg
or
fists
pop
sar
and
sbb
pushf
mov
add
out
imul
and
mov
adc
xchg
jge
shrl
xchg
dec
rorb
mov
add
mov
push
imul
mov
pop
orb
les
(bad)
outsb
pop
cltd
and
fsubrl
push
jmp
mov
inc
adc
std
sub
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
int3
adc
inc
pop
pop
lock
jp
mov
les
test
mov
imulb
inc
mov
mov
movsl
pop
imul
ficoms
mov
xor
hlt
mov
les
sbb
fbld
subb
push
mov
daa
ja
clc
mov
repnz
jp
xchg
(bad)
pop
lds
pop
adc
loop
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xor
xchg
mov
push
loope
movsl
addl
pop
(bad)
sbb
sbb
ja
cmpb
stos
jle
and
xchg
jle
aas
gs
jnp
jne
out
rcrb
roll
out
xchg
mov
push
push
(bad)
jecxz
rcrl
cmp
sub
sbb
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
out
inc
sub
das
shrb
stos
push
push
jo
adc
pop
pusha
into
xchg
in
addb
sub
lock
dec
sub
add
mov
loop
jg
movsl
loop
lds
mov
sbb
daa
stc
imulb
movsl
jno
xor
ds
xor
popf
adc
mov
push
lret
mull
cwtl
sbb
lahf
mov
or
jns
fst
dec
movsl
add
mov
push
push
stos
mov
xor
shrb
xrelease
xchg
and
jnp
sahf
sub
inc
sbb
clc
inc
hlt
stos
xor
orb
add
lock
(bad)
das
into
xor
inc
shlb
xchg
aas
dec
cmp
stos
cmp
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
out
add
(bad)

sbb
sbb
shl
cltd
andps
pushf
int
pop
cmpb
mov
mov
shll
inc
or
xor
popa
or
aad
mov
(bad)
jg
xchg
gs
out
pop
subl
dec
sbb
out
repz
jg
cmovae
xor
ret
leave
test
adc
push
popa
adcl
mov
sub
inc
xor
cmpsb
pop
mov
mov
call
ja
in
or
out
or
lret
jbe
cmp
mov
xor
daa
aam
fmull
shlb
pop
xchg
addl
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
mov
sbb
popf
inc
and
ja
push
mov
loope
fsub
repz
cmp
and
sub
test
sbb
fstpl
mov
(bad)
jb
jmp
jmp
pop
and
mov
dec
sahf
xchg
sbb
jae
sbb
xor
add
loope
cmp
stc
in
ret
(bad)
push
shlb
negl
incb
iret
cwtl
into
mov
cmp
daa
lahf
call
(bad)
(bad)
sbb
mov
cs
out
(bad)
xchg
mov
sbb
cld
jno
adc
imulb
nop

pop
push
or
ss
imul
aad
adc
dec
lcall
lcall
inc
jnp
cmp
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
push
jl
jmp
(bad)
fwait

push
cmpsb
mov
xlat
in
(bad)
jg
out
adc
inc
mov
or
in
mov
test
dec
in
iret
mov
jg
loop
push
mov
repnz
icebp
push
test
push
js
inc
xor
xor
jb
cmp
dec
or
cs
cs
sub
cmp
dec
rolb
scas
push
aad
mov
mov
push
test
popl
pop
in
or
fcmovnu
cmp
aaa
loope
in
pop
xorb
fwait

shrl
movl
imul
dec
cmc
push
lret
mov
sbb
ror
xlat
adc
xlat
lea
add
jge
in
jbe
int
xor
inc
(bad)
outsl
(bad)
mov
andb
cld
mov
xchg
sub
int3
cld
or
xchg
sbbb
xchg
enter
divl
pop
scas
repz
add
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
je
jns
cs
mov
test
mov
divl
push
mov
mov
fldt
stos
pop
push
pop
pop
andl
mov
mov
cmpsb
dec
sarl
cmp
push
mov
sbbl
clc
shlb
fs
sub
(bad)
pushf
and
test
cmc
imul
or
mov
lock
subl
push
andl
pop
xor
(bad)
xchg
xchg
sbb
lea
dec
inc
push
(bad)
push
inc
cmpsb
lret
xor
loopne
add
adc
xor
inc
nop

mov
inc
inc
cs
adc
rorl
xchg
iret
pop
int
dec
lock
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
das
nop

popl
test
stc
xor
test
xor
add
call
inc
cmpl
aas
stos
sub
or
xor
popf
pusha
pop
dec
es
loop
enter
aam
xchg
adc
xchg
mov
mov
test
push
daa
sub
xor
mov
popa
adc
mov
inc
movsl
xor
xor
pop
or
mov
xor
fistps
shlb
stos
xchg
cmpsb
movsb
xor
lret
push
test
push
fnstsw
popa
movsl
divl
push
cmp
(bad)
xor
sub
or
fists
movsl
mov
and
les
cli
jecxz
test
adc
dec
xchg
stc
orl
and
ffree
jg
mov
dec
xchg
test
roll
mov
clc
and
and
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
inc
xor
andb
ret
jmp
jecxz
jmp
mov
mov
or
or
push
faddl
(bad)
dec
and
mov
std
sbb
je
add
das
pop
pop
mov
push
mov
lods
jecxz
xor
cmc
jne
sbb
jbe
push
call
mov
ja
mov
mov
add
sub
xchg
or
xorl
pop
rcl
xorl
lcall
dec
and
add
jo
inc
xor
test
dec
push
test
mov
(bad)
popa
out
push
movsl
stc
js
push
into
mov
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
int3
popa
cld
add
mov
push
out
ljmp
enter
sub
ss
(bad)
stos
xor
lret
pop
paddb
cmp
pusha
sbb
lea
push
call
cwtl
mov
adcl
push
rolb
mov
mov
push
sbb
ljmp
cmpb
lock
or
push
dec
gs
inc
cmpl
jmp
nop

mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sub
cmp
cmpl
push
repnz
jle
jmp
cwtl
adc
lock
mov
sarb
xchg
cmpsl
sbb
jl
mov
mov
xor
xor
mov
pop
fdivrl
dec
lcall
jnp
jmp
enter
shr
std
fcomip
pushf
mov
inc
push
addb
mov
movsl
movb
push
or
in
dec
cmp
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
fildl
sub
out
mov
mov
test
and
cmp
int
push
dec
xor
or
(bad)
idivl
mov
out
icebp
cmp
mov
test
out
pop
subl
xchg
xchg
test
pop
rcrl
jp
mov
mov
sub
xor
xor
enter
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pop
aam
push
notb
cwtl
addb
xorl
in
mov
or
lods
dec
(bad)
lret
dec
daa
(bad)
call
ja
xor
call
xchg
bound
push
sbb
rcrl
xchg
shrl
mov
outsl
bound
int3
fstpl
adc
push
mov
and
ret
xchg
andl
sti
cli
insl
mulb
mov
cmc
addl
out
movsb
mov
xor
pop
push
fdivr
out
xchg
dec
push
sti
push
xor
mov
dec
out
jge
jb
dec
pop
addb
xchg
jne
dec
xchg
loopne
pop
xchg
adc
or
in
jae
push
repnz
cmp
stos
jmp
stc
popa
addb
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
and
loopne
fsubrl
mov
xorb
and
jns
jbe
out
xchg
cmp
iret
ljmp
loopne
sbb
push
fsubs
xchg
les
adcl
add
pop
out
dec
jg
mov
sbb
xchg
lcall
mov
dec
repz
loopne
outsb
sbb
in
test
outsb
mov
sarl
ss
jg
pop
div
addl
add
jae
cmp
(bad)
sub
aas
xchg
xor
ljmp
imul
ds
es
xchg
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
repz
lcall
inc
add
stos
lcall
mov
jbe
pop
repnz
(bad)
shll
or
jmp
sbb
popf
fs
push
in
shrl
or
fcompl
in
aas
push
push
sbbl
div
jb
xchg
ds
pop
enter
inc
mov
add
andb
inc
out
and
mov
cwtl
pushf
call
jae
nop

mov
lret
sbbb
jae
loope
xchg
outsb
fsqrt
lcall
and
xor
mov
xor
insb
(bad)
loope
or
insb
sahf
fiadds
nop

(bad)
pusha
push
out
out
mov
push
sub
mov
add
nop

xchg
dec
jmp
clc
push
shll
les
movsb
aad
xchg
popf
xor
iret
sbb
sti
fwait

xchg
(bad)
sub
and
adc
stos
nop

hlt
test
pop
jne
les
fwait

dec
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
filds
dec
xor
dec
xchg
lds
mov
(bad)
cltd
cmpsb
fwait

add
callw
ljmp
jno
sub
mov
stos
mov
lds
or
dec
add
jg
pop
(bad)
bound
hlt
adc
and
enter
cld
mov
sub
sbb
popf
in
sbb
fsubs
cli
adcb
(bad)

mov
inc
ret
sub
xor
pushl
(bad)

sbb
loopne
mov
mov
stos
and
call
xor
popa
jo
les
sbb
cmovnp
dec
movb
push
inc
(bad)
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
mov
stos
dec
mov
into
mov
mov
iret
jns
and
daa
enter
in
rcll
lods
in
out
(bad)
sahf
imul
push
mov
subb
xor
sub
mov
adcl
cwtl
push
lock
push
cmpsl
cli
sub
andl
or
je
lcall
mov
testb
(bad)
lret
push
in
int
mov
mov
je
xchg
call
mov
test
test
sbb
or
out
arpl
sti
filds
and
mov
in
xor
inc
mov
les
cmp
cld
ja
sar
lcall
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
arpl
movb
test
mov
(bad)
out
mov
xor
sbbl
rcr
je
(bad)

or
stos
adc
les
cmp
cmp
insb
mov
and
lcall
aad
xorb
cli
cmpl
push
cmp
(bad)
in
pusha
xchg
or
or
out
cli
xor
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
jno
sbbb
xor
adc
sub
cs
insb
mov
cs
hlt
leave
cs
sbb
jbe
dec
pop
sbb
andb
clc
mov
fwait

xor
imul
popa
daa
outsb
fimuls
mov
push
gs
mov
je
gs
pop
in
stos
addb
xchg
pop
and
mov
aaa
dec
cmp
cld
mov
(bad)
stos
jb
lods
filds
fcmovbe
cmp
sub
test
jns
push
cmp
xor
daa
xchg
xor
push
dec
insb
mov
test
pushf
jne
pop
movsb
inc
and
leave
int
jp
jg
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
sarb
hlt
loop
testb
lods
dec
loope
sub
adcl
adc
mov
(bad)
test
dec
fwait

mov
mov
lret
movsl
test
jge
pop
lahf
adc
sub
adc
movsl
jl
xchg
push
jmp
hlt
insl
leave
rcrb
clc
scas
in
jmp
lds
inc
jge
lahf
jb
call
sub
mov
jl
dec
pop
scas
xor
ret
jmp
mov
lret
stos
stos
adc
push
adc
stos
pushf
cmc
aas
das
jnp
xor
cs
hlt
and
xor
ja
outsb
fisubrl
shll
sbb
add
adcb
mov
sbb
mov
sbb
in
jmp
sahf
ret
loopne
rcrb
or
ret
testl
add
adc
lea
jl
dec
loop
xorb
xor
xchg
cwtl
(bad)
movsl
mov
clc
jl
jae
jne
movsb
adcb
clc
xchg
out
pop
loop
dec
icebp
int3
scas
cld
test
mov
cmp
in
mov
mov
cmp
ljmp
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jo
push
xor
iret
sub
jo
cmpb
xor
push
mov
in
(bad)
mov
leave
inc
ror
(bad)
adc
addr16
cmp
lret
enter
ljmp
(bad)
mov
ja
fs
lods
out
sbb
sub
lret
jns
sbb
xchg
xchg
clc
(bad)
mov
mov
inc
cmp
push
jo
nop

enter
jo
jmp
push
outsb
stc
sub
add
or
es
idivb
xchg
dec
daa
in
adc
push
orl
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
scas
pop
imul
inc
movsl
sub
les
xlat
(bad)
cs
xor
inc
icebp
ret
sub
or
mov
test
icebp
(bad)
push
ret
icebp
inc
and
push
arpl
add
push
cmp
rcrl
inc
cmp
and
sahf
jae
pop
push
mov
dec
sahf
inc
mov
cmpsb
sub
les
stos
rorb
mov
ret
xchg
push
out
pop
xor
push
jbe
sti
xchg
ljmp
xor
adc
add
and
out
sar
(bad)
adc
in
es
adc
(bad)
cmp
mov
jnp
push
cmp
mov
mov
mov
inc
push
movl
inc
add
in
sbb
rcrb
std
sbb
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
call
push
xor
add
adc
and
cmpl
adc
xor
xchg
cmpsb
rcll
ss
adc
xor
aam
sub
inc
mov
mov
jle
popf
sbb
and
test
mov
jb
dec
fwait

(bad)
mov
jge
or
sbb
ljmp
inc
mov
inc
adc
lds
sbb
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
call
mov
sahf
dec
loop
inc
or
push
sub
pusha
cmpsl
adcb
aaa
hlt
sub
ret
aam
and
fcom
sub
lods
add
xchg
inc
mov
mov
fxch
add
pop
sbbl
aaa
aas
mov
in
fisttpl
or
les
sahf
pop
cwtl
and
scas
rcrl
xor
pop
pop
cmp
lea
lret
stc
and
mov
push
das
sbb
sub
movsb
sbb
repz
push
out
mov
js
xor
divb
and
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
xlat
xchg
xor
scas
sub
inc
mov
mov
mov
cmp
jp
and
jecxz
mov
adc
movsl
xor
decl
dec
xchg
mov
or
adc
push
inc
push
inc
push
cmp
adcb
lods
mov
mov
(bad)
dec
dec
lods
movsl
jp
dec
mov
nop

mov
pusha
hlt
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
aad
loope
push
mov
inc
mov
popf
sti
xchg
push
popa
dec
cmc
popa
add
cli
repnz
xchg
mov
mov
out
cmp
insb
and
pop
clc
lret
sub
push
mov
push
push
or
ljmp
addr16
pop
xchg
or
cmc
jp
out
stos
push
xchg
adc
aad
insl
sub
and
adc
call
popl
xor
adc
cli
jo
push
ja
fisttps
push
ret
loop
ficompl
push
sbb
dec
push
jb
mov
xor
cmpsl
pop
shlb
fidivrl
or
rorl
cwtl
add
arpl
(bad)
std
xor
and
loope
adc
add
mov
int3
(bad)
(bad)
decb
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
iret
nop

and
mov
test
xchg
mov
test
cmp
outsb
adcl
stc
enter
push
pop
lret
insl
push
call
roll
fwait

inc
es
pop
scas
mov
jbe
enter
push
sub
scas
xchg
jb
dec
xchg
sahf
test
dec
popa
cwtl
jp
pop
jne
cmp
push
je
mov
cld
push
nop

xchg
adc
xchg
mov
sbb
subl
xchg
(bad)
dec
punpcklwd
into
or
scas
dec
cmpsl
sub
fiaddl
mov
out
or
lea
mov
cmp
lea
in
push
lret
out
movsb
inc
and
divl
add
xor
lea
(bad)
rol
(bad)
popf
pop
mov
push
stc
fmuls
das
sub
stos
mov
bound
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
(bad)
fildl
and
dec
or
and
sti
ja
push
ljmp
clc
dec
mov
outsl
(bad)
andb
nop

lock
sbb
lret
push
sbb
inc
push
mov
pop
mov
ljmp
mov
repz
sti
jecxz
xor
repz
xchg
mov
pop
inc
sub
jmp
add
mov
cli
cld
sub
mov
push
mov
cwtl
lods
mov
outsb
out
fbstp
adc
out
mov
gs
mov
repz
stc
sarl
push
cs
aam
xor
add
into
int
inc
sub
(bad)

repnz
out
mov
jle
jae
dec
or
int
xchg
xchg
inc
stos
lret
into
pop
ljmp
addl
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adc
ss
jo
sbb
xchg
xchg
and
add
push
pop
sbb
das
pop
inc
add
dec
fiaddl
cmp
rorb
mov
(bad)
scas
cwtl
mov
sbb
xchg
push
ret
cmp
(bad)
mov
push
(bad)
sbb
xchg
dec
inc
sub
mov
cmp
sbb
mov
mov
pop
enter
mov
push
and
ljmp
hlt
movsl
fucom
mov
les
pop
adc
(bad)
mov
hlt
jl
push
ljmp
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
inc
les
dec
fiadds
mov
lret
gs
pop
xor
loope
mov
and
aam
jl
scas
jns
adc
sub
and
cmp
std
(bad)
incl
mov
ds
push
dec
fdivrp
cwtl
pop
pop
cs
cld
cltd
clc
cmc
push
pop
xchg
andb
mov
mov
les
lods
jmp
dec
inc
mov
add
or
jb
xchg
cmpsb
pcmpgtd
xor
out
ret
hlt
pop
mov
xchg
xchg
xor
es
xlat
mov
aad
int3
fcomip
xorl
add
ret
jne
les
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
hlt
add
and
dec
fwait

(bad)
lret
xor
ljmp
jecxz
nop

movsb
aad
xor
stos
clc
xor
orb
out
je
in
cmc
mov
mov
mov
(bad)
inc
xchg
out
push
call
fucomip
jge
addl
mov
xchg
fs
mov
mov
fisubrl
cmp
sbbb
pusha
cld
mov
mov
xchg
pop
ret
test
ficompl
int3
push
orb
js
cmp
addr16
mov
jmp
test
daa
add
mov
xchg
mov
dec
movsb
pop
enter
sbb
in
data16
lahf
add
icebp
testb
cli
cmp
jb
pop
cmp
(bad)
repz
test
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sub
sahf
sub
lret
lods
push
sbb
push
cwtl
div
cmpb
push
mov
aad
mov
(bad)
movsb
dec
xchg
fwait

ljmp
(bad)
(bad)
aad
stos
push
inc
push
fstl
shlb
push
ljmp
rorb
sbb
dec
add
jecxz
popl
(bad)
out
jne
mov
lret
sub
int3
or
shrb
cwtl
ljmp
sub
inc
sbb
jge
push
loopne
mov
xor
push
ret
mov
and
rorb
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cmp
(bad)
push
mov
jge,pn
cmpsl
loop
xchg
cmp
outsl
xchg
mov
andb
mov
mov
adc
sub
adc
in
popa
fsubs
xchg
cmp
add
xchg
sbb
adc
in
clc
(bad)
pop
or
cmpl
sub
push
fdiv
int
dec
jne
cmpsl
cmp
leave
out
int
int
cmp
orb
sbb
or
mov
icebp
pop
(bad)
in
repnz
mov
shl
lds
xchg
scas
add
int3
mov
xor
sbb
pushf
push
or
(bad)
gs
mov
out
push
cmpb
xchg
shl
mov
and
pop
or
xor
pusha
push
mov
movsb
push
mov
mov
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xor
push
call
mov
inc
incb
adc
aad
in
ljmp
dec
loope
mov
xchg
adc
scas
les
aaa
cmp
jne
lea
inc
pop
xchg
scas
lock
lods
mov
add
pop
push
es
iret
mov
outsl
sbb
test
(bad)
fildll
aad
out
adc
inc
xor
inc
(bad)
cmp
gs
pushf
lahf
js
mov
xchg
jb
les
ja
in
pushf
pop
test
shr
into
inc
outsl
iret
push
add
(bad)
push
inc
sub
cwtl
call
repz
sub
xor
pop
pop
ficomps
mov
xor
flds
(bad)
xor
xorb
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
aas
mov
pop
mov
xor
stos
dec
pop
mov
iret
mov
adcb
loopne
ret
flds
scas
mov
imul
dec
xchg
sub
jle
int3
jnp
aad
add
fdivl
dec
xchg
cmpsl
ret
loop
mov
dec
adc
sti
popf
aam
pusha
sub
out
dec
dec
loopne
lcall
jle
push
cltd
mov
or
lret
jbe
jge
out
movsl
push
sub
jecxz
and
dec
add
lcall
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
les
stos
sbb
aas
ljmp
sbb
xchg
add
stos
adc
hlt
mov
cmc
jle
nop

pop
repnz
or
jp
ljmp
mov
jmp
sbbl
rcr
or
imul
setge
adc
je
out
test
(bad)
cwtl
push
push
mov
cmp
dec
out
jnp
mov
xor
(bad)
popa
jnp
add
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sbb
pop
mov
push
daa
les
cwtl
test
lahf
fstpl
scas
sbb
dec
pop
data16
int3
pop
mov
mov
rclb
shlb
sahf
les
nop

je
shrl
mov
jmp
pop
pop
rolb
gs
sbb
popl
jecxz
pushf
cmp
out
push
ds
fdivrl
mov
xor
mov
subb
cs
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
sub
fldl
jg
stc
xorl
mov
shlb
in
add
mov
scas
lock
cwtl
cmp
stc
dec
cmp
xorl
(bad)
call
(bad)
int3
mov
lods
sub
aas
outsb
cwtl
pop
ja
inc
sbb
dec
mov
loopne
in
dec
pop
daa
sub
loope
movsl
xchg
xor
push
or
insl
sub
daa
adc
addb
(bad)
jecxz
in
rcll
in
int
push
scas
mov
dec
pop
adc
scas
int3
xchg
push
sub
jbe
call
xchg
enter
cwtl
in
je
stos
into
sub
stc
add
mov
sbb
and
lods
push
xchg
(bad)
fcmovb
jle
xor
push
test
pushf
out
mov
lahf
jb
int
mov
in
ret
cwtl
pop
ljmp
mov
inc
inc
xor
lahf
mov
shll
(bad)
and
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
fucom
shl
enter
mov
inc
xchg
jnp
jge
mov
mov
jb
jbe
andl
xacquire
xchg
mov
xchg
rcl
cld
push
adc
mov
sahf
xchg
in
or
js
in
jg
adc
in
sbb
cmp
fstl
mov
pop
(bad)
out
repz
dec
mov
jnp
mov
int
inc
dec
mov
pop
mov
add
je
aad
mov
mov
mov
xor
xchg
(bad)
sub
jne
fstpt
xchg
pop
jp
xorb
(bad)
jle
clc
jl
pop
fs
push
mov
movsl
shll
test
inc
iret
xchg
or
outsl
std
jmp
dec
lods
ja,pt
dec
sarb
mov
pop
ret
rcr
ljmp
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
icebp
cmp
sbb
shrl
add
rcl
xchg
movsl
je
xchg
xor
es
shl
pop
rolb
add
loopne
mov
ret
nop

pop
std
pop
sbb
or
dec
mov
add
and
mov
add
inc
loop
mov
push
(bad)
jnp
std
fwait

adc
aas
lcall
mov
out
mov
daa
xchg
arpl
insl
call
daa
jne
xchg
push
mov
mov
shrl
decl
mov
xchg
and
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
sarb
dec
cli
fwait

es
les
movsb
aam
jo
outsb
inc
jae
andb
push
mov
ficoml
mov
xor
adc
lods
out
ror
xor
mov
inc
mov
xor
inc
mov
fwait

adc
dec
mov
xchg
mov
mov
int3
mov
sbb
jg
cmp
cmp
add
movsl
cmp
stc
stc
push
cwtl
sahf
mov
ds
mov
sub
enter
pop
mov
stc
fdivl
out
mov
dec
loopne
inc
jp
into
pop
mov
decb
pushf
rcl
mov
lret
ds
cs
iret
xor
cmp
repnz
lods
dec
out
add
shll
push
push
add
mov
arpl
xchg
adc
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
or
dec
mov
je
into
nop

mov
orl
ds
push
adc
jmp
push
adc
push
enter
mov
mov
xor
mov
sti
lret
adc
into
stc
ficoms
rcrb
in
add
aam
jle
push
mov
std
insl
xchg
enter
jo
inc
cwtl
cmp
mov
ds
dec
in
sbb
pop
inc
mov
and
test
and
xorl
pop
dec
movl
xchg
mov
add
xlat
mov
xor
fstps
mull
xchg
inc
mov
popa
lahf
mov
test
adcl
dec
lock
leave
or
pop
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
loop
sarb
jns
mov
xor
into
adc
aad
xor
jae
inc
add
cmp
push
orl
aam
push
lock
enter
lds
or
pop
mov
sub
jge
xor
push
jmp
popa
mov
xchg
repz
sti
cmp
lods
iret
stos
popa
imul
int3
icebp
mov
loope
gs
shlb
dec
sbbl
mov
mov
leave
lea
loopne
mov
lock
fnsave
cmp
das
jne
sub
pop
lods
std
mov
adc
cmpb
or
push
jae
movsl
mov
(bad)
jmp
jg
sbb
sbbl
sbb
testl
xchg
sti
jnp
cli
in
(bad)
scas
rcrb
jno
add
mov
mov
mov
movsb
iret
jne
stos
mov
es
mov
fwait

jb
mov
stos
pop
inc
std
xor
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
fldl
pop
xlat
push
xor
rol
ds
call
nop

je
mov
xchg
into
pusha
sbb
mov
insb
sarl
mov
mov
xor
subb
jbe
mov
mov
pop
je
or
shll
ret
or
xchg
cld
sbb
xchg
dec
mov
jle
arpl
add
or
jmp
(bad)
xlat
cmp
xorb
add
das
lcall
and
jp
imul
sti
mov
test
xor
enter
push
xor
lock
(bad)

cmp
inc
lea
orb
push
fisubs
inc
aaa
cwtl
cld
pop
icebp
add
fs
mov
xor
push
cwtl
movsl
dec
xlat
xor
lods
fmul
mov
loope
leave
fidivl
sahf
das
(bad)
fisttpll
fs
jno
sbb
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cmp
add
gs
(bad)
fidivl
enter
test
clc
rolb
fstpt
sbb
inc
cltd
dec
pop
into
mov
sti
call
or
out
mov
mov
test
mov
pop
and
sub
sahf
or
adc
dec
in
cmpsb
jg
ret
jo
test
in
push
inc
push
movsl
lahf
pusha
out
int3
loop
xor
ja
mov
and
xor
adc
cmp
loop
sbb
or
inc
mov
scas
xchg
xchg
and
adc
outsl
int3
xchg
outsb
inc
(bad)
lods
mov
push
rorb
and
les
add
lret
test
test
fidivrs
xor
fmul
ret
mov
add
jbe
test
sub
movsb
dec
mov
xor
sub
mov
aam
test
sahf
in
loop
jecxz
or
movsb
pop
mov
jb
mov
test
(bad)
in
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
clc
or
test
loop
scas
in
jecxz
outsb
mov
repz
cltd
inc
repz
jns
jae
and
nop

sub
mov
pop
enter
nop

ret
dec
mov
adc
inc
js
ja
pop
negl
cmpsb
dec
lahf
xorl
aad
stc
mov
pop
pop
mov
lds
jmp
sub
out
jle
jne
mov
nop

ja
hlt
xor
add
sahf
pusha
testl
rcr
adc
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
iret
jmp
arpl
mov
mov
int
mov
inc
and
fsubrs
js
mov
mov
xchg
call
(bad)
clc
mov
lods
lods
fisubs
dec
adc
fstpl
or
mov
scas
frstor
data16
test
sarl
icebp
subl
mov
and
cs
xorb
lret
jp
cmp
shl
mov
mov
inc
ret
add
popa
and
lahf
sbb
outsl
add
cmpb
ja
inc
push
aad
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
gs
adc
(bad)
mov
(bad)
popa
rol
xlat
push
mov
jle
jp
insl
mov
dec
int
repnz
mov
(bad)
xchg
rcrb
pop
jae
roll
iret
das
jns
orw
clc
inc
inc
(bad)
idivl
mov
loop
push
stc
adcl
dec
jb
out
(bad)
inc
(bad)
dec
repnz
subl
dec
cmpl
push
inc
xchg
test
push
mov
scas
push
jmp
sbb
setae
andb
mov
push
cmp
outsl
rcl
lods
push
mov
rclb
and
repz
mov
int
jo
mov
add
cmp
stos
insl
daa
add
mov
xor
jo
push
int3
add
jle
and
or
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
add
inc
ds
adcl
or
jae
lret
lret
jae
outsl
sub
cmpb
xor
pop
mov
fadds
scas
cmp
ret
or
adcl
push
add
int
decl
sti
movsb
xchg
sysenter
xor
ljmp
ret
std
pop
loope
(bad)
jmp
inc
mov
and
and
stos
rcll
adc
loopne
cmp
sub
mov
cmc
dec
sbbl
pushf
mov
sub
xchg
stos
inc
dec
addl
pop
sbb
mov
hlt
mov
dec
push
fcoml
notl
cmp
stc
jo
imul
(bad)
repnz
mov
lds
jmp
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
enter
and
adc
dec
mov
mov
pop
frstor
jb
sub
pop
in
lret
shlb
mov
in
in
pop
and
cmp
mov
punpckhwd
pop
lcall
lock
adc
xchg
ret
sub
cld
cmp
jns
sub
(bad)
xor
mov
test
sub
dec
js
orl
enter
addr16
push
or
xchg
test
rol
mov
xor
pushf
push
daa
adcb
mov
dec
add
pop
push
or
or
or
lea
xorb
test
rclb
lahf
inc
push
cmp
sub
sbb
sbb
cmp
test
jmp
mov
push
in
cmp
cltd
xor
jne
(bad)
and
das
stc
jbe
cmc
mov
push
push
(bad)
addr16
xchg
stos
add
into
xchg
nop

pop
ret
jb
mov
js
inc
(bad)
adc
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
sub
(bad)
jmp
ret
adc
leave
push
add
inc
bound
scas
das
pusha
xlat
dec
bndldx
mov
mov
mov
test
outsl
cmpsb
push
adc
jecxz
fcoms
cmp
adc
xchg
(bad)
fcmovnb
mov
pop
ljmp
pop
sti
iret
mov
rcll
push
push
or
xchg
or
(bad)
pop
rdtsc
stos
sbb
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
test
or
push
rcrl
mov
inc
pop
outsl
dec
popf
ja
sbb
xlat
popa
mov
stc
mov
ds
xchg
mov
std
cmp
sbb
scas
cld
pop
xchg
push
push
and
jnp
movsl
movsl
lahf
sub
enter
cmp
in
sbb
mov
mov
jmp
push
push
pop
sbb
pusha
mov
stos
add
ds
jge
cmpsb
mov
inc
repnz
and
mov
and
fwait

js
call
mov
xchg
xchg
aaa
pshufw
popa
cmp
rolb
and
ret
jae
sbb
jecxz
int
sbb
mov
cmp
adc
mov
paddb
cwtl
frstor
sbb
lret
shrl
loope
cmp
mov
jnp
mov
push
mov
xchg
ljmp
jmp
std
sub
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sub
loope
sbb
loop
dec
int3
int
xchg
xlat
inc
mov
shrb
out
rorl
loope
aam
jb
xor
xchg
sub
shrb
pop
cmpsb
push
adc
fyl2xp1
mov
push
popa
xchg
adc
and
cli
inc
popf
aaa
sbb
leave
sahf
add
or
test
lret
adc
mov
sbb
es
xchg
jmp
inc
mov
lret
clc
ss
xor
negb
xchg
dec
inc
xchg
xchg
data16
rcl
int
sub
sub
add
mov
lret
scas
dec
pop
mov
aam
xchg
lea
jnp
mov
dec
lret
into
mov
mov
dec
int
xchg
dec
mov
mov
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
adc
mov
inc
jg
mov
jnp
cwtl
push
inc
add
cltd
(bad)
fcmovbe
pop
pop
inc
mov
jp
cli
sbb
pop
lods
jbe
and
(bad)
push
rcrb
and
stos
out
sahf
aad
push
in
push
inc
inc
lea
mov
xor
mov
stos
cmp
and
and
xor
pop
loop
(bad)
mov
xchg
movsb
cmpsb
lock
pop
lea
andl
add
mov
lods
pop
scas
mov
scas
movsl
data16
sahf
or
ljmp
jecxz
xchg
mov
sub
mov
fnstsw
adc
pop
call
outsb
push
outsl
loopne
inc
xchg
xor
sub
testl
and
push
pop
lcall
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
inc
bound
and
cmp
xchg
or
test
dec
movsl
jge
cwtl
sahf
in
lods
outsb
(bad)
in
mov
add
adc
sub
or
rclb
sarl
inc
pop
repz
adc
push
push
cmp
pop
insb
je
in
and
out
xor
jns
loope
dec
xchg
pop
scas
out
mov
cmp
mov
inc
shrb
int
xchg
push
aad
xchg
or
subl
lods
mov
enter
xchg
xchg
int
sbb
xor
frstor
adc
adc
inc
mov
loope
(bad)
mov
cmpsb
jmp
dec
bound
sbb
mov
shlb
in
xchg
push
sti
cmpsl
xchg
xchg
lret
sbb
cwtl
cmpsl
pop
cltd
int
xor
(bad)
out
or
push
icebp
cmp
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmp
sub
je
pop
add
jne
call
repz
dec
clc
xchg
and
xor
movsb
pop
jmp
testb
mov
clc
pusha
and
(bad)
test
pusha
mov
cmp
scas
jle
into
leave
xchg
inc
mov
imul
iret
mov
(bad)
scas
jl
outsb
cmp
dec
mov
inc
sbb
dec
lret
sarb
cmp
sti
es
call
movsl
fsts
clc
jl
xor
popf
jno
mov
mov
inc
pop
xor
mov
ds
aam
jae
test
lcall
fisttps
arpl
sbb
mov
cwtl
icebp
fsts
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jl
(bad)
imul
pushl
mov
lret
push
push
out
mov
jge
ficoml
cmpsb
or
add
ficompl
inc
ret
in
inc
testb
out
inc
imul
leave
mov
adc
pop
popf
in
test
jb
cs
push
shrb
test
jnp
and
dec
and
jecxz
mov
leave
loope
mov
gs
sub
or
mov
cmp
pop
xchg
jne
mov
mov
or
sbbl
pop
(bad)
mov
dec
cmp
(bad)
xor
sub
test
rolb
mov
ja
test
icebp
push
xchg
mov
pusha
ljmp
cmp
mov
enter
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
cltd
(bad)
mov
xchg
cs
aad
push
aad
inc
xor
loopne
fcompl
(bad)
rol
paddusw
in
adc
call
fisubrs
push
push
ljmp
sub
add
jg
add
fsubs
das
xor
jbe
sub
dec
int
mov
lahf
addl
fisttpll
inc
mov
jl
lcall
in
cltd
frstor
adc
and
repnz
push
out
pop
or
lock
shl
jbe
jle
xchg
inc
xchg
sub
jb
cmp
adc
cmpsb
push
(bad)
popf
mov
sub
mov
sub
dec
es
add
push
and
popa
push
loop
mov
mov
inc
jne
mov
xlat
stos
daa
(bad)
fldcw
filds
mov
fs
pop
and
(bad)
jno
repz
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xor
xchg
jmp
xchg
test
push
mov
scas
push
xchg
jbe
rcrl
jge
subb
push
or
inc
jge
nop

jo
popf
pop
test
into
jge
mov
test
xchg
sub
mov
cmp
cmpl
out
mov
add
cmp
movsl
repz
mov
pop
outsl
cmc
inc
and
mov
out
mov
stos
and
scas
stos
aaa
(bad)
xchg
cmp
mov
cmc
or
sti
inc
adc
aad
add
jne
xchg
(bad)
sahf
in
push
iret
lds
pop
mov
sbb
cmpsl
mov
les
test
jne
or
jle
jge
rclb
out
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jl
cli
mov
(bad)
mov
xor
add
les
cmp
jl
lea
or
sbb
lock
sbb
lds
aam
mov
int3
sbb
xchg
mov
jge
and
(bad)
jl
das
leave
mov
icebp
mov
jns
(bad)
into
push
shlb
shlb
call
jle
call
scas
xchg
jmp
sahf
dec
pop
(bad)
(bad)
jp
dec
push
mov
push
in
dec
sbb
sub
adc
mov
enter
cltd
lea
icebp
lock
aam
inc
pop
pop
imul
ja
aas
mov
cmp
mov
xor
cmc
dec
cmpsb
je
test
orb
and
iret
pop
das
inc
out
pop
add
daa
dec
lods
sub
mov
sub
sbb
cmp
cld
xchg
loop
stc
push
jge
mov
pop
cwtl
cmp
cld
sarl
out
movsb
adc
or
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sti
push
in
inc
aad
and
movsl
xchg
mov
inc
sub
addl
add
aad
insb
or
or
inc
xchg
in
or
mov
inc
pop
scas
adc
(bad)
stos
insb
xchg
xchg
adc
cmp
xor
add
mov
outsl
(bad)
sub
loop
cmc
sub
fwait

repz
imul
mov
add
mov
(bad)
pop
mov
fnsave
cmp
mov
mov
mov
loop
mov
cmp
jo
adc
fildl
cmp
shl
cmpsb
jecxz
or
lret
jecxz
jmp
dec
inc
insl
(bad)
nop

aam
ja
xchg
push
jb
and
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
jo
inc
xchg
jb
addl
ret
mov
rolb
mov
or
in
gs
adc
lea
push
call
andb
sub
fiaddl
jnp
pop
adc
in
test
cmpsb
cld
push
xor
xchg
pop
mov
dec
jg
test
cmp
jnp
lret
popa
dec
ja
cwtl
(bad)
adcl
adc
push
mov
dec
push
dec
nop

cmpsl
xchg
pop
push
ss
cmp
out
cmpsb
xor
xor
push
push
fcoml
(bad)
push
fldt
jl
mov
es
lret
cld
xchg
pop
fcmovbe
int
xchg
and
xor
sbb
sbb
ds
jb
shlb
rcrl
cltd
call
jmp
sbb
imul
std
mov
cmpsl
fucomi
rorl
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
into
(bad)
(bad)

stos
dec
in
lret
mov
aaa
mov
cwtl
cmpsl
or
inc
les
adc
jo
sub
add
pop
add
xchg
cmp
leave
dec
ret
mov
xchg
insl
xor
leave
xchg
xor
call
sbb
pusha
cwtl
jl
xchg
stos
cmpsl
adc
add
dec
push
lahf
mov
xorl
sti
lods
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
clc
orb
xchg
popf
loopne
test
push
int3
jge
loope
test
sbb
loop
xor
and
or
mov
xchg
outsb
movsb
mov
cmp
jb
adc
mov
movl
(bad)
cmpsl
cmp
inc
fildl
test
jae
pop
movsb
mov
adc
jmp
xchg
imul
push
mov
mov
loop
lea
(bad)
and
xchg
hlt
subl
addl
mov
jnp
push
leave
nop

pop
add
shl
outsb
sub
and
sub
and
cmc
fistps
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sub
inc
std
jl
add
mov
inc
nop

fwait

xor
cltd
jge
mov
(bad)
(bad)
flds
sarb
data16
lock
mov
out
sub
mov
inc
movsl
aas
(bad)
push
ss
adc
push
addr16
aad
xchg
add
mov
lcall
aas
xchg
negl
arpl
int
aam
loope
mov
mov
std
enter
sbb
punpckhdq
sub
je
daa
mov
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
sbbl
adc
scas
push
(bad)
sbb
sarl
mov
mov
or
fwait

mov
pop
popa
adc
fwait

repnz
mov
rclb
test
jno
incb
(bad)
fsubrl
pop
pop
inc
bound
jg
ret
jbe
ds
lea
mov
push
and
inc
xchg
je
aas
repz
aas
mov
subb
adcl
leave
jns
lcall
mov
add
cmp
int3
or
shlb
cli
inc
mov
xor
sub
mov
lahf
inc
pop
ja
icebp
movsl
(bad)
or
xor
sahf
pop
pop
sbb
testl
repz
inc
push
lds
mov
mov
xchg
ss
mov
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
adc
outsl
cmp
jns
int3
ja
stos
and
ret
int3
shrb
rcl
push
and
cmp
jnp
leave
sbbl
outsb
dec
xchg
lret
or
test
jo
into
je
jl
pop
outsl
into
mov
sbb
shll
mov
sbb
(bad)
js
mov
jecxz
fs
faddp
add
xchg
pshufw
out
dec
inc
scas
lods
int
add
sub
or
into
lds
mov
sahf
frstor
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
push
setb
rorl
test
push
sub
and
sbb
xor
mov
mov
inc
sub
mov
and
inc
ss
call
jl
adcb
les
or
loope
stos
push
xor
out
cld
inc
push
mov
push
repnz
xchg
out
mov
sub
jbe
fcomi
test
inc
popa
dec
mov
xchg
outsl
jo
xchg
ret
adc
jp
mov
pop
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
out
test
fs
sbb
cmp
cwtl
ljmp
orb
sbb
scas
push
into
lea
in
lcall
test
xchg
cmp
sarl
xorl
pop
xchg
enter
and
push
xchg
in
loop
jne
xchg
xlat
and
xchg
jnp
int
xchg
orb
stc
pop
sbb
pop
cli
lock
sub
or
jle
(bad)
lds
fistpl
icebp
andl
mov
cwtl
add
cmp
lock
and
call
mov
xorl
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pop
mov
mov
in
cmp
jmp
push
cmp
mov
sbb
add
stos
enter
scas
fstp
pop
xor
add
jnp
loope
pop
iret
je
xor
jmp
scas
test
adcl
cmp
pop
fisttps
xchg
xor
int3
int3
int3
int3
int3
int3
int3
int3
pusha
lea
sahf
lea
fldl
addl
orb
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
push
lock
push
sbb
insb
or
inc
nop

imul
call
push
xor
sbb
(bad)
in
xor
in
xor
movsb
in
ljmp
or
out
(bad)
faddl
pop
lock
mov
jmp
lea
in
test
movzwl
nop

add
outsl
push
xorl
pop
outsl
cltd
xchg
cmp
cmpl
adc
in
popl
inc
pop
lret
fadds
push
xchg
inc
subl
adc
in
int
or
mov
add
dec
push
push
call
xlat
xchg
orl
(bad)

xchg
icebp
mov
push
push
dec
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
sbb
xchg
popa
jge
jo
push
push
dec
fimull
push
fdivrl
cmp
std
or
addl
insl
cltd
orb
xchg
cld
in
push
inc
nop

pop
fidivrl
ljmp
jp
nop

adc
pop
inc
inc
andb
sub
mov
jbe
and
add
cmc
(bad)
push
sub
jno
in
cmp
pop
mov
test
mov
mov
xchg
sub
xor
hlt
adc
imul
test
dec
popa
inc
sbb
xor
in
mov
call
push
cli
push
ja
nop

pop
cmpl
sbb
cwtl
pop
xlat
inc
test
aam
in
aad
xor
xchg
sahf
in
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
stos
or
int
mov
and
call
test
adc
push
xlat
mov
pop
inc
mov
in
xchg
out
xlat
or
je
mov
cmpsb
xor
xchg
(bad)
test
pop
fistl
addr16
and
mov
sbbl
or
cwtl
enter
shlb
xchg
and
test
lock
adc
jge
or
cltd
and
mov
mov
nop

cwtl
and
jle
cli
loopne
addl
jl
rcr
jecxz
mov
xchg
daa
jmp
aam
out
push
xchg
cmp
lret
les
mov
add
cmp
mov
stos
jp
int
push
out
mov
push
mov
sbb
test
aam
cmpb
inc
stc
lahf
sbb
orl
mov
inc
xor
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sahf
xor
push
popa
mov
push
mov
addb
sbb
sub
mov
(bad)
add
lds
lret
ljmp
xchg
mov
xchg
dec
int
jb
hlt
out
mov
out
rorl
les
jnp
add
mov
cwtl
test
into
rcr
cmp
popf
js
cmc
lds
xchg
and
mov
push
lods
fstl
cmp
test
pusha
xchg
cwtl
adc
or
mov
xchg
xor
in
xchg
mov
nop

mov
hlt
mov
pop
add
orl
rorl
cmp
std
sbb
lcall
cwtl
stos
sub
jl
adc
xorl
ret
pushf
test
jge
jnp
mov
sub
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
xchg
adc
cs
aam
sbb
jnp
std
stos
lahf
mov
push
fldcw
inc
inc
pop
popf
fsubr
loop
mov
sub
jmp
test
test
loopne
ret
sub
out
clc
dec
andl
mov
mov
in
jne
ret
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
sahf
jne
(bad)
loopne
jae
icebp
sbb
push
test
jbe
cltd
mov
xchg
(bad)
int
scas
pop
addl
icebp
add
inc
mov
(bad)
pusha
add
xchg
sub
sahf
push
mov
ret
push
adc
sub
loopne
fwait

lods
or
lock
cwtl
sbb
pop
and
stos
sub
fistl
roll
jle
movsb
(bad)
jnp
or
add
ror
cmc
lcall
clc
addb
ret
int
cmp
outsl
xor
pop
and
sub
xlat
scas
jg
cmc
pop
xchg
cli
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
or
(bad)
xor
pop
bound
int3
iret
mov
test
nop

repnz
mov
mov
repz
inc
es
mov
dec
and
and
mov
xchg
jle
rorl
inc
cmp
xchg
loop
mov
xchg
cwtl
cmp
add
ret
mov
hlt
and
cmp
xchg
popa
icebp
loop
xchg
inc
in
imul
mov
sub
xchg
jo
into
icebp
xchg
sub
mov
or
xchg
daa
jg
pushf
add
jno
stc
test
or
dec
mov
jle
(bad)
mov
insl
sarl
js
imul
push
dec
sbb
pop
xchg
dec
out
pop
mov
xchg
int
xchg
mov
lea
jne
orl
mov
xchg
decb
movsb
cmp
dec
push
movsb
stc
rcrb
xor
stos
cmpsl
call
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbb
fiaddl
mov
std
xorb
stos
adcb
dec
movsb
add
pop
add
in
cltd
into
pop
mov
adc
add
out
pop
xorb
andl
mov
dec
icebp
mov
iret
mov
cmpsl
repnz
adc
mov
xor
movsl
lea
sti
cmp
fists
(bad)
ret
push
sbb
pop
andl
(bad)
ror
push
test
lret
daa
jo
adc
mov
das
rol
and
cmp
sbb
xchg
fwait

int
or
inc
sbbl
add
or
xchg
scas
cltd
or
mov
xlat
das
stos
test
int
mov
repnz
or
xchg
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cwtl
lds
xchg
or
xchg
call
xor
mov
jmp
jl
stos
in
in
and
xchg
sbbl
push
push
mov
lea
xchg
ror
jg
jl
jge
add
pop
push
aad
xor
iret
out
mov
das
repz
push
or
push
adc
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
int
iret
sub
insl
in
nop

adcb
(bad)
inc
push
mov
aam
cltd
sahf
xchg
js
das
xchg
enter
mov
or
insl
mov
sbb
push
aas
es
movsl
mov
repz
cmpsb
rclb
push
xchg
lods
pop
lea
inc
adc
xor
call
das
andl
jecxz
mov
ljmp
cld
xor
test
mov
insb
subb
out
orb
mov
push
test
xor
mov
cmp
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
or
int
lds
nop

and
bnd
cmp
int
(bad)
or
xorb
clc
sbb
leave
(bad)
jmp
sbb
mov
das
jecxz
bound
xlat
(bad)
es
and
sarl
mov
xor
mov
xor
push
xor
mov
add
cmpl
(bad)
jle
sbb
test
mov
mov
jb
aaa
notb
jnp
add
jo
jmp
mov
into
ds
and
icebp
adc
rorl
sub
push
xchg
popa
sbb
fwait

mov
loope
sub
inc
hlt
fisubl
jle
mov
adc
mov
sub
out
xchg
pop
jge
pop
fcmovnu
ljmp
sub
sbb
push
mov
test
push
sbb
pop
out
fists
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
stos
push
sub
push
add
cmp
les
iret
inc
sbb
sbb
lea
jg
je
xor
pop
jg
lret
adc
jmp
into
mov
aas
nop

fistps
test
popa
xchg
cmpsb
in
or
sub
gs
shll
sbbl
xorb
xchg
lods
add
xchg
stc
push
or
xchg
shlb
pop
lea
fwait

adc
ja
or
inc
jmp
dec
dec
or
mov
imull
xchg
ret
mov
add
sarb
js
jle
dec
ja
inc
loop
and
mov
cmp
sbb
and
sub
inc
mov
cmc
lock
adcl
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
int3
cmp
rcrb
or
call
mov
ret
leave
mov
subl
mov
(bad)
xor
ret
(bad)
add
mov
(bad)
(bad)
mov
(bad)
call
(bad)
lea
jp
loop
inc
pop
jo
sub
push
mov
push
adc
test
sbb
notl
sbb
leave
aad
mov
test
or
out
daa
lods
test
mov
and
movsl
std
cs
pop
jecxz
dec
pop
mov
sub
repnz
xchg
mov
adcl
ds
mov
jge
es
fs
or
xor
xchg
sbb
ja
add
or
cld
xchg
mov
addr16
fcoml
orb
jb
push
xchg
aas
add
pusha
xchg
stc
and
add
sbb
loop
ret
lret
xor
clc
scas
pop
pop
movsl
aad
inc
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
pushf
mov
mov
test
out
inc
cmp
stos
clc
mov
mov
aaa
and
xchg
or
cmc
addl
mov
pop
cmpsb
stos
outsl
ror
ret
lea
cmp
(bad)
pushl
lahf
inc
daa
or
outsb
roll
inc
lcall
jmp
daa
add
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
leave
inc
pop
notb
inc
adc
mov
pop
add
or
xchg
out
mov
lock
pop
pop
insb
add
add
subl
popf
stos
sahf
dec
mov
jmp
mov
pop
inc
or
mov
cvtpi2ps
test
fwait

jbe
jmp
push
ja
push
inc
cmp
nop

mov
cmpsl
or
adc
sbb
or
repz
lock
cmp
add
and
test
dec
je,pn
js
jecxz
sbb
lods
out
mov
or
sub
pop
add
adc
sahf
adc
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
js
mov
(bad)
mov
lea
(bad)
popf
sub
mov
inc
sub
scas
shll
push
cwtl
adc
es
push
sub
leave
clc
cmp
insl
inc
xchg
out
xor
pop
(bad)

mov
sub
ficoml
sahf
lcall
cmpsl
imul
pop
or
out
insb
ds
shll
mov
cmp
sbb
repz
lods
dec
mov
mov
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
add
cltd
dec
lock
aad
repnz
sbb
inc
push
mov
cmp
(bad)
(bad)
add
xchg
adc
jo
jge
dec
sbb
leave
jl
movsl
xchg
(bad)
mov
imul
out
and
int3
sbb
xchg
aas
punpcklbw
adc
and
shl
xor
inc
inc
jg
sbbb
jb
push
stos
jle
cmp
lret
push
mov
out
in
push
fadds
das
ret
sarb
ds
cmp
movsb
call
xchg
mov
fists
iret
ret
pop
pop
nop

mov
jge
sahf
or
ffreep
xchg
mov
jne
cli
out
push
andb
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
sbb
in
jge
arpl
or
pushf
mov
sub
(bad)
aam
xlat
out
aaa
adcb
mov
jns
xchg
xchg
mov
sar
add
lods
sbb
pop
mov
call
ja
mov
rol
sbb
repnz
sbb
mov
dec
jae
sbb
push
xchg
arpl
sahf
(bad)
jp
cmp
push
(bad)
sti
adc
adc
mov
mov
cmp
cmpsb
cwtl
shl
fnstsw
and
(bad)
scas
sbb
or
jae
push
push
jle
(bad)
xchg
fdivrl
sahf
mov
insb
fs
adc
mov
ficompl
cmp
mov
xor
push
ds
push
enter
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
sbb
fldenv
cld
lock
pop
out
lods
mov
cmp
je
in
jns
idivb
lret
popf
cmova
lcall
push
mov
mov
repz
sub
push
aas
movsl
add
lret
sub
adc
repz
or
adc
fimull
sbb
mov
push
push
adc
into
popa
xchg
outsl
push
or
mov
(bad)
inc
fwait

nop

test
xchg
adc
pop
pop
(bad)
cwtl
gs
xor
adc
xchg
adc
push
mov
test
xchg
lahf
loop
adc
jmp
lea
lret
pop
mul
add
sub
xchg
jge
dec
and
adc
lds
mov
sbb
xchg
mov
fistpll
rcll
insb
into
add
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xor
rolb
push
xchg
cli
mov
bswap
outsl
cmpsl
je
fwait

xchg
jl
sahf
arpl
scas
add
lmsw
lods
loop
hlt
sbb
aam
add
lods
lret
loope
out
jge
or
negb
popf
mov
(bad)
std
adc
(bad)
in
adc
jae
loopne
out
lods
aaa
xchg
stos
jns
out
adc
sub
push
fwait

xchg
lret
sbb
(bad)
pop
jbe
push
stos
gs
je
jl
stos
sub
cs
testb
ss
or
sub
dec
push
push
iret
push
push
mov
xor
int3
lret
ljmp
cmp
pop
and
outsb
add
cmp
rorb
sbb
mov
dec
xorb
xchg
mov
jge
into
inc
aad
fiadds
lcall
add
mov
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
rcll
popa
shll
mov
mov
dec
and
in
fwait

mov
push
mov
sbb
stos
pusha
mov
jle
sbbl
sub
pop
sbb
push
fmull
sbb
cmpl
loope
rcl
inc
inc
aad
aas
push
cmp
sub
jne
arpl
stos
test
(bad)

out
in
(bad)
jmp
or
xchg
je
rcrl
jle
mov
mov
dec
bound
pop
popf
push
nop

lcall
ds
sti
andb
mov
lahf
or
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
lock
sub
ja
ficompl
and
add
std
xchg
mov
jne
lods
sub
movsb
lret
lahf
xchg
clc
(bad)
mov
or
jge
mov
jnp
stc
adc
rcll
fbld
pop
je
mov
je
psllq
mov
popa
mov
mov
jbe
repnz
shll
dec
loope
repnz
cli
(bad)
lock
subb
dec
mov
out
add
mov
add
sbb
in
lcall
jg
and
lcall
pop
pusha
lods
scas
clc
sbb
dec
push
shrb
les
pop
movsl
std
push
cmc
test
ret
out
scas
enter
sbb
lea
and
out
sbb
test
sub
(bad)

pop
repz
daa
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
xchg
dec
cwtl
jo
div
shrb
data16
xor
jl
aaa
scas
xchg
sbb
incb
xchg
cmp
xor
mov
std
push
dec
jmp
xchg
xchg
es
push
and
leave
and
adc
into
jb
int3
lods
addb
adcb
dec
int
mov
mov
add
push
dec
push
lods
lret
add
sarb
mov
sahf
imul
pop
int
bnd
sbb
push
or
xchg
pop
sahf
sahf
(bad)
sub
mov
aaa
cltd
and
push
wrmsr
shl
outsb
in
loop
cmc
adc
and
adc
xchg
xchg
mov
scas
sbb
int
xlat
ljmp
mov
ja
add
testl
jge
sub
test
ror
mov
sbb
(bad)
mov
(bad)
sub
or
fldenv
mov
push
scas
xchg
loop
jae
(bad)
mov
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
or
mov
shr
adc
sub
jecxz
dec
push
lods
inc
bound
or
fdivp
mov
inc
mov
fdivrs
sti
xorl
xor
mov
int
mov
mov
mov
cwtl
jb
fnsave
mov
out
into
cwtl
sbbl
arpl
loop
sahf
cld
jg
sahf
popa
stc
stos
mov
pop
cmpsb
jecxz
movsl
shlb
xchg
dec
fadd
inc
pop
jle
mov
and
dec
xor
pop
pushf
mov
push
fsubrs
shlb
rcrl
cmp
ret
mov
in
mov
cltd
sbbl
ljmp
cwtl
les
mov
sahf
lods
inc
cmc
test
lar
ret
mov
sub
xchg
(bad)
imul
jge
iret
ljmp
(bad)

mov
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
jbe
cltd
loop
je
add
popa
(bad)
mov
call
dec
loopne
mov
sarb
jge
xor
lea
jbe
outsl
add
icebp
insb
cltd
fisttpl
cmp
(bad)
aam
jp
mov
jnp
data16
outsl
push
push
(bad)
imul
dec
fnsave
push
repnz
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
ds
in
fwait

popa
arpl
pushf
jecxz
pop
stos
loop
movb
lods
inc
inc
call
xchg
mov
lock
add
pusha
scas
sbb
jae
sub
jge
jo
cmp
and
ljmp
push
mov
(bad)
mov
jecxz
xor
(bad)
int3
add
jbe
pop
inc
loope
fists
add
jge
test
xchg
gs
out
out
subl
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
inc
dec
push
push
int
push
or
fdivr
dec
lods
and
xchg
out
movsb
xlat
and
fisubl
xor
fcoml
in
repnz
sti
(bad)
fisubs
imul
les
and
xchg
loop
jnp
push
les
cli
clc
test
push
sub
sub
addb
jle
rolb
stos
stos
mov
sbb
shll
nop

xchg
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pop
sbb
mov
js
and
mov
test
icebp
leave
push
test
loop
cwtl
orl
jbe
jbe
testb
pop
gs
insb
movsl
mov
jg
addr16
(bad)
data16
repnz
ret
and
and
imul
mov
sub
out
sbb
test
into
rorl
mov
ss
js
ja
xchg
mov
jne
in
and
xchg
(bad)
nop

and
les
mov
bnd
lods
movsl
mov
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmp
test
aas
xchg
enter
inc
in
xchg
and
jl
xchg
imul
insl
call
and
adc
test
inc
and
rclb
cwtl
sbb
pop
in
addb
scas
addb
mov
lea
jo
popf
test
sarb
inc
pushf
mov
repnz
push
jmp
pop
cwtl
sbb
incb
dec
pushf
fdivr
push
mov
mov
xor
rorl
andl
fildll
cwtl
jge
xchg
sahf
mov
popf
(bad)
fstpl
sbb
jnp
xchg
jne
out
push
push
arpl
cmpl
lds
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
(bad)
cmpb
test
jmp
scas
cmpsb
stos
pushf
sub
cmc
push
rorb
into
add
nop

movsb
cld
jo
int
arpl
xchg
stos
mov
mov
imul
mov
insl
out
jge
repnz
fidivl
jge
movsb
jb
mov
divl
xor
orl
cmpsb
lcall
lods
sub
xchg
xchg
shll
adcl
cltd
out
(bad)
in
mov
and
std
dec
mov
cmc
dec
fstl
mov
loop
(bad)
cwtl
mull
mov
pop
cmp
jge
in
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
int
mov
xor
and
sbb
inc
es
movsb
push
cmp
and
cwtl
imul
das
dec
pop
jns
push
aaa
mov
addl
adc
loopne
push
std
cmp
fs
mov
sahf
mov
xor
jo
movsl
xor
jmp
add
ss
dec
out
push
or
(bad)
call
(bad)
xchg
insl
ljmp
push
stos
roll
push
push
out
or
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
int
dec
std
pop
fdivl
sbb
in
push
and
sbb
mov
xchg
or
sbb
pushf
mov
movsl
sbb
add
jbe
dec
out
xorl
or
ja
mov
mov
nop

sbb
in
aas
or
cmc
inc
push
shlb
out
xor
call
popf
pop
lret
mov
shl
scas
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cmc
out
mov
mov
fcoml
pop
sahf
adc
mov
es
cmp
addl
mov
cmp
push
xor
ret
mov
push
inc
repnz
out
jbe
add
lea
cmc
adcb
mov
and
lods
cmp
movb
lahf
push
push
xchg
xor
mov
jl
orl
push
rcr
ja
xorl
add
dec
std
outsl
mov
xchg
out
inc
dec
pop
repz
lods
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
scas
push
push
xchg
fs
add
xor
lret
test
add
andl
lds
divl
or
ja
jmp
daa
cmc
testb
popa
jns
aas
xor
movsl
cmp
inc
addb
jbe
xor
jns
fwait

push
jmp
int
mov
call
stos
daa
cmc
or
mov
xchg
daa
mov
and
fldl
add
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
add
mov
jmp
xor
and
aaa
scas
inc
sbb
mov
lcall
mov
mov
xchg
addr16
out
push
inc
xchg
add
aaa
sbb
dec
cld
cmp
std
out
push
xor
sbb
rclb
rolb
push
sub
(bad)
out
mov
xchg
or
lods
scas
stos
outsb
idivb
stc
mov
clc
mov
fadd
(bad)
stc
aaa
push
stos
(bad)
dec
mov
(bad)
cmc
xor
cs
test
notl
enter
mov
lea
xor
in
test
outsb
jae
stc
mov
mov
xchg
lea
sahf
insl
inc
mov
push
lods
lahf
or
mov
and
push
mov
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jbe
xchg
inc
ret
mov
or
sbb
sbb
xor
dec
mov
jmp
ret
mov
rorl
hlt
push
or
cwtl
xchg
mov
mov
sbb
shrl
outsl
xchg
ja
adc
cs
mov
(bad)
jno
jo
jmp
mov
lret
jmp
repnz
iret
rcl
fstpl
push
mov
cmpsb
sbb
leave
bnd
inc
add
stos
mov
test
cmp
jbe
clc
loopne
fcoml
ja
bound
stos
rclb
fiadds
je
add
test
mov
pop
aaa
inc
xorl
jne
xchg
push
push
fstl
sub
into
xchg
push
sub
stc
xchg
insb
lods
pop
pop
lcall
lea
fstpl
xchg
lock
inc
cli
lret
dec
mov
(bad)
xor
sbb
xor
in
mov
sbb
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pop
frstor
rcrb
fists
jae
(bad)
mov
sub
idiv
stos
inc
js
xchg
add
xor
sub
popa
and
leave
mov
pop
std
cwtl
test
xchg
jge
in
int3
push
clc
xor
mov
cmp
mov
dec
mov
ljmp
sbbl
push
mov
stos
jg
das
(bad)
ja
subb
call
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
shrb
inc
popa
mov
dec
pop
fdivl
fldt
xchg
subb
mov
cmp
xchg
sbb
lret
xchg
mull
mov
out
pop
jl
push
xor
lcall
inc
mov
orb
andl
js
loop
pushf
add
andl
rcll
or
test
pushf
das
nop

sbbl
adc
decb
es
lods
mov
fwait

shll
into
sub
out
std
jb
jle
inc
push
aas
push
jle
mov
sub
pop
test
dec
cmp
cmp
test
mov
and
dec
test
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xor
sahf
ds
sbb
mov
cmpsl
adcl
scas
rcll
in
xor
repz
dec
lock
mov
dec
mov
push
loopne
xor
fdivrl
mov
call
sub
int
mov
out
pop
lahf
bound
popf
cwtl
jmp
jp
fnsave
xchg
or
jmp
push
out
mov
aas
push
(bad)
out
dec
(bad)
jb
sub
xchg
mov
jo
and
lods
orb
mov
clc
scas
mov
jbe
(bad)
push
jge
jne
in
xor
sar
dec
ret
and
sub
aas
sahf
fisttpll
daa
daa
mov
sub
and
das
out
or
imul
adc
mov
rorb
mov
pop
sub
xorb
inc
ljmp
lea
adc
sbb
ljmp
cmp
rclb
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
and
(bad)
mov
cmc
lahf
das
push
int3
aad
push
push
lahf
cmpsb
int3
call
insl
out
adcb
in
fmuls
(bad)
jae
popa
jp
pop
xor
imul
xchg
xor
aad
popl
xchg
lods
imul
addb
out
pop
rorb
lahf
js
xor
adc
popa
iret
sbb
rcll
dec
add
jg
outsl
mov
sbbl
ja
in
fisttps
push
cmpb
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
mov
out
and
jl
xor
test
jle
jo
mov
sarb
into
ror
sbbl
xlat
dec
mov
pop
xor
push
mov
pop
jb
dec
fldcw
addl
int3
cmp
call
add
jp
mov
dec
popf
dec
shll
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
stc
(bad)
int
mov
pop
popf
and
adc
loop
stos
aad
xchg
lahf
inc
fisubrs
daa
mov
aaa
mov
xchg
subb
mov
int
orl
test
mov
mov
test
inc
add
data16
stos
pushf
xor
pop
test
clc
sar
(bad)
out
roll
xorl
adc
push
xchg
sbb
cmpsb
stc
sti
ret
inc
mov
sbb
push
bound
test
leave
(bad)
jp
xlat
aad
and
sub
repnz
push
cmp
outsb
xchg
pop
arpl
rorl
sbb
test
mov
adc
xchg
cwtl
pop
insb
inc
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
inc
mov
push
cmp
adc
sub
rcll
mov
aad
xchg
mov
rcrb
arpl
cltd
imull
ds
notl
or
mov
nop

xchg
or
xor
jbe
add
sti
mov
popa
popa
mov
push
jnp
adc
les
aam
and
push
and
and
(bad)
jle
mov
sbb
lods
enter
in
pop
call
or
flds
in
xor
int
sbb
mov
movsl
dec
sahf
mov
in
adc
inc
push
and
sbb
shlb
(bad)
stos
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
or
int3
int3
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
leave
sbb
lea
inc
out
jae
dec
lods
sub
(bad)
cli
les
mov
mov
inc
dec
xchg
sub
xchg
test
imul
inc
mov
inc
sub
sahf
ljmp
mov
xchg
cmp
or
jge
das
sub
popa
xchg
out
mov
loop
ds
or
in
jge
test
iret
int
out
ret
mov
loop
rcrl
int
fisttpl
sub
pop
xchg
mov
dec
pop
adc
and
daa
stos
cwtl
jecxz
mov
sahf
fnsave
popa
jecxz
gs
and
(bad)
ror
inc
loope
cs
js
lret
or
jmp
shl
xor
jbe
in
sahf
jle
dec
sub
inc
fmul
xor
(bad)
fwait

ds
sahf
lods
adc
icebp
push
mov
jmp
xchg
outsl
xchg
adc
lods
icebp
(bad)
inc
add
ds
mov
mov
and
mov
jge
rcrb
push
test
mov
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
outsl
mov
test
cmp
push
icebp
push
push
lret
popf
add
mov
icebp
jbe
and
adc
adc
icebp
sar
mov
hlt
adc
outsl
inc
call
push
movb
xor
push
fistpll
inc
out
lcall
lods
repnz
repnz
mov
add
sarl
outsb
ror
lcall
mov
das
into
inc
push
adc
scas
jmp
insl
pop
push
out
xorb
rolb
push
sub
cmp
pop
adc
les
cmp
add
xor
nop

sub
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
insl
mov
js
sbb
mov
xor
ret
pop
addr16
nop

xchg
xorl
aas
mov
addr16
xchg
jno
call
mov
mov
dec
add
xchg
das
adc
mov
inc
dec
xchg
sbb
dec
push
mov
rolb
cmp
sub
xchg
lcall
fildl
repnz
and
or
in
aad
cli
sub
or
ret
std
or
push
mov
pushf
(bad)
xor
or
dec
sub
scas
mov
cmp
xor
sahf
into
push
test
mov
cld
adc
mov
mov
(bad)
fwait

mov
dec
into
ret
les
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pusha
xor
cmp
aam
cmp
nop

ds
xor
and
into
mov
cs
es
movsb
sbb
into
xor
dec
mov
mov
sbb
jmp
push
mov
aad
(bad)
std
jl
mov
lods
sbb
xor
movsl
pop
push
add
pop
xorb
sbbl
dec
out
mov
adc
cmp
cmp
push
lods
pop
fsubp
push
(bad)
idivl
mov
bnd
adc
jbe
sahf
in
xchg
pop
rcrb
std
jbe
pop
rorb
mov
sbbb
leave
popa
jnp
int
shlb
aas
lea
xchg
fistpll
xchg
fs
xchg
jnp
add
sub
fwait

pop
jge
inc
jbe
or
xor
push
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
fidivrl
inc
sub
or
fwait

fwait

add
push
sbb
ret
test
repnz
xor
and
push
adc
out
mov
lds
outsb
lods
lock
push
xchg
push
mov
push
(bad)
push
hlt
jo
mov
add
xchg
int3
dec
fbld
outsl
push
sarb
ret
jge
push
xlat
jnp
lret
push
sub
jns
push
sbb
out
xchg
mov
mov
mov
iret
mov
push
pusha
bound
push
sub
mov
adc
loopne
lret
dec
push
mov
sbb
sbb
xchg
pop
lock
xchg
mov
subl
push
adc
fldl
add
jle
add
push
xchg
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
gs
fsts
ss
pushf
mov
aaa
(bad)
mov
rorb
jne
dec
sbb
add
cltd
mov
mov
cmpsb
dec
adc
or
lcall
movsl
inc
(bad)
(bad)
mov
inc
push
daa
mov
adc
test
adc
and
mov
scas
mov
popa
inc
lea
pushf
adc
xchg
andl
subl
push
xor
ljmp
add
xchg
xchg
fdivr
pop
xor
sbb
roll
push
popf
xchg
sbb
int3
lret
jg
add
imul
xor
(bad)
(bad)
shrl
scas
movsl
cmc
inc
fwait

sti
sbb
mov
test
jl
int
sahf
sub
jbe
cwtl
scas
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jae
add
cmp
movsl
test
sbb
mov
orl
jge
adc
inc
test
inc
mov
xor
shll
mov
pop
xchg
sub
mov
mov
sbbl
subb
lods
shll
cmpsl
fwait

adc
adcl
lea
lea
or
mov
hlt
test
mov
out
inc
jp
jbe
lcall
sbb
add
stc
clc
cmpsl
ja
repz
popf
dec
insb
arpl
icebp
mov
cmp
sub
orb
push
fbstp
add
and
hlt
movsb
jae
push
xchg
jb
pop
pop
xor
jle
dec
fwait

or
mov
and
or
leave
mov
les
jle
aas
sub
jl
into
dec
mov
jg
cmp
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
dec
rcrb
xchg
sbb
into
dec
cltd
aam
hlt
fidivrs
and
mov
(bad)
dec
ret
or
mov
popa
and
mov
cmp
dec
mov
and
or
loope
sbb
inc
fdivr
fsubl
cld
or
ret
insb
mov
mov
lahf
cmp
mov
divb
(bad)
xchg
push
adc
and
push
insb
cmp
loopne
je
in
inc
fisubrs
push
out
loope
sti
adc
inc
mov
cld
subl
xor
in
jnp
xchg
xor
lret
xchg
pop
sarl
xorl
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
stc
test
add
dec
in
popf
sub
xchg
lods
cmp
pop
xor
imul
inc
sub
outsl
sbb
outsl
pusha
sub
and
hlt
movsl
insl
dec
xor
pop
mov
adc
mov
xor
cmp
test
imul
lret
(bad)

jb
xor
movsl
xorl
lods
(bad)
lret
mov
repnz
dec
(bad)

xlat
movsl
xor
pop
mov
mov
xlat
sub
xchg
add
test
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
inc
xor
cmp
adc
lret
cs
adcb
add
int
scas
lret
sbb
add
cld
stos
in
icebp
push
neg
xchg
lods
mov
inc
push
loopne
cmp
repz
movsb
xchg
fwait

or
fidivs
pop
mov
cltd
mov
stos
icebp
lock
ss
push
push
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
dec
iret
mov
pop
adc
icebp
out
fldcw
je
clc
adc
mov
(bad)
icebp
mov
inc
out
aad
fwait

dec
mov
pop
icebp
xor
imul
sub
mov
popa
jle
push
or
in
xor
add
pop
push
in
test
fbstp
adc
xlat
(bad)
jno
std
xor
fwait

aam
aaa
iret
and
shll
lock
xor
sahf
scas
adc
(bad)
icebp
pusha
push
orb
test
loope
rorb
frstor
push
adc
xchg
mov
push
lret
xchg
loope
cltd
mov
xchg
js
pop
push
xor
xchg
jmp
jne
jbe
loopne
sub
(bad)
(bad)
hlt
xchg
push
add
aam
adc
enter
into
sahf
faddl
mov
aad
(bad)
aas
sahf
test
call
in
adc
mov
vmwrite
add
push
pop
fadds
sahf
add
enter
xchg
lock
rcrl
lret
insl
mov
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
cli
orb
or
adc
sub
ljmp
stos
mov
ss
sub
xor
xchg
push
mov
(bad)
dec
push
fldl
dec
(bad)
bnd
jo
sbb
sub
xchg
inc
repz
jge
mov
cmp
repnz
mov
lcall
mov
pop
ljmp
cmp
int
inc
out
mov
in
dec
pushf
scas
cmp
popa
cmp
in
dec
aaa
adcb
cmp
mov
pop
mov
movsl
cmp
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
dec
jle
flds
add
push
jne
cmp
mov
sbb
xchg
sahf
lahf
adc
push
xchg
jmp
es
mov
jg
div
and
lret
mov
cli
iret
mov
xor
xchg
sbb
outsb
mov
into
ret
les
xchg
loope
mov
sbb
push
mov
and
scas
xor
mov
add
mov
loop
mov
mov
add
mov
icebp
ljmp
push
cmpsl
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
addr16
popa
xchg
daa
adc
cmp
into
cmp
bound
inc
les
jnp
mov
fisttpll
jbe
jae
mov
andb
outsl
fnsave
mov
jae
cmpl
mov
lcall
rcll
pushfw
int
add
mov
mov
bound
cmp
add
repnz
rcll
jnp
xchg
lret
add
mov
pop
int
jle
jne
add
fidivl
nop

mov
(bad)
xchg
inc
mov
cltd
push
mov
fs
iret
xchg
sub
push
data16
andl
insl
fcoml
mov
xlat
sub
xchg
outsb
addr16
inc
int
and
xchg
mov
xchg
sub
loop
int3
sar
decb
mov
and
add
rcpps
push
push
mov
inc
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
inc
enter
mov
jg
movsl
(bad)
test
data16
out
xchg
lea
divps
mov
mov
push
insl
pop
mov
push
nop

dec
orb
popf
adc
ficompl
add
lret
outsl
scas
push
dec
roll
fwait

leave
cmp
xchg
in
(bad)
fistpl
(bad)
decl
push
int
aam
mov
cmp
push
xor
mov
sub
lock
xchg
ficoms
pop
in
insl
pop
xchg
mov
icebp
jns
xchg
lahf
mov
pushf
stc
xor
stos
jnp
out
out
inc
mov
outsb
sbb
sbb
jle
addb
mov
cmp
dec
test
add
clc
jbe
test
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
addl
stos
mov
sahf
test
mov
scas
sbb
mov
test
sub
mov
jbe
xor
add
dec
psubq
test
loope
xor
mov
dec
loope
inc
mov
icebp
outsl
int
cmp
cwtl
lret
cld
xchg
testl
cmpl
mov
es
mov
lods
mov
dec
fstps
jbe
lretw
lock
ds
ja
add
hlt
icebp
mov
cltd
dec
ficomps
out
arpl
icebp
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
add
das
lds
jge
add
outsb
in
ret
imul
int3
mov
or
repnz
test
jle
mov
adc
dec
jne
fisubl
dec
dec
xchg
mov
or
rep
adc
std
or
jmp
scas
imul
cwtl
jno
loop
adc
jecxz
test
imul
int3
movsl
popa
xacquire
(bad)
pop
jl
mov
mov
and
mov
mov
cwtl
test
mov
gs
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
mov
repnz
popa
or
int3
mov
xchg
jmp
push
and
test
out
mov
mov
and
adc
xor
dec
fsts
fistl
cmpsl
add
fwait

je
sbb
ja
xchg
push
inc
icebp
or
ret
(bad)
out
dec
sahf
pop
lret
cld
dec
add
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lret
mov
add
xor
outsb
adc
pop
stos
mov
jbe
and
jnp
mov
subb
lahf
in
gs
cmpl
xchg
push
int3
xchg
xor
movsl
repnz
in
lods
jnp
pusha
das
lahf
dec
inc
inc
jns
sahf
dec
dec
movsb
in
jnp
push
dec
lods
popa
add
push
sbb
mov
int3
adc
push
xor
and
mov
push
cs
jne
or
shlb
lock
jmp
sbb
xor
xchg
into
mov
sbb
add
xchg
out
jge
lods
inc
jnp
xor
pop
cmp
jae
arpl
cmpl
test
(bad)
stc
movsl
vdivps
(bad)
jnp
icebp
dec
and
pop
hlt
popf
mov
stos
divb
push
jmp
pop
cmpsb
mov
xchg
cmp
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
inc
mov
inc
fcmovu
leave
mov
popa
and
dec
loop
or
mov
xchg
jbe
ret
out
or
leave
jl,pn
nop

mov
outsl
rcrl
push
mov
test
or
push
out
push
dec
test
xor
outsl
jns
push
xchg
cmc
mov
test
sbb
inc
jp
mov
xor
scas
adc
sbbl
nop

lock
xchg
repz
sub
call
fcoms
loope
mov
cmc
jp
mov
and
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
fwait

pushf
adc
addb
xchg
loope
sti
and
sahf
addr16
jmp
pusha
add
sar
jl
stc
mov
push
jge
and
xor
stc
jmp
push
pop
xor
popf
clc
test
jge
pop
ja
cmc
jno
loope
xor
popf
sbb
adc
add
sub
out
movsb
(bad)

shrb
xor
hlt
adcb
sarb
cmc
shld
mov
test
scas
jno
jbe
xor
jbe
jg
dec
shlb
jle
enter
clc
jle
xchg
test
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
sub
out
add
std
rcl
bound
cmp
(bad)
pop
fisttpll
xor
jnp
cmp
adcl
pop
jns
gs
cmp
xor
jl
lret
sub
and
shl
sbb
nop

add
dec
xorl
sub
test
cld
leave
dec
popa
add
sub
stos
xlat
mov
pushf
out
jno
push
es
mov
leave
std
sub
xor
sarl
pop
xor
lcall
xor
roll
aaa
mov
iret
xchg
je
popf
into
mov
ret
add
mov
xchg
jno
jae
ret
mov
or
sti
or
sub
lcall
push
leave
subb
push
xor
inc
xor
inc
xchg
adc
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
scas
mov
pop
sarb
jge,pt
in
loopne
das
clc
icebp
push
(bad)
fadds
imul
stc
addb
insb
xor
mov
test
in
roll
xchg
jecxz
pusha
stc
mov
jbe
sbb
add
outsl
xchg
lods
push
ret
lret
(bad)
mov
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
sbb
lahf
xchg
cmp
(bad)
sbb
lods
jno
adc
adc
mov
sarl
lret
xchg
sub
mov
cmc
adc
sub
pop
rol
rcrb
cld
into
or
cmp
and
adc
into
in
cmc
lods
xchg
add
and
ret
(bad)
pcmpeqb
into
sti
pusha
cmp
pop
mov
es
mov
adcb
lret
das
cli
sbb
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
into
imul
sub
sub
lods
push
sub
push
fs
jmp
jnp
inc
push
cli
adc
jge
fistps
leave
cmp
jo
pop
cmp
xlat
(bad)
rol
sbbb
jnp
(bad)
push
enter
dec
leave
mov
stos
inc
stos
xchg
jnp
lock
loopne
mov
mov
pop
bswap
xor
and
stc
mov
testl
cli
sbb
xchg
adc
xor
mov
mov
push
out
xchg
add
leave
mov
or
push
pop
test
inc
pushf
dec
sbb
add
nop

jbe
popa
movsb
(bad)
out
insl
push
jecxz
inc
stos
adcl
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
cli
ret
int
aas
scas
arpl
jbe
jns
lahf
inc
dec
jp
jge
scas
xchg
out
leave
push
mov
or
mov
xchg
jae
and
dec
fnsave
jmp
std
push
lds
cmc
test
movsb
(bad)
addb
pop
call
cwtl
inc
pop
scas
or
dec
pop
and
fcoml
and
repnz
sub
addb
adc
jae
pop
loopne
mov
ficompl
mov
in
pop
sub
cmpsb
jnp
mov
add
outsb
inc
mov
jbe
nop

and
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
pop
push
or
test
jge
jge
loope
pusha
sub
cmpsb
mov
sbb
mov
xchg
sub
jg
jecxz
mov
js
xchg
rcrb
fstpl
cmpb
hlt
mov
jbe
clc
inc
pop
inc
jmp
xor
cltd
dec
test
dec
mov
lea
jbe
xchg
stos
loop
jns
xchg
xor
dec
lret
and
loop
dec
mov
inc
inc
adc
sbb
dec
subb
cltd
dec
leave
push
fcoml
(bad)
jl
int3
xor
cmp
sti
xor
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
mov
push
aam
testl
cld
sub
loopne
mov
lods
or
lods
subl
cmpsl
sbb
push
aad
call
sbb
cmp
add
lret
mov
mov
push
(bad)
ret
out
rcrl
push
sub
stc
cli
andl
icebp
stos
cmp
mov
addr16
cmp
lret
in
test
sbb
lea
lret
aam
push
minps
or
mov
fdivrl
shl
insb
sbb
dec
mov
cltd
mov
fadd
cmp
lret
orb
enter
loopne
xchg
adc
or
and
xor
ja
pop
clc
icebp
cmp
out
jmp
inc
dec
test
cmc
hlt
aaa
push
add
les
xchg
nop

(bad)
icebp
sbb
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xchg
sub
stos
sti
inc
pop
and
icebp
push
mov
inc
aam
(bad)
dec
iret
jo
sbb
jnp
adc
lcall
or
(bad)
adc
xor
xchg
inc
and
lods
adc
cmp
mov
call
add
test
jo
adc
mov
lea
mov
mov
lods
out
lock
int3
int
icebp
test
or
mov
mov
iret
stos
xchg
(bad)
sarb
les
jge
sar
xchg
ret
shlb
enter
pushf
cwtl
jle
cmp
stos
fldcw
hlt
add
roll
(bad)
scas
bnd
pusha
fnstenv
test
jecxz
scas
int3
js
stos
adc
jle
sbb
pop
push
lock
xchg
cmp
ret
bound
stos
scas
daa
nopl
adc
add
fs
push
sbb
jmp
movl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
push
sti
repnz
mov
int
mov
or
jl
lock
cld
dec
addb
jbe
out
push
in
cwtl
mov
adc
mov
xor
repnz
dec
stos
sub
or
call
lds
mov
dec
adc
adc
mov
mov
mov
jl
test
negb
shlb
xchg
dec
aam
and
xlat
fwait

xchg
jmp
mov
adc
dec
and
data16
jae
stc
cmp
mov
shlb
adc
mov
mov
out
dec
adc
in
push
jge
lods
mov
pop
sbb
push
and
cmpsb
nop

lcall
adcl
mull
cld
add
pop
mov
mov
jle
jbe
fidivs
cmp
(bad)
pop
in
or
jbe
repz
in
nop

data16
mov
fisubs
xchg
orb
push
iret
jp
lock
sub
pinsrw
(bad)
xor
and
scas
stos
shld
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
arpl
mov
and
inc
xchg
call
push
mov
insl
push
or
xchg
ljmp
icebp
push
dec
cmpsb
mov
push
cld
jl
push
test
rcr
sub
add
mov
xlat
pop
sbb
test
and
mov
lret
scas
popf
inc
test
xlat
mov
int
outsl
addl
je
imul
std
scas
push
adc
xchg
jge
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
push
cmp
jne
add
out
test
icebp
dec
cmp
jbe
add
shrb
subb
test
sub
andl
mov
dec
stos
dec
ljmp
shlb
int3
pop
call
cmpsb
test
or
mov
dec
out
xor
insl
lahf
insb
fists
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
push
shl
shl
insb
push
xorb
adc
ljmp
call
sub
(bad)
ficoml
or
in
push
into
add
insl
xor
stc
rorb
das
xlat
cmpb
lods
subb
sub
dec
stc
add
gs
shll
in
jnp
add
dec
fdiv
sub
cmp
dec
popf
ja
mov
adc
cmpsl
popa
adc
bound
mov
dec
stos
iret
pusha
imul
pop
jmp
fnstcw
sub
test
pop
mov
pusha
stc
popf
jne
sub
stos
xor
sub
push
in
xor
call
ficoms
iret
cmpl
xor
lcall
lds
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
add
sbb
lret
orl
dec
push
fldcw
dec
lret
orl
mov
stos
and
and
mov
frstor
rcrl
mov
mov
adc
and
inc
xchg
lret
call
rcll
mov
rolb
shlb
mov
jnp
xor
mov
mov
or
fs
lcall
roll
out
movb
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
adc
repnz
(bad)
arpl
mov
pop
add
mov
adc
mov
pop
andb
xor
pop
adc
sbb
xor
xchg
cmovbe
rolb
aaa
ja
pop
xor
jno
stos
xor
pusha
mov
or
xchg
mov
gs
faddl
insl
xorb
sbb
iret
and
lods
sbb
sahf
xor
aad
sbb
cmp
pusha
push
out
test
int3
xchg
or
xchg
xor
xchg
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sub
je
js
in
xchg
fdiv
std
mov
in
fs
xchg
push
xor
inc
sbb
loope
pop
cmp
xor
xchg
xor
pop
fs
pop
lcall
mov
xchg
xor
repnz
stc
les
fwait

push
cmp
movsl
out
cmp
or
outsb
or
inc
fiaddl
cmp
roll
mov
repnz
mov
dec
frstor
into
mov
sbb
jo
xchg
xor
les
mov
je
jp
mov
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xorb
bound
in
into
jmp
pop
outsl
call
adc
dec
lahf
adc
sub
xor
fs
(bad)
mov
push
shll
lock
push
lock
jbe
cmc
mov
sub
and
mov
sbb
sarb
sbb
add
xchg
sub
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
fstpt
fsubrs
aaa
mov
xchg
stos
movlps
cmpsb
inc
scas
int3
inc
dec
out
xor
push
pop
cmp
pop
enter
aam
cmpsb
dec
orl
pop
cltd
aam
(bad)
int
push
jle
fdivr
and
lods
cmpsb
sbb
jnp
pop
addb
test
xor
pop
cmpsb
cmpsb
(bad)
push
jge
test
mov
les
je
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
stos
adc
(bad)
mov
testl
pushf
cmpsb
xor
stos
divl
and
leave
sahf
mov
loopne
enter
leave
loop
sbb
inc
pop
orb
pop
(bad)
dec
jle
orb
adc
mov
lret
push
push
mov
int
fildl
mov
mov
mov
jg
and
das
sbb
xchg
add
sub
sub
mov
test
fcmove
sub
test
or
aam
sbb
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lahf
repz
mov
incb
leave
repz
cmp
int
mov
push
leave
test
inc
in
subl
sbb
mov
mov
jle
xchg
repz
mov
jg
mov
or
iret
shll
jp
xchg
(bad)
bnd
(bad)
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
(bad)
stos
or
add
movsb
es
lea
inc
mov
in
jmp
out
icebp
sub
mov
repnz
mov
nop

adcl
ret
sbb
icebp
sbb
clc
jne
sbb
mov
popl
stos
sahf
inc
test
mov
sbb
shll
mov
mov
sbb
out
mov
into
adc
mov
inc
or
xor
clc
mov
(bad)
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
and
out
ret
sbb
pop
pop
mov
ret
iret
xor
xor
fnstenv
pop
cld
(bad)
push
dec
pop
daa
xchg
(bad)

mov
pop
cmpb
pop
(bad)
(bad)
mov
sub
push
insl
pop
mov
mov
adcb
mov
add
test
xchg
notl
clc
mov
jge
rorl
cld
adc
(bad)
scas
adc
pop
lock
fsubrs
test
xlat
(bad)
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
(bad)
mov
xchg
lea
leave
fdivrl
mov
pusha
inc
addb
arpl
nop

imul
mov
lds
inc
scas
scas
movsb
test
adc
xor
jno
fsubl
push
scas
enter
cmc
fstps
insl
movsl
cmp
ffreep
sbb
jbe
dec
xorl
call
subl
inc
add
sub
mov
adc
add
scas
mov
mov
adc
stos
mov
popa
add
pop
pop
dec
push
add
outsl
(bad)
pop
xorl
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
inc
xchg
jp
ds
cli
mov
fmull
push
shll
lea
add
jge
jge
sub
push
xchg
pop
inc
xchg
and
or
mov
popf
fmul
(bad)
lea
outsb
cmp
sub
fisttpl
ds
sbb
xlat
xchg
mov
gs
xor
pop
jae
mov
out
inc
cmp
inc
sub
fistpl
or
lea
add
sbb
dec
mov
jp
call
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
pop
jg
jl
jb
sbb
jno
and
insb
inc
lock
or
pop
lock
inc
(bad)
out
xchg
lahf
mov
mov
mov
hlt
repnz
pop
jecxz
mov
sbb
jbe
add
cmp
aam
add
xchg
xchg
lret
in
sbb
andl
push
sub
lret
and
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
inc
addb
popl
les
test
ret
mov
shl
(bad)
and
xchg
leave
(bad)
stos
pop
popf
push
shrl
ss
addb
mov
int
mov
jl
rolb
lret
lret
lods
gs
sbb
scas
out
jae
push
scas
(bad)

outsl
push
(bad)
jns
inc
(bad)
leave
scas
rcrl
pop
out
stos
dec
mov
int
(bad)
jb
dec
nop

xor
adc
lock
repnz
popf
and
xchg
leave
mov
xchg
lods
pop
adcb
sahf
adc
sbb
repz
jp
sub
mov
jge
xor
setno
rol
cli
lds
sub
lret
(bad)
aam
xor
hlt
mov
gs
daa
je
and
xor
cmp
push
imul
mov
int
lret
mov
sub
sbbl
(bad)
(bad)
cmc
rcr
lcall
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pop
pop
out
punpckldq
shr
jb
imul
xor
aaa
lahf
(bad)
hlt
xor
inc
stos
jge
stos
mov
adc
std
outsb
imull
test
pop
xor
xchg
dec
jo
shrb
out
cmp
push
out
(bad)
out
jne
jmp
andb
jne
enter
rclb
(bad)
cmp
sbb
lods
das
jbe
jo
lods
jne
mov
mulb
sbb
lods
(bad)
loop
fs
adcb
jo
inc
mov
leave
sub
out
jg
or
aaa
and
sti
push
jle
xchg
xorb
iret
(bad)
cmc
pop
test
call
adc
sbb
subl
inc
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
mov
inc
out
insl
cli
data16
test
pop
xor
shrl
mov
dec
daa
rcrl
push
jb
mov
arpl
nop

sbb
jns
pop
insb
nop

mov
test
pushf
lea
dec
inc
int
rorl
das
frstor
jle
mov
push
callw
jo
mov
std
mov
int3
movsb
add
xchg
dec
lds
aas
rclb
or
dec
push
mov
repnz
jb
pop
js
xchg
mov
jge
ud0
test
sbb
jbe
pop
orl
xchg
scas
dec
bnd
(bad)
icebp
insb
adc
addl
loopne
call
dec
loop
dec
add
nop

(bad)
mov
and
and
cmc
xchg
mov
mov
mov
mov
xor
pop
mov
out
je
pop
(bad)
lock
xchg
scas
loop
mov
sbb
xor
call
push
xor
ret
repz
(bad)
pop
mov
xor
cmp
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cli
stos
adc
xchg
fcoms
stos
cmpsl
inc
mov
cmp
cltd
int3
out
into
xchg
pop
lret
imul
test
mov
rorl
push
fdivrl
add
arpl
into
nop

cli
lret
lea
(bad)
les
rolb
loop
fsubs
scas
mov
test
push
dec
cwtl
test
sbb
jmp
into
jnp
mov
stc
jne
jecxz
incl
shl
sbb
je
test
scas
sahf
jle
xchg
xor
and
arpl
sar
repnz
sbb
out
jmp
int3
jl
push
jle
(bad)
data16
repnz
dec
or
ljmpw
aaa
pop
lret
push
dec
addl
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
call
imull
mov
fs
orl
rep
in
jmp
xor
fcompl
adc
mov
or
int
in
mov
pop
sub
mov
sub
lret
enter
pop
call
xorb
jb
dec
sbb
add
push
insb
inc
mov
mov
pop
mov
lea
xor
add
jo
adc
sub
fwait

dec
xor
ja
push
fiadds
aad
push
jno
push
psllq
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
stc
dec
cmp
aaa
test
fwait

scas
jge
push
(bad)
fimuls
sub
scas
fcmovnb
cwtl
pop
int3
aaa
inc
adc
orb
call
adc
dec
jp
cmp
popf
push
ror
fsubrl
popa
call
sbb
sbb
fmull
dec
stos
adc
inc
sbb
lds
gs
mov
addr16
xchg
and
sub
xchg
mov
jge
lcall
in
out
dec
shll
test
mov
fld1
js
mov
adc
test
iret
addl
mov
mov
xor
(bad)
lcall
and
rorb
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cmpsb
adc
incl
lea
lret
inc
jns
call
lock
(bad)
sbb
jae
mov
loopne
sub
and
scas
mov
jp
mov
mov
sub
mov
mov
mov
(bad)
jnp
adc
frstor
lds
shrl
cmp
dec
lahf
lods
mov
mov
xchg
sahf
ficomps
mov
decl
or
xchg
sbb
nop

or
jle
cmp
cltd
test
cld
inc
jno
xchg
xor
enter
add
fwait

dec
push
pop
inc
les
mov
cmc
and
popf
adc
push
jo
das
movsb
loop
test
inc
leave
arpl
push
sub
addr16
xor
or
push
cmp
insl
sbb
xchg
mov
push
sbb
cmpsl
lock
xchg
adcb
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
inc
ret
mov
lcall
mov
insl
or
adcl
hlt
in
xchg
mov
adc
fists
xchg
push
shll
or
test
es
mov
xor
mov
movsl
movsl
ret
movl
int
jecxz
(bad)
movsb
mov
out
add
cld
push
stos
adcl
fnstcw
xchg
repz
mov
shll
stc
sbb
lcall
mov
push
cli
lret
mov
push
shl
add
cmp
sub
sbb
sub
(bad)
cmpsb
incl
push
pop
mov
push
lret
repz
sub
orb
xlat
ret
mov
pop
daa
lods
xrelease
add
cmp
jb
cltd
rcrl
dec
mov
fs
nop

insb
andl
xchg
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
cwtl
stc
out
mov
mov
add
adc
out
lahf
ret
xchg
and
call
nop

pop
mov
sbb
rcrb
insl
ret
jbe
xchg
repnz
scas
mov
push
sbb
hlt
cs
inc
into
adc
mov
and
jge
shr
jb
sbb
xorb
pop
xor
jo
inc
sahf
fiaddl
xlat
or
and
sbb
and
pop
stc
jp
test
(bad)
xchg
adc
out
imul
xor
(bad)
mov
and
dec
loop
sti
inc
pop
loop
jbe
adc
mov
mov
into
cli
lea
pop
addb
sbbl
sbb
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
xchg
lahf
mov
add
xor
pop
cmp
fwait

shlb
fmull
cltd
jp
and
mov
arpl
cli
faddl
mov
mov
push
dec
out
sub
je
inc
xchg
mov
xchg
jge
xor
mov
sbb
repnz
fstpt
sbb
scas
gs
adc
xchg
adc
pop
dec
sub
(bad)
cmp
pop
iret
mov
in
das
sahf
cmp
ret
mov
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
push
adc
cwtl
pop
lret
imul
cmp
imul
adc
test
dec
xchg
sub
imul
and
jecxz
shl
movsl
(bad)
in
pop
jle
inc
test
mov
adc
je
jne
or
xchg
fsubrs
shlb
xchg
(bad)
or
inc
sbb
cmc
aaa
or
push
cwtl
jle
cwtl
or
pop
sbb
pop
ficoml
int
mov
movsl
ss
mov
jl
in
cmc
dec
rcrb
imul
push
lret
stc
out
xorb
movb
outsb
addl
pop
xchg
sahf
jnp
cmpsb
jnp
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
or
inc
popf
int3
cwtl
jg
inc
cld
fisttpl
mov
andl
fucom
out
test
sub
ret
cmpsb
fisttps
mov
(bad)
std
imul
add
stos
mov
clc
pop
rcl
les
(bad)

mov
scas
or
(bad)
push
aaa
push
xor
sahf
add
mov
mov
cld
fisttpl
(bad)
int
xor
ret
jg
adcl
les
or
loope
jbe
push
mov
dec
scas
addl
jae
(bad)
cmp
cwtl
mov
and
xchg
push
adc
idivl
or
cltd
fidivl
inc
ja
mov
stc
sbb
into
xchg
pop
add
rcll
adc
mov
loopne
push
lret
mov
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
loopne
jge
xchg
jne
xor
mov
inc
mov
in
push
andb
inc
mov
xchg
in
imul
jno
xor
adc
or
jns
pop
imul
dec
cld
xor
mov
sarb
inc
je
call
xor
orb
mov
test
stc
stc
add
inc
(bad)
sub
lcall
jmp
nop

in
and
movsb
mov
lock
stc
clc
(bad)
into
mov
(bad)
int3
xor
push
cwtl
cmc
push
push
int
daa
mov
xchg
jbe
(bad)
fbld
add
ds
push
aam
pop
hlt
inc
mov
in
lods
mov
fwait

sbb
xor
adc
call
subb
popa
mov
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
aam
mov
fs
pop
stos
inc
movsb
in
sbb
ja
addb
nop

notb
nop

inc
shll
loopne
fs
out
push
fsubrl
xchg
pop
jmp
fisttpll
and
mov
subb
mov
xchg
sbb
inc
lea
shl
das
outsb
adc
mov
mov
mov
sub
cmp
pop
(bad)
ss
add
insl
dec
xorl
sub
inc
lods
das
outsl
push
cwtl
ds
sub
(bad)
and
in
xor
dec
addb
xchg
cmpsb
popa
xor
pop
sub
imulb
pop
stos
cmp
adcb
cmpsb
sbb
into
lcall
(bad)
hlt
es
xchg
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sub
inc
insl
pop
roll
xor
xchg
sub
pop
inc
(bad)
push
sub
mov
shll
mov
cmp
jb
mov
xchg
push
test
xchg
add
repz
xchg
jecxz
orl
lock
jle
les
loop
mov
ja
mov
lea
stos
movsl
fcoms
adc
mov
arpl
push
xor
xor
push
fnsetpm(287
mov
pop
mov
lea
je
(bad)
std
repz
test
and
pop
rolb
sub
repnz
pushf
(bad)
fs
fldl
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
or
cmp
stc
cmp
or
fstpl
stos
jb
lcall
(bad)
andl
adc
adc
sbb
mov
rclb
mull
outsb
ljmp
imul
pop
push
xorb
dec
adc
or
mov
mov
cmpsl
pusha
push
push
test
pop
stos
popa
push
mov
xchg
cmpsb
lcall
and
xor
je
xor
and
fcoms
sub
sbb
orb
pop
push
sub
cmpsl
dec
dec
ss
jb
pop
xchg
mov
jnp
mov
fucom
jbe
or
push
dec
adc
test
test
push
roll
and
int3
mov
cmp
mov
jge
jo
daa
pop
push
(bad)
lods
mov
jecxz
push
jmp
les
sahf
rclb
cmp
mov
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
jae
fiaddl
xchg
xchg
(bad)
pop
mov
fstps
lea
and
pushf
pop
out
shll
push
jp
xor
push
inc
dec
in
mov
inc
loope
repnz
xchg
xchg
mov
xchg
inc
sbbb
insl
jecxz
inc
xchg
push
fwait

ret
into
sub
add
mov
push
mov
jnp
stos
les
cld
mov
push
ds
inc
in
mov
push
out
test
lea
sbb
int3
aaa
sub
jbe
in
daa
out
pop
inc
mov
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
scas
jp
jp
(bad)
or
ss
movsb
fs
pop
mov
jp
mov
stos
mov
inc
addl
fbld
dec
xchg
add
sbb
adc
ja
in
cmp
rep
mov
cmovg
add
fucomip
mov
loope
pop
push
adc
sbb
(bad)
and
jmp
jb
add
or
inc
es
scas
inc
int
sbb
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
sub
mov
pop
(bad)
and
add
fstpt
xchg
mov
fisubrs
mov
push
mov
push
std
scas
dec
(bad)
cmp
jns
jns
repz
cmpsl
insb
shll
xorl
sub
inc
nop

pop
aam
lea
push
in
mov
repz
or
mov
dec
and
jo
lods
sub
fs
stos
aaa
test
test
sub
lods
inc
xor
leave
inc
nop

mov
test
stos
push
jmp
sub
pop
ljmp
xchg
movsl
loopne
jg
fidivs
push
iret
lea
push
popl
xor
aad
xor
lock
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sbbl
in
mov
das
fdivl
ja
push
pop
inc
mov
add
xchg
lcall
jge
(bad)
and
inc
inc
mov
dec
pop
fiaddl
shr
je
add
inc
out
lahf
adc
jge
(bad)
or
push
push
xchg
cmp
inc
out
notb
lret
lea
jbe
hlt
test
lea
sub
add
push
push
sahf
jge
adc
sbb
enter
sbb
jno
mov
add
sbb
push
push
cltd
xorb
(bad)
ss
div
jns
lret
lea
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
addb
leave
divl
xor
add
add
mov
or
xchg
movsl
loop
popa
mov
insb
cmp
cmp
out
sar
push
push
sbb
mov
dec
adc
jecxz
das
pop
sbb
fs
call
outsb
mov
jl
inc
sub
lret
jge
rorb
subl
lods
(bad)
cld
test
cmp
xorl
mov
or
lea
jp
sub
inc
and
shld
stc
mov
push
nop

xchg
icebp
jp
mov
mov
lods
cmp
mov
jmp
and
dec
xlat
shlb
sub
push
xchg
pop
dec
das
sbb
insb
shlb
mov
loope
or
add
cmp
lods
xor
arpl
aad
fadds
dec
mov
data16
into
xchg
xchg
and
mov
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pusha
push
dec
test
xor
call
aad
jne
frstor
ret
test
je
inc
scas
pop
jmp
push
pushf
pop
hlt
imul
mov
sbb
test
rolb
loope
xchg
(bad)
loope
icebp
or
call
push
adcl
nop

xlat
mov
les
xchg
lahf
inc
je
outsl
(bad)
movsl
inc
loopne
pop
(bad)
hlt
loope
gs
out
xchg
push
push
xchg
push
in
mov
sahf
jo
xchg
mov
faddl
lret
cwtl
insl
rorl
shrb
and
push
(bad)
lret
(bad)
cmpsl
xlat
ja
pusha
pop
xchg
not
and
fisubs
decb
add
in
xchg
scas
cmp
fdivrs
push
mov
lock
ret
int3
jle
imul
xor
stc
jle
push
mov
xchg
faddp
xchg
out
es
mov
test
lods
stc
add
stc
out
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
and
imul
mov
es
mov
xchg
mov
mov
aas
and
cmp
inc
enter
in
jne
sbb
or
mov
sbb
mov
pop
stos
ja,pn
sub
fdivs
add
aad
aam
int3
xchg
xchg
push
lea
mov
mov
insl
sub
nop

xor
(bad)
call
xchg
mov
push
lds
inc
testb
aas
lret
daa
(bad)
clc
bound
es
pop
repnz
movsb
lret
mov
push
jb
cld
pop
scas
sub
aam
fldenv
xor
sahf
cwtl
repz
xchg
fadds
sar
into
(bad)
sbb
iret
test
mov
push
imul
cmp
clc
loop
sbb
(bad)
je
cwtl
lea
rorl
mov
sub
out
sub
dec
test
repnz
cmp
mov
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
add
dec
clc
mov
ret
inc
pop
mov
cmc
aam
sbb
orb
ret
xor
pop
mov
dec
cmp
(bad)
jns,pn
jge
lods
jb
cmp
jo
push
mov
scas
gs
inc
push
push
loope
mov
sbb
enter
lret
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lds
fwait

and
rolb
insb
xor
sbb
add
dec
pop
add
mov
outsb
gs
jle
call
inc
jne
mov
pop
fsub
pop
repnz
insl
outsl
adcl
add
in
sub
hlt
mov
stos
mov
sbb
lea
push
mov
sub
rcrl
int3
inc
popa
mov
xor
popf
mov
cmpsb
call
and
fimull
shl
jne
push
pop
in
and
dec
add
aam
addr16
out
or
test
sub
cmp
es
in
and
jge
xchg
nop

xlat
sub
aad
pusha
incl
mov
jge
xchg
jecxz
mov
adc
in
fwait

add
mov
aas
push
mov
sahf
lods
inc
dec
stos
test
sti
gs
loope
xchg
jg
add
xor
in
mov
scas
lock
jb
in
stos
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
or
sub
xchg
xchg
push
xchg
xchg
popl
xor
push
xchg
xlat
and
stos
mov
rorb
lea
xchg
scas
movsb
add
out
aam
pop
lea
push
jae
fdivrs
aas
sarl
test
mov
das
mov
pop
sarl
mov
mov
cmp
jecxz
dec
addl
dec
int3
pop
mov
scas
xor
xchg
xor
xchg
sbb
mov
adc
xor
imul
push
insl
frstor
or
sub
aaa
ds
les
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
(bad)
xchg
lret
and
push
cmc
int
filds
fsubr
stc
shlb
add
ja
inc
insb
xor
pop
mov
mov
es
xor
xor
jecxz
cwtl
cld
add
clc
test
out
cmpl
xchg
addr16
(bad)
rorl
xchg
out
(bad)
std
sub
adc
or
notl
mov
mov
cs
nop

and
int3
sub
fbld
es
mov
sahf
mov
jg
mov
pop
and
sub
sti
cli
pop
adc
and
movsb
daa
shrl
mov
adc
or
flds
xlat
test
loop
ret
sub
xchg
scas
mov
mov
push
jnp
adc
mov
movsb
pop
out
and
jmp
ja
popf
mov
test
jl
out
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
not
ret
bound
rol
sub
mov
ret
repz
pop
pop
and
ret
ret
das
and
movb
sbb
mov
dec
adc
dec
test
pop
jne
stos
in
outsb
flds
sahf
pop
mov
pop
fbstp
and
mov
jge
sahf
movsl
call
jne
lock
mov
repz
ret
push
enter
out
je
lods
and
mov
xchg
inc
int
pop
and
data16
sbb
fwait

in
test
xor
lret
jae
mov
mov
xchg
(bad)
shlb
xor
add
aam
cltd
lock
in
std
rorl
rorl
test
push
inc
mov
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sub
loop
pop
repz
jg
fs
sub
mov
in
and
pop
cmp
rcl
cmp
inc
cmp
adc
scas
jne
mov
inc
movsl
outsb
loope
jne
push
and
(bad)
(bad)
daa
repnz
out
inc
arpl
sub
sub
sub
or
inc
lret
fwait

jmp
mov
adc
jb
out
jmp
xor
ja
dec
pop
dec
jle
pop
jle
in
sub
mov
jae
dec
in
icebp
pushf
out
rclb
dec
mov
and
mov
mov
shrb
sub
repz
or
in
scas
push
aaa
stos
shll
pop
iret
rcll
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
xchg
leave
mov
xor
test
rorb
xor
cmp
adc
push
sbb
jmp
loop
dec
test
add
shrl
idivb
mov
lds
movsb
out
cli
or
mov
sahf
add
jo
push
and
(bad)
sbb
xchg
sbb
mov
das
ficoms
sub
negl
xlat
in
(bad)
adc
xchg
or
sar
sbb
and
ja
lods
and
outsb
xor
mov
pop
lcall
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
inc
and
sub
shrb
pop
subl
outsl
xor
jne
nop

fnstsw
dec
icebp
xor
xor
push
sbb
sub
shr
and
pop
xchg
sub
rep
sbb
xor
movl
shl
xor
jae
jnp
add
xor
mov
add
cmp
enter
enter
jmp
nop

and
ret
andps
cwtl
jge
xchg
popa
icebp
into
aaa
(bad)
cwtl
jmp
(bad)
lods
jge
mov
mov
andl
inc
inc
fldl
addl
orl
int3
int3
int3
int3
int3
sahf
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
enter
push
(bad)
cs
fiaddl
sbb
test
in
stos
sub
mov
mov
xor
rclb
cmpl
mov
xor
test
sarb
and
orb
pop
stos
ss
lahf
repnz
call
and
mov
push
and
cmpb
pop
sub
adc
es
and
dec
adc
subb
(bad)
out
xchg
enter
lret
ret
cwtl
xor
lds
jb
cmp
jns
pop
add
xor
cli
xorb
lahf
jmp
shll
icebp
cli
push
mov
sub
push
out
push
cmp
or
test
and
(bad)
cmp
popa
xor
aam
inc
enter
hlt
adc
inc
xchg
aaa
inc
dec
arpl
add
jge
jns
enter
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
test
pop
int
mov
and
sbb
imul
and
stos
call
sbb
push
sti
and
(bad)
rcr
lods
xlat
push
fs
push
mov
jle
mov
or
cmpl
sub
es
repnz
push
and
imul
add
out
out
das
(bad)
mov
fwait

dec
jae
jl
clc
cmpl
and
xchg
movsl
int3
test
pop
mov
push
leave
mov
mov
test
int
sub
xor
dec
cld
sbb
or
dec
pop
nop

lea
call
scas
rcrb
jne
pusha
call
and
inc
cs
or
mov
jp
call
les
lcall
mov
aad
or
lret
dec
jge
sahf
or
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
andl
inc
fidivs
xchg
sub
call
pop
clc
lret
pop
test
ljmp
cmpb
(bad)
adc
gs
daa
jle
ds
ja
or
mov
mov
inc
aaa
bound
hlt
jmp
xor
fidivs
push
sbb
scas
dec
(bad)
or
stos
sbb
sahf
dec
decl
mov
xchg
sbb
lcall
pop
add
inc
dec
je
xor
popa
push
fldenv
mov
pop
ffreep
fsubrl
pusha
jnp
mov
lcall
jae
dec
xor
sbb
cwtl
pop
scas
scas
cli
pusha
mov
es
adc
fabs
jg
lock
rclb
fdivs
or
xor
in
mov
out
mov
cmp
push
es
push
jge
fsub
mov
fldt
test
insb
mov
daa
xor
sbbl
cmp
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
movb
daa
subl
xor
fwait

push
(bad)
mov
aaa
sbb
andl
or
cld
lcall
imul
call
mul
mov
add
gs
(bad)
lock
fdivrl
loop
push
(bad)
or
push
mov
lretw
adc
in
jmp
jns
and
mov
lcall
paddusw
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
mov
mov
xchg
xchg
xor
call
bound
out
xchg
mov
sub
xor
subb
sub
(bad)
aam
xlat
mov
xor
mov
arpl
mov
loopne
imul
lret
mov
inc
insl
mov
filds
pop
fucom
je
call
scas
int3
jmp
(bad)
cmp
push
add
test
pop
adc
jge
mov
fmull
(bad)
push
out
jo
sbb
rcr
fnop
pop
pusha
out
xchg
mov
sbbl
push
ljmp
rcr
pop
std
rorl
mov
(bad)
fdivr
rclb
push
jo
and
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
push
mov
cmc
(bad)
jb
fsub
(bad)
mov
xor
mov
loop
add
fdivs
mov
in
fadd
subl
fisubs
xchg
dec
aad
xor
jne
int
fst
or
(bad)
in
lcall
(bad)
(bad)
cmp
mov
sbb
aas
insl
push
fnstenv
mulb
xor
sti
je
std
jl
stos
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
in
mov
jg
sub
faddl
gs
cmp
cld
jle
stc
orb
adc
fwait

test
mov
fsubs
push
xorb
pop
xor
leave
jecxz
fsubl
and
push
das
mov
sub
xchg
(bad)
fisubs
adc
xor
test
faddl
xor
push
inc
cs
sbb
xchg
lods
jge
mulb
mov
rcr
xor
sahf
lods
sbb
stos
jb
lods
mov
adc
xchg
(bad)
stc
and
xorb
fpatan
lea
jl
ds
popa
data16
mov
adc
cmpsl
ret
loopne
or
mov
test
xchg
jl
(bad)
into
xor
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
(bad)
and
repnz
dec
mov
into
aas
test
popl
sbb
pop
out
in
movsl
ret
sbb
push
sbb
xor
inc
cmp
int3
lret
std
jmp
inc
lcall
lods
cltd
jo
fidivrl
jnp
xchg
fs
stos
inc
insb
mov
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cltd
jo
cmc
and
xchg
xor
testb
mov
lret
loope
lahf
leave
xchg
or
and
xor
outsb
repnz
shll
jg
in
adc
xor
jl
jb
aas
mov
aam
rclb
mov
or
pop
xor
leave
jge
out
fdivrl
test
in
mov
lret
fs
cltd
or
int
and
adc
push
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xor
cmp
sub
test
push
jne
aad
loope
stos
call
icebp
loop
outsb
outsb
pop
sbbb
mov
arpl
mov
dec
pop
push
dec
imul
leave
mov
and
xorl
jo
push
aam
fwait

sub
add
cld
inc
push
push
loop
into
loopne
fisttpll
sbbl
mov
(bad)
out
mov
mov
test
lea
push
repnz
jmp
xor
add
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
fwait

xor
andl
inc
stos
loopne
imul
int3
dec
(bad)
sbb
pop
push
mov
neg
adc
pop
cmc
xchg
xchg
lock
mov
aam
sahf
xor
nop

mov
out
and
enter
popa
ss
xchg
adc
test
(bad)
sbb
int
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
push
mov
mov
dec
mull
lahf
sbb
add
pop
leave
out
rorl
stc
mov
dec
mov
fists
cwtl
jge
daa
fstl
leave
lock
in
enter
sub
cmpsl
push
jb
aam
mov
jmp
in
sub
sahf
popf
cmp
push
sahf
nop

or
sbb
test
and
and
outsl
pop
sbb
cs
movb
inc
aad
ret
out
inc
xchg
movsl
sbb
insb
jbe
cmp
movsl
xor
and
inc
orl
shr
and
test
inc
popa
and
add
cmpsl
int3
dec
mov
popa
scas
pop
dec
xor
not
adc
fbld
cwtl
mov
cmp
ror
cwtl
outsl
sbbb
je
addl
mov
xchg
mov
inc
(bad)
xor
adc
xchg
mov
mov
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
nop

xor
mov
jg
fistps
and
fstps
mov
and
loop
xchg
dec
sbb
ljmp
and
cld
orb
jg
jb
cs
int3
mov
jmp
and
or
mov
fs
mov
or
ljmp
ret
fildl
xchg
sub
sti
pop
dec
mov
mov
jge
cmpsb
pop
push
adc
repz
mov
mov
(bad)
mov
xchg
fnstcw
mov
fs
sahf
decl
lock
in
jg
in
loope
inc
add
imul
mov
add
pop
mov
lret
add
addb
dec
insb
pop
inc
ljmp
outsl
test
mov
jae
lret
push
xchg
(bad)
ficompl
xchg
xor
inc
outsl
mov
xor
shl
repnz
popa
sbb
call
jge
jbe
inc
xorb
ljmp
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
push
or
jg
dec
test
clc
outsl
je
popf
pop
cmp
or
shl
stos
mov
xchg
lahf
(bad)
les
dec
sub
hlt
sub
xchg
insl
or
not
xorl
into
(bad)
cli
inc
jle
sbb
clc
into
fstl
movsl
mov
xor
push
sbb
rcr
les
inc
jo
jecxz
and
imul
(bad)
roll
pusha
mov
sbb
(bad)
mov
jbe
sub
xchg
and
push
movsl
scas
stc
insl
stos
fsts
subb
sub
jg
in
mov
iret
push
in
jmp
pusha
lea
stc
loope
shlb
inc
(bad)
sbb
loope
xchg
mov
je
push
sbb
(bad)
mov
clc
xorb
sbb
jle
pop
jbe
adc
mov
pop
leave
xor
xchg
push
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
nop

xlat
movsb
out
xorl
sbb
test
mov
test
ret
call
push
lret
ret
cmpb
iret
or
call
test
lock
push
inc
xchg
pop
adc
shrb
dec
cmp
popl
stos
lret
or
push
jp
mov
insb
aaa
pusha
sar
lds
push
xor
movsl
divb
popa
rcrl
xor
adc
sub
mov
fwait

cmp
in
call
pop
sbb
js
push
pop
andb
jo
jmp
cmp
dec
add
sbb
fiadds
clc
fcmovnu
cld
bound
cmp
inc
lret
adcl
sub
jo
aaa
pusha
sub
dec
push
imul
rcll
pop
pop
leave
mov
std
push
inc
mov
icebp
fs
pop
xor
sbb
leave
sub
sbb
xchg
mov
sahf
fst
or
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
sbb
xor
fwait

mov
mov
add
sbb
sub
mov
mov
subl
jmp
in
test
adc
jb
out
jmp
cmp
or
sbb
or
jo
pop
mov
cmpsl
repz
inc
pop
aaa
and
jb
mov
mov
int
sub
aas
jmp
jg
mov
and
aaa
sbb
shll
xchg
hlt
xor
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
mov
inc
add
xchg
in
mov
es
dec
fistpl
adc
das
je
test
add
jp
add
pop
inc
jne
dec
sub
movsl
aad
les
in
adcb
sti
mov
sub
mov
jge
sub
sub
arpl
push
ret
aad
xorl
int
mov
jg
mov
leave
mov
nop

cltd
inc
mov
jg
call
push
xchg
or
outsl
or
es
rcrl
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jl
cwtl
jnp
mov
arpl
sub
nop

mov
hlt
inc
jbe
cmpb
sub
cmpsl
hlt
stc
jl
lods
test
mov
sbb
cmp
into
bound
sbb
push
dec
sub
jge
out
push
xor
test
xor
cli
push
inc
cwtl
xor
mov
jge
xchg
lcall
jle
xor
or
roll
imul
aaa
jno
test
mov
cmp
into
xchg
mov
dec
(bad)
(bad)
imul
and
pusha
insl
bound
and
and
push
je
fwait

mov
cmpl
cwtl
fdivl
fnstenv
ljmp
in
scas
outsl
sbb
rol
mov
add
mov
xchg
shrl
cmp
sub
ss
faddl
inc
xchg
adc
and
lock
sarl
addb
enter
lock
pop
xchg
ja
mov
lods
lock
jae
subb
subl
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xchg
cwtl
dec
test
mov
adc
mov
jp
fnstsw
adc
jg
mov
frstor
loop
lods
sub
sbb
clc
sbb
jbe
cmpsl
fsubl
push
xlat
fidivrs
pop
mov
xchg
out
mov
add
mov
fistps
or
and
jmp
jae
movsl
adc
shl
sahf
lea
adc
pop
ljmp
jl
lcall
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
and
mov
dec
mov
mov
dec
jnp
inc
fldl
out
inc
(bad)
fsqrt
cmp
lea
mov
andl
jne
jne
in
sahf
ljmp
pop
scas
inc
stc
xchg
jmp
sbb
mov
test
push
add
or
mov
pop
xchg
adc
pop
xorb
test
rorb
aaa
dec
loopne
pop
mov
pop
cld
adc
inc
repnz
clc
scas
fnsave
movsl
nop

xor
out
(bad)
hlt
jl
sub
or
pop
mov
pop
mov
pusha
jo
dec
dec
jge
jl
xchg
flds
and
lahf
nop

imul
lret
sbb
pop
shll
pop
sbb
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
fidivrl
(bad)
cmp
jae
push
insb
(bad)
aam
aas
loope
lock
xchg
and
or
(bad)
fwait

mov
cmpsl
sbb
data16
test
jbe
insl
or
shr
cltd
jbe
shll
jg
roll
xchg
sti
mov
arpl
enter
fldl
pop
mov
mov
sub
out
sub
movsb
xchg
mov
jmp
loop
inc
test
in
cmp
mov
sti
enter
inc
push
icebp
arpl
mov
popa
xchg
out
inc
inc
mov
dec
ss
(bad)
outsl
inc
xor
jne
pop
dec
push
fs
sbb
cmc
mov
inc
call
loop
lods
loopne
mov
test
cwtl
out
lret
(bad)
jae
movsb
outsb
jle
and
push
sub
sub
inc
ja
aaa
sti
rcr
dec
jle
dec
in
out
xor
push
lahf
lea
dec
jecxz
nop

sbb
test
xor
sub
js
pop
mov
arpl
scas
scas
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xchg
nop

pop
and
int
cld
mov
clc
outsl
out
fdivr
pop
xchg
fsub
mov
xorb
cwtl
cmp
dec
sub
lahf
pusha
loop
test
movsl
sbb
or
fisttpl
push
stos
mov
jnp
leave
mov
enter
dec
(bad)
pop
mov
push
outsl
add
mov
aam
mov
mov
mov
dec
mov
insb
pop
pop
xchg
scas
leave
rol
inc
outsl
dec
dec
(bad)
jb
pop
adc
jbe
popf
mov
mov
scas
or
xchg
mov
test
sbb
aaa
mov
test
or
cmp
shrl
lods
xor
mov
addb
(bad)
pop
sbb
out
add
lahf
loopne
mov
pusha
lahf
cmc
cmp
out
out
scas
pop
add
jge
jl
push
lods
repnz
in
(bad)
adc
scas
pop
cmpsb
je
cmpsb
lret
(bad)
cmpsl
rcrb
out
repnz
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
add
sbb
xchg
mov
aas
mov
call
mov
or
pop
mov
test
rorl
jmp
insl
sub
jnp
icebp
cmpsb
and
sub
sub
cmpb
adcl
inc
sbb
popa
mov
mov
in
lods
rclb
outsl
daa
jne
cltd
jp
mov
mov
in
(bad)
ds
xchg
test
out
sub
xchg
lods
psllw
add
sti
xor
or
mov
leave
jecxz
push
daa
and
mov
ljmp
into
lahf
and
ds
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
sbb
xor
and
dec
mov
push
xor
mov
adc
outsl
aad
dec
xor
sub
aam
jae
in
outsb
rcrb
sub
jne
jg
dec
or
out
jno
dec
mov
popf
mov
lret
mov
bound
push
(bad)
mov
int
add
lods
or
sbb
cltd
pop
mov
fildll
sbb
into
mov
mov
cld
mov
sbb
xlat
inc
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
clc
mov
add
and
adc
pushf
sahf
sbb
xchg
mov
inc
inc
xchg
pop
pop
mov
test
shlb
xchg
inc
hlt
and
iret
and
movsl
cmp
mov
pushf
add
in
push
hlt
jb
popf
adc
sbbl
jecxz
aam
lret
xchg
cwtl
repnz
cmp
std
sbb
outsl
outsb
fadds
pop
mov
popf
(bad)
das
js
stos
push
inc
cmc
xor
sub
test
into
xchg
stos
push
sub
mov
orl
push
xor
jge
addb
cltd
stos
mov
jbe
mov
pop
xor
xchg
mov
es
xchg
xor
cmp
cwtl
imul
lock
mov
pushf
sub
mov
inc
imul
leave
adcl
das
xchg
les
je
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
mov
push
adc
les
loopne
(bad)
push
hlt
in
push
test
les
inc
loope
in
xor
mov
(bad)
cmp
popa
dec
pop
popa
bound
das
or
cmpsb
int
cmpsl
ret
jno
dec
(bad)

fdivp
sbb
stos
sub
test
arpl
rorb
cmpsb
and
sbb
pop
add
mov
shl
test
add
xor
jge
call
pusha
lret
movsl
out
mov
insl
cwtl
sub
int
jne
adc
das
xor
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jns
in
les
ret
jno
aaa
mov
je
es
jnp
inc
cmp
xor
xchg
es
in
loopne
or
jbe
iret
adc
rclb
subb
xorl
aaa
mov
test
xchg
int
sbb
mov
test
roll
iret
cmp
pop
popa
fldl
adc
mov
cmpsb
xchg
and
stos
int3
xchg
jp
cmp
dec
cmp
pusha
mov
cwtl
adc
arpl
test
movsl
sbb
addr16
sub
mov
add
loop
scas
dec
inc
xor
push
xor
adc
push
scas
push
or
mov
orl
out
xchg
enter
jns
outsb
and
nopl
scas
out
aad
cmp
cmp
jbe
aad
insl
pusha
stos
add
xchg
inc
aas
pop
xchg
pop
push
push
jne
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
adc
fwait

insb
gs
jnp
add
xchg
lods
and
out
push
cwtl
mov
inc
pop
fsubl
push
out
mov
lock
clc
xchg
mov
push
mov
sahf
cmpsl
sub
jmp
sub
test
test
or
mov
xchg
jl
dec
dec
(bad)
dec
pop
mov
jge
aas
sub
push
out
push
imul
ds
cmpsb
shll
add
xchg
pop
xor
cmp
xor
dec
and
sbb
mov
pop
subb
inc
lcall
aas
fnsave
cmp
cmp
in
sub
in
xchg
clc
test
rcrb
push
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
sbb
mov
jg
cwtl
in
cmp
mov
fdivrs
imul
jae
inc
mov
test
mov
xor
imul
xorb
mov
(bad)
cmpsb
mov
insl
jg
xor
lret
in
dec
lret
scas
sub
stc
cwtl
out
xor
cmpsl
sub
cmp
add
notb
roll
les
mov
jb
xor
test
pop
or
jl
nop

repz
int3
subl
xchg
(bad)
pushf
xor
cld
lds
fists
enter
andb
push
mov
sub
mov
orb
lods
cltd
xor
notl
mov
test
and
insl
xor
xor
popa
pop
or
inc
add
lret
mov
out
mov
sub
loop
mov
cmp
subl
cltd
adc
add
push
repnz
out
push
sbb
cmc
add
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
iret
mov
insl
xor
mov
in
cwtl
pop
cs
mov
push
leave
jae
or
(bad)
push
je
dec
popf
pop
and
icebp
sahf
push
pop
arpl
daa
mov
outsb
sti
pop
sbb
push
(bad)
bound
loope
sbb
into
mov
cli
push
mov
sar
dec
nop

icebp
arpl
cmp
jbe
jae
and
mov
mov
mov
jns
mov
adc
flds
mov
and
scas
in
lahf
cltd
cmpsl
(bad)
inc
pop
xchg
shlb
pop
rcrl
pop
push
outsl
das
jno
or
cmp
pop
mov
lcall
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
mov
xor
jp
mov
sub
mov
pop
mov
lods
mov
repnz
pop
jno
in
shlb
push
jmp
jl
mov
mov
mov
xor
sub
xchg
adc
mov
into
xor
xor
hlt
jb
mov
rclb
cmp
push
cli
sbb
push
repnz
mov
xchg
dec
lahf
int3
aaa
mov
sub
ror
mov
xor
push
add
aas
cld
xchg
inc
jg
xchg
cmp
push
mov
aaa
xor
outsb
jmp
fstp
push
xchg
lcall
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
pop
xchg
je
or
fisttpll
test
xlat
inc
sbb
cld
test
jge
pusha
repnz
test
test
ret
lret
push
adc
shlb
add
xchg
add
pop
pandn
sbb
leave
mov
mov
pop
pop
imul
loope
push
arpl
jne
lods
xor
sbb
mov
xor
jns
push
bound
xor
sub
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
and
(bad)
add
inc
mov
nop

outsb
test
or
sbb
sbbb
test
adc
stc
and
dec
test
jb
jbe
int
(bad)
out
ficomps
lret
scas
jne
push
aad
xchg
jl,pt
pushf
stos
int
adc
sbb
xchg
push
mov
outsb
cmc
xchg
pushf
shrl
leave
add
lds
or
dec
inc
rcrl
movl
ret
int3
jnp
or
dec
jno
mov
mov
sub
cmp
lea
jbe
imul
mov
xchg
jmp
pop
add
or
mov
jbe
in
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
inc
add
ds
dec
aam
mov
push
fstl
insb
lea
jecxz
and
dec
or
push
out
push
and
repz
in
nop

arpl
mov
cmpb
mov
sbb
push
sahf
sbb
mov
or
jecxz
lock
insl
mov
pop
fldenv
mov
sub
jb
jg
adc
jae
std
or
daa
pop
xlat
lea
adc
ja
mov
out
mov
xchg
mov
cmp
xchg
add
nop

adc
sbb
push
xchg
inc
shlb
loope
cltd
ret
mov
fcmovbe
pop
std
pop
(bad)
(bad)
ds
jecxz
and
insl
xchg
shll
pop
loop
repz
outsb
xor
xchg
jl
mov
and
addr16
mov
ss
(bad)
ss
xchg
lods
xor
fiadds
outsl
ljmp
pushf
fisttpll
cmc
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
and
cmp
movsb
aas
repnz
jnp
and
(bad)
aas
int
sbb
xchg
mov
add
mov
push
(bad)
fscale
into
adcb
adcb
jno
incb
insl
mov
fdecstp
add
(bad)
out
jo
sub
ja
add
stos
mov
test
call
out
add
fiadds
xchg
test
and
fsub
jno
ficoml
adc
jb
(bad)
push
mov
mov
sbb
add
rcrl
and
cmc
lds
rorl
jne
stc
add
arpl
cmp
jmp
push
lret
jmp
or
ja
sahf
sbbl
mov
push
fistpl
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
aaa
das
and
jb
cwtl
xor
shll
pushf
int3
xchg
mov
mov
fidivrl
es
cld
call
(bad)
fmul
xor
and
push
pop
mov
out
xchg
test
fnstsw
mov
ret
jge
mov
loop
shlb
sub
mov
sbbl
repz
push
int
int
popa
push
shrl
fnstsw
cmp
cmp
mov
cmp
mov
jl
mov
push
push
mov
decb
mov
shrl
inc
mov
inc
out
aam
(bad)
sub
data16
mov
iret
xchg
mov
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
push
ret
mov
inc
jb
and
or
gs
aam
adc
sbb
jge
push
sbb
test
sub
lods
stc
addl
(bad)
pushf
mov
std
xor
(bad)
cwtl
mov
xchg
mov
mov
xchg
xchg
mov
sbb
popf
mov
pop
pop
rorl
aam
aas
cmp
xor
neg
xchg
sub
movsl
aas
xchg
push
fimull
lcall
icebp
fisttpl
flds
dec
xor
mov
cmc
push
xor
(bad)
jmp
stc
stc
mov
push
and
daa
push
sarb
xor
sub
mov
in
sbbb
stos
or
inc
xor
jnp
xor
and
fimull
movsb
mov
pop
dec
jecxz
mov
fucomp
cmp
loopne
mov
jmp
jge
mov
or
xlat
ret
and
insl
adc
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
and
out
lret
push
fdiv
xchg
inc
dec
movsb
mov
div
repnz
fstl
ja
outsb
xchg
es
aam
xor
out
ret
in
mov
ja
cmp
mov
imul
jmp
cmp
add
in
(bad)
lcall
ja
or
sub
inc
xor
pop
mov
into
mov
push
or
daa
cmc
mov
mov
out
sub
push
mov
xor
mov
sti
test
or
fucom
test
xor
mov
mov
sub
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
inc
cmp
stc
nop

lds
sbb
cld
jg
sete
or
stc
repz
hlt
leave
push
shl
outsb
mov
inc
xor
mov
mull
sub
addb
add
cs
adc
jmp
mov
push
xchg
into
add
lret
cmp
and
dec
nop

or
jge
push
sbb
in
inc
push
jl
fadd
cmp
jmp
xor
inc
ret
das
jbe
inc
test
sub
addr16
inc
pusha
jne
xchg
jge
hlt
movsl
mov
jle
jl
dec
xchg
xchg
jne
(bad)

pop
sbb
or
pop
xor
rclb
adc
mov
or
fdivr
aas
adcl
add
psubusb
popf
into
es
fmul
sti
xor
je
inc
adc
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
xchg
mov
xchg
or
sub
push
cmc
jle
xor
stos
jge
cltd
cmpl
xor
mov
inc
call
clc
sbb
outsl
or
dec
mov
test
dec
mov
mov
mov
jge
or
test
test
movsl
xchg
ret
loop
iret
mov
hlt
xor
cmc
popa
pop
scas
mov
testb
pop
pavgw
push
out
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
cmp
xchg
xchg
or
mov
add
mov
imul
pop
(bad)
mov
fidivrl
jo
pop
adcl
push
jnp
jg
movsl
fldl
pop
cwtl
xor
xchg
insl
cmpsb
lcall
dec
call
dec
fbstp
frstor
test
jle
mov
jp
sbb
lods
lcall
add
in
xchg
inc
push
jbe
mov
enter
repz
loop
inc
test
pushf
add
cmp
ds
or
pop
repnz
addl
sarl
fwait

xor
xchg
das
pop
adc
in
jl
adc
imul
les
lds
jp
add
iret
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
int3
mov
jbe
aaa
cmp
push
pop
ja
stos
jge
in
push
mov
xchg
sahf
xor
cli
mov
jl
repnz
pop
popf
inc
xchg
test
pop
(bad)
js
leave
addb
jge
dec
and
andl
xor
test
ds
add
test
lahf
xchg
ds
pop
inc
out
mov
fidivrl
repz
leave
js
and
dec
jbe
jp
and
repnz
out
imul
xor
hlt
pop
xor
mov
js
fs
jne
and
ret
jl
loopne
loope
jae
test
ror
dec
fisubs
int3
insl
xchg
xchg
nop

xchg
xchg
sbb
test
sysenter
jl
aad
rol
xor
test
sub
sahf
pop
scas
push
sub
adc
push
pop
cmp
mov
insl
jo
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
jmp
imul
(bad)
(bad)
or
out
jl
pop
rcr
dec
test
sub
mov
leave
jo
mov
or
icebp
add
fwait

inc
test
pop
int3
clc
jmp
(bad)
push
movsb
jge
cmp
movsb
repnz
inc
movsb
ret
cltd
mov
es
push
loopne
push
push
sbb
iret
cmpsb
daa
xchg
scas
push
xor
repz
lock
jg
push
add
xor
andnps
int
jae
repnz
test
cmp
mov
adcb
push
sub
adc
loopne
(bad)
fstl
lret
loope
dec
xchg
or
or
xorb
pop
xchg
int3
loope
sahf
add
mov
nop

fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xor
pop
scas
ret
xchg
jnp
pop
icebp
xchg
mov
cmp
cmpsl
out
xor
filds
stos
jb
pop
imul
insb
pop
cmp
incl
fidivs
jo
jl
sbb
pop
mov
repz
xchg
je
out
mov
ss
mov
adc
push
fcomps
push
(bad)
push
xor
cmpb
add
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lret
mov
push
sbb
lea
out
inc
cmpsl
push
out
xor
mov
insb
dec
mov
xchg
inc
pop
pop
adc
mov
inc
jmp
cmc
faddl
test
pop
mov
jno
mov
int3
push
ffreep
mov
dec
add
mov
call
fbld
jmp
jl
aam
sti
pop
roll
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pop
pop
les
shlb
jne
(bad)
and
jno
sub
sub
sarl
icebp
dec
add
cmp
in
sbb
sbb
nop

enter
mov
sub
xor
xchg
loop
enter
int3
cmp
jl
or
add
cwtl
(bad)
jecxz
pop
fildll
or
mov
pusha
xlat
or
in
js
test
pop
mov
jl
nop

adc
dec
mov
(bad)
test
adc
xor
xchg
je
mov
orb
and
adcb
lret
fmuls
adc
sub
fwait

mul
mov
mov
sarl
mov
out
ror
xchg
mov
outsl
add
cmp
fdivrs
mov
aam
loope
pop
stc
sbb
loope
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
jno
fdivrs
subl
dec
ret
mov
pop
inc
fldl
sbb
xor
pop
cmp
(bad)
std
or
pop
or
sbb
lret
mov
mov
xchg
push
inc
imul
mov
add
adc
enter
xorb
sub
call
push
mov
pop
mov
mov
sbb
data16
jp
pop
xor
sbb
andb
test
mov
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xor
xchg
xor
push
scas
clc
iret
sbb
enter
stos
sub
xor
mov
nop

lods
mov
pop
cmp
mov
addb
pushl
decb
in
push
inc
jne
cmp
pusha
inc
out
xorb
jp
faddl
test
pop
jmp
xchg
andb
sarl
andb
test
sub
or
pand
sub
lcall
pop
xor
pop
cmpsl
mov
push
or
das
scas
cmpsl
cmpsb
sti
jns
xor
inc
cs
mov
xor
mov
std
sahf
stos
fistl
nop

mov
jmp
push
shl
ret
stc
pop
cwtl
jg
sarb
dec
(bad)
adc
cli
add
xor
clc
cmp
test
or
mov
jl
cmp
mov
mov
xchg
xor
dec
daa
hlt
aas
add
cli
and
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sub
js
push
out
xlat
xchg
ret
sub
adc
les
arpl
cmp
orl
negb
jb
ds
jmp
jg
pop
out
ds
xor
enter
cmp
mov
push
int
jg
mov
rol
repz
pusha
sub
sahf
ficoms
mov
pusha
cld
pop
(bad)
sbb
and
and
pop
lret
mov
(bad)
and
cmpsb
repnz
movsl
mov
fisubl
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
sahf
neg
call
stc
jecxz
push
push
jo
adcb
cmp
test
mov
in
and
jl
jge
push
dec
pop
dec
sbb
scas
sbb
push
enter
xor
adc
cmpsb
mov
imul
mov
push
sub
repz
int3
mov
mov
cwtl
xor
xchg
repz
pop
das
cmpl
fcoml
push
xchg
inc
sbb
xchg
shlb
push
rclb
dec
(bad)
loope
mov
dec
mov
mov
dec
mov
push
(bad)
out
lods
shlb
jl
xchg
cs
cmpsb
jne
cmc
add
and
cmpl
mov
cmp
add
sahf
cmc
fimull
(bad)
dec
movsl
adc
lock
incl
jge
mov
xchg
sbb
xchg
cli
jmp
scas
ljmp
rcll
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
add
sbb
loopne
push
popf
outsl
je
ljmp
(bad)
jmp
mov
xchg
mov
outsl
in
out
push
scas
jae
mov
pop
test
xchg
lods
or
imul
lods
push
and
bound
sbb
sub
mov
int3
sbb
cld
lods
lods
test
out
dec
xor
fstp
mov
scas
add
and
enter
(bad)
subb
xchg
stos
loop,pt
push
sbb
popa
sub
push
sbb
cmpsl
sbb
xor
addl
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
in
mov
shl
stos
add
or
clc
lret
pop
les
aas
cwtl
jb
scas
les
fs
pusha
jae
imull
mov
push
mov
add
jns
sbb
pop
in
mov
std
ljmp
sub
mov
ret
or
inc
popf
xchg
dec
stos
and
sub
xchg
out
xor
dec
test
jg
rcr
loop
fsubp
inc
mov
js
shll
int3
sahf
xchg
dec
push
xor
stos
hlt
mov
dec
call
jmp
lret
clc
leave
jg
mov
in
xorb
roll
push
shr
cli
repz
dec
sbbb
xchg
sahf
es
jns
pop
xchg
inc
cmp
(bad)
(bad)
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
and
call
cwtl
and
cs
push
push
iret
xor
scas
jo
cmc
leave
lods
test
sub
addl
int3
xor
xchg
outsl
push
hlt
ljmp
pop
(bad)
shlb
jmp
incb
ljmp
ror
psubusb
xor
cmp
jo
cwtl
psubusw
xor
sahf
lods
xchg
add
mov
nop

mov
xor
xchg
decb
les
div
lock
int
lret
inc
int3
or
negb
xor
and
jb
stc
imul
lock
cmp
mov
(bad)
nop

data16
cld
xchg
mov
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jnp
jne
shr
int3
mov
fsubl
ret
mov
sbb
(bad)
popa
jecxz
sahf
sub
mov
sahf
pop
outsl
inc
xor
subl
mov
xchg
pop
imul
das
cmp
ret
inc
mov
imul
in
xchg
push
es
jl
add
jecxz
lds
xchg
sbb
dec
int3
test
jle
(bad)
addr16
loop
pop
in
out
inc
inc
mov
sub
cwtl
and
ljmp
andl
mov
pop
sbb
pushf
int
in
fbld
xchg
sbb
xchg
and
sbb
cmp
test
add
pop
jecxz
add
add
loop
adc
cwtl
(bad)
mov
cmp
mov
lods
mov
leave
xor
xlat
gs
lret
pop
sbbl
popf
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
in
dec
mov
add
jmp
adc
js
js
jle
orl
jns
aaa
mov
mov
icebp
les
cmp
test
inc
jno
in
fwait

imull
mov
jbe
sbb
enter
mov
cwtl
dec
and
mov
shlb
jecxz
inc
mov
adc
outsl
dec
fisttpl
sub
jae
(bad)
cwtl
hlt
pusha
movsl
out
leave
fsubrs
sub
xor
and
aam
mov
mov
sbbl
mov
inc
dec
mov
out
out
aam
inc
xchg
movsl
in
push
mov
(bad)
aam
inc
sub
into
xor
lods
adc
loope
mov
pop
je
cmpb
aaa
shlb
add
xchg
inc
adc
dec
mov
ljmp
add
lcall
jne
clc
xchg
mov
lods
outsb
cli
mov
sbbb
dec
enter
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
add
out
push
in
imul
jbe
fstpl
mov
sub
sub
jne
pop
sub
test
sti
shll
xorl
out
in
jp
jbe
or
cmp
or
and
push
orb
ja
pop
shlb
ret
mov
lods
pop
inc
inc
movl
into
add
sahf
repz
das
push
rolb
adc
subb
popa
or
imul
jmp
inc
push
lret
je
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
addr16
or
mov
xor
mov
movsl
imul
sub
pop
sbb
ret
adc
jbe
sbb
imul
inc
shll
mov
add
ret
mov
sub
mov
je
gs
cmp
sbb
cmp
subb
inc
cwtl
jbe
adc
sub
(bad)
imul
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
movsb
shlb
in
icebp
and
mov
jns
and
or
movsb
lret
sbb
aas
mov
aad
test
std
fwait

das
lahf
mov
lcall
jbe
adcl
push
sbb
cltd
pop
add
xchg
push
pop
sahf
lret
in
cs
cmpsb
sub
test
lret
dec
gs
ffreep
outsb
sbb
dec
popa
dec
mov
stos
movsb
stos
pusha
add
orl
lock
sbb
andl
cmp
int
adc
(bad)
dec
out
sbb
pop
hlt
and
(bad)
sub
xor
pop
out
cwtl
dec
sahf
adc
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
push
test
mov
dec
xchg
test
and
imul
add
dec
jge
sub
test
test
sub
movsb
sub
es
cltd
lea
insb
enter
dec
movsl
mov
rcll
nop

push
addr16
xor
addb
(bad)
testb
fxch
in
mov
fwait

arpl
inc
rclb
aas
xchg
dec
repz
inc
push
and
leave
sbb
test
mov
mov
orl
fisubrl
(bad)
xchg
sbb
mov
mov
inc
xchg
neg
pusha
push
pop
or
(bad)
lock
xchg
pop
rolb
sbb
adc
fwait

jae
add
mov
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
in
pop
mov
xlat
cmp
jle
cs
call
rorb
pop
(bad)
cmpsb
pop
or
dec
rorl
clc
ds
js
movsb
xchg
mov
xlat
(bad)
or
or
mov
dec
je
push
xchg
push
jp
js
add
hlt
push
mov
sub
pusha
shll
hlt
jge
andl
mov
jb
int3
adc
xchg
push
hlt
or
mov
push
iret
fwait

push
cmc
negb
mov
add
mov
pop
push
sahf
push
jge
and
rep
aaa
inc
mov
lret
pop
enter
stos
cs
and
xchg
dec
pop
(bad)
lods
pop
push
roll
aaa
xorb
add
stc
pop
mov
lock
ja
paddw
jge
sahf
xchg
loope
push
xor
int3
sti
cs
jmp
mov
xchg
inc
and
xor
cmp
pusha
sti
mov
xchg
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
(bad)
(bad)
xor
mov
mov
jle
xor
mov
int
enter
jp
cmp
or
sbb
mov
xchg
sub
fldl
and
xor
cmp
stos
add
sbb
shrb
cwtl
cmpsb
cmp
xchg
sbb
int
movsl
ret
decb
stos
call
hlt
inc
push
sbb
or
int
out
lahf
xor
xchg
test
add
dec
imulb
inc
jle
popa
inc
adc
sbb
nop

imul
fwait

test
adcb
call
xor
rcll
mov
stc
xor
dec
pop
adc
loope
add
add
pop
sbbl
pop
je
adc
push
add
and
fstpl
adc
dec
ror
in
xchg
leave
cmpsl
push
sahf
jmp
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xor
sbb
std
ljmp
mov
fs
int3
sahf
repnz
out
addl
pusha
sub
movsl
mov
adc
cmpsl
push
jmp
je
cld
mov
out
sti
inc
mov
fsub
fsubl
je
test
cwtl
xchg
cmp
out
push
enter
loope
or
insb
loope
in
icebp
push
insl
mov
cli
mov
lods
scas
and
cmp
mov
pusha
adc
scas
sbb
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
daa
cmp
cmp
xchg
dec
std
bound
cmp
mov
mov
push
lock
xchg
pop
js
fsubs
mov
clc
xchg
cli
ljmp
aam
push
and
jmp
pop
mull
(bad)
xchg
push
pop
sub
orb
add
lahf
xor
sub
lcall
xor
setp
int
loope
or
iret
add
movsb
enter
adc
dec
mov
dec
and
cltd
mov
stos
sbb
mov
(bad)
(bad)
jmp
stos
jae
out
xor
inc
ret
push
sub
enter
xor
cli
mov
mov
mov
cmc
stc
mov
sbb
mov
inc
test
add
dec
fisubl
ja
pop
aas
dec
js
(bad)
(bad)
lods
filds
add
adc
inc
mov
inc
fidivrs
fistpl
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
fsubrl
jnp
fstpt
int3
fiadds
(bad)

rorb
sub
fisttps
fs
sahf
inc
xor
aam
(bad)
adc
pop
sub
adc
aad
adc
sbb
push
add
cmp
js
push
dec
invd
out
mov
lcall
mov
(bad)
cmc
sahf
leave
cs
xorl
shll
lret
imul
and
in
sbb
or
mov
test
insb
outsl
sub
jl
mov
test
xlat
adc
out
xchg
cmp
sub
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
xor
out
out
je
ljmp
xchg
andb
or
jge
inc
sbb
sub
push
xchg
xor
mov
movsb
push
into
loopne
loope
and
sbb
and
lock
jecxz
mov
xchg
pop
mov
aaa
mov
test
out
push
out
cwtl
fcompl
xchg
push
test
lods
pushf
imul
push
es
and
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
call
movsl
sbb
add
mov
popf
lock
aad
pop
jbe
ja
movsb
xchg
cltd
in
dec
shlb
daa
cmpsb
sub
dec
sti
xor
or
adc
rcll
or
dec
scas
inc
push
test
aad
mov
pop
shll
xor
add
push
xchg
lret
aad
mov
sti
mov
dec
enter
std
aaa
add
test
shr
shll
or
push
pop
popa
popa
shl
xchg
add
cld
mov
aam
lahf
and
fisttpl
add
(bad)
adc
scas
loopne
in
movl
sbb
out
aad
mov
dec
sub
and
sub
filds
jbe
xchg
test
dec
mov
jmp
xchg
cwtl
mov
or
out
pop
xor
repz
dec
movlhps
fmull
aam
mov
mov
push
ss
push
(bad)
pop
push
sub
imul
sub
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
push
aas
outsl
and
js
fwait

xor
dec
arpl
mov
pop
sbb
cmc
pop
xor
mov
mov
jmp
aaa
stos
stos
xchg
sbb
enter
lods
test
gs
test
scas
xor
stc
lret
jge
out
mov
mov
pop
std
xchg
mov
push
sub
push
pop
dec
nop

sub
rcrb
fldenv
nop

pop
add
rcl
lds
xchg
pusha
add
shlb
fdivrp
cmp
(bad)
cmp
mov
nop

jae
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
test
mov
leave
jl
sub
aad
push
pop
dec
hlt
push
aam
loop
xor
fcompl
aam
mov
mov
shrl
and
leave
add
lea
les
cltd
call
stos
call
adc
cwtl
or
fisttps
add
xchg
inc
mov
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
imul
sahf
cmpsb
das
xorl
(bad)
xchg
fmul
adc
in
xchg
pop
sbb
mov
push
mov
in
sahf
mov
fwait

mov
ljmp
jmp
mov
adc
sti
pop
testb
subl
cltd
movsl
lods
in
pusha
sub
sub
lcall
clc
cmp
popf
cld
push
lods
aaa
or
sub
pop
xchg
addl
jns
addl
fisttpl
and
ret
sub
cs
cmpsb
pusha
xchg
push
movsl
xor
pop
sbb
sub
loope
js
stc
insl
jle
mov
xor
xor
push
loope
push
xchg
mov
adc
fnstsw
jne
shlb
addr16
mov
xor
out
insl
inc
lea
xchg
adc
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
fstl
cmp
je
movsb
scas
cmp
add
mov
dec
sub
xchg
js
dec
dec
mul
inc
sbb
fbld
push
leave
nop

rol
cmp
leave
jno
add
sbb
sub
mov
cmp
lock
add
cmc
notl
fisubl
jne
push
sbb
jne
js
scas
and
cli
cmpsb
jae
xor
repnz
js
mov
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
nop

xor
xchg
jne
sub
lea
shl
int
xor
ss
add
lret
dec
imull
loope
ficoms
adc
lret
jl
jle
sbb
dec
sub
mov
out
lods
push
jnp
add
fimull
mov
mov
mov
mov
not
pop
test
imul
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
push
lret
or
push
push
jb
xchg
sbb
enter
lea
adc
dec
xchg
sub
das
enter
mov
sub
sti
outsb
rol
sub
inc
mov
test
leave
add
jl
lock
add
push
xchg
(bad)
fsubrl
fwait

ss
and
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
fwait

and
add
mov
ljmp
push
test
fstpl
movsl
fcoml
je
stos
pop
les
push
in
jmp
insb
int
outsb
sbb
enter
push
mov
aam
cmc
jb
int
push
xchg
(bad)
sub
mov
ljmp
test
jnp
enter
(bad)
cwtl
xor
aam
dec
outsb
mov
lea
js
movsb
dec
sub
mov
mov
mov
cmp
sbb
imul
test
add
push
dec
or
mov
lea
sbb
in
out
lods
xchg
icebp
mov
jne
daa
sub
outsl
sub
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
xchg
ret
sub
mov
fcmovu
stos
xor
inc
mov
jp
adc
dec
or
addr16
mov
xchg
add
mov
repnz
jmp
icebp
fwait

push
cmpl
xor
imul
mov
add
mov
jge
addr16
adc
xchg
std
cmpsl
jge
xchg
mov
gs
js
push
mov
push
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
test
subb
subl
stos
lcall
lods
push
je
mov
stc
mov
and
fisubrl
inc
mov
out
mov
pop
sbb
mov
test
leave
mov
cmpsl
xor
push
pop
repz
(bad)
pop
xor
sti
clc
mov
mov
fisubrl
fdivrs
inc
shld
and
ja
sti
push
sbb
movsb
movsl
sbb
inc
popa
cmpl
movb
pop
push
xchg
mov
in
(bad)
out
sub
pushf
stos
xor
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
jns
sahf
in
ds
pop
xchg
jo,pt
cwtl
fcomps
push
(bad)
stc
int
lods
sbb
xchg
lods
lods
cmpsb
sub
std
movsl
ljmp
lea
sbbl
flds
xchg
ret
or
mov
hlt
lret
rcl
jbe
mov
fidivs
xor
hlt
pop
test
add
scas
cld
push
iret
loop
popa
or
sub
mov
(bad)
xchg
(bad)
(bad)
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
add
jle
arpl
xorl
add
add
push
mov
push
push
push
push
mov
mov
mov
sub
mov
mov
mov
push
push
push
mov
mov
call
lea
lea
pushl
push
push
lea
push
call
add
push
push
call
add
movl
mov
mov
mov
cmp
jne
mov
inc
mov
test
je
cmp
jne
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
cmpb
je
cmpb
ja
inc
cmpb
jne
movl
lea
push
call
testb
mov
je
movzwl
push
push
push
push
call
push
call
push
call
jmp
mov
mov
mov
mov
pushl
push
call
add
ret
mov
pushl
call
add
movl
mov
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
mov
mov
and
xor
not
inc
mov
cmp
je
sub
jmp
movzwl
mov
lea
mov
push
push
inc
inc
cmp
jne
mov
mov
add
mov
mov
mov
add
mov
mov
mov
dec
inc
inc
mov
and
jne
mov
inc
mov
mov
cmp
jbe
mov
add
mov
dec
xor
inc
mov
inc
and
test
jne
dec
cmp
jne
mov
add
pushl
push
call
test
je
add
incl
mov
cmp
jb
mov
cmp
jae
mov
add
add
mov
add
movzwl
mov
lea
mov
mov
add
jmp
xor
pop
pop
pop
mov
pop
ret
int3
push
mov
push
mov
mov
push
call
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
cmpl
jne
xor
jmp
push
mov
push
call
mov
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
imul
movsb
cmpsb
dec
inc
mov
sbb
lea
sub
add
out
shll
pop
sti
sub
(bad)
mov
sub
cmp
vmwrite
jmp
(bad)
repnz
repz
add
xorl
(bad)
fnstcw
sbb
(bad)
aam
push
mov
test
adc
ret
ret
push
arpl
test
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
lods
fdivrl
inc
xchg
(bad)
add
out
or
rolb
clc
cmpsb
ficoms
mov
lcall
(bad)
sub
(bad)
pop
(bad)
mov
mov
out
lret
jmp
insb
bound
push
js
lea
xlat
orl
jecxz
mov
and
jmp
mov
andb
xchg
sub
xor
jno
cmpl
sti
loope,pt
arpl
stos
clc
cld
xorb
rclb
lods
inc
(bad)
pop
decb
cmpb
mov
daa
ljmp
cmc
sbb
call
mull
or
lock
daa
inc
andl
(bad)
neg
fsubr
cmpb
notl
outsl
push
dec
inc
sbb
adcb
aam
out
mov
sbb
test
dec
jge
xchg
or
stos
sub
subl
ret
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
dec
in
out
(bad)
jg
dec
fcompl
sbb
mov
mov
lods
and
insl
stc
in
add
jne
or
shrl
jbe
jbe
or
jae
cwtl
xchg
xor
mov
sbb
push
dec
add
imul
adc
fstl
iret
inc
xchg
sbb
mov
out
repnz
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
hlt
mov
out
push
lods
lock
jnp
movsl
idivb
into
mov
les
mov
inc
sub
jmp
sarb
addl
int3
jne
xor
and
dec
sbb
dec
or
stos
mov
mov
sbbl
out
or
cmp
call
stos
dec
inc
loop
inc
stc
sbb
cmpsl
(bad)
fstps
dec
shlb
pop
incb
in
dec
push
aam
xchg
cmp
xor
enter
jno
lods
sbbb
aam
jnp
in
sub
jnp
shrl
mov
xor
push
jae
mov
cmp
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
dec
sbb
xor
add
out
test
fadds
les
or
dec
movsl
xor
push
push
push
je
leave
in
lods
jae
out
fadd
mov
pushf
push
dec
jp
xchg
jmp
sbb
xchg
xchg
dec
leave
fstl
lds
inc
loop
jecxz
les
lahf
inc
mov
xorl
cs
jno
or
lock
inc
adc
push
cwtl
rcrb
sub
popa
sub
xchg
cwtl
or
les
jp
sbb
scas
xchg
add
dec
addl
jns
int3
fucomp
sub
arpl
push
sti
in
or
xchg
mov
mov
mov
subl
cmp
test
stos
push
andl
jns
inc
dec
add
or
mov
jl
(bad)
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
(bad)

(bad)

xchg
fcompl
pop
mov
popf
icebp
inc
sbb
testl
out
es
mov
lcall
dec
gs
push
sarb
lret
mov
push
jb
jbe
mov
add
test
out
mov
popf
ljmp
mov
mov
rclb
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
loop
jno
xor
sbb
movsl
xorl
imul
(bad)
andl
fwait

out
pop
sub
test
jns
lock
push
jns
mov
pandn
imul
rdtsc
cs
loope
xor
fs
jp
out
test
paddusw
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
jle
mov
sbb
fildll
movl
xor
xchg
stos
daa
test
push
sbbl
stos
jnp
lods
cltd
lcall
inc
lret
dec
cmpl
xor
sbb
pop
dec
andb
out
stos
add
out
out
xor
mov
add
andb
pop
xor
sub
aam
addb
repz
shlb
inc
xor
mov
fwait

inc
xor
jl
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
rcrl
sbb
rcrb
mov
jp
cmp
out
jne
cmp
sbb
sarb
es
div
jne
call
push
pushf
jmp
scas
xor
imul
stc
mov
(bad)
sbb
inc
jne
pop
outsb
xchg
je
adc
push
xchg
or
and
xor
iret
cmpsl
popa
inc
mov
in
fnsave
add
rolb
adc
loope
outsb
lea
and
pop
dec
mov
jge
inc
fadd
cmc
pop
jne
xchg
cmc
ljmp
fistl
or
ucomiss
incl
incb
int3
pop
jno
add
pop
or
stos
mov
push
stos
test
dec
mov
sub
cmp
addl
addl
imul
sub
inc
andl
adc
loopne
les
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
andb
arpl
(bad)
xlat
ljmp
dec
cli
cmp
xor
push
add
loop
jle
jbe
sbb
stos
inc
mov
(bad)
lahf
dec
adc
rcrl
and
sbb
lcall
pop
test
outsb
sbb
ret
xlat
jne
inc
test
jl
lahf
mov
cmp
aaa
and
and
adc
jge
daa
mov
adc
ja
mov
out
std
dec
inc
mov
sbb
movsl
cmpsb
stos
mov
jle
loope
lcall
int3
mov
add
lahf
sahf
inc
aad
cltd
push
push
call
mov
fstps
js
std
cmpsb
mov
cwtl
(bad)
enter
adc
aad
pop
movsl
or
int3
imul
leave
add
or
adc
das
xlat
adcl
loopne
(bad)
ficomps
dec
dec
fwait

out
mov
popf
cmpl
jl
xor
ljmp
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
add
clc
enter
mov
test
lods
jnp
sbb
inc
(bad)
addl
enter
mov
and
sub
adc
mov
dec
push
mov
inc
sub
lods
sbb
mov
(bad)
cld
lcall
push
(bad)
lret
lcall
sar
sahf
scas
addb
lret
mov
pop
aaa
mov
jae
jns
lods
pop
pop
ret
nop

int
xor
rolb
inc
addb
sbb
xchg
inc
sbbl
xchg
test
mov
cmp
(bad)
shl
shl
push
aaa
int3
cld
cwtl
fistl
clc
sti
add
add
mov
cwtl
mov
(bad)
push
(bad)
insb
mov
push
shl
test
into
aam
sbb
movsb
clc
jo
cld
test
mov
test
or
mov
add
stos
inc
in
imul
fnstenv
and
fnstenv
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
sub
cltd
sub
lock
(bad)
std
aam
sahf
test
roll
push
jg
mov
addr16
mov
loope
addb
add
xorl
fmul
pusha
fdivrl
aad
sub
jne
enter
icebp
in
sar
pop
adcb
cmc
pop
xor
lcall
inc
mov
mov
push
adc
je
lret
sub
(bad)
lcall
sarl
xor
push
pop
and
and
cmp
and
dec
pop
aas
into
adc
aaa
xchg
idivl
xor
arpl
movsl
aam
cmp
push
scas
jge
sub
repnz
mov
loope
adc
or
push
iret
mov
lods
xorl
sbb
nop

cwtl
sbb
xor
std
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
sbb
subl
sahf
inc
xor
lret
mov
fmul
push
(bad)
lock
jmp
lcall
andl
addr16
pop
int
ss
imul
jns
lds
lods
daa
jle
test
enter
dec
pop
insb
stos
pop
or
nop

add
fnstsw
dec
xorl
mov
inc
test
push
ret
pop
popa
jmp
push
hlt
inc
lret
or
mov
jl
cltd
ret
addb
loope
cmpsl
in
mov
sbb
test
stos
mov
lea
and
xor
inc
sub
fwait

cmp
hlt
call
or
aad
idiv
jmp
inc
repnz
jge,pn
cltd
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
add
or
lods
mov
pop
push
or
jns
xor
and
mov
and
cmp
lock
fidivl
adc
outsb
addl
(bad)
mov
and
repz
pop
popf
cs
hlt
pop
data16
or
mov
dec
into
push
pop
inc
pop
xor
mov
or
xchg
cmp
sti
sub
lahf
xor
lds
mov
inc
pushf
cmp
mov
int
flds
fwait

adc
(bad)
ja
or
sbbl
test
lea
jnp
movsb
dec
out
dec
(bad)
mov
cmp
jp
inc
(bad)
pop
into
add
push
dec
loopne
dec
lock
imul
fistl
jne
xor
jb
push
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
fucomi
xor
push
xorl
test
push
shlb
arpl
fs
sbb
xor
mov
stos
cmpb
xchg
mov
aaa
jl
andl
jmp
xchg
int
dec
sub
or
mov
scas
sbb
jnp
cmp
int
or
scas
sahf
cmp
leave
and
lahf
ja
fsubr
mov
dec
out
mov
cmp
daa
je
add
pop
pop
sarb
mov
outsb
pop
or
scas
inc
pop
addb
xor
and
test
repz
icebp
and
add
notl
mov
jp
adc
xor
int
xor
mov
mov
aaa
adc
add
adc
mov
add
fildll
mov
xor
sarb
pop
and
and
je
dec
or
int3
add
cmp
stc
loopne
mov
sbb
lret
inc
jp
fnsave
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
sbb
outsb
push
sub
in
fldl
mov
lret
xor
mov
enter
dec
aas
les
mov
fdiv
push
pusha
shrb
out
pop
add
clc
les
push
subl
cs
sbb
jp
mov
loope
mov
pop
cwtl
or
rorl
test
sahf
xor
sub
add
scas
repz
jb
addl
or
cmc
and
cli
sub
mov
stos
int3
les
mov
mov
ja
loope
test
fstpl
rorl
(bad)
movsb
or
sub
nop

js
lea
and
(bad)
das
fistps
pop
fdivrl
lods
xchg
jb
and
sub
xor
insl
aas
push
xor
insb
addl
push
fcompl
inc
push
out
push
fsubr
push
js
adcb
and
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
insb
cwtl
xchg
orl
dec
testb
jge
dec
or
ret
mov
cmp
into
scas
push
jl
mov
or
(bad)
nop

mov
mov
into
es
inc
orl
insb
(bad)
into
push
adc
mov
stos
repz
mov
(bad)
fs
outsl
cmpl
addr16
add
inc
ror
adc
adc
aaa
outsb
xchg
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
sbb
push
dec
cmp
inc
or
jne
shrb
test
dec
push
gs
subl
(bad)
cli
lea
push
(bad)
xchg
mov
enter
push
mov
rorb
sbbl
int3
sbb
arpl
mov
xor
dec
shll
pop
add
test
or
fistps
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
adc
les
jae
loop
leave
aaa
sahf
lcall
popf
jo
rcrl
leave
xor
sbb
mov
into
insl
sub
mov
mov
out
mov
mov
dec
out
rorb
orb
or
jnp
mov
cwtl
stos
test
push
(bad)
lcall
mov
outsb
add
lahf
sbbl
pop
lcall
daa
jbe
dec
int
and
inc
fisubs
jle
testl
pop
loop
mov
(bad)
cli
xorl
divb
or
mov
and
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
mov
dec
add
(bad)
xor
add
int3
aad
pop
int
gs
stc
fcompl
lea
(bad)
mov
test
xor
cmp
jns
(bad)
fbstp
xchg
xchg
aad
xchg
imul
cmpsb
inc
mov
dec
ffreep
and
jb
fstps
inc
test
in
outsl
or
sub
add
out
xor
inc
in
dec
xchg
jns
mov
sbbb
jnp
(bad)
andl
add
pusha
xchg
sbb
mov
mov
inc
mov
in
pop
xchg
adc
fstpl
sub
movsl
iret
bound
sarl
push
fildll
dec
out
mov
inc
jmp
pop
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
bound
(bad)
js
mov
rcrl
adc
sahf
adc
inc
into
pop
in
sbbl
fwait

out
mov
mov
dec
mov
flds
or
lea
movsb
dec
aad
pop
mov
adc
xor
test
addl
cmp
cwtl
dec
push
cmpsb
inc
shl
sahf
fdiv
cmp
addb
push
mov
adcl
subl
faddl
sub
leave
xchg
mov
push
frstor
cmpsl
out
dec
out
cmpb
lahf
mov
ds
jnp
sbb
sbb
cmpl
lret
mov
jo
and
nop

push
sub
jl
mov
icebp
push
orl
adc
insb
fucomp
orb
nop

adc
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
dec
sbbl
pop
jbe
inc
int
xor
mov
movl
(bad)
xchg
jmp
int3
xchg
cmpsl
les
lcall
stc
push
int3
lock
inc
push
jae
inc
cmpsl
les
mov
call
test
je
xorl
ret
lods
jae
std
fcmovu
mov
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
out
xor
push
fadd
mov
ret
xchg
mov
mov
shll
enter
(bad)
pop
cmp
add
shlb
subl
jle
(bad)
mov
and
xchg
sbb
ds
dec
(bad)
push
mov
andl
andl
push
fsubrl
pop
sbb
jp
pop
in
or
push
ljmp
lcall
xchg
cmpsb
out
(bad)
lock
fcoml
mov
mov
mov
into
scas
dec
lret
test
hlt
lcall
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
sub
jp
aam
or
(bad)
pop
sarb
dec
insb
dec
lock
(bad)
enter
movsl
pop
inc
sub
rcrl
add
lret
negl
and
mov
into
xor
pop
loopne
nop

lea
stos
subl
imul
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
inc
test
fs
adc
mov
fiadds
aam
mov
icebp
aad
xchg
and
and
dec
(bad)
shll
les
shrb
clc
jmp
loopne
jg
cltd
cmp
leave
and
les
xchg
add
or
test
and
pushf
or
jnp
mov
xlat
cmp
in
shlb
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
and
push
xchg
out
nop

subl
cmpsb
fistpll
dec
fisttpll
xlat
push
shlb
cltd
lcall
jns
rcll
jnp
adcl
aam
sbb
inc
lea
or
lock
jbe
subl
out
mov
jmp
sbb
fldenv
(bad)
(bad)
ret
(bad)
(bad)
sbb
pop
fildl
xchg
clc
iret
out
xchg
xchg
aas
xor
sbb
subl
cmp
test
adcb
adc
jne
stc
fidivs
addps
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
and
adc
shl
daa
test
loopne
call
lcall
lods
sbbl
test
lea
movsl
xchg
adcl
push
aaa
hlt
xchg
orb
int
test
lods
cwtl
(bad)
fimull
mov
push
cmp
cmpb
xchg
mov
fwait

es
or
movl
dec
(bad)
aad
test
roll
loop
fs
shll
mov
or
out
addl
xlat
enter
mov
sarl
sbbl
ja
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pop
pop
sub
push
pop
popf
cli
push
mov
sub
clc
(bad)
nop

cmp
nop

lock
cmp
jns
dec
in
loop
cmp
hlt
xor
sbb
lock
xor
ss
mov
sub
cmp
push
add
mov
iret
(bad)

or
cmp
leave
adc
shlb
xor
push
jle
cmp
fwait

in
add
xchg
adc
ss
push
pop
das
arpl
and
mov
fnsave
cwtl
add
divb
lock
push
minps
sahf
ret
or
xor
gs
int3
lock
les
adcl
jo
fcoml
add
lock
xchg
mov
jle
lock
or
or
(bad)
test
das
push
jbe
int3
push
jecxz
fs
adcl
add
bnd
mov
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
cmp
pop
or
or
je
sub
xorl
lahf
std
sub
inc
xor
(bad)
or
jo
aaa
(bad)
xor
push
leave
lea
imul
aas
adc
sbbl
and
mov
ljmp
and
xor
fwait

(bad)
cltd
cld
xor
push
mov
and
or
xor
xchg
add
xorb
imul
rorl
xchg
out
imul
popf
xor
push
and
shl
dec
sbb
enter
xorb
(bad)
and
bswap
jge
mov
jmp
out
lds
stc
xchg
test
push
ljmp
pcmpgtw
ret
loopne
(bad)

jge
sbb
jbe
int3
sub
lea
stos
cwtl
fwait

push
stc
ljmp
cltd
mov
cwtl
mov
sbb
adc
jns
rorb
pop
inc
and
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
ret
lcall
xchg
gs
(bad)
in
cld
lock
xchg
lea
(bad)
mov
jg
icebp
loope
or
xor
adcb
loopne
cmp
in
push
xchg
pop
jnp
xor
and
add
stos
int
add
popa
adc
mov
adc
out
ss
loopne
int3
xchg
push
mov
orl
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
fldl
xchg
mov
call
xchg
mov
cmc
ret
mov
xchg
loopne
push
dec
fistps
lock
pop
sub
lock
enter
sub
mov
jle
iret
(bad)
xchg
adc
push
pop
test
adc
xor
pop
outsl
(bad)
lock
push
ds
cltd
int3
xchg
stos
xor
push
adc
add
int
sahf
lret
lock
pushf
mov
fstenv
sub
inc
sub
nop

loopne
fistps
int3
xor
sbb
mov
(bad)
roll
xchg
sub
fs
pop
dec
inc
jo
stos
xor
dec
sbb
gs
dec
loop
pop
sub
cmpl
mov
inc
fldenv
pop
jns
nop

push
mov
jle
sub
mov
fidivl
cmp
jbe
iret
pop
jae
sbb
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
inc
(bad)
movsb
cmpb
insb
push
sub
ja
pop
jae
cmc
xor
mov
cmpsl
in
sti
cmp
fmul
dec
cli
cmp
xorl
cmp
cwtl
cmpb
pop
mov
push
dec
int3
subl
xlat
cmp
xchg
sbb
(bad)
cli
es
aad
pushf
pop
jg
pop
sub
mov
sub
pop
mov
mov
(bad)
decb
push
cmp
xor
jl
mov
push
inc
lahf
outsl
jle
mov
mov
movsl
mov
pop
lcall
test
cmc
mov
je
dec
int
cmp
mov
sahf
cmpsb
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
add
imul
pop
jge
inc
data16
roll
daa
cmpsb
xor
ficomps
xchg
jb
addr16
jae
cmpsb
mov
addr16
push
adc
(bad)
jmp
sbb
cld
je
lret
sbb
and
mov
out
jg
aam
mov
leave
popf
inc
dec
pop
fists
repz
mov
jl
cmpl
dec
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
mov
pop
int
sub
mov
push
add
cld
mov
scas
(bad)
mov
fidivrs
adc
mov
pushf
mov
cltd
sbbl
xor
test
mov
ss
xchg
inc
std
scas
adc
addb
xchg
mov
sbbb
adc
fists
jnp
sub
pop
std
out
shrl
popa
(bad)
clc
rclb
movsl
imulb
cmp
hlt
aaa
fsts
push
sub
or
or
sbbl
xchg
rorb
mov
pop
nop

daa
pop
mov
and
xor
int3
xchg
ss
or
test
mov
jne
xchg
sub
lea
push
inc
into
dec
popf
test
cmc
cmc
movsb
sub
in
andl
int3
jmp
jae
mov
outsb
mov
int3
fldenv
add
inc
push
inc
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
cltd
jnp
mov
js
in
sbb
xchg
dec
movsb
mov
cmpl
mov
mov
add
xor
rorl
pop
add
mov
ret
cmp
mov
ret
addl
loopne
xchg
xlat
sahf
test
inc
dec
sub
add
out
sbbl
dec
xchg
shlb
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
push
js
push
inc
jmp
andl
sbb
les
test
bswap
movsb
push
and
cltd
jb
add
mov
cs
rcrb
mov
xchg
(bad)
fs
mov
push
iret
lea
es
cwtl
dec
scas
mov
push
(bad)
fisubrl
xchg
iret
xor
imull
adc
incl
gs
arpl
cltd
data16
gs
ljmp
stos
mov
iret
in
xchg
iret
xchg
lock
jns
outsb
stc
int
lret
test
or
mov
sahf
dec
jle
xor
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
ror
sbb
pop
orb
andb
cmpsb
int
mov
push
in
hlt
fldl
push
mov
scas
int3
andb
fs
jg
(bad)
and
push
mov
in
and
mov
scas
pusha
sti
and
push
adc
sub
push
icebp
(bad)
jge
add
pop
lcall
mov
pop
jbe
gs
stos
ja
test
cmpsb
addl
sbb
les
and
int
add
mov
sar
scas
sbb
lds
call
mov
mov
pop
fwait

cld
inc
pop
or
std
pop
cmpsb
push
js
adc
movsb
dec
cmc
jle
dec
xchg
push
divl
repnz
es
jecxz
incl
test
incl
sbb
loop
dec
inc
int
dec
iret
pop
rorb
or
adc
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adc
inc
int3
ret
lea
call
pushf
jp
adc
and
cmp
push
hlt
ja
inc
mov
mov
insl
jge
xchg
pop
faddl
or
(bad)
xor
and
adc
dec
ret
cmpl
mov
lods
shrb
fwait

test
jne
dec
xor
popa
jmp
rorl
aas
pusha
mov
add
mov
icebp
aas
addl
movsl
lcall
sti
dec
jge
iret
faddl
aas
pop
or
inc
aaa
lea
sbb
mov
pop
jb
cmp
out
push
cld
jle
lock
mov
xor
pop
cmp
xlat
stos
sub
insb
fwait

xor
fxch
add
adc
sbb
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
lods
test
repnz
jo
dec
or
sbb
clc
insb
popl
cmpb
(bad)
fsubp
test
fs
test
add
test
mov
xchg
fmull
insl
enter
xor
les
cmpsb
push
fisubrs
push
jmp
jbe
and
addl
mov
insl
add
adc
sbb
mov
xchg
leave
inc
cld
out
adc
repnz
iret
mov
xor
xchg
mov
out
out
(bad)
sbb
andl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
out
outsb
and
repnz
add
fstp
mov
sbb
int3
loopne
push
out
outsl
inc
in
cmp
add
int
fdivrs
orb
push
push
mov
test
inc
in
scas
scas
xchg
mov
std
adc
je
or
int
and
adc
or
popa
sbb
ja
loope
push
dec
addl
push
add
pop
pop
das
jp
inc
jbe
es
cmpsb
dec
jl
or
faddl
xchg
inc
mov
or
inc
push
add
cmc
dec
shlb
andl
push
rolb
mov
test
cwtl
mov
push
push
sbb
cmpsl
loop
int3
push
push
cmc
nop

cltd
and
fsubl
jmp
xor
sbb
mov
notb
loop
add
add
cmpsl
repnz
sbb
mov
sbb
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
das
jne
mov
insb
shl
push
sbb
les
mov
ds
and
ljmp
mov
xchg
ds
sbb
sahf
lock
shrl
adc
leave
mov
in
das
xchg
cmp
stc
xor
inc
cli
jae
int
and
dec
rol
cs
cmp
sbbl
sub
in
adc
insl
int3
enter
or
add
cld
inc
jne
jbe
rclb
push
sbb
push
call
fcoml
mov
or
xor
or
adc
dec
adc
lock
cwtl
push
shrl
jbe
jnp
shrl
xchg
mov
jo
in
mov
pop
mov
mov
fisttpll
andl
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
outsl
or
sbb
int
filds
sbb
test
test
mov
movl
sahf
mov
nop

mov
ds
mov
cmp
or
stos
xchg
mov
push
jbe
stos
in
movsl
sbb
addr16
test
mov
sub
pop
faddp
sub
add
xor
ljmp
pushf
es
jbe
stos
mov
push
stos
leave
jno
jbe
mov
or
iret
sbb
dec
mov
push
fisttps
mov
fs
mov
dec
mov
movl
jl
addr16
cmpsb
lods
add
xchg
enter
pop
aaa
movsb
pop
and
jbe
out
popa
dec
push
cmp
mov
mov
andl
negl
sub
push
stos
mov
roll
push
mov
and
in
fwait

(bad)
mov
popf
pop
cltd
lea
jg
or
jae
and
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
inc
add
push
and
xor
cld
in
js
(bad)
xor
test
rcrl
aas
ficomps
icebp
jge
cld
xor
lods
lds
add
je
lea
shlb
sbbl
scas
rorl
clc
mov
int
int3
push
pushf
loopne
cld
stos
in
jb
push
cmp
andb
fisttps
fs
and
test
xchg
jne
mov
xchg
mov
subl
and
in
call
xchg
inc
inc
pop
jecxz
int3
sbb
xor
out
cmc
and
andl
inc
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
arpl
stc
orl
icebp
hlt
imul
loope
adc
subb
or
fists
xor
cwtl
adc
into
xlat
enter
ds
push
stos
fmull
jnp
iret
and
cmpsl
or
or
leave
pop
scas
lea
fwait

int
mov
loope
sbb
xchg
lea
add
bound
into
xor
mov
test
popa
pop
shll
xchg
adc
push
out
jnp
arpl
dec
inc
cmpl
mov
and
fnstsw
jne
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
mov
mov
cmp
lock
subl
xchg
out
lea
fldl
fwait

sti
(bad)
(bad)
fisttpll
push
lea
push
rep
xchg
xor
dec
xorb
cmp
mov
cs
xor
enter
mov
xchg
jnp
xchg
test
fcompl
nop

(bad)
cmp
mov
mov
add
cld
sub
pop
subb
dec
testb
cmp
pusha
jge
movsl
adc
and
cmovno
int3
pushf
(bad)
pop
sbb
clc
sarb
clc
jp
lea
iret
popf
add
aaa
jle
xor
arpl
dec
hlt
sub
xchg
lcall
dec
sbb
adc
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
cmp
cwtl
int3
cltd
xor
shl
mov
out
lods
add
adc
lahf
cmp
jnp
cld
or
mov
pop
jge
(bad)
je
sahf
nopl
je
out
lcall
movsl
lahf
pop
xchg
and
popf
dec
sti
popf
mov
mov
cs
fwait

shrb
fcoms
bound
popa
xchg
ret
outsb
cmc
and
outsl
mov
adcb
cs
push
pop
fbld
xchg
dec
jp
push
out
scas
jl
popf
insl
arpl
mov
xor
cmp
adc
and
bound
push
ret
test
incl
xchg
nop

lock
pop
cmpl
cld
fsubr
addl
pop
add
mov
neg
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
pop
out
fld
xchg
jle
std
in
mov
sbb
fcomip
int
shlb
sbb
or
andb
out
xorl
sbb
and
pusha
jb
push
int3
cmpsb
pop
ret
movsl
mov
sub
ret
loop
cld
mov
je
push
incb
nop

dec
sahf
int
mov
pop
decb
xorl
sbb
fcmovnbe
xor
and
cmp
cmp
repnz
movsl
xchg
mov
pmullw
pop
push
fwait

scas
fistl
pop
add
push
mov
scas
xor
adcl
mov
in
mov
xchg
xor
int
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
int3
in
test
mov
int3
or
ljmp
int
jns
stos
adcl
pusha
cmp
push
jb
enter
mov
adc
fidivl
lea
addb
in
ret
mov
mov
bound
int
(bad)
fnstcw
cld
jo
lret
mov
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
int
out
jmp
mov
mov
adc
or
xchg
movsb
sbb
or
inc
cmpsl
nop

inc
addb
xchg
mov
inc
cmpsl
aad
bound
dec
call
or
and
sbb
aad
dec
pusha
mov
or
mov
sbb
hlt
je
add
mov
cwtl
das
and
xchg
mov
in
adc
xchg
pop
lock
(bad)
(bad)
sbb
mov
xlat
int3
ljmp
lahf
andl
addl
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
ja
pop
bnd
je
enter
or
xorl
sahf
in
mov
jb
mov
and
xchg
rcrb
ret
sbb
pop
pusha
mov
dec
dec
loopne
pop
mov
int3
cld
xchg
lcall
int
jbe
pop
stos
xchg
in
bound
fsubl
aam
or
add
(bad)
pop
add
push
nop

(bad)
and
inc
ret
out
filds
or
push
mov
mov
fistpll
dec
fstl
shl
subl
mov
pop
addr16
sub
(bad)
outsl
jno
add
ret
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
in
in
sbb
push
into
fisttpll
and
insb
adc
inc
and
call
sahf
and
sbb
inc
ret
call
mov
adcl
loop
jb
je
fbstp
int3
jge
push
mov
fadd
and
mov
pop
cmp
push
(bad)
int
lea
pop
(bad)
sub
stos
sub
inc
testb
push
insb
ret
fcomip
aam
mov
push
bound
in
pop
or
jecxz
add
mov
jnp
mov
in
movsl
xor
cmpsl
rolb
pop
scas
in
sbb
or
lea
fcmovu
movsb
mov
sbb
adc
pop
leave
andl
bound
pusha
test
(bad)
cli
fs
dec
xchg
mov
orl
(bad)
cld
scas
or
into
(bad)
lds
cmp
mov
mov
cmp
sbb
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
inc
xor
xchg
daa
movsl
ljmp
and
and
(bad)
in
clc
or
lret
xchg
lds
adcb
jbe
les
jle
xchg
hlt
mov
mov
dec
adc
mov
mov
int
or
movsl
mov
add
movsb
jl
cmpl
cmp
xor
xchg
sbb
rol
mov
movsb
push
aam
push
jne
iret
mov
adc
mov
call
rcrl
cmp
mov
and
test
pop
scas
sbbb
sbb
sbb
mov
pop
cli
arpl
jp
push
pop
ljmp
dec
and
lcall
(bad)
xor
xor
incb
jne
sub
gs
out
addr16
push
sub
je
pop
cmpl
nop

pop
xor
fsubrl
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmp
int3
mov
sbbl
outsb
andl
lret
leave
lcall
xchg
std
add
out
lret
fists
mov
nop

adcl
out
sbb
push
repnz
xor
fisttpll
cli
loop
(bad)
cli
push
mov
mov
movsl
stos
incl
(bad)
aam
fistps
iret
push
sbb
xchg
lock
decb
cmp
pop
aad
pop
mov
and
call
mov
push
sbb
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
shll
leave
dec
mov
cmp
test
and
mov
orl
jecxz
fnsave
insl
mov
mov
push
jle
subl
push
or
mov
lods
push
fldl
movsb
mov
mov
cltd
mov
inc
popf
cmpsl
xchg
js
mov
sub
in
lds
and
test
lahf
sbbl
lcall
or
mov
das
addr16
in
aaa
test
cmp
mov
mov
inc
cltd
in
adc
lret
fsts
inc
cld
rcrb
add
pop
cmp
jae
loope
clc
in
and
scas
inc
pop
jge
add
lock
bound
cwtl
adc
mov
or
xlat
sbb
and
scas
ljmp
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xchg
ficompl
popf
and
aam
push
cmp
mov
enter
fistps
xor
sbb
mov
push
movsb
mov
ffree
inc
pop
in
mov
stos
cmp
xorl
mov
and
push
xchg
pop
push
inc
xchg
ljmp
mov
mov
and
and
cmp
test
jb
ljmp
cld
gs
and
int
fbstp
adc
and
test
dec
cmpl
push
testb
orb
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmp
mov
outsb
xor
mov
testb
(bad)
sub
mov
push
enter
addr16
inc
sub
andl
loope
cmp
lods
push
mov
popf
xchg
jmp
sbbl
icebp
push
xchg
and
loope
sub
arpl
hlt
or
stos
jno
fs
sub
adc
sahf
insl
mov
ja
push
mov
dec
(bad)

sub
adc
out
imul
xor
xchg
mov
stos
push
push
push
jae
and
cmp
insb
cmc
xchg
xchg
imul
jle
std
inc
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
shrb
adc
orl
scas
gs
xchg
mov
popf
pop
and
fldl
sub
push
out
sarl
pushf
and
(bad)
(bad)
sub
jns
inc
push
inc
fisttpll
sbbl
mov
fnstsw
fisubl
add
(bad)
cmp
mov
cli
xrelease
shl
fdivs
or
jo
add
mov
push
pusha
lea
int
(bad)
insl
cli
or
sbb
jecxz
call
test
iret
movb
mov
sub
xchg
jl
fcoms
cmp
loop
int3
sti
pop
cld
icebp
xor
mov
mov
push
in
xchg
aas
lret
lret
stos
dec
(bad)
push
call
adc
stc
xchg
mov
xchg
loop
movsb
ljmp
adc
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
cld
jmp
jnp
mov
adc
mov
jbe
and
cmc
mul
mov
aas
xchg
xchg
mov
and
aas
sbb
sub
adcl
sub
jb
cmp
fwait

cwtl
lock
mov
ret
sar
xor
add
mov
mov
int
int
jmp
mov
jae
fstpl
ja
enter
xchg
mov
sahf
cmp
pcmpeqw
or
pop
cld
pushl
push
cmp
mov
subl
sbb
inc
lock
or
popf
movsl
scas
push
out
sub
sub
mov
gs
add
cmp
insb
addb
mov
mov
lods
pop
sbbl
add
mov
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adc
and
das
jns
les
cmc
sub
mov
int3
xor
push
dec
jp
xor
out
jge
cmpl
lds
test
icebp
pop
sbbb
and
repz
sbb
cs
push
cmc
mov
movsb
jle
xor
lahf
test
loope
mov
sbb
(bad)
out
sbb
pusha
xchg
in
aad
and
dec
stc
jb
out
inc
mov
adc
dec
int
xlat
push
pop
test
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
rcrb
mov
aam
jns
cmc
test
filds
mov
or
int3
mov
push
aam
les
std
fidivrl
sub
jnp
add
pop
and
roll
rorb
jge
sti
sub
inc
fnstsw
jecxz
fstl
inc
pop
stos
inc
bnd
xchg
imul
stos
mov
cmpsl
int
pusha
adc
movsb
mov
and
xchg
int3
mov
push
mov
enter
data16
adcl
(bad)
cld
jmp
cmp
lods
jl
dec
int
enter
subl
jle
inc
frstor
cmpl
shll
int3
into
(bad)
test
aam
repz
pop
xlat
aad
mov
push
int
insb
leave
int
ljmp
jbe
imul
inc
and
adc
mov
pop
dec
xorl
and
add
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
lea
out
jb
clc
loop
xor
aam
jge
add
sbb
cltd
lock
sbbb
dec
int
inc
int
jo
cmp
test
rolb
rorl
int3
inc
lret
stos
rcrb
hlt
pusha
testb
mov
inc
cld
pop
rorl
addb
test
pop
adc
xchg
(bad)
xor
mov
imul
imul
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xor
xor
in
andl
sub
mov
jns
jae
mov
int
sti
in
loope
jg
test
mov
int
test
xor
xlat
mov
addl
leave
aad
xchg
outsl
(bad)

add
mov
enter
int
and
cld
pusha
or
ds
adc
jns
(bad)
mov
and
daa
mov
mov
cltd
or
fsubl
push
aad
xchg
add
cmc
outsb
icebp
dec
int3
xorb
fistl
adc
mov
mov
out
mov
stos
icebp
negb
xor
mov
sbb
stos
inc
jb
add
or
icebp
outsl
lea
mov
xchg
sub
sbb
pop
cmc
cmp
lret
repz
xor
or
cli
jecxz
and
in
std
xchg
addr16
(bad)
cwtl
pop
xchg
hlt
arpl
cmpl
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
int3
inc
adc
test
ret
xchg
dec
gs
lret
xor
push
mov
hlt
(bad)
outsb
int
leave
rcrb
sub
mov
dec
sub
or
int3
scas
int3
test
mov
mov
(bad)
pop
jecxz
mov
push
lods
cld
xchg
orl
cltd
dec
dec
rcll
ljmp
push
ja
neg
xchg
and
add
stc
insb
xor
shl
(bad)
loop
xor
mov
dec
inc
sub
xor
xchg
inc
mov
sbb
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
movsl
sbb
orl
adc
push
xchg
fildl
enter
and
and
aad
cwtl
mov
push
test
dec
dec
and
dec
out
cmp
js
ror
sbb
inc
cmp
inc
jnp
cmpsl
(bad)
clc
and
shrb
int
jb
in
jnp
rorl
ds
hlt
mov
fwait

xchg
mov
iret
cmp
push
test
cltd
enter
repz
aam
addl
pop
and
into
shrb
lahf
outsl
fisttpl
sub
rcrb
subl
aas
jmp
rorl
mov
clc
addl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
ja
cmpl
add
or
sbb
lahf
pop
stos
popf
cmpb
out
inc
cmpsl
fimuls
push
jle
xlat
pop
fsubrs
vpcmpeqw
repnz
or
xor
dec
cmpsl
inc
pop
xor
dec
orb
test
mov
int
jbe
imul
rorl
adcb
or
push
mov
cmp
xor
dec
cwtl
scas
sbb
mov
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
ljmp
jge
cmp
and
adc
scas
enter
out
bound
or
xor
(bad)
fistps
insb
(bad)
ret
sti
rolb
inc
inc
mov
(bad)
jge
mov
fstl
bound
orb
pop
nop

int3
add
xchg
jo
pop
add
push
mov
or
adc
andb
popa
popf
stos
fldcw
and
inc
popf
dec
lea
xchg
mov
test
push
int3
fsub
ret
fs
mov
or
adc
jb
xchg
cld
andl
loop
and
rcrb
lret
cmpb
ret
(bad)
push
aas
fsubl
pop
push
ret
fisttpll
aad
inc
cmp
fcompl
mov
arpl
adc
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
dec
(bad)
adc
(bad)
pop
mov
fiaddl
push
mov
orl
(bad)

and
cmpsb
sbb
fwait

addl
loop
sbbl
repz
les
add
scas
out
push
xor
adcl
push
xchg
in
icebp
sub
(bad)
mov
subl
mov
xchg
int
sub
xor
xor
addl
movsl
divl
popf
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
int
lock
cmp
imul
pusha
mov
push
movsl
int3
inc
adc
inc
bound
ret
adc
mov
ljmp
out
add
test
lahf
push
loope
out
in
push
or
test
sub
lahf
xchg
sbb
mov
imul
add
stos
repnz
jmp
(bad)
mov
cwtl
mov
lods
and
and
cwtl
(bad)
xlat
sbb
(bad)
dec
shrb
movsl
fdivrl
call
mov
add
in
scas
fistps
xlat
orb
push
mov
arpl
mov
outsb
mov
cmc
jge
out
fmull
or
call
loope
andb
mov
sarl
sub
int3
ret
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
repz
je
dec
fcoml
or
dec
leave
push
and
std
call
sub
jg
nop

xor
jns
cwtl
xor
jns
and
lea
fistpll
push
jne
(bad)
sti
push
cli
jle
hlt
sbb
aas
inc
lods
ficoml
insl
fdiv
xor
mov
orb
outsb
orl
(bad)
data16
push
enter
adc
add
lods
adcl
pop
adc
mov
loopne
test
and
xchg
bound
(bad)
jbe
push
sub
(bad)
jae
push
fldl
sahf
jbe
addl
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
test
sub
icebp
sub
jge
shrl
aam
rol
jecxz
rcll
mov
or
mov
mov
jmp
lods
pusha
mov
add
aam
mov
addb
push
xchg
sti
scas
adc
and
xlat
addl
sub
shll
xrelease
adcb
push
mov
cld
in
adc
xchg
pop
xor
and
int
roll
mov
sbb
int3
sbb
pop
sbb
scas
mov
push
aam
lock
in
xor
rcrb
jno
inc
mov
aas
push
jmp
dec
and
or
xor
aam
and
movl
xchg
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
into
test
push
out
add
sub
cmp
repz
movsl
aad
and
stos
int
lret
andl
ret
aaa
test
cs
push
cmp
insb
int
cli
sub
jle
sbb
jo
push
int
mov
(bad)
mov
add
xor
mov
pop
aam
fiadds
andl
pop
mov
icebp
inc
inc
push
jge
sbb
dec
adc
stos
lods
mov
adc
bound
movsl
xchg
int
std
add
jmp
(bad)
cmpsl
orb
add
int3
xchg
sbb
mov
sbb
shll
xor
xorl
adc
out
xchg
xor
outsb
scas
orb
mov
pop
int
xor
mov
push
lret
jecxz
adc
cmp
in
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
int3
int3
int3
int3
int3
int3
adc
cmp
aam
aaa
popf
ds
stos
pop
inc
mov
push
mov
fisubrs
test
xor
loopne
jns
jge
andl
xor
fmuls
mov
sub
iret
jnp
andb
jo
cwtl
and
jae
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
ss
sti
fsubrs
ds
jl
addl
cmp
mov
dec
jmp
mov
shlb
mov
roll
cltd
data16
push
inc
jle
test
ds
sub
mov
jl
xor
jge,pt
ss
pop
add
mov
aas
xor
mov
loopne
leave
popa
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
lea
insl
jae
fcmovnu
sbb
add
aaa
xchg
adc
int
sahf
enter
adc
adc
xorl
imul
fistl
insl
call
or
in
ret
insb
mov
mov
mov
dec
fisttpll
jnp
dec
xor
mov
push
jge
test
lds
sub
int3
mov
xrelease
xchg
and
push
lods
xorl
jns
push
loop
dec
imulb
test
dec
fstpt
stos
enter
cwtl
adc
mov
fwait

lods
lods
leave
xor
and
lcall
mov
sub
(bad)
jl
jae
leave
mov
push
ror
cmp
cli
shll
jne
push
or
jle
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
lahf
add
das
or
lea
insb
mov
int
cmpb
push
test
mov
stc
jmp
out
sub
(bad)

out
add
jl
or
inc
mov
decb
sbb
aam
mov
fistpl
inc
out
jns
in
sbbl
orb
hlt
adc
ret
jmp
push
inc
je
mov
xchg
add
mov
in
lea
add
lcall
xor
jge
xchg
adc
xor
cld
cwtl
cld
xchg
test
imul
(bad)
xchg
push
xchg
jmp
out
mov
mov
lcall
xor
or
sub
push
xchg
bound
dec
rorb
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
insb
inc
jne
in
inc
movsl
add
mov
xchg
jp
insb
mov
dec
xor
xchg
mov
jns
pop
loope
stos
mov
xchg
pushf
outsl
sbb
sarl
arpl
subl
sub
sahf
pop
and
jl
cmpsl
icebp
movsb
cmp
subl
xchg
mov
sbb
dec
adc
push
mov
fsub
dec
mov
xchg
jb
data16
cli
stc
mov
or
in
jg
mov
or
and
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
popl
fsubrs
push
jae
mov
cmp
inc
mov
cwtl
and
int
iret
push
push
mov
or
jbe
dec
xlat
fcom
std
(bad)
or
cmp
mov
test
xchg
imul
push
push
dec
jle
lahf
ljmp
jnp
jb
jb
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
enter
icebp
cli
jns
pushf
and
inc
popa
adc
sub
pop
or
in
(bad)
jmp
push
pusha
notl
fwait

jge
and
orl
fisubrs
outsb
mov
pop
xor
inc
out
inc
pop
inc
movsl
cltd
aaa
loop
aad
mov
repnz
jns
test
stos
aas
leave
push
xor
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
call
outsb
sub
or
loope
pop
xor
fcmovnu
and
fimull
jnp
mov
xchg
xchg
mov
cmp
insl
test
mov
sahf
or
sub
mov
mov
push
inc
and
jge
(bad)
lcall
push
push
int
cmp
add
push
iret
mov
out
pop
cmp
out
xchg
int
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
lds
cs
scas
movb
fwait

inc
aaa
fwait

adcl
loop
sbb
fst
mov
rclb
adc
cmp
jb
(bad)
xchg
xor
pushf
pop
jle
fucomp
inc
adc
lcall
fsubl
jg
(bad)
mov
push
mov
sbb
sbb
mov
pop
push
cmc
decb
lret
(bad)
xor
stos
rorl
jl
cmc
xlat
mov
cmpsb
mov
test
ret
pusha
add
sub
shl
in
subb
xor
les
xor
push
xorl
jnp
pop
fs
push
inc
shlb
add
mov
mov
cld
jge
pop
dec
xchg
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
(bad)
jmp
mov
sahf
jo
orl
xor
dec
nop

lcall
cmpsl
stos
push
push
lcall
sarl
pop
dec
mov
mov
lcall
fs
add
ljmp
cmpsl
sbb
shrb
frstor
scas
aaa
std
daa
and
mov
pop
test
repz
add
scas
or
(bad)
adc
data16
mov
adc
jle
jae
cmc
stos
loope
stc
mov
inc
inc
movsl
sbb
push
lcall
dec
jp
lret
inc
cld
out
stos
dec
cmpsb
lret
sub
iret
test
gs
sbb
std
std
sub
sub
fiaddl
rolb
xchg
std
mov
mov
(bad)
stc
orl
mov
rclb
pushf
xchg
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
cmp
adc
fcmove
cmc
and
(bad)
sub
imul
push
(bad)
(bad)
push
dec
popa
insl
int3
aam
lea
and
add
mov
sub
mov
fcompl
jb
je
cmc
mov
in
xor
into
stc
daa
mov
int
mov
ret
pop
lea
add
mov
into
adc
ljmp
sub
scas
loopne
xchg
mov
mov
sti
sbb
cmc
lea
dec
push
outsb
(bad)
stc
pop
xor
xor
fsubl
(bad)
faddl
jmp
sub
xor
pop
xchg
mov
adc
ret
jmp
(bad)
cmp
out
sbb
sbb
adcb
cmc
jmp
rcr
and
lret
repnz
icebp
push
add
mov
jmp
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
cwtl
decb
test
mov
lods
cmpsl
push
inc
lcall
(bad)
sub
andb
shr
outsb
xchg
push
rolb
xchg
xchg
sub
pushf
cld
jno
add
out
xor
cltd
roll
rcl
test
jp
jge
sbb
mov
xchg
iret
lock
lret
arpl
jb
fisttps
outsb
aad
fxch
sbb
xchg
pop
xlat
sub
sub
jecxz
dec
repnz
fcoms
xor
shll
lds
cmp
leave
fbstp
mov
adc
fsubp
cmp
adc
xchg
inc
subb
movsl
or
and
scas
out
scas
add
addl
xor
jle
dec
call
mov
shlb
inc
mov
daa
cmp
cwtl
enter
or
mov
or
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xor
xor
cwtl
andl
push
mov
push
andl
add
xor
pop
mov
xor
mov
push
push
repz
clc
mov
nop

je
sub
mov
xchg
sub
pusha
jbe
push
cld
cwtl
idiv
(bad)
int3
js
mov
pop
inc
loope
ss
push
push
rorl
adc
mov
rcrb
ret
cmp
sub
mov
lods
sbb
out
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jno
ljmp
out
jmp
adc
fstl
adc
in
mov
sbb
mov
repz
iret
add
mov
aaa
pop
dec
add
add
or
in
arpl
call
fidivrl
sbb
stos
test
(bad)
into
mov
sbb
movsb
fs
jo
dec
aad
mov
mov
mov
add
push
cld
xor
sbb
jle
xchg
stos
sub
out
push
mov
mov
ja
or
adc
jge
int
add
adc
add
loope
shl
gs
out
lea
adcl
jo
xchg
xchg
push
cmp
cwtl
(bad)

test
sbb
pop
push
std
lods
add
cld
adc
lods
fsubl
int
cli
mov
jmp
icebp
add
enter
addr16
sub
inc
jecxz
orl
fcoms
inc
pushf
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
pusha
dec
loop
sbb
stos
dec
scas
movsl
pusha
push
inc
arpl
lds
jl
sub
jns
mov
dec
bound
pop
sbb
push
sbb
icebp
dec
jbe
inc
movsb
push
sti
mov
inc
repnz
or
repnz
lock
jnp
xor
jae
adc
xor
mov
(bad)
xchg
mov
sbb
sahf
or
movsl
jge
popa
push
out
pop
pusha
popf
ljmp
cld
out
cmp
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
add
lds
lds
je
mov
sahf
pop
jge
stos
sub
daa
dec
aad
lods
adc
pop
xor
adc
jge
icebp
in
fmuls
pop
cmp
lahf
sbb
sbb
add
outsb
pop
push
jle
(bad)
adc
mov
sub
fnsave
add
pop
add
xor
imul
pop
cmpb
std
test
or
sbb
and
push
lock
jmp
fs
inc
mov
movsl
xchg
cwtl
aas
test
fbld
pop
fldenv
stos
add
sub
add
mov
jbe
fnstsw
lock
das
adc
in
mov
sbb
pop
dec
cwtl
xchg
mov
fcomip
jbe
mov
stos
jl
leave
jge
in
and
ja
jmp
dec
pop
or
xchg
xor
pop
imul
stos
out
cmp
xor
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jecxz
bound
mov
cs
popf
jg
push
orb
inc
test
mov
in
fldenv
add
xchg
or
push
jge
mov
mov
mov
xchg
mov
sbb
ds
arpl
cs
adc
sbb
ret
stos
mov
add
call
adc
clc
xchg
ret
hlt
iret
sbb
loopne
test
cs
mov
mov
shrl
inc
scas
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
orb
imul
xchg
in
mov
loopne
movsb
(bad)
test
cmp
je
cli
sbb
ss
or
mov
add
add
add
es
fldl
dec
sbbl
mov
and
adc
out
rcll
mov
lea
push
adc
mov
ret
addl
(bad)
adc
xchg
frstor
addb
jae
mov
enter
cmp
xor
adc
mov
lock
aad
orl
cmpsl
pop
push
stos
mov
cmp
(bad)
fmull
ljmp
test
popf
scas
lcall
sbb
dec
cmp
cs
pop
shl
mov
sub
ret
add
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
sbb
dec
cmpsl
stc
mov
push
gs
pop
push
dec
jl
and
arpl
sub
xor
js
sub
push
jge
dec
and
adc
jle
cmp
(bad)
lea
jecxz
pop
lahf
dec
mov
test
sub
in
jl
int
movsb
adc
lds
xorl
nop

movsb
add
fstl
sarl
xchg
(bad)
rcrl
repz
mov
adc
mov
(bad)
dec
add
or
jo
sbb
out
mov
xor
in
mov
inc
es
sbb
mov
push
hlt
shrb
mov
cltd
daa
mov
xchg
mov
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
sbb
xchg
mov
xorl
xchg
scas
or
lds
jb
jbe
jl
popf
pop
les
pop
pop
sahf
mov
movsl
(bad)
push
scas
test
popa
mov
add
inc
insl
push
pop
jle
fwait

rolb
testb
hlt
in
mov
testl
cs
ret
cmp
add
stc
and
sub
mov
fcompl
out
cld
in
insb
std
test
sub
clc
jo
xchg
mov
aad
(bad)
jp
out
push
repz
xchg
xchg
sti
(bad)
hlt
inc
push
xor
mov
mov
inc
sbb
mov
lock
dec
(bad)
jnp
aad
shrb
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
push
and
rorl
jle
mov
pusha
jbe
insb
push
loop
addb
icebp
inc
dec
add
and
mov
and
xor
stc
loope
into
push
sub
fwait

add
jo
mov
cwtl
push
mov
imul
psubq
add
jae
pop
lahf
xchg
jnp
or
enter
push
sub
mov
inc
movsb
jns
aaa
sub
or
sub
jle
mov
dec
mov
pop
mov
(bad)
lcall
pop
in
push
rcr
mov
repnz
jb
insb
hlt
lcall
push
iret
dec
les
jnp
mov
sbb
bound
sbb
int3
mov
out
push
dec
mov
mov
insl
xor
aam
sub
(bad)
call
out
mov
movb
cltd
dec
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adcl
clc
test
test
push
jp
and
outsl
int3
aas
aas
stc
xchg
jge
lret
push
xchg
or
addr16
fucom
mov
popf
enter
fstpl
sub
in
insl
movl
cmc
and
cpuid
inc
dec
cltd
mov
int
jns
stos
(bad)
rol
jecxz
xchg
shlb
imul
mov
inc
mov
pop
dec
xlat
popf
(bad)
daa
fldt
xchg
jns
(bad)

adc
xchg
xchg
mov
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
inc
inc
dec
and
std
mov
pop
fwait

add
push
mov
orl
imul
push
cmpsb
leave
sbb
in
cmp
sbb
lret
sub
push
andb
test
dec
pop
negl
lea
ret
mov
test
inc
sbb
sbb
call
adc
dec
push
in
test
data16
andl
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
in
xor
cvtps2pi
cmp
insl
push
jnp
push
sahf
in
sub
add
jle
sbb
mov
ret
xlat
adc
nop

push
push
pop
cmp
adc
lahf
cld
insb
pop
and
jecxz
mov
cli
aaa
sub
mov
sahf
hlt
push
lock
xchg
push
inc
(bad)
roll
push
(bad)
xor
mov
std
inc
mov
add
jne
inc
nop

idiv
out
mov
mov
insl
xchg
mul
add
sub
push
(bad)
jg
sbb
mov
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
and
push
xchg
pop
int
xor
fisttpl
pusha
test
lds
lcall
cs
jp
dec
jecxz
orl
sbb
mov
test
(bad)
mov
scas
push
xorl
subb
jnp
les
mov
mov
jo
or
mov
sub
xor
or
sahf
sti
mov
xchg
bound
in
jecxz
pop
int3
mov
int
add
cli
mov
mov
mov
xor
adc
cld
or
lock
es
jmp
into
push
loope
(bad)
fisttps
lds
inc
mov
sbb
stos
mov
rorb
hlt
(bad)
in
cmc
mov
cld
js
fstps
add
adc
xor
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
shl
les
jne
cs
inc
mov
jns
out
imul
aas
mov
sbb
jnp
push
sbbb
mov
or
cmc
nop

sbb
push
xchg
sbb
mov
bound
repnz
clc
and
orl
pop
cli
rcll
or
lret
lahf
xchg
inc
xchg
andb
xchg
mov
movsl
imul
mov
hlt
test
add
xor
add
enter
popa
rol
int
(bad)
notb
lret
int
pop
add
push
dec
testb
(bad)

addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
std
flds
hlt
xchg
leave
cltd
jne
negl
in
pop
inc
mov
test
aas
pop
xchg
mov
and
(bad)
arpl
test
sub
scas
pusha
jle
pop
jne
mov
fsubrl
sub
mov
xchg
iret
mov
mov
mov
mov
in
jg
repnz
sub
lret
pusha
leave
fisubrl
xchg
xor
aaa
loopne
loope
lret
movsl
popa
popa
rcll
sahf
inc
aam
fcomps
pop
arpl
push
test
pop
adc
cmp
(bad)
jg
testb
sti
push
mov
push
(bad)
call
test
icebp
(bad)
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
inc
pop
in
or
lock
mov
jnp
popa
adc
jl
mov
(bad)
adc
xchg
fnstsw
pop
jle
scas
mov
(bad)
insl
in
test
pushf
sub
cmp
stos
popf
iret
xchg
adc
in
jo
adc
ss
mov
(bad)

stos
lds
ret
cwtl
orb
(bad)
mov
inc
cmpb
cmp
cltd
jge
shll
mov
pop
rcll
mov
pop
inc
add
ret
mov
enter
(bad)
xchg
xchg
cltd
test
aad
lcall
arpl
nop

sahf
and
mov
das
fmul
inc
jb
aas
mov
adc
push
test
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
jge
dec
and
jbe
testl
call
xchg
sub
shr
nop

aam
rclb
or
xor
orl
faddl
lock
xor
xor
cmp
mov
int
hlt
shrl
mov
nop

dec
pop
sub
outsb
aas
xor
xchg
leave
add
jp
int
cld
imul
ret
ss
jle
inc
xchg
or
je
jae
mov
xor
sub
sbb
xchg
shr
inc
push
jbe
in
or
pop
ds
mov
xor
je
sbb
push
out
mov
lcall
fisttpl
push
push
pop
cltd
(bad)
push
or
movsb
push
(bad)
jbe
movsl
adc
dec
daa
xchg
in
loopne
adc
mov
mov
sbb
iret
paddb
pusha
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
jge
cmp
test
cs
das
cmpsl
icebp
fidivs
stc
inc
test
pop
popa
lea
out
sahf
sti
push
das
cltd
popa
adc
xchg
int3
lds
dec
call
test
popa
or
mov
pop
jge
outsb
sarl
dec
pusha
movsb
cmp
pop
pop
mov
push
ret
popf
hlt
fwait

xchg
shlb
inc
xor
(bad)
pop
push
stos
jge
aas
xlat
sahf
setl
les
aam
popa
mov
jae
ficomps
lcall
adc
jb
or
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xor
rolb
or
jb
add
nop

lret
fwait

mov
jmp
js
sahf
pop
repnz
aam
push
(bad)
sbb
pop
dec
imul
je
lock
xchg
addl
sbb
mov
movsl
fstl
iret
mov
jl
mov
sarb
push
and
movl
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
push
jge
shl
test
lret
sbb
push
call
addl
test
sahf
fldl
or
mov
pop
loopne
mov
jo
fs
lahf
cmp
cmpsl
int
test
fisttpl
rcrb
iret
stos
inc
or
(bad)
cmpb
dec
int
push
push
fisttpll
loopne
dec
ret
xorb
and
push
loope
sub
lcall
scas
or
stos
lock
cmpsl
and
sub
fisubl
sub
imul
popa
sahf
push
adc
push
addb
or
pop
adc
lods
roll
cwtl
sbb
ret
lcall
mov
sbb
cmp
shlb
sbbb
mov
or
movsb
(bad)
jmp
cs
and
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
lret
(bad)
outsl
xchg
fnstenv
lea
scas
iret
mov
ret
dec
ds
adc
xchg
jnp
xor
cmp
nop

shlb
mov
add
xlat
aad
jp
js
loopne
add
pop
mov
nop

jne
mov
add
push
xor
dec
loop
mov
ret
jmp
mov
sbbl
mov
daa
call
call
mov
pop
push
addl
mov
test
lret
sub
les
add
loopne
pop
inc
arpl
jne
jle
xchg
pop
nop

dec
movl
int3
jge
jne
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
nop

(bad)
popf
test
ret
insl
add
push
repnz
or
push
pop
int
lock
adc
xorl
loop
in
stos
idivb
loopne
lea
addr16
xchg
and
xchg
out
push
lret
notl
add
cmp
pop
jp
cmpsl
inc
pcmpeqb
mov
hlt
stc
sbb
mov
add
sti
sarb
fcmovnbe
mov
xor
stos
mov
out
idivb
xchg
xchg
or
mov
shr
(bad)
or
aam
lods
inc
loop
inc
adc
xor
xchg
add
xor
(bad)
jno
mov
movsl
pop
xchg
xchg
inc
adc
mov
dec
cmc
outsl
sbb
std
out
movsl
movsl
fisttpl
int3
stos
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
push
dec
cmpl
mov
(bad)
mov
fsubl
push
ret
into
lahf
xor
pop
fwait

in
jmp
dec
je
mov
outsl
pop
xor
rclb
movsb
movsb
push
frstor
enter
add
movsl
sub
test
hlt
loope
subb
add
pop
xor
push
xor
jg
fdiv
ljmp
push
mov
adc
adc
stc
sahf
sub
xor
flds
jne
push
call
in
fs
mov
(bad)
filds
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
push
mov
outsl
out
aas
dec
pmaddwd
mov
(bad)
les
mov
mov
int
xchg
lods
orl
rorl
mov
rcr
add
out
data16
lret
xor
faddl
imul
lahf
pop
xor
movsl
inc
mov
sahf
sub
mov
inc
mov
(bad)
fmull
inc
jecxz
push
into
push
dec
xchg
data16
lods
fstps
adc
imul
in
sbb
repnz
push
mov
mov
xchg
es
inc
xor
negb
ret
mov
orl
addl
cmp
jno
jp
fldl
adc
movsl
int3
addl
frstor
lock
popf
mov
push
adcb
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
and
add
xchg
es
xchg
xor
dec
cmp
cwtl
ljmp
addb
mov
jl
lds
orl
mov
inc
loopne
sbb
xor
fwait

add
out
cmp
out
xorl
leave
mov
and
int
or
dec
adc
loop
cltd
mov
mov
enter
and
popl
sub
mov
mov
inc
and
ret
rorb
addl
xorb
xchg
fsubl
xor
int
arpl
inc
xchg
lahf
lods
imul
dec
add
add
dec
dec
push
inc
(bad)
mov
aam
outsl
(bad)
sahf
pop
js
nop

jae
je
movsl
mov
mov
out
sbb
mov
pop
movsb
xorb
pop
push
sbb
cmp
and
mov
jmp
js
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
or
int3
mov
iret
mov
int3
jno
in
sbb
icebp
xchg
out
(bad)
pop
jge
js
push
out
test
stc
cmp
push
popf
mov
push
inc
clc
mov
mov
push
stos
sbb
sbb
jmp
mov
mov
fldcw
aaa
fidivs
sbb
outsl
mov
mov
add
lea
nop

cli
adcl
ljmp
pop
adc
mov
and
(bad)
xor
pop
cmp
xor
cmpsb
push
data16
adc
pop
adc
in
mov
lock
movsb
jp
adc
out
push
dec
or
and
jl
pusha
or
ret
insb
lods
es
movsl
xchg
dec
orl
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
(bad)
sub
(bad)
test
int
cmp
fmuls
fisubrs
loopne
add
sub
hlt
mov
mov
in
mov
mov
jnp
roll
in
xor
(bad)
xlat
or
cmp
mov
pop
xchg
adc
sub
cld
push
les
(bad)
adc
dec
ljmp
ret
dec
pop
push
mov
shll
xorb
stos
sbbb
stc
sbbl
shlb
fwait

cwtl
and
xchg
mov
mov
jbe
xor
andl
dec
lret
in
push
pusha
test
fnstenv
add
int3
dec
clc
sbb
pop
imul
icebp
mov
sbb
jbe
jge
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xor
ror
out
pusha
(bad)
insl
xchg
movsb
fsubs
rclb
xchg
push
jp
loope
es
and
jecxz
lea
call
jmp
mov
mov
das
xorl
js
push
mov
outsl
jge
xchg
enter
mov
lods
leave
push
xor
dec
pusha
and
fwait

stos
cli
stc
xchg
push
js
cli
sbb
pop
loopne
outsb
inc
icebp
scas
daa
inc
int
rclb
mov
out
fwait

cmp
sahf
cmpsl
leave
adc
jle
(bad)
aam
adc
test
in
cmp
lods
push
and
pop
test
test
subl
or
or
les
shll
or
bswap
test
and
leave
push
ret
movsl
lahf
outsb
lock
or
addl
jle
rorl
jne
sti
das
sbb
inc
adc
out
inc
fwait

lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xchg
adc
mov
mov
dec
inc
lea
mov
loop
das
cmpsl
aam
cmp
jno
lock
lock
mov
mov
sub
jnp
loopne
addl
mov
xchg
into
mov
test
mov
frstor
sti
xchg
cmpl
imulb
inc
mov
lods
mov
movsl
xchg
adc
scas
cmpsl
icebp
test
stos
js
(bad)
and
xchg
push
adc
mov
sarl
leave
mov
dec
lock
test
mov
stc
xor
or
and
roll
add
(bad)
sub
dec
(bad)
stc
add
adcl
call
pop
mov
cmc
xor
loopne
aam
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
scas
jo
ret
stc
jne
sub
movsl
jecxz
add
cmpsb
js
pop
push
dec
push
xor
fs
sub
ja
jp
or
loop
(bad)
xchg
cli
in
sbb
inc
sahf
(bad)
out
(bad)
xor
lock
push
sub
mov
cmpsl
mov
enter
push
mov
add
neg
adc
frstor
mov
push
int
push
imul
enter
xchg
jnp
outsw
lahf
inc
jo
aam
fisubrs
mov
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
subl
xchg
and
pop
imul
push
mov
xchg
jge
cmp
lret
imul
mov
and
and
lea
ret
dec
pop
dec
pop
test
add
pop
sbb
hlt
shrb
xchg
xchg
test
in
int3
dec
(bad)
mov
pop
push
stc
pop
and
enter
into
add
jl
addl
mov
sti
jp
sbb
jle
test
out
repz
mov
push
lds
cli
icebp
rclb
sub
ljmp
cmp
cmpsl
addr16
ficoms
jle
das
jnp
testl
icebp
add
pop
mov
hlt
xchg
and
arpl
hlt
and
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
fwait

xchg
cmp
repnz
and
xor
xor
enter
cwtl
jb
int3
xor
imull
sti
xor
(bad)
adcl
sahf
add
xchg
xchg
outsb
(bad)
xlat
insb
sub
pop
ror
fwait

sub
xorb
sub
out
jmp
or
and
xchg
jae
fnstcw
mov
call
ficomps
arpl
cli
sbb
popa
push
out
cltd
arpl
ret
mov
shr
lret
xor
addb
fstpl
int3
int3
int3
int3
int3
int3
int3
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
into
cmp
lock
and
arpl
fdiv
fidivrl
push
mov
mov
cmp
pusha
pushf
jle
mov
lds
scas
lret
call
sub
enter
aaa
mov
xchg
les
or
pop
aam
stos
push
cs
xchg
mov
add
push
xor
cmp
push
sti
cmp
cmc
mov
mov
sub
aam
cmp
je
mov
sub
stos
mov
in
adc
xchg
gs
xor
(bad)
adc
pop
sbb
cmp
mov
xor
sbb
stc
andb
cmp
xor
pusha
ljmp
push
loopne
repz
add
rol
fnstenv
mov
mov
jns
xorb
bound
ljmp
lahf
lret
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbbl
fcmovb
bnd
inc
stc
les
lock
adcl
and
mov
and
loop
or
and
bswap
movsb
(bad)
mov
pusha
fidivrs
add
sbb
push
test
into
dec
jg
xchg
and
test
mov
jle
dec
(bad)
xlat
cmpsl
jg
aam
adc
and
loop
push
push
xorl
int3
push
cld
inc
(bad)
mov
or
(bad)
out
(bad)
aad
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
cmp
jg
aam
push
and
push
adc
adc
pop
sahf
add
bound
(bad)
movsl
in
adc
cwtl
jbe
rcr
jbe
imul
je
mov
sahf
stos
outsb
addr16
jne
cmp
cmpsl
mov
loopne
adc
mov
int
insb
mov
add
and
js
clc
daa
in
les
shll
(bad)
adc
cwtl
mov
xor
lods
imul
les
scas
xor
mov
popf
roll
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
xor
cwtl
insl
xor
push
mov
push
cmp
mov
sbb
cmp
gs
sti
mov
addr16
in
mov
or
rcr
lcall
inc
xchg
push
and
(bad)
xchg
mov
mov
sbb
loope
adc
sbb
out
cld
sbb
xchg
stos
mov
mov
mov
jge
mov
fnstcw
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
jb
pop
data16
lods
repnz
mov
jge
ss
stos
push
jb
icebp
jnp
push
loope
jle
aaa
mov
(bad)
sti
arpl
fldenv
insb
adc
or
popf
sbb
pop
int3
test
lds
push
xor
call
enter
imul
add
push
mov
movsb
fwait

loop
daa
call
call
aam
shrl
xchg
add
push
push
dec
add
mov
mov
jne
mov
mov
jl
aad
insl
dec
ja
orb
(bad)
cmc
sub
xor
and
jb
popa
movsl
add
mov
stos
push
or
xor
clc
out
iret
and
push
xorl
push
or
cmpsl
push
adc
out
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cmp
sti
movsb
mov
stc
cwtl
mov
jge
int3
push
orl
mov
(bad)
cmp
mov
dec
jo
pushf
(bad)
hlt
sub
mov
aaa
mov
jle
and
dec
aad
stos
push
sbb
(bad)
mov
xchg
ss
mov
push
data16
adc
(bad)
rolb
pop
out
xorb
dec
or
orl
sub
xor
cmp
mov
movzwl
or
std
mov
xor
scas
lret
push
mov
push
sbb
mov
ds
(bad)
fnsave
sub
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
mov
into
pop
xorl
icebp
subl
lret
mov
stos
insb
mov
in
sti
orl
cmc
aad
out
xor
popf
fbstp
in
scas
fmull
in
adc
cmp
scas
pop
movsl
adc
dec
ss
mov
mov
sub
nop

xchg
ret
inc
enter
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adc
nop

ljmp
adcb
hlt
jno
add
jo
cwtl
jmp
ret
jle
repnz
and
xchg
fcmove
hlt
push
fwait

mov
scas
and
push
sbb
jp
in
hlt
xchg
sbb
pop
sbb
mov
pop
dec
loopne
rclb
mov
insl
nop

sbb
xchg
out
xchg
loope
andl
jge
repnz
xor
fisttpl
sahf
dec
or
aam
inc
(bad)
mov
aas
movsl
add
sbb
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
andb
push
inc
mov
xor
iret
cmp
jecxz
push
sbb
push
or
ss
enter
lods
mov
push
fwait

xchg
mov
push
push
jns
sub
test
dec
xchg
inc
cmp
cwtl
stc
(bad)
mov
push
mov
add
and
sub
fldt
int
cmc
repnz
mov
jo
repnz
imul
stc
cltd
sub
nop

sub
sub
mov
mov
sbb
add
aam
ret
fs
cwtl
call
jmp
jle
push
mull
notl
cwtl
add
and
std
pop
das
dec
loopne
js
sub
xor
addl
inc
inc
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
(bad)
pop
lea
mov
xor
jbe
sbb
jbe
ss
stc
push
pop
jno
das
push
and
mov
aaa
adc
jne
jg
xchg
insl
sbbb
jne
das
mov
mov
adc
addl
test
mov
gs
inc
iret
rcll
lret
mov
ret
fisubl
test
xor
aad
and
jp
mov
loope
jno
cmovb
jge
push
subb
cmp
mov
inc
jae
ja
jge
loope
inc
jle,pn
inc
inc
nop

mov
std
stos
test
gs
into
(bad)
enter
sub
sbb
lds
xchg
jb
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sbb
and
mov
ficompl
jle
mov
jbe
(bad)
sbb
jbe
outsb
and
shrl
push
or
pop
lods
repnz
sbb
adc
rorb
or
leave
lods
sbb
adc
std
repz
mov
jle
sahf
rorb
pushf
pop
into
and
mov
mov
loop
aam
dec
sbb
sbb
inc
sub
int3
jg
lret
aaa
rcr
popa
mov
movsb
mov
mov
dec
in
stos
mov
pop
lret
push
mov
add
movsb
jno
cmc
mov
pop
cmp
pop
insb
mov
aaa
outsb
int
cltd
int
div
sub
int
in
insl
test
daa
out
aad
cmp
and
add
js
(bad)
dec
stc
dec
cltd
mov
fimuls
iret
clc
sub
fdivrl
orl
and
outsb
subl
mov
int3
(bad)
push
or
(bad)
dec
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
into
fstl
lret
mov
xchg
dec
dec
push
icebp
jp
enter
arpl
inc
jo
pop
jge
rorl
out
push
sahf
cmpsl
nop

sahf
and
mov
bound
mov
sbb
xchg
(bad)
lock
rcrb
push
dec
insb
xor
pop
jnp
mov
mov
into
aas
shll
rol
clc
aad
cmpl
cmp
push
xchg
adc
and
xchg
mov
test
rclb
jne
scas
or
jecxz
into
cmp
mov
enter
sbb
decl
fidivl
mov
dec
jmp
je
iret
(bad)
fstps
repnz
mov
push
sbb
(bad)
pusha
jge
daa
pop
pushl
cli
mov
mov
test
xlat
adc
lea
xor
ret
(bad)
xor
outsb
jnp
(bad)
out
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
out
scas
push
movsl
arpl
mov
scas
and
pop
jne
movsl
or
dec
ljmp
movsb
xor
inc
inc
mov
shlb
sbb
aas
sbb
xchg
pushf
dec
testl
repz
jne
and
leave
hlt
xor
pusha
dec
dec
inc
inc
push
lea
aas
test
mov
pushf
xchg
mov
or
inc
xchg
leave
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
inc
pop
mov
jmp
mov
out
inc
sbb
fnstcw
mov
add
jmp
psubsb
jge
andb
data16
mov
imul
mov
in
jg
loope
inc
mov
mov
mov
adc
jae
push
stos
jge
dec
and
xchg
repz
sbb
jo
cltd
stc
loop
mov
call
lock
int
addl
push
dec
lea
addr16
lret
add
pop
inc
pop
mov
outsb
push
cli
mov
xor
(bad)
mov
inc
es
call
sbb
aas
cmp
inc
add
fildl
loopne
scas
cmp
add
cmp
mov
les
sub
icebp
shlb
xor
xchg
mov
lret
call
push
inc
or
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
in
jge
dec
mov
jle
aaa
push
adc
push
adc
out
fistps
push
xchg
or
dec
dec
xchg
test
frstor
and
ljmp
push
adc
xchg
jne
in
sarl
fdivl
shl
inc
or
pop
or
xor
xchg
icebp
mov
sub
pop
xrelease
add
sbb
lea
mov
sbb
dec
adc
or
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
dec
jbe
pop
movsl
ffree
xor
enter
xchg
dec
addr16
out
add
aad
mov
out
cwtl
cmc
pop
lds
xlat
call
jge
test
sub
mov
dec
hlt
(bad)
mov
push
lret
out
mov
in
push
cld
adc
add
sub
pop
int
clc
push
mov
iret
popa
push
mov
mov
lcall
sarb
mov
aam
loope
sbb
ficoms
xor
mov
out
in
imul
shrb
jge
push
mov
sbb
jae
sub
jge
push
dec
pop
mov
loop
dec
sub
xchg
cmpsl
(bad)
sbb
dec
je
sbb
pop
jle
imul
das
push
addb
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
or
call
cltd
mov
outsb
inc
jge
xchg
sahf
sbb
outsb
test
int3
dec
mov
mov
xchg
cmpsb
bound
cmpsb
inc
pop
push
xor
sbb
je
inc
mov
icebp
movsl
inc
dec
test
xor
cli
push
xor
call
cmpsb
loope
sahf
das
push
outsl
pushf
mov
cmpsb
sub
je
xorl
lock
vpsrld
rcrb
lea
and
aad
sbb
dec
mov
fidivrl
mov
enter
and
das
leave
push
sub
adc
jae
inc
push
rcr
insl
cmp
inc
or
xchg
add
int
mov
in
addb
dec
(bad)
push
jnp
sahf
and
push
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
mov
jecxz
fcoml
jbe
push
testl
sub
pop
sbb
mov
sbb
loop
and
out
out
mov
jge
pop
mov
sbb
cwtl
add
lcall
je
pusha
scas
mov
insb
ljmp
mov
or
cmp
cltd
sub
es
push
add
insb
sbb
jae
daa
test
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
and
add
stos
imulb
and
dec
aam
xchg
aad
imul
sbb
call
in
sub
cld
test
repnz
xchg
mov
or
cli
nop

mov
ret
aad
(bad)
mov
inc
scas
jmp
push
fisttpl
inc
je
ja
pop
pop
leave
jae
pop
mov
aam
fucomip
push
inc
cmpsl
js
outsl
add
jmp
leave
lock
fldenv
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adc
arpl
mov
mov
push
sbb
stos
jle
loop
sbb
stc
orb
or
imul
inc
movzbl
xor
dec
movsb
cmpb
adc
in
filds
push
push
movsl
daa
inc
cmp
movsl
addr16
mov
enter
data16
inc
xchg
sub
ds
cwtl
cmp
jp
int
xchg
stc
call
cmp
cld
ret
sbb
mov
sahf
lahf
or
mov
jnp
cmp
call
stc
(bad)
xor
das
orl
mov
hlt
sbb
mov
nop

push
xchg
lds
sbb
nop

push
ret
sub
pop
(bad)
(bad)
(bad)
fs
cmc
je
out
xchg
add
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
cmp
aaa
fdiv
je
pop
test
xchg
add
mov
adc
mov
dec
dec
fstpt
into
je
dec
mov
pop
je
ljmp
dec
xor
(bad)
jb
push
shrb
sbb
aad
pop
orb
sbb
jo
fwait

inc
fistpl
scas
xchg
xor
xorl
(bad)
xchg
pop
pop
mov
push
mull
cltd
faddl
dec
push
aad
cs
mov
repnz
push
ret
jns
xchg
cld
andl
ss
mov
xchg
jge
leave
mov
cmp
enter
jl
aaa
aaa
sahf
mov
bnd
cmp
jecxz
pop
fcoml
mov
push
sbb
xchg
mov
sti
mov
popf
enter
(bad)

popf
dec
add
mov
ret
addl
add
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
xchg
fldl
mov
mov
lret
fsts
sahf
xchg
dec
(bad)
pop
sahf
mov
enter
repnz
jl
scas
jle
decb
aad
test
or
adc
dec
and
sti
int3
mov
push
push
sbbb
pop
shll
jb
test
mov
sahf
mov
inc
xchg
mov
mov
adc
fsubs
push
adcl
movsl
subl
mov
xchg
mov
push
xchg
ficomps
sbb
add
pop
or
xchg
lods
call
mov
adc
xor
scas
les
int3
daa
xlat
adc
(bad)
cmc
daa
cmpsl
es
add
mov
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
adc
(bad)
int3
sbb
jbe
xchg
call
in
imul
push
xor
outsb
jecxz
add
orb
(bad)
adc
jl
sbb
aas
int
xchg
mov
xchg
push
sub
fcoml
xor
(bad)
(bad)
int3
(bad)
stc
mov
mov
mov
xor
clc
fwait

fs
clc
inc
mov
insb
jne
test
xlat
cs
inc
push
jne
imul
fsts
int
adc
jns
inc
inc
mov
dec
int
cmc
mov
cmp
iret
jbe
or
xchg
adc
mov
mov
gs
xlat
fidivl
addl
mov
addl
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
psubsb
cltd
cltd
mov
mov
clc
mov
or
push
int3
addl
lahf
xchg
mov
int3
xchg
fisttpll
pusha
lock
dec
or
divb
push
ret
mov
xchg
mov
jle
adc
ds
sub
lret
imul
xchg
cs
dec
push
int3
imul
popa
mov
or
mov
ret
fsubl
mov
mov
int
dec
shrl
mov
mov
insl
push
(bad)
sub
orb
sahf
ret
out
iret
jbe
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
(bad)
jmp
dec
test
andl
out
adc
mov
pop
sti
sbbb
out
xchg
lea
fdivrl
cmp
(bad)
jmp
lea
int3
pop
incb
mov
xchg
cmp
rorl
shrb
js
stos
stc
mov
add
xor
fsub
scas
repnz
inc
cmp
rolb
enter
sbb
mov
sbbb
jbe
mov
inc
(bad)
divl
adc
xchg
sbb
ret
jge
push
mov
adc
loope
fmull
nop

stos
add
cmpb
sbb
int
div
add
sbb
pop
xchg
pop
movsl
lea
nop

test
addb
sbb
sahf
addl
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
addl
bound
mov
mov
add
xor
enter
mov
stos
ss
and
xchg
pusha
test
lods
mov
push
int3
and
jmp
mov
call
loop
stc
insb
gs
pop
movsb
cmc
test
push
push
jp
movsb
mov
idiv
mov
into
jnp
adc
add
inc
adcb
cld
scas
mov
adc
xor
mov
js
movsl
dec
fiaddl
out
pusha
gs
addr16
sbb
in
xor
lds
loope
adcb
in
(bad)
and
mov
xlat
jne
and
push
int
mov
dec
mov
and
scas
mov
and
xor
cli
test
pusha
pop
mov
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
pop
add
int3
add
and
fs
add
lea
(bad)
sar
stos
adc
xchg
in
in
orl
jl
xchg
mov
sar
loopne
mov
push
(bad)
sbb
(bad)
xchg
xchg
fwait

dec
ror
aaa
roll
fucomi
jb
xchg
loop
mov
adc
std
jae
adc
les
and
std
xchg
std
test
adc
add
fnstsw
add
hlt
mov
(bad)
add
add
dec
lods
add
int3
shrl
xor
clc
adc
xor
ss
les
in
push
loop
arpl
inc
adcl
popf
in
jge
mov
jmp
fstp
mov
(bad)
out
das
out
(bad)
mov
mov
jbe
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
int3
leave
jmp
mov
test
mov
xor
mov
jle
pop
inc
jb
pop
orl
mov
cmc
lods
mov
(bad)
fmuls
sbb
jmp
inc
sub
mov
push
jl
jbe
loope
call
rcrl
roll
and
lcall
es
es
int
fisttpll
subl
sbb
repz
(bad)
stc
mov
mov
sahf
xchg
leave
into
ds
or
cltd
fildll
pop
rcrl
sbb
mov
dec
shl
scas
cwtl
call
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
andl
mov
mov
jg
js
fadd
push
(bad)
aam
clc
mov
je
ffree
add
jae
fsubl
pusha
xorl
and
loop
xor
xchg
adc
rcll
cwtl
arpl
call
out
rorl
hlt
xor
mov
cs
stc
fcoms
lcall
mov
repz
sub
sahf
andl
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
es
mov
shrl
fsubl
pop
adc
and
dec
xor
push
xchg
ret
pop
sub
cwtl
push
faddl
sar
inc
cmpsl
push
mov
jecxz
adc
inc
push
subl
subl
mov
mov
adc
fs
xor
or
and
xchg
cmp
mov
pop
xchg
add
in
lea
imul
aad
rorl
fs
testl
adc
ret
mov
lcall
push
leave
pop
cmpl
mov
ret
in
mov
bound
lods
push
mov
jb
mov
mov
icebp
pop
inc
mov
(bad)
faddp
pop
add
stos
lea
rolb
xor
pop
jo
rcrb
shlb
mov
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
add
adc
mov
loopne
mov
nop

aaa
pop
jo
xchg
xchg
mov
cmpl
jle
shr
arpl
dec
mov
dec
xorl
cmp
push
ret
cwtl
into
inc
andb
repz
shll
pusha
mov
andl
cwtl
sbb
xchg
add
(bad)
mov
xor
hlt
insl
xchg
and
cmpsl
aas
fs
mov
cwtl
test
not
out
xor
sbb
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
cmpl
cmp
cmp
cwtl
mov
sbb
bnd
fcoml
push
dec
and
or
into
dec
outsl
incb
jp
(bad)
cmp
adc
enter
jmp
sub
and
sub
sahf
cmp
sarb
movsb
in
lock
push
aam
(bad)
mov
xor
pop
cmp
adc
or
ja
mov
inc
xchg
xchg
addl
xchg
inc
fnsave
and
add
xchg
cli
ret
test
mov
lcall
xor
xchg
dec
(bad)
clc
push
cmc
adc
stc
int3
dec
add
jg,pn
dec
pop
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
addb
xlat
mov
cld
sahf
xor
icebp
xchg
mov
cmp
call
data16
mov
scas
add
outsl
push
fcmovnb
xor
and
pop
or
push
test
nop

sbb
sbb
sub
jge
(bad)
sbbl
mov
and
cmpsb
pop
mov
sbb
test
mov
sub
mov
or
mov
inc
or
xor
addl
popf
push
icebp
sub
movsl
mov
mov
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
lds
popa
xor
pop
(bad)
repz
cld
mov
jge
(bad)
mov
xchg
mov
fadd
iret
(bad)
xor
(bad)
and
mov
push
and
jns
or
jo
cmpsl
jno
call
cmpl
and
mov
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
sub
or
imull
fstl
xor
cld
out
adc
shlb
mov
andb
fiaddl
jne
stc
inc
xorb
pusha
xchg
mov
dec
pop
sahf
mov
pop
inc
loope
gs
div
xor
fstpt
in
faddl
sbbl
test
sub
xlat
inc
dec
sub
sbb
xor
outsl
xor
scas
adc
repnz
pop
sub
les
dec
in
xchg
mov
ljmp
sub
pop
pop
movsl
jbe
xor
push
cmp
les
iret
push
test
into
addl
cmp
je
(bad)
(bad)
into
sbb
(bad)
aas
pop
out
lds
cmp
stos
dec
push
lcall
pop
add
test
pusha
aad
out
mov
bound
ja
or
dec
leave
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
andl
loop
or
les
push
sub
push
push
xchg
adc
call
outsl
mov
xor
sub
adc
xor
test
mov
sbb
sbb
sbb
fildl
mov
xor
jnp
leave
iret
xor
xchg
es
xor
jge
add
lock
sahf
lahf
movsb
cmp
pop
mov
mov
loopne
insl
add
insl
into
lock
jge
data16
je
aaa
popa
cwtl
out
mov
xor
cmpb
cs
jne
cmpl
sub
ret
ret
sbb
or
cwtl
stos
cmp
jns
dec
rorl
dec
xor
std
outsl
ss
mov
adc
gs
(bad)
mov
movsb
in
test
stos
push
cwtl
dec
je
mov
dec
pop
sbb
roll
jbe
sahf
orb
inc
sahf
lea
mov
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
pop
jecxz
idivl
adc
addl
stos
in
push
xchg
fcmovu
mov
cs
dec
inc
mov
xchg
insb
fbstp
pop
or
faddl
daa
lods
aas
stc
in
or
or
add
jle
(bad)
sbb
mov
test
loopne
sbb
jnp
loopne
and
pop
stos
jno
fists
cmc
mov
cmp
mov
push
jmp
repnz
mov
xor
cwtl
push
xor
sbb
push
fs
out
mov
cmp
dec
popf
inc
jnp
jbe
xchg
pop
stos
std
xchg
in
xor
cmp
sahf
das
mov
sub
test
jp
push
pop
aaa
stos
add
dec
es
jp
lock
adc
cmpxchg
dec
sub
mov
adc
mov
sahf
jg
fstpl
andl
orl
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
orl
dec
cmp
mov
addl
pusha
sbb
push
jle
stos
out
xchg
stos
lock
inc
(bad)
pusha
mov
lods
leave
jb
xchg
cmp
lock
andl
fbstp
or
orl
(bad)
int3
mov
mov
int3
dec
popa
in
adcl
ljmp
add
stos
or
dec
nop

daa
enter
or
jg
add
cmp
sub
shlb
out
cli
mov
cld
push
lahf
aam
pop
cwtl
(bad)
xchg
push
subl
ret
into
ret
sbb
ret
pop
sbb
xchg
or
cwtl
imul
xor
out
xorl
pop
cwtl
push
lods
mov
lea
addb
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
fs
pop
roll
out
rcr
call
ret
mov
xchg
loop
ret
mov
or
cmp
xchg
leave
loopne
notl
(bad)
mov
xchg
jecxz
(bad)
mov
int
xor
stos
sbb
xchg
jl
stc
mov
shrb
xchg
mov
sub
xor
or
sbb
pusha
cwtl
mov
push
dec
and
addb
sbb
fnstenv
int
int3
sahf
jnp
lock
mov
notl
aaa
jge
cld
xchg
push
test
inc
imul
gs
shrb
subb
fnstcw
inc
sub
idivb
loop
cmp
or
mov
pop
out
std
out
xchg
mov
mov
mov
lcall
mov
xor
xchg
push
int
dec
push
popa
cmp
stos
outsl
aam
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
cmp
loop
je
adc
clc
adc
jne
andl
andl
(bad)
sbb
add
fstl
int3
sbb
sti
pop
pusha
repnz
out
pop
clc
mov
adc
cmc
scas
sub
mov
std
repnz
and
je
adc
or
out
xchg
lret
aas
dec
int3
icebp
arpl
fnsave
cmpl
and
xor
jmp
fs
repz
adc
or
popa
repnz
lret
inc
adc
sbb
fistpl
cwtl
xchg
cmp
sbb
sbb
movsb
cmpsb
subl
pop
push
decl
pop
pop
or
rorl
and
adc
scas
dec
mov
xchg
pop
or
jnp
jae
je
test
mov
test
sahf
lods
int3
rcr
sahf
int3
lea
addl
inc
mov
inc
xorl
mov
sbbl
addl
lea
addl
lea
inc
lea
xchg
mov
andl
adcl
sahf
int3
orl
(bad)
fstpl
addb
int3
orl
pusha
mov
xchg
addl
xorl
inc
sub
je
addl
sti
jmp
lret
clc
adc
ds
sbb
fcmovb
jne
mov
add
xchg
push
pop
cmp
xor
iret
mov
and
andl
push
mov
cld
xor
lret
pop
adc
int3
fidivl
loope
mov
sbbl
orb
cmp
sub
jp
mov
addb
sahf
inc
fldl
mov
lea
lea
sahf
lea
sbb
sahf
addl
lea
addl
andl
add
mov
sbbb
mov
addl
sbb
sahf
addb
sahf
andl
addb
mov
or
andl
inc
mov
fldl
xor
and
add
sub
adc
ret
int
repz
inc
mov
mov
mov
xor
in
cli
push
subl
or
inc
rcr
xchg
push
push
jmp
shrl
mov
mov
pop
xor
nop

adc
add
stos
adc
ret
xchg
outsl
addb
fstpl
fldl
addl
orl
andl
sbb
lea
sbb
lea
lea
sbb
xchg
addl
sbbb
sbb
addl
sbbb
inc
lea
orb
(bad)
int3
inc
fldl
sahf
addl
sbbl
inc
andl
mov
nop

xchg
scas
jns
and
dec
xlat
faddl
pop
mov
mov
xchg
into
orb
daa
je
mov
jecxz
mov
or
xor
shl
es
into
ljmp
mov
jp
inc
filds
and
fcompl
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
stos
xchg
lret
test
sahf
mov
cmc
and
and
scas
and
stos
ljmp
sub
cmp
dec
dec
(bad)
sbb
leave
mov
js
pusha
orl
es
push
sti
je
movsb
aad
mov
push
sbb
fisttps
xor
sbb
push
scas
jae
and
std
push
sbb
adc
pop
sbb
or
fisttpl
fcomip
outsl
out
imul
mov
add
jle
pop
test
cmpsl
fstp
and
pop
pop
ret
rorl
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
xor
mov
mov
inc
mov
inc
cmp
jne
test
jne
jmp
xor
inc
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
ret
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
jmp
jmp
