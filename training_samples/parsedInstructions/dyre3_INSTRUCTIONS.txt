push
push
mov
push
push
mov
mov
xor
pop
stos
inc
dec
je
dec
jne
pop
pop
pop
ret
pop
sub
push
jmp
fsts
fildl
dec
mov
scas
xor
cmp
stos
mov
sbb
imul
and
lret
adc
push
fldcw
nop

out
dec
int
loope
mov
xlat
inc
imul
fmull
sahf
mov
lods
xchg
movsb
inc
xchg
xor
push
push
iret
sti
hlt
insb
pop
cli
cmpsl
in
jnp
(bad)
ffreep
mov
je
cmp
loope
es
stc
sub
inc
mov
scas
clc
(bad)
jl
mov
mov
inc
dec
insb
pushf
or
dec
in
cmpsl
push
push
push
jl
sbb
or
pop
add
sbb
inc
sub
cmp
sbbb
call
fs
xor
mov
(bad)
xor
sub
adc
add
iret
inc
pop
imul
cs
loopne
sahf
lahf
mov
cmc
mov
jl
mov
add
imul
std
pop
sahf
sbb
push
shrb
mov
fwait

mov
add
dec
or
mov
mov
loop
daa
push
jo
sbb
fsubr
bound
inc
jp
sbb
cli
sbb
mov
loop
xor
ror
adc
mov
dec
or
scas
into
lea
test
push
fmuls
cmpsb
xchg
enter
jle
outsl
aad
lods
sub
cmpb
mulb
mov
movsb
inc
add
outsl
les
sub
add
das
lret
cmp
dec
sbb
mov
mov
enter
popf
shrl
jae
dec
jbe
lret
or
or
in
pop
ja
lcall
pop
cmp
inc
int3
pop
ret
jo
inc
sbb
xchg
scas
mov
mov
pusha
and
imul
cltd
ja
mov
add
daa
stos
jbe
call
cmpsl
bswap
ffree
mov
xor
cmp
sbb
int3
push
cmp
push
fwait

adc
rcll
(bad)
lea
mov
inc
mov
cmpsl
stc
xor
sbb
sub
movsl
or
mov
lahf
les
ret
mov
movsl
mov
daa
pushf
std
inc
jnp
adc
ret
push
push
dec
xchg
cmp
insl
fmuls
int
jmp
les
shrl
psraw
jg
mov
xchg
pop
(bad)
jl
add
ret
(bad)
push
mov
test
scas
xchg
lret
inc
xchg
sbb
mov
dec
jb
inc
add
aad
aas
js
pop
cmp
sahf
cmp
xchg
outsl
(bad)
scas
cmp
mov
and
and
sub
mov
push
or
xchg
int
int
fs
je
std
jg
or
pushf
shl
inc
shl
(bad)
mov
test
fdivs
lahf
imul
lcall
or
jne
mov
stos
outsb
adc
mov
bound
cmp
ds
fldcw
insb
inc
jnp
adc
pop
jmp
hlt
imul
lea
xchg
xor
lret
or
mov
mov
push
jnp
mov
mov
sahf
cmpsl
js
out
xor
in
lds
mov
push
jle
dec
jnp
sub
and
or
fdivrs
xchg
ljmp
pop
jle
pusha
popa
cmp
movw
adc
add
adc
enter
push
sub
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
mov
mov
and
xor
not
inc
mov
cmp
je
sub
jmp
movzwl
mov
lea
mov
push
push
inc
inc
cmp
jne
mov
mov
add
mov
mov
mov
add
mov
mov
mov
dec
inc
inc
mov
and
jne
mov
inc
mov
mov
cmp
jbe
mov
add
mov
dec
xor
inc
mov
inc
and
test
jne
dec
cmp
jne
mov
add
pushl
push
call
test
je
add
incl
mov
cmp
jb
mov
cmp
jae
mov
add
add
mov
add
movzwl
mov
lea
mov
mov
add
jmp
xor
pop
pop
pop
mov
pop
ret
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
arpl
fldl
xchg
mov
mov
lods
aaa
or
and
xlat
fbstp
push
incb
loop
fisubrs
mov
into
cmc
mov
cmp
int3
out
movsb
int3
xor
inc
xlat
mov
out
in
ss
std
dec
inc
and
daa
mov
imul
flds
in
jno
jmp
ds
insb
lock
mov
mov
mov
(bad)
mov
and
mov
xchg
pop
push
rol
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
add
(bad)
(bad)
adc
inc
mov
push
sub
xchg
and
sti
loope
gs
inc
mov
movsb
(bad)
lock
sbb
push
lods
xorl
dec
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
rep
inc
xchg
cmc
pop
mov
xchg
test
xchg
sbb
sub
inc
mov
xchg
(bad)
jp
roll
sub
lahf
mov
in
sbb
sbb
sub
popa
add
mov
shrl
lods
push
add
call
cwtl
fnstenv
shlb
sub
sahf
mov
jb
sahf
mov
mov
mov
pop
in
(bad)
aad
addb
mov
or
das
leave
imul
xchg
into
xchg
mov
pushf
(bad)

ret
loopne
inc
mov
xchg
decb
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
push
movsl
fisttps
std
js
aad
repz
jnp
sbb
imul
push
(bad)
mov
sbb
repz
js
lahf
fdivl
les
sahf
aas
mov
mov
push
sub
mov
(bad)
addr16
test
ficoms
ss
xchg
mov
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
outsl
mov
andl
pusha
test
xchg
scas
adc
jg
or
pop
cmp
mov
jb
sbb
into
mov
in
das
mov
cmc
cmc
jno
out
dec
mov
pop
pop
pusha
je
aad
test
and
ja
in
xorl
inc
dec
mov
xlat
sub
cltd
ss
in
outsl
push
xor
pop
dec
xchg
jne
mov
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pop
ret
jp
out
mov
imul
lahf
test
mov
xor
ljmp
mov
xchg
nop

xchg
and
xor
mov
cwtl
pop
fcoms
hlt
xchg
jne
mov
xor
mov
mov
not
icebp
lretw
mov
(bad)
jg
xlat
mov
mov
add
xchg
sub
stos
pop
(bad)
in
fs
push
gs
orb
inc
aas
in
dec
popa
pop
arpl
cmp
push
out
inc
lods
push
sub
inc
stc
dec
jge
mov
cs
pop
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
pushl
js
rcrb
pop
pop
out
xorl
jns
mov
xlat
add
ss
push
add
dec
pop
push
sbb
lea
scas
arpl
mov
lods
lods
mov
fcomps
cmp
aas
lcall
xadd
pop
ss
xchg
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
pushf
fs
clc
popf
movsb
dec
and
(bad)
loope
sub
mov
gs
push
fcompl
inc
gs
out
cmpl
test
sub
xor
add
cmc
rcl
mov
push
call
add
hlt
mov
mov
cmp
mov
aad
jp
pop
scas
std
adc
adc
jo
pushf
push
xchg
or
mov
ds
inc
jae
fists
faddp
mov
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
aad
enter
es
xchg
(bad)
std
sbb
mov
mov
xlat
fucomip
out
mov
sub
and
sub
nop

pop
movsl
add
loop
popa
and
pusha
push
inc
mov
push
filds
jae
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
adc
sub
inc
jo
test
add
cli
sub
mov
(bad)
aad
addl
add
push
xchg
test
(bad)
mov
inc
xchg
dec
jg
add
data16
(bad)
(bad)
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
xchg
lds
out
xchg
lds
mov
imul
lds
xchg
imul
inc
int
adc
mov
jbe
fadds
mov
mov
(bad)
imul
outsb
data16
(bad)
stc
cmp
push
push
mov
(bad)
es
nop

pop
sub
and
pop
mov
mov
mov
insb
popf
and
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
fs
pop
fsubrp
xor
out
imul
sub
rclb
mov
test
outsl
nop

fstl
ss
push
mov
ja
int3
push
inc
in
push
popl
nopl
cmc
push
cmpsl
sub
cmp
in
xorb
add
popf
xor
out
fnstenv
dec
xchg
inc
cmpsl
scas
jbe
cli
mov
data16
das
sub
out
jno
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
and
dec
loop
out
pusha
mov
fwait

ss
adc
jl
and
loopne
daa
fisubrs
pop
repz
imul
jle
dec
pop
or
fidivrs
and
movsl
xchg
dec
repz
jmp
fbld
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
shlb
mov
jecxz
stc
mov
popf
bound
loop
aaa
or
cmc
mov
sub
shrl
sub
adcl
mov
outsl
dec
mov
sub
lods
push
shl
decb
std
negb
subl
sub
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
adc
fildl
test
push
inc
cmpsl
repnz
lock
repz
lods
cs
and
mov
xchg
and
pushw
push
dec
orl
add
jnp
andb
cmp
xor
out
cmc
cli
sub
mov
aas
dec
push
sub
lea
cmc
mov
and
xor
out
jo
cmpl
cmp
sub
jp
fwait

ss
mov
test
mov
xchg
clc
(bad)
or
test
pop
or
mov
fpatan
mov
int3
cmp
out
(bad)
mov
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
mov
daa
adc
mov
les
stos
dec
xor
jle
inc
mov
sbb
outsl
adc
fst
lods
jmp
(bad)
std
inc
mov
jne
jne
shlb
mov
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
push
notl
shrb
cmpb
adc
mov
(bad)
adc
(bad)
mov
dec
(bad)
jp
sub
into
test
es
mov
xchg
pop
xor
cmpsb
cmpl
mov
cmp
sahf
ljmp
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
fcmovnbe
pop
mov
stc
xchg
ret
in
adcb
fmuls
test
sbb
std
mov
call
lea
jne
mov
into
sbb
xor
xchg
xor
jb
fdivrl
push
inc
xchg
fucom
xor
addl
cmp
jbe
mov
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
les
sbb
xchg
xchg
lds
mov
sub
iret
notl
inc
nop

push
fwait

inc
dec
cs
pop
iret
jno
inc
rcl
mov
mov
adc
mov
jmp
xor
push
roll
adcl
fisubrl
cmc
out
cli
out
adc
xchg
sbb
xor
in
hlt
mov
(bad)

outsl
dec
fstpl
push
dec
pop
add
jmp
aaa
pop
dec
addb
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
pop
arpl
scas
jbe
nop

mov
rclb
imul
lds
adc
fldcw
xorl
dec
popf
or
(bad)
or
mov
dec
ss
sahf
push
mov
test
loope
sar
dec
or
xor
mov
push
daa
push
cld
fistpl
xchg
pop
or
mov
je
fnstsw
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
andl
popa
iret
shr
cmp
out
fidivl
pop
cmp
dec
pop
inc
sahf
dec
dec
jns
xor
mov
xor
inc
sub
dec
mov
addr16
std
jne
dec
das
stc
dec
out
sub
xor
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
fnstenv
sahf
ret
and
(bad)
sub
dec
xchg
ss
mov
cli
cmp
dec
jns
les
xchg
imull
das
std
inc
lret
pop
shll
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
add
pop
and
test
inc
cltd
mov
out
jmp
fnstcw
mov
std
and
(bad)
xchg
popa
movl
pop
popa
int3
shlb
add
mov
mov
jno
cmp
adc
adc
jae
fxch
or
pop
add
movsb
pop
rcr
nop

or
mov
mov
repz
pop
jae
pop
jmp
mov
sub
lods
out
mov
add
roll
cltd
pop
stc
and
inc
icebp
or
ljmp
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
or
mov
jg
cmp
jmp
clc
subl
test
jns
pop
testb
in
pop
imul
dec
and
ret
cmc
lret
fistpll
pop
xchg
inc
adcl
stos
ja
inc
rolb
lea
inc
dec
sbb
xor
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
xlat
cmp
addl
arpl
pop
shlb
scas
aaa
cmp
adc
mov
xchg
mov
sbb
jnp
pop
pop
sub
mov
in
jle
andb
cwtl
dec
dec
jo
add
push
es
into
fwait

cmp
pusha
push
fistps
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
sbb
roll
cwtl
shlb
xlat
out
jbe
pop
ljmp
mov
out
mov
push
jecxz
mov
jo
pop
pusha
xchg
adc
jae
sub
mov
fs
lea
xchg
das
mov
hlt
mov
ds
inc
nop

lds
mov
mov
xchg
out
cmpsl
dec
lods
(bad)
ljmp
fisttpll
xor
aas
test
jae
jnp
dec
daa
inc
cmp
or
dec
js
pop
cltd
cmp
in
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xor
mov
cvtps2pi
cmp
adcl
sbb
mov
cli
shll
sub
xchg
fdivrp
fwait

pop
add
adc
cmp
jecxz
mov
testb
cmp
loope
mov
mov
fistpl
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
add
leave
sbb
movsb
xor
mov
sub
loopne
dec
mov
mov
stc
add
adc
cmp
aaa
dec
add
outsb
mov
in
dec
aas
mov
mov
add
mov
xor
xlat
ret
pop
fimuls
sub
outsl
sbb
mov
lcall
xor
xchg
sbb
std
imul
and
mov
lret
out
fs
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
push
popf
jb
std
push
rep
or
and
fldcw
mov
push
insl
mov
aas
pop
out
add
and
and
movsl
jg
into
rorl
dec
cmp
jb
in
pusha
orl
and
insl
mov
movsb
push
fimull
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
int
mov
out
outsl
or
dec
push
adc
popa
mov
movsb
icebp
xchg
xchg
jg
stc
mov
cmp
ficomps
ret
fildll
push
dec
bound
sub
mov
sub
cli
push
ds
cld
mov
inc
iret
pop
addr16
imulb
movsb
je
push
in
lret
ret
call
add
jecxz
xchg
in
pop
lret
ja
sub
push
lea
mov
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cltd
fidivrs
popf
mov
cmc
push
push
or
test
repz
xchg
push
scas
fidivs
mov
pop
jb
pop
fiadds
sbb
movsb
push
and
loop
sub
addr16
cwtl
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
and
push
mov
push
imul
fucomi
movsl
repnz
pop
inc
rcll
push
dec
mov
push
ficomps
rclb
cltd
mov
(bad)
and
sub
call
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xchg
inc
fisttpl
inc
mov
push
fldcw
inc
jnp
loop
xchg
and
mov
ret
mov
push
cli
test
outsl
scas
pusha
fsubs
sub
cmp
inc
iret
and
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
testb
in
jl
(bad)
sub
inc
inc
mov
scas
ffreep
enter
pop
xlat
ds
fstpl
les
sti
inc
lret
inc
sub
pop
push
jbe
jp
test
jns
cmc
jle
popf
pop
pop
adc
out
scas
or
cmp
mov
dec
xchg
fwait

rcr
or
push
inc
xor
jge
mov
leave
sbb
mov
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cld
inc
ss
loopne
orl
pop
or
inc
adc
xchg
arpl
mov
xor
push
js
cmpsb
mov
push
(bad)
sarl
xchg
mov
out
jge
or
dec
pushf
popa
adc
jnp
scas
mov
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
jle
xorl
dec
and
jecxz
fists
in
mov
add
addb
cmpl
xchg
fidivrl
fstpt
insb
in
fstp
out
dec
add
hlt
and
push
xor
scas
shr
mov
push
jge
sub
mov
or
test
sbb
xor
inc
mov
stc
dec
adc
adc
stos
push
clc
cmp
pop
ret
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
push
push
bound
inc
imul
mov
ror
xor
lahf
mov
sbb
jg
imul
call
sbb
add
rorl
movsl
nop

pop
nop

lcall
out
sbbl
pop
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
test
hlt
lock
pop
jmp
sub
(bad)
sar
sbb
cmp
movl
lds
scas
mov
into
inc
xchg
mov
fadd
mov
cmpsl
xchg
adc
mov
addl
insl
inc
aad
into
js
sub
(bad)
push
(bad)
fldl
nop

shlb
out
or
lret
adcb
stos
sbbb
popf
and
dec
cltd
mov
pop
fisttps
pusha
mov
jg
fldl
dec
int
movsl
push
cmp
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
lcall
movsb
or
add
mov
hlt
js
fiadds
stos
push
out
mov
stos
stos
mov
lret
sub
add
mov
out
push
dec
push
xor
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
lret
enter
ficomps
loopne
mov
cwtl
adc
mov
jle
(bad)
loopne
mov
shrl
push
xchg
mov
mov
sub
adcb
ljmp
std
cld
fldt
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
mov
icebp
cmp
xor
outsb
stos
or
jmp
and
icebp
add
pop
cld
lock
pop
pop
sbb
iret
jmp
xor
mov
andb
mov
lock
push
jg
xor
std
ja
stos
jmp
or
mov
xchg
std
mov
cmp
(bad)
testl
(bad)
movsb
push
loop
inc
inc
adc
sbb
pushf
mov
fidivs
inc
xor
scas
out
mov
sub
fidivs
adc
cmpl
inc
fistpl
push
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
cmp
jge
test
ja
cmp
mov
sbb
lds
fsubrs
xor
xchg
ja
sbb
push
rcrb
and
xchg
mov
addr16
xchg
adc
stos
cmp
(bad)
into
adc
testb
xor
test
cmp
sarb
or
das
loope
clc
lahf
stos
jl
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
xchg
adc
add
rcrl
inc
or
int3
insb
pop
or
data16
loop
or
xor
jno
(bad)
(bad)
push
out
cwtl
inc
mov
dec
xorb
outsl
xchg
test
aad
lds
xchg
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
inc
sbb
movsb
daa
mov
iret
in
and
fisttpl
and
fdivrl
outsb
andl
movsb
aad
sarb
push
push
jbe
loopne
adc
test
pushf
inc
pop
aas
add
mov
fstpt
xchg
cli
cmp
std
popa
push
and
adc
cld
mov
mov
fwait

pop
jbe
movsl
push
aaa
dec
andl
sub
inc
shll
mov
or
loop
insb
mov
iret
lret
jge
xor
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pushf
adc
adc
call
and
mov
sahf
out
sti
fwait

jmp
add
dec
pop
sbb
jmp
inc
outsb
mov
(bad)
or
add
imulb
push
xchg
xor
push
int
xchg
cwtl
rol
mov
out
jne
into
pop
mov
ficoml
sbbb
and
(bad)
nop

sbbl
jb
movsb
or
std
or
xor
pop
stos
inc
xchg
mov
(bad)
in
mov
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
sahf
ss
mov
scas
(bad)
mov
push
scas
push
push
loop
xor
add
cs
dec
shrb
rol
cmp
movsb
jp
std
xorl
int
mov
push
pop
and
lods
loopne
in
push
mov
mov
in
rcrl
mov
jns
stos
cmpb
bound
mov
mov
cmp
int3
jle
xchg
adc
cmp
addl
jno
(bad)
lds
cs
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
xor
aas
out
stc
mov
mov
push
das
jle
push
addl
iret
mov
out
adc
scas
lret
fisubs
sub
pop
lahf
orl
jg
inc
outsl
lret
in
sbb
mov
mov
(bad)
out
insb
nop

or
fsts
dec
pop
sti
loopne
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
addl
aam
xchg
daa
add
pushf
daa
fisttpll
mov
or
rolb
cmp
shlb
nop

stos
mov
test
sbb
test
add
add
in
iret
es
aas
fiadds
add
cmp
xchg
sbb
bound
hlt
mov
mov
inc
loop
cmp
or
test
stos
adc
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
movsl
fistpll
xchg
test
push
cltd
push
shlb
push
sub
orb
data16
mov
xor
testb
add
sbb
loope
adc
addl
cmc
jbe
hlt
lea
xlat
imul
and
orb
scas
(bad)

xchg
xchg
jmp
push
mov
movsl
jae
out
call
ficompl
adc
mov
adc
iret
sti
jb
aad
fimuls
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
inc
fstps
lea
sarb
lret
xchg
fwait

and
pop
cmc
or
into
adc
enter
mov
out
jmp
ljmp
or
shlb
sbb
jg
nop

adc
xchg
push
mov
add
outsl
out
add
mov
xchg
lahf
adc
scas
jp
rolb
lahf
loop
pop
dec
push
cmp
sbb
mov
lea
imul
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
adc
inc
sbbb
xor
mov
int3
es
test
in
xchg
mov
xorl
or
mov
ds
cmp
fiadds
mov
andl
dec
lcall
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
dec
cwtl
xor
inc
pusha
mov
sub
pushf
mov
adc
aad
add
jne
rorl
call
loop
mov
pop
lret
mov
sub
std
nop

mov
jne
fstpl
sub
int3
push
xor
leave
xor
leave
je
mov
bound
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
jne
xchg
shl
xchg
add
add
movsl
roll
lock
cs
lcall
sub
lea
jge
push
push
push
orb
add
push
cmp
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
nop

(bad)
dec
pop
dec
cs
lods
negb
fs
shrl
jmp
out
int
stc
sub
mov
dec
sub
leave
dec
xchg
aas
sub
dec
lcall
fs
test
mov
mov
adc
cmc
cmpsl
mov
mov
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cld
cmpsl
repnz
insb
or
hlt
daa
iret
sti
addb
pop
or
inc
les
xchg
dec
addl
rol
mov
shll
sub
sbb
xor
ficoml
jnp
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
les
lcall
xchg
jns
andl
sub
aaa
fs
xor
scas
sub
or
sbb
push
xchg
enter
push
sub
imul
cmp
sbb
pop
repnz
aaa
filds
pop
xor
xor
and
pop
adc
dec
xchg
mov
std
jne
cmp
stos
ss
mov
mov
adc
mov
into
fisttpl
popf
das
xchg
jno
lods
dec
inc
adc
lock
or
(bad)
repnz
add
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pop
add
dec
add
mov
mov
adcl
dec
xor
int
jl
dec
jbe
int3
fisttpl
add
rorl
jmp
add
fsts
mov
maskmovq
fwait

int3
insl
pop
inc
pop
outsl
nop

sub
into
out
inc
ds
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
leave
sbb
push
lock
fdivs
into
jns
sbb
xchg
in
out
or
xchg
movl
mov
pop
movsb
mov
lret
mov
js
inc
ret
stos
(bad)
cmpsb
js
mov
stos
cmpl
jecxz
inc
shll
mov
mov
andl
pop
and
pop
dec
int
mov
or
out
lods
(bad)
(bad)
push
data16
mov
stc
ror
jno
xchg
ljmp
xchg
sahf
xchg
pusha
(bad)
or
sub
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmpsb
out
aam
sbb
adc
cmp
ret
inc
xorb
cli
test
shl
je
xor
(bad)
cwtl
std
fistpl
test
mov
push
int
pop
push
(bad)
jb
insl
cmc
movsb
fdivl
push
(bad)
hlt
movsbl
ja
(bad)
dec
out
inc
cld
add
je,pt
dec
inc
cmpsl
add
fbld
aad
outsb
or
mov
xor
jle
jge
xchg
sbb
adc
mov
in
cmp
dec
imul
stos
sub
outsl
fstpt
lods
mov
dec
inc
fnstsw
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
push
loopne
(bad)
(bad)
sbb
div
stos
movsl
xchg
dec
xor
push
addr16
ljmp
inc
scas
jno
cmpb
push
ror
mov
js
ret
add
xchg
(bad)
negb
xchg
add
or
data16
mov
popf
and
ficompl
cmp
xchg
inc
cwtl
mov
push
mov
andl
sub
and
sbbl
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
rolb
nop

clc
xchg
adc
pushf
fisttpll
and
mov
out
sarb
dec
and
lods
adc
xchg
jp
inc
ljmp
mov
std
push
xor
fistl
icebp
sub
push
cmpsl
adc
jl
(bad)
lret
sbb
test
test
repz
adc
mov
xchg
sbb
xchg
faddl
mov
sub
pushf
mov
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
shll
push
lea
fwait

jl
jnp
add
sub
ficomps
popa
outsl
mov
in
mov
mov
(bad)
mov
xchg
aas
add
cmc
cmpsl
sub
jmp
pop
outsl
xor
adc
sti
aad
dec
adc
paddq
test
inc
(bad)
inc
or
add
lret
xchg
mov
fistl
cld
and
pusha
aas
sbb
pop
mov
shlb
xchg
in
iret
notl
neg
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pushf
popf
adc
cmp
shrl
xor
jge
mov
outsl
andb
stos
push
jmp
jg
xchg
pop
scas
out
leave
jnp
leave
push
(bad)
xchg
jl
pop
push
adc
xchg
jl
cmp
(bad)
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
iret
xchg
sub
inc
imul
fwait

jmp
popf
in
sub
pop
cmp
(bad)
hlt
pop
and
repz
or
cmp
inc
idivb
push
cmc
push
clc
stos
and
iret
dec
jae
notb
out
jmp
cmp
js
in
sbb
add
sbb
loop
xchg
push
and
imul
leave
pop
stos
mov
or
and
daa
jbe
loop
(bad)
adc
inc
mov
fistpll
cmp
dec
cmpsb
mov
cmp
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
lahf
push
pop
inc
inc
and
jbe
sub
fcmovnb
hlt
adc
notb
or
movsl
inc
add
inc
or
xor
stos
xchg
sub
inc
popa
mov
mov
adc
sbb
rcll
das
into
pop
jns
ror
push
mov
add
fdivs
mov
movsb
fldl
cmp
rcll
sbb
xor
push
das
push
shlb
pop
cmp
xchg
mov
jl
cmp
loopne
mov
mov
popa
sbb
incb
jno
xor
push
xchg
mov
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pop
ret
pusha
pop
xor
scas
enter
aam
jae
lahf
jns
out
xorb
int3
or
data16
(bad)
dec
mov
inc
cwtl
shl
xchg
push
popf
adc
pop
inc
int
in
orb
fistl
or
out
cmp
int
cld
leave
and
xor
add
(bad)
dec
pushf
jle
mov
mov
test
repnz
push
xchg
and
xchg
aad
pop
xchg
mov
pop
xor
push
inc
jnp
inc
int3
mov
push
lret
dec
cmp
push
sahf
(bad)
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
cld
sbb
es
push
scas
fisubrs
dec
outsb
mov
or
pop
sub
jae
nop

shl
shll
cli
out
pop
movsb
pop
sub
inc
lahf
push
loope
adc
imul
cmpsl
aas
cmpsl
cwtl
scas
js
jne
cmpl
add
or
lods
repnz
sbb
sti
sub
cmp
or
aaa
stos
iret
je
dec
lock
xor
divb
call
into
cmc
fs
and
dec
incb
mov
and
lret
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
scas
rclb
into
dec
jge
pop
stos
xchg
xor
xchg
aam
inc
cmc
loopne
andb
cmp
ja
jle
movsl
xor
cwtl
jnp
mov
pop
mov
sahf
sbb
dec
mov
xor
movsb
and
scas
fucompp
pop
adc
jmp
mov
les
xor
jmp
test
stc
or
cmc
mov
push
push
test
cmp
cld
or
(bad)
sub
jnp
xchg
cmp
push
mov
push
xchg
lahf
popa
sbb
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
cmpb
rcr
sub
lret
sti
bound
jne
in
jnp
lock
or
push
test
in
psubsb
mov
sarl
xchg
les
cmpsb
inc
lock
dec
sbb
sub
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
rorl
addb
jmp
subl
push
sbb
dec
cmp
pushf
cltd
shlb
inc
add
xchg
orl
test
mov
insl
daa
pop
mov
cmpsl
inc
mov
lret
jp
sarb
dec
pop
shl
xor
test
aas
xchg
insl
cld
aam
sub
shr
mov
test
push
sub
and
(bad)
or
push
cmp
in
jge
pop
in
and
addl
push
push
shlb
cmp
mov
aam
movsb
ficoms
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
subl
cld
inc
mov
push
dec
fnstsw
out
mov
jg
(bad)
stos
mov
sahf
test
loop
imul
(bad)
or
sahf
imul
or
pusha
inc
(bad)
lret
lea
jb
rclb
mov
dec
leave
(bad)
add
pop
lret
inc
incl
cmp
leave
mov
mov
xchg
pop
imul
pop
xor
repnz
or
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pusha
icebp
mov
xchg
jno
cmc
jnp
or
xor
bound
cmp
dec
xchg
cltd
orb
cli
sbb
cmp
test
xlat
roll
sbb
and
loope
imul
aas
in
arpl
mov
insb
and
pushf
enter
push
lods
icebp
adc
mov
cmp
pop
int3
hlt
mov
movsb
imul
cltd
cmpl
(bad)
push
cli
sahf
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
les
xchg
jb
sub
xchg
pop
sub
or
mov
cmp
pop
adc
sbb
xor
ja
mov
xchg
sbb
cwtl
and
lcall
fs
pop
xchg
lds
push
xchg
sub
mov
incl
imul
pop
lea
fsubrs
or
mov
rcrl
daa
mov
dec
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
and
xchg
jmp
inc
sub
into
mov
adc
inc
shrl
les
push
and
mov
jecxz
mov
leave
bound
or
stos
push
jmp
in
lret
cmp
das
cmp
stos
enter
mov
xchg
enter
stos
mov
(bad)
loope
scas
sbb
or
cmpl
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
call
loope
sbb
push
stos
mov
enter
nop

jb
movb
scas
adc
and
lret
insb
adc
and
and
nop

loope
jo
mov
jnp
sbb
addl
xchg
(bad)
shlb
cmpl
xchg
xor
ja
mov
add
pop
leave
mov
mov
scas
in
testb
sti
inc
lret
push
outsl
mov
fisubs
sub
push
fnstenv
mov
sub
mov
dec
cli
rorb
or
cmpl
fs
adc
sbb
mov
lds
and
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pop
bound
push
mov
sub
lods
add
fwait

sarb
cmc
inc
jne
lds
popa
ljmp
jge
ret
cmp
popa
gs
mov
scas
mov
push
scas
subb
in
lret
fistl
test
dec
int
inc
push
pop
iret
jl
dec
les
push
leave
lahf
icebp
outsb
add
push
push
mov
and
data16
inc
sub
mov
clc
jb
pop
cmp
push
mov
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
sub
out
mov
mov
call
sti
mov
inc
xchg
pop
mov
repnz
jmp
xchg
mov
jbe
or
lock
int
mov
aad
or
jae
jmp
scas
imul
shll
fsubrl
rorb
cmpsb
in
add
or
fistpll
xorl
mov
push
scas
testl
nop

sbb
xor
addr16
scas
int
js
movl
addl
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
imul
sarl
sub
inc
mov
mov
mov
pop
std
cli
sub
mov
std
(bad)
lods
push
fstl
xor
mov
sti
gs
mov
mov
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
lods
(bad)
dec
out
mov
sbb
mov
mov
test
mov
bound
cmp
sbb
push
aad
iret
lea
sub
sbb
orb
dec
add
out
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
(bad)
test
(bad)
xchg
mov
push
clc
outsb
addb
lock
xchg
add
cmp
sarb
lock
lret
lcall
roll
in
ret
pop
xchg
cld
pop
loope
inc
ficomps
or
xor
repz
sahf
scas
fsubl
mov
xchg
mov
push
push
das
dec
mov
or
(bad)
xchg
mov
mov
adc
andb
adc
ror
call
lcall
gs
adc
fdivl
pop
add
test
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
add
adc
iret
dec
dec
test
fstps
cmpsb
push
xchg
leave
xchg
mov
push
xor
mov
ljmp
shlb
movsb
xchg
bound
adc
ja
out
cld
outsl
mov
sbb
std
test
push
push
clc
dec
mov
push
sub
leave
cmp
fiaddl
mov
ss
sbb
mov
loop
mov
int
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
out
cmp
xor
cwtl
cmp
xchg
in
and
in
and
mov
movsb
fldl
mov
lock
jmp
(bad)
into
add
mov
imul
xchg
ret
je
out
(bad)
in
je
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
fldt
sub
add
int3
mov
mov
movsl
call
xchg
jbe
lods
std
pushf
int3
sub
push
int3
in
push
hlt
sbb
scas
loop
dec
mov
shll
mov
cmpsl
and
push
mov
test
fsts
push
mov
adc
xchg
nop

xor
dec
push
and
je
enter
jmp
test
pushf
jnp
mov
mov
push
orl
sti
stos
push
into
add
fldl
mov
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
(bad)
cmp
adc
or
mov
les
fnstsw
outsl
sbb
and
adc
sub
mov
sub
div
lds
mov
mov
leave
mov
out
inc
and
mov
mov
jp
xor
xlat
aam
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
fs
xchg
inc
push
mov
(bad)
sbb
xor
bound
cli
test
inc
push
leave
into
jo
push
outsl
push
mov
sub
jge
dec
bound
stos
xchg
pop
or
jle
mov
into
or
int3
cwtl
mov
das
fsubp
pushf
cmp
fsubrs
cwtl
push
mov
cwtl
xchg
addl
or
jne
or
adc
xor
sbb
sub
imul
cs
dec
pop
fistl
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
fndisi(8087
or
popf
nop

cmp
mov
push
jecxz
push
mov
lds
sub
mov
jp
test
std
cltd
ficompl
dec
mov
mov
cld
flds
bound
aad
mov
(bad)
mov
lods
lahf
adc
jb
loopne
inc
pop
mov
lret
nop

mov
push
pop
(bad)
jl
pminub
mov
mov
jb
arpl
gs
stos
mov
stos
mov
mov
push
test
ret
iret
mov
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
les
pop
mov
xchg
xchg
mov
sbb
and
ds
xchg
lods
dec
mov
rcl
mov
adc
in
mov
pop
sub
scas
and
addb
mov
sbb
inc
enter
fstps
mov
insl
repz
xlat
mov
cmp
in
stos
subl
mov
push
mov
ss
rcr
sbb
(bad)
lods
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xor
mov
jmp
mov
xchg
sub
and
mov
pop
dec
mov
and
loop
fidivrl
xor
fsubs
xchg
outsb
mov
ds
jmp
fdivp
xor
mov
ss
mov
or
test
rcrb
orl
xchg
mov
push
fldl
and
adc
jo
xchg
mov
ds
fcoml
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
std
mov
fbstp
mov
sbb
std
mov
fidivs
ljmp
mov
push
fbstp
pop
or
xchg
pushf
subl
mov
movsl
dec
ret
addb
repz
jbe
test
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
test
clc
scas
ljmp
scas
xchg
test
(bad)
aam
ret
mov
nop

jg
jg
jno
loope
fdivs
mov
mov
(bad)
pop
or
sbb
scas
dec
cmpsl
dec
dec
mov
fildl
mov
adc
shll
(bad)
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
bound
xchg
(bad)
xchg
mov
pop
fisttps
imul
loope
pop
jle
lock
stos
popf
out
sbb
les
mov
add
ss
int3
pusha
xchg
fcmovnu
jmp
dec
xor
dec
test
inc
adc
scas
xor
mov
jmp
outsl
xchg
(bad)

inc
xchg
mov
cwtl
dec
lcall
mov
mov
pop
xchg
xor
sub
xchg
or
sarl
xor
cmp
lret
xchg
shll
repnz
das
cmp
and
xchg
inc
fidivs
add
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
adc
jp
mov
cmp
adc
stos
orl
pop
enter
leave
add
pop
push
sbb
pop
mov
dec
xchg
nop

mov
pop
test
rcrl
cmp
nop

icebp
inc
rcll
std
or
shlb
push
ljmp
cli
mov
sbb
mov
sub
ret
aas
mov
jae
xchg
cwtl
jno
mov
shll
mov
loop
mov
insb
test
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
dec
mov
cwtl
dec
stos
mov
into
sub
pushf
xchg
mov
push
dec
mov
das
cltd
jbe
test
jge
mov
pop
fldt
(bad)

cmp
jp
mov
movsl
dec
or
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
jge
mov
lods
outsb
aaa
sub
outsl
enter
insb
cmp
xor
pop
xchg
or
mov
sti
add
pop
xchg
jecxz
sbb
sbb
scas
jns
mov
jmp
cwtl
inc
xchg
pop
cmpsb
leave
aaa
call
jno
cmc
test
mov
pushf
sti
(bad)
std
mov
nop

and
and
mov
(bad)
jbe
icebp
dec
lods
or
mov
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
push
outsb
in
jae
cli
sbb
inc
test
sbb
sbb
push
in
mov
lret
sbbl
push
xorl
sub
dec
fadds
and
sub
mov
movsl
pop
add
inc
xchg
jno
push
test
xchg
mov
mov
sub
(bad)
out
mov
sbb
adc
pop
clc
nop

daa
fiadds
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
pop
dec
mov
push
andl
std
daa
shl
repnz
int
jbe
popa
xorl
lods
outsl
ret
mov
mov
addb
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
jle
xchg
pop
pop
cwtl
inc
cmpsl
sbb
add
ret
ficomps
jecxz
test
mov
mov
test
xlat
pop
mov
(bad)
jmp
inc
out
and
mov
mov
add
scas
pop
cmc
adc
cmpsl
mov
lods
fimuls
push
in
lock
and
arpl
mov
and
int
xchg
mov
mov
outsl
mov
dec
pop
xchg
mov
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
in
xchg
sbb
(bad)
sub
les
test
mov
lahf
js
mov
in
cmp
loope
pushf
fwait

mov
mov
test
mov
(bad)
setb
or
mov
mov
mov
or
push
cmpsb
adc
outsl
inc
movsb
xchg
loope
xor
mov
int3
adc
mov
jecxz
sarl
rclb
jbe
mov
mov
mov
test
and
mov
(bad)
mov
xchg
ficompl
mov
mov
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
pop
sbb
mov
cmc
nop

lea
inc
add
mov
pop
adc
pop
mov
add
in
inc
xor
int3
fadds
inc
mov
sbb
leave
mov
ja
mov
or
inc
daa
(bad)
dec
mov
pop
ss
rorl
fcomp
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
into
fbld
rorl
mov
ss
in
jbe
and
mov
into
xchg
movsb
mov
and
jne
addl
scas
sar
mov
cmc
mov
(bad)
in
push
ret
fistpl
sbb
fwait

add
lret
or
mov
cmpb
xor
rolb
stc
mov
loopne
mov
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
add
movsb
mov
scas
jp
push
cmp
jbe
pop
enter
je
jbe
repz
popf
aad
test
mov
inc
cmpsl
or
stc
pop
cmpsl
mov
jecxz
jno
fdivrp
push
sub
lahf
push
in
lock
stos
(bad)
outsl
nop

roll
movsb
mov
inc
loopne
mov
mov
fiaddl
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
mov
shlb
int3
test
loopne
mov
inc
andb
mov
mov
loopne
stos
pusha
jo
in
mov
push
mov
insl
xchg
ficoms
jo
inc
(bad)
cmpsb
mov
(bad)
(bad)
orb
out
ljmp
dec
mov
int
je
mov
push
fnstsw
clc
sarl
jecxz
pusha
ret
mov
jo
lea
jo
test
scas
mov
mov
(bad)
sub
mov
xchg
push
out
sti
js
scas
les
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
cmpps
popf
mov
xchg
cs
gs
cltd
mov
stc
loop
scas
push
mov
hlt
outsb
cwtl
stos
mov
scas
xchg
mov
andl
(bad)
mov
push
test
dec
nop

orb
(bad)
in
mov
fs
mov
btc
add
push
push
sub
leave
inc
pop
mov
xlat
jo
dec
adc
sub
(bad)
mov
mov
or
mov
fnstsw
lret
daa
add
pop
pop
sub
add
lcall
mov
mov
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
sti
xchg
sub
pop
pop
mov
shlb
cli
das
mov
jecxz
dec
arpl
(bad)
xchg
xor
fcoml
adc
push
inc
js
in
lods
in
mov
sbb
fstpt
in
frstor
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
leave
push
popw
mov
cwtl
inc
sub
les
daa
test
imul
push
xchg
xor
cmpsl
outsb
mov
scas
les
adc
outsb
movsl
pop
mov
(bad)
sbb
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
(bad)
roll
mov
mov
xchg
xchg
mov
and
out
cmp
into
mov
stc
bound
imul
enter
mov
xchg
adc
mov
mov
into
(bad)
inc
push
adc
daa
mov
imul
out
popf
pop
scas
test
test
sbb
mov
mov
adc
mov
xchg
push
je
in
or
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
pop
pop
mov
lret
xchg
test
aam
sbb
cmpsl
subb
jg
pop
xchg
leave
or
imul
fadds
call
jmp
mov
pop
daa
(bad)
loopne
lahf
int3
fistl
jle
nop

mov
test
dec
filds
mov
jge
cmc
movl
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
data16
pop
mov
cmc
or
sub
scas
add
lods
stc
fsts
dec
sti
mov
fldt
fs
mov
xchg
scas
mov
fmulp
mov
mov
jge
negl
lret
adc
mov
mov
dec
cli
leave
mov
mov
aad
adc
or
jbe
ret
mov
pop
mov
sti
pop
pop
inc
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
out
pop
mov
iret
cmp
cmc
push
lret
rcrb
jecxz
ret
pop
xchg
frstor
push
mov
mov
in
or
outsl
testb
repz
push
iret
adc
jmp
sarl
lret
push
movsl
lds
cli
mov
movsb
(bad)

jmp
sbbb
enter
insl
or
xor
jae
mov
mov
cmpsb
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
loop
movsl
mov
mov
dec
outsl
addl
xchg
(bad)
(bad)
sub
jae
orb
pop
or
lahf
mov
mov
test
fistl
pop
push
jmp
mov
das
or
cltd
repnz
or
and
in
adcb
mov
incb
or
push
mov
sbb
cld
test
loop
lods
inc
sbb
daa
ja
mov
repz
arpl
add
sbb
pop
add
jns
mov
sbb
in
xchg
mov
cmp
fildl
ret
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
push
mov
(bad)
ret
dec
sti
sub
int
or
sub
fwait

mov
lds
fmull
mov
aam
icebp
dec
mov
imul
adc
sbb
fwait

pop
pop
andb
rcr
mov
xor
adc
cmpsb
dec
cmpsl
pop
cmp
aam
insb
or
adc
inc
test
bound
daa
std
ljmp
adc
divb
adc
arpl
icebp
ja
pushf
mov
sub
xchg
mov
mov
(bad)
icebp
adc
pop
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
addb
inc
enter
mov
insb
jmp
pop
int
iret
xorb
sub
cmp
mov
lock
(bad)
push
adcb
xor
fstp
enter
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
fisubrs
fmull
xchg
xorb
sub
sahf
aam
mov
cwtl
and
lahf
daa
xlat
sbb
lds
into
jp
cltd
enter
xorb
fwait

sub
aad
mov
arpl
movb
ss
mov
xchg
mov
leave
imul
add
andl
adcl
addb
addl
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
stos
lea
rcl
mov
push
sarl
imul
xchg
outsb
negl
int3
add
mov
sub
sub
dec
mov
daa
mov
rorb
and
xor
push
add
subl
jnp
or
std
mov
mov
stos
pop
mov
cmc
pop
aas
vpaddsb
insl
popf
mov
dec
mov
pushl
outsl
dec
and
cltd
lods
mov
sbb
mov
fcmovu
out
les
mov
aaa
push
mov
aam
mov
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
inc
mov
les
into
cmc
push
cmp
push
cmp
xor
popa
das
pop
pop
or
sbb
jb
sub
dec
jl
xchg
pop
push
mov
mov
stos
les
dec
lret
push
imul
mov
sahf
cmpsb
in
les
jmp
cmpl
mov
pop
es
andb
imul
xchg
testb
mov
in
out
fidivrl
movsb
test
cmpsl
adc
mov
add
enter
fwait

xchg
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
push
fdiv
stos
jb
(bad)

push
push
fdivrp
mov
orb
fs
mov
mov
(bad)
mov
add
mov
jne
out
sahf
bound
(bad)
int
mov
jo
rolb
pop
jle
xor
adc
xor
lret
fwait

push
rorl
sbb
int3
or
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
adc
jbe
sbb
out
pop
pop
pushf
cmpsl
sub
mov
mov
test
push
div
dec
add
shll
(bad)
mov
pop
stos
xchg
rorb
movsl
lret
mov
pop
and
fcompl
mov
sub
lds
sbb
mov
int
nop

mov
test
mov
mov
xor
jge
mov
or
mov
jp
mov
orl
pop
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
lods
cwtl
adc
enter
insl
mov
xchg
xor
pop
into
mov
je
(bad)
push
jl
push
cmp
cld
sub
mov
xchg
sub
cmc
jno
mov
mov
not
dec
and
jge
xchg
mov
(bad)
sbb
mov
mov
add
lcall
dec
xor
xchg
adc
add
jp
mov
dec
ljmp
into
mov
mov
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
loop
push
sbb
push
fdivrl
orl
popf
lret
(bad)
ljmp
into
push
daa
popl
arpl
push
mov
lcall
dec
shrb
ss
or
xchg
aam
sbb
test
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
inc
push
push
js
scas
lods
subl
xchg
mov
dec
xchg
nop

cmc
add
pop
fwait

lds
xor
or
lea
and
ret
mov
or
cs
aaa
int3
add
mov
sahf
mov
pop
fidivrs
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
loope
dec
icebp
lcall
call
xor
jp
pop
les
cmp
mov
jae
fcoms
xchg
mov
test
jmp
test
sbb
or
xor
xchg
rorl
in
or
cli
test
call
popa
das
or
or
ljmp
xlat
test
ss
cmp
mov
cmp
test
sub
cmp
dec
les
insb
lahf
lret
in
mov
dec
inc
jno
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
sbb
push
xchg
mov
imul
jne
mov
arpl
cltd
mov
mov
add
sub
mov
dec
popf
cli
dec
adc
jle
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
adc
mov
xchg
mov
lahf
mov
scas
lahf
(bad)
adc
and
cmc
notb
outsl
mov
rcl
mov
fdivp
mov
test
aas
mov
movsl
test
fmuls
adc
(bad)
std
and
aam
stos
aad
stos
in
push
jae
pop
pop
mov
test
leave
cmpsl
incl
(bad)
aas
and
test
leave
and
jae
stos
pop
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
and
mov
clc
or
mov
mov
mov
mov
cmpsb
xor
ss
mov
adc
mov
sub
outsb
iret
pop
cli
push
xor
in
mov
or
movsb
jge
xchg
jecxz
lret
(bad)
cmpsb
mov
push
das
cmpsl
mov
loope
xchg
dec
int
jae
xchg
mov
movsl
mov
xchg
mov
sbbl
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
adcb
fwait

imul
sbb
add
mov
mov
test
mov
in
lods
or
mov
ficomps
dec
or
lods
mov
mov
and
test
jp
popf
mov
dec
jbe
xor
fcompl
push
cmp
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmp
mov
popf
sbb
fisubs
cmp
mov
cmp
in
cmpsl
es
fldenv
and
mov
shlb
xchg
ljmp
fstpt
adcl
xchg
orl
pop
mov
cld
rcrb
loop
cmp
cmpsl
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
addl
notl
jmp
sub
dec
mov
sbb
mov
pop
scas
lcall
sbb
jmp
iret
sbbb
inc
fnsave
in
pop
rorb
addl
scas
mov
mov
mov
xchg
inc
or
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
sbb
mov
aam
aaa
add
in
mov
fxam
addl
inc
xor
iret
test
mov
mov
add
dec
imul
iret
loopne
cmpsb
mov
cmp
mov
and
in
xorl
pushf
cltd
test
xchg
repz
mov
roll
fs
mov
mov
fnstenv
jo
jle
xor
scas
xor
and
imul
mov
and
addb
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
or
js
mov
add
int
cmpsb
arpl
mov
push
add
stc
stos
mov
lds
and
test
mov
xorl
inc
pop
fwait

test
scas
sarb
popa
andl
rolb
(bad)
scas
xchg
ja
jo
pop
ret
lods
pushf
mov
out
push
pop
scas
filds
ret
icebp
dec
or
push
fwait

sahf
cmp
stos
mov
movsl
dec
xor
push
xor
and
loop
jno
xchg
jo
cmpsb
imull
cmp
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
iret
mov
popl
leave
subl
jmp
xorl
addb
and
loop
add
xorb
(bad)
ret
leave
lret
xor
in
mov
(bad)
popf
add
push
out
push
(bad)
int3
daa
inc
nop

or
sub
int3
outsb
jp
mov
xchg
imul
inc
ficomps
shl
sbb
ja
xor
loop
lret
test
out
sub
movsl
(bad)
lcall
cmp
add
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
hlt
movsb
loop
xchg
fimuls
xor
sbb
mov
icebp
sahf
adc
repz
or
lret
mov
push
xor
ret
adcl
neg
cmpsl
addl
add
enter
popf
out
lds
mov
pop
cmp
bnd
ds
insl
repnz
mov
xchg
les
xchg
pushf
fadds
iret
push
add
andl
clc
pop
stos
adc
pop
in
jbe
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
shll
push
mov
adc
hlt
in
xadd
add
in
fcoml
pop
cmpb
int
dec
(bad)
jmp
popa
mov
cltd
lcall
mov
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
jp
test
clc
sbb
push
pop
sbb
mov
cmp
enter
xlat
jge
mov
andl
add
scas
cmpb
fcmovnu
clc
sti
idiv
sub
stos
jg
mov
cmpsl
push
sbb
aam
fdivp
adc
in
pop
(bad)

cmpsl
mov
(bad)
loope
bnd
push
in
neg
xorb
xor
mov
adc
cmp
xchg
cmpl
jge
and
mov
add
gs
and
test
pop
pop
pop
lret
test
mov
std
int3
scas
jo
(bad)
fldcw
xor
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
in
pop
inc
cld
int
ret
inc
cli
or
lret
fnsave
fucomi
pop
cmc
(bad)
divb
rcrb
cmpsl
hlt
loop
icebp
xchg
inc
sub
mov
cmpsl
in
lahf
js
pop
add
repz
pop
and
roll
in
pop
xorl
sbb
xchg
inc
push
add
cwtl
xor
ljmp
push
clc
sbbb
push
cmc
and
and
jmp
jg
cld
sub
sbb
pop
addl
repz
xor
call
mov
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
sub
fcoml
(bad)
out
push
adc
nop

pop
push
pushf
pop
adc
and
enter
popf
xchg
sbb
jno
mov
mov
andl
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xchg
xchg
pop
pop
push
daa
mov
sahf
mov
out
bound
test
shrb
out
adc
and
xchg
jge
fbstp
xchg
addb
int
dec
mov
add
mov
sub
push
jg
repz
int3
aad
sub
cmc
mov
jbe
fdivrp
mov
fisttpll
jb
mov
subb
mov
xor
cld
in
repz
mov
xor
sub
testl
sub
mov
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
insb
gs
sub
rolb
mov
sbbb
repz
stos
mov
in
cmpsl
out
xor
out
or
mov
int3
ds
sbb
cmp
repnz
push
repz
sub
or
dec
or
pop
sbb
xlat
jle
loope
lock
push
cmc
fstl
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
lret
fadds
push
push
cli
xchg
and
sbb
orb
push
fsubr
xor
in
mov
movsl
out
dec
out
repz
add
fsubrp
bound
in
in
std
mov
(bad)
fldt
pop
mov
mov
pop
pop
mov
mov
adc
add
scas
and
daa
in
pop
mov
fsubl
fcmovnu
repnz
xchg
loopne
pop
lret
pop
mov
sbbb
and
jno
adc
nop

sbbl
loop
jl
addl
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sbb
ja
mov
out
orl
enter
and
loope
and
leave
xchg
repz
shrl
les
push
popf
pop
lods
shr
xor
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
in
push
mov
shlb
inc
mov
add
repnz
mov
add
inc
stc
cmp
mov
xor
xchg
sbbl
out
jmp
mov
and
pusha
cwtl
fnstenv
ja
pop
cmpl
loope
xchg
in
(bad)
rorl
xor
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
fmul
mov
hlt
xor
movsb
addb
jae
cli
mov
subb
push
sbbl
and
in
mov
xor
scas
pop
bound
shr
sbb
fbstp
jmp
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
add
jle
lcall
push
or
iret
and
repnz
pop
repnz
ss
push
mov
jmp
mov
test
and
shrb
adc
hlt
mov
addr16
(bad)
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cmp
cmp
sbb
subb
inc
movsl
sbb
or
scas
repz
jle
pop
cltd
cwtl
push
cmp
xchg
andl
inc
in
out
popa
and
push
xor
testl
out
cmp
inc
aaa
jnp
das
mov
adc
scas
sbb
(bad)
jns
lret
insb
mov
loopne
sub
adc
dec
neg
outsb
repnz
pop
int
lret
cmp
test
xlat
ss
fiadds
mov
adc
xor
mulb
push
rolb
repz
outsb
xlat
ljmp
mov
add
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
pusha
mov
(bad)
lock
sbb
pop
stc
mov
xchg
mov
push
pop
xchg
sbbb
xchg
lahf
cmpsb
fimull
add
cmp
popf
or
mov
xchg
jp
dec
and
pop
shll
and
test
movl
inc
int3
xchg
icebp
jecxz
or
inc
fsin
pop
loopne
out
scas
sahf
imul
mov
dec
adc
add
mov
mov
push
aam
add
cmp
mov
inc
jmp
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xor
cltd
mov
push
out
(bad)
aaa
out
aam
sub
movsl
add
in
adc
das
movsb
xlat
aam
les
cwtl
jbe
out
jmp
jo
sub
pop
js
iret
adc
xor
jecxz
in
jo
mov
jae
sub
push
scas
and
mov
and
pop
aas
fwait

and
mov
pop
das
lods
mov
push
xor
in
mov
in
pop
sbbl
xorl
lea
jnp
jle
cmp
push
repz
cld
add
pop
mov
arpl
mov
jg
xchg
imul
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
xchg
pop
arpl
test
xor
cmpl
mov
mov
sbb
xor
pop
loope
sahf
orl
sub
fldenv
or
scas
sbb
xor
xchg
test
insb
loopne
das
lret
mov
push
imul
xor
(bad)
sbb
inc
adc
sub
push
mov
jo
and
sbb
jne
and
int3
pop
push
repz
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
and
jbe
xor
stc
pusha
push
xchg
nop

mov
adc
sub
mov
jp
pop
lods
add
int
dec
fnstenv
mov
push
lahf
into
sti
js
es
repz
mov
es
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
xchg
loopne
icebp
dec
addb
test
mov
cmpsl
icebp
sbb
pop
jp
imul
bound
xlat
shll
out
aas
pusha
cmpsl
icebp
adc
xlat
hlt
or
mov
sbb
icebp
sbb
mov
pusha
rcll
push
dec
cmp
cwtl
adc
jmp
jae
pop
mov
dec
lea
pop
or
and
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
push
push
cld
imul
(bad)
mov
test
pop
(bad)
pop
icebp
lods
popf
mov
cltd
mov
popf
stos
into
dec
cmp
gs
pop
dec
shll
push
test
enter
insb
adcl
mov
lds
xchg
xchg
insl
push
int
in
js
addb
inc
addr16
pushf
xchg
call
jmp
imulb
mov
aad
xchg
xchg
outsb
or
out
pusha
daa
enter
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
std
jae
fxam
popa
mov
xchg
xchg
jno
cmpsl
mov
in
js
ficoms
ret
loope
dec
xor
push
das
and
lret
jmp
xchg
xchg
stos
cli
ja
and
pusha
(bad)
sbb
pop
jmp
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
call
pusha
icebp
mov
lea
sbb
sub
dec
xchg
pusha
inc
(bad)
pop
test
cmc
insl
aaa
adc
mov
rorl
sti
xor
cwtl
fnstsw
mov
inc
movntsd
push
adc
in
dec
cmp
pop
or
mov
xchg
and
ja
out
in
dec
adc
push
xchg
jmp
push
roll
in
lods
in
leave
pusha
test
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
into
addb
clc
(bad)
stc
xlat
jmp
inc
mov
mov
jo
inc
fnstsw
repz
dec
lret
ror
mov
cli
shll
sub
adc
shll
adc
and
mov
cli
or
movsl
loopne
std
stc
mov
or
pop
cli
orb
cmp
jno
bound
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmc
lds
xor
loope
adc
or
stc
(bad)

push
adc
fidivrl
js
aam
mov
(bad)
mov
xor
mov
jmp
dec
xor
movsl
cmp
test
movups
loop
and
and
dec
test
gs
into
loope
sbb
xchg
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
popa
jns
or
js
mov
pop
mov
daa
jno
push
lock
xchg
je
cs
adc
arpl
push
mov
pop
outsb
add
pop
lea
jno
mov
out
(bad)
nop

adcl
adc
push
jb
pop
fucomi
outsl
or
inc
cmpl
push
insb
push
dec
cmp
xchg
push
lods
push
push
popf
aaa
adc
push
inc
insb
(bad)

aam
jmp
inc
out
and
in
mov
inc
jl
inc
inc
mov
dec
cmp
inc
jbe
xchg
mov
push
popa
ds
ror
std
(bad)
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jp
xor
xor
dec
xchg
and
les
pop
jle
xchg
je
xor
xchg
push
dec
icebp
xlat
sbb
xchg
xor
pop
xchg
xor
in
loope
test
aad
adc
mov
xor
sbb
(bad)
insl
aad
incb
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
push
pop
add
cmp
xchg
inc
shl
jge
inc
push
add
(bad)
push
xor
inc
cmp
mov
addl
test
xor
test
pusha
inc
fwait

jg
ficomps
insb
sbb
cli
add
sub
add
mov
add
sub
jbe
lea
lret
adc
mov
out
sbb
mov
outsb
daa
je
(bad)
fcoms
adc
xchg
cli
cmp
sbb
(bad)
fxch
lea
lret
inc
lds
inc
adc
lret
sub
pop
xor
xor
lods
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
cs
mov
andb
xor
cmp
cs
push
loop
jb
scas
lcall
out
mov
pop
jns
ds
mov
xor
testb
ds
std
inc
insl
clc
sbb
jp
or
in
movl
pop
add
or
cmp
mov
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
or
pop
or
mov
mov
push
test
xchg
and
outsl
loopne
push
lret
pop
mov
lds
pop
mov
push
sub
clc
lret
shl
ljmp
les
aad
dec
imul
xlat
les
and
inc
ljmp
out
inc
mov
jg
fisubrs
sbb
cld
mov
or
(bad)
sub
enter
std
sbb
and
fnsave
repz
pushf
cmpsl
dec
clc
fldl
jmp
push
xchg
jnp
sti
loope
fstpl
pop
(bad)
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
xchg
out
data16
cmc
xchg
push
mov
ret
aad
jle
mov
jp
(bad)
xor
ss
es
fldl
cmpl
inc
xor
lret
inc
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
or
jmp
les
adcl
(bad)
mov
lds
push
lahf
inc
xor
pop
xchg
sbb
(bad)
cli
fld
lds
xor
enter
enter
insl
xor
lds
aaa
push
scas
sahf
mov
cwtl
lods
es
(bad)

inc
ret
inc
fnop
xchg
roll
lahf
sbb
lcall
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
xlat
hlt
setg
in
rcrb
or
stc
inc
je
aaa
mov
or
(bad)

add
insl
xchg
adc
sahf
enter
fs
mov
xchg
scas
adc
popl
cmc
fwait

test
mov
cmp
cmp
add
xchg
push
fimuls
sub
sbb
pop
or
clc
popf
shrb
ja
mov
xor
adc
int
sbb
push
and
inc
xor
sub
test
stos
notl
mov
aam
addr16
jl
ret
sub
iret
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmp
fisttpll
jo
aam
fimuls
int3
in
or
xchg
ficoml
or
mov
jmp
pop
adc
pop
cmp
and
ret
data16
mov
mov
or
inc
sub
addl
in
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
cmp
int
je
shl
xchg
mov
xchg
out
add
into
insl
adc
les
aaa
je
or
xor
andl
cli
test
stos
adc
std
js
outsl
inc
dec
add
push
fwait

mov
in
imul
add
xchg
mov
xlat
mov
std
push
jecxz
cli
icebp
in
jge
lcall
ret
inc
adc
mov
fsubp
imul
cmc
push
aaa
icebp
cli
lea
push
(bad)
in
push
xchg
ret
arpl
gs
mov
rcl
imul
(bad)
test
repnz
ret
dec
add
stos
adc
mov
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
inc
sbbl
loopne
xor
cmpsb
loope
(bad)
setb
inc
inc
mov
dec
adc
xorb
lods
inc
mov
cld
xchg
shrb
outsb
fldt
or
movsl
jae
mov
popa
mov
push
inc
sub
lds
mov
jo
push
lods
mov
adcb
push
push
ss
push
jg
nop

insl
mov
sub
mov
mov
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
push
push
(bad)
mov
test
pusha
fs
(bad)
sbbb
pusha
push
frstor
or
jge
in
icebp
dec
adcb
pushf
filds
pop
dec
pop
popa
inc
adcb
xchg
cs
pusha
push
dec
frstor
or
jnp
imul
or
pop
sahf
sbbl
into
lods
sahf
xchg
das
add
add
stos
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
inc
ljmp
notb
hlt
jns
or
mov
outsl
fmul
xchg
andb
shlb
cli
and
pusha
cmp
mov
jg
imul
js
xorb
clc
jo
mov
inc
and
cmpsl
jbe
ljmp
adc
(bad)
jno
mov
mov
movsl
mov
add
xchg
pusha
leave
xor
repz
mov
xor
into
mov
jmp
and
push
pusha
(bad)
cwtl
cwtl
adc
dec
jns
push
lea
outsb
shll
inc
and
xchg
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
xchg
sub
dec
and
inc
loopne
xor
nop

incb
xchg
cli
in
adc
sbb
nop

rorb
mov
addr16
cmp
cmpsb
cmp
fdivr
fcmove
or
hlt
iret
fsubr
sahf
mov
divb
mov
lcall
cmp
test
lret
(bad)
cld
enter
inc
push
dec
jns
popa
jge
mov
sub
(bad)
pushf
jmp
jae
bound
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
adc
andb
rorb
mov
mov
stos
popf
(bad)
mov
xlat
das
lea
mov
mov
addb
das
mov
push
sti
lea
icebp
xchg
insb
xlat
fcomi
lods
clc
ret
mov
ss
lea
mov
aaa
ja
insl
mov
cwtl
das
addl
aad
flds
push
and
popf
or
or
xor
movsl
dec
xchg
les
hlt
int3
and
(bad)
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
inc
sbbl
es
cld
push
invd
movsb
mov
out
sbbl
mov
mov
adc
fadd
negl
cli
jno
cli
nop

mov
and
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
pop
fucom
scas
enter
xchg
inc
shrb
fisttpll
adc
repz
daa
lods
jae
sub
sub
fldl
mov
xchg
add
call
cli
adc
into
jo
adc
dec
loop
(bad)
fstpl
cli
nop

sub
or
orl
scas
lds
inc
fwait

rcr
ficomps
(bad)

and
xchg
sub
roll
add
pop
xchg
and
ret
test
jbe
insb
jo
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
lea
xchg
mov
pusha
xchg
leave
movsl
push
cmp
repnz
sahf
out
ljmp
jmp
lods
ljmp
sarl
push
push
sbb
in
je
mov
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
js
sahf
mov
mov
cmp
mov
add
rorb
subb
mov
int
mov
inc
jbe
(bad)

jg
cmp
andb
repz
pop
lcall
sub
data16
int
jecxz
insl
sti
in
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
and
aam
add
add
lds
ret
xchg
pushf
mov
push
(bad)
fsubrs
adc
xchg
sahf
addb
cmpl
add
mov
data16
(bad)
cmp
push
out
xchg
lahf
pop
aam
test
or
cmpsb
lds
rol
xor
andb
cs
mov
mov
or
xor
movl
inc
push
cmp
xorb
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
xchg
xor
(bad)
push
lock
rorl
test
mov
lds
cwtl
dec
out
nop

fwait

dec
cmp
int
jmp
(bad)
pushl
aad
mov
sbb
adc
cmc
fimuls
cmpsw
add
inc
movl
inc
cs
adc
push
push
mov
lahf
icebp
pusha
adc
pop
icebp
dec
adc
mov
lock
xor
mov
(bad)
loop
js
out
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
add
std
icebp
mov
int
mov
daa
xor
add
mov
pop
jp
pop
addl
aas
push
add
daa
dec
inc
push
mov
push
mov
adc
fxch
mov
sahf
jmp
inc
adc
aad
and
test
lret
stos
xchg
nop

ds
pop
nop

dec
fcoms
mov
mov
xlat
inc
in
inc
dec
mov
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
add
lock
sbb
(bad)
sub
pop
xchg
push
loopne
sub
loop
xor
cmp
xlat
negl
pop
push
data16
fcmovbe
cmpsb
lds
xor
mov
mov
iret
je
or
push
js
add
rorl
mov
outsl
(bad)
in
fs
push
loopne
in
imul
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
andb
movsl
fdivs
xor
movsb
loop
lea
inc
nop

push
int3
dec
dec
and
sub
push
clc
xor
sti
xchg
pushf
idivl
mov
(bad)
out
outsl
int3
xchg
mov
fstps
xchg
insl
addl
adc
cltd
in
sarl
fstpt
insl
addr16
in
lcall
or
sub
jecxz
mov
addl
int3
stos
push
pop
sahf
jl
mov
add
and
xorl
test
andl
mov
bound
xor
push
xor
bound
mov
push
stos
sbb
and
addb
divl
andb
das
inc
xchg
addl
fcmovne
mov
mov
aaa
int3
(bad)
cld
outsl
cmp
addb
adc
inc
inc
mov
inc
adcl
addl
in
pop
pushf
and
mov
ret
mov
mov
addl
adc
add
addl
andb
incb
orl
sbbl
in
mov
adc
enter
addb
push
mov
ds
add
pusha
add
addb
adcl
addb
sub
xor
testb
andb
ret
jl
clc
or
push
and
mov
push
xorl
and
fnsave
mov
and
fiadds
addl
add
sbb
andl
mov
mov
mov
fdivrl
mov
lods
addb
subl
cmp
sbb
addl
scas
mov
int3
inc
xchg
lea
mov
andb
cmp
mov
scas
xchg
in
andl
xor
in
(bad)
sbb
mov
and
mov
inc
mov
jecxz
andl
addr16
mov
xchg
daa
addl
andl
xchg
addl
addb
and
js
mov
test
pusha
andb
mov
and
clc
sbb
andl
(bad)
jmp
lods
xor
andl
pop
daa
movsl
pop
imul
cld
in
pop
cmpsl
addl
dec
(bad)
mov
cmc
(bad)
jecxz
arpl
lds
ret
mov
loop
mov
and
add
fiadds
and
andb
pop
iret
out
outsl
aas
popa
adc
outsb
mov
addb
add
jae
sub
test
jne
sbb
inc
mov
add
add
sub
test
and
mov
add
add
jecxz
ret
(bad)
fisubs
addl
fadds
push
inc
imul
addb
addl
pusha
fadd
add
(bad)
xchg
in
xlat
inc
jne
mov
and
and
cld
inc
addb
andl
mov
leave
and
mov
mov
lret
mov
xchg
pusha
xchg
pop
mov
mov
add
pushf
xorb
add
lcall
add
addl
mull
jb
pop
add
mov
sbbb
xchg
push
add
add
les
out
sub
dec
int
or
and
mov
push
fildll
jmp
addb
stos
sbb
clc
addb
in
xchg
andl
mov
ret
popa
enter
push
test
mov
addl
sahf
addb
mov
push
nop

pusha
orl
andb
andl
fidivs
popa
or
into
ret
mov
mov
and
addb
(bad)

mov
xorb
add
mov
test
or
ret
lcall
addl
test
loope
js
cmp
ret
pop
mov
mov
pop
popf
dec
sub
mov
mov
inc
mov
sbbb
mov
mov
jmp
aad
(bad)
pop
sar
mov
add
mov
aad
ja
sub
addl
bts
and
addl
inc
jbe
addb
addl
jge
test
cwtl
movsb
sbb
mov
addl
loopne
pop
rorl
andl
push
imul
(bad)
sbbl
addl
inc
mov
pop
inc
sub
xchg
and
andl
addl
push
xorl
adc
ret
lea
addl
in
sbb
fmuls
mov
mov
cmpl
rcll
orl
add
(bad)
daa
inc
fnstenv
rcr
mov
mov
xchg
push
aaa
iret
or
mov
andl
xor
mov
addl
lret
pop
mov
andl
add
mov
and
mov
xchg
aam
into
leave
lock
xorb
lcall
addb
cmp
addl
addb
add
adc
pop
andl
addb
xlat
(bad)
fbstp
sub
addl
mov
mov
das
lcall
add
addl
mov
jle
out
aaa
rolb
repz
mov
ror
ret
addl
pop
inc
les
aas
pop
leave
adc
shlb
and
add
lods
mov
aam
xor
mov
stos
and
andb
add
mov
pop
dec
movsl
enter
sbb
xorb
add
adc
mov
andl
xor
movsl
mov
jp
dec
mov
jmp
or
add
cmpsl
push
mov
jg
test
mov
into
dec
xor
mov
inc
fisubs
addb
addl
iret
int3
push
fs
mov
and
mov
jle
cmpsl
xor
cmp
addl
dec
std
dec
adc
mov
addb
ret
mov
or
addl
add
sahf
adc
jp
insl
xorb
add
mov
and
out
inc
pop
mov
or
add
andl
add
mov
cmp
mov
clc
lret
shlb
insl
andl
addl
dec
cli
push
test
addl
xchg
mov
pop
mov
out
cmc
out
addl
mov
and
nop

movsl
xor
andl
pop
cmpsb
jb
jle
nop

sub
and
and
cltd
(bad)
repz
hlt
in
jge
inc
cmp
jg
xor
xorl
dec
andb
sti
jg
std
mov
addl
pop
icebp
mov
and
addb
repnz
pop
mov
sub
test
or
add
cmp
mov
mov
xor
mov
addl
hlt
orl
mov
cmp
or
and
cs
mov
mov
pop
shlb
cmpl
mov
xchg
and
into
outsl
andl
mov
sti
mov
pop
adc
and
orl
cmpsl
cmpsb
pop
subb
addb
addl
dec
andl
jecxz
and
sti
jne
rcrb
mov
mov
or
adc
or
addl
in
insb
lods
jg
cmp
andb
xchg
add
mov
addl
add
xchg
sahf
in
push
pop
cmc
add
add
mov
and
jo
das
xor
andl
ret
(bad)
pop
mov
pop
sahf
mov
incl
andl
jo
dec
insl
addb
sbbl
jnp
mov
andl
stos
sahf
adc
addb
jns
dec
sub
lds
xchg
and
andb
mov
and
add
imul
adc
mov
(bad)
pop
stos
inc
ret
xor
andl
(bad)
movsb
mov
fcompp
dec
inc
aam
out
mov
add
(bad)
pop
mov
call
sub
mov
jp
pushf
mov
add
outsb
cmp
test
sub
add
lods
pop
xchg
mov
add
addl
push
test
in
andl
add
sti
lahf
orl
andl
mov
(bad)
mov
addl
ret
scas
and
pop
push
leave
lahf
repz
andb
mov
sub
xor
xchg
loopne
mov
addb
add
cmc
cld
inc
outsb
and
pop
cwtl
andl
sbb
lods
pop
insl
push
in
adc
mov
addl
add
mov
mov
sub
and
lcall
xorb
clc
insb
lahf
jge
outsl
popl
mov
leave
pop
mov
xor
mov
and
add
andl
lock
jno
rcrb
andl
add
mov
mov
lea
ret
mov
mov
add
sbb
ret
jno
cwtl
out
jae
repnz
xorb
add
cmp
add
lds
std
andb
andl
mov
addb
or
add
jnp
and
subl
lahf
xchg
xchg
addl
fadds
jge
mov
mov
and
ds
cmc
lock
andl
mov
push
mov
js
inc
add
andl
pushl
repnz
mov
addb
mov
jp
jge
andb
andl
es
and
addb
stos
out
fstp
movsb
lods
mov
icebp
addl
cmpb
sbb
mov
addl
leave
add
mov
mov
stos
popf
nop

popf
aad
sahf
test
in
jno
add
andl
fwait

mov
cmc
mov
addl
cltd
add
test
addb
mov
pop
push
mov
andl
mov
mov
adcb
jo
addb
aam
ds
andb
(bad)
scas
pop
xor
mov
andl
xor
repnz
call
cmp
andl
jl
cmpb
dec
xorl
addb
xlat
xorb
and
xchg
data16
and
add
mov
mov
mov
addb
repnz
xchg
and
mov
fs
int
cmp
orb
addl
xor
mov
xchg
cs
outsb
sbb
andl
stos
push
loop
call
sti
mov
mov
mov
mov
sahf
lahf
ret
loope
cmpb
addl
mov
andl
mov
in
shr
into
mov
add
addl
mov
adc
mov
addl
rol
cmp
ret
andl
subl
dec
sar
cltd
cmpl
addl
hlt
sub
orb
addl
addb
add
and
inc
xchg
add
andb
mov
push
lods
stos
stos
xchg
cmp
add
sahf
addb
add
jecxz
inc
fadd
mov
addb
addl
outsb
mov
andb
or
jo
rorl
jle
and
add
xchg
mov
clc
cmp
xorb
andb
pop
or
mov
subl
add
insl
ljmp
add
addl
adc
and
addl
cli
pop
addb
mov
pop
fildll
pop
pop
addb
addl
ds
out
loop
repnz
cmp
(bad)
roll
andl
push
insl
ss
andl
mov
sub
add
andl
test
test
pop
lcall
addl
mov
mov
add
jmp
or
leave
stos
add
imul
ljmp
add
andl
xor
jmp
and
sbbb
adc
adc
sub
test
mov
xorl
rorb
in
andl
call
leave
in
mov
andb
mov
andb
xchg
jg
xchg
mov
mov
addl
push
jge
pop
inc
push
mov
add
and
test
mov
addl
dec
stos
addb
xor
and
add
and
daa
cld
dec
test
and
addb
dec
jge
inc
test
push
mov
addl
lcall
add
addb
cmp
mov
mov
mov
sahf
subb
(bad)
stc
mov
inc
mov
add
andl
add
cmp
addl
out
shrl
add
repnz
mov
mov
xor
andl
and
push
sub
mov
subb
mov
addl
sub
addb
fidivrs
stos
jmp
int3
sub
andl
out
std
sbb
addl
imul
addl
dec
adcl
and
mov
mov
addb
outsb
pop
scas
hlt
test
xchg
addl
lea
inc
hlt
mov
addb
popf
(bad)
mov
addl
mov
mov
in
ret
mov
mov
xorl
orb
addl
cs
sbb
andl
sub
cmpl
insl
adc
andl
and
push
mov
ja
cmp
fistl
mov
and
mov
xchg
mov
xchg
andl
jle
mov
test
cmp
or
andl
sahf
xchg
pop
leave
test
sub
mov
add
call
xchg
or
addl
aas
or
sbb
lcall
add
imul
xchg
in
sbb
test
ret
addb
addl
and
pop
scas
jmp
mov
add
addr16
mov
mov
and
add
adc
sub
aas
das
mov
bnd
xchg
fsubs
and
andl
mov
addl
mov
into
mov
xchg
add
addl
inc
fiaddl
add
adc
xchg
and
jl
jae
clc
addb
mov
std
cli
xchg
mov
mov
addb
addl
faddl
adc
mov
and
mov
testl
addl
scas
and
test
sbb
andl
mov
dec
cmc
mov
mov
add
popa
add
add
inc
iret
mov
xorb
add
pop
lock
cli
or
addl
push
call
xor
xchg
jnp
and
xor
mov
cmp
xchg
andl
addl
pop
popa
ret
icebp
inc
or
addl
xor
adc
andl
sbbl
in
or
andb
push
subb
sub
pop
inc
cwtl
mov
dec
add
and
push
andl
subb
cmpsl
cmpsb
xor
inc
xlat
andb
andl
outsl
mov
and
addb
addl
mov
addl
pusha
inc
stos
add
flds
into
jmp
mov
addl
pop
mov
sub
addr16
addb
push
call
jne
ret
lahf
add
andl
sub
push
xchg
fisubrs
dec
inc
andb
add
pop
lea
addl
cld
xchg
andl
and
andl
mov
movsl
xchg
sub
and
mov
sbb
shrb
add
mov
addl
sbb
addb
(bad)
fdivl
add
xchg
or
test
fadds
mov
test
cmp
mov
mov
addb
cmp
in
jg
addl
pop
add
loopne
push
mov
andl
in
sbb
mov
mov
cmp
and
imul
mov
mov
sbb
sub
mov
andl
mov
out
mov
addl
pop
cmp
push
adc
andl
mov
sahf
xor
cs
or
addl
xorb
and
push
mov
andl
data16
andl
mov
adc
(bad)
lret
xchg
addl
addb
das
xlat
inc
popa
addps
fiaddl
add
addb
icebp
jo
dec
sub
mov
addb
add
lock
popf
loope
addb
sub
dec
jno
addl
inc
mov
mov
dec
shlb
push
push
mov
and
add
sub
adc
popa
and
andb
push
(bad)
out
pushf
popf
xor
cwtl
inc
jnp
sbb
mov
addb
add
fidivrs
pop
mov
mov
add
insl
addl
xchg
adc
cs
sbb
addl
add
in
lock
ret
addb
addl
je
cmp
pusha
mov
test
add
sbbb
into
js
push
mov
mov
and
sub
inc
mov
repnz
adc
addb
andl
and
mov
scas
pop
rorl
fucomi
in
in
addl
add
pusha
stc
or
xorb
add
inc
add
andb
andl
outsb
es
in
and
subb
push
mov
mov
lds
bound
and
orl
lods
jmp
mov
cli
push
jae
andb
subl
aaa
mov
mov
andb
lcall
mov
add
push
aas
mov
lods
in
mov
andl
mov
push
cmp
xchg
cmp
cwtl
fdivl
addb
mov
and
xchg
fadds
leave
dec
sbb
and
add
dec
int
in
fs
aam
pushl
mov
addl
iret
out
andb
fldcw
bound
push
mov
addl
push
inc
jmp
addl
cmp
mov
roll
addb
mov
mov
andb
add
stc
cmp
or
dec
jecxz
mov
addl
stc
(bad)
mov
adc
push
xor
addl
cmp
mov
addl
mov
addl
cmpsb
rolb
andl
jbe
pop
rclb
andl
iret
pusha
add
add
sbb
and
adcb
xchg
insb
leave
dec
inc
fisubl
mov
addb
arpl
cltd
orl
addl
pop
mov
cmpsl
xchg
adc
dec
leave
adc
andl
ljmp
add
lahf
jl
dec
push
out
pop
test
out
sbb
mov
mov
mov
push
sarl
addl
rorl
stc
cmpsl
imul
xorl
xor
mov
and
sub
rolb
and
mov
test
stc
or
dec
loopne
dec
sbb
addl
ret
(bad)
pop
mov
andl
ljmp
call
test
mov
daa
(bad)
fisubl
mov
andb
ret
repnz
movl
enter
test
addb
cmpl
inc
xchg
jmp
andl
out
cmc
clc
dec
xor
je
mov
addb
cmpsb
or
push
test
mov
adc
shlb
and
andb
xchg
nop

out
pop
pop
sub
stc
push
into
xor
mov
addl
adcb
mov
add
xchg
mov
xchg
rcrl
addl
add
jg
and
mov
jae
jle
addl
jae
cmpsb
add
stos
lea
lods
push
addb
addl
pop
cmc
lret
jmp
jmp
imulb
addr16
mov
and
add
test
addb
andl
loope
lea
andl
fidivrl
mov
mov
mov
add
mov
xorb
add
and
js
andb
andl
add
mov
addb
jbe
andl
addl
andb
sbbl
mov
xor
stos
jbe
add
mov
andb
xor
andl
repnz
inc
addl
mov
addl
andl
(bad)
jp
testl
mov
rcl
mov
in
mov
andl
movsl
adc
daa
dec
divl
mov
addl
xor
std
mov
addl
inc
push
jno
int3
frstor
addb
aam
push
pop
(bad)
fisttpll
pop
add
andl
jge
sbbl
addl
add
arpl
adc
xlat
cmp
mov
lahf
pop
pop
dec
and
andb
mov
sub
ds
sub
addb
aas
jne
push
out
test
and
mov
lret
in
sub
fld
add
addb
and
loopne
addl
fs
stc
add
inc
fiaddl
mov
cmp
daa
xorl
in
int
xor
shrl
out
cmc
fiadds
andb
hlt
mov
jecxz
or
scas
roll
andl
sbb
addl
mov
cmp
hlt
addb
or
les
mov
andl
adc
ret
add
mov
jl
cwtl
add
addl
andb
mov
addb
sbb
add
pop
adc
pop
andl
xchg
cmpl
imul
sub
addb
add
popa
repnz
(bad)
imul
addl
addb
movsl
lds
pop
mov
mov
andb
andl
add
mov
stos
and
sub
addl
orl
lea
(bad)
push
mov
addb
fs
jmp
mov
addl
add
addl
xorb
add
push
fs
mov
add
int
lock
addl
add
fimull
mov
cmpsb
addb
mov
mov
int
and
mov
addb
addl
xchg
clc
addl
andl
aad
sti
xchg
mov
mov
mov
les
daa
push
sbb
andl
push
out
or
out
sub
adcl
mov
mov
add
pusha
xor
fsts
lea
mov
mov
add
pop
imul
andb
andl
and
sbb
cmp
pop
aam
jnp
xchg
je
andl
addl
mov
addl
shlb
pop
lods
incb
and
cmpsl
imul
roll
and
addb
mov
xor
fistpll
and
mov
addl
andl
(bad)
icebp
pop
andb
andl
repz
int
sbb
scas
inc
(bad)
shlb
andl
mov
push
enter
(bad)
mov
or
addl
dec
cmpsb
push
jg
mov
mov
addl
add
fstps
xchg
nop

mov
mov
sub
shll
addl
mov
xor
das
(bad)
out
shr
or
mov
add
mov
int
pop
in
and
arpl
andl
mov
cmpsb
repnz
pop
and
jo
adc
addl
or
jle
in
sub
mov
dec
fbstp
sbb
xorb
jmp
xchg
andl
push
adc
pop
cmpsl
fistps
lods
and
andl
fisubs
addb
jp
cmpb
mov
andb
out
push
xorl
pop
xor
(bad)
add
add
iret
adc
orb
addl
in
sbb
xchg
adc
addl
clc
fdiv
or
sbb
flds
addb
pop
mov
rcr
repnz
andb
iret
sahf
mov
andl
mov
mov
mov
addb
aaa
mov
mov
jne
out
mov
addl
mov
push
roll
addl
stc
in
fmull
fiadds
hlt
mov
andl
addb
addl
addb
arpl
movsb
mov
jae
fbld
addl
inc
in
call
incl
aam
addb
add
addr16
mov
and
mov
push
sub
mov
inc
into
xchg
insb
in
rol
fimull
mov
and
add
out
cs
stos
out
pop
test
and
andb
pop
or
pop
movsb
mov
cmc
mov
fnsave
popf
mov
addb
add
pop
outsb
jb
mov
add
subl
jg
push
in
and
addl
es
js
enter
andl
adcb
lock
outsl
rcr
mov
mov
jl
add
addl
test
mov
andl
jmp
mov
fbstp
inc
lock
jo
les
aad
or
addb
andl
mov
inc
and
mov
test
inc
add
cli
cmc
lods
mov
mov
add
insl
adc
xchg
addl
sub
dec
(bad)
mov
sub
add
andl
mov
addb
insl
subb
sbbb
jno
and
adc
mov
orl
addl
mov
into
mov
mov
andb
inc
jne
loopne
out
andl
fiaddl
(bad)
xchg
(bad)
jge
xlat
sbb
xor
add
and
gs
or
sbb
addb
mov
aaa
subb
adc
imul
or
imul
addl
cmp
(bad)
xor
add
pushf
addl
push
cmpsb
or
mov
(bad)
icebp
mov
addl
lret
addl
push
andb
popf
pop
outsl
mov
mov
sub
pop
lods
lcall
and
mov
mov
add
mov
sub
mov
addl
push
ljmp
addl
out
mov
andl
testl
roll
addl
in
mov
adc
addb
mov
cmp
scas
push
call
addb
je
sub
pop
sahf
jmp
sub
addl
std
inc
jge
jmp
addl
imul
mov
andb
hlt
mov
rorb
xor
adc
andl
xor
addb
ret
mov
sub
mov
mov
dec
sub
xchg
in
pop
xorb
mov
mov
xchg
andl
in
xchg
mov
sub
mov
and
adcb
imul
addl
outsl
adcl
mov
addb
or
inc
addb
and
addb
add
scas
lock
jae
enter
cmp
push
or
mov
andl
icebp
mov
andb
mov
into
mov
test
addb
add
scas
xor
cmpsb
lods
addb
andl
xor
cmp
dec
cmp
mov
faddl
test
scas
idivl
jnp
and
add
or
add
mov
and
andb
sbb
mov
mov
sub
loop
cwtl
stc
incb
mov
addb
add
mov
rcll
andl
sti
mov
int3
lretw
and
addl
call
mov
orl
addl
cli
fidivrl
mov
lahf
cmpsl
mov
addb
addl
mov
stos
xorl
dec
mov
addl
das
mov
fmul
outsl
(bad)
xor
andl
pop
cmpsl
std
hlt
movsb
in
and
mov
mov
jno
repnz
jae
xchg
mov
and
mov
add
ja
cmpsl
pusha
xor
and
jne
mov
add
and
enter
andl
add
andl
fdiv
test
mov
and
sbbb
stos
pop
andl
addl
subb
dec
ds
addl
xchg
enter
push
mov
cmp
adc
add
addl
cmp
adc
ficompl
(bad)
jmp
mov
and
addb
mov
mov
mov
andl
outsl
and
pop
int3
in
rorb
andl
dec
into
pop
fs
dec
xchg
andb
andl
mov
popf
outsb
lret
sti
(bad)
in
and
addb
lock
fldl
in
addl
mov
(bad)
stc
cmc
scas
dec
mov
ds
mov
addb
ret
mov
mov
ror
xlat
mov
mov
enter
popf
add
andl
mov
sahf
test
sub
out
out
mov
add
mov
and
dec
jne
andl
faddp
movsb
lea
xchg
nop

lret
addl
test
andl
xor
dec
push
mov
addb
pop
(bad)
sub
mov
sbb
mov
mov
in
fcoms
addl
repnz
addl
stos
mov
pop
movb
addl
sbbb
repnz
xchg
add
add
movsl
cwtl
sti
fldl
addl
sbb
sub
fnsave
lret
andl
fsubs
addb
subl
mov
shlb
mov
andl
mov
into
or
adc
andl
mov
into
aad
call
mov
andl
jmp
pop
mov
(bad)
les
jbe
and
mov
sub
xchg
adc
inc
aas
andl
pop
test
jb
rcrl
cmpsl
addb
add
or
mov
add
add
mov
ds
add
addl
xor
adcl
andl
cmp
mov
addb
adc
test
xchg
andl
sub
pop
mov
(bad)
cmp
andl
xor
pop
clc
ret
ret
clc
bound
test
andb
and
fisubl
addb
add
push
fwait

cli
xor
mov
addl
out
(bad)
sbb
addl
add
test
subb
sbb
rcr
(bad)
pushl
and
add
inc
rolb
mov
(bad)
in
lcall
add
and
in
aad
and
adc
mov
mov
add
inc
dec
leave
jns
mov
cmpsb
addb
andl
andl
leave
xchg
push
enter
or
imul
addl
add
lahf
ljmp
mov
add
imul
sahf
mov
cmpsb
bound
mov
add
xchg
int
mov
inc
imul
dec
jecxz
add
mov
orb
xor
clc
add
sub
iret
dec
pop
fiadds
addb
mov
loope
dec
push
inc
das
jle
andb
sbbl
addl
pop
loop
(bad)
mov
andl
rol
pop
add
mov
xchg
loopne
add
and
dec
int
enter
es
addl
pop
sbb
cmp
sub
addl
leave
mov
cmp
stos
and
addb
clc
sbb
mov
addl
test
mov
ret
xchg
addl
sbbl
dec
mov
mov
scas
enter
test
add
andl
movsl
and
test
xor
sahf
andb
add
push
or
lock
xchg
mov
mov
test
icebp
add
andb
mov
call
cmp
addb
addl
movsl
ljmp
pop
lds
addl
sbb
add
addb
mov
inc
xchg
or
cmpsl
inc
in
addl
int3
mov
xor
int
and
cmpb
mov
filds
addb
popf
pop
add
add
jecxz
cmp
(bad)
sarb
mov
std
and
mov
(bad)
andl
into
rcrl
push
dec
addb
subl
pop
bound
mov
andl
xlat
outsl
insb
insb
dec
andl
rol
les
roll
andl
pop
push
sahf
pushf
in
or
add
addl
xor
mov
addb
and
push
les
andl
xchg
rcll
add
add
adc
mov
cmc
shrb
mov
andb
push
out
addb
add
dec
cmpb
mov
xchg
aam
dec
xchg
mov
insl
stos
sahf
test
or
adc
push
mov
inc
addl
in
shrl
pop
stos
push
mov
incl
mov
and
add
fninit
cli
popf
adc
and
andl
xorb
add
das
and
mov
andl
hlt
cmpsb
xchg
pop
loop
jl
sbb
andl
add
movsb
mov
addb
mov
jge
sub
mov
pop
push
scas
jle
subl
mov
and
fbld
add
push
addb
andl
stos
in
add
aam
push
andl
mov
andl
ja
pop
shlb
mov
add
fsub
adc
std
test
sarl
leave
aam
insb
jl
and
xorb
add
movsl
loope
mov
sbbl
add
addl
sbbl
add
mov
adc
mov
pop
fisttpll
aam
and
addl
add
push
addl
adc
int
sbb
xor
mov
andb
out
mov
mov
mov
and
cmpb
mov
mov
xchg
add
and
xor
cmp
addb
mov
jl
mov
roll
mov
pop
xchg
xchg
and
addb
popf
pop
jnp
mov
cmp
mov
addl
mov
ret
jae
ret
clc
ret
in
int
mov
addl
in
lods
mov
mov
mov
jecxz
sub
addb
pop
adc
fwait

sbb
mov
add
mov
adc
cmp
addl
mov
fneni(8087
stos
xchg
or
mov
addl
or
out
clc
sub
mov
adcb
mov
pop
or
cmp
rolb
scas
mov
mov
addl
subb
addb
mov
enter
cmp
inc
mov
icebp
cld
addl
iret
mov
mov
and
addb
adc
mov
addb
shll
andb
mov
add
mov
outsb
getsec
repz
jne
mov
mov
fstl
rorl
andl
imul
popa
fiadds
addl
lods
cmpsb
outsb
(bad)
addl
addl
in
mov
add
addl
leave
pop
sbb
ds
repz
addl
lods
sub
add
push
cmp
mov
addb
mov
arpl
andl
dec
add
and
mov
fs
pushf
addl
addb
push
mov
imul
stos
cmp
mov
andb
sub
sbb
push
sbb
addb
add
stos
rolb
mov
cmpl
sbb
mov
andl
mov
mov
and
add
and
ljmp
addl
jle
sbb
roll
mov
addb
add
jp
cmp
sbb
int3
jnp
andl
loope
or
stc
or
push
push
and
addl
aad
mov
mov
xor
fsubr
sbb
jge
mov
add
addl
xor
es
test
mov
mov
and
or
fdivrl
sbb
andl
shll
shrl
and
mov
add
push
(bad)

add
jmp
dec
loope
sbb
mov
add
push
inc
push
or
inc
lret
(bad)
rcr
mov
test
andb
andl
mov
add
mov
sbbb
js
sbb
addb
imul
mov
addl
push
shll
and
scas
push
mov
or
aad
addl
fmul
cwtl
enter
andb
push
int3
mov
rcrl
and
addl
addb
mov
rcll
and
add
cmpsl
adc
jp
sub
mov
mov
xorl
in
pop
movsl
add
add
lret
movsb
sbb
je
pushf
add
addl
and
clc
lds
andl
sarl
andl
cmp
sub
addl
adc
xor
addl
imul
push
hlt
addl
cwtl
enter
lock
les
icebp
test
addb
jle
mov
orl
addl
(bad)
jl
jns
cmp
jmp
addl
stos
xchg
mov
jmp
xchg
in
roll
mov
xor
aas
or
ret
xor
mov
or
aad
mov
add
xorl
xor
xor
andb
sahf
test
mov
pushf
mov
andl
add
cmp
andl
dec
roll
addl
mov
in
mov
fidivrs
xorb
mov
std
roll
pop
xor
mov
addl
lods
mov
adc
mov
and
dec
mov
inc
push
inc
add
addl
adc
jl
scas
mov
andl
dec
adc
addb
add
jp
mov
inc
ret
cli
jg
fadd
and
andl
shrl
mov
addl
(bad)
imul
inc
fnstcw
lds
add
addl
lahf
push
addb
adcl
push
outsl
les
and
xchg
lock
xchg
int
andl
ret
int3
mov
ds
mov
and
add
push
lea
xchg
and
andb
jg
fisubrs
sub
addb
add
nop

mov
jmp
sbb
mov
add
push
int
rcrb
pusha
and
addl
or
int
enter
icebp
pop
out
addl
sbb
xchg
roll
mov
fmulp
mov
nop

orl
arpl
in
addl
adc
adcb
xchg
(bad)
addb
andl
aam
inc
lock
mov
in
lret
add
mov
or
iret
mov
mov
mov
add
lret
sub
sbb
jo
adc
xorb
add
fadds
add
addl
orl
add
mov
andb
mov
mov
or
lret
dec
add
xor
mov
addl
and
addl
popa
mov
daa
int3
adc
out
xchg
xorl
pop
andl
je
fstpt
andl
mov
addl
lahf
cmp
lock
mov
stos
adc
and
add
jl
js
cmpb
andl
rorl
push
or
addl
add
xchg
xchg
adc
mov
mov
addl
mov
addl
cld
cmc
call
adc
addl
jecxz
sbb
out
sbb
jle
andb
add
jge
pop
adc
lock
jne
xorl
mov
addl
sub
cltd
jbe
scas
imul
andb
mov
ret
inc
dec
repnz
add
sub
mov
addl
call
and
addl
pop
xorl
add
test
addl
push
js
jae
test
ret
addl
adc
push
mov
test
and
xor
xor
xchg
stc
in
sbb
mov
mov
addb
int
sbb
es
mov
jbe
addl
dec
mov
addl
mov
xor
pop
mov
roll
andl
mov
xchg
aam
xorl
je
sub
xchg
call
lea
mov
andl
pop
movb
out
andl
push
push
(bad)
add
add
addl
mov
scas
das
nop

outsl
mov
addl
cli
push
and
addb
(bad)
in
dec
aas
(bad)
aam
push
pop
int
inc
adcb
mov
add
out
(bad)
leave
cli
(bad)
push
sbb
sahf
dec
xor
addl
addb
imul
jnp
mov
mov
andb
jmp
mov
sahf
test
andl
mov
in
jo
out
repz
mov
das
add
outsb
arpl
mov
add
mov
jns
sbb
mov
addl
xchg
adc
pop
repz
andb
insb
int
xor
in
xchg
outsb
out
push
xor
add
addl
ja
xorl
stc
stc
xor
addl
mov
rcll
sbb
aas
data16
addl
aam
or
int
xchg
andb
and
xchg
jg
adc
addb
addl
outsb
push
test
aam
out
inc
lock
fwait

mov
and
stos
leave
or
inc
nop

xlat
enter
andl
push
sub
mov
andl
dec
in
cmp
mov
add
mov
and
mov
add
loopne
mov
scas
imul
sarl
and
out
and
loopne
add
mov
cmpb
ret
loope
dec
iret
push
stos
jae
popf
or
mov
adcl
addb
jecxz
int
aaa
xor
add
addb
test
mov
xorl
mov
andb
js
fsubrl
and
xor
andl
call
cmpsb
fstpl
andl
popf
adc
mov
stc
addb
mov
in
dec
les
mov
nop

mov
pop
and
addb
rcr
add
addl
fsubrl
jbe
test
mov
jp
mov
addl
mov
addb
sub
int3
cmpsb
aas
add
andl
dec
push
mov
ret
mov
aas
(bad)
fadds
addl
test
dec
jb
mov
andl
std
mov
fcoml
addl
clc
mov
andl
in
dec
xor
roll
les
mov
addb
xchg
push
and
add
addb
test
andl
xlat
and
jae
jbe
movsl
insb
andl
addl
xchg
gs
mov
xorl
inc
jmp
aas
pushf
dec
pop
push
cmpb
add
add
mov
cltd
and
addb
mov
andl
cmc
lret
(bad)
addb
and
ret
xorb
mov
xor
call
sub
mov
add
mov
cltd
mov
add
addl
and
mov
addl
jmp
pop
pop
leave
stos
outsl
nop

mov
mov
addl
push
xor
mov
xchg
push
addb
add
push
out
and
fmuls
adc
add
add
in
int
dec
int3
mov
mov
andb
xchg
inc
sub
jp
loop
sahf
jle
andl
cmpsl
push
push
mov
addb
xorl
in
insl
rorb
andl
and
andl
cltd
sarl
stc
mov
and
add
and
and
andb
pop
lahf
aam
dec
cmc
scas
xor
mov
addb
add
js
pop
andl
and
mov
and
addl
(bad)
test
test
mov
sub
dec
in
pop
sbb
addb
addl
popf
xorb
pusha
test
mov
addl
test
xlat
inc
addb
andl
push
loope
jne
repnz
mov
sti
ret
lcall
in
andl
mov
add
push
mov
sub
add
cmpsb
mov
fldl
dec
and
inc
andb
andl
and
mov
andb
adcl
push
fstl
and
or
lds
sbb
addl
or
addl
xor
cmp
mov
andl
mov
fbstp
push
cmpsl
mov
sahf
push
add
and
adc
push
ds
push
mov
addl
leave
xchg
out
dec
imul
mov
and
add
je
in
and
addb
add
daa
mov
mov
out
(bad)
popl
addl
jo
sub
cltd
jbe
cmp
pop
and
addl
ds
(bad)
push
adc
mov
mov
in
add
ret
add
andl
fnstsw
addl
mov
and
sahf
jl
mov
push
xchg
aaa
mov
andb
cmpl
xchg
xchg
insb
mov
mov
addl
or
jge
push
(bad)
fldl
addb
addl
cmp
std
aam
mov
addl
add
addb
adc
les
fsubrl
mov
addl
cmp
andl
addl
mov
addl
and
addl
ret
sbbb
addb
ret
push
stos
cmpl
addb
xor
test
out
addb
subl
pop
mov
(bad)
enter
andl
(bad)
and
es
jbe
(bad)
(bad)
andl
popa
loop
xor
mov
addb
scas
pusha
cmpsl
dec
push
jp
js
push
mov
addl
loopne
xor
pop
dec
test
mov
addb
js
lods
std
jle
mov
cmp
addb
add
stc
inc
xlat
jbe
scas
stos
lods
addl
addb
pop
dec
incb
outsl
mov
inc
cltd
add
mov
andb
and
push
inc
stc
mov
push
add
addb
add
shlb
pushf
fcmovne
ret
(bad)
and
addb
cmpl
insb
addl
aas
xchg
pop
cmp
inc
aas
push
mov
and
add
jns
xlat
cld
bound
andb
push
enter
scas
in
mov
add
or
scas
cld
dec
jbe
xorb
add
add
adc
shrb
sahf
andl
int
imul
sbb
je
pushf
inc
and
addl
lock
addb
mov
dec
dec
xor
push
adc
or
add
addl
cmpsb
int
jg,pn
pop
add
addb
pop
jp
cmpsb
sub
addl
mov
xor
push
lea
addl
test
push
stc
repnz
jg
out
push
add
add
sbb
orl
addb
out
js
out
in
movsl
mov
and
movsl
rcrb
inc
adc
add
mov
andb
test
stos
(bad)
pop
jne
and
orl
int3
cmpsb
data16
mov
addl
fst
mov
sub
mov
pushl
and
sahf
jecxz
mov
mov
mov
mov
pusha
add
and
push
inc
insl
paddq
addb
mov
test
(bad)
fdivrl
andl
xchg
or
or
add
xchg
and
addb
inc
popf
addl
insw
mov
pop
jb
mov
addl
nop

mov
addb
pop
add
imul
andl
xchg
add
lcall
andb
add
mov
repnz
andl
aad
or
lock
jb,pn
addl
mov
mov
andl
dec
scas
stos
inc
cmpsl
enter
addb
dec
rcrl
xor
mov
mov
adc
insl
pop
and
addl
xorb
insb
test
andl
addl
mov
stc
xorl
jno
push
scas
subb
lods
and
dec
xchg
mov
add
add
clc
shlb
cmp
andl
xchg
push
outsb
out
push
testl
sbbb
or
lock
cwtl
addl
xorl
mov
xchg
jecxz
xorb
mov
in
add
pop
pop
and
xor
mov
andb
pushf
lods
outsl
add
pop
mov
andl
cmpsb
sub
xchg
mov
addl
fisttpll
shll
cmp
andl
rolb
xorl
cmp
addl
fnstsw
enter
jmp
(bad)
loopne
mov
andl
ss
jnp
andb
mov
ficoms
or
dec
cmpsb
loope
andl
pop
push
insb
push
addl
addb
ret
push
mov
mov
andl
xchg
jae
(bad)
sbb
and
add
inc
into
subb
mov
addl
dec
lret
pop
insb
mov
addb
add
roll
lds
dec
stc
andl
mov
jbe
jle
xchg
and
addl
frstor
inc
pop
mov
addb
mov
jecxz
or
mov
jno
ret
mov
add
repnz
jnp
ret
push
mov
stos
rcrb
mov
and
cmp
fnop
add
addb
andl
sbb
fstpl
mov
andl
dec
inc
(bad)
sti
faddl
(bad)
mov
add
mov
jge
xchg
xorb
add
cmpsb
fldt
and
imul
lcall
and
add
xchg
xchg
jbe
xchg
insb
clc
push
mov
andl
addl
mov
xchg
xor
andb
addl
movb
sub
stos
mov
andb
cmp
mov
jg
fcoml
andl
ss
cmp
andl
nop

andb
add
mov
addl
jnp
and
add
and
or
inc
mov
andl
ficoms
iret
orb
cmpl
add
inc
sbb
sbb
jp
sbb
addl
js
xor
fcoms
mov
mov
cld
cmp
shll
mov
dec
add
addl
xor
out
movq
push
ret
fildl
addl
fimull
jo
mov
addl
mov
mov
mov
mov
push
mov
mov
orb
addb
adcl
addl
or
addb
mov
pop
nopl
and
mov
andl
std
and
int3
orb
mov
sbb
xor
lahf
add
into
pop
cmp
adc
addb
aad
mov
iret
repz
in
and
pop
lcall
addl
mov
andl
je
adc
jle
stos
mov
andl
hlt
addb
addl
mov
mov
sti
(bad)

cwtl
mov
in
js
cs
andl
sub
rcrl
loope
mov
js
aaa
cmpsl
add
addl
(bad)

mov
addl
cmp
addb
fsubr
sbb
(bad)
in
insb
or
test
lds
addb
add
xchg
add
andl
cmp
in
xchg
pop
xor
mov
mov
addl
outsb
jns
mov
andl
iret
filds
addl
mov
lea
andl
aam
or
outsl
sti
cli
mov
mov
and
add
pop
gs
sbb
mov
mov
ds
adc
sbb
loop
xorb
add
cmpsb
adc
push
in
and
rorb
mov
add
movsl
mov
mov
sbb
pop
mov
insb
addb
mov
add
fildl
addb
addl
sbbb
addb
decb
add
inc
(bad)

fnstcw
(bad)
cmc
addb
andl
and
mov
jmp
std
mov
addl
add
xor
lds
and
mov
add
call
lahf
andb
andl
stos
mov
ror
mov
mov
adc
sahf
add
add
push
cmc
andl
adc
add
push
sahf
adcl
addl
mov
jo
lods
mov
movsl
shll
mov
repz
das
sub
lahf
scas
dec
repnz
addl
cmpb
sar
cmpsl
add
and
dec
inc
and
addl
test
add
and
add
pop
in
xor
and
addb
push
cmpsl
cmp
addl
test
xchg
mov
addl
sub
addl
scas
pop
adc
push
enter
pop
iret
incb
sub
andl
(bad)

inc
andb
add
rorb
andl
mov
addl
das
sbb
std
imul
orl
and
mov
addb
movsl
cmp
stos
mov
addl
xlat
sbb
arpl
cmp
addl
jnp
xorb
cvtps2pi
andl
addl
cld
in
mov
mov
addb
bound
stc
add
add
addb
and
mov
shrw
andl
mov
addb
addl
stos
addb
addl
out
aas
dec
andl
test
jp
mov
bound
mov
and
dec
sti
jns
int
push
aam
adc
addl
nop

movsb
les
(bad)
mov
and
mov
push
sub
mov
andl
mov
testb
mov
add
das
pusha
add
add
orb
add
test
orb
dec
popf
pop
test
andl
jge
cmp
and
andl
scas
xchg
lcall
aas
mov
and
add
mov
loope,pt
push
or
andb
out
xor
or
repz
addb
add
jle
repnz
add
mov
ja
mov
imul
add
out
cmp
inc
fmull
test
mov
inc
xor
xchg
addb
addl
fwait

add
imul
fwait

inc
stos
and
xlat
xlat
mov
and
shr
lock
add
outsl
orb
and
aam
pop
movsl
sub
andl
das
jge
andl
out
pushf
(bad)
push
nop

mov
mov
add
cmp
sahf
pop
jl
adc
data16
add
addr16
int3
push
andb
andl
mov
andb
add
add
movsb
lret
movl
dec
dec
addl
dec
push
inc
jge
pop
int
lret
add
addl
bswap
into
push
and
andl
xchg
lock
add
and
lret
sahf
fiadds
sub
addb
mov
cmpsb
mov
add
sbb
push
scas
andb
andl
cmpsb
xor
dec
fisubs
xchg
andl
mov
andb
sahf
(bad)
sahf
jmp
shlb
andb
mov
and
sbb
mov
into
(bad)
lahf
add
or
cs
add
andl
xchg
mov
sbb
pop
lea
addl
imul
aad
fisubrl
popa
mov
mov
addl
les
and
outsl
(bad)
addl
andb
fldl
mov
frstor
mov
addl
mov
or
pop
sbb
addl
cmp
addb
mov
iret
call
push
mov
push
addl
js
xchg
cmpsb
add
sub
enter
cli
andl
addl
push
push
dec
frstor
mov
addb
cmp
(bad)
iret
add
add
xlat
mov
addb
call
inc
xchg
mov
mov
mov
pop
jle
push
xchg
call
andl
std
int
test
mov
andl
nop

xor
lret
enter
andl
push
sub
mov
add
sub
out
subb
andl
or
iret
jp
test
push
loope
out
ret
and
mov
out
adc
andl
addl
imul
mov
add
add
sti
lahf
cmpsl
popf
andl
add
add
mov
in
mov
dec
xchg
or
ret
adc
add
jmp
inc
push
orb
add
ret
test
cmpsb
out
addb
sbb
aad
cmp
iret
xor
andl
inc
andb
cmp
xchg
jge
inc
or
andl
cmovns
aas
int
subb
and
andl
xorb
add
jge
bound
imul
andl
add
mov
and
addl
dec
addl
addb
mov
fnstenv
mov
adc
dec
andl
addl
mov
andl
push
xorl
js
loop
dec
addb
andl
lods
outsl
outsl
mov
rorb
repnz
mov
mov
mov
jp
mov
mov
add
imul
scas
roll
or
xorb
add
adcl
and
mov
ret
and
fwait

add
mov
cmp
lahf
test
gs
inc
andl
addl
out
jg
jnp
cmp
mov
addl
mov
clc
out
xchg
pop
mov
andb
adc
sbb
mov
and
sbb
jg
sahf
mov
aas
orl
and
and
loope
or
addl
xchg
dec
inc
sub
xchg
mov
andl
out
orl
push
faddl
andb
hlt
sti
aas
out
push
adc
mov
addl
(bad)

xchg
sbb
andl
addb
sub
add
andl
mov
and
nop

andb
add
mov
mov
addl
addl
or
addl
je
sti
push
xor
clc
push
xchg
addb
addl
and
mov
je
leave
cli
es
pop
add
addb
fisubrl
imul
andl
orb
pop
andl
addl
push
push
scas
flds
addb
aam
or
or
add
add
push
lock
ret
lds
andl
mov
mov
ds
sti
mov
stc
inc
mov
mov
mov
mov
push
dec
test
mov
fadds
addl
andl
orb
mov
add
addl
push
out
xor
mov
addl
pop
fs
addl
fxch
testl
pop
xchg
in
pop
fcoms
add
add
roll
(bad)
mov
andb
mov
not
and
andb
xchg
hlt
mov
addb
add
in
(bad)
(bad)
loope
andl
ficomps
int
andl
(bad)
fmul
jmp
cmpsb
cmp
and
add
aas
inc
adc
and
andl
xorb
add
in
mov
add
push
ret
xor
cmpl
js
add
mov
cwtl
ljmp
addl
insb
xchg
fildl
nop

insb
push
in
dec
sub
mov
pop
sub
adc
push
rorb
jg
jo
addl
in
andl
add
mov
repz
ret
scas
fcompl
and
mov
inc
inc
or
mov
pop
dec
rorl
mov
mov
add
in
push
cmp
xchg
addl
cmp
mov
add
and
iret
mov
mov
addb
jmp
filds
add
ret
popa
js
sbb
rol
andb
sub
dec
popf
adc
sub
xor
cli
mov
addb
cmpsb
push
sub
push
fucom
jg
lock
andl
outsb
sub
andl
xchg
mov
xchg
(bad)
shll
andl
rorl
push
xorb
subl
and
add
sbb
add
sarb
sbb
and
addb
lea
addl
ret
(bad)
ret
(bad)
test
rolb
mov
addl
push
mov
mov
inc
mov
or
sbb
addl
stos
jecxz
scas
jge
mov
andb
add
mov
inc
popf
inc
loope
ret
and
andb
out
add
subb
andb
mov
iret
ds
mov
pop
loop
add
add
addb
sahf
ret
cli
(bad)
call
addl
add
test
pop
add
addb
sahf
xchg
addl
add
pusha
and
push
andl
addl
imul
mov
mov
addb
std
sub
mov
andb
mov
cli
mov
daa
jmp
subl
sub
cld
andl
adcb
xchg
test
addb
sbbl
mov
xchg
addl
sub
sub
sti
inc
xchg
test
xorl
jg
push
add
addl
and
mov
outsl
loop
imul
loop,pt
in
les
addl
mov
mov
adc
addl
test
js
jle
mov
andl
sub
outsl
andb
mov
lahf
int3
and
scas
lret
push
pop
push
addb
add
dec
ret
int
addb
cmpl
imul
lea
andl
or
xchg
jbe
mov
enter
addb
lods
sub
add
shrl
and
andb
adcl
xorb
add
faddl
inc
adc
xchg
sti
andl
sbb
mov
push
and
addl
shl
addb
mov
adcl
addl
xchg
sbb
in
sbb
xchg
scas
ret
mov
and
sahf
enter
addb
addb
andl
inc
xor
mov
mov
andl
(bad)
sahf
cltd
shr
sbb
rolb
addl
add
pop
lret
add
sub
cmp
mov
aam
mov
add
(bad)
lret
mov
xor
add
andl
inc
ret
pop
push
les
add
mov
adcb
and
jmp
or
andl
addl
jmp
lea
andb
orl
ret
roll
mov
andb
adc
sbb
or
popa
andl
mov
mov
add
andl
mov
faddl
addl
test
daa
sbb
mov
loopne
insb
cmp
mov
cwtl
iret
xor
arpl
mov
subl
addl
subl
addl
inc
andb
addl
push
nop

daa
dec
or
enter
cmp
xchg
add
andl
xchg
fsubl
mov
add
mov
adc
fiaddl
mov
nop

adc
call
andl
in
sar
add
andl
mov
xchg
xchg
mov
xorb
mov
and
mov
xlat
loope
mov
sbb
lods
add
addb
mov
push
cld
xchg
lea
addl
push
mov
adc
addl
ljmp
addb
xorl
neg
xchg
jo
shr
(bad)
xor
cmpl
addl
pop
mov
movsl
addl
mov
sbb
(bad)
mov
addb
mov
xor
lock
andl
fiaddl
addl
mov
fsubrl
aas
ret
andl
dec
imul
ja
mov
mov
and
loop
mov
arpl
jb
dec
cmpsb
adc
addl
(bad)
orl
iret
cmc
sbb
mov
addb
or
pop
test
repnz
addb
add
cld
movsb
pop
dec
dec
xchg
jno
int3
into
addl
addb
dec
mov
mov
add
fists
add
xchg
stos
subb
mov
add
in
pop
xchg
addb
andl
jmp
bound
addl
adcl
mov
mov
and
add
add
pop
ret
cld
mov
and
andl
int
test
xorb
add
cmp
pop
lds
add
adcl
jl
ljmp
mov
std
push
cs
pop
addb
mov
repz
adcb
mov
mov
addl
bound
sbb
addb
lds
mov
addb
addl
jmp
sbb
andl
test
cmp
mov
addb
and
mov
jae
xchg
orl
xorl
jnp
pop
(bad)
out
fisubrl
adc
andb
andl
jae
lcall
addb
dec
sbb
mov
jbe
and
add
push
js
andb
sbbl
dec
mov
addb
shll
dec
test
jmp
cs
test
faddl
andl
test
mov
add
and
sbb
andb
and
pop
popl
addb
jb
addl
mov
test
mov
stc
cmpl
pop
cmpl
adc
adc
adc
or
inc
sbb
xchg
addl
lds
and
xor
addr16
addl
xor
mov
mov
inc
and
test
ss
mov
addb
leave
cltd
shlb
loopne
into
insb
sbb
addl
xor
dec
imul
andl
mov
popa
addl
inc
mov
and
sbb
andl
add
aaa
xchg
or
adc
mov
addl
add
addb
jmp
inc
adcl
andl
pop
cmp
push
loopne
and
xor
gs
dec
xchg
push
mov
cmp
addb
push
dec
pop
std
xor
addl
and
addl
sbb
inc
sbb
pop
roll
mov
xlat
(bad)
pop
jae
addb
or
stc
xorb
mov
andl
dec
or
pop
call
mov
addl
andl
mov
and
(bad)
in
mov
clc
mov
addl
or
mov
addb
in
andb
dec
pop
cmp
cmpb
mov
addl
mov
lods
sbb
fldl
mov
arpl
movb
andb
sbb
lods
ret
imul
andl
test
addb
subl
lret
push
dec
fstl
andl
hlt
adc
xorl
and
add
sbb
outsl
addb
and
andb
mov
jbe
pop
pop
mov
addb
add
add
andb
addl
jbe
nop

and
clc
scas
sbb
in
pushf
and
addl
adc
stc
lods
mov
jmp
pusha
int
addl
popa
mov
push
addb
addl
fstl
cmpl
lods
mov
and
sti
push
pop
mov
lods
pop
push
fldcw
mov
mov
orl
mov
rcl
cld
rcl
test
sbb
xor
mov
mov
add
addb
or
mov
pop
xorb
add
pushf
mov
and
cs
ret
jecxz
add
mov
addb
(bad)
push
inc
imul
mov
sbb
mov
andb
addl
stos
andl
addl
iret
ljmp
addl
addb
stos
out
iret
add
and
mov
test
dec
xchg
xorl
and
mov
scas
loope
movsl
or
mov
adc
in
pop
and
add
test
lods
addl
xchg
add
mov
jg
or
addb
test
and
andb
addb
addb
int
mov
andl
sub
scas
andb
add
jp
mov
nop

cltd
leave
pushf
jl
mov
andb
mull
sbb
cmp
andb
mov
cli
pop
mov
xchg
addb
addl
andl
pop
mov
stos
(bad)
jp
sahf
adc
sub
addb
mov
pop
sbb
adc
andl
xchg
pop
push
fldl
int3
test
andl
addl
lea
addb
pop
mov
lss
mov
adc
addl
jmp
xchg
subb
fisttpll
addb
mov
andl
(bad)

pop
sub
jmp
xorl
mov
xlat
sub
mov
mov
andl
ds
mov
xorl
mov
mov
and
test
mov
addl
leave
xchg
sub
bound
mov
negb
xorb
mov
add
dec
lcall
addl
addb
orl
dec
lods
in
jbe
(bad)
shrl
mov
add
dec
inc
data16
sti
dec
add
push
popf
xchg
orl
mov
add
pop
ljmp
jecxz
addb
add
mov
mov
add
pop
andb
add
mov
mov
andb
add
sub
push
jl
pop
mov
addb
add
test
mov
and
icebp
pop
stc
(bad)
bound
adc
sub
jle
and
addl
mov
jmp
addl
test
ds
mov
stos
xchg
lods
addb
addl
loopne
jo
loope
inc
adc
addl
lods
loope
cmp
jecxz
addb
andl
jmp
testl
andl
jns
(bad)
aad
loopne
addl
add
mov
xchg
flds
and
addl
sbbl
and
stos
xorl
sahf
imul
pop
pop
or
pop
mov
and
cmp
nop

pop
in
dec
adc
mov
addl
scas
icebp
jp
push
rorl
pop
cmp
repz
and
mov
lcall
mov
andb
mov
repnz
andl
ss
sub
mov
daa
rolb
push
xor
andl
(bad)
fsubs
mov
xorl
cmp
addl
cmpl
and
mov
mov
addl
inc
pop
xlat
rcll
pop
fwait

stc
addl
nop

jb
outsl
sub
addl
sub
addb
sbb
addb
rorb
adcl
push
push
pop
mov
andl
out
inc
faddl
addl
xor
mov
and
stc
jmp
mov
dec
andl
daa
mov
cmp
imulb
andb
mov
pminsw
shll
fistps
mov
addl
add
js
andl
push
(bad)
icebp
in
mov
xor
push
mov
pop
add
addb
aam
addl
inc
mov
dec
mov
fwait

lea
mov
addb
pop
xor
lods
pop
sbb
xorl
fdivs
or
sbb
addl
and
andl
xor
addl
cmp
cltd
and
int3
xchg
mov
dec
bound
mov
and
pop
inc
xchg
loop
scas
imul
andl
enter
pop
ds
inc
cmp
mov
addl
subb
andl
mov
add
dec
add
mov
addl
mov
popf
cpuid
js
mov
addb
les
out
aaa
in
arpl
addb
add
(bad)
jge
cld
aam
or
mov
addl
mov
addl
subl
stos
push
stos
int3
addb
add
subw
pop
addb
cmp
add
js
fsubl
andb
mov
xorb
and
add
or
out
aad
and
and
andb
lcall
cmc
cmp
sub
addl
cmpsl
fsubrl
mov
add
repz
addl
add
pop
addb
mov
les
mov
addb
addl
cmc
orl
and
(bad)
pop
ljmp
mov
mov
cmpsb
(bad)
fdiv
call
pop
mov
andl
mov
xorb
lcall
addb
or
mov
add
cwtl
fstps
addl
add
andl
insb
mov
pop
add
mov
andb
cmp
add
fisubrs
mov
andl
addl
pusha
ret
cmp
andb
or
sbbl
andl
sbbl
not
andl
subb
jae
(bad)
add
and
(bad)
call
addb
pusha
dec
pusha
inc
pop
gs
adc
ja
nop

andb
andl
and
ficoml
mov
andl
mov
mov
popa
lcall
addl
scas
pop
mov
sub
addl
movsl
or
addl
sub
xor
fdiv
add
mov
into
insb
mov
andb
add
shrl
andl
mov
stc
pop
xor
mov
xchg
ljmp
xchg
adc
mov
addl
mov
pop
mov
addl
sbb
add
addb
cmc
sbb
mov
andl
pop
fidivrs
xor
pop
andl
addl
mov
andb
adc
addl
ret
jbe,pn
in
(bad)
into
stos
fadds
andl
adc
inc
mov
jno
andl
jg
addb
add
bound
lods
jo
mov
andl
es
andl
outsl
dec
mov
mov
in
mov
sbbl
add
addl
mov
jmp
and
mov
bound
add
test
mov
stos
in
andl
stos
pop
pop
cli
jno
adcb
mov
add
movsb
repz
andl
jne
loope
ret
andb
mov
loop
xor
ljmp
mov
mov
add
pop
icebp
mov
mov
addb
orl
fs
jne
sahf
jo
out
addl
mov
sbb
adc
andb
add
mov
pop
orl
nop

icebp
out
and
andb
mov
mov
mov
addb
add
imul
addb
pop
jnp
jno
xor
mov
pop
sbbl
addb
mov
sahf
cli
mov
add
push
mov
nop

dec
mov
and
test
dec
in
jp
cmc
xlat
jl
setb
add
dec
mov
(bad)
sbb
mov
dec
test
pop
mov
and
mov
xor
pop
bound
mov
add
jb
popa
popf
imul
add
addl
jbe
pop
pop
xorb
mov
add
cld
push
adc
outsl
cmpsb
jmp
loop
jmp
and
cmpb
sbb
jg
mov
in
sahf
addb
andl
addl
mov
addl
test
cmpsl
rcr
mov
and
or
xorl
adcb
into
bound
andl
push
stos
sti
xor
sub
stos
aam
addl
das
arpl
inc
addl
andl
aam
fmull
addl
test
adc
cli
ret
addl
fdivp
add
lahf
or
aas
cmp
std
mul
fisubl
addl
jp
pop
mov
mov
push
add
andl
cltd
stos
mov
insb
stos
in
push
andb
add
arpl
cmpsl
leave
repz
and
addb
dec
dec
fcomps
sbb
xchg
cmpl
popf
pop
addl
sbb
xchg
movsb
or
xchg
fstps
mov
addl
andl
mov
xor
mov
add
addb
(bad)

andl
pop
sub
sub
andl
addl
add
mov
addb
subl
addl
call
out
sbbl
andl
pop
jmp
adc
adc
add
je
out
jmp
subl
addb
jl
pop
in
das
inc
mov
xchg
and
andl
cmp
out
xchg
loope
dec
je
shll
add
mov
fwait

sbb
andl
inc
inc
or
addb
pop
test
scas
sbb
mov
(bad)
(bad)
ficomps
mov
add
leave
addl
test
andl
adc
andb
mov
lea
rorb
addb
add
incl
mov
gs
cltd
sbb
dec
mov
cmpsl
addl
addl
mov
and
add
mov
sarl
and
andb
subb
xorb
add
inc
xor
pushf
sbb
add
xor
ljmp
addl
movsb
scas
addb
mov
pop
orb
lret
mov
mov
nop

xor
mov
sub
mov
aaa
addl
sbb
cwtl
shll
andl
sbb
subl
andl
lret
shr
xchg
cmpsl
jge
test
into
inc
xorl
mov
jo
popa
xorb
add
mov
fsub
andb
andl
fisubl
jecxz
mov
pop
mov
addb
jp
(bad)
pop
mov
push
loopne
andl
addl
cmpsb
pop
enter
xlat
addl
popa
sbb
adc
rcrl
addl
cld
int
adc
int
ret
addl
xchg
int
add
mov
addl
roll
mov
cmpl
pushf
mov
andb
andl
pop
test
rclb
andl
mov
imul
movsb
int3
loope
addl
pushf
mov
jno
addl
sbb
(bad)
mov
mov
mov
cmp
inc
inc
frstor
add
xchg
nop

pop
stos
bound
addl
pop
imul
inc
adc
pop
andl
jbe
bound
dec
hlt
outsb
pop
(bad)
adc
andb
mov
or
loop
lds
cmp
addb
addl
mov
addl
push
stos
xchg
inc
fimuls
lock
mov
andl
sbb
pop
cmpsl
jle
mov
test
add
mov
jae
sbb
fndisi(8087
andl
addl
adc
addl
pop
fildl
dec
adc
add
add
cmpl
addb
jne
ljmp
lds
pop
andl
pop
add
orl
subl
cli
scas
lea
mov
andl
or
ds
movsl
aad
andl
lcall
lcall
pop
add
addl
xchg
inc
insb
(bad)
lcall
addl
out
or
xchg
lret
add
andl
adc
in
and
ret
push
addb
add
adc
adc
test
add
pop
addl
addb
xor
rcrb
fstps
mov
andb
sbbb
std
les
addl
rcrl
and
addb
adcl
int3
inc
xchg
test
andl
or
mov
and
add
and
pop
add
lea
dec
mov
andb
lret
and
jbe
xorb
add
pop
aaa
ljmp
and
scas
outsl
repnz
cmc
xchg
inc
xor
andl
addb
test
mov
xorl
mov
pop
out
inc
sbbl
subb
xorb
clc
pop
mov
addb
xchg
xorb
(bad)
(bad)
cmp
fs
addb
andl
pop
mov
mov
andl
popa
test
jne
push
mov
mov
add
test
xor
addl
in
mov
andb
andl
mov
cmp
add
mov
and
insb
js
pushf
cmpl
loopne
pop
stos
add
andl
addl
cwtl
xchg
cmpsl
addl
sub
sub
andl
adc
xchg
inc
push
sub
mov
mov
int3
ret
xchg
mov
add
add
andl
cli
movsb
add
xchg
dec
into
mov
flds
andl
in
cmpsl
shl
dec
pop
cmpsb
scas
inc
sbb
addb
mov
mov
fldl
movsl
mov
and
addb
push
and
addr16
andb
fidivrs
add
cmp
or
addl
pop
neg
(bad)
mov
andl
fldl
scas
add
andl
andl
movsl
pop
jb
insb
lock
inc
and
lea
aas
rolb
addl
clc
and
dec
mov
mov
andl
fdivrs
mov
addl
addl
pop
push
sbbl
andl
repnz
mov
pop
addl
andb
stc
pop
orl
andl
addl
insb
pop
mov
fs
cmpl
addl
rcrl
xorl
pop
xor
in
dec
pop
add
add
ljmp
aam
or
andl
sub
cs
andl
lret
div
push
movsl
hlt
ret
mov
addb
adcl
push
add
rolb
andb
fcom
mov
frstor
andl
xchg
mov
or
andl
andl
addb
cmpsl
orl
mov
cld
mov
stos
lahf
andl
fldcw
addb
add
xchg
jno
andl
addl
addb
enter
cmpb
xlat
ja
pusha
mov
andb
mov
ret
add
cmp
cmc
addb
add
pusha
mov
addb
add
mov
addl
or
sarl
mov
xchg
mov
and
add
mov
and
andb
andb
stos
addl
addl
(bad)
mov
addl
mov
orl
stc
stos
sub
add
daa
adc
mov
addl
shl
shlb
and
add
addl
(bad)
mov
jae
shll
andl
pop
andb
addb
andl
lret
and
mov
adcl
xor
mov
mov
add
dec
or
add
xorb
add
cmpsl
add
mov
add
or
das
inc
add
mov
add
cltd
fadds
dec
lock
out
repz
push
add
xchg
jecxz
loop
push
inc
xchg
mov
andb
or
insl
jl
test
andb
ret
(bad)
and
and
aam
inc
mov
mov
and
addb
jecxz
movl
and
and
loop
ret
push
ds
addb
mov
xor
out
mov
and
add
(bad)
out
orl
andl
xchg
andb
arpl
xor
(bad)

negb
or
addl
mov
mov
mov
rolb
int
fsub
addl
andl
imul
mov
test
and
mov
add
mov
mov
andl
pop
cli
loope
icebp
out
dec
or
push
push
filds
andl
mov
test
xor
int
stos
insb
mov
addb
adc
fiaddl
xlat
test
andl
jl
in
orl
addl
cli
mov
jecxz
insl
jo
leave
ss
addl
popa
test
push
mov
add
or
and
add
pop
cmpl
daa
xorl
mov
sbb
fldenv
subl
add
add
mov
adc
xor
addb
mov
repz
daa
xor
andl
addb
orl
dec
mov
xorb
mov
inc
in
xchg
cmpsb
ret
mov
mov
addl
xchg
int
push
jbe
lea
jecxz
add
addl
and
mov
mov
xchg
cmp
mov
addl
fisttpll
xchg
int3
hlt
jno
andl
leave
push
add
fwait

ret
pop
pushf
adc
add
add
lds
icebp
mov
addl
cmp
mov
insb
rolb
andl
cmp
fstpl
addb
cmpl
insl
adcl
jno
out
cmp
andl
xchg
and
mov
test
andl
push
add
xorb
test
sarb
add
add
flds
jmp
mov
addb
add
dec
dec
mov
sahf
mov
aas
lock
inc
jge
andl
inc
loopne
int
mov
lahf
mov
(bad)
and
addl
pop
sub
mov
mov
and
addl
addb
addl
test
sbb
mov
mov
addl
fwait

add
xchg
cmp
pop
addb
andl
movsl
cli
xor
and
mov
insl
dec
sti
inc
dec
cld
mov
mov
add
add
inc
mov
mov
loope
or
xorb
add
xchg
cmp
adc
add
andl
adc
or
mov
cmpb
fiadds
popa
mov
in
mov
addl
mov
mov
push
shlb
add
addb
xchg
lea
cmp
push
nop

mov
andb
int
xor
andl
fmull
dec
and
fiadds
aad
add
and
das
test
sbb
insb
sub
leave
adc
addb
mov
imul
cmp
loop
test
mov
jg
push
out
lcall
andl
jp
pop
adc
test
mov
addl
xchg
fwait

adcl
addl
pop
push
(bad)
fst
sub
inc
(bad)
adc
mov
out
cltd
mov
addb
mov
mov
mov
and
or
mov
add
mov
jne
add
sub
andb
data16
jle
andb
mov
inc
pop
iret
shl
push
add
or
dec
fsubs
ficomps
addb
addl
push
dec
andl
(bad)
out
pop
xchg
nop

imul
cltd
or
addl
jae
mov
adc
aaa
je
mov
addl
lea
mov
mov
addb
mov
lea
inc
inc
xorl
sub
inc
test
add
add
mov
push
andl
and
sbb
add
(bad)
adc
insb
sub
addb
cmp
push
roll
xorb
mov
inc
(bad)
aam
adc
push
pop
out
andl
dec
in
(bad)
mov
fadds
out
xchg
es
fadds
andl
sbbb
mull
addl
ds
xlat
and
and
lock
(bad)
icebp
mov
mov
add
adc
xor
xchg
mov
cmp
xchg
mov
andb
mov
sub
mov
add
movsl
int
daa
sbb
andl
test
xchg
jbe
xchg
xor
in
andl
cmp
mov
clc
pop
fiadds
std
mov
and
add
leave
mov
js
adc
and
andl
lea
mov
addl
orl
and
cmp
pop
mov
fnstcw
or
addl
add
mov
inc
ror
sub
enter
and
sbbb
stos
sbb
add
addl
jne
lahf
es
push
dec
fsubl
addl
scas
sub
pushf
(bad)
mov
addb
andl
sbb
sub
cmp
in
lock
and
mov
jne
mov
sub
mov
mov
add
out
cwtl
mov
cmp
jecxz
cmp
addl
mov
mov
andb
andl
mov
and
cmpsb
cmp
mov
mov
jge
cmp
andl
addl
jbe
jecxz
xchg
shlb
add
addb
out
add
mov
andb
pop
sub
mov
and
adcb
arpl
cmpb
scas
mov
and
and
mov
cmp
in
addl
mov
int3
xchg
andb
andl
sub
andl
cs
lds
mov
addl
roll
nop

xchg
out
fisttps
addl
xchg
sti
stc
xchg
inc
scas
mov
mov
xchg
outsl
mov
cmpsl
dec
add
andl
xchg
lods
jb
iret
mov
addl
xchg
andb
xor
addl
and
sub
outsl
cmc
subl
mov
addl
mov
addl
cmp
addl
nop

pop
inc
xchg
(bad)
fcompl
adc
mov
andl
rcll
mov
sub
mov
mov
cmpsl
mulb
mov
mov
mov
addb
adc
std
mov
inc
(bad)
pop
add
add
lcall
stos
pop
cld
addl
into
jge
ret
andl
mov
popw
in
mov
mov
mov
bound
roll
adc
lods
xor
xchg
or
xorb
mov
or
cwtl
mov
repnz
sbb
xorl
cmp
or
andl
jmp
subb
jp
and
mov
int
addb
test
xchg
andl
aas
rol
cmp
outsb
mov
pusha
fidivs
push
addb
add
movsl
or
add
add
testb
andb
iret
or
mov
xorb
mov
add
adcl
mov
sub
andl
notb
pop
adc
mov
or
cmp
mov
addb
mov
arpl
jle
sahf
das
cltd
and
andb
jl
jmp
lock
addb
add
mov
in
and
fwait

andl
lods
lods
fdivl
xchg
and
addl
pop
fidivrs
mov
fbstp
sub
addl
repnz
addb
addl
stos
lds
mov
addb
or
mov
mov
addl
lcall
andl
repz
aam
mov
aad
mov
addl
add
faddl
adc
sbbl
mov
jmp
add
out
xchg
and
jns
insb
shrb
test
daa
int
xlat
mov
add
mov
cmpb
add
push
mov
addl
stc
xchg
les
mov
addl
ret
xchg
jecxz
rolb
mov
mov
andb
jnp
cmc
mov
fimuls
addl
push
sbb
and
aad
andl
and
addl
andl
(bad)
jnp
jmp
scas
movsl
int3
inc
subl
mov
ljmp
movsl
inc
and
addb
frstor
movsb
addl
push
js
popl
jne
sub
sbbl
addl
sbb
and
cmpsb
cmp
daa
mov
addl
pop
stos
into
cmc
xchg
add
addl
cmp
push
fstl
popf
aas
andb
add
sbb
mov
sbb
in
add
andl
cwtl
lahf
aaa
xor
fists
addl
mov
xchg
repnz
jae
mov
mov
jnp
fldcw
cmp
addb
movsb
cmc
xchg
add
(bad)
jle
scas
nop

ja
and
mov
mov
mov
aaa
adc
add
addr16
lcall
andl
addl
add
xorl
xorl
in
addl
mov
fisttpll
mov
sti
addl
das
shrb
andl
aaa
and
mov
sbb
xorl
js
dec
mov
xorb
mov
mov
andl
out
fcmovnbe
and
xor
shl
xorl
addb
popa
push
fstpl
movsb
mov
addl
or
push
push
add
mov
andl
addl
add
cmpb
cltd
or
mov
test
fwait

sub
ret
adcl
addl
adc
notb
cmp
andl
sub
mov
cmpl
aam
and
movb
and
or
mov
or
and
add
sbb
and
andb
rclb
adc
neg
add
mov
addl
ljmp
les
popf
andl
addl
addb
fcomp
pop
mov
addb
mov
xlat
push
mov
add
or
rclb
js
dec
clc
fbstp
mov
(bad)
mov
and
jae
or
addb
andl
mov
sub
andl
mov
dec
or
sbb
mov
mov
add
cld
cmp
in
push
xorb
sarb
add
fs
dec
lods
ret
insb
movsb
in
push
cwtl
aam
sub
sahf
andb
andl
movsb
xchg
dec
adc
addb
sbb
cmpsl
ja
addb
pop
xor
add
or
jmp
movsb
addl
cmpsb
aam
in
fsubrp
mov
andb
cmpb
andl
popa
jmp
dec
fdivrl
movsl
mov
add
and
lcall
decb
addb
mov
loop
or
mov
sbbl
test
into
add
andl
incb
mov
pop
jge
ret
cmpsl
and
add
mov
ret
push
or
orl
addl
fsts
addb
dec
scas
into
scas
js
test
insb
jmp
(bad)
lahf
imul
andl
cmc
push
bound
pop
push
scas
andb
add
in
clc
cs
aas
test
adc
addb
rorl
call
xchg
dec
mov
addl
addb
addl
mov
addl
xchg
into
cmp
shlb
andl
es
fldlg2
cmpsb
addl
push
sahf
or
cmpsb
clc
andl
addl
mov
mov
addb
xorl
mov
add
add
cmp
adc
loopne
addl
cwtl
jo
cmp
out
int
shrb
addl
jp
addb
subl
cmp
cmp
pop
ret
xorb
mov
mov
andl
outsl
insl
xor
xchg
cmovge
outsl
repz
add
addl
mov
and
mov
out
cld
sbb
sahf
nop

fsubrs
push
outsb
mov
insl
push
andl
mov
test
popa
adcb
addl
std
push
cmova
lret
inc
sub
adc
stos
addl
addb
or
fadds
andb
mov
push
xchg
lcall
mov
add
test
popf
and
popf
xchg
mov
mov
push
js
jge
andl
jg
iret
jnp
inc
cmp
addb
fldenv
dec
inc
pop
jg
jne
and
andl
(bad)
adc
sbb
mov
addb
add
add
pop
pop
sub
inc
lds
add
andl
push
cld
fbld
addl
add
mov
fsts
addb
mov
mov
push
addl
outsl
mov
(bad)
aad
frstor
addl
add
jp
out
addb
andl
inc
adc
scas
sbb
andl
call
adc
add
mov
icebp
adc
pop
repz
add
jp
sahf
lds
outsb
mov
addl
les
xor
cmp
xchg
addb
adc
int
cmp
and
andl
addl
fnstsw
pop
lea
addb
mov
mov
mov
mov
add
push
sahf
pop
mov
test
sub
enter
andb
and
lret
insl
jge
add
addb
mov
std
test
and
add
cmpsb
mov
andl
mov
mov
addl
outsb
push
cltd
fisubrs
mov
addl
pushf
leave
mov
je
repnz
mov
fisttps
dec
lods
xchg
xchg
addb
mov
test
aad
nop

or
addl
mov
mov
addl
daa
sbbl
(bad)

shrb
andb
mov
mov
in
adc
pop
pop
adcb
mov
imul
lret
stc
cwtl
xlat
adc
addl
mov
repnz
cmp
fisubs
addl
out
pop
movsb
shr
xchg
sub
andl
testb
mov
filds
addl
sub
addl
sbb
jno
cli
ljmp
andb
les
cmp
in
addl
pop
(bad)
mov
jbe
andl
cltd
(bad)
lea
mov
roll
test
adc
cli
add
test
out
insb
jb
nop

xorb
mov
inc
(bad)
frstor
cmpl
mov
in
xlat
add
inc
add
addl
mov
push
and
mov
popf
mov
add
jb
push
add
mov
addb
les
cli
das
nop

sub
pop
mov
add
push
test
fdivrp
inc
inc
addl
addb
lea
mov
shrb
push
subb
mov
addl
out
mov
repnz
addl
(bad)
or
sbb
cmpl
andl
addl
cmpl
addl
jp
pop
inc
rorb
inc
punpckhwd
adcb
mov
addl
setg
test
or
addl
sub
enter
cmp
mov
add
dec
(bad)
test
jp
sub
lea
addl
add
loopne,pn
push
xchg
and
adc
testb
andl
in
xchg
mov
sbb
mov
mov
mov
and
push
sbb
andl
and
jecxz
(bad)
into
stos
sub
andl
repz
test
in
mov
mov
add
in
xorb
add
and
dec
clc
int
int
jp
addr16
andb
andl
andl
mov
push
add
mov
adc
call
fisttpll
jle
andl
addl
fwait

mov
repnz
mov
addl
mov
fs
(bad)
shrl
andl
subl
mov
mov
and
xorb
adc
pop
das
js
andl
lods
jg
jmp
addb
mov
(bad)
or
push
xchg
mov
data16
cmpsl
and
sub
addb
in
push
andl
add
push
xchg
test
imulb
mov
addl
(bad)
mov
add
addl
sbb
pushf
ret
jno
add
andl
cmpsb
jmp
sbb
nop

andb
add
mov
mov
addl
xorl
mov
shll
pop
test
xor
mov
addl
lahf
mov
in
mov
andl
and
mov
add
addb
dec
cld
(bad)
cmc
inc
addl
popf
fstl
pop
andl
addl
in
mov
inc
rclb
addl
rorb
repnz
add
add
gs
adcb
loop
addb
adc
in
jo
xchg
test
cwtl
movl
cmp
addb
subl
mov
andl
xchg
dec
xlat
mov
(bad)
mov
addl
lea
cmpsb
push
sub
add
addl
xor
addl
sub
push
stos
lods
or
mov
mov
addb
cmp
cmpb
andl
pop
xorl
addb
std
ljmp
movsl
andb
mov
pop
cmpsb
into
adc
jb
in
popf
inc
addb
add
lds
addb
cmpl
mov
sbb
andl
incl
xchg
cmc
lods
inc
mov
and
add
in
mov
cld
lret
and
andb
imul
cmc
sbb
shl
push
mov
addb
add
movsb
add
and
push
inc
inc
cwtl
repnz
mov
call
add
jp
adc
adc
mov
std
cmp
or
addl
pop
lock
mov
mov
mov
in
aam
push
jp
mov
and
call
stc
xorl
add
adc
ss
rcll
addl
push
fmull
pop
push
(bad)
insb
mov
mov
add
push
xorb
add
imul
add
(bad)
mov
mov
mov
orb
gs
or
roll
addb
dec
fnstcw
jnp
add
addb
mov
push
mov
and
cmp
dec
mov
pusha
pop
ret
addl
fsubrs
andb
and
test
pusha
addb
mov
sub
or
add
mov
pop
loopne
sub
pusha
fsubs
and
addb
cmpsb
lods
addl
out
cmpl
addl
mov
xlat
sbb
addl
enter
addb
mov
dec
or
add
test
gs
andb
add
mov
addb
fnstsw
and
xchg
addl
lods
fstl
cmpsb
lock
addl
jb
sbb
les
addl
sub
out
sbb
add
addb
push
mov
addl
sbbl
andl
addl
cmp
mov
andb
or
in
sub
addl
cs
pop
cmpl
andl
das
sti
loopne
fdiv
pop
add
andl
xchg
lds
sbb
mov
addb
addl
mov
rorl
addl
mov
cmp
xorl
sbb
inc
(bad)
and
andl
mov
mov
fst
cmpsb
add
addl
jmp
cs
andb
or
addl
cltd
pop
mov
push
andl
andl
cmpsl
or
and
add
add
sbb
mov
andb
ret
pushf
add
test
add
addl
xor
les
mov
out
add
das
sbbb
andb
add
sub
jns
mov
addb
inc
call
loop
mov
andb
mov
scas
add
addb
jmp
xorb
add
and
loope
dec
hlt
sub
addl
dec
pushf
test
add
mov
addl
add
loope
nop

pushf
cmpsb
cmc
addb
mov
or
and
cwtl
mov
mov
mov
push
sbb
aaa
adc
mov
and
or
ds
test
or
xor
fiadds
add
dec
movsb
jo
sbb
andl
xchg
mov
mov
cli
loope
inc
in
addl
add
xchg
mov
xorb
add
mov
popa
xor
jns
outsl
mov
add
addl
push
and
xchg
cmpb
mov
andb
stos
andl
addl
adc
push
addl
pop
xchg
add
pop
ja
inc
mov
out
mov
andb
add
add
jno
movsb
sub
cmovp
mov
and
adcb
adcb
movsb
jae
xchg
stc
rolb
mov
addl
jmp
xchg
scas
addb
mov
or
mov
andl
mov
mov
push
and
addb
mov
add
popl
addl
or
cmpsl
es
mov
addl
stc
daa
int
andl
out
mov
push
ds
addl
cmp
ljmp
mov
add
mov
xor
hlt
adcl
add
push
sub
xor
jge
andb
mov
bound
xchg
fildl
addb
jp
and
sbbb
rolb
addl
rol
adc
push
adc
andl
lods
stos
dec
movsb
addl
jecxz
xlat
mov
push
sub
mov
push
je
push
and
xchg
cmp
addl
and
or
andb
lods
fwait

xor
out
xchg
les
andl
cltd
sub
je
andl
pushf
jp
cld
leave
pop
xchg
xorl
pop
(bad)
mov
push
test
xorb
mov
pop
inc
imul
leave
sbb
pop
andl
hlt
clc
pushf
scas
int
xchg
andl
and
jp
mov
addl
mov
dec
ret
mov
inc
testl
addl
stos
stos
mov
push
stos
addb
add
mov
cli
stos
addl
addb
int3
fs
scas
xor
xchg
aam
andb
mov
enter
xchg
mov
ret
addb
add
xchg
add
nop

and
addl
sarb
call
addl
addb
cmpl
andl
(bad)
scas
arpl
adc
and
andb
xor
lock
xorb
add
cmp
mov
andl
les
jnp
and
addl
jbe
mov
and
test
sub
sti
adc
push
jo
insb
fwait

addb
addl
inc
bound
mov
sbb
mov
addl
test
addb
sub
addl
in
mov
andl
or
js
mov
jne
fisubs
addb
mov
mov
add
adc
popf
sub
cmpb
orb
mov
mov
add
fisttpll
and
adcb
push
inc
sbb
addb
and
sbbl
rcrl
mov
addl
mov
pop
loopne
or
cmpl
andl
addl
out
fstl
jae
andl
mov
lret
repnz
loopne
jmp
andl
ljmp
addb
mov
mov
subb
mov
jbe
and
add
imul
and
addb
cmpsl
adc
mov
jg
jb
nop

sbb
mov
addl
pop
adcl
addb
xor
mov
xchg
xchg
mov
mov
add
xchg
in
add
andl
in
jne
and
dec
push
mov
add
mov
int
jno
aam
(bad)
ljmp
addl
mov
mov
xor
daa
nop

mov
andl
mov
(bad)
popa
mov
mov
addl
fldl
addl
scas
push
add
addb
pop
and
andl
(bad)
lcall
addl
addl
fldl
addb
pop
fldl2t
push
sbb
xchg
sbb
in
add
add
jno
pop
scas
jns
roll
andl
idivb
add
add
subb
sbb
fnstsw
nop

addb
andl
adc
sti
addb
andb
xor
sbb
inc
and
mov
addl
xchg
nop

xor
andl
mov
es
mov
addl
sahf
fcmovnu
add
xor
andl
outsb
in
test
hlt
and
loopne
sub
addl
xchg
popa
addl
addb
fldl
les
add
add
addb
add
pop
pop
arpl
faddl
mov
jecxz
adc
paddq
addl
xor
andl
adc
and
add
enter
push
lods
syscall
pushf
and
andb
aam
jle
dec
mov
cmp
gs
out
mov
mov
addl
in
out
cmp
adc
and
lret
sbb
stos
andb
mov
cmpb
add
xchg
mov
cmc
inc
movsl
ljmp
dec
incb
lods
addb
mov
aad
test
mov
mov
mov
ja
addl
mov
push
pop
jne
aam
cld
sbb
subb
addb
andl
and
mov
iret
sahf
add
in
imul
mov
add
mov
aad
loop
stos
push
addl
sbbl
loopne
clc
push
and
andb
andl
test
and
addb
xor
ret
out
incb
inc
mov
pop
andl
addl
shlb
loope
clc
push
pushf
popl
and
out
cmp
repnz
and
mov
andb
mov
andb
mov
xchg
mov
push
add
and
cmp
xor
addb
mov
mov
out
and
add
scas
imul
movsb
and
addb
popa
mov
jne
orb
addl
outsb
sub
add
mov
xlat
mov
addl
or
mov
xor
addl
out
mov
out
int
repnz
addb
icebp
lods
pop
push
cli
dec
andb
add
shll
cmc
andl
dec
pop
xchg
in
movsb
stos
call
andb
mov
fsts
rorb
andl
inc
xor
pop
andl
out
aaa
es
cwtl
add
addb
cmp
sbb
pop
dec
andl
addb
sub
das
push
loop
in
andl
addl
mov
andb
cmpl
aas
xchg
das
inc
inc
add
add
fnstsw
pop
sahf
or
shll
mov
in
pushf
jmp
pop
rorb
stos
andl
sbb
cmc
and
xor
fstps
addb
xorl
mov
addl
andl
adc
nop

xchg
add
andb
mov
and
clc
jecxz
jcxz
adc
addl
add
cmp
sub
addb
mov
gs
add
cmpl
mov
addb
add
in
jne
shll
adc
addb
push
addl
addb
cs
pop
andb
mov
int
pop
(bad)
leave
roll
mov
andl
and
mov
out
xchg
cld
mov
addb
orl
bound
andl
sbb
mov
jecxz
mov
mov
and
add
jb
and
andb
xor
pop
(bad)
addb
add
(bad)
fstps
mov
add
int3
jmp
mov
dec
popf
fldt
add
faddl
fildl
lahf
push
add
fdivp
test
addb
mov
cs
addb
addl
mov
sub
movsl
fwait

popf
mov
and
sub
andl
lock
mov
xlat
cs
lahf
addb
andl
loope
cmp
adc
and
mov
inc
sbb
ret
push
cmp
sbb
fldt
sbb
xorl
fldl
test
mov
push
test
iret
cmpsl
clc
andb
andl
int
jnp
testb
addb
push
push
loope
sub
mov
addl
les
insb
sti
int
mov
andb
addl
(bad)
repz
out
or
mov
andb
sub
pusha
roll
les
andl
push
pop
popf
push
adc
cmc
mov
addl
mov
addl
mov
add
fldl
lcall
mov
or
and
mov
andl
or
or
(bad)

andl
rolb
je
cltd
mov
add
(bad)
fisubrs
pop
ljmp
addb
aam
xchg
stc
dec
into
sar
imul
xor
stos
push
xchg
mov
mov
lcall
cmpsl
add
andl
mov
sbb
roll
leave
andb
add
lea
out
xor
adc
mov
mov
arpl
out
adc
addl
sbbb
stos
cmpsb
pop
dec
addb
addl
test
push
test
mov
addl
int
and
xor
addb
mov
mov
addl
ds
hlt
andl
addl
mov
mov
addb
sub
cmp
addl
push
add
andl
andl
addl
sub
jmp
mov
aam
nop

adc
xorb
mov
mov
cmp
push
andl
mov
xchg
sub
mov
addb
lcall
add
out
cwtl
pop
andl
popf
fiaddl
mov
pop
stos
int3
addb
add
mov
mov
xchg
cmp
mov
add
cmc
ret
cli
xlat
fwait

shl
andb
mov
int3
test
lret
cwtl
test
add
addl
xchg
sti
or
adc
andl
fistpll
pop
xchg
mov
addr16
mov
add
xchg
cmp
and
add
mov
and
andl
pop
rol
adc
repz
sub
addl
pmulhw
repnz
and
cmc
andl
pop
int
push
cli
popf
int
addl
add
xchg
jb
xchg
lods
ret
and
das
sub
andl
sub
sbb
call
add
addl
lods
in
ss
jg
sub
addb
ficomps
iret
fdivs
addb
andl
andl
nop

in
mov
stos
mov
mov
add
movsb
or
mov
stos
test
xor
xorb
add
push
push
cli
ret
push
cmpl
andb
andl
nop

lcall
addl
sub
push
cld
andl
addl
lods
addl
cwtl
cmpsb
sbb
sub
xorb
xchg
mov
andb
daa
pop
or
xor
shll
aam
and
andb
subb
in
xor
flds
andl
sahf
jo
in
dec
fwait

mov
lea
incb
addl
cmp
sbb
push
cwtl
fiadds
mov
cld
int
and
inc
or
les
loope
into
xchg
outsb
and
addb
and
addl
sub
mov
addl
nop

call
stos
xor
jmp
andl
xor
rcrb
add
andl
cmp
addl
addr16
lahf
xchg
pop
js
mov
addl
lods
lcall
jnp
aaa
jnp
dec
mov
mov
pushf
outsl
scas
mov
addb
addl
stos
add
pop
sub
mov
addl
dec
cwtl
inc
pop
ds
mov
addl
or
mov
addb
xor
aam
and
subb
inc
stc
xorl
cmp
in
mov
test
addl
xor
and
addl
or
(bad)
pop
xorb
nop

mov
mov
mov
lods
adc
xorl
pop
ja
mov
arpl
sub
xorb
mov
and
adc
push
dec
pop
rcr
mov
addl
pop
add
mov
andl
xor
add
cltd
cmp
and
mov
aaa
dec
(bad)
repnz
data16
ficoml
iret
test
jo
mov
stc
andl
int3
fisubrs
fldl
add
sti
aaa
movsl
xchg
mov
mov
cmp
andl
jb
not
mov
outsl
test
mov
andb
in
out
addb
add
test
pop
xor
andl
xchg
repz
nop

cmc
addl
lea
mov
ljmp
add
mov
imul
cmp
lock
xchg
and
andb
pushf
insl
(bad)
sbb
lods
repz
and
orl
addl
ret
rorl
andl
aas
jg
jmp
addl
add
sbb
mov
addl
cltd
cmp
add
addl
loopne,pt
lods
andl
addb
loopne
loop
inc
ja
subl
mov
mov
jg
and
mov
add
push
sbb
test
pop
mov
mov
add
mov
aas
inc
outsl
adcl
add
and
push
jns
shll
jnp
daa
in
mov
add
lock
add
mov
addb
das
xor
sbb
addr16
and
addl
addl
outsl
jmp
pop
mov
dec
mov
and
aam
inc
scas
out
addb
and
xorb
pop
push
shll
cmc
mov
andl
adc
dec
(bad)
bound
int
addb
mov
mov
outsl
into
mov
and
add
cmp
or
adc
addb
icebp
jge
shr
cmpsl
add
addl
add
adc
addl
(bad)
and
adc
mov
int3
adcl
mov
test
(bad)
aam
xchg
add
andl
ljmp
ja
stc
jecxz
andl
and
out
push
push
adc
lea
andl
stc
xor
andl
mov
in
addb
addl
or
addl
out
test
sub
add
addb
xor
add
adc
addl
js
(bad)
js
adc
addl
rcll
stos
lea
xorl
in
xchg
or
fcomps
loopne
repnz
add
add
mov
cmp
add
pop
addl
xchg
mov
mov
mov
add
mov
rol
addb
adcl
jecxz
stos
incb
addl
incl
mov
andb
mov
push
xor
cmc
icebp
cmpsb
pushl
mov
and
or
ss
and
mov
lds
mov
andl
in
(bad)
jge
inc
xchg
stos
mov
addl
xlat
nop

adc
mov
loopne
mov
addl
addb
(bad)
testb
lea
adc
pop
andb
mov
cmp
mov
popf
clc
mov
add
addl
fcoml
jge
sbb
mov
mov
xchg
andb
imul
mov
and
add
mov
in
and
andb
cld
mov
jne
inc
pop
lods
dec
mov
addl
testb
sub
ds
mov
add
or
addl
add
xlat
push
loopne
sub
adc
mov
andl
sbbb
incl
xor
std
jg
jbe
addb
addl
inc
add
pop
movsl
or
addl
cmc
lock
push
clc
inc
nop

addb
andl
xor
ret
jge
add
mov
addl
cmp
cld
mov
mov
add
cmp
data16
mov
dec
add
xchg
insb
test
addl
lret
adc
inc
cld
stos
and
addl
call
push
add
mov
andb
xor
aad
andl
addl
dec
add
add
jae
addl
mov
mov
andb
repz
lock
sti
andl
bound
pop
add
and
pop
loop
jbe
addl
clc
cmpb
sbbl
addl
out
iret
out
mov
addl
mov
jle
lea
addl
add
in
das
ds
shlb
iret
fistl
addl
test
insb
testl
andl
sahf
cltd
sub
call
mov
add
inc
andl
dec
andb
add
jg
add
mov
addl
push
movsb
xor
adc
fldl
andl
adc
cmpb
adc
addb
addl
daa
mov
addb
clc
sub
leave
sbbb
andl
adc
das
adc
adcb
dec
addl
mov
insb
mov
test
sti
and
andl
addl
mov
andb
mov
ret
jle
faddl
addl
adc
js
imul
jmp
addb
fldenv
pop
inc
jmp
scas
ret
pop
andl
sbb
jnp
addb
adcl
mov
and
add
sub
andl
jns
andl
roll
mov
mov
das
add
addl
mov
addl
insb
cmp
addb
in
ds
outsb
xchg
mov
addl
shrb
sub
add
add
ds
movsb
push
stos
and
or
add
orl
add
out
mov
pop
cmp
addl
add
addl
cmc
adcb
xor
mov
and
add
cmc
xchg
jge
imul
mov
roll
lret
mov
addl
andb
andl
jae
sub
addl
add
xor
imul
mov
lret
fs
pop
in
xor
addb
addl
pop
add
cmp
andl
fdivrl
popf
push
addb
andl
mov
sub
mov
andl
add
jno
loope
leave
pushf
addr16
mov
mov
add
pop
popl
jmp
xorb
add
mov
pushf
shll
xor
mov
add
int3
iret
in
divl
out
xor
xchg
push
mov
addb
mov
sbb
int3
lret
(bad)
add
mov
adcl
adc
add
addb
push
jge
sbb
mov
jo
addl
out
movsb
mov
test
andl
out
inc
es
cmp
fs
dec
call
add
andb
and
(bad)
cwtl
addb
mov
ret
jbe
inc
test
push
sub
andb
andl
sbb
popl
mov
and
addb
(bad)
lcall
addl
sahf
xchg
pop
rcll
mov
testb
sbb
addb
xchg
adc
mov
mov
and
rclb
fiaddl
pop
add
mov
inc
mov
(bad)
imul
pop
das
andb
add
fstps
jnp
andl
pop
cmp
lea
addl
movsl
jae
mov
mov
gs
cltd
addb
addl
mov
addl
sti
add
addb
xchg
repz
pushf
out
andl
andl
xchg
xor
inc
jo
sub
addl
pop
sbb
sub
mov
mov
addb
push
sti
cmp
add
dec
in
and
dec
add
add
jmp
arpl
andl
jl
jl
sub
mov
mov
mov
push
rclb
cltd
faddl
addb
jne
mov
testl
andb
pop
xorb
cmp
lcall
xorl
fisttpl
pop
cmc
adc
pop
add
addl
fsubs
cld
xorb
add
pop
xchg
xchg
pop
push
andl
aad
and
into
xlat
lret
addb
add
inc
push
ds
jg
xor
addb
fs
cmc
into
sahf
cmc
int3
andb
mov
sub
dec
sbbl
mov
add
addl
popf
sti
push
jae
addb
subl
in
test
andb
adcb
lea
mov
and
add
jnp
rol
jae
and
andl
stos
mov
addb
add
cmpsl
jno
xor
andl
xor
lret
stos
lret
jp
lcall
addb
xchg
inc
mov
add
push
lcallw
and
inc
mov
pop
rcl
jp
lea
mov
addl
push
xor
mov
out
leave
mov
and
xchg
xchg
je
lods
xor
mov
mov
mov
arpl
mov
andl
out
push
add
insl
hlt
adc
mov
mov
add
push
addr16
xchg
sub
and
je
lcall
dec
add
mov
adcb
xchg
int3
push
or
add
test
adcb
addl
addr16
std
mov
in
pushf
cwtl
cmp
or
mov
andb
pop
orl
andl
push
into
std
sti
inc
ss
add
andl
or
adc
mov
orl
into
or
icebp
andb
andl
lahf
outsl
jge
jecxz
and
addb
nop

mov
mov
mov
add
icebp
aaa
fcomps
sub
addb
das
pop
mov
cmp
pushf
or
mov
rolb
into
loope
jl
adc
popf
add
andl
pushf
and
addl
(bad)
andl
cmpsb
mov
inc
and
and
andl
test
and
addb
iret
in
mov
addb
jmp
pop
mov
mov
mov
lock
in
outsb
loop
andl
xchg
lea
push
xchg
test
out
int3
and
addl
adcl
addl
add
add
mov
mov
inc
addl
mov
dec
lock
fisubs
mov
lret
mov
addb
mov
inc
cmpsb
loop
insl
xchg
cwtl
ret
and
addb
mov
pop
xorb
mov
inc
add
push
xchg
andl
mov
xor
andl
add
dec
adc
loope
ret
aas
mov
or
addl
jp
push
mov
shr
fidivrs
sbb
jns
push
sub
lods
pop
addb
add
addl
addl
addb
jbe
in
fstp
andb
mov
dec
ret
int
andl
cltd
xor
push
in
cli
mov
mov
dec
add
mov
inc
mov
push
push
stos
leave
test
add
addl
aam
sub
adcl
addb
mov
cmp
mov
add
cmpsb
les
xchg
sub
add
cmc
sub
xorb
add
jge
aas
add
icebp
addl
add
xchg
adc
call
dec
les
addl
add
xorl
addb
mov
movl
out
stos
test
add
les
mov
mov
xor
test
mov
andl
imul
andl
xchg
xchg
addl
add
(bad)
nop

pop
cs
sbb
push
sbb
idivl
addl
jns
hlt
cmp
clc
cld
andb
andl
icebp
xchg
mov
addl
testl
addl
and
cmc
ror
aaa
addl
sbb
bound
add
int3
and
andb
loop
je
ret
jns
mov
and
addb
add
push
rcll
andb
and
iret
jae
xorb
loope
addl
cmpl
and
add
int3
(bad)
out
push
mov
sbbl
mov
add
orb
clc
mulb
addl
scas
mov
sub
addl
(bad)
pop
leave
in
mov
in
addb
mov
cwtl
lret
xchg
call
andb
add
int
(bad)
int3
lods
stc
add
mov
andl
pop
mov
push
pop
faddp
loope
jecxz
andb
mov
mov
pop
adc
jp
andl
lcall
mov
addl
adc
addl
and
repz
pusha
dec
mov
mov
andl
mov
es
xchg
cmp
addl
addl
sub
mov
mov
addb
jne
out
addl
test
jns
idivb
sti
addl
sbb
and
mov
cmp
into
pop
cwtl
mov
addb
cmp
fmulp
addb
xorl
aaa
or
mov
andl
mov
xchg
push
flds
mov
andb
(bad)
(bad)
mov
andl
push
mov
stos
andnps
std
xor
addl
(bad)
fdivrs
push
xor
in
andb
mov
inc
sbb
mov
addl
jle
dec
mov
out
addl
addb
leave
mov
(bad)
int3
fsubp
lahf
mov
addl
movsl
xchg
sub
mov
icebp
lcall
addl
or
ficomps
sub
addb
xorl
sub
ficomps
addl
ds
nop

shlb
stc
ret
loop
inc
adc
and
add
arpl
inc
addl
clc
pop
popf
pop
push
xchg
les
addl
adc
mov
add
mov
sbb
les
addl
add
insb
cli
stc
sub
bound
addl
mov
shl
add
mov
addl
mov
lock
addl
xchg
nop

imul
test
call
sti
addb
andl
mov
andl
dec
rclb
add
xorb
(bad)

jg
cmp
or
mov
add
repnz
sbb
sbb
cmp
mov
xchg
mov
add
add
and
add
mov
sub
cmp
add
mov
add
inc
jns
lock
or
mov
arpl
andl
xorl
iret
jg
andl
xchg
mov
aas
or
add
and
andl
mov
xorl
push
andb
andl
ret
adc
addl
bound
andb
int3
lahf
in
fldenv
push
sahf
or
addl
ret
mov
addl
fildl
es
andl
ficoml
mov
test
andb
add
(bad)
mov
mov
addl
inc
or
addl
mov
pop
repnz
addb
addl
or
addl
jge
mov
addb
mov
push
adcb
andb
addl
mov
imul
xor
inc
mov
les
mov
xorb
adc
ret
xorl
(bad)
mov
addl
repnz
lcall
addb
pop
int
mov
add
(bad)
cmp
dec
cmpb
mov
mov
es
xchg
sbb
outsl
xorb
mov
xor
mov
and
add
mov
pop
ds
dec
dec
stos
pop
arpl
ret
add
addl
xchg
adc
(bad)
cmp
cmp
addb
subb
mov
andl
pop
mov
sbbb
nop

sub
aam
pop
addb
add
mov
jecxz
addl
addb
mov
push
push
adc
mov
addl
cli
xor
addl
lcall
mov
mov
cmp
in
test
pop
clc
addl
xor
rolb
cmpsb
fisubl
addl
testl
subb
mov
inc
int
and
andb
jne
sub
mov
addb
add
cmp
mov
addb
xor
mov
enter
mov
push
out
and
addl
int
mov
insl
imul
addl
fs
add
addl
mov
adc
xchg
pop
xchg
mov
mov
and
jg
jp
int
add
mov
mov
cmpb
sbb
andl
int
aam
dec
mov
sar
es
mov
mov
add
sbbl
in
or
mov
clc
xorb
add
test
sub
andb
andl
(bad)
(bad)
jle
dec
fildl
and
andb
andl
addl
mov
addl
xchg
pop
ds
add
out
mov
andl
mov
or
es
mov
hlt
lock
and
adc
dec
les
add
and
xor
outsl
movsl
addb
mov
sti
mov
frstor
out
faddl
mov
jbe
dec
lods
stc
cmp
addl
jnp
out
cmpsb
addl
inc
push
xchg
shll
addl
push
pusha
push
adcb
mov
mov
xor
xlat
and
nop

jae
shlb
mov
jg
icebp
arpl
pop
sti
in
jge
or
andb
add
shrb
andb
test
and
adc
addl
cmp
rcll
andl
mov
insb
pop
out
andl
outsb
sub
mov
inc
es
shl
into
out
ret
addb
mov
pop
stos
addl
inc
icebp
movsl
mov
xlat
cmpsb
jle
je
and
sbbb
cwtl
sbb
and
xorl
out
out
rorl
dec
cmp
jne
addl
or
fnsave
xchg
cmp
addb
mov
roll
andl
xorl
add
mov
xor
xorb
mov
or
xchg
iret
shrl
mov
andb
adc
add
adc
andl
inc
addb
push
jb
rorl
addl
sub
inc
andl
mov
nop

loop
pusha
addb
add
push
dec
xchg
addl
addb
push
cmp
addl
rorl
movsl
in
imul
mov
add
mov
adc
lret
scas
addb
addl
addl
pusha
xchg
jnp
pop
mov
and
add
scas
and
imulb
andb
sub
scas
sbb
addb
add
lods
sti
enter
and
xor
xchg
sahf
insl
push
mov
xlat
mov
addl
add
(bad)
fldcw
addb
mov
imul
add
adcb
sub
xor
addl
and
int
call
addl
lds
or
andl
and
movsl
test
fildl
addl
add
cmp
(bad)
hlt
and
addl
fisubs
and
mov
dec
ljmp
andl
cmpsl
flds
addb
xchg
dec
aam
mov
andb
subl
fnstsw
jnp
mov
hlt
mov
andb
cmp
xchg
nop

andl
fdivrs
add
and
pop
ret
dec
scas
and
in
xchg
cmc
jae
addl
pop
pop
fsubr
or
shl
cmp
andb
andl
imull
movsl
push
and
addb
fisubs
dec
addl
lret
push
mov
ljmp
lds
addl
push
cwtl
roll
dec
mov
mov
loope
(bad)
xchg
xlat
pop
enter
add
andl
je
adc
mov
andb
add
addl
mov
add
sbb
andb
loopne
scas
add
addl
and
je
mov
insb
addb
addl
enter
andl
pushf
stos
test
addb
mov
mov
cmp
fldl
add
and
aam
andl
addl
into
jnp
and
xorl
mov
inc
loope
popf
cmp
(bad)
push
incl
addl
push
lahf
mov
ret
addl
or
ja
pop
je
movsb
loop
mov
andl
jp
push
cwtl
stos
sub
pop
addb
adcl
pop
xorb
mov
movsl
adc
sbb
mov
andb
sbb
andl
aas
std
(bad)
in
pop
mov
addb
sti
in
cmp
jmp
addb
cmpsl
leave
jbe
test
mul
addb
add
ret
ret
clc
test
loop
addl
addb
ret
shll
into
(bad)
testb
andb
mov
cmc
add
(bad)
es
pop
sub
addb
add
imul
and
rcrl
addb
sbb
popf
test
mov
andl
push
insb
in
sbb
cmp
cmc
outsb
(bad)
dec
mov
andl
inc
jne
or
add
mov
addl
ret
and
addb
add
arpl
popf
jmp
mov
andl
prefetch
mov
pop
pop
ljmp
addb
add
fldz
addb
mov
in
in
addb
addl
into
dec
xchg
fwait

cmp
pusha
mov
pop
imul
addl
pop
addb
andl
and
xchg
mull
andl
test
xor
(bad)
push
fistps
popa
jne
mov
mov
add
sub
js
mov
insb
roll
xorb
add
mov
push
adc
add
andl
sti
test
add
mov
andb
divb
xlat
mov
mov
andl
addl
int3
mov
(bad)
sub
addl
out
adcl
mov
rorl
fsubs
andl
addl
xor
xchg
leave
cmpl
andl
test
or
subb
les
andl
adc
mov
xor
xorl
push
sub
cmp
mov
cs
fnstcw
pop
addb
addl
andb
add
sbb
dec
pusha
mov
push
pushf
mov
addl
mov
mov
fadd
push
add
andl
std
xor
mov
add
mov
popf
pop
rclb
xchg
pop
(bad)
scas
cmp
addb
mov
add
and
sbbl
sub
mov
addb
addl
jne
mov
addl
mov
loop
addb
mov
pop
into
stos
mov
rol
addl
dec
and
pop
movsl
mov
and
subb
xlat
inc
sahf
mov
xorl
push
mov
addl
xorb
addb
repz
and
aaa
jp
iret
addr16
andl
cld
addl
andl
and
call
xchg
nop

mov
pop
xorb
mov
(bad)
(bad)
icebp
dec
fdivrs
inc
andl
(bad)
adc
faddl
pushf
mov
mov
addb
fadds
mov
jp
and
pop
cmp
addl
loopne
xor
xor
mov
addb
(bad)
mov
jmp
into
addb
add
addl
je
addl
addb
dec
mov
scas
movsl
sahf
subl
out
les
addb
add
out
xchg
or
sub
mov
sub
andl
mov
fdivrs
hlt
hlt
inc
mov
and
add
xchg
adc
test
cmp
and
andl
add
mov
addl
cmpsb
(bad)
mov
andl
jecxz
mov
mov
daa
and
addl
mov
movsl
stos
mov
addl
mov
test
mov
sahf
cmp
mov
add
xorb
or
xchg
mov
and
pop
repnz
mov
pop
mov
in
and
mov
scas
rcrl
iret
cmp
out
jmp
xorl
cmpl
subb
xorb
add
push
imul
or
gs
and
add
mov
orb
loope
push
test
mov
mov
andl
addl
shl
mov
andb
subl
mov
andb
andb
mov
test
mov
andb
and
arpl
inc
pop
repnz
add
add
xchg
jno
mov
andl
fildl
addl
rolb
or
sahf
addl
mov
sub
addb
push
cltd
push
cmpl
(bad)
mov
mov
mov
mov
fldl
andl
jp
scas
mov
add
mov
andb
add
adc
mov
xchg
stos
andl
cld
pop
test
lahf
xchg
dec
lock
pop
addl
insl
inc
cmp
cltd
jno
daa
sbbb
mov
sbb
addb
addl
and
mov
or
addl
addl
fcoml
dec
addl
mov
jo
cltd
(bad)
and
andl
addl
push
jnp
(bad)
pop
in
xorl
mov
shrb
xor
add
andb
dec
push
(bad)
fwait

inc
sub
icebp
sub
addl
sbbl
push
adc
mov
andl
push
add
adc
adc
xorl
cmpl
xchg
xorb
mov
or
addb
mulb
add
addl
fstl
and
mov
test
aad
jle
test
mov
addb
imul
adc
addl
outsl
dec
mov
add
add
or
cli
mov
push
fcompl
addl
and
mov
andl
and
sub
mov
mov
subl
cli
or
adc
addl
pop
sub
mov
andl
mov
movsl
dec
(bad)
faddl
mov
mov
jns
std
adc
addb
add
xchg
imul
push
addl
add
addl
mov
ficomps
leave
and
addl
outsl
dec
sub
lahf
addb
mov
and
mov
mov
addb
addl
repnz
mov
and
jae
pop
iret
pop
inc
xor
in
into
adc
addl
mov
scas
inc
xchg
inc
and
mov
add
jp
and
addb
cmpsb
mov
jmp
jo
mov
add
movsl
pop
mov
popf
andb
andl
lods
xchg
and
orb
or
mov
addl
sbb
inc
addl
in
sbb
mov
addl
mov
sbb
les
push
andb
mov
addl
mov
addl
mov
andl
(bad)
fnstsw
scas
(bad)

mov
mov
jecxz
xor
inc
mov
fadds
shll
mov
orl
andb
movd
outsb
subl
addb
filds
inc
lods
jmp
xchg
enter
inc
in
push
mov
mov
mov
sbb
call
addb
mov
imulb
cld
lret
fwait

jo
mov
add
mov
mov
xchg
addb
test
xchg
les
gs
mov
addl
inc
out
push
outsl
inc
into
and
mov
addl
xchg
adc
addl
test
addb
mov
cli
mov
mov
fld
orb
addl
mov
and
andl
addl
fidivrs
fsubr
xorl
adc
add
add
jecxz
cmp
andl
fiaddl
andl
js
xor
je
addb
sbbl
andl
mov
andl
mov
adc
(bad)
je
mov
andl
lea
xor
push
fcom
push
mov
addl
xlat
mov
andl
mov
addb
test
out
loop
sbb
add
andl
cwtl
imul
add
add
mov
add
imul
or
movsb
test
cmpsb
lcall
addb
pop
jg
xor
lock
int
push
jbe
adc
addl
andl
and
lea
addb
and
popa
lcall
pushf
sbbl
and
add
adc
mov
fstpl
and
andb
cmpl
fcom
(bad)
mov
addb
add
mov
sbb
fldl
repnz
add
mov
add
add
add
mov
les
adc
fcomps
mov
mov
jnp
dec
addb
addl
stc
test
push
mov
mov
inc
add
into
push
js
test
addb
mov
mov
xchg
cli
mov
xchg
and
mov
mov
cli
ret
or
add
movsl
pop
out
andl
addl
andl
stos
bound
aad
mov
add
test
shrb
xchg
les
popf
sub
adc
and
addb
xchg
cs
cmp
mov
cmpl
dec
in
(bad)
iret
stos
inc
pop
push
sbb
les
and
sar
dec
mov
and
and
out
lret
lods
les
andl
cmp
mov
push
dec
stos
roll
andb
and
and
xchg
out
test
or
xorl
andb
andl
(bad)
call
and
addb
sarl
andb
mov
rcll
outsl
pop
fbld
addl
mov
mov
mov
mov
test
pop
add
andl
mov
addl
sbb
and
sbb
addb
addl
nop

or
nop

addl
jg
jge
lds
andl
xchg
stc
sbbb
mov
andl
add
nop

loop
aad
jg
filds
addb
mov
les
cmp
cmp
iret
cmc
push
addl
mov
mov
jns
jne
jbe
aad
loope
(bad)
mov
addl
cmp
fstpt
mov
mov
addb
mov
(bad)
insb
mov
push
add
add
nop

mov
out
jbe
outsb
mov
addb
test
int
int3
and
sti
xchg
cmpsb
andl
cmc
or
or
addb
xorl
mov
dec
xchg
ja
mov
andl
iret
inc
andl
mov
andb
lods
mov
mov
and
adc
dec
xor
dec
mov
addl
rolb
loopne
in
andl
fucomip
lock
dec
repz
add
cli
xchg
xchg
xchg
(bad)
pop
aam
loope
addl
addb
popa
cltd
mov
loopne
fs
and
sub
mov
andb
les
add
addb
add
xchg
andl
test
adc
jp
andl
aam
movsl
or
add
mov
and
add
js
mov
andb
pop
dec
loop
ret
pop
cmp
sbb
xorb
add
mov
fiadds
mov
xchg
xor
addl
inc
popf
pop
in
popa
andl
add
sbb
mov
test
and
addl
addb
addl
loop
push
or
inc
mov
and
lods
pop
stos
mov
orl
add
xchg
push
ret
leave
cmp
andl
fsubp
fisubs
nop

mov
loope
addl
add
dec
mov
subb
js
push
loope
xorb
add
adc
and
test
adc
repz
jbe
fiadds
add
andl
stos
fiadds
shr
and
and
orb
popf
cltd
test
scas
xchg
mov
andl
addl
mov
addl
addl
mov
mov
inc
(bad)
addl
clc
push
pop
cli
xchg
inc
enter
add
and
sub
addl
out
mov
and
xchg
fadd
andb
andl
cmpsl
movb
mov
adcl
lock
lret
rcrb
mov
mov
addl
push
mov
mov
xchg
sbb
mov
test
ja
in
adc
addb
sub
mov
mov
add
mov
and
fidivs
stos
imul
addl
in
imul
inc
addl
outsl
push
addb
mov
lds
xchg
in
mov
or
and
mov
ja
lds
int3
add
addl
jle
call
addb
pop
sbb
xor
mov
adcb
mov
addl
cmp
mov
xor
addl
outsl
lahf
addl
xchg
andl
faddl
xorl
mov
jbe
xorb
mov
std
arpl
addb
out
out
cmp
mov
mov
addb
mov
jg
push
jmp
subl
and
mov
fwait

sbbl
andl
outsl
repnz
ret
mov
addl
lods
les
addl
addb
(bad)
pop
cmp
mov
mov
int3
cmpsb
xor
adc
mov
andb
push
(bad)
cmp
mov
add
fsubs
fwait

add
addb
andl
lock
stos
xchg
xor
andl
int
outsl
inc
xchg
and
add
dec
lods
jmp
ret
dec
or
andb
testb
cmpsl
mov
test
dec
fsubl
fsubl
addb
add
test
sub
add
andl
addl
add
lds
or
xchg
popl
addb
mov
nop

jecxz
push
out
addb
addl
decb
mulb
mov
and
sbbl
addb
andl
pop
repnz
add
andl
fs
subl
daa
xchg
mov
mov
add
aam
hlt
xchg
xorb
add
sub
fwait

ss
mov
add
mov
mov
or
imul
add
mov
sub
mov
add
and
andb
addb
inc
cwtl
andb
test
and
cmc
pop
sbb
cmc
xor
stc
or
addl
fyl2x
(bad)
sahf
ret
push
xchg
pop
mov
andb
testl
hlt
jbe,pt
loop
subb
and
addl
addl
xchg
adc
cmp
push
andb
andl
cltd
in
and
addb
dec
out
cmp
andb
ret
lahf
es
shlb
addl
mull
mov
mov
bound
jecxz
addb
add
andl
pop
roll
addl
negl
or
addb
out
imul
cwtl
mov
cwtl
sub
andb
mov
addr16
push
out
push
or
addb
(bad)
fadds
sbbb
and
mov
xlat
lea
filds
outsl
inc
addl
andl
push
push
addl
aam
popw
fldl
mov
xchg
(bad)
dec
xorl
cmp
in
mov
lret
movsl
mov
loopne
addl
or
lea
popf
inc
add
(bad)

addl
leave
push
xchg
loopne
aam
mov
xchg
mov
andl
fsts
imul
addb
orl
repz
loopne
adc
out
xchg
cld
inc
xorb
mov
mov
(bad)

xchg
orl
call
andl
pusha
adc
fs
jb
jl
fcomps
sti
lock
mov
and
iret
push
inc
loopne
xor
xchg
push
(bad)
shlb
addl
cld
inc
pop
cltd
mov
mov
ret
jl
test
mov
add
adc
(bad)
mov
mov
add
pop
add
icebp
cmpb
sbb
cwtl
xchg
(bad)
addl
into
test
dec
fadds
addl
mov
mov
orl
or
int3
addl
sahf
scas
mov
jecxz
dec
mov
and
add
xor
mov
mov
or
and
andl
mov
addb
add
popf
xlat
or
mov
andl
push
les
mov
and
addl
mov
leave
hlt
xchg
addb
mov
test
test
js
xchg
faddl
mov
insb
and
mov
and
sub
cli
dec
mov
and
addb
andl
and
mov
mov
xchg
mov
adc
addl
mov
add
insb
sbbl
addl
addl
adc
xchg
mov
or
add
andl
add
mov
addb
aad
pop
test
addb
mov
jmp
xor
addl
mov
mov
andb
rorb
js
sub
test
andl
iret
cltd
stos
xchg
andl
and
xchg
sbb
mov
orl
andb
andl
int3
andl
mov
and
inc
test
mov
mov
addl
sub
movsb
mov
addl
xor
dec
out
addl
xor
lock
pop
mov
addl
in
insl
js
pop
and
mov
add
mov
xor
scas
push
addl
imul
mov
jne
or
inc
icebp
lea
fdiv
push
addb
addl
outsl
mov
inc
mov
xchg
mov
and
mov
movzwl
popa
jle
pop
testl
addl
movsb
ret
mov
je
inc
fldenv
pushf
addl
(bad)
cmp
adc
add
sub
andl
addl
sub
push
jae
aam
mov
mov
addb
mov
stos
icebp
pop
or
cmpsl
add
add
fists
addl
popw
mov
outsl
cmpsb
fdivrs
addb
inc
imul
addb
xorl
bound
pusha
xchg
xorb
mov
xor
xchg
xor
andl
xchg
js
xor
xchg
add
addl
mov
ja
adc
addb
push
mov
test
inc
andl
icebp
add
popf
mov
repnz
jecxz
popf
xor
testb
addl
rcrb
addb
aas
cmp
inc
addl
addb
mov
lock
xchg
jl
xor
addl
inc
in
sti
daa
popf
pop
sub
sbb
addl
clc
les
addb
orl
andl
fs
mov
and
add
add
loopne
cwtl
in
and
andb
fiaddl
outsb
arpl
ret
or
addl
cli
jl
aam
test
and
fadd
js
loop
inc
mov
lea
addl
add
pop
mov
inc
mov
and
addb
mov
lcall
inc
in
pusha
dec
cli
addb
addl
mov
dec
ret
mov
and
(bad)
test
lahf
push
enter
pop
addb
andl
andl
inc
cmpsb
sbbl
addl
aas
add
addl
adcl
andb
andl
mov
orb
sub
andl
addl
aaa
lret
dec
dec
addl
inc
inc
adcb
or
aam
mov
arpl
and
pop
js
inc
lea
mov
clc
pop
addb
aas
test
andl
mov
andb
mov
(bad)
into
jns
addl
jbe
pop
fdivl
icebp
and
rcrl
sub
adcb
andb
andl
or
andl
das
cld
mov
xor
addl
inc
inc
push
addb
addl
in
sbb
sub
addl
xor
scas
xlat
ret
push
add
andl
int
pop
and
andb
add
incb
addl
nop

fildll
addl
std
dec
les
andl
addb
addl
inc
push
stos
sub
jno
addl
cmpl
addl
scas
insb
addb
addl
dec
int
mov
push
andl
addl
jae
xorl
or
xor
jg
mov
xor
addl
pop
xchg
xchg
repnz
addl
mov
test
imulb
sbb
addl
mov
jg
push
fcoml
adc
mov
push
(bad)
mov
sub
andl
xchg
jge
cld
fstl
cs
lods
andl
mov
lcall
mov
mov
addb
std
mov
addl
mov
fisttps
lea
addl
dec
stos
mov
mov
add
lahf
ret
adc
ljmp
mov
add
mov
lahf
in
pushf
aaa
jg
pushl
mov
andb
lods
cmp
call
adc
addb
add
xchg
ja
jne
in
movb
andl
fsubrl
or
andl
sarl
add
add
mov
and
add
pop
out
mov
mov
sbb
xchg
and
andb
ret
lods
sbb
fldenv
mov
addl
and
test
sbb
and
or
or
icebp
test
filds
sbb
addl
add
clts
pop
xchg
je
fnsave
and
mov
icebp
cmc
push
and
cmpsl
shr
addb
addl
in
jecxz
icebp
(bad)

sub
addb
and
cmp
mov
push
addb
andl
rolb
mov
andl
icebp
outsb
cmpsl
and
inc
lahf
arpl
mov
add
mov
mov
push
mov
lcall
mov
(bad)

roll
add
andl
nop

fsts
add
mov
adcb
xorl
andl
addl
loop
adc
jnp
andb
add
jne
shl
pop
in
mov
mov
andb
(bad)
test
outsl
lds
adc
cwtl
andl
or
popf
rorb
rol
xchg
mov
mov
addl
mov
mov
cmpl
add
int
or
inc
mov
and
add
sub
fpatan
int
and
addb
movsl
orb
dec
(bad)
push
addl
lea
xchg
ja
mov
addl
cmp
mov
mov
dec
mov
xchg
add
andl
adc
dec
aam
rcl
push
outsb
mov
addl
add
and
or
xchg
add
add
mov
aam
sbb
push
add
dec
adc
and
imul
andb
mov
xor
andl
aam
dec
andl
lcall
dec
bound
sub
in
addb
mov
test
inc
addl
bound
fildl
inc
adc
int3
outsb
adc
andb
add
out
ds
shlb
mov
mov
addb
cmp
cwtl
mov
add
add
mov
les
mov
sahf
(bad)
jmp
pop
frstor
lock
andl
push
adc
addb
subl
iret
insl
add
xorb
mov
mov
testb
mov
add
mov
aas
loopne
ret
aad
mov
andl
(bad)
in
test
fnstenv
cmp
and
mov
xor
fs
xchg
mov
or
andl
out
mov
addb
add
repnz
mov
add
add
mov
iret
scas
cmpb
addl
cmp
test
dec
push
mov
add
mov
push
dec
pop
addb
subl
aad
movsl
or
sbb
andb
xorl
mov
and
add
lcall
inc
jbe
xchg
and
andl
les
xorb
add
xorl
andl
fimuls
and
addl
inc
lret
imul
addl
xchg
sbb
fs
addl
addl
addl
mov
ret
imull
andl
sahf
les
pop
and
jecxz
cmpsb
and
mov
outsl
in
ljmp
fdivrs
xorl
adc
mov
add
adc
shlb
and
inc
xlat
std
test
bound
fldt
addb
and
xchg
idivl
test
roll
addl
mov
add
addb
mov
andl
sbb
idiv
andl
(bad)
push
nop

lea
andl
mov
lds
cwtl
addb
mov
adc
shl
add
aaa
mov
jg
andb
andl
(bad)
or
push
mov
and
addb
ror
add
mov
add
sub
loop
inc
xor
dec
lods
fnstsw
mov
addl
mov
mov
lock
js
(bad)
xchg
addl
andl
xchg
fldl
mov
addl
jns
push
xor
mov
adc
cmpsl
fisttpll
fwait

orb
mov
notl
jge
addb
addl
dec
push
mov
addl
mov
or
addb
mov
iret
into
int
addl
mov
ret
out
xor
xchg
clc
rolb
addl
mov
andb
add
repnz
add
add
popa
xorb
addl
shll
arpl
mov
mov
dec
add
addb
andl
push
xor
sahf
nopl
mov
loopne
xchg
outsl
fadds
push
andl
xorb
add
addl
push
push
inc
fdivp
mov
addl
cmpsb
sbb
andl
call
fnsave
out
jle
ljmp
addl
aam
pop
fadd
orb
addl
addb
xchg
mov
mov
andb
mov
outsb
inc
push
adc
add
lods
jecxz
hlt
inc
mov
cmc
or
loopne
pop
addl
andl
test
std
sub
andb
mov
add
mov
and
add
sahf
loopne
lahf
lea
andl
mov
mov
in
nop

pop
inc
cmpb
xorb
add
xchg
pop
or
addb
aaa
push
loop
sahf
jbe
popf
out
add
mov
cmp
sbbl
in
adc
nop

fmull
push
addb
mov
in
test
shll
mov
add
outsb
daa
sub
jb
in
pop
je
mov
ret
mov
and
cmpl
or
sub
or
addb
andl
out
cwtl
fwait

xchg
mov
andl
out
jae
pop
xor
xlat
js
mov
mov
add
popf
cmc
call
shrl
(bad)

xorb
add
in
out
test
js
mov
add
mov
jecxz
dec
clc
dec
addr16
and
addb
jno
dec
roll
addb
xchg
addl
adc
jmp
or
addb
outsl
sub
mov
mov
scas
add
mov
test
adc
xchg
das
pop
mov
ret
mov
mov
add
and
fimull
js
stos
cmp
xchg
addb
xchg
mov
pop
divl
repz
mov
mov
hlt
sub
test
and
addb
sbb
mov
addl
stc
ljmp
ds
lret
jle
aad
addb
imul
push
mov
pop
lea
andl
adc
inc
add
addb
add
js
out
pop
pop
hlt
andb
add
popf
cmp
mov
addl
inc
sbb
sbbl
pop
dec
addl
mov
cmp
jg
aad
addr16
andl
outsl
stos
scas
nop

sbbb
add
sbbb
and
mov
adcl
xchg
mov
addr16
sahf
add
addb
es
stc
xchg
add
xchg
ret
andl
addl
mov
mov
addb
dec
cwtl
mov
add
add
xchg
repnz
andl
aaa
mov
adc
addl
jbe
jmp
ret
aad
bnd
addb
and
icebp
test
or
das
mov
loopne
aaa
xchg
xorb
mov
add
mov
xchg
xor
aas
add
mov
andb
(bad)
adc
andl
enter
xchg
mov
addl
mov
adc
fdiv
mov
jg
jp
mov
addb
roll
iret
push
and
mov
addb
add
mov
int
in
pushf
addl
addb
mov
stos
mov
lock
fists
add
and
jo
sbb
addb
add
mov
add
mov
sbbl
addl
mov
mov
aas
pop
mov
and
add
add
cmpl
and
andl
mov
addl
call
scas
mov
mov
add
mov
jno
addl
lahf
inc
and
addl
test
push
mov
addb
mov
mov
adc
xchg
int3
sbb
add
addl
mov
fstps
addl
(bad)
addl
mov
mov
outsl
cltd
jecxz
std
mov
scas
fimuls
addb
out
adc
in
addl
add
dec
xchg
addl
loop
andl
add
andl
jnp
and
add
mov
subb
add
add
xchg
adc
lock
sub
addl
inc
in
adc
inc
add
push
addl
ljmp
andb
cmc
icebp
in
hlt
pop
scas
lcall
nop

push
addb
mov
addl
aad
sbb
mov
addb
mov
xchg
loopne
fs
andb
andl
nop

cltd
jno
and
popl
addl
int
mov
rep
mov
addl
add
fsubrp
xor
addl
sub
(bad)

sarb
addl
rcr
jmp
repz
sub
addb
repnz
and
adcl
ret
andb
add
mov
mov
adcl
mov
outsl
and
mov
push
sar
sbb
addl
xor
(bad)
int
orb
bound
andl
pusha
push
jmp
jg
es
mov
and
mov
in
inc
movsb
scas
sub
push
test
add
addb
les
andl
gs
gs
dec
pop
xchg
stc
andl
addl
add
sbb
in
(bad)
xorl
cmpsb
stos
mov
imul
mov
cli
or
subl
mov
loope
fisttpl
scas
movsb
sbb
mov
cwtl
stos
cmpsb
xorl
mov
mov
mov
(bad)
(bad)
nop

sub
add
xorl
(bad)
sti
mov
xorb
mov
xor
pop
mov
jne
subl
dec
andl
pushf
stos
cltd
cmpsb
mov
pop
pop
bound
add
addl
or
cld
repnz
les
addl
addr16
stos
pop
repnz
mov
addb
test
mov
int
adcl
and
repz
out
addl
addb
(bad)
and
jmp
sbb
dec
jns
roll
mov
andb
cwtl
fidivrl
int3
mov
pop
cmpb
addb
cmp
das
(bad)
lock
andl
cmp
call
addl
scas
jmp
int
mov
and
add
adc
and
andb
test
(bad)
test
adc
repnz
addl
xchg
clc
cmc
andl
jp
inc
test
mov
addl
add
jno
mov
in
test
and
addl
mov
sub
jge
aas
movb
add
(bad)
leave
xchg
cmp
mov
popf
adc
addl
ret
xchg
jnp
test
pop
mov
test
add
leave
mov
pop
cld
les
pushfw
mov
push
and
mov
test
(bad)
mov
mov
add
mov
xchg
or
addl
mov
sbb
or
lds
sbb
andb
andl
add
addb
xor
test
andl
addl
out
ret
lock
mov
mov
addl
shrb
lock
sub
andl
xorl
mov
mov
push
test
add
and
das
adc
addb
lods
nop

lcall
addr16
rolb
mov
mov
flds
adc
addr16
jbe
xchg
and
addb
pop
and
aam
in
fsts
(bad)
addl
and
into
mov
mov
fsubl
addb
adc
push
lahf
or
adc
or
mov
addl
idivb
andl
xchg
push
andb
add
mov
push
ret
in
andl
xor
cmp
lahf
std
addl
jne
cmc
clc
sahf
roll
addl
aaa
sub
ret
jp
sbb
addb
adc
mov
add
addb
fldl
test
dec
addl
jecxz
sahf
orl
and
test
mov
xchg
jns
lret
ja
movb
xorl
ret
(bad)
in
repz
add
arpl
(bad)
jp
dec
loope
add
add
ret
mov
addl
adc
fmul
xor
andl
mov
addb
addl
xorb
mov
and
jmp
hlt
jle
sub
mov
andb
inc
add
addl
push
lcall
and
mov
mov
mov
fistps
jnp
add
mov
(bad)
fs
test
jecxz
xor
addb
add
testl
incl
mov
pop
jmp
popa
lret
dec
loopne
fcmovnb
pop
push
andb
mov
in
mov
mov
add
xchg
push
xor
mov
andl
dec
sbb
leave
mov
andl
in
mov
lahf
jl
sub
and
add
loopne
xor
popa
(bad)
popa
in
and
andb
fmull
xorb
add
push
lahf
cmp
fadd
andl
mov
adc
addl
add
cld
mov
cld
test
addb
mov
push
push
jg
or
jns
mov
add
push
(bad)
aad
lods
inc
stos
ret
mov
and
daa
mov
es
adc
addl
push
dec
mov
shll
andl
call
test
or
jne
xor
adcb
addl
add
movsl
fcompl
rol
mov
add
xorb
add
inc
fcomi
loopne
cmp
andl
add
andl
enter
addb
je
bound
insb
mov
enter
and
sbb
inc
int3
and
sarl
or
addl
push
loope
(bad)
mov
out
in
mov
addb
orb
nop

andl
mov
adc
xor
fwait

test
xchg
orl
and
addl
addl
fwait

rcrb
cmp
in
sti
int3
cmp
mov
into
movsl
shrb
and
addb
cmp
push
adc
idiv
test
add
icebp
rep
mov
adc
test
addb
addl
repnz
addl
mov
cmc
jp
xchg
add
andl
fmull
mov
mov
add
mov
in
neg
leave
in
dec
adc
jmp
cmp
dec
hlt
andl
outsl
sub
adc
andl
inc
(bad)
dec
das
push
(bad)
dec
adc
dec
addb
addl
out
popa
iret
and
xlat
andl
repz
xchg
orb
mov
adc
sti
add
addb
fsubl
test
addl
mov
or
addb
andl
addl
mov
int3
jmp
xchg
mov
andb
int3
mov
pop
mov
addl
adcl
mov
outsb
addl
and
in
out
and
addb
ja
xorb
fisttpl
xorl
(bad)
dec
inc
addb
popl
andl
mov
mov
addl
loop
fcoms
add
addl
and
mov
addl
aad
fmulp
stc
out
andl
popa
dec
test
pusha
xor
sub
fs
movl
in
inc
test
add
add
sbb
inc
pop
sub
in
lahf
inc
dec
notl
andb
mov
(bad)
cmp
add
addl
cmpb
addl
fmull
mov
nop

addl
lret
push
jno
jbe
and
and
mov
int3
cmp
mov
and
add
rcl
adc
repz
mov
mov
int3
in
lcall
addl
rcll
addl
(bad)
mov
add
mov
push
xchg
dec
ds
xchg
and
mov
addl
adc
addb
addl
push
mov
ja
cli
jmp
mov
and
mov
mov
mov
outsb
mov
or
out
addb
andl
fxch
mov
addl
andl
roll
in
mov
mov
add
sub
ret
call
cmp
int3
xorb
add
jmp
xor
lea
iret
rorb
in
andb
andl
mov
daa
lret
test
movl
andl
mov
sbb
and
xorl
js
cmc
ljmp
mov
addl
mov
andb
mov
adc
movsb
jle
pop
out
mov
push
dec
out
mov
and
adc
scas
sub
pop
and
andl
xchg
jge
ljmp
mov
andl
popa
outsl
xor
mov
mov
iret
mov
mov
in
andl
lods
stos
add
andb
repnz
sbbl
pop
hlt
int3
mov
mov
addl
inc
les
enter
addl
jmp
int3
roll
out
and
add
andl
mov
das
andb
add
int
push
inc
xchg
xchg
dec
andl
leave
popf
dec
int
jmp
andl
int3
or
jge
es
push
mov
pop
push
addb
addl
std
(bad)
jp
adc
addl
test
fiadds
fiaddl
mov
mov
mov
mov
andl
lret
xchg
mov
cmp
fdivp
andl
addl
xchg
inc
loopnew
mov
xorl
int
scas
loope
pop
add
add
add
add
sahf
addl
mov
xchg
inc
andl
dec
adcl
addb
andl
andl
lret
jnp
mov
addl
add
addl
mov
addl
or
and
int3
jmp
cmp
addl
shlb
addl
div
ret
int3
test
add
add
ljmp
add
mov
andb
mov
sbb
flds
addl
in
jo
xor
jo
mov
cwtl
cwtl
negl
inc
ret
mov
add
test
sub
and
add
pop
repnz
and
andl
mov
(bad)
pop
mov
addb
add
rcll
andl
in
lea
and
addl
(bad)
fwait

cmp
nop

lds
add
mov
addl
leave
add
test
sbb
aas
movsl
movsb
popa
cmp
add
addl
jmp
jmp
addl
andl
out
jl
pop
xchg
addb
andl
sbb
iret
and
mov
cmp
test
add
push
push
or
add
or
sub
mov
in
faddl
addl
andb
andl
push
sub
addb
pop
xlat
insb
int3
mov
and
subl
cwtl
or
fiadds
addl
and
bswap
int3
sbb
inc
andl
mov
mov
push
addl
addl
repz
add
and
js
cmpsb
jmp
imul
mov
addl
aad
mov
mov
andl
adc
int3
inc
and
addb
int3
dec
jp
testl
pusha
enter
lods
jb
pop
imul
addl
jae
rolb
mov
mov
mov
popl
sub
loope
add
add
andl
xor
stc
mov
andb
add
andb
addb
fisttps
mov
pop
mov
andl
sub
lahf
ja
insb
sub
int
andl
adc
or
andl
jl
adcb
addl
cmpsl
pushf
cmp
mov
andl
iret
addb
addl
je
xorl
mov
outsl
add
add
push
int3
flds
or
andl
sub
pop
adc
xor
addb
loopew
(bad)
mov
addb
xorl
xchg
lea
xorb
mov
test
les
mov
mov
andb
sbb
dec
loopne
sub
imul
and
nop

rcrl
mov
push
rclb
rorb
addl
jnp
xor
sub
mov
mov
fucomi
and
addb
add
movsb
fisubs
mov
add
add
sbb
mov
addl
addl
addl
xlat
mov
add
mov
xchg
aas
jb
fucomp
cltd
mov
mov
addl
adc
andl
orl
andl
mov
cmp
out
fstps
xchg
and
andb
pop
scas
subb
mov
addb
add
mov
(bad)
push
outsl
subb
insb
andl
pop
mov
sub
daa
dec
scas
mov
mov
and
out
and
inc
hlt
and
shlb
addb
mov
xor
mov
add
or
or
sbb
mov
and
cld
mov
sbb
cmp
andl
xchg
pusha
int3
pop
fidivrs
in
test
orl
andl
sbb
rcrl
mov
mov
add
andl
cs
addl
xor
roll
(bad)
cmp
mov
add
mov
mov
addb
pushf
cmp
mov
andl
addl
andb
sub
pop
mov
jecxz
addl
int3
lea
movl
int3
cmc
inc
or
add
mov
andb
and
lea
push
dec
xchg
aas
hlt
jle
addb
mov
in
addl
add
(bad)
movsb
sub
push
gs
and
addb
ss
aad
ret
in
adcl
add
pop
cld
xchg
ds
add
or
subb
addl
test
andl
pop
sbbb
push
xchg
add
andl
jecxz
daa
lret
mov
pop
sbb
mov
add
mov
pop
dec
test
int3
movsb
hlt
adcl
andb
sub
test
addl
andl
rcrl
les
mov
mov
addl
int3
xchg
andl
jecxz
mov
sub
jg
inc
pop
test
fiadds
addb
mov
mov
mov
addb
in
in
lods
in
jb
hlt
andl
addl
mov
mov
addb
int3
scas
dec
(bad)
jge
add
add
stos
mov
vpaddusw
dec
addl
sbb
pop
insb
jge
andl
dec
jp
jmp
orb
xorl
scas
adcl
jae
mov
andl
movsl
inc
subl
xorl
inc
or
add
addl
pop
addl
and
mov
cld
cmp
mov
addb
outsl
mov
fmull
movsl
sbbl
addb
add
int3
add
mov
adc
addl
addb
fwait

jmp
addb
int3
push
dec
andb
mov
fcmovne
hlt
es
add
mov
mov
bound
addb
cmpl
stos
cltd
addl
xlat
setae
mov
addb
xchg
pop
mov
mov
mov
mov
sbb
addl
pop
shrl
jmp
lahf
add
and
add
push
jo
int
and
addl
(bad)
flds
and
int3
fld
call
inc
fiaddl
addb
addl
fwait

xor
hlt
xchg
lahf
mov
fiadds
int3
mov
and
mov
adc
addb
andl
xor
andl
out
adcb
xorl
outsb
or
test
cmp
addl
andb
andl
dec
cli
adcb
mov
subb
sub
jl
and
adc
movsl
cmp
ror
movsl
mov
andb
orl
mov
andb
fiaddl
hlt
sbbb
mov
and
or
(bad)
mov
pop
gs
hlt
adc
add
and
repz
xchg
xorl
andb
andl
jge
xchg
pop
push
(bad)
dec
sbbl
addl
xchg
cmpb
(bad)
xchg
addl
fbld
adc
addl
int3
inc
(bad)
jle
addl
test
lods
ss
fiaddl
andl
push
int3
popf
mov
into
ret
push
test
andb
add
addl
faddl
mov
addl
aaa
xchg
dec
(bad)

push
aad
cld
xor
addl
in
pop
iret
pop
out
out
addb
addl
int
push
dec
xor
cmpb
andl
rclb
fnstsw
and
fld
push
cmp
mov
mov
adc
movsl
andb
add
or
add
inc
jecxz
in
and
subb
or
push
or
xorl
popf
push
xchg
and
adc
jnp
stc
sbbl
add
int3
pop
pop
mov
addb
fimuls
ja
fistpl
fnstenv
mov
andl
adc
mov
xorl
rclb
push
dec
xorb
mov
adc
fxch
andl
xlat
add
loope
faddl
andl
cli
insl
sbb
addl
inc
add
test
gs
mov
mov
addb
mov
(bad)
mov
mov
add
cmpl
xchg
mov
addl
addb
mov
and
add
lcall
fsubs
mov
add
cmc
cltd
scas
aas
stc
rcr
or
or
andl
int3
mov
andb
loop
aaa
dec
add
clc
mov
and
add
pop
test
test
dec
and
andb
aaa
sub
orb
addl
leave
mov
jae
lret
lahf
xchg
mov
addb
push
in
shrb
add
addl
add
int3
loopne
mov
xor
mov
addl
cmpsl
mov
cwtl
push
cmp
mov
insb
xor
addl
stos
js
aad
sarl
movsb
addb
andl
and
mov
fwait

in
and
cltd
adc
les
mov
mov
add
add
sbbb
addl
stc
mov
dec
in
andb
andl
jno
or
add
mov
addb
xchg
sbbb
mov
and
cmpl
mov
xor
addl
inc
aad
adc
fistl
sbb
andb
dec
mov
or
push
test
push
aam
push
stos
andl
movsl
aas
aas
cmp
in
fcmove
cmc
mov
sbb
andl
out
mov
testb
mov
adc
cwtl
into
sahf
aaa
int3
sbb
sbb
mov
push
jne
stc
xchg
or
je
cmpl
addl
and
shrb
push
cld
lahf
xchg
push
addl
fidivs
repz
addl
mov
mov
ret
dec
notl
test
mov
addb
sarb
insl
int3
sbb
cmpsl
mov
mov
add
mov
sub
push
jecxz
cmp
andb
mov
xchg
data16
add
and
jnp
andb
mov
(bad)
in
xchg
addl
sbb
addb
addl
xchg
aad
fldenv
lock
mov
aam
pop
xchg
mov
addb
mov
mov
lods
mov
andl
add
fs
or
lea
mov
test
jmp
rcrl
jmp
test
addb
jno
ja
and
data16
jmp
in
addl
jg
push
cmpsl
rcll
outsb
xor
mov
mov
adc
cmc
movsb
int3
lods
push
xor
andl
bswap
xchg
(bad)
faddl
or
xchg
int3
cmp
mov
lock
jle
lret
dec
shl
xorb
mov
fwait

adc
jno
cmp
mov
add
mov
pop
push
add
addl
or
(bad)
iret
shll
addl
andl
pop
clc
dec
andl
mov
sbb
int3
jmp
fdivrp
mov
mov
add
xor
add
add
add
pop
xlat
inc
mov
andb
mov
mov
mov
add
dec
std
mov
bound
mov
inc
push
sbb
into
loopne
ds
orl
add
mov
xchg
aas
adc
adc
sahf
dec
push
in
mov
mov
and
add
mov
mov
mov
loope
out
mov
test
mov
jecxz
xor
addl
adc
add
sbbl
cmc
cmp
jle
addl
add
movsl
dec
call
xor
addl
and
in
mov
add
xor
(bad)
fsts
adcl
addl
mov
xchg
in
addl
addb
andl
(bad)
stc
int3
and
mov
imul
sar
icebp
mov
addb
fmull
sub
ror
mov
add
std
adc
mov
andb
andl
add
mov
or
xchg
inc
int3
lods
andl
addl
adc
aad
bound
andb
sbbl
movsl
std
andb
mov
mov
or
pop
orl
int3
andl
(bad)
pop
les
cs
pop
outsl
cmp
and
and
add
xorb
addb
cmpb
aaa
mov
andb
andl
int3
jge
pop
and
andl
and
cmpb
test
and
or
mov
addl
xor
mov
addl
je
fisttps
addl
lds
int3
orl
ror
add
andl
enter
arpl
mov
addl
mov
andl
fsubl
mov
add
andb
mov
mov
sbb
jno
mov
adc
or
andl
addl
addb
int3
pop
dec
lods
pop
loop
addb
mov
fisubrs
and
addl
les
clc
pop
int3
andl
addl
flds
xchg
(bad)
decb
xorl
sbb
mov
int3
testb
andb
jnp
cld
aas
and
addb
xor
and
add
test
cmp
(bad)
faddl
andl
dec
ret
mov
mov
lods
mov
add
sub
scas
jmp
addl
mov
fistl
xorl
addl
mov
addb
dec
cmpsl
jo
inc
loop
push
mov
addl
cli
ret
dec
push
dec
add
call
addb
popf
das
and
push
push
imul
xchg
iret
addb
add
int
ret
jnp
testb
add
add
sbb
mov
outsl
arpl
andb
mov
movsb
fcos
push
xchg
aas
xchg
addb
add
push
inc
add
mov
addb
andl
sub
andl
mov
nop

mov
and
add
bound
push
dec
fldl
mov
mov
sbb
xorb
add
mov
addb
mov
(bad)
mov
addl
add
int
push
mov
nop

imul
addl
jmp
mov
addb
addl
xorb
sbb
inc
ficoms
inc
lahf
subb
and
cmpsl
movsl
mov
sub
addl
std
adcl
mov
lods
push
flds
addl
add
mov
cmpsb
xorb
add
stc
mov
in
jmp
addl
test
mov
add
rorb
mov
cmpb
sbb
push
enter
mov
xorl
or
add
pushf
mov
mov
addl
andl
xorl
repz
jns
pushf
test
andb
dec
add
cmpsb
fmul
and
stos
sub
andl
fsubl
sbb
or
addb
mov
movb
push
mov
aas
xchg
inc
andb
andl
cmpsl
mov
xchg
cli
xor
mov
adcl
aas
pop
fwait

add
add
mov
int3
lods
xor
addl
pop
dec
mov
mov
test
xchg
mov
ljmp
fmul
xor
and
addl
mulb
cli
cmpsb
mov
andb
sahf
jbe
pop
sub
xor
(bad)
cmc
shrl
and
subl
into
lock
andl
pop
xchg
pop
sub
in
scas
roll
addl
adc
out
add
addb
add
cmpsb
mov
add
adc
addl
scas
sub
xorl
aam
jbe
cmp
addl
out
push
addl
mov
orb
movsb
popa
lret
roll
andl
mov
pop
lcall
andl
sbb
andl
xorb
sarl
sub
sbbb
mov
andb
out
inc
inc
add
addl
xchg
jmp
addl
mov
and
insb
fistl
addb
in
in
(bad)
nop

jge
in
xor
addb
add
(bad)
cmpsb
xchg
in
daa
std
sbb
add
add
aad
andb
mov
mov
gs
(bad)
in
mov
andl
fsubs
addb
subl
xlat
ljmp
and
jb
sbb
add
andl
(bad)
call
push
pop
test
mov
mov
(bad)
fidivrs
ljmp
push
mov
addb
add
loop
xlat
andl
cmp
jge
or
hlt
lea
and
addl
arpl
and
addl
push
js
and
add
addl
lock
cmpl
addb
mov
iret
addb
andl
sbb
cwtl
out
adc
andl
add
cmpsb
lret
xchg
cmpsb
dec
test
addl
add
sub
mov
cmp
push
insb
dec
mov
fiaddl
andb
andl
mov
and
addb
test
and
orl
dec
mov
jmp
in
scas
sub
andb
xor
movsl
orl
andb
xchg
sbb
andb
andb
subb
add
and
cmpb
andl
xor
shlb
sbb
pop
andb
andl
mov
xorb
lds
mov
sub
scas
fcomp
ljmp
xor
addl
and
gs
sub
addl
sbbl
addl
aas
sub
aam
aaa
lock
push
add
andl
test
xchg
addl
pop
inc
and
adc
mov
pop
hlt
adc
test
sti
cwtl
aas
sti
or
mov
mov
insl
cmp
cmpl
(bad)
pop
out
fldl
mov
cwtl
scas
int3
bswap
jecxz
sub
xlat
andl
or
push
insb
cli
cmpsb
popf
mov
lahf
xorl
andl
cmpsb
out
stos
lret
out
stos
jnp
andl
mov
stos
cmc
hlt
mov
addl
pop
outsl
aaa
sahf
(bad)
sbb
rorl
sbb
mov
mov
addb
sub
out
aas
call
andb
adc
popa
inc
jo
std
addl
mov
inc
xorb
add
cwtl
addl
lahf
shlb
(bad)
xorl
loop
roll
jl
mov
mov
mov
adc
and
mov
addl
mov
addl
add
addl
mov
and
mov
mov
std
add
andl
test
repnz
fadds
add
add
out
out
adc
andl
jp
stos
(bad)
imul
adc
add
push
lret
pminub
(bad)
fcompl
loope
xchg
addb
add
subl
mov
addl
fwait

std
push
aad
sub
inc
addl
out
pop
pushf
pop
and
or
andl
mov
fsubrl
jp
add
adc
and
andb
and
and
popf
shl
ss
xor
orl
xorb
add
pop
or
into
cld
aam
sub
mov
add
xchg
cmp
addl
add
mov
in
mov
jno
addl
sub
xor
sbb
mov
addb
addl
pop
ss
or
sbb
mov
sbb
jno
cltd
enter
cmc
inc
repz
xor
addb
andl
push
and
mov
rep
xchg
hlt
mov
mov
add
pop
mov
cs
aad
xorb
add
mov
andb
andl
decl
mov
and
orb
adc
cmc
mov
addl
rolb
movsl
push
addl
addl
shr
and
enter
push
add
mov
andb
mov
inc
cmovp
cmpsb
mov
addl
rorl
insl
mov
cmp
mov
andb
and
out
or
andl
jmp
loopne
xlat
mov
mul
xorb
andb
andl
jnp
sbb
and
addb
sahf
dec
inc
pop
xchg
aam
out
inc
nop

pop
addl
test
lds
cmp
addl
(bad)
push
fdiv
mov
mov
movsl
pop
popf
scas
sub
les
addb
mov
jmp
add
andb
add
bswap
repz
mov
mov
add
andb
(bad)
mov
movsl
sbb
inc
rolb
andl
cmp
dec
addb
addl
hlt
invd
aam
push
scas
addl
addl
int3
lock
add
addb
and
push
addl
lahf
fadd
dec
sbb
add
mov
(bad)
js
jo
aad
xorl
popf
adc
loopne
push
xchg
mov
mov
mov
pop
mov
orb
jl
addb
je
pop
fstps
mov
sti
sbbb
add
outsb
(bad)
enter
stc
pop
mov
fcoms
mov
cltd
stc
cmp
push
jg
outsl
pop
xorb
mov
push
inc
pop
or
andl
mov
shrl
stos
aaa
sbbl
add
addl
imul
addl
pop
push
int
mov
mov
or
test
mov
addb
add
sub
cmc
in
sub
addl
addb
adcl
addl
or
sub
cmpsl
addl
add
inc
out
add
nop

sbb
andl
xchg
aad
add
subb
andl
clc
cmp
imul
and
add
jae
rcrb
rol
mov
mov
addl
inc
mov
daa
les
mov
addl
enter
cmc
mov
andl
das
push
mov
pop
push
jmp
jl
nop

and
addl
cmc
push
data16
pusha
call
addb
mov
fildl
addl
scas
push
popf
mov
addl
lods
jp
clc
stc
out
stc
addb
andl
adc
fcmove
sub
pop
pop
jcxz
andl
xor
dec
and
out
rcrl
mov
mov
add
sub
xorb
add
outsl
jge
iret
cmp
inc
ljmp
xchg
andb
andl
fsubs
stc
xchg
test
addl
into
andl
addl
sub
test
mov
addl
or
mov
andl
addl
push
enter
andl
lods
push
loopne
xchg
cmpl
andl
lret
lret
xchg
addb
mov
mov
stos
push
add
addl
pop
pop
inc
pop
jmp
outsb
jmp
addb
loope
gs
jno
test
addl
test
sbb
xchg
jae
clc
lea
xor
addl
repz
stos
movsb
jns
adc
pop
mov
mov
gs
es
cmp
add
andl
aas
pop
imul
outsl
andb
add
nop

inc
loope
aas
(bad)
scas
popa
andl
sahf
nop

mov
lcall
andb
mov
test
out
adc
andl
stos
int
mov
mov
addl
cmp
add
addb
pop
shl
adc
mov
and
addl
mov
sub
ja
and
orb
popf
sbbl
cmp
addb
std
fstl
sbb
andb
imul
sbb
andl
popa
cmpsl
inc
fldl
andl
jp
into
enter
or
stos
addb
xorl
xor
addl
jp
cwtl
inc
andl
mov
xchg
faddl
mov
addb
stos
int3
dec
jnp
jle
dec
insb
dec
cld
push
pusha
mov
addl
in
sahf
sbb
(bad)
xchg
xor
aad
mov
addb
mov
dec
xor
add
mov
addl
addb
xor
adc
mov
addl
adcl
addb
lods
bnd
xchg
roll
addl
xchg
pop
push
cmp
lcall
andl
out
cwtl
mov
and
add
fwait

sarl
es
sbbl
popa
and
andb
lret
fidivs
xor
fnstenv
cmpsl
movsl
mov
addb
add
into
dec
stos
xchg
repz
pop
jle
insl
andl
sbb
sarb
ret
cld
and
addl
stos
stos
sbb
lret
addb
mov
mov
and
subl
mov
pusha
loope
jmp
clc
add
sub
addb
test
pop
test
xorb
aad
jmp
andl
inc
and
and
push
out
stos
push
mov
and
mov
jne
mov
pop
mov
addl
add
rolw
addl
fldt
movsb
into
jl
andb
andl
(bad)
sbb
into
add
mov
sbbb
xchg
popa
js
xor
or
andl
addl
mov
jae
testl
andl
aaa
clc
out
addl
shll
aad
cmpsl
mov
iret
cmp
addl
mov
cmc
orl
das
jmp
and
and
pushf
aam
sbb
adc
fsubr
adc
insl
addb
mov
mov
sti
push
pop
mov
and
add
add
and
and
addb
jle
cmp
addl
jo
out
andb
jg
int
addb
xchg
jbe
les
jne
frstor
mov
add
sub
lcall
andl
les
cli
andb
add
jne
xchg
or
andl
cmp
shrl
ljmp
andb
mov
out
push
mov
dec
adc
mov
in
pop
add
addb
addl
fstl
and
mov
mov
mov
dec
add
addb
pusha
mov
andl
pushf
sub
mov
and
subb
rcrb
les
repz
mov
addb
xor
mov
aaa
pop
jmp
addl
in
icebp
ss
mov
pushf
mov
cmp
andl
push
dec
andb
mov
mov
les
xorl
add
movsb
mov
andl
add
mov
add
mov
adc
daa
addl
add
addl
add
cmp
addl
stc
shl
add
mov
addb
push
incb
push
mov
out
xor
ret
mov
add
orl
pop
mov
add
add
lcall
addl
mov
imul
lret
cmpsb
fidivs
notl
andl
jge
jns
jle
loop
popf
addl
jo
fucomi
fbstp
stos
mov
and
dec
insl
mov
andb
add
mov
xchg
cld
and
andb
xchg
jmp
pop
popf
popf
mov
addb
add
pushf
sti
inc
push
cmp
pushf
pop
pop
lods
lcall
mov
add
in
xchg
jecxz
sbbl
test
mov
xchg
pop
(bad)
cwtl
add
fstpl
addl
cld
mov
addl
fsubl
jge
int3
add
add
dec
mov
and
insl
ret
xorb
fucom
addb
andl
cmpl
addb
push
imulb
loope
xchg
mov
xchg
in
mov
mov
add
or
stos
jae
xorb
add
cwtl
cmp
out
andb
andl
add
mov
subb
add
pop
int3
inc
mov
icebp
andl
addl
mov
addl
pop
push
fdivl
std
cmp
mov
addl
std
mov
addl
lods
mov
mov
addl
addb
mov
movsl
stc
call
aaa
jns
fsubrl
test
andb
andl
orl
mov
sbbl
or
add
pop
outsl
mov
adcl
addl
cmpsl
dec
rolb
enter
addl
xchg
shll
ja
les
cmp
add
andl
mov
or
pop
push
fildl
addl
andl
push
sarb
andl
pop
or
mov
mov
addl
push
dec
(bad)
call
inc
negb
addb
addl
gs
pop
jg
xlat
mov
addl
add
cmp
addb
mov
mov
lock
xchg
cltd
sbb
andl
jb
popa
test
in
andl
addl
(bad)
aam
xorl
notl
mov
push
add
ljmp
add
add
mov
addl
fs
leave
mov
js
lahf
aad
stc
andl
sarb
in
mov
andl
aam
xorb
mov
aas
mov
cmpsl
in
sbb
mov
mov
addl
sbb
mov
and
stos
in
iret
sbb
addl
mov
cmpsl
push
push
andl
mov
out
test
popf
in
mov
roll
addl
inc
addl
addb
jmp
stc
mov
imul
addl
xorl
dec
addb
add
ret
mov
addb
andl
addl
cmpsb
insb
mov
mov
mov
addb
dec
sbb
pushf
dec
and
andb
cmp
lock
push
in
jp
int
js
loop
mov
mov
addl
and
mov
andl
or
movsb
pop
mov
and
addl
adc
scas
mov
addl
mov
cmp
pop
pop
dec
decb
addb
addl
(bad)
mov
and
sbb
rorb
in
shrb
std
cmpsb
addb
andl
and
sub
addb
dec
movl
addb
mov
outsl
or
scas
into
cwtl
mov
adc
addl
cmp
mov
add
xchg
dec
and
psubsw
fcomps
and
adcb
sbbl
xor
addb
fsubs
or
outsl
mov
xchg
addl
and
jnp
addl
mov
push
mov
cs
jmp
andb
iret
and
loop
out
add
and
adc
addb
mov
cmc
hlt
test
and
add
fmulp
test
andl
aaa
fucomp
mov
gs
mov
inc
les
addl
mov
cmpsl
xchg
mov
addl
xchg
mov
aaa
test
outsb
mov
mov
lds
mov
addl
les
out
mov
xor
addl
int3
(bad)
es
pop
sbb
mov
jno
pop
imul
mov
call
sub
mov
rcll
xor
mov
addl
mov
andl
testb
sbb
addb
mov
repz
pop
popa
addb
addl
xorb
sbb
ret
mov
and
orb
or
xorl
(bad)
int3
xchg
aam
jge
push
sbb
fiadds
addl
test
jbe
or
andl
fsubs
jp
andl
mov
shll
pop
addb
add
sub
stos
arpl
mov
andl
mov
xchg
cmpsl
scas
mov
andl
pusha
mov
lea
bound
andl
dec
cltd
push
stos
iret
mov
leave
nop

mov
pop
aad
mov
addl
je
add
sti
cmp
xor
addl
xchg
jns
lock
sbb
int
mov
addl
push
movl
mov
add
std
movsl
xchg
sbb
andb
mov
das
movsl
add
jmp
andl
xchg
inc
adc
mov
addl
fiadds
(bad)
mov
mov
jp
mov
mov
andl
andb
jo
sarl
mov
mov
addl
push
mov
addb
add
xor
fsts
mov
add
stos
sti
sub
fbstp
sub
dec
into
and
addl
mov
addb
mov
and
add
addl
or
push
enter
addl
in
push
cmc
popa
mov
sbb
addb
andl
nop

dec
jae
push
in
sti
jge
andl
adcl
xorl
push
insl
push
add
test
push
cld
sub
sub
cmp
ret
jne
mov
add
rcrb
push
dec
adc
addl
ljmp
push
roll
mov
cmp
jge
andb
addl
notl
pop
pop
pop
andb
mov
adcb
out
outsb
andl
imull
out
fisubrs
andb
and
and
insb
mov
shrb
addb
mov
fmulp
dec
shrl
mov
mov
lods
push
mov
mov
and
addb
mov
addl
push
rol
mov
insl
call
addl
pop
jbe
adc
sti
pop
test
andl
cmpsl
xchg
or
push
ljmp
andl
movsl
(bad)
mov
xchg
jge
(bad)
adc
andb
add
cs
mov
andl
dec
cmpsb
dec
mov
xor
das
fisubs
addl
data16
push
xor
jge
add
xchg
adc
andl
clc
cld
andl
xchg
push
mov
or
jge
add
addb
mov
andl
je
jp
mov
(bad)
dec
cmpsb
andl
addl
xor
cmpsl
rcrl
insb
add
mov
mov
addb
sub
aaa
dec
and
pop
test
addl
cmpsb
mov
imul
addb
aas
fs
ja
jmp
addb
ds
pusha
jnp
orl
mov
pop
xor
rorb
xorb
mov
sub
test
mov
addl
lock
add
add
addl
ss
and
mov
sahf
pop
mov
dec
dec
sub
clc
xlat
ret
test
push
andl
(bad)
(bad)
xchg
lods
lcall
mov
add
jne
pushl
lea
cmc
addl
addb
mov
mov
addl
fidivrl
mov
aad
andl
mov
xorl
mov
sbbl
fistl
andl
enter
pushf
orb
and
add
mov
xorl
add
pop
cmpsb
inc
pop
orb
push
mov
addb
add
inc
add
sbb
je
mov
add
and
sbb
in
in
mov
and
addl
push
inc
push
sbb
addl
fcmovu
push
mov
aas
xor
into
mov
addl
pop
imul
ds
dec
std
lea
and
sti
addb
addb
andl
iret
xlat
push
in
and
mov
mov
andl
xlat
push
pop
fisttps
jp
lods
xchg
mov
add
and
cmpsl
test
mov
and
mov
jmp
xchg
mov
sti
inc
xchg
int
mov
add
mov
mov
add
mov
and
stos
shl
mov
addl
(bad)
and
aaa
aaa
loopne
dec
fldcw
andb
addl
andl
addl
add
mov
and
adcb
cmpsb
push
and
mov
andl
xor
sbb
lahf
addb
mov
xorb
flds
andl
xlat
cmp
addb
into
jg
cmpl
add
mov
push
mov
mov
addl
mov
mov
call
out
xchg
addl
addl
xchg
mov
inc
(bad)
ljmp
lods
andb
add
gs
mov
addl
push
mov
iret
jno
cmc
addl
adc
mov
andl
xlat
cmpl
outsb
xchg
pusha
test
test
mov
addl
add
test
dec
add
addb
mov
and
and
mov
mov
andl
dec
int3
andl
addl
pop
xor
push
pop
xorl
cmp
test
insb
add
add
es
mov
cmp
mov
inc
addl
fninit
mov
faddp
call
js
mov
mov
test
arpl
fmulp
addb
adcl
cmp
mov
mov
andl
and
lahf
adc
add
mov
popa
push
rcrb
add
addl
mov
addl
and
ja
mov
andl
scas
jge
fs
(bad)
mov
addb
add
xchg
xor
imul
add
add
cmp
mov
loope
adc
addl
xchg
jecxz
rcrb
mov
andl
jg
fisttps
fiadds
andl
(bad)
lods
push
xchg
xchg
cld
andb
mov
add
stos
outsb
fists
inc
loope
and
add
adc
pusha
mov
mov
pop
and
andb
xchg
and
cmpsb
int3
imul
mov
addl
xorb
mov
aam
andl
adc
sub
add
mov
cwtl
mov
addl
ss
das
jge
ss
add
iret
je
iret
lods
notl
mov
addb
aas
ljmp
jbe
cmpsl
cmp
jae
ds
addb
andl
pop
and
mov
mov
add
cmp
fsubl
mov
add
das
lock
scas
fsubl
(bad)
cli
lea
addl
andb
andl
add
mov
adcb
imul
mov
sbbl
addl
mov
mov
into
mov
andb
xchg
stos
andl
movsl
push
stos
sbb
jb
add
and
popa
sbb
pop
test
subl
andl
int
mov
mov
and
add
and
xorb
lahf
fsubrs
and
addb
les
addl
cwtl
mov
addl
pop
andb
addb
cmp
dec
add
mov
addb
mov
push
ret
inc
orb
(bad)
pop
xchg
mov
andb
add
jp
andl
push
push
pop
jmp
addl
mov
addb
mov
andl
insb
mov
mov
addl
test
les
add
addb
cmp
mov
andl
mov
and
rcll
mov
adcb
push
mov
pop
mov
addl
flds
loopne
addl
scas
(bad)
xchg
addl
arpl
mov
or
or
mov
mov
xchg
ret
and
movsb
addb
sbbl
ret
iret
mov
addl
sub
add
andl
or
push
pop
xchg
cmp
add
addl
pop
add
and
mov
scas
inc
ds
add
add
addl
push
fucom
sahf
testl
addl
jl
les
cmpsl
xchg
adc
icebp
addl
addb
jp
sub
jb
mov
andb
test
andl
jge
jl
ljmp
mov
lods
mov
cmp
andb
int
xchg
test
test
mov
and
add
cmp
and
andb
test
test
mov
addb
add
cmp
andl
sahf
rol
pop
cmp
mov
aam
and
addl
hlt
and
adc
stc
mov
addb
mov
pop
mov
pop
test
addb
addl
push
mov
and
mov
and
call
add
xor
sbb
addb
andl
mov
and
mov
add
fcomps
fisubl
mov
add
push
xor
lods
lret
enter
mov
add
jl
shlb
stos
adcb
andb
andl
mov
cmc
in
lret
testb
mov
adc
adc
xchg
lods
out
iret
andl
addl
andb
cmpl
ljmp
and
lret
faddl
jne
and
andl
jecxz
mov
add
and
inc
(bad)
mov
mov
or
addl
or
or
xor
mov
adcb
hlt
and
addb
icebp
stos
xor
mov
andb
neg
mov
xorb
addl
xorl
mov
ds
xor
jl
fildl
addb
lods
dec
xchg
mov
dec
aaa
lods
enter
addl
test
shlb
andl
and
gs
inc
jb
in
andb
mov
imul
cmp
pop
jle
xchg
mov
mov
addb
addl
mov
addl
xor
add
addb
cmp
mov
jns
test
andl
stos
xlat
das
notl
sti
push
mov
and
addb
sbb
mov
andb
cmpsb
fiadds
addl
pop
and
addl
mov
add
mov
mov
xchg
inc
mov
mov
mov
mov
adc
xchg
xchg
xor
addl
test
push
andl
xlat
lods
mov
push
addl
mov
and
sbb
adc
jb
popl
addl
and
in
andl
sub
inc
cmpsb
fildl
add
adc
nop

addl
addb
push
sub
pop
loop
out
mov
andb
orb
div
xchg
lea
scas
or
add
jmp
stos
sub
mov
mov
jge
jle
addl
andl
lcall
(bad)
aam
and
add
outsb
fiadds
and
andb
fcmovne
pop
xchg
dec
aas
mov
sti
mov
addl
sub
adcb
add
andl
fsubp
sub
add
cs
(bad)
mov
addb
mov
loopne
xchg
mov
add
addl
mov
and
hlt
cli
mov
and
jecxz
lret
rorl
icebp
inc
dec
push
adc
xchg
int
testl
daa
cmp
rclb
mov
and
mov
mov
adc
add
loopne
aas
mov
mov
add
cmp
mov
or
addl
and
andb
andl
lret
cmp
out
mov
scas
sbb
and
cmpb
fildll
fistps
mov
and
adc
inc
addl
mov
jnp
jno
or
data16
loope
addl
mov
cli
ds
nop

fiaddl
andl
pop
add
mov
addl
mov
addb
mov
push
in
shlb
andb
andl
push
push
mov
cmp
mov
orl
aaa
addl
mov
sub
push
dec
mov
addl
out
movsb
mov
mull
mov
or
mov
mov
addb
stc
add
mov
mov
add
mov
and
or
mov
addl
mov
push
(bad)
fmuls
cltd
mulb
mov
adc
or
addb
addl
insb
lahf
dec
add
ret
xchg
addl
add
addb
adc
inc
or
mov
push
xor
addl
jp
jmp
lcall
addl
xchg
push
incb
fnstsw
xorl
xchg
dec
frstor
lahf
cli
lcall
addl
mov
cmc
dec
stos
addl
sub
jns
andl
daa
pop
insb
jbe
test
addb
pushf
(bad)
mov
in
mov
andl
lahf
subl
andb
dec
add
addl
mov
or
sahf
mov
addl
(bad)
rcl
mov
add
andl
jae
andl
mov
mov
add
into
add
add
add
sahf
out
push
les
push
fnstenv
andb
mov
mov
mov
add
cld
test
addb
andl
notl
addl
into
mov
idivb
cltd
test
fisubs
movsl
mov
and
add
push
pop
nop

jns
adc
lret
and
andl
xchg
or
xorb
add
xchg
mov
mov
addb
cmp
jno
xchg
or
add
jg
(bad)
mov
addb
mov
jl
lea
mov
push
lret
movsl
js
fists
addl
aaa
push
pop
orl
mov
data16
andl
inc
mov
popa
sbb
andl
es
test
mov
mov
add
mov
lds
addl
adcl
test
cmpsl
(bad)
cmpsb
mov
and
enter
cmp
imul
mov
addb
xchg
mov
enter
mov
sbb
jo
or
adcl
addl
addb
jae
pop
mov
andb
iret
test
aad
aaa
loope
popa
mov
mov
push
loop
popf
mov
andl
mov
xor
stc
sbb
xorl
cmp
and
and
add
inc
adc
andl
mov
addl
cltd
movsl
(bad)
mov
mov
addl
nop

lahf
mov
mov
bound
addb
rcrl
mov
andb
add
push
pop
jmp
inc
andl
insl
cltd
cmp
mov
andb
mov
ret
pop
data16
mov
andl
mov
addb
test
push
mov
add
addb
or
enter
fldcw
addl
out
jns
cltd
cmc
pop
pop
push
addl
dec
psubsw
jg
xorl
in
(bad)
rcl
jnp
les
movl
cwtl
add
add
mov
mov
addb
and
std
andl
pop
std
movsl
andl
mov
dec
fisttpll
addl
addl
(bad)
sbb
std
movsl
std
mov
addl
or
cmpsl
xor
jecxz
fimuls
mov
addl
mov
ror
aad
inc
mul
add
addl
outsl
addl
addb
addb
addb
ss
clc
leave
addb
add
scas
cmp
add
add
xorb
ljmp
andb
cmp
andl
xchg
test
pop
js
xorb
andl
push
dec
push
pop
add
scas
mov
mov
andl
xchg
pop
xchg
rcl
es
and
add
and
aaa
lock
and
andb
test
add
aam
sbb
pop
mov
addb
add
icebp
subl
pop
xlat
leave
lods
andl
adcb
in
in
addl
or
hlt
nop

and
addl
insb
jl
cmp
addl
stos
xchg
test
mov
out
pop
test
addl
sbb
shll
mov
and
sbb
and
sarb
mov
andl
sbbl
cltd
shr
xchg
stos
and
andl
xchg
mov
jbe
out
xor
mov
mov
add
movsl
lret
jnp
les
les
addl
push
xorb
or
cld
andb
andl
mov
mov
addl
mov
and
orl
cmpsb
movsl
sbb
mov
addl
loope
lods
addb
aas
sbb
dec
stc
mov
andb
test
andl
mov
and
adc
ja
imul
push
mov
andl
push
pop
mov
sbb
mov
andl
and
mov
sub
outsb
push
add
scas
repnz
nop

out
and
addb
popf
movsb
push
or
addl
std
fs
testb
mov
addl
pop
jl
mov
mov
outsb
rorl
lahf
mov
add
andl
orb
and
andb
add
xchg
push
addb
push
mov
sbbl
addl
dec
aad
addb
addl
js
cmp
addl
mov
(bad)
pop
add
addb
and
mov
add
pop
adcb
push
or
addl
lret
mov
std
clc
outsl
out
xorl
rclb
scas
into
jg
cmpsl
clc
aas
add
add
lret
dec
fiaddl
fwait

les
shll
addb
mov
jl
mov
push
addb
in
inc
scas
movsb
loopne
mov
xorl
out
ja
in
inc
mov
mov
andl
sub
(bad)
leave
repz
addb
lcall
andl
mov
mov
addl
stc
fnsave
andl
not
nop

jmp
ljmp
inc
gs
pop
mov
add
add
int3
idivb
addb
jecxz
iret
shl
xor
jp
andb
mov
mov
aam
mov
addb
add
mov
pop
addb
and
mov
xor
andb
rcl
neg
lea
andl
add
or
and
andb
xor
or
mov
addb
add
xchg
mov
mov
add
andl
fcoms
and
and
mov
stos
add
or
mov
sbb
or
and
cmc
xor
sub
lcall
jl
add
addl
movl
push
mov
addl
add
dec
int3
addb
andl
cli
fmulp
and
mov
push
or
decl
jb
addl
add
fnstsw
xor
iret
sarl
popl
addl
lret
xchg
push
andb
andl
andb
cmp
add
mov
sbbb
ljmp
add
inc
xchg
fcompl
addl
dec
mov
int
push
mov
andb
fs
mov
and
push
jo
test
andl
push
sub
mov
addl
stos
or
lret
addb
mov
mov
andb
andl
pop
cmp
and
addb
test
add
pop
imul
mov
add
xor
cmpb
addl
hlt
jle
fidivl
sub
addl
and
push
mov
cli
adc
add
andl
or
jecxz
mov
add
mov
test
mov
addl
(bad)
cmp
and
cmp
imul
addb
cld
add
xchg
andl
pop
fstps
addb
mov
lea
es
addl
jns
dec
mov
aam
shrl
mov
orb
fstpl
pop
cmpl
mov
adcb
movsl
insl
xor
mov
add
add
(bad)
xchg
(bad)
mov
mov
mov
xor
mov
mov
cld
jp
leave
sub
addb
adc
loope
mov
pusha
xor
andl
mov
jnp
scas
andl
cmp
movsl
mov
sbb
dec
mov
add
addl
jle
(bad)
sbb
addl
push
xchg
andl
mov
adc
stos
orl
mov
add
repz
fadd
addl
addb
mov
lock
ds
shll
ss
dec
push
andb
mov
fs
cmp
inc
xchg
inc
push
or
andl
test
dec
mov
pop
mov
addb
cmp
and
into
addl
mov
and
add
add
(bad)
or
mov
mov
in
loop
xorb
add
pop
lcall
mov
insl
andl
orb
jmp
addl
add
pop
mov
xchg
and
addb
mov
cmpsl
rcrl
add
sbbb
push
push
pop
leave
fsubs
mov
addl
cmpsb
adc
int
insb
addb
andl
cmc
push
xchg
andl
cmc
mov
popf
xchg
addl
add
mov
cmp
mov
sub
add
dec
cwtl
mov
inc
and
push
ds
cmp
repz
andb
andl
and
andb
inc
aaa
pop
fsubr
mov
addl
pushl
andb
and
cltd
cmc
es
push
mov
mov
andb
data16
int3
adc
push
mov
add
mov
addl
icebp
push
notl
jae
dec
mov
mov
addl
or
mov
nop

lcall
mov
adcl
cmp
and
add
mov
ds
lock
outsl
shll
mov
orl
into
mov
pop
popa
(bad)
jmp
mov
mov
addl
adcb
dec
into
jmp
leave
addl
addl
rorl
mov
mov
or
js,pt
jne
rcll
pop
std
sbbb
addb
xor
rolb
mov
mov
add
mov
cmpl
addl
fistpll
subb
sub
addl
mov
xchg
xchg
inc
mov
popa
popf
add
addb
cmp
jbe
sbb
and
mov
addl
xorb
add
addb
filds
addb
mov
lea
adc
and
sbb
cmp
sar
popf
icebp
xchg
roll
addb
ds
inc
roll
addl
sarl
mov
sub
pop
or
addb
sub
test
sub
addb
cmpb
lret
xorl
inc
andl
mov
das
sbb
addl
std
jo
aam
xchg
les
mov
andb
fwait

and
mov
addb
enter
sbb
test
and
mov
jbe
rclb
mov
addb
jae
movsl
out
push
cmovle
fidivs
addl
(bad)
sti
outsb
xor
addl
addb
mov
movb
movsb
fdiv
push
arpl
add
xchg
(bad)
fadds
scas
mov
andl
pop
mov
iret
addb
adcl
inc
xor
push
and
andb
xchg
int
rcrb
jmp
addl
outsl
nop

mov
jge
ds
jl
cwtl
and
andb
inc
fucomi
in
pushf
mov
sub
mov
addb
add
xchg
jmp
add
andl
mov
adc
jp
cmp
mov
add
and
jle
cld
mov
cmp
addl
mov
daa
addb
addl
lahf
fsubrs
pop
test
addl
shlb
push
andl
aas
enter
mov
andl
arpl
dec
bound
ret
push
sub
addb
cmpsl
ret
mov
mov
add
les
jmp
push
mov
push
loop
mov
add
fdivl
movsb
les
and
subb
inc
ret
lea
cmpsl
(bad)
jp
aas
stc
int
andl
addl
pop
addl
fistpl
inc
shrb
adc
andl
andl
jae
mov
addl
cmp
andl
pop
jns
mov
loope,pn
mov
addb
mov
fistpll
and
dec
sti
push
andb
andl
inc
pop
pushf
test
and
addb
pop
xchg
insl
xchg
int3
addl
rcrb
dec
aad
push
shrl
add
jge
mov
mov
addl
jae
mov
mov
mov
jne
jae
ja
jae
addb
ret
sub
call
lea
rol
andb
add
sub
addb
ljmp
test
mov
andb
mov
addl
mov
addl
aam
cmpsl
push
adc
andl
cmc
int
ret
xor
andl
daa
loop
ret
or
cmpb
andl
mov
leave
addl
addl
fadds
addb
xchg
andb
adc
nop

jmp
fiaddl
andl
rcrl
rol
lods
fists
add
mov
adc
mov
mov
je
inc
cltd
stos
xorb
mov
les
mov
addl
lds
mov
push
adcb
and
mov
fbld
mov
addl
fstpt
addb
cmp
addb
add
sub
leave
inc
xchg
addl
addb
das
cmpl
andb
sub
add
fldl
addl
xchg
xlat
xchg
dec
test
adc
mov
inc
shr
cs
call
andb
aam
pop
scas
push
lods
mov
and
add
and
xchg
jmp
and
andl
stos
add
push
mov
addb
add
cmpsl
andl
inc
(bad)
fistps
mov
xchg
lahf
add
and
addl
push
aas
xorl
addl
repnz
sbb
dec
dec
aam
addb
addl
cmp
shll
sbb
addl
adc
mulb
addb
andl
or
andl
in
loop
mov
xorl
scas
jge
pop
xorb
add
loope
jbe
sti
andb
andl
imul
mov
sub
loope,pn
inc
test
mov
addl
stc
xlat
push
rorl
andb
andl
xchg
sar
out
add
addl
daa
sbb
andl
and
scas
cmpsl
dec
lds
add
and
lds
rcll
mov
addb
cwtl
roll
mov
andl
mov
sub
and
addb
in
mov
add
add
daa
ret
leave
stos
rclb
xor
pop
mov
addl
test
loopne
mov
addl
and
push
lea
mov
addb
test
stos
std
outsl
sahf
(bad)
mov
addl
rolb
sahf
adcl
addl
aas
shrb
mov
jnp
xchg
aad
fistl
aas
addb
addl
andl
in
imul
sub
addb
mov
enter
xchg
scas
imul
mov
andl
adc
or
andl
addl
mov
mov
mov
addb
pop
lea
pusha
push
add
add
push
test
int3
loop
addb
popl
xchg
mov
or
mov
mov
push
inc
in
daa
mov
sub
addb
sbb
in
imul
andl
xor
mov
mov
addl
pop
test
xchg
or
cmp
andl
dec
nop

or
rcrb
mov
addl
rorl
adc
sub
xchg
andl
or
pop
ss
andl
cmp
test
pop
repz
mov
addl
addb
lcall
mov
andb
pop
not
mov
add
addl
mov
andl
mov
adc
mov
andl
rolb
and
add
fsubr
mov
test
xchg
and
andl
xlat
mull
addb
add
pop
jo
shr
xchg
or
pushf
pop
sbb
andl
dec
addl
add
cmp
insl
addb
mov
mov
dec
test
icebp
sarl
add
xorb
pop
rcrb
adc
mov
int3
jnp
(bad)
sti
aam
hlt
mov
addb
andl
cld
xlat
iret
and
mov
out
sbb
mov
ret
mov
mov
add
loopne
xor
fisttpll
mov
add
ljmp
rcr
mov
pop
xchg
and
add
andl
or
and
subb
mov
int3
mov
addl
mov
test
sub
mov
addl
andl
addl
addl
xchg
clc
das
dec
mov
mov
andl
sbb
jl
fists
or
xorl
pusha
pop
sti
xchg
sub
mov
addl
sti
(bad)
jnp
icebp
mov
pop
fbld
andl
imul
mov
add
cmp
cmpsl
sub
mov
addl
test
addl
(bad)
mov
int
(bad)
xlat
or
addb
inc
mov
lods
pop
jne
les
clc
andb
add
(bad)
shll
andl
xchg
enter
mov
or
mov
fisttps
jae
jle
stc
jecxz
addb
addl
popf
outsl
repnz
push
ret
mov
addl
nop

es
loopne
cmpsb
faddl
add
mov
pop
xchg
mov
adc
sti
mov
faddl
addb
pop
lret
orl
and
sub
mov
loopne
xchg
or
sbb
fisttpll
xchg
addl
in
push
mov
mov
add
xchg
sbbl
mov
sbb
xorl
xor
push
xorb
mov
loope
lcall
mov
andb
jno
sbbb
and
icebp
mov
add
mov
addl
adcl
test
mov
addb
mov
les
mov
andl
rclb
cmc
sbb
cwtl
dec
mov
addb
gs
loopne
or
andb
mov
ss
pusha
jge
mov
lock
push
addb
add
sti
mov
mov
(bad)
mov
andl
out
lretw
pusha
mov
fidivs
mov
fs
jp
add
dec
sbb
decl
and
add
adc
sbb
xchg
(bad)
and
andb
lahf
ds
push
mov
addl
aas
mov
insb
fs
cmp
addl
mov
xchg
imul
jae
addl
add
xor
sub
testl
inc
jbe
addb
mov
adc
add
(bad)
rcrb
or
inc
fisubrl
add
mov
inc
xchg
fwait

mov
mov
subl
and
addl
cmp
popa
aam
call
sub
andl
icebp
mov
addl
add
or
mov
cmpsl
in
out
or
shrl
mov
jb
lcall
movsb
add
outsl
adc
add
andl
xchg
mov
jge
pop
xchg
movsb
add
mov
add
adc
andl
addl
pop
scas
adc
and
xchg
scas
loope
mov
add
xchg
notb
dec
add
and
xchg
fmuls
sti
insb
movsb
enter
addl
js
popf
mov
adc
aaa
xchg
or
xchg
add
and
sahf
cmp
addb
mov
and
push
fsubrl
mov
xchg
mov
add
sbbl
in
adc
and
mov
addl
mov
mov
sbb
addl
mov
negb
enter
addb
mov
jb
add
addl
mov
pop
ret
cmpsb
nop

cmc
cmp
add
andl
sbb
insl
andb
addl
insl
jmp
cmpsl
arpl
mov
jle
xor
mov
andb
mov
ja
into
and
sar
dec
nop

push
sbbl
mov
addl
andl
and
mov
std
nop

(bad)
sbb
addb
mov
movsb
adc
(bad)
xor
into
dec
cmc
addl
les
jne
sbb
mov
and
adc
into
jno
push
pop
xchg
aaa
mov
mov
mov
mov
addb
or
mov
arpl
push
addl
mov
cmp
dec
andl
das
and
mov
ds
in
movsb
or
addb
subb
xorb
mov
sbb
rcll
xchg
stos
mov
add
mov
xor
lahf
xor
decl
stc
fldl
andl
jmp
orb
mov
addl
mov
into
add
mov
andl
popf
int
mov
addb
lret
addb
add
addb
addb
hlt
in
and
xchg
pop
js
andb
mov
(bad)
cli
iret
into
popf
ret
orl
add
faddl
gs
repnz
shl
addb
and
cld
and
andl
dec
mov
and
add
pop
mov
inc
sahf
stc
out
and
andb
lock
movsb
mov
sbbl
mov
addb
add
mov
add
movsl
adc
insb
andl
adc
jge
sbb
addl
add
addb
andl
addb
addl
or
add
cmp
aad
adcb
addl
es
and
jg
addl
push
xor
fsts
addb
rcrb
cmpsb
jo
jae
sbb
addl
add
in
jno
loope
xorb
add
fwait

imul
mov
add
jge
outsl
mov
xchg
loop
movsl
pop
xchg
xchg
subl
addb
arpl
out
in
scas
push
and
and
aam
call
add
addb
mov
out
cli
mov
and
mov
scas
aaa
(bad)
stos
xorb
lds
addl
xchg
mov
fwait

xchg
add
add
and
jmp
andl
and
cwtl
mov
xchg
andb
andl
in
cwtl
and
addb
pop
in
loope
cli
aas
pop
and
push
mov
mov
add
inc
ret
out
(bad)
sub
mov
addl
cli
test
jb
mov
mov
gs
mov
mov
pop
loop
sub
addb
cmp
fistpll
fsts
andb
add
stc
pop
or
mov
test
xchg
dec
mov
addl
xchg
loope
mov
fwait

addb
addl
mov
addl
subb
mov
addb
mov
js
addl
ret
mov
sbb
in
int3
xchg
cmpl
pop
andl
addl
sub
rclb
mov
andb
imulb
mov
mov
mov
mov
into
push
lock
addb
inc
pop
add
add
sbb
andl
mov
mov
addr16
mov
andl
fists
mov
lret
and
sti
dec
into
pushf
push
xorl
add
adcb
mov
addb
bound
addb
into
incb
mov
add
out
andl
loopne
cmc
in
mov
xchg
stos
dec
in
addb
add
push
mov
rclb
outsb
mov
iret
addl
addb
mov
dec
into
das
mov
addl
ljmp
push
mov
addl
addr16
shll
andl
pop
cmpb
add
mov
add
xchg
cmpsb
inc
imul
fstpl
adc
andl
stc
test
(bad)
and
andb
orl
in
sbb
addb
add
int3
mov
andl
mov
jp
and
addl
fiadds
mov
in
jecxz
push
sub
mulb
sbb
addl
add
mov
mov
andl
pop
fistpll
mov
inc
addb
andl
mov
andl
(bad)
inc
les
mov
mov
add
adc
xorb
add
in
lea
mov
add
addl
jle
aam
push
add
mov
addb
lds
andl
addl
mov
pop
jo
mov
and
mov
inc
icebp
push
mov
mov
andb
subl
ja
cmp
andl
(bad)
lods
repz
and
pop
mov
call
andl
movsb
xchg
roll
adc
xchg
testb
mov
call
(bad)

andl
stc
sub
jmp
mov
mov
add
or
jnp
cmc
insb
push
mov
addl
stc
xchg
test
in
mov
mov
les
push
bound
addb
lahf
and
notb
and
andb
add
insl
cmc
xchg
andl
subl
scas
inc
jge
andb
mov
fldl
loopne
in
and
addb
xor
cmpsl
cmp
addl
orb
mov
mov
aad
shlb
addb
mov
or
sti
dec
cld
andl
addl
mov
mov
mov
andb
add
jle
sub
daa
jge
addl
mov
addl
jnp
xorl
(bad)
aad
out
andl
out
push
push
mov
mov
testb
xchg
addl
faddp
cltd
sub
lea
and
ja
andl
mov
dec
bound
andl
pop
jge
push
aas
scas
or
addl
sarb
mov
addb
cmc
incl
pop
xorb
mov
idivb
andl
add
sub
mov
std
cmpsb
mov
xchg
addl
addb
cmp
stos
(bad)

xchg
and
push
xor
addl
lds
sbb
sbb
add
addb
add
mov
sbb
sbb
andl
leave
movsb
mov
pop
mov
andl
pop
adc
mov
and
add
inc
insb
add
pusha
xor
and
andb
cld
add
lods
shrb
mov
mov
addb
add
andl
cmp
add
mov
shll
pop
popa
mov
bound
addb
mov
nop

stc
cltd
jne
(bad)
jne
orl
addl
cmp
xlat
loop
xchg
jne
and
rcll
andl
cmpl
sti
addb
andl
call
mov
andl
inc
int
call
mov
mov
add
rcrb
mov
push
mov
mov
add
xchg
pop
pop
scas
xchg
test
icebp
outsb
dec
fmuls
mov
add
mov
andb
andl
(bad)
sar
mov
andl
addl
into
xchg
and
addl
mov
jecxz
pop
mov
andb
lock
xchg
(bad)
testl
mov
mov
aas
loopne
mov
add
and
lods
frstor
lds
xorl
dec
ds
cs
insb
xorb
test
mov
mov
frstor
xchg
andl
std
scas
imul
push
addl
fwait

sub
adc
addb
mov
cmp
ljmp
andl
cwtl
inc
jo
sbbb
sub
addb
in
sub
std
(bad)
and
rolb
addl
adc
pop
push
adc
int3
xchg
jecxz
sub
mov
xchg
mulb
out
and
movsl
xor
add
addl
or
addb
andb
test
scas
push
addb
imul
mov
loopne
fldenv
xor
addb
mov
in
adc
movsl
xchg
addl
repz
mov
mov
inc
or
andl
addl
mov
mov
addb
(bad)
jg
push
ds
add
add
xchg
mov
(bad)
repz
lds
leave
orb
andl
add
andl
lds
addb
pop
mov
addl
xchg
lods
pop
jge
mov
scas
andl
pushf
ds
add
addl
loop
inc
test
fsubs
addl
(bad)
sbb
adc
addl
pusha
mov
je
shl
mov
addl
scas
inc
aad
or
jge
add
add
cld
xchg
add
(bad)
test
filds
add
call
mov
xchg
es
andl
xchg
std
mov
sbb
fstp
mov
andl
test
addl
andl
cli
movsb
mov
imul
addb
mov
and
and
andb
and
test
lret
fucomi
cwtl
adcb
dec
mov
addb
add
push
push
addl
add
repz
fsubrs
add
clc
xchg
pop
test
addl
or
addb
addl
push
rclb
fwait

lea
addb
inc
mov
pop
xchg
cmc
rorb
xchg
sbb
or
addb
andl
jmp
sbbb
addb
mov
andl
xchg
xor
inc
mov
mov
mov
add
xor
movsb
xor
nop

data16
mov
mov
aam
mov
adc
out
cmp
mov
addl
aad
inc
jle
mov
icebp
jne
mov
mov
subb
mov
rcrb
mov
adcl
xchg
or
stos
addl
addl
test
cmp
andl
mov
andb
pop
dec
stos
and
mov
and
adc
out
ret
in
clc
lods
mov
mov
addl
addb
mov
xor
imul
andl
dec
rol
and
addb
jnp
addl
add
fwait

dec
push
pop
lds
mov
andb
andb
and
enter
mov
pusha
std
mov
mov
subl
add
andl
mov
leave
cld
subl
mov
test
icebp
test
andb
loope
or
and
sub
fcmovnbe
dec
fmul
mov
andl
xorb
data16
dec
andl
mov
mov
andl
cwtl
inc
rol
daa
sub
addl
mov
andl
addl
leave
mov
mov
mov
addb
aaa
cmpsb
mov
out
cli
jbe
ret
add
add
push
dec
fdivl
shlb
sub
addb
or
mov
mov
mov
std
ficomps
addb
adcl
xchg
fstl
xor
inc
pop
xorb
mov
cwtl
gs
pop
shlb
and
mov
andb
int
or
lahf
add
addl
adc
subb
(bad)
mov
addl
int
push
arpl
lock
les
andl
mov
sarb
push
pushf
jns
addb
add
xchg
mov
add
add
or
add
rclb
int3
jmp
andl
scas
mov
xchg
mov
push
fcos
inc
mov
andl
lods
pop
dec
aaa
pop
jle
pminub
and
jg
and
add
and
andb
pusha
movsb
mov
xorb
add
mov
outsl
push
mov
aam
andl
add
sbbl
(bad)
nop

push
cmp
in
addl
add
cmp
adc
addb
mov
out
pop
xlat
xor
dec
mov
lea
add
and
adc
xchg
xchg
or
and
cwtl
mov
mov
icebp
addb
andl
and
mov
mul
dec
pop
enter
les
cwtl
add
faddp
addl
mov
add
outsl
xor
lock
mov
addl
or
mov
mov
andb
andl
add
mov
addb
cmc
pushf
jmp
andl
addl
sub
addl
lcall
int
mov
andb
fcomip
jmp
addl
xor
mov
addl
dec
addb
mov
pop
push
sub
addl
cmpsb
test
imul
push
dec
and
addb
push
test
popf
roll
addl
adc
and
adc
je
mov
addl
mov
or
mov
mov
push
add
add
andl
out
mov
xlat
int
rcl
andb
add
jns
cmpsl
aas
pop
jmp
stc
adc
andl
arpl
std
fdiv
or
addl
addb
jmp
mov
addb
addl
in
andl
jns
test
push
mov
addl
out
test
sti
and
fistl
in
andl
negl
sbb
or
sarb
pop
in
sbb
inc
adc
andb
notb
xorl
hlt
(bad)
cmc
xchg
and
jp
sub
mov
andb
movsl
push
push
sbb
es
dec
das
inc
addl
cwtl
cmp
jns
mov
mov
mov
mov
loopne
sbb
xorl
push
pop
cmc
fisubs
mov
mov
mov
mov
neg
mov
cmpsl
add
int
andl
push
add
fimull
repz
addl
pop
(bad)
mov
addl
mov
xchg
es
xchg
pop
sub
aaa
andl
int
xorb
lret
mov
addl
sbb
mov
clc
sti
pop
addl
addb
scas
adc
mov
andb
xchg
or
fadds
call
add
pop
ret
movl
push
orb
xchg
addl
idiv
jo
mov
and
add
loopne
push
pop
rclb
rcll
mov
addl
xorb
add
shll
and
pop
xor
jmp
xchg
add
pop
xorl
addl
add
dec
pop
stos
push
ret
xor
addl
pop
stos
fdecstp
addb
addl
xchg
or
lds
push
movsl
push
nop

cli
fisubs
and
testl
cmp
addb
andl
lods
aaa
and
mov
test
sub
mov
test
jp
or
xorl
loop
xorb
add
sbbb
mov
add
xchg
sarl
hlt
or
test
jb
and
sbbb
xchg
mov
fs
sbb
addb
andb
rcr
mov
pop
push
push
addl
lret
push
inc
xchg
andb
jecxz
lcall
andl
jnp
adcl
call
out
insb
add
and
mov
lods
and
pop
pop
addb
mov
lahf
add
andb
andl
inc
insl
xchg
test
fistpll
andl
sbb
push
pop
addl
xor
push
imul
addl
in
mov
push
addl
fwait

push
data16
faddl
addb
int
jnp
aas
mul
roll
andb
add
fwait

push
andl
mov
in
push
cmp
andl
xchg
push
addr16
subl
adc
mov
test
stc
mov
mov
or
mov
addl
dec
add
addb
xor
addb
push
sub
mov
andb
in
xor
test
xorl
test
adc
mov
add
add
test
xchg
iret
push
bound
andl
andl
cmpsb
mov
neg
push
mov
xorl
(bad)
and
push
into
filds
data16
sahf
clc
xorb
mov
les
sub
hlt
lods
andl
insb
fs
or
add
addl
and
mov
jp
int
popf
jb
cwtl
ljmp
andl
in
jecxz
cmpsl
push
addb
add
andl
add
add
add
jge
rol
aas
notb
fmul
and
data16
mov
stc
rol
(bad)
dec
cmp
addl
test
push
iret
cmp
fstp
mov
addl
insb
xchg
cmpsl
outsb
movb
and
stos
std
out
dec
imul
mov
and
add
pusha
sar
addb
test
mov
mov
mov
mov
addb
add
or
pushl
lods
andl
sub
std
xchg
mov
imul
pop
xchg
imul
inc
mov
fsubrs
xor
dec
push
sbbl
add
subb
fidivrs
mov
scas
mov
andl
mov
sbb
addb
andl
andl
add
add
sbb
xorl
dec
add
and
addl
orl
outsb
sbb
fwait

in
andb
andl
xor
adc
add
mov
subb
repz
mov
adcl
mov
test
mov
addl
sub
ficoms
adc
scas
fs
dec
mov
andb
mov
ret
int3
andl
(bad)
bound
fistps
notb
add
and
xorl
andl
stos
mov
sbb
sahf
mov
sbb
fdivrl
cmp
andb
andl
out
nop

and
addb
pop
addl
(bad)
divb
addl
mov
mov
ficoms
andl
fistpl
inc
enter
add
andl
clc
cmc
xchg
andb
add
pushf
pop
pop
or
andl
mov
xchg
in
fiaddl
xchg
push
push
xor
filds
andl
in
add
xchg
(bad)
std
aaa
mov
addb
addl
mov
addl
xor
andl
fsubrl
sahf
pop
pop
addl
decb
(bad)
hlt
inc
addl
xchg
mov
sub
mov
fadd
cmp
addb
(bad)
push
xor
andl
mov
ljmp
xchg
stos
scas
icebp
pop
addl
les
fisttps
out
rcrl
popf
or
andl
pop
lds
scas
sti
repz
adcl
adc
mov
andl
in
xchg
push
ret
xchg
or
mov
mov
addl
scas
lcall
and
cmpsl
out
(bad)
movsb
mov
addl
lods
xchg
addl
test
dec
andl
inc
aas
lea
test
filds
add
pop
cmp
mov
stos
or
andl
pop
push
shlb
add
xchg
iret
cwtl
pusha
jp
cmp
xchg
push
fs
addb
add
sbbl
fstp
addb
addl
jmp
mov
aaa
addl
ret
pop
jmp
ret
addl
int
pop
(bad)
mov
andb
jnp
mov
lahf
movsl
loope
mov
mov
addb
add
and
and
addl
test
sub
jae
idivl
and
addl
and
mov
in
addb
mov
xchg
sbb
add
addb
add
rcr
xlat
test
test
andl
mov
test
int3
jmp
addb
andl
mov
inc
and
mov
jp
pop
xor
shlb
jmp
xorl
sbb
addl
orl
mov
and
xchg
xchg
xchg
nop

lods
sbb
arpl
stos
xchg
jne
jle
add
mov
or
(bad)
sarb
sbb
das
test
xchg
andl
addl
andb
addl
mov
mov
mov
andb
es
andl
adcb
rcrl
jbe
jmp
xchg
push
(bad)
xchg
add
and
xor
push
inc
and
addl
fstpt
xchg
lea
out
dec
flds
mov
movsb
sbb
andl
mov
andb
mov
jge
add
addl
push
loope
shr
outsb
test
addl
(bad)
das
add
andl
clc
cwtl
add
dec
andb
add
dec
(bad)
sbb
adc
andl
and
dec
mov
andb
mov
aas
adc
addb
addl
mov
addl
cmp
addb
mov
fsubl
andl
mov
inc
fisubs
in
andl
addl
mov
mov
addb
daa
in
or
subl
andb
daa
mov
nop

xchg
outsb
cltd
fisubrs
addb
fadds
fnstenv
mov
andl
push
or
mov
mov
test
andl
mov
jp
mov
andl
dec
jnp
andl
(bad)
pop
ficomps
push
mov
mov
addb
push
sub
popf
mov
and
mov
mov
mov
pusha
je
(bad)
andl
push
addl
addl
mov
add
add
pop
adcl
andb
lcall
add
addl
(bad)
outsb
cli
adc
addb
or
jmp
andb
xchg
add
jbe
mov
mov
and
add
cli
fcomi
sbb
push
xor
pop
jnp
and
andl
clc
mov
addb
add
mov
ret
lahf
(bad)
cltd
fldenv
cmp
add
adcl
inc
xor
addl
add
(bad)
or
or
addl
sub
add
movsb
lds
inc
adc
arpl
and
sti
std
movsl
lds
jns
mov
addl
lods
and
and
mov
(bad)
fimuls
addb
and
or
addl
subl
jmp
mov
aas
bound
add
addl
xchg
scas
call
fstpt
add
mov
add
and
mov
addb
rcr
add
and
push
xchg
addl
inc
ss
xchg
les
mov
andb
and
call
lahf
mov
addl
sbb
test
andl
(bad)
mov
cmpsl
cmp
addb
mov
mov
insb
cli
andb
andl
xchg
addl
sarl
popa
xchg
push
addl
mov
cli
or
jnp
mov
sub
addl
push
inc
mov
inc
sbb
mov
mov
lcall
xchg
test
jne
mov
addb
icebp
iret
fmuls
scas
repz
subb
rcll
andb
add
fwait

mov
aad
andl
cmpsl
cmp
rorb
andl
lock
fnstsw
mov
andl
arpl
and
mov
mov
andl
inc
jecxz
xchg
fidivrs
mov
addl
iret
add
aas
add
fneni(8087
es
andl
addl
inc
sar
jge
xor
pop
add
mov
addb
or
addl
outsb
movsl
cmpb
mov
and
pop
test
mov
daa
das
push
test
inc
mov
mov
mov
cwtl
lcall
xorl
out
mov
stos
push
testb
mov
or
mov
std
int3
movsb
cwtl
jmp
mov
andl
pop
lea
test
addl
add
addl
mov
loope
repnz
sub
addl
jl
es
ret
gs
or
mov
addb
push
arpl
mov
sbb
movsl
pop
xchg
addl
cmc
addl
addb
mov
jp
or
addl
shll
cmpsl
cmp
xchg
cwtl
xchg
test
andl
lret
mov
jmp
adc
sbb
andl
inc
xchg
or
enter
imul
lds
fs
insl
lea
andl
sarb
xchg
fcoml
imul
shlb
and
andl
or
xorb
add
pop
int3
adc
pusha
les
mov
add
push
shl
sub
add
mov
push
clc
pop
xor
and
mov
test
add
add
rcrl
add
andl
into
adc
shl
addb
andl
xor
addb
pop
into
mov
pop
pop
sahf
notb
addl
add
dec
cmpsb
out
jmp
inc
(bad)
cmp
addl
cmp
add
addl
(bad)
pop
shll
mov
cmpb
(bad)
push
andl
addl
adc
addl
jl
inc
sub
loopne
mov
andb
mov
andl
les
popf
stos
lds
fwait

es
inc
test
mov
andl
xchg
xor
mov
addb
mov
aad
mov
rolb
lret
andb
andl
mov
dec
adc
adc
frstor
mov
sbbl
pop
test
je
andb
mov
pop
mov
addl
(bad)
scas
mov
addb
dec
dec
jp
xchg
jecxz
int
addb
rcrl
sahf
stos
sti
jnp
insl
pushf
subl
addl
outsb
sub
fisubrs
ja
mov
addl
xchg
shll
andb
mov
jno
xchg
addb
addl
xchg
jmp
inc
roll
addl
mov
andl
cltd
repz
in
popa
pushf
(bad)
add
pop
addl
shlb
push
inc
lretw
andl
addl
xorl
jnp
cltd
xchg
clc
cmc
movb
andb
fimull
cmc
xchg
addl
stc
add
adc
or
xchg
movsl
mov
addb
aas
sub
mov
icebp
inc
mov
xorl
sub
mov
pusha
adcb
mov
mov
andl
mov
andl
mov
icebp
mov
rol
inc
cmp
andl
outsl
loop,pn
cmpsb
jnp
mov
sti
lret
adc
addl
sti
(bad)
int3
test
andl
and
(bad)
(bad)
rolb
add
lods
and
add
add
and
inc
push
(bad)
cmpsl
mov
addl
push
movsb
inc
addb
add
pop
xchg
addb
sbb
mov
repnz
call
xor
mov
adc
addl
mov
inc
fsubr
push
pop
popf
push
andb
mov
clc
iret
pop
adc
inc
xchg
mov
addb
add
pop
pop
int3
adcl
andl
fisubrl
cmp
stos
insl
and
addl
adcb
inc
lods
jbe
addl
adc
cmp
mov
adc
sbb
addb
addl
js
addl
pop
jmp
addl
dec
movsb
fdivp
pop
xchg
sbb
dec
xchg
xchg
pop
addb
andl
adc
push
or
mov
andl
sub
pushf
mov
mov
add
sub
jae
or
jg
mov
add
dec
pop
std
fdivs
push
jb
es
fisubrs
addl
iret
mov
pop
pop
addb
and
subb
pop
shr
andl
addl
mov
addl
sbb
cmpb
mov
andb
push
jecxz
fcmovb
lret
mov
mov
addl
outsl
(bad)
adc
test
out
add
and
popf
and
fisubs
stos
push
dec
addb
mov
pushf
fcoms
(bad)
sbbb
andl
cmp
inc
xchg
pop
lahf
lds
adc
and
addb
clc
movsl
(bad)
movl
andb
lea
jle
rcll
addl
or
int3
mov
mov
mov
pop
icebp
js
mov
xorb
addl
jl
les
mov
addl
mull
pop
(bad)
xchg
andl
cld
rcr
pop
mov
arpl
and
cmp
sbbb
add
addb
addl
xor
addl
mov
addl
test
mov
addl
imul
lea
cmc
test
andl
addl
xchg
inc
cld
jne
mov
mov
addb
testb
mov
andb
jg
mov
push
cltd
pop
andl
mov
addb
adc
or
andl
cmpsb
fdiv
lret
addb
cmpl
or
xorb
mov
xchg
xchg
mov
xorl
or
lock
push
xchg
gs
add
addl
and
and
mov
dec
mov
fucomip
cmc
aam
andl
mov
sbb
cmp
mov
add
stc
mov
shrl
add
add
stos
frstor
subb
andb
mov
stos
sub
and
andl
sub
sbb
out
cltd
cmpsl
mov
adc
push
addb
andl
jno
addl
imulb
shrb
(bad)
jbe
push
test
and
add
and
mov
mov
addl
popa
icebp
adc
dec
stc
enter
addl
orl
mov
movl
iret
jp
bound
insl
cmpl
test
add
xor
cmpl
addb
mov
test
adc
mov
scas
mov
addb
addl
jne
(bad)
lea
dec
push
test
and
sbb
movups
lahf
das
addb
andl
int
xchg
xchg
(bad)
call
xchg
nop

and
mov
fmuls
(bad)
es
adc
push
adc
add
hlt
or
imul
jbe
dec
jns
insl
les
xchg
xchg
inc
xorb
add
jle
cli
andb
andl
push
cmp
cwtl
jno
cltd
sub
and
sbb
cmc
into
movsl
repnz
jns
jle
xchg
andl
addl
iret
jns
andb
sbb
jmp
jmp
xorb
addb
sbb
mov
andl
pop
xchg
gs
mov
andb
and
push
lock
andb
adc
addb
mov
sbbl
out
push
pop
ficomps
mov
(bad)
xchg
inc
lods
cs
(bad)
stc
jo
inc
mov
mov
addb
pop
add
push
inc
addl
movsb
subb
(bad)
in
push
cmpsl
stos
pop
mov
dec
scas
mov
addl
xor
enter
addb
(bad)
xchg
mov
xchg
add
in
add
andl
jmp
addl
int3
xchg
les
addb
ret
negb
addl
aas
dec
mov
lret
aas
sarl
(bad)
in
push
inc
addb
addl
mov
andl
xchg
adc
mov
fiadds
insb
add
addb
mov
stos
xlat
addl
push
shll
push
cltd
fs
addl
jp
mov
addb
addl
sub
push
addl
les
mov
repz
aam
fiadds
addb
in
mov
andl
add
xorl
addb
add
scas
int
xlat
jno
movsb
gs
xorb
mov
push
add
addb
push
fwait

push
xchg
cs
inc
enter
mov
addb
jmp
xchg
mov
push
sub
mulb
addl
mov
rcl
roll
addl
arpl
mov
add
addl
push
xorb
dec
pop
addl
addb
push
insl
outsb
mov
inc
xchg
test
andb
add
jnp
aas
sbbl
addb
add
xor
lea
cltd
(bad)
adcl
addl
pop
mov
mov
fs
leave
jge
fisttpll
and
add
add
sahf
lahf
and
andb
fidivs
or
inc
pop
mov
addb
add
rorb
rorb
addb
add
sub
xor
jg
and
addl
sbb
addb
mov
ret
adc
addb
addl
sti
or
(bad)
loop
cmpsb
xchg
sbb
dec
test
jecxz
mov
and
jp
cmp
mov
inc
addb
andl
inc
lock
mov
addb
push
mov
in
jge
adc
out
mov
mov
add
push
jb
fisttps
es
test
roll
addl
orb
add
addl
lcall
and
orb
add
addb
mov
enter
cmpsb
popf
fs
mov
addl
push
test
sahf
mov
andb
(bad)
fsubp
loopne
test
andb
fisubs
jp
insb
sub
test
andb
and
ret
jg
nop

sbb
xorl
mov
mov
inc
andb
andl
adc
adcb
daa
and
addb
shll
push
ret
(bad)
icebp
pop
orl
add
cmpb
cmpsl
(bad)
popf
movsb
int3
aad
mov
addl
pop
imul
add
movsl
dec
mov
mov
and
mov
xchg
(bad)
mov
mov
cld
outsl
adc
sub
mov
icebp
andb
add
inc
fldl
std
ror
sbbb
xchg
andl
xorb
sbb
andb
mov
jp
leave
or
in
(bad)
lods
mov
lods
cmp
andl
add
andl
jg
jmp
xchg
sub
inc
xor
add
addb
(bad)
jl
andb
lock
add
andl
sub
nop

mov
xchg
cwtl
cmpsl
inc
andl
addl
push
mov
mov
andb
inc
test
mov
cld
orl
adc
jo
addb
aam
xchg
jecxz
pop
andl
addb
xorl
sbb
dec
jb
and
(bad)
icebp
jecxz
movsl
xorb
mov
int
out
dec
enter
xchg
stos
or
addb
(bad)
lds
or
xlat
rcr
andl
cmp
fs
jge
ss
test
mov
addb
insb
mov
mov
addb
add
adc
pop
mov
pop
out
addb
add
gs
shrl
xchg
aas
addl
addb
add
fisubs
xchg
andb
mov
cmpsb
xor
addb
add
test
xchg
in
stos
addb
orl
add
(bad)
sti
mov
and
(bad)
movsl
lahf
addl
(bad)
in
add
loope
jecxz
data16
and
add
pop
incb
lock
andb
fsubl
sub
insb
sub
pop
add
addb
add
fwait

add
ljmp
fldl
add
sbbl
mov
mov
or
popf
mov
and
andl
sbb
push
add
mov
fisubs
add
addl
sti
repz
mov
addl
ss
icebp
repnz
addb
andl
outsl
cs
or
and
andl
cmp
mov
add
rcll
aam
addl
or
(bad)
xlat
or
andb
andl
and
addb
nop

inc
clc
andl
addl
ljmp
addb
add
mov
addb
js
adc
addl
lahf
stos
xchg
mov
mov
andl
scas
out
sub
push
out
ljmp
movsl
orl
add
xchg
mov
movsb
subw
inc
insb
lahf
and
addb
xchg
cwtl
roll
addl
add
adc
addb
dec
orb
mov
mov
sarl
push
inc
push
push
xchg
add
andl
mov
mull
insb
addl
addl
stc
and
addl
xchg
push
cli
pop
adc
cmpb
cmpl
xorl
mov
or
cltd
mov
andl
inc
sbb
sti
dec
lret
cltd
andl
loopne
stc
sbb
fldcw
adc
andl
cmpsl
dec
xchg
adc
mov
andl
ficompl
lret
mov
andl
addl
mov
mov
andb
fadds
addl
or
or
call
addb
insl
lods
cwtl
testb
testl
stos
add
fcompp
jno
ljmp
andl
add
dec
sbb
addl
fnsave
mov
xorl
xchg
pushf
popf
test
mov
and
cltd
sub
mov
addl
dec
sbb
cltd
sub
addb
rclb
inc
adc
ds
and
addb
add
test
pop
or
movsb
addl
addb
sbb
int
leave
push
in
andb
mov
push
mov
adc
mov
add
(bad)
lock
addb
addl
mov
add
lret
nop

inc
(bad)

and
test
fs
jb
mov
andl
ret
xchg
or
je
add
pop
cmc
jge
ret
andl
mov
mov
cltd
pop
push
and
mov
addb
add
add
or
add
or
mov
data16
insb
cmpsb
bound
addl
add
andl
dec
dec
mov
andl
addb
adc
rcrl
addl
inc
sbbl
stc
xchg
cltd
scas
inc
loopne
sqrtps
sahf
sub
mov
out
sbb
mov
jae
jmp
sbb
or
out
addb
andl
sbb
mov
andl
(bad)
xchg
enter
adc
int3
mov
addb
cwtl
jecxz
sahf
out
pop
push
xorb
add
cmp
andb
andl
icebp
cmpl
addb
andl
mov
cmpl
andb
sbb
lahf
cmp
les
inc
jae
loopne
out
repnz
andb
sbb
rcrb
orl
addl
dec
inc
sub
clc
cmc
out
jmp
xor
lock
and
shrb
addl
mov
clc
test
and
add
popf
rclb
scas
(bad)
roll
andl
aad
andb
addl
clc
cltd
jge
push
aam
ret
mov
cmp
mov
addl
mov
mov
xchg
lock
or
sti
mov
add
andl
sti
jg
pop
andb
add
mov
daa
or
int3
andl
in
out
cmp
jecxz
nop

idivl
dec
mov
mov
leave
sub
sub
cld
or
flds
andl
and
enter
inc
push
xlat
scas
test
addl
pop
adc
add
addb
pop
out
int
outsl
sub
addl
dec
cmp
pushl
mov
fldl
mov
imul
addb
roll
xlat
and
inc
jp
roll
addl
lea
cmp
mov
addl
lods
mov
stos
xor
push
andl
mov
inc
xor
ret
mov
xorl
xchg
iret
mov
andl
or
push
mov
mov
andb
sub
cmp
scas
ss
scas
imulb
add
addl
adcb
addb
push
test
add
daa
andl
push
call
int3
movsb
les
mov
in
or
andl
xchg
lds
and
addb
and
ja
cs
gs
andb
mov
scas
xor
addb
add
pop
ja
int
test
mov
xchg
cmp
mov
addl
shl
cmpsl
popa
fildl
mov
and
add
sub
int3
ja
or
jmp
and
andl
jle
mov
addb
add
mov
and
mov
add
repz
xorl
add
bound
xchg
xor
addl
mov
mov
cmpsb
push
adc
imul
scas
cmc
inc
xchg
out
push
mov
adc
outsl
ud0
adc
sahf
out
xchg
repz
(bad)
sub
cmp
cmpsb
push
into
fildll
or
adc
(bad)
(bad)
iret
xchg
test
mov
add
and
mov
add
xlat
iret
xchg
test
into
push
cmpsl
inc
outsl
fistl
cltd
sub
and
lea
sub
add
mov
cmpsb
sbb
leave
sahf
(bad)
cmp
mov
cmc
cltd
dec
add
icebp
push
daa
test
adc
sub
pop
imul
das
dec
notl
jns
adc
dec
aad
mov
xchg
mov
sub
sbb
xchg
mov
mov
mov
pop
rclb
add
lea
call
setnp
mov
in
mov
loopne
movsb
mov
jge
clc
into
subl
test
cld
xchg
cltd
fwait

addb
hlt
test
test
test
jecxz
js
jp
stos
popa
es
push
mov
adcl
xchg
lcall
data16
in
pusha
subl
out
(bad)
(bad)
stc
push
in
add
into
inc
ja
sbb
stos
andl
outsb
out
jecxz
pop
mov
mov
xor
inc
xchg
xor
pop
sub
xchg
or
mov
cmp
inc
adc
lods
popl
xchg
xorl
in
sub
into
int3
sub
test
(bad)
push
rol
cmc
nop

icebp
idiv
mov
shll
hlt
rorl
hlt
sbb
cwtl
cmpsl
pop
repz
pop
add
push
xchg
loop
fisubrs
or
inc
push
call
mov
xlat
xor
xchg
imul
mov
xchg
adc
aam
push
out
push
xchg
add
fsubrl
in
push
dec
fimuls
jecxz
xchg
leave
cmp
jns
js
push
xchg
push
or
adc
lahf
aam
pop
pop
das
and
subb
xor
mov
les
jmp
add
add
fucomp
imull
inc
push
jb
cltd
jp
rcrb
imul
pop
or
popf
xchg
mov
es
push
pop
test
inc
cmpsl
cwtl
add
shr
inc
lret
cmp
adcl
gs
sbbb
mov
mov
aas
pop
(bad)
aad
xchg
xchg
and
cmp
ss
mov
neg
sub
or
mull
xchg
inc
icebp
orb
lods
mov
push
push
adc
cmp
lea
push
or
xor
aam
jns
test
jle
cli
jns
subb
mov
cmpsb
add
scas
sbb
pop
in
mov
or
das
sti
mov
mov
xor
dec
sbb
out
adc
subb
cwtl
sbb
pushf
outsb
sbb
jecxz
div
lahf
xchg
dec
pop
inc
aam
shrl
dec
mov
xchg
lods
mov
or
lret
clc
jno
mov
fimuls
jp
mov
and
fistpll
push
adc
mov
mov
mov
push
jnp
clc
dec
xchg
sub
icebp
test
mov
inc
inc
insb
xchg
mov
int
or
inc
rcll
js
adcl
test
lcall
les
testl
mov
sbb
repz
loop
mov
jl
xchg
cmp
mov
dec
xorl
jle
xor
jl
add
pop
mov
or
dec
fimuls
push
scas
cmc
iret
int
orl
pop
mov
mov
mov
or
dec
lcall
adc
mov
jno
notb
dec
nop

call
cld
pusha
faddl
nop

lds
rol
or
xlat
inc
mov
sbb
cltd
cmp
dec
es
addr16
and
dec
inc
arpl
xor
icebp
shlb
leave
or
push
xchg
clc
add
sar
mov
jmp
outsl
cmpsl
mov
mov
jmp
mov
or
push
int
add
inc
popa
jae
mov
mov
mov
cwtl
xchg
inc
test
jl
stos
mov
inc
dec
add
jle
pop
add
jge
push
test
(bad)
mov
inc
shll
lahf
mov
bound
push
mov
mov
add
rep
in
mov
(bad)
push
(bad)

lahf
(bad)
push
push
call
xchg
mov
addl
add
addb
pop
or
jbe
pop
pop
jp
pop
lods
jae
mov
pop
sti
mov
xchg
enter
repz
sahf
fs
(bad)
fdivp
sub
outsl
xor
stos
hlt
jb
adc
loop
xor
jae
(bad)
rorl
(bad)
fimuls
sbb
outsl
stos
fucomi
mov
adc
push
enter
jge
ret
fstpt
std
fxch
popf
insb
loop
mov
stos
lods
mov
aam
icebp
fists
pop
stc
jge
or
inc
icebp
adcl
lods
pop
xor
cmp
sbb
sbb
sub
movsl
mov
gs
pushl
pop
pop
pop
insb
or
insl
or
imul
aad
cmpsl
rorl
xor
inc
or
sub
xchg
fmull
gs
popf
cmpl
cwtl
add
pop
mov
pop
fnstsw
fldl
push
clc
cmp
mov
insl
std
xorl
leave
push
dec
mov
inc
lahf
(bad)
popa
scas
lea
shll
outsl
incl
sti
or
outsl
mov
orl
ss
notb
mov
addl
outsl
in
mov
test
jo
jg
jno
sub
pop
cld
pop
scas
xor
pop
mov
inc
stc
in
loop
fdivp
subb
(bad)
pop
and
jg
sarb
fldenv
insl
imulb
cs
adc
enter
dec
push
ret
mov
(bad)
dec
dec
popf
mov
rcrb
test
adc
out
lret
mov
xchg
aad
rclb
sbb
pop
fiadds
sbb
mov
xchg
scas
pushf
jp
test
jo
cld
lea
pop
lods
sub
and
mov
fidivrs
cs
xchg
fiaddl
call
pop
das
stos
mov
ret
dec
xor
subl
mov
xchg
and
jo
push
test
icebp
test
add
insb
sbb
mov
rol
jb
dec
ret
ljmp
enter
or
jp
(bad)
mov
xchg
xor
cmc
(bad)
enter
push
(bad)
adc
fcompl
ja
shr
mov
scas
out
int
adc
inc
fnstenv
stc
xor
cmp
xchg
xor
outsl
rorb
(bad)
sub
call
popf
push
out
test
or
mov
aas
dec
mov
fucom
rsm
dec
int3
mov
fsubrs
xor
cs
das
in
loop
(bad)
popl
xchg
fucomp
repz
arpl
(bad)
fcom
popf
xchg
jle
iret
fwait

mov
lcall
cmpsl
inc
loope
mov
jecxz
push
or
and
lahf
andb
cmp
dec
dec
loope
in
jbe
cmpsl
int3
xchg
(bad)
loope
inc
inc
and
dec
movsb
scas
sbb
cltd
adc
push
push
push
jmp
adcb
ret
pop
movsl
cld
xchg
daa
xchg
enter
test
daa
sub
mov
xorl
dec
adc
and
dec
jnp
xchg
add
jb
orb
push
jno
and
sub
nop

aad
cmp
pushf
push
xor
fisttpll
pop
or
jnp
pop
fdivr
mov
fidivl
adc
imul
jno
inc
sti
aad
mov
lret
shl
cmp
or
lahf
xchg
mov
xchg
movsl
scas
pop
js
inc
aad
dec
or
xchg
mov
mov
sbb
add
outsl
loopne
jle
jge
loopne
xor
(bad)
sahf
test
jmp
fisubl
imull
xchg
test
andl
lock
sub
or
sbb
ss
rcll
testl
test
bswap
inc
outsb
stos
neg
pop
jnp
mov
cmp
mov
ljmp
ss
jo
aaa
adc
mov
stc
rolb
or
bound
and
ss
in
ja
loop
loop
aad
stc
sbb
out
push
add
adc
mov
pusha
mov
enter
into
push
ja
adc
dec
mov
pop
jl
stos
mov
inc
lods
pop
xor
and
fs
popf
inc
mov
mov
stos
fnstsw
fmulp
outsb
xchg
insb
cmpsb
movd
das
pop
mov
fldcw
mov
test
andb
leave
mov
shrl
push
jo
pop
adc
add
jb
outsl
(bad)
xchg
iret
shld
orb
popa
adc
repnz
sub
xor
sbb
fsubl
andb
jmp
and
rclb
aam
mov
(bad)
insb
or
cs
add
push
xor
and
enter
and
and
in
addb
fistps
mov
xor
xchg
in
fs
jle
sub
mov
stos
jp
xchg
mov
js
mov
mov
sub
jb
push
mov
sbb
sbbb
mov
jo
(bad)
jmp
xor
test
mov
sbb
shlb
or
mov
sti
je
sbb
aaa
inc
sbb
push
push
loop
daa
push
fldenv
mov
fs
fists
jmp
dec
cmpb
cs
mov
daa
adcb
jmp
(bad)
xorb
mov
dec
push
adcb
daa
jg
repnz
sub
mov
cmp
int3
xchg
bound
lods
or
fwait

out
(bad)
in
xchg
outsl
xchg
jge
dec
sbb
xor
in
scas
pop
movb
aas
loop
dec
adc
adc
xchg
jns
iret
shl
push
cmpsl
fs
lock
dec
mov
dec
daa
subl
fisubl
xor
(bad)
mov
in
inc
or
movsb
jbe
jo
loope
sbb
dec
dec
jae
or
fsubrs
adc
in
lds
adc
stos
faddp
or
mov
pushf
mov
dec
mov
dec
fldcw
fsubrp
inc
inc
cwtl
frstors
xor
mov
push
std
sub
jae
push
jo
push
popa
imul
xor
cmc
ret
cltd
ja
loope
repz
(bad)
dec
cmpb
test
mov
addl
fdiv
jmp
add
popf
movsb
jecxz
stos
test
ljmp
cmp
add
addb
pop
sub
pop
fisttpl
lods
or
jnp
fimuls
mov
push
enter
jecxz
jae
das
mov
sub
mov
lcall
popf
cmp
pop
or
mov
inc
sbb
cld
in
or
inc
into
shll
jnp
sbb
clc
out
lods
or
or
jae
int3
inc
sbbl
sub
add
subl
lods
mov
jmp
les
ss
mov
sbb
dec
lahf
cmp
push
and
in
imul
pop
fildl
mov
pop
mov
hlt
inc
and
push
sti
mov
js
in
mov
or
xor
cld
xor
push
(bad)
out
xchg
pop
mov
(bad)
daa
ret
ret
cmp
jp
or
ret
push
push
adc
shlb
addr16
addl
test
mov
das
cmpl
(bad)
jmp
dec
test
jecxz
int3
push
(bad)
enter
test
out
in
xchg
pop
dec
xchg
test
mov
lret
cmp
lock
dec
mov
and
fldl
sti
into
and
pop
and
mov
aam
fnstenv
inc
fldl
xchg
imul
dec
cmp
pop
mov
xor
mov
or
mov
das
orl
xchg
push
pop
cwtl
ss
mov
insb
add
jbe
pop
xchg
iret
or
inc
fidivrs
iret
inc
testb
shll
addb
mov
adc
je
xchg
mov
bound
or
ret
push
sbb
fistl
in
or
(bad)
aad
leave
incl
or
add
push
jo
dec
dec
fisttpl
lahf
mov
push
jb
xchg
andb
mov
les
sub
push
adcl
mov
loope
or
push
dec
pop
lahf
xor
(bad)

pop
mov
movsl
fsubrp
adc
pusha
adc
cwtl
inc
mov
inc
jge
mov
mov
lret
test
mov
inc
add
mov
rorb
mov
jg
stos
sbb
add
inc
mov
pop
xor
or
ret
sub
dec
push
pop
in
sub
shl
lea
imul
cmp
add
subl
or
xchg
jbe
jne,pt
mov
mov
fstl
test
aam
xchg
dec
leave
lods
in
repnz
test
xor
adc
xor
mov
fstpt
mov
js
aad
in
es
add
and
loope
dec
sub
shlb
xchg
(bad)
mov
xchg
in
inc
mov
fstpt
cwtl
mov
stos
fsubs
repz
aaa
add
xor
jb
mov
rorb
or
xchg
out
xchg
rclb
pop
jae
sub
or
loopne
cmp
mov
and
push
jle
mov
xchg
out
incl
inc
test
icebp
adc
shll
sbb
cld
xchg
into
movl
sbbb
mov
xchg
test
int
jno
inc
or
lahf
movsl
fbld
pop
cmp
sar
loop
jp
or
fnstsw
popa
pop
ljmp
aaa
(bad)
call
into
cmp
test
stos
inc
xchg
xor
fs
inc
xor
jg
in
xchg
jmp
or
jg
jnp
inc
mov
lahf
or
faddl
push
mov
cwtl
ret
lcall
(bad)
mov
sahf
mov
sbbb
mov
cmp
loop
(bad)
int
addb
add
(bad)
dec
ja
mov
shl
mov
mov
mov
inc
jne
addl
sub
daa
adc
xchg
mov
(bad)
pop
jbe
or
push
into
cwtl
mov
mov
mov
push
insb
or
xor
rclb
dec
xchg
stos
testl
or
test
or
enter
xchg
clc
iret
ss
int3
lret
mov
xor
aas
cmp
adc
pop
jge
dec
clc
cmp
xchg
out
cs
andb
dec
push
es
push
mov
lods
nop

xchg
adc
test
(bad)
mov
push
movsb
cmp
orb
mov
push
adc
(bad)
push
lods
cmpsb
data16
or
(bad)
xchg
sub
dec
xor
shll
xchg
rorb
adcb
sub
test
mov
fsubrl
fstps
dec
lcall
jge
mov
jmp
leave
sarl
sub
mov
lds
sarl
outsl
xchg
negb
add
mov
test
mov
pop
mov
std
ficoms
sub
rclb
xchg
lea
sti
xchg
shr
and
jbe
xchg
and
lret
cmpb
out
push
fisubl
fs
out
mov
pusha
hlt
inc
lahf
out
subb
mov
xchg
(bad)
in
fmuls
movsl
(bad)
adc
into
aas
mov
mov
inc
fcmovb
int
subb
cmpsb
adc
sahf
movsb
stos
push
(bad)
fisubrs
mov
mov
and
les
dec
out
xorl
lea
or
mov
std
xchg
pop
test
(bad)
outsl
nop

lock
push
fwait

jns
jl
mov
mov
cmpsb
sti
out
mov
mov
xchg
shrl
ret
decl
dec
cs
repz
int3
or
(bad)
popf
xor
mov
stc
cmp
sub
sub
add
mov
mov
aad
jge
cmpl
cli
fs
lret
cs
je
push
jno
cli
mov
add
xchg
movsl
fisttpl
cmpsl
repz
inc
insb
sarl
clc
rorb
push
fwait

cld
sbb
mov
roll
sbb
fstpl
mov
add
insb
cmp
cs
test
ret
outsb
in
orb
jg
fcompl
cmp
mov
mov
inc
inc
or
(bad)
clc
push
or
adc
mov
inc
cmpb
into
in
jne
mov
(bad)
push
mov
xchg
xchg
stos
dec
pop
mov
pop
mov
insl
loop
pop
cmpb
test
test
popf
fimuls
xchg
lahf
xchg
clc
stc
fld
lret
insl
xchg
aaa
fs
lods
mov
inc
cltd
adc
aad
sahf
push
jecxz
mov
shrl
xchg
fidivrs
add
pop
insl
stos
cmp
mov
xchg
push
addr16
xchg
pop
mov
inc
les
test
dec
pop
mov
lea
fmul
jmp
aas
or
cmpsb
data16
sbb
or
push
in
lods
jp
hlt
test
inc
(bad)
in
arpl
test
imul
push
nop

mov
fisttpll
enter
dec
xchg
xchg
lds
xchg
sub
or
into
stos
repnz
lods
ror
cwtl
adc
les
or
jae
stos
xchg
dec
into
std
mov
fs
sbb
(bad)
imul
cmp
xchg
and
pop
xchg
lcall
xor
sti
orb
mov
xchg
xchg
outsl
fs
pop
jmp
dec
test
mov
inc
ret
or
(bad)
jbe
mov
daa
loopne
mov
add
fcoms
movsb
(bad)
cli
addr16
loopne
leave
xchg
cmpsb
adc
movsb
fidivs
lahf
add
mov
js
push
fdivl
imul
mov
mov
cmpsb
rcr
lods
fwait

dec
pusha
rolb
push
test
cmp
adc
int3
clc
out
mov
cmp
addr16
scas
fstpt
cmp
adc
pushf
pop
mov
mov
mov
inc
pop
inc
jg
lcall
movsl
or
int3
jnp
sub
js
daa
dec
leave
jge
les
add
inc
cld
sahf
in
xchg
jle
out
add
shrb
dec
mov
pusha
cmpsb
pop
stos
xchg
xchg
xor
test
lods
(bad)
cmp
stos
scas
test
je
aad
mov
ret
sub
jae
in
xchg
cmp
or
sbb
or
fbld
dec
cmp
test
or
aad
stos
or
sub
loope
mov
adc
fwait

or
inc
jecxz
les
mov
jnp
iret
dec
jecxz
push
lods
mov
les
fcmovnbe
cltd
xor
test
mov
loop
add
in
mov
lret
lret
xchg
jns
pop
pop
push
mov
xchg
adc
xchg
jne
out
jl
xlat
leave
(bad)
(bad)
xchg
daa
sbb
nop

add
(bad)
jae
jl
jl
sbb
sti
sub
test
leave
xor
mov
test
fimull
test
out
mov
ficomps
fidivrs
adcl
ja
and
test
cmp
test
(bad)
xchg
fidivrs
push
lfs
cmpsb
fistps
aaa
scas
xlat
jecxz
and
ffreep
mov
adcl
cmc
roll
lods
xor
lcall
popf
cltd
int
sub
mov
mov
loope
dec
call
cli
pop
adc
inc
xor
jae
or
(bad)
es
fst
fdivs
rcr
lcall
out
pop
dec
pop
mov
(bad)
adc
mov
into
and
fsubs
push
add
jb
cmc
addb
aad
or
and
jp
push
mov
int
(bad)
push
sahf
cmp
out
lahf
add
mov
push
shll
xor
jle
ljmp
cli
je
lcall
or
imul
cmpl
sahf
cmpb
push
mov
mov
push
xor
push
and
(bad)
add
test
mov
orl
xor
push
stc
ljmp
pop
mov
sbbb
mov
popa
mov
sti
stc
and
dec
jno
push
aaa
nop

outsl
and
cltd
mov
mov
cmp
cmc
cwtl
cmpsb
jmp
jmp
in
test
enter
cmpsl
or
mov
iret
xchg
sarl
lds
mov
leave
std
pusha
aas
test
cmp
fs
ja
push
lret
popa
xor
(bad)
pop
push
imull
les
xlat
jbe
push
(bad)
cmp
jl
repz
push
arpl
and
(bad)

xchg
sbb
mov
jbe
mov
or
jge
insb
ss
outsb
mov
int3
and
mov
test
cmp
mov
pop
aam
jns
dec
enter
add
into
popf
xorl
andl
inc
sub
xchg
push
xor
imul
mov
mov
xchg
nop

out
sub
cs
jp
jecxz
add
orb
scas
sbb
cmp
in
in
mov
pop
mov
into
dec
bound
orb
test
add
das
sub
test
enter
add
sbb
(bad)
popf
mov
mov
into
xchg
xchg
aas
push
je
vpcmpeqd
rcr
jp
bound
pusha
jmp
ja
push
or
mov
and
pop
gs
xlat
out
inc
adc
or
jecxz
mov
mov
mov
(bad)
mov
test
in
mov
cmp
adc
dec
xlat
cmpsb
xchg
mov
sbbb
js
icebp
hlt
cmp
lds
mov
sbb
mov
mov
or
bnd
mov
fdivrl
jl
movsl
ljmp
mov
pop
call
add
add
mov
aad
pop
push
or
push
jno
push
stos
mov
dec
dec
xor
dec
mov
xchg
cltd
dec
das
in
mov
outsl
mov
cmp
ds
mov
shlb
and
sarb
push
jmp
lahf
inc
sbb
test
inc
out
and
mov
(bad)
add
(bad)
push
mov
mov
stc
add
xor
rcrb
hlt
into
inc
mov
out
shrb
repz
in
out
inc
(bad)
cmc
add
mov
imul
outsl
mov
add
push
sbb
xchg
movsl
pop
mov
adc
xor
or
dec
pop
out
test
mov
out
mov
or
leave
mov
lahf
xchg
pop
popa
ret
dec
cwtl
xchg
lods
(bad)
or
imul
in
mov
cmc
xchg
push
mov
adc
leave
fucomip
mov
bound
inc
dec
xchg
sahf
mov
subb
jg
lret
mov
cmc
stos
push
sti
push
adc
inc
cwtl
jb
outsl
push
push
dec
mov
lods
lret
dec
loope
aam
ljmp
and
cs
add
mov
cmpb
out
inc
dec
pop
shl
add
add
leave
sbb
in
or
xor
cwtl
stos
adc
ret
pop
add
xor
stos
cli
dec
jae
leave
xchg
imul
mov
subl
daa
clc
int3
sbb
adc
jns
icebp
in
loopne
shlb
ret
push
cmpb
pop
loopne
shll
int
fdivrs
mov
mov
inc
xor
gs
pop
inc
mov
out
mov
test
outsb
jl
xchg
cwtl
adcb
testl
in
jle
xchg
xchg
gs
sbb
test
mov
test
push
adc
xor
mov
int
cmp
inc
subb
xlat
je
xchg
or
jbe
or
scas
and
pop
push
inc
arpl
shll
into
mov
les
cmc
js
cltd
xchg
mov
or
cmc
popf
mov
js
dec
mov
cmp
movb
int
push
pop
jb
fisubrl
int3
mov
mov
mov
popa
mov
xchg
mov
ret
stc
mov
jne
gs
xor
orb
inc
xlat
in
fwait

inc
jmp
xchg
mov
push
loop
mov
pop
lock
imul
pop
mov
stos
fs
orl
fsubl
mov
lds
xchg
mov
ljmp
adc
loop
lods
cmp
xchg
mov
sbb
cmpsl
mov
les
or
cmpb
cmp
lods
pop
in
leave
and
stc
mov
mov
lahf
test
movsl
dec
and
(bad)
lret
sbb
mov
inc
push
cmp
stos
mov
xor
mov
(bad)
adc
xor
btc
fdivrs
ret
int3
cmp
lahf
les
insl
ja
sub
xchg
mov
mov
add
xchg
lods
cmc
inc
or
fwait

mov
adc
add
sub
movl
hlt
lds
or
fistl
xchg
rclb
clc
cltd
lods
popf
aad
loopne
mov
or
ss
cmp
lods
cmp
and
sub
add
fistl
idiv
in
sub
clc
cltd
les
inc
jecxz
testb
gs
aas
push
mov
cmp
xchg
lea
out
pop
insb
sub
imul
mov
scas
xchg
or
andb
cmp
repz
rep
jl
add
mov
lds
sbb
orl
imul
or
cmc
push
jg
in
cmc
mov
mov
adc
lret
faddl
adcl
mov
xchg
ss
inc
fs
cmc
fwait

add
orl
or
mov
cwtl
rolb
insb
sbbl
andl
xor
and
fmull
ja
(bad)
icebp
pop
enter
adcl
or
mov
lea
cmp
ficomps
mov
jnp
jbe
in
dec
mov
test
add
loopne
out
insl
pop
(bad)
sbb
pop
addl
dec
enter
push
push
arpl
aam
cmpsb
orb
push
call
fucomip
test
inc
ffree
jns
ss
in
fldcw
xlat
mov
movsb
fisttps
or
lods
cmpsb
sbb
sti
pop
rcl
or
adc
loopne
sub
adc
clc
sub
or
add
pop
inc
sbb
mov
fisubrs
sub
cmp
sbb
int
xchg
pop
fists
mov
mov
icebp
lock
cmp
cmp
adc
int
inc
jmp
cmp
mov
ret
push
xchg
fsubl
(bad)
outsb
scas
adc
lcall
inc
(bad)
cld
in
pop
mov
cmp
out
mov
imul
xchg
xchg
inc
add
and
(bad)
jb
jno
add
pop
mov
aad
imul
ret
pusha
popf
adc
movsb
xor
(bad)
test
cwtl
neg
cwtl
inc
test
cmc
inc
pop
nop

jno
mov
rolb
sub
and
inc
xlat
mov
or
addb
movsl
jmp
ds
pusha
(bad)
and
jno
cmpsb
stos
data16
mov
push
cld
adcl
adc
bsr
mov
inc
fadds
push
in
mov
xor
sbb
outsl
mov
test
and
jns
add
shl
shl
rcl
adc
jmp
lahf
sbb
scas
push
xchg
int3
cmc
test
stos
push
sub
inc
les
test
test
fsubrs
mov
into
imul
sbbb
jae
push
cld
mov
imul
push
or
jnp
rclb
sahf
scas
movsb
mov
push
ret
jg
and
test
test
mov
dec
mov
or
sbb
inc
xor
add
lock
add
xorb
sbbb
rol
mov
call
jge
loopne
adc
pop
ljmp
lret
jno
test
lcall
das
andl
xchg
lock
pop
iret
xchg
xchg
mov
dec
push
loop
jns
or
shrb
mov
enter
pop
mov
cmp
out
xor
mov
ret
subl
je
inc
nop

shlb
shlb
out
sbb
andb
dec
fwait

lahf
das
leave
xorb
subb
jl
jmp
clc
push
enter
lods
sbbl
jnp
add
loope
inc
scas
es
ljmp
push
roll
xor
xchg
hlt
push
pop
int
xchg
imul
push
push
shrb
cmp
shrb
xchg
and
lods
aam
outsl
stc
dec
imul
movsl
enter
(bad)
popf
jno
dec
test
into
ret
int3
movsb
cmp
or
orl
xchg
out
and
les
xor
or
xchg
pop
inc
pop
in
shll
and
(bad)
sbbl
(bad)
or
or
push
dec
test
jecxz
sub
cmpsb
rorb
enter
or
xor
adc
cwtl
pop
and
ret
test
rcll
lcall
scas
incl
subl
std
sbb
iret
addl
insb
xlat
cltd
pop
xchg
pop
mov
jo
mov
je
fimuls
hlt
jmp
xor
mov
xchg
adc
(bad)
mov
add
pop
cmp
mov
adcl
cltd
rorb
inc
in
rclb
jmp
adc
insl
mov
outsl
push
mov
frstor
movsb
divl
mov
jle
les
orl
and
cmpsl
test
icebp
aas
dec
or
fwait

or
jecxz
in
mov
shll
sti
mov
push
icebp
adc
bswap
adc
js
int3
movsl
and
xor
jg
inc
rorb
sub
nop

testb
xor
lds
adc
stos
je
addb
mov
mov
in
cmp
adc
jle
scas
rcrb
out
pop
push
or
sahf
push
fwait

push
daa
scas
fstl
add
xor
stc
and
shlb
cmp
lds
add
xor
cltd
dec
aas
mov
cmc
mov
and
rorl
inc
bound
xchg
lea
scas
shrb
std
jno
adc
(bad)

xchg
enter
int
cmpl
dec
push
lock
test
loop
sub
or
dec
stos
adc
lods
sarb
mov
xchg
mov
and
add
sbb
xorl
mov
fmul
mov
dec
lea
add
pop
or
popa
dec
test
scas
and
leave
(bad)
aad
loope
xchg
test
and
mov
insb
cltd
push
scas
int
test
adc
loope
xchg
test
insl
bound
jo
int
in
inc
mov
xor
mov
mov
popf
cmp
pop
call
or
stc
stc
cmp
mov
add
or
(bad)
ret
test
stos
xchg
inc
inc
std
xchg
pop
orl
mov
pop
popl
sbb
mov
iret
pushf
push
outsb
stc
lods
movsb
and
daa
xlat
stc
movsl
test
xor
iret
addl
inc
fidivrs
jle
imul
xchg
insb
xchg
xor
pushf
rcrb
movsb
mov
in
mov
xor
dec
xchg
push
adc
adcl
rcr
push
or
mov
mov
adc
in
inc
mov
ja
lea
popa
andl
ret
rcrb
fisttpll
scas
adc
jmp
jmp
sbb
add
pop
loope
nop

fisubrs
mov
mov
stos
fisubl
out
cltd
or
mov
lea
insb
jmp
or
or
cmc
imul
inc
mov
rcrb
sub
xor
mov
jg
add
enter
inc
shr
mov
iret
sbb
xor
test
(bad)

jne
jmp
int3
mov
mov
or
jp
out
or
push
sar
pop
clc
movsl
cmc
jecxz
lds
or
mov
int3
(bad)
mov
jo
icebp
call
mov
stc
pop
int
add
mov
lods
adc
dec
(bad)
pop
push
fwait

ljmp
add
rclb
or
and
adc
xlat
pop
sbbb
imul
sbbl
push
bswap
ret
pop
bound
fisttpl
movsb
adc
pushf
mov
test
add
dec
out
cmp
scas
popa
lea
shr
add
insb
xchg
xchg
shrb
outsl
xchg
lods
rorl
es
ljmp
mov
push
jae
test
xchg
test
(bad)
and
inc
mov
and
sub
pop
mov
adc
leave
fsubl
jb
push
or
stc
sahf
in
les
pop
out
mov
push
jg
test
cmp
(bad)
mov
jl
incl
sbb
add
mov
jecxz
fs
std
mov
lcall
cmp
inc
fnsave
lds
sub
std
cmp
out
jae
mov
jge
sbbb
int
aam
rcrb
push
mov
jge
adc
xchg
push
adc
jmp
mov
mov
(bad)
pop
jnp
fistpl
enter
shlb
mov
mov
fcomps
lds
icebp
fistl
pop
adc
sahf
cmp
fsts
arpl
add
out
jb
aas
cmp
cli
and
xchg
into
rorl
lds
adc
xlat
jmp
fldl
xchg
jp
rcrl
dec
daa
fldcw
or
aam
shll
xchg
lcall
or
fiadds
adc
lods
push
push
divb
or
fcomp
mov
fwait

outsl
push
out
jbe
fiadds
outsb
pop
nop

mov
dec
in
stos
fidivs
pop
and
pop
sub
scas
cmc
incl
xchg
int
test
mov
mov
pop
es
clc
inc
iret
pop
aam
icebp
xorb
cmp
push
cltd
dec
add
inc
stos
mov
mov
inc
xchg
call
repz
or
insb
stc
stos
cld
inc
xor
sbb
mov
dec
mov
shl
mov
mov
sarl
mov
add
ljmp
xchg
sub
xchg
mov
negl
push
repz
(bad)
pop
dec
aaa
popf
inc
jle
shl
test
pop
enter
jnp
lods
in
mov
out
mov
xchg
mov
jns
add
sti
cwtl
or
jle
insl
das
mov
daa
popf
jg
xlat
xchg
lods
mov
mov
push
push
xor
sub
push
jmp
outsb
dec
add
lock
adc
pop
and
adc
adc
out
(bad)
mov
jb
jmp
push
js
gs
or
and
push
and
fdiv
in
push
sbb
aam
dec
pop
sarb
or
insl
daa
or
jbe
es
mov
mov
mov
mov
push
sahf
xchg
lods
sbb
sbb
in
xchg
mov
movsl
rcrl
jno
and
pushl
repnz
cwtl
fcomps
aas
cs
pop
pop
jbe
shll
(bad)
push
sarb
shl
outsl
cwtl
mov
test
lret
xorl
sub
mov
or
stc
loope
inc
pop
scas
xchg
imul
outsb
jmp
int
les
add
mov
cmc
mov
mov
adc
push
test
lods
push
mov
lds
jnp
xor
mov
inc
jl
cmpsb
stos
mov
pushf
add
inc
mov
inc
push
lcall
jmp
cmpsb
or
das
xchg
or
lahf
test
(bad)
movsb
jae
lea
outsl
lods
lds
lock
xchg
xchg
lds
jnp
or
xor
fldl2e
mov
dec
sub
pusha
stos
rcrl
mov
xchg
mov
fldt
stos
loope
in
sahf
ljmp
pusha
xchg
and
test
inc
cmp
nop

in
mov
stos
mov
repnz
fistpll
mov
imul
xorl
aaa
(bad)
(bad)
sbb
nop

and
(bad)
sbb
xchg
jmp
test
sti
push
xor
orb
add
fstl
mov
sub
lods
rcr
inc
cwtl
stos
mov
outsl
inc
popf
cld
mov
adc
mov
andb
scas
or
mov
pop
push
jae
in
shl
dec
mov
fwait

jnp
outsl
pop
sbb
or
rcrl
sbb
into
cmp
push
adc
movsl
adcl
xor
sbb
push
stc
sub
aas
xchg
idivl
sub
xchg
inc
add
fmull
fisubrs
cwtl
ds
xor
movsl
repz
shl
(bad)
push
push
(bad)

pop
xlat
xlat
ds
jb
and
inc
loope
mov
xor
hlt
and
jl
in
fwait

iret
ja
jmp
adcb
xchg
loop
fidivs
push
mov
pop
inc
arpl
jbe
xchg
subb
out
dec
sbb
jae
stos
nop

fwait

mul
fsubl
dec
sti
test
sti
(bad)
popf
mov
or
roll
call
mov
or
dec
and
stos
jnp
adc
cmpl
lods
mov
dec
pop
addl
imul
xor
add
rcr
lock
push
push
stc
push
into
or
add
mov
cli
notb
lret
cld
icebp
arpl
test
jp
adc
inc
pusha
adc
imul
inc
in
movsl
mov
mov
xchg
test
mov
pop
xlat
dec
insl
adcw
pop
adc
xor
sub
int3
imull
imul
js
pop
int
cmpl
add
dec
mov
shrl
lods
pop
cmpl
cmc
mov
pusha
jle
in
clc
loop
xor
out
xor
hlt
mov
mov
xchg
jo
out
mov
or
jl
push
cmpb
cmpsb
mov
adc
add
mov
out
xchg
adc
pop
or
mov
sbb
inc
loope
or
cmp
push
cmc
lods
dec
ss
stos
mov
out
dec
cmp
push
mov
call
push
add
hlt
or
jmp
cmc
popa
cwtl
pushf
mov
xchg
lcall
shrb
fcompp
leave
inc
mov
xchg
pop
push
pop
aaa
add
sub
jns
fistl
into
les
push
(bad)
cwtl
inc
inc
push
push
mov
lret
mov
test
sbb
add
mov
lret
loop
adc
into
adc
outsb
jno
subb
jns
into
hlt
xchg
add
les
cmp
mov
les
sar
xor
xor
repnz
sbbl
mov
inc
test
lea
les
fucomp
fcomps
jo
loopne
in
shlb
call
pushf
addb
movsb
cwtl
out
mov
sub
mov
or
mov
mov
and
xchg
shlb
sbb
test
orl
or
filds
addr16
xchg
incl
sahf
jmp
xchg
outsb
push
lret
mov
pop
mov
movb
insl
cmpsb
rol
inc
test
jle
fs
push
mov
inc
rol
sbb
jo
add
insl
or
fidivs
cld
notb
in
xor
fists
repz
inc
mov
orb
out
in
mov
cld
fnstcw
mov
adc
dec
jns
fidivrl
jmp
pop
(bad)
lahf
or
or
mov
mov
push
jecxz
andl
test
mov
sub
ds
popf
xchg
mov
pop
fiadds
test
xor
mov
pop
loopne
add
jecxz
rcl
adc
xchg
iret
push
scas
aad
mov
xor
xchg
lret
mov
mov
sahf
inc
iret
inc
pop
push
inc
sbb
cmp
jmp
lret
out
xor
add
push
xor
mov
or
mov
mov
test
xor
push
mov
stc
lods
sub
and
add
pop
iret
cmc
cmpsl
and
xlat
repz
mov
test
popf
mov
je
jnp
sub
xor
mov
in
(bad)

pop
cltd
xchg
mov
and
jnp
cmc
pop
sub
xor
xchg
cmp
cmpsb
testl
fidivl
mov
mov
mov
mov
cwtl
sar
sbb
(bad)
sbb
arpl
insb
sbbb
cmp
pop
cmpsb
(bad)

or
sar
mov
clc
adc
mov
xchg
int3
cmp
nop

fwait

cmpsl
dec
test
(bad)

out
sbb
addb
sbbb
and
and
add
and
push
push
in
dec
inc
addb
xchg
inc
jg
(bad)
cwtl
enter
or
fildl
les
loope
xor
mov
mov
rcl
pop
push
sbb
enter
call
inc
add
xor
xchg
rcll
mov
cmp
or
frstor
mov
and
into
dec
les
adc
jno
jle
mov
hlt
or
rcll
fcoml
sub
sbb
jg
mov
addl
adc
outsl
subl
adc
ret
gs
int
sbbl
or
mov
mov
lods
pop
addb
in
shlb
sbb
movsl
sahf
outsb
mov
iret
sbb
xchg
lea
dec
mov
push
jmp
leave
(bad)
fldl
test
in
shlb
jp
mov
xchg
ss
mov
push
andb
mov
add
lahf
loope
sbb
notl
xchg
lahf
push
cld
test
pop
int
scas
mov
cmpb
jno
hlt
dec
clc
add
rcr
mov
mov
or
orl
rcrb
lret
addl
test
jb
in
subl
pop
fsubl
in
sbb
or
repz
lds
xlat
mov
pop
dec
nop

data16
int3
mov
shlb
lahf
jnp
lea
nop

test
dec
mov
sar
and
rorl
sub
daa
xor
scas
les
mov
or
jg
fistpl
jne
adc
dec
repz
scas
movb
into
int3
stos
rcrb
testb
adc
icebp
or
ficomps
xchg
xchg
sub
inc
dec
fs
dec
scas
mov
push
ss
or
push
and
in
sub
push
xor
into
cmp
sub
aas
inc
out
sub
ljmp
pop
and
push
nop

rorb
push
pop
sub
sub
std
(bad)
iret
test
stos
sbb
mov
sub
fists
jmp
jp
movsl
test
mov
rolb
push
sub
push
fistps
pop
xlat
mov
xor
mov
cwtl
shrb
ljmp
mov
pop
ficoms
add
psrld
adc
out
xchg
ficoms
lcall
mov
jne
(bad)
loopne
(bad)
ljmp
(bad)
out
dec
add
in
add
add
rcr
fwait

jmp
in
inc
(bad)
push
pop
pop
lea
sub
shl
(bad)
cld
mov
pop
(bad)
jg
cmpb
icebp
sub
sub
test
xchg
(bad)
push
sbb
xchg
mov
sub
push
pushf
popl
mov
pop
mov
std
stos
lahf
jnp
lock
arpl
push
push
jle
xchg
jb
int3
jg
out
push
sbb
lahf
addb
dec
addl
in
pop
repnz
outsb
frstor
lock
divl
mov
filds
addb
(bad)
int3
xchg
adc
xchg
mov
enter
mov
stc
imul
in
push
or
mov
mov
jns
fdivrl
cmpsl
sbb
or
adc
ret
in
cltd
std
fdivrl
push
in
scas
jmp
cmp
dec
ret
subb
mov
jb
mov
xchg
test
les
push
push
sbb
fcmovne
icebp
pop
(bad)
jne
dec
loop
lds
(bad)
icebp
xchg
andb
lods
xchg
frstor
mov
mov
push
inc
dec
cwtl
add
lahf
(bad)
mov
test
dec
lret
insl
test
rcrl
(bad)
or
test
addb
dec
int
fsubrs
mov
or
iret
hlt
in
addr16
add
std
mov
xor
cld
lods
test
jg
cmpl
lods
mov
lea
add
lret
sub
push
pop
push
aad
movsb
xor
dec
jnp
test
fiadds
mov
clc
xchg
fnstcw
mov
cmpsb
push
xchg
clc
dec
outsb
sarb
test
aas
fsubrl
lret
mov
iret
pop
out
jo
in
jle
subl
push
or
arpl
stos
or
mov
or
mov
xlat
push
sub
add
sub
jmp
(bad)
cli
inc
mov
sahf
aad
add
jo
stc
addl
pop
data16
xchg
pop
mov
test
xor
mov
data16
cmpsb
loopne
inc
std
mov
cwtl
(bad)
lret
stc
out
push
in
roll
gs
adcb
or
mov
pop
pop
sti
add
lock
shrb
add
nop

subl
dec
sub
int3
push
jo
xor
xchg
fcomps
dec
cmpsb
test
pusha
mov
(bad)
test
scas
test
push
enter
(bad)
shll
faddl
lea
outsl
outsl
xor
xor
xchg
mov
mov
cmpsl
add
push
add
and
(bad)
push
ss
out
add
(bad)
mov
lahf
xchg
popf
out
stc
sti
dec
xor
sbb
mov
lods
jg
mov
frstor
mov
daa
lods
jae
imul
clc
mov
or
push
leave
popa
mov
stc
push
in
ret
movsl
shrl
adc
push
cwtl
fs
imul
jle
addb
jecxz
jl
fstpl
xchg
cs
cltd
in
mov
sub
mov
faddl
stc
sbb
jo
stos
cmc
test
(bad)
cs
out
sub
nop

out
in
xchg
cltd
inc
mov
stos
cmpsl
and
xchg
xor
or
xchg
mov
and
movsl
xchg
or
add
(bad)
push
jmp
inc
ret
or
jnp
das
fsubl
lahf
addr16
movsb
orb
xchg
addl
mov
add
(bad)
in
inc
cli
inc
pop
xchg
inc
xor
arpl
add
les
icebp
add
std
hlt
in
mov
loopne
nop

or
push
lds
mov
(bad)
or
mov
leave
and
xchg
jp
xor
insb
mov
jns
imul
stos
fiadds
inc
out
outsb
int
hlt
mov
lcall
stos
ret
int
test
popa
jle
testl
xchg
mov
xor
gs
scas
addb
in
sbbl
cmpsl
xchg
loope
repz
add
andb
sbb
xchg
mov
xor
addl
jl
xor
test
faddl
fcoml
jns
idivl
pop
lret
mov
xor
ja
xchg
nop

mov
out
loop
jle
out
imulb
xchg
pcmpeqw
movsl
xchg
outsb
fsubs
xchg
inc
jmp
rcll
test
rorl
(bad)
notb
add
xchg
mov
int
les
pushf
lret
xchg
addb
xchg
and
test
jl
xchg
and
jle
push
rcll
stos
mov
dec
xchg
adc
(bad)
pop
mov
pop
roll
and
or
mov
cmp
mov
jle
mov
pop
jge
mov
pushf
hlt
cmpsb
cmpsl
and
in
jle
or
xchg
rorl
(bad)
lfs
ret
xor
lea
xor
es
xchg
jmp
subl
add
sub
cmp
cli
xchg
mov
(bad)

jnp
(bad)
pusha
xor
arpl
fadd
mov
roll
aas
pop
ficomps
jae
orb
fldt
mov
in
fcompl
sbb
iret
jae
add
test
cmp
xor
shl
fcoml
fidivl
push
jmp
cmp
movb
add
xor
flds
orl
bound
fcompl
dec
js
fmulp
jmp
stos
sbbl
xchg
test
lahf
fstps
loopne
xchg
popl
jle
inc
xchg
loop
bound
sbb
xor
ljmp
add
lcall
fidivrs
sbb
fcmovnb
cmp
push
mov
xchg
scas
adcl
test
mov
int
cmp
sbb
fisubs
scas
lock
pop
adc
test
add
int3
loop
inc
cld
test
lcall
mov
xor
iret
mov
xchg
fistps
cltd
mov
xor
and
lcall
xlat
loope
mov
enter
ss
mov
jp
sbb
mov
fdivrp
xlat
cltd
sub
xchg
in
dec
mov
mov
nop

jbe
add
int
jle
cmp
int
xchg
xchg
cmp
(bad)
sbb
cmp
xlat
and
movsl
fldl
pop
daa
xor
jmp
xor
addl
mov
cmp
lds
mov
mov
subb
dec
xor
out
xchg
outsl
inc
test
mov
mov
in
or
mov
xlat
and
push
xchg
fsts
and
(bad)
and
dec
mov
(bad)
outsl
cmp
xchg
xchg
icebp
and
(bad)
fldt
jmp
out
sbb
add
mov
in
lcall
add
jbe
push
(bad)
cmc
and
jnp
(bad)
pop
popl
int3
aad
lods
and
fcmovu
push
dec
adc
(bad)
inc
cltd
data16
sub
pop
inc
addb
fdiv
(bad)
dec
mov
les
cmp
dec
bound
sahf
divb
mov
push
jmp
or
adcb
rorb
cmc
fcoml
mov
xchg
sbb
roll
lcall
aas
push
sbb
or
push
mov
cmp
cld
or
call
int3
sbb
pop
andb
aad
icebp
rcr
xchg
adc
ret
in
pop
rcll
rolb
addl
lock
std
(bad)
mov
push
orb
and
and
daa
mov
dec
inc
movsl
lods
mov
fcoml
mov
leave
inc
xor
jge
aad
les
or
add
fbld
cmpl
stos
sub
aam
enter
xor
mov
pushf
shrl
hlt
popf
bound
pop
mov
xor
iret
cwtl
dec
movsl
push
fmull
jno
xlat
in
xor
stos
xorb
cmp
sub
orl
out
sbb
test
jae
dec
mov
xchg
out
xchg
mov
sub
in
jno
das
push
inc
or
and
and
push
dec
mov
cwtl
(bad)
es
mov
push
mov
pop
push
daa
outsl
cmp
loop
in
outsb
mov
sbb
aad
pusha
sub
flds
fsubs
mov
sub
cmpsb
xchg
add
fnstsw
stc
dec
test
and
adc
arpl
mov
or
mov
cli
and
out
inc
pop
push
pusha
int
push
adc
pop
popa
push
mov
xor
pop
cwtl
mov
or
dec
and
cltd
rcl
icebp
scas
cmpsb
mov
pop
in
icebp
dec
cmpb
dec
movsl
icebp
xor
jne
mov
xor
push
fcomps
mov
push
push
mov
cmp
cmp
mov
push
mov
sahf
adcb
and
jnp
aad
mov
adcb
stos
daa
inc
mov
in
lea
in
mov
es
je
cmpsb
(bad)
insl
sti
push
stos
mov
push
and
or
add
iret
andb
inc
lea
lahf
stc
pop
out
sti
roll
sti
insb
(bad)
stos
sub
shrb
gs
imul
pop
jo
out
or
loope
nop

mov
nop

leave
mov
dec
iret
push
inc
ror
in
std
loopne
dec
and
xor
and
out
sub
cwtl
or
push
decb
sub
jbe
fildl
sub
mov
arpl
sahf
in
push
aad
int
iret
pop
in
fcmovnbe
fwait

cwtl
in
(bad)

sbb
cwtl
mov
les
repz
jae
cmc
mov
push
xor
jbe
sti
dec
ljmp
int3
pop
jle
dec
jmp
mov
roll
inc
into
fistps
loopne
lds
jno
movsb
fisttpl
shr
iret
adc
scas
inc
fwait

imul
test
in
lcall
repnz
hlt
pop
fiaddl
cmc
cmp
pop
pushl
or
fsubrp
mov
sub
lcall
push
dec
xor
mov
in
jmp
decl
sub
stos
jle
loope
hlt
sbb
jle
and
xchg
lds
das
ret
mov
es
mov
jno
(bad)
mov
sbbl
mov
lea
in
js
mov
cltd
fwait

sbb
insl
in
lret
or
sahf
dec
fs
xchg
cmc
mov
sti
jle
dec
arpl
lods
fistl
inc
repnz
or
and
fs
xchg
mov
stos
sub
jp
pop
xchg
inc
mov
(bad)
jge
adc
mov
ficoms
ret
mov
out
ss
xchg
fwait

xchg
and
add
test
aas
ficoms
inc
outsl
dec
adc
das
xlat
mov
bound
mov
fstpt
(bad)
or
xor
adc
pop
inc
inc
scas
je
pop
cmp
sar
push
int
push
lock
mov
test
mov
adc
lea
int
fisttpll
out
ret
orl
push
sti
aaa
ds
inc
mov
lds
cmpsl
push
pop
cmp
jle
bound
movsb
test
outsb
out
cmpsb
pop
cmp
or
mov
mov
clc
push
or
pop
subb
fildl
rorb
mov
push
mov
fldt
xchg
aaa
insb
cmc
jne
fiaddl
scas
cld
pop
push
notl
sbbl
fsts
adc
dec
clc
je
xchg
and
or
xchg
push
(bad)
(bad)
jmp
cmp
mov
mov
lahf
pop
jle
fildl
mov
int
lret
mov
xorl
pop
nop

mov
push
std
in
sub
scas
adc
dec
cli
scas
int
jbe
lods
insl
sbb
inc
nop

imul
fcmove
or
fsts
rol
xor
or
ret
cltd
outsb
jne
fldcw
push
and
and
mov
(bad)
icebp
nop

sbb
loope
jb
nop

mov
icebp
std
popa
ljmp
ficomps
loopne
xchg
inc
pop
outsb
fs
jo
aad
sub
ja
out
rcrb
mov
jge
mov
jns
les
or
outsl
punpcklwd
call
orb
dec
int3
jnp
jns
adc
cmpsl
mov
(bad)
ja
lahf
or
cmc
subl
mov
add
adc
rcl
mov
cmp
pop
fs
subb
cmc
movsb
sbbb
bsr
pushf
cmpsb
aad
jge
push
call
aam
sbb
(bad)
ss
pop
lret
or
mov
inc
call
cld
cld
sub
movsl
adc
nop

hlt
and
xchg
scas
movsb
loopne
push
xor
int
xchg
xor
xor
rcr
les
subl
push
mov
inc
subl
ret
(bad)
movsb
sub
enter
sub
sarl
out
xchg
xchg
inc
cmpsl
mov
movsb
repnz
pop
lcall
inc
sub
out
jno
sbb
add
ror
addl
test
out
scas
sbb
pop
loopne
in
cmp
or
jl
jb
out
shlb
xchg
shl
mov
xchg
(bad)
cmp
mov
adc
fcomp
fdiv
sub
dec
sahf
mov
sub
pop
xchg
dec
out
in
gs
mov
adcl
mov
fiaddl
xchg
std
sbbb
dec
(bad)
jnp
std
sbb
adc
in
nop

xor
shrl
imul
inc
adc
in
sahf
fwait

les
mov
imul
mov
mov
add
sub
pushf
sbb
subb
(bad)
xor
push
faddp
or
push
pop
pop
mov
(bad)
in
push
clc
xchg
out
adc
xchg
dec
int3
loop
push
push
pushf
jmp
addr16
mov
xchg
(bad)
leave
lods
xlat
jge
movaps
cwtl
mov
scas
or
in
jmp
lods
mov
cmp
fdivs
outsl
clc
xchg
mov
js
push
in
mov
dec
je
sub
mov
out
test
pushf
cwtl
stos
or
mov
lock
test
or
lds
stc
es
mov
inc
(bad)
xchg
je
jle
xchg
inc
inc
les
sbb
mov
or
insl
arpl
popf
sub
popa
adc
mov
add
adc
test
mull
mov
in
add
mov
push
jne
jecxz
inc
jne
mov
add
or
add
xor
add
inc
add
or
or
add
jnp
add
lea
add
mov
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
pop
add
or
add
test
add
mov
add
or
add
or
add
or
add
or
add
or
add
xor
add
inc
add
or
add
jb
add
test
add
pushf
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
imul
add
mov
add
fwait

add
or
add
or
add
or
add
or
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmpl
ja
cmpl
je
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
cmpl
je
jmp
push
call
jmp
push
push
push
mov
push
call
movl
jmp
mov
add
mov
cmpl
jge
push
mov
push
mov
push
mov
push
call
jmp
jmp
mov
and
movzwl
mov
mov
shr
and
movzwl
mov
mov
mov
cmpl
je
cmpl
je
jmp
push
push
mov
push
push
mov
push
call
jmp
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
jmp
push
push
push
mov
push
call
mov
mov
call
jmp
mov
mov
movb
lea
push
push
call
lea
push
mov
push
call
lea
mov
push
push
push
push
push
push
mov
push
call
mov
cmpl
je
push
lea
push
mov
push
mov
push
mov
push
call
xor
jmp
mov
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
cmpl
jne
push
push
push
mov
push
call
xor
jmp
jmp
lea
push
mov
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
inc
dec
loop
pop
pop
mov
mov
inc
call
push
call
ret
or
popf
shl
adc
fmuls
and
lea
fmuls
lods
inc
mov
push
mov
cmp
cmp
mov
mov
sbb
xor
js
push
mov
jns
pop
test
mov
fwait

inc
daa
fistps
pop
lahf
push
test
jo
cmp
ret
outsl
add
scas
inc
aas
(bad)
cmp
xor
stos
scas
in
inc
pop
push
test
stos
(bad)
leave
cmp
dec
dec
sbb
gs
shll
or
adc
sbb
push
mov
add
add
jbe
jnp
mov
jecxz
sbb
sbb
leave
repz
or
mov
scas
loop
rcrl
jne
loop
imul
inc
push
decl
out
add
jge
jno
inc
roll
int3
push
cmp
xchg
int
sbb
shrb
mov
mov
ljmp
sbb
dec
mov
(bad)
rcrl
jmp
hlt
jl,pt
insb
xlat
daa
sbb
in
push
adc
into
fcomps
xchg
int
pop
dec
push
or
fadd
stc
jl
or
out
mov
lock
ja
or
call
pop
xor
out
lahf
jge
rcl
push
pop
push
cwtl
fwait

out
mov
mov
stos
outsb
adc
mov
outsl
lahf
ds
or
sarb
rorb
pusha
inc
jae
(bad)
sbb
addb
popf
mov
adc
ret
pushf
fucom
sbb
ja
mov
lds
test
sbb
jecxz
dec
pop
mov
lds
lods
add
pop
cmp
repnz
xchg
sbb
fnstsw
sub
push
xchg
aaa
and
mov
mov
fsts
xchg
decl
dec
xlat
cmpsl
gs
movsb
and
sub
movsb
in
lods
iret
(bad)
sar
xor
mov
inc
cmc
mov
imul
pop
scas
inc
test
loopne
shll
loopne
sahf
cwtl
inc
inc
cmc
mov
push
stos
sbb
hlt
jl,pn
out
sahf
das
inc
mov
andb
xor
movsl
mov
dec
nop

push
pop
mov
or
mov
fisubrl
lds
xchg
or
sub
mov
cmp
jmp
cwtl
xor
or
dec
rcrb
dec
ret
dec
shrl
mov
sub
(bad)
sar
xor
cmpl
dec
pop
cmp
shl
pop
fwait

push
lock
sub
lods
sub
sbbl
inc
xchg
xor
subl
mov
inc
mov
cwtl
inc
cli
dec
lret
pop
mov
out
push
xrelease
mov
imul
mov
pushf
sbb
nop

(bad)
in
(bad)
jp
sti
repz
cmp
call
ds
sbb
sub
rolb
xchg
dec
xchg
lods
hlt
(bad)
sub
fwait

xlat
jle
stos
mov
inc
push
lahf
mov
inc
rorb
int
sbb
inc
std
jg
pop
cmp
mov
push
mov
xchg
testb
sbb
pop
outsl
nop

cs
cmp
fisubrl
mov
or
dec
sbb
mov
cmp
scas
add
sahf
add
fldcw
rorb
cs
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
cmpl
jne
xor
jmp
push
mov
push
call
mov
push
call
mov
mov
pop
ret
int3
jmp
int3
int3
push
mov
push
mov
push
mov
xor
mov
mov
inc
mov
inc
cmp
jne
test
jne
jmp
xor
inc
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
adcl
andl
mov
push
pushf
orb
scas
insl
jmp
add
pushf
pop
shl
mov
xor
pop
test
call
or
jl
cmpl
push
jecxz
fnstenv
mov
lahf
lods
jecxz
pusha
xchg
nop

icebp
mov
or
sahf
cmp
xchg
cmp
leave
mov
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jge
xchg
out
inc
addr16
cmp
mov
aad
jecxz
fcomps
dec
(bad)
(bad)
sub
add
mov
cmpsl
add
jae
scas
xor
out
test
mov
shrb
mov
in
lahf
mov
mov
inc
sub
in
flds
cli
mov
and
(bad)
xchg
aaa
(bad)
mov
pop
mov
popf
xor
xor
inc
stos
(bad)
dec
insl
mov
sub
frstor
mov
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
es
sub
pop
and
and
rol
loopne
mov
add
inc
mov
arpl
jmp
scas
sbbb
mov
sub
test
pop
shlb
ror
jp
in
mov
pop
push
or
xchg
push
lds
or
pop
ret
(bad)
stc
stc
movsb
sbb
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
scas
xor
fldl
pop
and
pop
inc
mov
add
int3
movaps
dec
(bad)
sarb
mov
or
js
movsb
aam
or
jge
and
aam
nop

push
adc
mov
test
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
in
aam
sbbl
test
xchg
and
mov
cld
fisubl
jno
sbb
adc
mov
das
aad
iret
add
cmp
mov
and
fstpl
fcoms
sbb
push
xor
pop
test
mov
xchg
roll
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
fiaddl
fwait

add
mov
xchg
fiadds
xorb
pop
int3
cmpsb
pop
flds
lahf
sbb
lcall
loopne
adc
pop
sbb
loope
rcr
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
cmp
and
imul
push
xchg
hlt
fnstsw
push
inc
cmp
icebp
pop
mov
enter
jb
push
inc
push
sarl
cmpsb
mov
sbb
adcb
mov
cmpsl
scas
mov
and
icebp
std
mov
mov
add
mov
nop

jmp
xor
in
cld
outsb
push
shll
cmp
fcomi
jne
sbb
in
mov
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
add
pop
mov
nop

or
data16
and
popa
icebp
xchg
(bad)
adc
sbb
fimuls
sbb
gs
xor
cmpsl
icebp
and
lds
mov
(bad)
out
add
or
mov
test
cmpsl
stc
testl
cli
imul
mov
loope
inc
push
rcr
mov
cmp
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
idivb
scas
jl
jns
(bad)
rcrl
push
outsl
xchg
xor
iret
out
mov
lcall
push
(bad)
lret
std
mov
or
ja
pop
pop
push
mov
or
lods
(bad)
repnz
push
cs
repz
sub
jg
push
aad
dec
pop
mov
pop
das
fistpl
subl
inc
fbld
xor
sahf
inc
mov
or
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
lahf
shr
cltd
adc
jp
outsl
stc
mov
pusha
aam
outsb
testl
daa
mov
inc
mov
adc
inc
movsb
or
push
push
pusha
push
mov
gs
pop
addr16
(bad)
pop
push
mov
xchg
and
pusha
xorb
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
in
pop
divb
jo
pushf
adc
jmp
jge
lea
leave
jbe
scas
test
int
inc
xchg
cli
lcall
push
cmp
mov
inc
in
ja
lcall
cmpl
or
cli
mov
xchg
mov
in
ds
test
outsl
dec
mov
inc
push
add
cli
ljmp
jae
mov
adc
mov
loope
or
pop
int
cmp
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
sbb
xchg
outsb
int
lock
mov
int
rolb
xchg
jbe
addl
jmp
das
lods
out
mov
adcl
xchg
shll
je
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pop
js
adc
push
push
shlb
popa
xor
push
mov
incl
inc
sbb
sti
scas
test
addl
scas
jg
ret
mov
icebp
inc
ret
int
or
cmp
inc
dec
loope
xchg
pop
mov
into
into
or
xor
inc
fwait

pop
add
mov
adc
cmp
(bad)
inc
inc
in
mov
push
(bad)
nop

dec
push
iret
cmpsl
xchg
sub
popf
add
mov
enter
pop
sub
cmp
out
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
lods
adc
fdivr
(bad)
sti
push
sahf
or
mov
lds
iret
pop
mov
inc
mov
push
dec
and
dec
push
insb
(bad)

cmp
jl
xlat
pop
outsl
adc
cmp
xchg
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
jo
fidivrs
dec
jmp
arpl
std
outsl
xor
xchg
out
or
ficoms
test
aaa
aam
test
jb
out
mov
rcrb
lret
sub
mov
cmp
or
sub
(bad)
pop
repz
dec
stc
xor
sbb
mov
and
rolb
(bad)
clc
addl
popa
in
sti
xor
or
pushf
xor
add
stos
add
sub
jp
(bad)

and
ljmp
out
pop
test
xchg
dec
cmp
and
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
lock
xor
fisubrl
int3
loopne
ret
inc
repz
pusha
push
mov
push
jp
sahf
inc
lret
fistl
addb
lock
popf
mov
aas
push
int3
mov
adc
inc
mov
mov
xor
test
sub
(bad)
int3
inc
fiadds
ss
shll
mov
cmp
stos
jo
nop

adc
scas
or
mov
sbb
xchg
adcb
jg
fsub
fimull
(bad)

imul
loopne
movsl
lret
or
pop
(bad)
into
xchg
mov
adc
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
or
pusha
hlt
push
ljmp
movsl
adc
mov
cli
int
test
andl
test
hlt
xlat
pop
test
mov
lcall
cmp
lods
ror
xchg
das
or
in
and
pop
mov
dec
adc
sub
cmp
mov
(bad)
sub
aas
sub
(bad)
ret
sbb
xlat
mov
pusha
jge
mov
mov
pop
dec
dec
pop
jl
movsl
xorb
stc
jo
jmp
jbe
cmpsl
lods
mov
and
adc
fneni(8087
jo
mov
mov
xor
fcomps
stos
repz
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
mov
jmp
mov
mov
lods
in
lahf
imul
inc
add
call
out
cli
testl
adc
pop
ret
cli
incb
stos
mov
add
xor
adc
out
loope
ret
xchg
mov
dec
or
dec
(bad)
xor
or
jae
std
mov
mov
sub
sti
xor
pop
orb
inc
iret
cmc
int
and
aad
mov
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
or
int
inc
fcmovbe
scas
lret
and
push
push
(bad)
int
pop
rorb
xor
add
xchg
or
ret
daa
dec
pop
fst
inc
and
pop
sub
dec
loopne
mov
cmp
mov
sbb
repz
sub
stos
dec
int3
bnd
mov
addr16
icebp
xlat
and
cmpb
cmp
jbe
sub
scas
mov
lcall
ret
jge
mov
(bad)
in
mov
lods
(bad)
repz
dec
addr16
cwtl
es
cmp
mov
enter
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
adc
iret
inc
lds
es
sub
es
push
add
xor
testl
adc
cltd
and
pusha
dec
pop
loop
sbb
jbe
ret
xor
xor
mov
xor
cld
out
jbe
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
inc
pop
and
lret
mov
or
testb
stos
inc
fldenv
test
pop
push
test
mov
pop
leave
jno
lea
fstl
xchg
clc
(bad)
jp
jge
jns
(bad)
sti
adc
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
movsl
mov
sbbl
and
xor
mov
js
scas
cwtl
inc
mov
or
dec
cltd
lret
mov
and
push
enter
xchg
ljmp
ret
mov
hlt
pop
sub
jmp
pop
leave
xor
out
int
cmpsb
lds
cmp
and
xchg
stc
inc
push
or
or
scas
jo
or
mov
lock
dec
mov
pop
cmp
xorl
cmp
out
mov
imul
pushf
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mulb
pop
jno
dec
jl
addr16
fnstcw
cmp
dec
cmp
stos
aam
popf
shr
cmc
test
cmp
(bad)
sbb
jb
aam
les
loope
xchg
jmp
ret
pusha
test
loope
lret
cs
xchg
push
xchg
sbb
pusha
in
add
sub
(bad)
xor
mov
rolb
lods
test
jge
inc
pop
xchg
dec
xchg
pop
mov
sti
in
jge
sbbb
xchg
je
pop
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
ret
cmp
int3
push
adc
imul
jns
ret
pop
in
xchg
sub
dec
pushf
lahf
in
stos
mov
ficompl
push
insl
xor
cli
fcompl
and
mov
cltd
lret
jg
dec
cmp
test
clc
test
or
add
hlt
xchg
test
sub
fmul
call
push
or
sbb
xchg
dec
inc
out
sbb
inc
loopne
xor
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
icebp
lods
and
jnp
push
adc
out
lods
push
cmp
sbb
stos
add
cmpb
ds
push
mov
cmc
sbb
or
push
test
jnp
pusha
jg
xchg
xor
mov
jae
es
mov
(bad)
addr16
insl
imul
or
addl
fstl
andl
jbe
addb
inc
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jl
add
scas
mov
stos
mov
loope
xchg
cmp
or
insl
mov
mov
and
stc
insl
sahf
pop
xor
cmc
mov
addl
das
inc
bound
mov
insl
jge
push
xchg
js
int3
xchg
in
gs
or
pusha
lods
mov
(bad)
cwtl
cwtl
xchg
cmpsl
mov
and
pusha
dec
mov
int3
mull
lods
and
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
jne
incl
jae
ret
lea
mov
sbb
arpl
push
and
jnp
add
or
aam
ret
in
lea
lds
sub
outsb
mov
ss
in
add
and
in
adc
adc
iret
in
sbb
subb
fiadds
aad
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
jp
pop
jmp
(bad)
jnp
(bad)
out
test
cmp
cli
rclb
pop
aam
icebp
sub
jecxz
xchg
sub
lret
push
push
lea
cli
xchg
or
inc
xchg
jb
sbb
inc
mov
inc
pushf
adcl
inc
fnstsw
mov
scas
lea
out
aad
out
inc
or
or
ret
orl
cmp
aad
fucomi
scas
lea
je
add
sub
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
and
cmpl
mov
jae
mov
stc
push
pop
lods
out
cmp
sbb
xchg
lea
push
jl
rorl
aas
cmp
lea
push
or
sti
pop
fnstcw
orb
jecxz
pusha
inc
nop

test
pop
cmp
pop
cmpsl
arpl
xchg
int
jbe
jno
cmpsb
pop
daa
faddl
xchg
mov
sbb
jecxz
leave
pop
pop
test
std
cmp
push
pop
push
fildl
jnp
stc
xchg
jl
aas
into
mov
mov
or
cmpsl
and
rcll
pop
push
push
mov
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
add
clc
mov
fmul
mov
add
aad
adc
ljmp
lcall
jg
pusha
mov
or
pop
popw
(bad)
or
shlb
imul
das
popa
mov
inc
jmp
mov
mov
sub
incl
nop

in
xchg
orl
loopne
push
iret
lds
iret
lcall
inc
add
shlb
sub
mov
xorb
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
ljmp
dec
nop

dec
dec
mov
es
pop
mov
jmp
insl
sbb
pop
mov
push
cmpb
rolb
adc
into
and
mov
aaa
arpl
xchg
cwtl
mov
andl
sub
mov
cmp
popa
push
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
outsb
mov
js
pop
test
sbb
test
icebp
into
jns
aaa
scas
insb
into
fldenv
imul
movsl
outsl
lds
decl
aam
into
cmc
aaa
popa
in
inc
fwait

imul
cmpsl
xor
lcall
into
add
lcall
addl
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
xchg
nop

inc
push
xchg
mov
into
loopne
and
repnz
sahf
push
inc
icebp
aam
aam
mov
imul
xchg
pop
jg
aaa
repz
pop
ret
insb
lea
dec
xor
mov
xor
jae
es
mov
lcall
inc
mov
dec
jnp
mov
ret
mov
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sahf
sti
daa
jge
xlat
cwtl
mov
ret
out
je
das
out
mov
jg
pmuludq
push
sbbb
mov
or
loopne
add
sbb
push
push
gs
xor
cmp
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
stos
imul
je
iret
int3
pop
rcll
out
inc
pop
imul
sub
xchg
andb
push
xor
and
adc
(bad)
nop

es
out
outsb
(bad)

pusha
in
xlat
iret
fstpl
cmpb
sbb
data16
mov
inc
xchg
imul
xor
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
pop
push
push
xor
int3
mov
add
sti
or
mov
test
add
sbb
cmp
popa
(bad)
adc
cmpsb
cltd
xor
inc
rcll
add
mov
shll
std
cmpsb
inc
push
std
mov
testb
jp
sbb
imul
xchg
notl
outsl
in
and
pop
les
jle
addl
popa
cmpsb
shl
lret
cld
lret
pusha
int3
out
xchg
pop
test
or
mov
cmpl
cmpsb
das
push
stos
arpl
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
inc
cmp
mov
sub
cmp
loope
loope
bound
test
das
inc
test
mov
dec
in
mov
dec
mov
js
cwtl
popf
adc
loope
stos
lret
sbb
fiadds
test
xchg
jg
sbbl
repz
pop
mov
lds
sub
sub
pop
or
fstps
push
inc
dec
push
or
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
into
xlat
cld
clc
mov
loop
mov
js
pop
xchg
fstl
movsb
nop

and
jae
sbb
outsb
xchg
fs
dec
adc
iret
ds
daa
xor
sub
shll
sub
nop

push
mov
or
sbb
and
loope
test
das
fadds
mov
in
mov
inc
cli
adc
mov
add
pop
add
dec
sub
jp
lock
adc
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
inc
movb
mov
subl
xchg
sbbl
fwait

xor
xorb
jae
dec
dec
mov
(bad)
push
(bad)
popl
mov
sbb
into
incb
push
repz
xchg
or
mov
in
shll
testl
or
not
mov
insl
lret
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
and
mov
out
or
fwait

mov
and
adc
cli
mov
or
mov
cli
mov
pop
outsb
rcrb
das
sbb
pop
arpl
test
roll
xchg
imul
nop

mov
adcl
inc
xchg
or
mov
les
mov
into
xchg
xchg
aaa
sti
incl
movsl
sbb
cld
stos
lcall
adc
xchg
inc
loope
addb
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
test
sub
stos
push
dec
rcrb
popf
pop
out
into
xor
fnstenv
lcall
shr
out
nop

shr
fadd
dec
test
int3
adc
mov
mov
fs
pop
sti
jae
in
sbbb
(bad)
sbb
mov
es
and
je
mov
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
push
movsl
insb
leave
test
mov
add
dec
inc
sar
int3
pop
fstl
mov
xor
push
repnz
test
outsb
data16
and
(bad)
call
scas
(bad)
jbe
out
andl
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sbb
cltd
push
adc
xchg
jge
insb
lds
leave
sahf
xor
out
leave
out
mov
inc
addl
and
or
sbb
cmp
icebp
adc
fisubs
sti
mov
fistpl
les
lock
push
aas
(bad)
jge
cltd
jne
xor
add
loope
pop
aas
mov
mov
xchg
stos
repnz
cwtl
xchg
imul
sahf
adc
call
popa
stc
aad
xchg
or
inc
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
popa
inc
inc
xchg
mov
mov
and
add
push
shll
pop
sub
sbb
bound
push
lret
lods
mov
or
jg
push
mov
fimuls
or
stc
repnz
dec
out
inc
cwtl
dec
cmp
cmc
(bad)
push
push
in
pop
in
mov
pushf
inc
mov
push
into
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
fists
dec
stc
in
xchg
dec
movsb
ds
out
lds
imul
mov
stc
lahf
inc
idivl
les
lcall
or
mov
shll
movsl
adc
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
dec
fs
mov
adc
mov
lahf
pop
in
test
js
in
mov
aam
imul
mov
out
mov
insl
add
test
mov
stos
addl
push
shrl
inc
adc
nop

jae
aaa
or
repz
sbb
bound
sbb
push
push
mov
orl
adc
scas
sahf
fildll
sarb
xor
inc
dec
sti
cmp
je
xor
xchg
(bad)
rcll
test
stc
pop
sub
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
hlt
lcall
jl
into
sbb
stos
cltd
inc
subl
fimull
mov
je
xor
test
subl
adc
or
adc
lds
push
in
int3
jecxz
nop

loope
ror
addl
rorl
fsubs
lea
aas
mov
imul
or
xchg
xor
dec
outsb
je
inc
mov
stos
cmp
cld
(bad)
scas
push
adcl
data16
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
xchg
ss
cmc
jnp
fadds
sbbb
fcmovne
add
xchg
into
roll
push
inc
orl
dec
push
lock
pop
mov
cmp
imul
ror
or
push
xchg
rorl
subb
cmpb
sbb
xor
cwtl
mov
fsubp
fldcw
nop

(bad)
or
or
mov
mov
andl
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
das
jno
jecxz
mov
ret
(bad)
icebp
hlt
push
stos
xchg
negl
mov
cmpsl
shll
test
stos
movsl
mov
adc
cmp
cmp
sbb
mov
lock
(bad)
mov
adc
mov
inc
xor
mov
icebp
or
cmp
nop

sahf
and
pop
out
je
nop

adc
push
and
pushf
lea
pop
add
sub
or
or
ds
or
in
pop
faddl
inc
out
hlt
fsubl
hlt
movsb
mov
lock
repz
mov
or
cmp
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
xor
dec
mov
mov
lock
cmpl
mov
adc
inc
adc
movb
jle
insb
loopne
or
fidivs
cwtl
loopne
pop
aam
pop
xchg
push
dec
sti
mov
add
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
sub
(bad)
xor
mov
aad
fistl
rorl
int
imul
push
xchg
adc
xchg
mov
ret
push
dec
std
xchg
insl
cmp
out
mov
aas
xchg
sbbl
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
in
mov
aas
out
mov
(bad)
mov
mov
xchg
and
xchg
mov
pop
lea
rcrb
xchg
aas
sbb
jae
ds
lret
repz
out
idivl
pusha
(bad)
outsb
sub
add
jbe
lcall
pop
mov
push
mov
push
mov
test
push
pushf
xor
lret
push
push
mov
fsts
hlt
mov
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cmpsb
push
jbe
xlat
push
rorb
mov
in
std
test
push
xchg
mov
jp
lret
insl
inc
add
call
fisttpll
arpl
add
push
outsl
loop
jns
addl
insb
into
xchg
in
lahf
rcrb
andb
inc
subb
jmp
cwtl
call
inc
pop
shl
inc
cmp
mov
je
mov
(bad)
fisttpl
or
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
orb
in
xlat
les
lock
movsb
mov
les
add
xchg
xchg
cmc
ljmp
ss
in
mov
cmp
leave
shl
scas
lds
sub
mov
loopne
popa
mov
push
pop
cmpsl
mov
cmpsl
stc
pop
adc
roll
js
jnp
xor
(bad)
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
or
inc
in
mov
stc
(bad)
filds
iret
insl
int
andb
mov
xchg
push
xlat
sub
rol
pusha
xchg
sub
jnp
aas
cwtl
xlat
sub
add
push
sub
mulb
subl
inc
addl
or
addl
fstl
andl
jbe
addb
inc
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
roll
aas
xchg
mov
xchg
push
adc
fnsave
sub
je
sub
test
mov
lds
cmp
mov
push
movsl
testb
fdivrp
in
dec
mov
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
adc
test
out
stos
lds
lds
lea
fcmovnbe
jnp
jge
or
jnp
mov
lret
mov
data16
xor
mov
pop
jmp
std
lea
mov
fcoms
vpackusdw
ljmp
das
inc
cltd
sbb
fidivl
test
mov
incl
mov
inc
jno
and
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
push
mov
sbb
fwait

ja
sbb
inc
fsub
inc
jp
cmpsl
and
sub
int3
(bad)
fiaddl
in
js
ret
dec
lret
pushf
arpl
or
insl
clc
jmp
out
dec
and
pinsrw
lods
out
orl
flds
jecxz
xchg
inc
pop
std
(bad)
jne
push
idivb
shr
popf
addl
pop
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
sbb
leave
aas
jns
(bad)
insl
imul
push
ljmp
mov
pop
scas
jne
sahf
xchg
inc
and
mov
and
mov
loopne
pusha
jbe
sub
or
mov
imull
addl
mov
(bad)
mov
cltd
pop
(bad)
sub
jnp
lahf
adc
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
into
pop
(bad)
mov
popf
cmp
movsl
jle
xchg
hlt
add
inc
lock
mov
lds
nop

xchg
pusha
adc
inc
stc
in
mov
xor
mov
mov
les
jl,pt
stc
sti
mov
addl
jmp
out
andl
pop
and
inc
call
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
inc
outsl
cwtl
add
mov
negb
jns
imul
stos
push
jl
fcompl
or
ret
in
push
push
mov
mov
cmpsl
lea
xor
mov
cmpb
rorb
cltd
mov
pop
repz
lea
outsb
add
adc
add
loopne
sbb
inc
mov
loop
jae
mov
adc
(bad)
xchg
sbb
mov
cmp
mov
lahf
jecxz
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
push
xor
jne
test
lods
dec
xorb
jmp
add
mov
cmp
xor
iret
xlat
std
hlt
mov
cmp
xor
daa
das
sub
addl
jecxz
pop
enter
out
out
pop
ds
jns
sub
mov
lock
cli
bts
mov
not
adc
lcall
int
dec
aas
stos
xchg
fwait

sti
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
push
xchg
xchg
mov
or
iret
pop
inc
mov
mov
pop
xor
push
(bad)
cli
aas
shl
insl
cmp
ss
sahf
pop
xchg
and
and
and
daa
lret
orl
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
push
inc
cwtl
xchg
outsl
lahf
dec
pushf
lea
xchg
mov
cmpsb
mov
fwait

cmpsb
je
jbe
js
xchg
mov
cmp
imul
movsl
push
loop
xchg
es
test
hlt
mov
mov
shl
jp
or
insb
cmc
outsl
sbb
addb
inc
adcl
mov
int
orb
dec
xor
mov
outsl
and
rclb
lret
std
mov
(bad)
pop
jmp
pusha
cwtl
sets
popa
mov
enter
mov
in
cld
cli
or
test
add
int
adc
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
(bad)
(bad)
pop
imulb
and
xor
cwtl
adc
int3
fwait

jb
mov
mov
sahf
nop

repz
fnstcw
jb
outsb
test
mov
or
sbb
xchg
lea
sbb
mov
iret
xchg
enter
jns
aam
sub
lcall
push
pop
pop
jo
mov
pop
mov
inc
pusha
addr16
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
flds
icebp
pop
in
lret
inc
add
daa
repz
lcall
mov
cltd
mov
jnp
cmp
dec
addr16
sbb
sbb
sbbl
xchg
andb
cmp
xchg
addr16
in
inc
fidivrs
shrb
jnp
cwtl
pop
xor
or
xchg
inc
xchg
in
jae
cli
aas
sub
fcompp
mov
jp
xlat
inc
(bad)
sub
xchg
add
rol
fmuls
(bad)
fnstsw
adc
cmc
lcall
dec
sbb
popl
jp
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pusha
xor
xor
mov
jle
mov
(bad)
out
repz
push
arpl
(bad)
or
push
inc
rol
gs
(bad)
stos
imul
and
or
ffreep
xchg
out
(bad)
xor
lock
push
jns
pop
pop
mov
(bad)
(bad)
cmp
pusha
insb
mov
fwait

into
add
std
loopne
or
pop
out
xor
xor
mov
push
out
lea
dec
inc
subb
inc
xchg
loop
int
in
fwait

and
loopne
out
shll
iret
adc
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
dec
xchg
push
les
idivb
hlt
mov
pop
mov
in
dec
push
scas
insb
(bad)
jb
inc
mov
pop
cmpsl
sbb
push
push
sbb
lods
divl
fcompl
sarb
(bad)
mov
sub
cmp
negb
pop
ret
rcrl
lcall
cmpsb
push
pop
or
inc
out
push
pop
outsl
jge
mov
jmp
(bad)
fstp
mov
add
ret
(bad)
add
push
xchg
pop
fwait

dec
js
in
cmp
fwait

add
into
mov
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmc
mov
popa
mov
add
jg
outsb
pusha
hlt
add
nop

or
or
outsl
divl
dec
adc
nop

jb
sub
xchg
(bad)
adc
dec
adc
xchg
push
and
mov
xor
or
mov
mov
jmp
adc
xor
hlt
rclb
or
lock
cmp
push
add
mov
lret
xor
jno
loope
sbb
subl
xchg
pop
orl
pop
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
lods
xor
lock
cmp
sbb
push
lock
dec
adc
fsts
test
and
xchg
mov
stc
cs
mov
mov
xchg
roll
js
inc
jmp
xor
xchg
pop
dec
pop
push
add
push
lea
ror
std
mov
jae
js
adc
andb
loope
jb
inc
pop
(bad)
dec
push
mov
iret
shrb
adc
leave
inc
sub
fmull
jb
fldt
jb
mov
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
inc
stos
(bad)
fnsetpm(287
jae
mov
pop
mov
adc
test
mov
jns
mov
xlat
pop
or
call
dec
xor
cmp
shl
dec
shll
mov
frstor
scas
ljmp
xor
xchg
ljmp
imul
test
test
(bad)
sbb
xor
inc
clc
es
lcall
jg
mov
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
icebp
push
mov
into
adc
mov
in
cmp
bound
nop

incb
(bad)
movsb
arpl
fisttpll
into
imul
mov
cli
andb
lds
popf
movl
pop
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
cmc
push
mov
mov
push
mov
test
cmp
in
mov
popa
std
xor
cmpsb
add
les
mov
pop
mov
cmp
pop
in
cmc
xor
mov
sub
xchg
roll
add
sarl
push
hlt
aaa
xchg
add
(bad)
cltd
jae
and
outsb
pop
adcl
lret
inc
mov
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
xor
cmpsb
(bad)
cwtl
ds
xor
stos
clc
dec
subl
int3
int3
int3
int3
int3
int3
int3
int3
int3
test
add
sar
and
xchg
jnp
call
sub
push
fwait

nop

sbb
lcall
fistpll
lea
outsl
popa
mov
mov
xchg
cmp
mov
and
cwtl
(bad)

sbb
sbb
cmp
das
nop

fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
out
sbb
and
jnp
add
sbb
jbe
xchg
nop

lods
jns
or
mov
stos
cltd
pop
stos
inc
rcll
inc
mov
inc
push
test
aam
push
mov
xchg
add
test
test
stos
cld
adc
jp
mov
cmp
push
repz
sub
push
push
pop
lret
mov
stos
xor
repnz
nop

add
scas
lods
inc
mov
jecxz
cmp
xchg
xchg
inc
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
sub
cli
sarl
cld
cmp
dec
cmpb
aaa
(bad)
jnp
mov
xor
adc
mov
ljmp
lret
lds
xchg
out
xchg
lods
scas
mov
xor
lcall
popa
leave
xor
pop
sbb
add
popa
in
mov
xchg
icebp
das
hlt
and
push
in
cmp
std
inc
ja
test
add
sbb
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
rcll
js
mov
lods
gs
jmp
addl
add
mov
lret
and
mov
out
(bad)
mov
inc
js
mov
xor
fbstp
scas
xor
dec
ret
jnp
xchg
dec
mov
sbb
pop
nop

enter
push
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
or
and
repz
fcompl
addl
mov
mov
jle
fwait

jns
push
shlb
sbb
xchg
into
in
fwait

mov
lea
mov
in
dec
fcomip
pusha
push
pop
sub
addl
push
outsb
dec
das
and
test
cmp
int
cmpl
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
scas
cmpsb
lea
movsb
lods
fcmovbe
xchg
adc
mov
xor
push
push
scas
mov
sbb
call
stos
or
inc
xor
adc
rorl
shlb
mull
fidivrl
adc
push
add
fisubs
test
stc
mull
or
sti
lret
mov
add
mov
jae
movsb
jmp
jle
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
loopne
sbb
push
leave
fidivs
(bad)
cmpsb
xchg
addr16
lds
sbb
push
loopne
and
scas
mov
jnp
or
lea
push
mov
leave
or
in
mov
add
xchg
insb
cltd
dec
fldenv
jmp
mov
lods
push
jne
mov
insl
sarl
mov
and
scas
movsl
shlb
aam
orb
mov
jp
idivl
rorb
pushf
jp
ror
pop
sbb
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jns
paddb
pop
xchg
ds
jbe
cmp
in
call
mov
inc
fwait

or
mov
jle
repnz
ja
push
jmp
jae
dec
das
ljmp
or
std
in
ja
popa
xchg
movsb
nop

fisubs
test
add
xor
call
adc
cld
mov
push
pusha
lcall
dec
push
push
pop
pop
mov
fs
test
and
push
xchg
orb
shlb
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmp
pusha
xor
stos
inc
dec
sub
clc
nop

jg
shl
mov
popf
lock
adc
mov
jmp
adc
subb
xchg
sub
clc
in
fndisi(8087
movsb
mov
in
adc
daa
shll
in
std
cli
lret
ret
aas
sbb
mov
or
xlat
lods
imul
xchg
subl
mov
enter
leave
mov
out
sbb
mov
ret
lea
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
or
add
ljmp
lds
adc
fwait

mov
push
test
lea
mov
mov
out
imul
popa
popa
in
pop
ss
lods
into
popf
push
hlt
test
mov
inc
dec
pop
push
call
adc
lds
into
shlb
sbb
xor
xchg
bound
sbb
push
out
jmp
push
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jecxz
test
push
loopne
out
divb
(bad)
fsubl
dec
aaa
push
dec
jge
pop
cmp
fbstp
fisubl
int3
sarb
(bad)
dec
js
mov
mov
movsb
ficoms
fmull
int3
subl
xchg
sarb
mov
xchg
lds
ret
or
arpl
jbe
mov
xor
std
mov
pop
cmp
inc
mov
std
stc
sub
enter
add
mov
subl
(bad)
loopne
mov
lret
xchg
jl
test
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
scas
xchg
sub
jmp
xor
std
out
mov
addr16
and
fwait

movsb
and
and
push
jmp
pop
lea
add
daa
dec
aas
mov
addl
cmp
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
popf
inc
or
mulb
daa
stos
loope
mov
(bad)
sbb
jb
dec
cmp
leave
pop
fs
jae
push
inc
nop

repz
push
pusha
mov
scas
sbb
outsl
orb
lahf
iret
mov
lods
or
and
mov
sub
xchg
jp
cmp
mov
mov
xchg
cmpsb
xchg
pop
iret
add
lea
mov
add
sbb
cmpsl
stos
mov
adc
mov
das
push
push
mov
popl
popl
mov
xor
sbbl
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
lea
jae
xor
in
mov
call
dec
mov
icebp
cmc
mov
pop
xchg
adcl
rcrl
pop
mov
(bad)
fimuls
mov
push
fstpt
cltd
jae
mov
cmp
xchg
in
ret
sbb
mov
push
xchg
test
inc
bndldx
lret
repz
sub
popa
test
mov
cwtl
xchg
cmp
dec
jge
mov
xor
cmc
xor
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
pop
outsb
lea
and
aas
divl
loope
sub
out
push
jle
sbb
scas
add
inc
cmpxchg
imul
roll
test
dec
xchg
jo
sub
mov
(bad)
adc
mov
lcall
test
lcall
pop
lods
mov
repnz
mov
mov
adc
outsb
and
in
call
enter
push
and
popa
add
push
xchg
inc
cmp
lea
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sub
and
push
adc
xchg
xchg
das
jge
das
push
shlb
shl
xor
mov
lret
jl
nop

ljmp
push
jne
xchg
cwtl
test
test
loopne
mov
and
cmp
std
aad
cld
rcrl
das
shlb
orb
mov
movsb
repz
lahf
shll
pushf
push
lret
add
add
adc
ds
jo
sbb
mov
ret
outsb
mov
cs
cmp
mov
fimuls
std
fsts
mov
enter
mov
dec
enter
xchg
jmp
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
pop
lret
sbb
mov
test
push
jl
push
inc
data16
xchg
mov
fcomi
ret
cmp
movsl
loop
daa
dec
jae
jo
inc
popa
push
dec
mov
orb
mov
fstl
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cld
jp
sti
test
das
adc
clc
mov
fucomi
pushl
icebp
cli
pop
dec
std
test
mov
jnp
sub
cmc
sub
imul
and
mov
or
xlat
inc
add
fs
xor
(bad)
xor
cmpb
push
push
add
nop

ss
fdivr
pop
xchg
int3
inc
xchg
popa
pop
push
adcl
into
in
xchg
rcr
lcall
test
cmc
mov
stos
mov
orl
cmpsl
mov
sbb
sbb
test
sub
aas
and
xor
scas
dec
aas
stos
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
or
adc
into
rcll
or
sub
mov
lods
out
movsl
popa
popf
loope
lret
in
fs
mov
lods
jnp
cmpsb
not
orl
lods
mov
in
fs
and
mov
test
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
and
popa
aas
xor
shrl
in
cmpb
add
bound
xchg
push
inc
adc
inc
xchg
push
push
adc
fcomi
les
and
add
shr
loop
fmul
lret
cmpsb
or
inc
cmpsl
lahf
pop
add
outsb
inc
divl
popa
loop
in
push
mov
add
add
cmpl
ss
lea
nop

push
push
fsubrl
inc
test
(bad)
pushf
mov
or
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
outsb
push
ja
cmp
(bad)
jmp
sbb
pop
andl
inc
int
cld
or
mov
sub
ja
out
jb
add
mov
mov
arpl
subl
int
cli
sbb
lcall
xlat
out
cmovno
fs
into
cmpl
push
sub
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
add
dec
sbb
add
mov
test
jnp
jp
pop
ficoms
stos
push
dec
cmp
cmp
and
adc
push
(bad)
xchg
in
dec
and
rol
sahf
jb
and
insb
fwait

cmpsb
xor
in
sub
sbb
or
ljmp
mov
stos
sbb
mov
add
sub
in
les
dec
and
sub
cmpsl
add
xchg
sbb
out
mov
lea
sub
and
aad
mov
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
aaa
shlb
stc
fcoml
or
push
pop
or
lea
add
pop
mov
mov
mov
scas
pop
pop
fdivrp
mov
repz
stc
jae
fsubl
xorb
repnz
(bad)
adc
pop
js
scas
in
sbb
mov
lahf
sbb
push
xchg
orb
bound
pop
xchg
test
and
push
lods
scas
jae
ficoml
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
adc
mov
adc
call
popf
xor
or
shlb
out
hlt
out
andb
xchg
sbbl
inc
and
mov
daa
sbb
fidivs
jbe
pop
jae
movsb
lods
insb
movsl
testl
clc
(bad)
call
out
add
sub
xchg
push
pushf
mov
dec
test
xchg
mov
inc
inc
mov
(bad)
loop
xor
into
xor
cwtd
clc
sbb
xchg
outsb
jb
popa
repz
stos
(bad)
sbb
or
cli
mov
fsub
cmpl
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xchg
fwait

xchg
sub
inc
cli
fstpl
mov
cmpsb
inc
inc
add
adc
xchg
dec
stos
outsb
xor
mov
push
js
test
or
lret
das
lret
(bad)
pop
pusha
cmpsl
xchg
sbb
scas
pop
jg
hlt
fadd
fildll
inc
(bad)
clc
pop
adc
shll
pop
fwait

out
ja
ja
push
push
test
xchg
sub
clc
das
jnp
sarl
pop
xchg
mov
popf
in
addr16
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cmp
cltd
mov
stos
mov
sub
(bad)
push
subl
cmpsl
test
ret
mov
aad
ror
test
stos
sti
test
sub
(bad)
movsl
lret
es
adc
inc
or
stc
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
add
inc
addl
mov
icebp
stos
enter
or
dec
inc
in
sub
rcr
inc
push
fadds
pop
adc
sbb
xchg
aad
aad
dec
pop
out
and
aas
push
inc
int
mov
jbe
xchg
add
lea
or
or
decb
push
add
int3
data16
lea
test
lret
xlat
push
je
out
xchg
or
in
cli
inc
dec
dec
inc
(bad)
sahf
push
pushf
push
sbb
loope
orl
and
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
aaa
call
inc
sbb
dec
ja
jecxz
frstor
enter
int
pop
or
xchg
test
mov
ror
cmp
mov
adc
loope
mov
repnz
adc
lds
and
faddl
leave
adc
add
ret
testl
mov
mov
cmpsb
cmp
push
jo
subb
mov
lea
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
xchg
loopne
jo
cld
add
dec
pusha
fwait

int
lds
in
das
dec
js
cli
sbb
jb
pop
pop
mov
int
cmc
add
push
in
ss
int
adc
add
xor
data16
stos
push
sub
mov
mov
cmpl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
pushf
orb
stos
fnsave
movsb
divl
dec
mov
ja
jbe
test
adc
sub
stos
fnstenv
and
aam
add
pop
test
mov
je
jecxz
jb
mov
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xor
xchg
cmc
daa
push
lea
pop
mov
xchg
addr16
xchg
or
sbb
cmp
or
or
mov
lcall
xchg
pop
cli
or
aaa
lret
pop
test
(bad)
sub
fs
data16
add
adc
sti
jp
xor
lret
mov
cltd
jp
mov
mov
repnz
ds
jo
xchg
filds
mov
add
aas
sub
mov
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
sub
icebp
jbe
int3
outsl
mov
divl
sbb
std
and
lcall
xchg
rclb
inc
push
iret
xchg
xchg
iret
hlt
xor
(bad)
stc
mov
mov
pop
mov
push
rep
lods
dec
pop
mov
jb
(bad)
and
dec
push
cmp
pop
arpl
xor
cltd
cmpsb
test
fs
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
add
cs
mov
je
xchg
sbb
cmc
mov
mov
mov
add
sti
movsb
mov
iret
or
push
xor
xchg
jg
lret
data16
lods
lods
xor
loope
arpl
xor
mov
cmc
test
or
lea
insl
mov
je
test
push
mov
mov
js
cmp
xchg
aad
push
test
xor
add
cmpsl
xchg
out
rorb
or
out
faddp
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
or
(bad)
data16
imul
cmp
jge
ret
mov
cmpl
repz
dec
nop

cmp
jbe
insl
xchg
cmp
in
mov
imul
push
xchg
cwtl
jmp
in
mov
out
sub
jo
fcmove
pusha
mov
add
mov
nop

inc
mov
es
call
out
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
lcall
loop
notb
mov
xor
push
lahf
popa
sar
shll
insl
inc
mov
add
fs
inc
mov
lret
sti
push
movsb
or
leave
push
jl
add
rcl
into
adcl
jle
(bad)
cli
push
outsb
lea
adc
(bad)
daa
fsubrs
adc
ret
(bad)
xchg
fists
cli
sub
repz
fcmovne
mov
pop
iret
or
rcr
negl
scas
push
xchg
sub
adc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
inc
mov
js
sub
jne
(bad)
push
test
push
adc
pop
add
xchg
mov
gs
add
es
test
in
sbb
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
push
out
mov
sub
int
cs
stos
in
out
es
(bad)
pop
mov
xchg
inc
in
or
fisubl
jmp
sbb
fidivrl
adc
gs
inc
mov
imul
inc
cmc
cmp
add
inc
sbb
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
lock
loop
mov
fldt
adc
add
dec
cli
push
push
pop
xor
std
mov
(bad)
xor
fwait

inc
or
mov
pop
xor
jecxz
sub
or
xor
out
cwtl
mov
xchg
mov
push
movsb
xchg
ja
fs
rcll
ds
mov
mov
mov
iret
add
mov
imulb
in
xor
add
push
and
test
xchg
out
std
mov
movsb
add
add
or
cld
addl
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
in
aas
clc
(bad)
cltd
loop
insl
ret
insl
xchg
jb
and
adc
mov
test
jae
std
cmpsl
sbb
aaa
mov
lds
dec
aam
sbb
fs
in
cmpb
movsl
int3
addb
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
lds
pop
in
push
aad
push
mov
movsb
popf
sub
sbb
outsb
inc
cmp
fsubp
jecxz
aas
jg
dec
pop
xchg
or
mov
sti
pop
test
add
jg
or
jp
lds
movl
roll
mov
shlb
aam
ret
pushf
cmpsb
sbb
scas
pop
cwtl
int3
push
mov
call
mov
pushf
lahf
out
mov
(bad)
test
pop
lret
mov
sbb
lret
notl
mov
data16
add
or
inc
dec
and
mov
cmp
outsb
imul
mov
int3
outsl
inc
xchg
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
mull
lods
xchg
out
dec
add
enter
mov
jae
mov
add
push
pop
sub
in
scas
cld
shr
pop
fwait

js
or
xchg
and
lret
shl
or
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
jle
sub
arpl
lahf
sbb
je
movsl
(bad)
cmp
rcll
test
shlb
pusha
or
xchg
mov
inc
dec
cmp
in
push
loope
xchg
xchg
ror
lret
sub
pop
inc
mov
fisubrl
xchg
cmp
and
push
mull
mov
(bad)
(bad)
in
mov
pop
adc
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
scas
fsts
(bad)
fildll
lea
push
pop
ja
jb
mov
sbb
add
dec
mov
cli
shrb
xchg
scas
iret
xchg
xor
in
out
call
testl
dec
test
xchg
fs
lret
ljmp
adc
jnp
push
mov
or
adc
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
xchg
or
push
or
push
cs
aas
pop
out
aaa
xchg
hlt
or
adc
add
aam
aam
test
inc
mov
xorl
mov
adc
cld
lret
push
cli
mov
test
xchg
fs
adcl
dec
jge
ds
shlb
stos
cltd
pusha
inc
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mull
out
ret
cmp
ficompl
mov
clc
(bad)
in
push
mov
xor
sub
stos
inc
das
insl
sbbl
push
mov
inc
je
test
aad
jge
ds
xor
test
fisttpll
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
aam
dec
cwtl
sbb
mov
adc
incb
int3
push
mov
xchg
mov
jmp
repnz
or
clc
enter
rcl
out
xor
mov
mov
lea
insl
sub
dec
pop
add
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
pop
shlb
mov
jbe
es
testb
jge,pn
jns
push
cmc
pop
xchg
dec
stos
or
inc
cmpsl
jb
cmp
xor
add
pop
lods
loop
fimuls
pop
scas
sbb
cmpl
sbb
jmp
ljmp
ljmp
jg
and
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
scas
jns
dec
jle
incl
and
or
test
ficoms
sbb
ljmp
fcomp
adc
fstpl
xor
repnz
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sbb
int3
movsb
sbb
int
inc
cld
mov
dec
jl
mov
pop
xchg
test
arpl
sub
enter
add
test
mov
dec
adc
inc
sbb
cmpsl
add
andb
adc
(bad)
xchg
xor
xor
std
lret
mov
iret
les
mov
mov
notb
jno
lds
(bad)
jns
or
outsl
scas
fadds
push
jnp
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
fldln2
sub
adc
mov
mov
inc
inc
aaa
xchg
adcb
dec
stos
push
mov
inc
sbb
adc
stos
movhps
ss
sub
idivl
sbbl
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
and
xorb
pop
adcl
(bad)
rcll
xchg
jle
(bad)
(bad)
sub
mov
mov
lods
cmp
in
jne
pop
jne
fwait

dec
sub
mov
movsb
enter
cli
or
movsb
int3
xor
jl
inc
push
orb
xor
fdivrl
push
leave
loopne
xchg
mov
or
popa
fldenv
push
lahf
mov
push
mov
movsl
sbb
mov
add
je
add
iret
inc
(bad)
dec
aas
jb
push
pop
shll
sub
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
inc
and
push
dec
mov
sahf
jnp
scas
call
rorl
and
cmp
xchg
inc
mov
(bad)
push
aad
push
cmp
jg
push
jbe
inc
inc
dec
int
inc
leave
add
mov
adcb
movsb
test
push
jp
mov
(bad)
scas
inc
fcom
loop
sub
dec
dec
lods
cli
subl
icebp
(bad)
push
ret
fstps
sub
popa
mov
cmp
in
insb
jae
mov
test
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
or
test
shlb
sbb
pop
(bad)
adc
push
mov
orb
push
stos
notb
iret
or
and
pop
lret
ljmp
xor
and
ljmp
or
cwtl
mov
(bad)
push
inc
push
dec
jb
cld
cs
into
jne
leavew
mov
out
lahf
adcb
ds
out
jmp
mov
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
xchg
cmp
iret
and
nop

and
stc
lahf
push
xor
addl
test
scas
mov
lret
gs
test
jb
gs
rolb
repz
repz
inc
pop
inc
cli
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
orl
test
les
pop
stos
cmp
mov
shl
sbbl
setae
inc
push
mov
jno
repnz
fistl
pop
pop
fwait

mov
in
pop
add
or
inc
sbb
mov
push
cmp
aam
mov
fstpl
sbb
mov
(bad)
lods
xchg
das
add
call
and
mov
out
ret
pusha
dec
xchg
into
sbb
sbb
cwtl
add
loope
and
lods
and
data16
pop
sar
fldl
or
or
test
or
scas
fwait

sub
test
icebp
shlb
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
add
pop
aad
int
lret
orb
(bad)
(bad)
adc
lret
sub
push
stos
das
push
shrl
es
sub
loopne
sahf
xor
(bad)
mov
and
mov
stc
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
in
nop

xor
mov
inc
lahf
(bad)
adc
pop
sbb
scas
divb
cs
std
pop
(bad)
mov
ss
sub
jnp
aaa
sub
pop
pop
ret
push
inc
mov
push
dec
test
call
iret
push
mov
mov
inc
mulps
stos
cmp
movb
cmp
test
sub
lahf
push
xchg
call
xchg
cmc
pusha
push
add
jbe
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
in
call
xchg
fs
and
jbe
pushf
mov
xchg
addl
xchg
cmp
loopne
lcall
jmp
inc
push
call
pcmpgtd
mov
js
fwait

cmp
test
lret
add
fs
mov
pop
lcall
lods
cmp
cltd
and
sub
or
sub
push
push
int3
mov
shlb
int3
push
and
add
jg
mov
(bad)
adc
pop
adc
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
lods
add
out
xor
lods
mov
push
ss
mov
add
xchg
sub
push
sub
mov
mov
popf
xchg
mov
pushf
inc
push
movsl
jnp
cmpsl
mov
mov
cmpsl
add
xchg
sbb
lahf
les
add
test
insl
sarb
cmc
movsl
inc
test
aas
xor
aad
nop

add
mov
movups
inc
movsb
or
push
adc
push
bound
sub
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
(bad)
std
sub
jae
fsubrp
xor
mov
lea
push
scas
ss
daa
xchg
fs
cli
pop
sti
mov
or
das
pop
xor
xchg
or
inc
mov
sub
sbb
mov
pop
test
out
xchg
sub
into
push
xchg
cmc
fs
xchg
outsl
dec
frstor
jg
shll
pushf
stos
mov
(bad)
xor
cwtl
aas
loop
dec
out
js
andb
pop
addb
lret
arpl
pop
lret
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
rorb
inc
mov
addb
cwtl
and
add
stos
xchg
dec
inc
inc
gs
dec
pop
pop
fcmovu
cmpb
cmp
test
pop
xchg
adc
cmpsl
inc
mov
dec
rcrb
adc
pop
and
js
imul
hlt
pop
ficomps
loopne
rcrb
adc
mov
push
stc
sbb
pop
enter
fnstsw
into
inc
mov
test
or
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
shlb
push
lret
mov
out
int
aaa
xchg
mov
sarb
aad
mov
push
orb
testl
or
adc
pop
movsl
mov
inc
cwtl
int
adc
out
in
mov
lea
jno
adc
xchg
xchg
stos
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
adc
xlat
(bad)
push
cli
leave
bound
xor
sbb
xchg
xchg
mov
and
mov
(bad)
xlat
adc
rorl
xchg
adc
mov
or
shlb
test
xchg
shrl
fwait

mov
xchg
in
rcll
inc
test
mov
in
jo
loop
lahf
leave
test
or
les
and
sti
rcr
cmc
lea
xchg
inc
pop
fisttpl
fsubrp
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
fnsave
add
loopne
pand
sub
sub
int
(bad)
addr16
mov
stos
int
inc
jno
adc
cwtl
idiv
xchg
orb
sbb
pop
cmp
arpl
lahf
add
mov
test
outsb
movups
rcrb
stos
adc
lret
mov
(bad)

pop
lret
rcr
movsb
or
mov
sbb
or
xchg
xor
push
adc
andl
lock
fs
out
ja
push
sbb
out
out
lret
jl
popa
mov
jo
movsb
and
xchg
sbb
cmpsb
sub
jo
in
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
lahf
jg
lea
aad
in
xor
loope
dec
cmp
sub
and
cltd
lock
xchg
push
or
mov
popf
or
hlt
sbb
xchg
mov
jp
xlat
je
pop
das
sbb
js
gs
sbbb
rorb
repnz
cmp
inc
xor
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
add
loope
hlt
mov
lcall
inc
jmp
cmpsl
xchg
mov
sub
or
aaa
xor
sub
dec
adc
mov
and
pop
test
es
pop
test
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
lret
cmp
stos
sbb
add
sub
je
addl
pop
(bad)
sub
inc
loop
mov
fldl
mov
(bad)
push
xlat
xor
mov
jge
add
mov
jne
xor
iret
ret
add
lahf
mov
lods
ljmp
pop
ss
mov
adc
pop
mov
test
cmpb
adc
lret
stc
cwtl
cmc
mov
pop
loope
sar
fs
pop
add
push
push
mov
movsb
ficoms
mov
test
test
and
jae
fdivrl
lret
decb
dec
adc
xorb
scas
xor
lahf
xchg
and
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
or
sbb
mov
loop
xchg
xchg
sti
jnp
or
mov
push
add
jp
adc
imul
dec
fstp
jg
lahf
mov
fidivrs
testl
mov
popl
in
flds
jp
subb
cli
lea
and
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmp
setae
adc
or
mov
in
mov
xlat
mov
clc
xchg
pop
fiaddl
adc
sbb
test
sti
stos
pop
pop
and
sbbl
add
test
test
adc
lea
pop
adc
imul
loop
fs
xlat
scas
mov
or
dec
or
add
addb
sub
jmp
fisttpll
rcr
mov
gs
cli
call
xchg
jg
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
cs
cmp
nop

sarl
lods
scas
sub
xchg
les
stc
xchg
mov
outsl
lock
pop
addb
pop
(bad)
leave
jp
orl
sti
push
(bad)
lods
xor
shlb
(bad)
cmp
sub
pop
sahf
xchg
(bad)
sub
cs
mov
(bad)
push
sbbl
out
xorl
cmp
add
adc
imul
xchg
test
cmc
jnp
pop
cld
jecxz
mov
stos
test
mov
or
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
add
(bad)
(bad)
test
pop
pop
ds
stc
sahf
jo
incl
out
cmp
ljmp
cmpsb
xlat
andb
dec
mov
ljmp
test
fcompl
sbb
push
fidivrl
or
sub
sarl
mov
adc
mov
shr
in
fnstsw
addl
inc
iret
stos
jbe
push
std
xchg
cli
dec
lock
xor
addl
cld
addr16
repz
(bad)
ljmp
scas
(bad)
incl
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
shlb
sub
add
insl
test
mov
aad
shll
pop
or
in
and
in
loop
test
lock
in
or
add
inc
lahf
xchg
sub
dec
xor
in
jecxz
gs
(bad)
sbb
test
xchg
push
pop
mov
xor
outsb
ja
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
inc
xchg
sub
fsub
loope
iret
xchg
cwtl
dec
jo
xor
add
cmp
jbe
pop
pop
enter
pop
jge
hlt
pop
xor
mov
aas
xchg
push
stc
cmpb
xlat
js
fmull
test
jp
mov
aas
imul
lret
dec
pushf
movsl
adc
dec
(bad)
shrl
mov
pop
fiadds
out
xor
cmp
sahf
xchg
jns
mov
sahf
xchg
repnz
push
pop
in
mov
pop
inc
in
pop
orb
jl
int3
adc
lock
sbb
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
dec
and
fisubs
add
fidivrs
icebp
mov
nop

rcrl
inc
stos
(bad)
mov
pop
mov
xor
cmp
xchg
bound
sbb
int3
enter
jnp
loopne
xchg
add
fsubs
lahf
mov
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
lock
xor
stc
gs
out
mov
lds
inc
push
xlat
ret
(bad)

dec
sarl
push
cmpsl
aas
addl
rol
jb
mov
mov
ret
mov
adc
mov
jbe
sbb
xor
(bad)
sbb
jno
mov
xchg
xchg
jae
loopne
jne
rclb
fdivrs
test
lcall
mov
std
xchg
ds
inc
lret
ret
or
jb
movl
adcl
mov
andl
addb
adcl
mov
mov
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
cmpl
mov
loop
adc
(bad)

xor
xor
mov
adc
mov
cli
and
fldcw
sbb
or
scas
and
lds
ret
dec
movups
lds
fs
(bad)
(bad)
in
xchg
inc
cwtl
mov
adc
in
lret
push
nop

loopne
leave
sahf
mov
pop
mov
std
xchg
mov
divb
in
dec
in
cmp
mov
xor
in
movsl
mov
pmaddwd
jl
lea
mov
sub
jb
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
outsb
inc
mov
sub
lret
inc
jecxz
cltd
movb
(bad)
ja
das
xor
inc
pop
std
jge
ret
test
inc
testl
push
push
in
pushf
push
fdivrs
cld
out
jecxz
std
mov
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
insl
fsubs
push
repnz
lds
push
jno
rclb
out
shll
adc
push
mov
pop
jecxz
lret
xchg
lds
inc
sub
sbbl
fldt
pop
mov
adc
inc
dec
mov
(bad)
hlt
add
mov
push
lcall
mov
stc
cld
cltd
push
inc
adc
filds
cmpb
iret
adc
(bad)
and
add
inc
cmp
cmp
or
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
cmpsl
cltd
in
lcall
test
jmp
popa
dec
and
mov
(bad)
clc
test
dec
push
(bad)
cmpsb
jg
les
sub
adc
add
cmc
icebp
sbb
test
popa
jno
popf
or
jmp
mov
mov
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
stc
ret
adc
xchg
std
inc
xchg
call
hlt
and
out
addr16
enter
test
addb
aaa
adcb
xor
cwtl
jg
xor
into
das
loop
test
cmp
adc
lds
aas
mov
fwait

xchg
scas
roll
pop
imul
ret
vmread
inc
outsl
adc
leave
inc
aas
pusha
push
xchg
test
sbbl
and
outsb
(bad)
out
add
sub
scas
test
inc
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
xor
cwtl
sahf
addl
or
mov
xchg
lds
adcb
push
ficompl
hlt
(bad)
stos
and
or
fmuls
stos
je
ficoms
cmp
add
xor
push
mov
jecxz
int3
loop
push
int3
(bad)
int3
sub
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sbb
loope
push
mov
fst
jp
mov
out
popf
xchg
insb
mov
andb
idivb
sbb
iret
cltd
dec
cmp
loopne
jb
aam
aas
mov
pop
push
adcb
shll
mov
jecxz
or
fsubr
(bad)
int3
lret
rcll
das
jne
fisttpll
stc
xchg
inc
aam
andl
test
nop

cmc
sub
fmull
shl
push
arpl
dec
cld
subl
or
orb
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jnp
rorb
push
subl
clc
dec
loop
push
data16
repnz
pop
leave
xchg
(bad)
pop
lret
jp
inc
add
fiadds
jo
stc
inc
inc
lahf
add
mov
jns
test
pop
(bad)
xchg
dec
inc
or
cmp
dec
(bad)
aad
cmp
mov
dec
(bad)
std
mov
pop
lds
push
mov
addb
cmp
sarl
(bad)
mov
xchg
pushf
into
aas
or
int
xchg
mov
adc
cmp
adc
pusha
mov
int3
inc
mov
daa
in
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
subl
cli
rclb
icebp
fs
sub
fmull
aam
pop
insb
movsb
scas
sub
adc
push
(bad)
fcmovnbe
push
in
in
(bad)
pop
lea
dec
mov
push
sbb
mov
stos
mov
fsts
mov
(bad)
mov
inc
adc
enter
iret
push
jge
mov
bound
xor
int3
sub
test
scas
pop
push
fbld
out
pop
loop
(bad)
fucomip
pop
scas
loope
push
sbb
add
lahf
mov
sub
add
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xchg
test
mov
lcall
mov
jae
push
ret
adcb
mov
loopne
jg
sarl
sub
push
and
fdivrl
pop
fiadds
push
dec
inc
pusha
das
lock
in
pusha
fst
sub
inc
(bad)
popa
sarb
inc
adc
std
int3
jp
inc
jae
lods
test
xchg
iret
test
cltd
or
sub
add
and
lds
jl,pn
jl
mov
or
(bad)
xchg
dec
add
inc
subl
pop
mov
mov
fistl
in
push
leave
mov
divl
mov
xchg
inc
lcall
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
(bad)
test
sti
imul
outsl
and
xchg
mull
mov
push
out
pop
mov
ret
stos
fcom
out
mov
aas
aaa
xchg
(bad)
fildl
(bad)
mov
sbb
insl
test
lret
mov
imul
pop
ja
dec
divl
frstor
(bad)
out
and
mov
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
and
cmp
mov
loopne
sarb
in
jns
ficomps
lea
addr16
bound
mov
jl
xor
push
cmp
stc
imul
lea
orb
rcrb
pop
inc
mov
leave
lds
cmc
(bad)
jmp
pop
aas
lahf
mov
pusha
(bad)
jle
leave
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
or
leave
cmc
push
inc
sti
adc
(bad)
cs
or
xchg
adc
lods
test
adc
and
jne
inc
cmp
rorl
mov
lcall
enter
(bad)
mov
incl
inc
(bad)
shrl
ror
cwtl
stc
les
addr16
fidivl
push
in
xchg
pop
rcrb
mov
jae
and
fldcw
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
dec
insb
out
in
cmp
aad
jl
jmp
jbe
fwait

lret
mov
pop
outsl
jge
dec
fsubl
and
imul
add
les
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
shlb
xor
adc
cs
(bad)
rorl
mov
mov
int3
or
push
mov
test
cmp
icebp
inc
xchg
xlat
aam
repz
ficomps
push
push
orl
push
lahf
xor
jg
stos
insb
push
push
imul
scas
addl
mov
jbe
aad
xor
cld
mov
xorb
mov
or
test
pop
push
andl
out
fldt
push
rorb
hlt
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
stos
cs
ljmp
imul
loop
cmpsb
pop
loope
xor
mov
jp
and
mov
or
(bad)
mov
adc
mov
call
xchg
pop
loope
push
mov
push
mov
add
clc
adc
js
fwait

xchg
xor
ret
xchg
in
aam
stc
push
repz
add
jae
mov
(bad)
aas
push
mov
add
adc
mov
or
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
pop
add
push
adc
shll
dec
adc
std
inc
(bad)
popf
push
stc
xor
cmp
add
loope
adc
bnd
mul
sahf
mov
and
fistps
movsl
pop
mov
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
aas
mov
sti
or
cli
xor
lret
mov
inc
jae
out
or
(bad)
nop

inc
dec
lahf
jb
les
xchg
xor
mov
popa
iret
pop
mov
pop
mov
scas
push
aaa
push
push
dec
int3
jge
pop
xchg
ds
and
cli
mov
xchg
xchg
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
std
lods
mov
push
add
mov
loopne
call
int3
int3
mov
sub
mov
test
je
mov
mov
mov
push
call
mov
mov
add
mov
pop
mov
push
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
outsl
filds
addl
jae
sbb
cmp
jo
add
adcl
jne
dec
xchg
add
ror
addl
addl
or
repz
addb
addl
cmp
loop
add
pop
nop

mov
stc
fldt
addl
add
sbb
fiadds
add
sub
sahf
mov
andl
aas
(bad)
xchg
mov
rcrb
addl
add
aad
dec
fmuls
add
addl
addl
clc
cmp
mov
addl
addb
jb
mov
or
pop
inc
add
and
adc
inc
fucomip
andl
add
addb
jmp
daa
addl
(bad)
inc
mov
mov
sbb
addl
push
push
xor
and
adcl
jbe
and
xchg
arpl
out
addl
addb
insb
jp
pop
leave
mov
addb
imul
lock
addb
les
cld
addl
jne
jo
sti
test
xorl
addb
cmpl
pop
and
and
addl
mov
jge
add
pop
addl
sbb
in
aad
outsb
mov
addl
in
andl
in
into
int3
mov
loopne
pop
jmp
add
cmpsl
mov
test
addl
addl
dec
mov
sbbl
andl
addl
xlat
addl
cwtl
addl
andl
andl
addl
adcl
addl
sbb
xlat
jmp
addl
mov
lds
jae
je
dec
and
addl
int
std
add
ljmp
addl
xlat
pop
nop

in
sbb
addb
movsb
insb
add
cwtl
mov
and
and
and
add
addb
pop
xchg
ret
mov
andl
and
dec
aam
mov
addl
sbb
cmpsl
adc
addb
sbb
arpl
mov
addl
andl
addl
clc
sbbl
addl
cmpsl
imul
dec
xchg
xchg
sbbl
orl
sub
push
sub
add
adcb
addl
addl
jmp
add
adcb
dec
mov
addb
lock
stos
jb
mov
mov
mov
add
loop
xor
ret
sub
addl
adcb
cmp
addb
addl
addb
jnp
lcall
addb
shl
nop

sahf
xchg
andl
add
out
sbb
sub
addl
sbb
or
addb
addl
int3
mov
xchg
addr16
inc
out
addl
add
inc
fdivrp
pop
int
mov
int
andb
addl
lock
and
inc
mov
lahf
xorl
fldl
negl
enter
add
or
jge
pop
sub
addl
popf
loope
addl
xorl
mov
outsb
roll
add
and
nop

das
subl
and
add
addb
lahf
inc
shr
js
cmp
addb
addb
int3
xor
adc
addb
faddp
addb
and
dec
add
inc
scas
js
cmpl
add
addl
mov
addl
add
sbb
xor
sbb
addl
popf
adc
xchg
jno
rcl
sbb
andl
addl
mov
add
inc
out
addl
add
gs
adc
mov
addl
int3
subl
loop
addl
sar
cmp
addl
mov
addl
and
dec
iret
sbb
rcrb
addl
or
cmpl
addb
addl
(bad)
mov
orl
xchg
jecxz
sti
sbb
andl
addl
cmp
popf
xchg
andl
addl
andl
addl
popf
movsb
leave
mov
addl
xor
fsubr
jns
andl
addl
addl
test
cmp
addb
adc
pop
inc
add
addb
adc
xor
ret
jnp
add
andb
xorl
addl
int3
test
ret
(bad)
popf
pop
mov
ret
addl
and
or
int3
add
cmp
pushf
inc
mov
addb
mov
out
mov
addl
gs
xchg
xchg
addb
sub
cmpsb
addb
add
cmpsb
xor
inc
in
outsl
or
addl
test
addb
xorl
inc
xchg
int3
(bad)
lret
inc
lods
and
addl
test
and
mov
addl
sbb
xchg
in
sbb
mov
add
xchg
xchg
mov
dec
fsubrl
add
addb
jne
cltd
mov
add
cmpb
insb
adc
not
dec
mov
ja
addl
pop
out
fwait

into
pop
cmpsl
arpl
push
mov
add
andb
adc
or
in
ret
addl
addb
bound
sbb
addl
addl
clc
mov
addl
mov
orl
addb
pop
popf
or
cs
loopne
andb
addl
push
addb
and
out
lea
pushf
int3
lods
add
xorl
popa
push
pop
sbb
mov
xorl
addl
addl
and
push
add
addl
jb
mov
mov
out
addl
addb
jg
jle
stos
andb
andl
sbb
orl
mov
andl
add
addb
sub
out
nop

stos
insb
pushf
or
out
mov
addl
pavgw
ret
addl
rcrl
or
std
orb
mov
and
push
or
push
out
rcll
xor
and
pop
xchg
sbbl
addb
int3
scas
ljmp
add
cmpsl
out
adc
xchg
movl
addb
or
clc
sbbl
into
bound
addl
xor
add
push
addb
add
addb
mov
subl
mov
pop
add
stc
jge
rorl
cmp
add
ret
int3
mov
cwtl
decb
jmp
dec
addl
and
lea
and
outsb
fcomp
cld
ret
add
addb
ficoms
add
adcl
addb
in
fildl
enter
stos
andl
addl
sbbl
addl
std
or
das
addl
addl
std
and
addl
cmp
jns
addl
int3
pusha
sub
addl
mov
addl
add
pop
int3
ficoms
pop
xor
call
andl
pop
cwtl
cld
movb
and
addl
add
pop
xor
addl
dec
(bad)
into
shl
mov
andb
mov
addb
les
adc
mov
addl
iret
or
mov
adc
addl
les
and
push
or
andl
int3
xchg
cld
addb
and
pop
lea
orl
add
orl
add
addl
adcb
cli
xor
mov
or
addl
pop
out
faddl
add
mov
subl
test
sub
and
decb
mov
adcl
addl
int3
dec
dec
mov
xorb
addl
addl
addl
jge
loop
jp
add
addl
adc
add
testl
subl
mov
sbbb
sub
mov
addl
in
imul
lcall
addb
add
adc
bound
adc
andb
addl
lcall
addl
and
mov
addl
sbb
pop
into
addl
addb
das
les
addl
inc
cmp
imul
int3
mov
mov
out
fwait

adcl
addb
and
fstps
mov
xlat
xchg
rolb
addb
xor
xor
into
xchg
fidivl
addl
cmp
cmp
in
or
cmp
out
inc
(bad)
addl
and
bound
and
adcl
jae
addl
addb
xchg
adc
adcl
addl
add
stos
mov
ret
add
addb
xchg
mov
pushf
mov
and
orb
xchg
sub
dec
addl
add
(bad)
or
mov
orl
and
lret
addl
mov
mov
andl
scas
aas
lcall
addl
mov
das
sub
addl
and
roll
loope
addl
sbb
sbb
addb
addl
addl
(bad)
call
addb
sahf
sub
adc
incl
add
scas
in
sbb
in
jp
cmpsl
inc
dec
pop
sub
addl
mov
adc
mov
push
inc
leave
and
addl
jo
fdivr
pop
addl
jmp
jl
outsl
xchg
addl
mov
addl
mov
and
mov
andl
rcl
sub
addl
fiadds
xchg
mov
addl
and
addb
addl
nop

cwtl
insb
push
or
add
std
xor
test
add
addl
inc
sub
into
xor
andl
add
fcomps
addl
loop
out
addl
addl
jae
sub
mov
sbb
addl
scas
jno
repz
dec
mov
scas
shlb
xorl
pop
jg
(bad)
adc
(bad)
addl
xor
test
imul
ja
addb
addl
aad
movsb
addl
mov
inc
rolb
addl
movsb
sbb
addl
addb
pop
sub
addl
addl
addb
xor
and
add
addl
addl
jg
iret
mov
(bad)
mov
and
orl
xor
adcl
aad
dec
testl
addb
adc
inc
imul
mov
leave
dec
addl
addb
outsl
xor
mov
insb
jbe
add
addl
addl
(bad)
push
stos
and
call
addl
jmp
loope
jns
je
enter
andl
add
addb
popa
roll
test
addl
xchg
insb
push
addl
addl
xor
mov
mov
add
(bad)
mov
jmp
lock
cmpb
addl
test
addl
add
rcl
cwtl
adc
add
addb
adc
sbb
andl
addl
andl
addl
hlt
orb
addl
pop
mov
lea
addl
cmc
cmp
cwtl
in
jp
addl
xorb
mov
addl
and
insl
inc
xchg
inc
xchg
cmpsl
stc
mull
xchg
movb
addb
(bad)
(bad)

xor
cmc
test
iret
testl
scas
les
addb
pop
mov
cltd
in
andl
addl
std
ja
dec
jb
cltd
inc
mov
addl
sahf
push
push
xorb
addl
ja
addl
add
addl
sarl
addl
shll
addl
stos
mov
jmp
dec
add
addb
and
shlb
and
xchg
add
xchg
fadds
addl
andb
addl
and
stc
shll
xchg
lock
addb
fisubl
cltd
xchg
jg
out
test
addl
add
aaa
push
adc
addl
or
rolb
andl
stos
mov
add
mov
addb
and
dec
add
addb
addl
addl
add
sub
jmp
inc
push
add
addl
mov
push
add
addb
mov
loop
xchg
add
addl
in
mov
addb
addl
xlat
outsl
addl
rolb
clc
iret
add
andb
xchg
(bad)
out
or
andl
sub
xorl
xorb
adcl
mov
add
addl
and
jne
lret
popf
addl
add
cmc
xchg
ret
inc
mov
(bad)
andb
addl
subl
andl
cltd
lods
es
pop
dec
in
sbb
adc
xorl
jns
and
addl
addl
jns
addl
addl
cmp
sub
addl
inc
cmpsl
repnz
lahf
in
in
or
add
and
(bad)
mov
test
mov
aam
and
add
addb
mov
inc
ficoml
addl
inc
sbb
inc
jle
addl
and
and
sbbl
addl
addb
cmp
mov
addl
add
xchg
jl
ret
mulb
movsb
mov
dec
xchg
addl
push
cmp
jg
addl
pop
sub
inc
subb
roll
addl
pop
in
jo
adcl
mov
or
mov
std
jle
and
jp
scas
mov
lods
jae
loope
insb
daa
sbb
ret
push
sub
xorl
pop
pusha
out
mov
jge
push
ja
mov
lahf
mov
jne
and
jg
mov
in
and
jge
xor
sahf
pop
daa
add
(bad)
clc
shlb
daa
in
and
repnz
enter
sbbl
movsb
sbbl
mov
enter
in
aaa
loope
cmpsl
(bad)
mov
fiaddl
pop
or
cvtdq2ps
mov
test
xchg
test
outsb
test
push
movsb
inc
notl
icebp
imul
lock
ror
adcl
pop
andl
pusha
out
pop
mov
sbbb
orl
daa
mov
sbb
test
orb
(bad)
adc
fs
das
adc
xchg
test
fstps
cmc
aam
subl
or
jecxz
(bad)
fidivs
fcom
gs
fwait

subb
lea
push
xor
test
cwtl
aas
dec
cmc
jl
cmpb
movsl
xchg
aam
int
push
insb
into
loopne
movsl
subl
lahf
mov
pop
mov
pinsrw
inc
lock
int
xor
push
orb
sti
inc
in
in
loopne
mov
mov
xchg
aad
std
in
mov
add
aam
push
push
aaa
loop
pop
adc
mov
xchg
subb
hlt
shll
xchg
push
orb
xorb
or
outsl
ret
data16
ret
mov
mov
cmp
and
mov
dec
add
psubusb
sarb
sub
call
mov
sti
mov
jbe
mov
xorl
fstpl
int3
cmp
les
and
push
inc
and
sahf
inc
mov
mov
xchg
pop
fimuls
out
inc
push
pop
pop
mov
mov
hlt
loop
movl
dec
lds
push
subl
sbb
lock
(bad)
int
pop
xchg
(bad)
mov
sbb
cmpsl
sarl
and
nop

xor
add
push
adc
aaa
ret
(bad)
cld
dec
xor
xlat
pop
push
mov
mov
and
sub
and
mov
ss
cs
lods
out
push
outsb
adcl
pop
add
lock
out
out
fucom
xor
mov
jbe
scas
push
mov
pop
sbb
mov
aaa
ret
mov
pop
or
(bad)

data16
std
or
decb
and
andl
pop
add
xor
test
pop
ret
mov
shll
xchg
mov
je
(bad)
mov
xchg
mov
mov
dec
popl
jbe
xchg
adc
or
ret
push
hlt
cmpsl
cmpsb
push
rclb
jnp
bound
dec
rol
lcall
ror
cmp
stos
subb
dec
addr16
addb
push
int
cmp
mov
or
test
daa
inc
mov
push
cmp
scas
sub
test
shlb
in
int
xor
(bad)
jbe
push
into
shr
aam
addl
jae
mov
or
xor
adc
jne
fdivl
dec
push
mov
mov
add
shll
mov
push
call
out
xchg
mov
test
mov
mov
xchg
or
pop
inc
mov
inc
adc
out
xor
movups
cmpsl
mov
jp
into
adc
jmp
icebp
adc
cmp
mov
inc
push
orb
mov
out
sub
pushf
pushf
mov
out
bound
adc
pop
loopne
in
adc
push
loop
outsb
mov
adc
aam
fdivrs
push
xor
mov
in
icebp
or
nop

repz
jecxz
cmpsl
daa
loope
mov
loope
inc
or
jo
push
and
subb
nop

fmuls
mov
xlat
adc
fcomps
jno
pop
mov
aam
mov
(bad)
mull
push
sbbb
sub
add
stos
into
mov
fsubl
mov
rorl
mov
inc
sbb
dec
lcall
mov
icebp
fnsave
push
push
fwait

orl
xorb
jb
cmc
jae
in
sahf
push
ljmp
cmpsb
pop
mov
cmpsb
iret
or
test
icebp
add
sbb
xor
int
jp
shr
or
popa
fcmovnu
cmp
test
xchg
sbb
fldt
movsl
ja
cmpb
arpl
rol
fldenv
adc
int
cmpsb
sub
fsubrs
xchg
shll
sbbl
and
mov
cmc
mov
cmp
xchg
leave
xorb
(bad)
pop
fists
(bad)
lret
ja
xchg
jge
mov
push
or
(bad)
movsl
inc
sti
jle
addr16
xorb
mov
xchg
mov
sbb
or
test
outsb
pop
leave
jb
addl
andl
hlt
orl
mov
fcmovne
fstenv
loop
and
aas
dec
int3
daa
cmp
sub
mov
jmp
or
mov
cmp
nop

add
ret
jbe
pop
cmc
call
nop

cld
sbb
andl
insb
adc
mov
test
repz
dec
addb
xor
mov
cmpb
sbb
jp
lds
fstps
iret
mov
mov
inc
inc
sub
loop
xchg
std
jge
cmpl
jbe
frstor
xorb
cmova
popa
pop
pop
and
pusha
addl
sub
rorl
mov
inc
push
stc
js
jb
subb
test
add
or
add
or
add
or
add
arpl
add
jne
add
test
add
sahf
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
push
add
or
add
jnp
add
popl
add
mov
add
or
add
or
add
or
add
or
add
or
add
or
add
popa
add
or
add
nop

add
or
add
aam
add
out
add
clc
add
or
add
or
add
or
add
or
add
popa
add
or
add
nop

add
or
add
or
add
or
add
or
add
or
add
and
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
push
mov
push
call
mov
push
push
call
mov
movl
movl
movl
push
mov
push
call
mov
lea
push
call
mov
pop
ret
push
lcall
mov
sub
addb
inc
test
push
sbb
cmpsb
into
mov
insb
addr16
jle
sbb
dec
fidivl
cmp
in
ss
(bad)
iret
pop
pop
cmp
add
pcmpeqb
add
push
hlt
test
mov
mov
push
dec
inc
fadds
xchg
inc
adc
pop
fs
insb
cmc
jb
and
out
adc
and
aaa
sbb
pop
test
and
mov
jbe
ds
mov
xor
pop
clc
mov
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
nop

popl
popa
push
pop
int
push
mov
lods
out
in
inc
xchg
adc
mov
push
addb
fisubl
lock
repnz
popf
ss
push
adc
jnp
inc
xchg
jo
sbb
mov
and
mov
orb
outsl
push
sbb
or
inc
test
stos
(bad)
push
sbb
dec
mov
inc
sbb
fsubrl
xor
cmp
loope
jbe
sbbl
inc
test
inc
orb
mov
rol
enter
jbe
fs
mov
into
cmp
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
add
mov
pop
orl
mov
(bad)
dec
iret
addb
push
sub
sti
nop

test
insb
mov
mov
add
or
jecxz
pop
jae
sub
and
insl
push
mov
mov
add
add
shlb
cmpsb
rep
fs
cmp
sbb
mov
popf
pop
jp
xor
popa
int3
and
push
addl
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sub
sbb
cltd
inc
enter
lods
test
jae
cs
subb
adc
add
(bad)

test
push
insb
dec
mov
push
add
imul
pop
inc
xchg
push
push
and
inc
pop
push
and
rcll
xor
movl
fwait

jmp
ss
pop
in
scas
pop
cwtl
jbe
push
add
js
ljmp
sbb
lret
jnp
lcall
repnz
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
shl
stos
or
ljmp
loope
lods
fiadds
jecxz
xchg
adc
repnz
clc
xor
xchg
mov
mov
iret
pop
loope
jp
adc
mov
fincstp
shll
inc
pop
in
loopne
icebp
push
bound
cltd
addl
sbb
mov
imul
inc
icebp
push
xlat
subb
and
cmp
cld
inc
je
test
jb
ficomps
mov
mov
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
pop
lds
sbb
sub
out
cmp
cmpsl
ror
hlt
push
or
and
bound
add
shrl
mov
or
ss
mov
int3
out
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
mov
cld
nop

cli
mov
repz
mov
jae
jg
cmpsb
mov
sti
lods
push
gs
and
cmp
mov
cmp
dec
cltd
sahf
daa
clc
add
xchg
loopne
pop
ds
add
pusha
adc
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
xchg
cmp
mov
mov
dec
arpl
rclb
stc
test
out
lcall
aam
ret
pop
cpuid
int
mov
das
movsl
out
lcall
popf
mov
icebp
xor
mov
jl
and
cmp
jb
adc
ffreep
dec
cwtl
out
push
xchg
(bad)
out
jns
mov
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
and
mov
nop

jo
pop
lahf
clc
test
mov
xchg
js
or
dec
loop
mov
fucom
stos
and
xchg
test
mov
dec
xchg
aam
xchg
mov
push
jle
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
out
jnp
je
jmp
jbe
loop
mov
insl
mov
test
bound
shll
fiadds
loop
xor
clc
dec
and
test
sbb
popa
xlat
mov
lcall
paddb
sub
pop
mov
sbb
jle
inc
or
dec
ret
inc
int3
cmp
mov
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
push
or
div
data16
pop
jo
mov
cmp
je
sbbl
lds
or
test
adc
push
xchg
adc
jne
lds
lock
sub
inc
push
(bad)
(bad)
cld
push
mov
mov
loope
loope
sbb
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmpsl
daa
decl
sbb
xchg
scas
or
mov
das
mov
clc
int
xchg
mov
daa
jo
sbb
out
xchg
sti
jno
es
mov
std
or
or
into
movsl
sbb
pop
xchg
js
roll
subl
outsb
loopne,pn
orb
addb
mov
test
test
hlt
cmc
cmp
mov
into
mov
subl
cmc
mov
(bad)
(bad)
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
add
dec
mov
in
push
sub
and
jle
adc
cmp
orl
popa
add
loop
repnz
sahf
ds
cmp
sar
adc
inc
push
fisubs
dec
add
sbb
(bad)
adc
int3
out
clc
in
scas
lcall
stc
xor
outsl
mov
pop
add
cmp
mov
repz
jmp
xor
jo
ljmp
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
xchg
int
shrl
testb
fsubrp
fstl
dec
ficomps
or
pop
ret
sbb
ret
addr16
pop
cwtl
(bad)
xchg
cwtl
mov
repnz
cltd
arpl
stos
adc
enter
(bad)
lds
xchg
sbb
jmp
test
dec
out
push
test
push
insb
xchg
movb
inc
fnstenv
mov
stos
pop
leave
add
lock
enter
adc
andl
orl
mov
aas
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
jge
jge
xchg
cmpsl
mov
xchg
(bad)
jae
loop
xchg
dec
lds
imul
mov
push
aas
xchg
(bad)
lock
mov
pop
jns
cmc
fiaddl
imul
int3
mov
stos
mov
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pop
and
xor
dec
cmpb
stc
cmpsl
add
adc
jbe
inc
mov
xchg
pop
(bad)

inc
or
sbb
xor
inc
mov
mov
out
fmull
mov
xchg
jl
fcmovnb
inc
in
push
subb
fnstcw
or
sbb
ret
jle
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
sbb
fsubrl
scas
cmpb
inc
andl
mov
xchg
aas
test
mov
shll
and
lds
sbbb
mov
lods
pop
xor
dec
addr16
and
testl
loop
sbb
lea
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
dec
lock
sub
orl
js
mov
sub
mov
fimuls
xchg
sub
leave
lods
(bad)
jns
(bad)

repz
push
aad
rorb
subl
adcl
pop
cmpsl
mov
xor
cmp
push
mov
push
jbe
or
mov
dec
ja
scas
in
and
movsb
(bad)

addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
push
in
jb
int3
jp
pop
mov
mov
sbb
fsubp
mov
adc
lahf
mov
testb
popa
test
addl
dec
(bad)
fists
lret
or
or
(bad)
popf
icebp
loop
pushf
cmpsb
andl
into
(bad)
enter
imul
push
pop
mov
bnd
and
adc
lret
jbe
in
lret
mov
mov
cmp
repz
sti
ja
pop
jne
sbb
stos
rcrb
aas
adc
cmp
mov
xor
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
aad
push
mov
adc
lea
mov
cmp
clc
pop
sbb
mov
adc
leave
jp
add
push
mov
fnsave
cmc
es
rol
lds
ljmp
shrb
adc
lret
xorb
inc
adc
lods
mov
mov
loope
pop
jp
adc
mov
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
test
jbe
ljmp
inc
xorb
pusha
rolb
adc
xchg
imul
aaa
mov
xchg
subb
fsubl
popa
mov
push
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sub
test
push
xchg
sbb
cwtl
lahf
imul
add
sbb
mov
cmp
imul
lock
inc
add
(bad)
mov
cmc
inc
jge
push
inc
and
test
pop
xchg
mov
add
lock
cmpsb
push
xor
sahf
lret
pop
cld
(bad)
jp
mov
mov
push
xchg
jecxz
andl
add
cmc
fs
stos
mov
sbb
sub
lds
adc
push
jnp
adc
mov
test
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cwtl
in
sub
or
js
xchg
cs
xor
jp
push
cwtl
cmpl
push
dec
push
adc
and
add
sbbb
fimuls
cmpsb
sbbb
or
ret
and
pop
mov
sub
dec
(bad)
outsl
rorb
mov
dec
popa
stos
jnp
mov
or
movsb
lea
mov
inc
push
call
sub
(bad)
pop
xorb
fcom
mov
mov
ffreep
test
adc
lock
jne
lods
mov
ss
pop
dec
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
pop
and
jle
fsubrl
inc
mov
adc
enter
lcall
lock
ds
stos
xor
push
and
or
fistpll
aad
shr
pop
push
cmpsb
cmp
mov
ret
clc
or
sub
sbb
test
addr16
int
mov
inc
sub
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
das
mov
in
add
std
faddl
out
fstp
stos
jnp
or
(bad)
lret
fiadds
and
in
dec
adc
pop
mov
loope
repz
push
add
(bad)
rorl
std
mov
sti
mov
jl
mov
add
stc
jle
xchg
sub
movsl
sbb
mov
push
dec
jg
sti
ja
incb
fsubrl
adc
jge
sbb
in
cmp
mov
push
lret
lahf
stc
lock
ss
and
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jo
cmpsb
adc
sub
cmp
xchg
adc
dec
out
mov
and
inc
push
shl
inc
xchg
jnp
lds
sbb
cltd
ss
movsb
(bad)
fwait

pop
inc
test
test
xlat
lock
call
mov
mov
xorl
mov
dec
adc
(bad)
test
jb
jmp
pop
adc
push
aam
dec
(bad)
mov
es
mov
call
idivl
push
loope
cld
mov
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
in
mov
std
jle
pop
daa
or
into
mov
ret
add
fs
lahf
or
int
pop
in
push
test
mov
mov
add
adcl
mov
ret
pop
in
mov
mov
push
adc
fsubs
mov
add
pop
leave
shll
sub
divl
xlat
cli
xor
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xor
mov
test
aam
cmp
dec
repz
cwtl
daa
subl
mov
(bad)
iret
cmp
test
in
mov
jbe
aad
call
and
adc
mov
aaa
call
xchg
cmpl
mov
inc
push
clc
dec
jmp
or
insl
addl
mov
xor
or
lret
cmpsb
fadd
dec
clc
xor
loope
leave
inc
pop
sbbl
pusha
clc
xor
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
adc
xchg
pusha
add
mov
mov
inc
or
(bad)
jo
ljmp
cltd
jnp
xor
sahf
mov
daa
dec
aas
insl
scas
sbb
sarl
xor
push
mov
add
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmovbe
mov
lods
ret
sbb
hlt
xchg
cmpsb
lret
push
jmp
inc
cmp
dec
jp
mov
clc
addr16
dec
cwtl
adc
(bad)
xchg
inc
xor
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
or
test
add
(bad)
and
(bad)

addl
hlt
mov
jmp
mov
jmp
and
out
ljmp
fsubrs
mov
movsw
pop
cmp
push
push
lods
mov
dec
daa
mov
loop
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
dec
mov
mov
jbe,pn
mov
cmpsl
les
mov
addr16
sti
int
push
test
fisttpll
mov
jbe
jmp
movsl
push
nop

mov
adc
scas
jns
mov
test
(bad)
sahf
add
aam
gs
out
test
inc
iret
push
jo
cmp
dec
push
mov
roll
lahf
mov
or
push
jb
int
js
jge
sbbl
into
or
jmp
sti
sbb
fmuls
sub
jae
inc
cmp
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmpl
push
sub
ror
mov
test
adc
scas
dec
(bad)
std
sbb
dec
or
inc
int3
ret
mov
out
sbbl
dec
sub
lock
jl
push
xchg
testb
mov
and
hlt
fiadds
xchg
pop
movsb
cmp
stc
xorb
int
movsl
and
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pop
mov
xor
mov
cmpsb
xchg
orb
add
and
sbb
js
push
ds
jbe
cmp
mov
ret
jo
in
jae
xchg
sbbb
inc
call
cmpsl
cmpsl
lret
js
add
pusha
mov
jne
cmc
mov
ljmp
insl
repz
mov
pop
sub
jae
mov
in
imul
pushf
lea
stos
mov
sbb
dec
into
fsubrs
dec
sbb
jge
fidivrs
mov
imul
pushf
sbb
sbbb
pusha
rcll
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
scas
popf
mov
push
in
stc
and
push
mov
cmp
cmp
inc
(bad)
stos
idiv
shll
sti
cmp
jmp
or
dec
test
imul
popf
ficomps
xor
adc
push
lea
dec
pop
stc
(bad)
out
test
lds
rcll
loopne
std
jg
leave
orb
pop
adc
das
dec
mov
in
inc
add
lds
andl
lds
inc
rep
adc
xor
andl
mov
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
inc
scas
pusha
pop
popf
out
scas
into
scas
mov
test
loope
test
xor
cmp
(bad)
xchg
(bad)
in
imul
sbb
add
mov
xchg
mov
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
jecxz
fidivrs
mov
xorl
sar
je
pusha
es
(bad)
(bad)
das
test
cmp
sbb
jne
sub
and
mov
aam
lret
push
mov
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
ja
insb
add
lds
sbb
sub
dec
lock
nop

adc
sbb
push
das
mov
cmc
hlt
lods
and
in
fdiv
test
mov
add
or
call
mov
inc
push
scas
mov
into
push
popf
add
and
mov
or
sbb
(bad)
popf
int
mov
dec
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
daa
jo
pop
popa
mov
mull
mov
or
cmp
jge
pop
and
int3
add
xchg
mov
sub
jp
out
popa
in
and
in
je
sbb
xor
adc
and
int3
shll
pop
lcall
mov
insl
lea
orl
add
lret
dec
fdecstp
or
dec
ljmp
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pop
mov
jo
es
inc
int
fldenv
std
cmp
out
in
pop
mov
xor
mov
orl
inc
mov
fwait

test
shlb
icebp
xchg
mov
inc
mov
sbb
push
rcrl
shr
add
sbb
lds
out
xor
mov
inc
sbbl
out
sar
ret
cmp
push
inc
push
ret
jne
add
xchg
jle
dec
xchg
inc
jbe
cwtl
in
adc
imul
xchg
inc
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
pop
mov
jae
lods
mov
dec
mov
outsb
pop
jmp
pop
sbbl
fnstsw
roll
cltd
cmp
leave
cmp
pop
(bad)
mov
or
stos
xchg
lea
adc
jp
nop

mov
add
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
adc
cltd
or
ja
leave
imul
inc
inc
or
sub
jns
dec
jnp
cmp
outsb
mov
fcoms
fbstp
sbb
int3
inc
cwtl
cmp
pop
mov
cmpsb
loop
push
aas
sub
jmp
cmp
(bad)
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
outsb
pushf
mov
call
fcom
fidivrs
in
add
ret
and
pop
ljmp
test
dec
push
inc
mov
adc
mov
stos
inc
aad
jge
add
inc
inc
cs
mov
mov
aam
popa
mov
call
pop
or
mov
xchg
(bad)
mov
scas
pop
sbb
inc
(bad)
stos
mov
dec
subl
hlt
cmpsl
xor
addr16
(bad)
mov
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
push
push
les
shlb
add
andl
loop
mov
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jecxz
fstpl
gs
mov
ljmp
nop

outsb
push
pop
call
xchg
fdivl
lds
cmp
ret
or
hlt
shll
pop
loope
mov
sahf
jbe
aas
xorb
inc
into
mov
insl
push
jl
gs
pop
stos
pop
jmp
mov
stc
mov
test
out
sbb
fdivr
and
jae
shll
cld
adc
xchg
push
add
dec
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
shlb
dec
out
push
and
mov
sub
inc
fidivrs
cmp
adc
mov
lahf
in
mov
or
add
(bad)
sbb
mov
repz
lds
mov
popa
dec
mov
mov
push
repz
pop
cmpsl
negl
popf
ret
fldl
rcl
out
rcrl
cmpb
mov
mov
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xchg
mov
movb
sarb
jnp
in
insb
cmp
mov
and
adc
jmp
inc
dec
lds
fnstenv
xor
bound
out
cmpsb
push
cmpsl
daa
dec
inc
adc
add
jmp
mov
gs
sbb
popa
aaa
stos
push
cmpsb
shll
(bad)
sbb
pop
addb
pop
mov
cltd
jo
pop
jo
lahf
mov
jno
mov
fldl
xchg
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
in
jg
in
inc
enter
aas
(bad)
test
dec
pop
mov
xchg
and
sub
cmpsl
pop
in
lea
shrl
push
ret
or
lret
mov
or
(bad)
cmp
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
push
mov
movsb
xchg
xor
adc
repz
lds
stos
cwtl
or
jge
mov
bound
call
test
repz
pop
andl
test
pop
js
jb
lods
shlb
mov
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
aas
lods
sbb
lods
jns
sti
popa
mov
hlt
lods
mov
fidivs
test
pushf
or
xorl
je
testb
pop
jns
sub
gs
fstps
stc
xorl
jno
pmaxsw
jecxz
pop
stos
mov
pop
test
push
sub
rolb
aas
fwait

(bad)

loope
stos
lods
pop
incb
sub
and
mov
les
push
stos
mov
xchg
fistpl
lds
iret
out
(bad)
in
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
push
push
pop
int3
mov
mov
jge
cmp
and
loop
mov
in
sbbl
xor
add
cmp
sub
aad
fiaddl
test
imul
popf
push
push
into
subl
aad
sbb
not
je
cmp
mov
orl
mov
hlt
mov
sbb
push
cmc
adcl
ret
dec
cltd
push
mov
xchg
mov
andb
in
mov
jg
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
mov
and
push
test
int3
cld
outsb
pop
inc
cwtl
aad
cmp
or
jmp
adc
lea
adcb
sbb
aaa
pushf
test
mov
push
scas
pop
push
lcall
pop
ja
mov
aad
test
popa
pop
dec
jae
dec
fisubrs
adcl
add
addl
call
pop
fldl
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
subb
cld
mov
stos
dec
mov
mov
test
and
pusha
jl
mov
imul
pop
sbb
jae
dec
sbbb
les
in
popf
andl
fcompp
jnp
iret
jp
aad
xor
xor
scas
lods
fs
jmp
mov
inc
mov
int
push
bound
push
sarl
mov
and
or
idivl
std
lock
js
and
xchg
jbe
out
add
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
add
or
xchg
dec
lds
fisttps
outsl
xchg
sbb
xchg
dec
test
es
filds
sub
in
rolb
loope
cmp
test
add
sbb
scas
inc
lret
ret
rolb
imul
add
and
les
mov
ficompl
mov
or
mov
sbb
fldenv
mov
mov
inc
testb
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmp
subb
lock
or
jp
test
arpl
movsb
dec
mov
imul
scas
pop
out
mov
pop
mov
inc
ljmp
into
xor
mov
push
pop
xor
xor
sbbb
adcl
in
mov
inc
mov
lret
mov
cmp
lahf
gs
aas
xchg
or
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
aam
(bad)
out
ja
add
orb
sub
bound
adc
sub
subl
cmc
or
aas
mov
jg
dec
jmp
setno
mov
xor
ja
push
jge
inc
jle
mov
xchg
dec
push
push
fcom
jbe
movsl
jmp
repz
adc
dec
add
addl
adc
in
and
int
test
mov
inc
ds
pop
lahf
mov
rcr
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
add
xor
addl
push
inc
adc
xchg
lret
cmpl
push
mov
scas
popa
sbb
and
mov
into
push
xchg
clc
adc
fs
lret
rol
xchg
icebp
outsl
mov
cmpsl
mov
scas
insb
test
fstps
and
ljmp
sbb
cltd
call
or
aam
into
icebp
xor
and
repnz
mov
addl
test
cmp
rclb
test
dec
push
push
fnstenv
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
int3
cmpsl
or
les
push
sub
in
mov
jnp
fcmovne
inc
jbe
xchg
lahf
inc
mov
cld
rcrl
push
test
adc
rorb
out
fucom
popa
inc
pushf
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
ja
cmc
mov
mov
enter
jg
mov
or
mov
movsl
jmp
les
in
pusha
add
xor
jg
cmpsb
es
out
icebp
cmpsl
sti
inc
and
sbb
lcall
mov
xor
cmp
outsb
cmp
icebp
push
mov
mov
inc
jnp
mov
(bad)
or
and
orl
or
(bad)
dec
fidivl
out
lea
ret
dec
lods
mov
push
cmpsl
or
or
mov
push
xchg
test
add
out
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cmp
orl
lea
dec
(bad)
loopne,pt
sub
lea
stos
out
xchg
jae
mov
cmpsl
xor
ffreep
mov
rcll
lods
es
xor
enter
adc
push
sub
sahf
and
xor
in
test
aam
pop
or
adc
dec
mov
adc
hlt
daa
rcrb
call
orb
icebp
push
addr16
sbb
xor
movsb
jno
shll
pop
jae
data16
notl
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
test
inc
and
popa
add
adc
mov
mov
push
fwait

sbb
cmp
mov
jnp
mov
int3
into
mov
or
sar
fs
in
adc
mov
jnp,pn
lret
xrelease
push
out
jmp
lret
mov
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
or
xlat
nop

mov
lret
dec
lea
sbb
mov
cmp
lret
push
shrb
add
das
or
sub
sbb
adc
mov
in
xchg
mov
popa
insb
aad
scas
cmp
lea
and
xchg
pop
pop
dec
or
sub
jl
pop
mul
jbe
jnp,pt
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
adc
mov
cmc
leave
repz
leave
lds
pop
jnp
insl
or
jmp
movsl
call
cmp
jle
pop
add
mov
shl
mov
ficoml
pusha
mov
mov
jecxz
xor
aam
test
mov
push
and
pop
aas
add
mov
into
fs
(bad)
jne
dec
lret
jne
fs
shll
pop
xor
adc
shll
fists
mov
pusha
mov
aad
dec
int3
mov
cmpsb
ret
or
xchg
push
add
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
add
xor
int
mov
call
push
pop
aam
mov
and
mov
dec
lods
xchg
data16
push
call
xor
ljmp
shlb
aad
lods
lret
add
and
(bad)
fcoml
or
std
lcall
pop
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
loopne
sub
fyl2xp1
xchg
add
or
inc
xchg
xor
pop
jbe
or
add
fisttpll
jae
or
rorb
gs
lds
jbe
loope
push
aam
dec
mov
adc
mov
lds
movsl
pop
mov
cli
aam
dec
insl
mov
andnps
mov
adc
pushf
call
cwtl
xchg
cltd
push
xor
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
movsb
jbe
inc
fcmove
mov
and
push
jae
dec
pusha
pop
add
lcall
push
jne
rolb
rcrb
inc
mov
(bad)
xchg
or
dec
imul
loope
lret
mov
push
bound
movsl
in
fistpl
pop
in
mov
cmp
ds
inc
mov
(bad)
fdivs
(bad)

in
push
insl
cld
fisubl
pop
mov
xchg
std
or
adc
ror
xchg
repnz
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
lcall
inc
aad
hlt
loopne
xchg
inc
dec
xchg
mov
sub
punpckhbw
sub
adc
data16
pop
sahf
std
addb
mov
loop
stc
outsb
int3
sub
loop
inc
cs
clc
sub
xor
out
cld
hlt
push
and
fnstcw
gs
inc
sbb
xchg
movsl
in
outsl
arpl
jecxz
pop
pusha
cltd
xchg
jnp
imul
ret
pop
scas
aas
in
xchg
addr16
repz
int3
enter
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
cmp
push
sub
loopne
lds
or
adc
arpl
cmp
cmpsl
cmpb
loopne
add
push
repnz
sbbl
mov
cmpsb
test
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
dec
mov
int3
inc
jns
cs
inc
mov
mov
pop
mov
stos
push
roll
pop
aam
sub
jmp
jl
xor
rclb
pushf
das
mov
add
aad
adc
fnstenv
inc
sub
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
(bad)
std
lcall
push
bound
in
lods
xor
add
andl
iret
jo
adc
adc
pushf
jmp
push
push
push
jne
push
sub
nop

ret
jno
mov
mov
mov
jnp
jb
xor
mov
mov
(bad)
cmpsl
bound
scas
sub
jmp
add
dec
fbld
out
xor
(bad)
mov
jae
cmp
aas
decb
imul
test
jp
pop
int3
clc
or
pop
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pop
(bad)
fldl
and
add
lcall
cmp
xchg
mov
les
push
dec
pop
inc
test
lock
inc
jo
push
xchg
sub
mov
xlat
add
cwtl
loop
jns
std
stos
adc
xchg
jno
aas
addb
mov
push
cwtl
fs
dec
sbb
daa
ljmp
add
fisubrl
iret
xor
aad
popf
sbb
loop
lret
mov
out
push
stc
inc
jo
js
out
pop
sbb
inc
mov
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cwtl
push
xchg
or
out
loop
jo
dec
mov
lods
dec
mov
scas
movsl
sbb
int3
aaa
mov
mov
fstpl
cmc
test
sub
jl
cmpsb
pop
xchg
in
outsl
lods
adc
loopne
mov
pop
add
jbe
mov
cltd
fstps
sub
xlat
dec
outsb
ret
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
pop
decb
or
xchg
lods
cmp
scas
mov
negl
xchg
test
xor
lret
sti
adc
xor
mov
test
aam
dec
xchg
daa
lock
jnp
lret
add
fs
sub
mov
add
in
subb
aas
test
inc
iret
std
mov
sbb
mov
mov
cltd
mov
inc
pop
ret
stos
xchg
mov
into
mov
movsb
fs
dec
ret
(bad)
mov
mov
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
roll
movl
sbb
fcmovnbe
out
mov
mov
mov
xchg
cwtl
repnz
popf
enter
mov
push
in
sbbb
mov
jge
add
jb
nop

and
int3
rcl
clc
shr
in
leave
scas
inc
push
and
test
sti
rcrb
loop
xor
fisttps
lret
jae
mov
jno
testb
clc
repnz
pop
inc
sarl
testl
lret
rcll
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
stos
subl
or
leave
jmp
or
test
dec
adc
push
test
mov
mov
ljmp
mov
shl
andl
jae
out
dec
std
mov
fdivp
mov
movsl
mov
clc
loop
add
inc
inc
int
mov
push
sub
jbe
mov
mov
mov
mov
subl
mov
mov
in
mov
xchg
cmpl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
xor
cld
fstp
inc
iret
inc
cmp
sbb
xchg
sub
or
repz
xchg
in
adcb
push
and
ja
fabs
or
test
aas
(bad)
enter
mov
sub
addr16
lods
inc
xchg
mov
adc
clc
jmp
cmc
std
movd
mov
cltd
std
add
cmpsl
ret
mov
xor
aam
movsb
fistl
in
mov
stc
(bad)
ja
add
fs
xor
mov
add
xor
pop
add
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
icebp
mov
xor
int3
mov
sbb
pop
lcall
jb,pn
in
sub
push
cmpsb
adc
push
(bad)

(bad)
pop
xor
loop
xor
add
sub
sbb
push
aas
loop
jp
xchg
into
xor
stc
cltd
stc
xlat
cmp
sub
imul
sahf
or
push
js
xchg
arpl
into
outsl
ror
lds
jbe
push
xchg
push
orl
mov
aas
mov
xor
lods
sub
xchg
or
mov
cmc
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jge
shr
pushf
mov
movsl
inc
lods
pop
dec
mov
inc
mov
pop
xor
jmp
mov
test
sti
lock
stos
cmp
shll
cmp
hlt
add
and
insb
test
mov
mov
in
lock
xor
mov
push
add
fcoml
and
lcall
mov
fiadds
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
dec
pcmpeqb
mov
scas
hlt
push
or
andb
jb
mov
and
nop

in
movsb
sar
hlt
fs
lret
filds
fcompl
mov
fnstsw
dec
push
mov
add
nop

dec
(bad)
nop

into
cmpsb
push
shlb
repz
roll
clc
mov
lock
arpl
cmp
andb
in
repz
es
pop
or
rcrb
xor
adc
xor
movsb
iret
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
ljmp
sub
dec
mov
(bad)
mov
or
out
mov
or
cmpsl
imul
fcompl
pop
filds
mov
imul
push
jle
outsl
add
or
test
call
lods
push
lods
arpl
xor
(bad)
shlb
in
sbb
jno
adc
repz
inc
sub
mov
add
mov
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
clc
jne
mov
daa
frstor
push
testb
fnstcw
xchg
test
cwtl
mov
nop

pop
xchg
add
leave
mov
pop
mov
mov
push
push
mov
sbb
sub
cmp
xchg
insb
loopne
sub
jno
test
mov
lea
mov
scas
les
test
mov
push
mov
(bad)
lret
enter
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
sbb
ss
mov
sbb
call
in
adcb
jecxz
push
and
fcoml
repz
stos
addr16
nop

cmp
stos
lods
addr16
sub
lea
(bad)
push
inc
fwait

xor
xor
jecxz
dec
out
or
lock
arpl
test
xor
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
addb
sbb
and
les
roll
mov
dec
inc
and
lods
out
rorl
pop
mov
in
mov
xor
mov
enter
and
or
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
outsb
into
pop
out
or
cmpsb
in
add
or
in
mov
lea
mov
inc
ss
xor
adc
jecxz
mov
mov
int3
flds
je
lock
dec
ja
aaa
or
dec
jmp
(bad)
shl
xor
push
sub
mov
test
pusha
dec
repz
(bad)
shlb
pop
das
mov
sbb
cltd
cmp
mov
mov
repz
ss
mov
inc
in
inc
fldl
mov
lahf
int
jnp
mov
scas
pop
in
callw
adc
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
adc
pop
sbbl
cmc
(bad)
in
mov
adcl
scas
jl
sbb
sub
dec
fwait

add
orb
test
andb
mov
test
loopne
bound
iret
inc
(bad)
pop
cld
fstpl
xor
mov
mov
cmp
mov
dec
jp
xchg
inc
mov
push
mov
lds
movsl
push
add
dec
repnz
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
lds
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
push
call
push
push
push
mov
push
call
push
call
mov
push
call
add
push
mov
push
call
mov
mov
push
mov
push
call
add
test
jne
xor
jmp
push
push
push
lea
push
call
test
je
lea
push
call
lea
push
call
jmp
mov
mov
pop
ret
int3
jmp
jmp
int3
int3
int3
int3
int3
int3
pop
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
iret
fdivr
nop

mov
sahf
jge
jbe
mov
ljmp
pop
xchg
outsl
mov
nop

test
mov
insl
popa
or
or
adc
fs
sub
sub
stc
lahf
in
enter
fwait

mov
mov
add
insl
sub
insl
sbb
or
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
lahf
in
scas
insl
cmp
repnz
and
shll
roll
in
stos
inc
mov
jle
inc
xor
test
inc
add
jecxz
rorb
stos
lock
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
test
or
std
sbb
cmp
xchg
lahf
inc
pop
lds
movsb
jo
or
sub
les
pop
mov
fimuls
jmp
cs
ljmp
jns
stos
or
pop
mov
fadd
repz
nop

sub
into
ret
mov
adcb
or
and
(bad)

inc
or
outsl
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sbb
inc
sub
mov
stos
dec
xchg
cli
jge
movsl
(bad)

loopne
shrb
dec
mov
cli
cmp
lods
pop
in
arpl
shr
pop
outsb
or
inc
mov
je
xchg
out
in
or
aas
rolb
xchg
mov
pop
call
xchg
leave
aad
sub
mov
les
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
rolb
cmp
pop
in
adc
inc
subb
mov
inc
pop
mov
(bad)
lret
addr16
dec
shl
mov
test
xorb
xlat
enter
xchg
cmp
dec
xor
int3
mov
sbb
leave
mov
out
and
add
push
mov
push
leave
shlb
loop
mov
dec
test
jnp
mov
jb
mov
dec
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
movsb
(bad)
mov
nop

sub
jbe
sub
pop
imul
(bad)
dec
jmp
xor
push
jp
cmp
sbb
adc
xlat
mov
or
mov
add
lds
ds
lea
pop
jl
sbb
test
xchg
dec
in
fs
in
xor
inc
stos
flds
jnp
push
subl
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sbb
fimull
push
push
incl
dec
mov
add
xchg
orl
test
or
push
fidivs
cwtl
cmp
pop
sahf
cli
dec
mov
push
jo
lea
sub
jne
cmp
mov
pop
sub
xchg
mov
or
sub
(bad)
adc
sub
or
jmp
mov
add
fsubl
cmpsl
inc
sub
cmpsl
mov
push
jbe
lea
cmpsb
shrl
add
lea
aam
ficoms
mov
and
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
push
jae
insl
adc
or
mov
push
push
fnstenv
hlt
div
mov
icebp
lds
inc
pop
and
cltd
je
std
stos
stos
lea
cmp
cmp
xchg
lea
cmp
dec
int
xchg
les
pop
jg
cmpsl
jnp
adc
aas
mov
mov
(bad)

inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
sysret
in
insl
dec
adc
add
xor
pop
mov
out
sub
movsb
fcmovnb
mov
insb
mov
dec
stos
push
mov
or
pop
fnstsw
xor
(bad)
hlt
xchg
cltd
fdivp
jno
pop
out
xor
cmp
and
dec
cmp
xchg
cmpsb
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
add
scas
xchg
lds
mov
std
iret
repnz
(bad)
xchg
cmp
test
pop
ljmp
insb
dec
dec
xor
jbe
ror
mov
ror
adc
loopne
mov
aam
andb
test
enter
push
sti
(bad)
or
xor
mov
rorb
scas
xor
outsl
cmpsl
(bad)
(bad)
mov
sub
mov
xor
and
jg
dec
nop

mov
adcb
xor
shll
inc
jne
je
pop
enter
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cld
or
aas
(bad)
sarb
push
jp
fwait

int
das
ret
mov
jnp
adc
push
inc
idiv
xchg
cmp
rol
addr16
icebp
jbe
inc
shr
xchg
push
cmp
or
icebp
test
mov
incb
jbe
rcrb
icebp
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
lcall
icebp
insb
pop
stos
jmp
fstpl
rcll
(bad)
or
test
cmc
mov
test
les
sbb
cmp
jle
imul
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
jle
lcall
aam
jg
clc
aas
mov
pop
aam
or
loop
popf
divb
mov
ds
jbe
imul
outsb
inc
insl
lods
jne
cmp
andl
add
and
popf
pop
or
fisubs
cmp
ret
mov
pushf
addl
(bad)
mov
testb
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
aam
aad
xchg
xor
jp
mov
pop
pop
outsb
or
add
and
inc
loope
pusha
push
push
jecxz
lret
rolb
ja
fisubs
lret
cwtl
(bad)
idivl
adc
mov
les
fdivs
loopne
mov
nop

out
mov
mov
lret
pop
adc
mov
xchg
jge
push
adc
cmp
adc
add
sbb
push
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
sti
les
rep
sarl
cwtl
pusha
test
lret
js
adc
sbb
mov
in
(bad)
cli
jl
rcl
jbe
cmp
jecxz
xor
(bad)
jmp
outsb
or
inc
les
mov
fsubrp
mov
pop
in
test
lret
mov
aas
mov
enter
je
iret
into
sbb
rcr
scas
stc
mov
pusha
jg
jmp
mov
xchg
cmc
iret
add
imul
mov
icebp
ss
sbb
repnz
int
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pop
lahf
jns
jg
stos
loop
cs
int
add
roll
scas
and
pusha
sti
cmp
stos
dec
fs
xchg
stos
mov
lods
(bad)
mov
jae
test
lahf
adc
aam
imul
lds
in
out
(bad)
das
scas
xchg
xchg
js
jp
(bad)
lds
inc
cmc
sahf
inc
dec
jns
(bad)
mov
pop
mov
cs
dec
mov
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
or
outsl
xchg
jbe
add
divl
mov
sbb
les
int
sub
add
push
xchg
pop
push
push
xchg
pop
test
js
jbe
cwtl
outsb
adcl
inc
(bad)
int
pop
mov
jecxz
push
dec
jle
icebp
xor
lds
xor
cli
sbb
dec
push
dec
aad
dec
psrld
mov
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
sub
mov
movsb
push
js
push
inc
cld
pop
lcall
incl
sbb
push
add
mov
push
sbb
sbb
jb
movsl
insl
push
movsl
enter
add
sub
sub
fistl
in
xor
pop
insl
imul
sti
mov
adc
pop
imulb
imul
cmp
sbbl
mov
and
push
mov
test
inc
cmp
xchg
int
or
into
je
inc
mov
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pusha
fnstsw
cmpl
or
nop

hlt
mov
test
mov
shrb
(bad)
adc
pop
ja
xor
insl
xor
shrl
movsl
jns
lods
outsb
xchg
insl
rolb
int3
mov
(bad)
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
pop
mov
out
fimull
(bad)
rolb
addl
cltd
arpl
xchg
ja
shlb
xchg
in
push
sbb
mov
sbb
(bad)
mov
ficoms
mov
rcl
jl
inc
stos
(bad)
lret
(bad)
iret
mov
or
insl
or
inc
test
orl
pop
in
cmc
push
out
pop
(bad)
mov
pop
mov
mov
mov
push
cld
and
sub
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
out
jge
or
and
pop
mov
cmp
push
add
in
iret
and
loop
out
test
shrb
loop
xchg
pop
inc
pop
shl
imul
push
cld
cs
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
inc
fimuls
adc
int3
pop
cmp
in
je
js
jns
in
iret
shrl
leave
addl
(bad)
mov
add
idiv
lds
arpl
call
cltd
sbb
jge
in
lea
mov
ret
and
test
mov
repz
or
test
dec
mov
pop
xor
sti
out
or
in
sbb
fidivrl
sahf
sub
or
adc
xchg
lahf
cwtl
stos
cli
out
adcl
(bad)
pause
sub
adc
inc
cmpb
cli
inc
xchg
cltd
and
jnp
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
inc
(bad)
pop
icebp
cld
cli
js
mov
or
inc
push
cmpsl
cli
fidivrs
pop
add
xchg
popf
xor
or
inc
popf
ret
cmp
arpl
mov
pop
pop
mov
pop
xchg
xbegin
fmulp
mov
cli
loope
popf
mov
subb
sti
loope
cli
push
inc
mov
inc
push
enter
and
mov
mov
subl
in
adc
and
push
sub
mov
pop
add
or
outsb
push
mov
cmc
push
cltd
or
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
sub
sbb
cmp
fwait

cli
imul
int3
fmuls
leave
pop
(bad)
push
sbb
(bad)
dec
pop
test
mov
mov
test
and
jno
(bad)
out
jecxz
int
add
shrb
xchg
pop
sub
xchg
lods
sbb
ds
push
pop
cld
adc
push
pop
or
(bad)
(bad)
in
mov
stos
ljmp
ror
push
mov
inc
xor
xchg
inc
clc
pop
sbbb
mov
jns
mov
inc
jp
adc
push
insb
fistpll
lret
int
sbb
adc
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xorl
imul
xor
xchg
dec
dec
int
mov
push
lret
scas
call
jbe
int3
movsl
int
add
jp
je
adc
nop

int
pop
jno
loopne
pop
xchg
lret
pop
cmp
int
test
xchg
sbb
scas
fdivrl
imul
cwtl
mov
test
mov
(bad)
xor
ret
xor
outsb
pop
mov
in
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
xor
movsb
outsl
dec
call
in
lcall
or
fsubrp
sub
cmovs
cmovae
ljmp
flds
test
int
test
mov
adc
pushf
cli
pop
mov
movsw
xlat
lret
xchg
sub
and
dec
jbe
fwait

sub
sbb
repnz
xchg
mov
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
xchg
movsb
loop
cs
dec
lret
js
aaa
ja
xchg
les
je
add
push
fiadds
or
fld
or
fsubrs
xor
lcall
push
pushf
xor
in
xor
push
mov
fildll
mov
jnp
fsubrs
dec
sub
test
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
andb
shrl
(bad)
or
lea
pop
xchg
subb
out
sbb
test
dec
sub
hlt
mov
jae
add
leave
mov
cmpsb
jno
std
xchg
loopne
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jp
shrb
sbb
int
jg
pushf
push
sub
fsubl
test
repnz
imull
cmp
movsl
mov
lds
mov
sbb
fwait

pop
fisttpl
xor
push
xor
popf
je
xchg
fnstcw
mov
inc
xor
mov
cwtl
orl
push
adc
jae
rol
cmpsl
sbb
mov
fsub
lds
(bad)
div
outsl
mov
inc
sti
xchg
cwtl
stc
fcoms
jbe
fidivl
xor
xchg
icebp
stos
(bad)
mov
sub
pop
int3
sbb
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
scas
sub
lds
fwait

push
cwtl
pop
lea
mov
jns
xchg
lea
xor
popa
shlb
inc
adcl
pop
test
add
mov
adc
and
adc
mov
inc
sub
dec
outsl
xchg
shl
lea
icebp
mov
jl
mov
repnz
adc
adc
(bad)
insb
andl
movsl
cmp
insl
jae
sbb
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
js
dec
insb
sub
into
cwtl
sbb
(bad)
aaa
xor
stc
repnz
pop
loope
mov
jle
insl
sbb
mov
negl
mov
cmc
mov
pop
xchg
or
daa
mov
movsl
add
add
push
lahf
aad
int3
fucom
and
imul
sbbl
cmp
out
pop
add
rorb
fwait

mov
pop
icebp
int3
jns
je
xlat
test
sbb
or
xchg
sarb
dec
lret
xor
mov
daa
ds
fldcw
dec
loopne
sub
dec
add
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
dec
dec
leave
and
mov
mov
cmp
sub
loope
mov
jo
push
rolb
adc
(bad)
hlt
mov
adc
sbb
shrl
fnstsw
mov
fmulp
cltd
sbb
fnsave
cmp
adc
push
into
jmp
call
int
mov
mov
and
fldl
mov
inc
or
(bad)
(bad)
rolb
data16
xchg
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
adc
out
jae
fucomp
inc
fs
mov
mov
fnsave
sbb
aad
test
push
std
jecxz
je
push
(bad)
jp
adc
jb
pop
mov
add
in
outsb
jb
lcall
mov
mov
mov
sbb
gs
and
test
jecxz
(bad)
jno
scas
test
adcl
fucom
call
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sub
sahf
enter
out
daa
testl
jmp
(bad)
mov
inc
int
es
rcrl
fnstsw
sarl
xchg
mov
outsl
push
xchg
mov
clc
cwtl
int
mov
scas
jbe
adc
int3
fnstcw
testb
fld
mov
mov
daa
fnsave
jae
xlat
cmp
into
sbb
mov
jne
int3
out
add
ss
inc
pop
xor
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
sbb
xchg
add
mov
mov
into
xorl
push
fld
or
mov
lret
call
jno
stos
mov
xorb
mov
jge
pop
mov
adc
xchg
stos
cs
fstpt
lds
pop
iret
imul
inc
repnz
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
pop
imul
mov
bound
pop
addr16
lds
mov
and
outsl
test
lcall
push
lret
add
jecxz
mov
jp
dec
jle
add
cmp
scas
ljmpw
adc
cmp
adc
stos
push
sbb
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
fiaddl
in
test
cmp
enter
inc
or
sbbl
mov
add
dec
loope
les
lret
sub
movsl
sbb
mov
xchg
mov
mov
aam
xchg
xchg
mov
ss
pop
sub
pop
jns
lock
mov
pop
xor
jno
push
stos
dec
jne
pop
aam
xchg
call
sub
mov
or
ret
push
add
stos
cmpsl
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
aam
mov
mov
jl
lock
xor
xorl
scas
and
ja
pushf
dec
mov
and
pop
xor
je
mov
push
cmp
cld
mov
adc
xor
xchg
clc
pop
aad
xchg
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
imul
mov
test
or
aam
aas
cs
mov
or
outsb
add
xor
push
mov
xchg
mov
sarl
leave
int
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
push
scas
mull
or
in
xor
jae
jae
sbb
loopne
mov
popa
mov
xchg
idivl
(bad)
out
loopne
jmp
aam
test
stos
cmp
mov
pop
cld
xchg
lds
stc
test
stc
pusha
test
idivl
(bad)
icebp
xor
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
lock
aas
scas
shll
sbb
lods
cmc
outsb
int3
mov
mov
test
mov
adc
mov
adc
icebp
push
cld
xor
cmpsl
call
out
lods
loope
xchg
iret
and
cmp
jge
add
sub
popa
clc
nop

pop
add
pop
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
pop
mov
imul
sbb
test
sbb
and
push
cli
pop
stos
xchg
scas
pop
frndint
push
or
jb
data16
pop
mov
pop
arpl
dec
das
mov
inc
inc
push
cwtl
in
in
mov
jp
or
push
ds
sub
add
xchg
std
fistl
push
inc
rorl
push
adc
pop
lds
or
push
sti
insb
push
into
loopne
std
lds
mov
add
xchg
adc
stc
xlat
push
ficompl
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
and
jmp
jp
movsb
cmp
clc
push
insl
dec
pop
mov
xor
(bad)
(bad)
mov
and
cs
mov
ficoml
orl
pop
insl
shrl
adc
cmp
ret
mov
xchg
adc
adc
xchg
sbb
aas
insl
cmp
cmp
ret
xchg
push
push
dec
shrb
pop
and
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
arpl
or
stos
xchg
cmp
iret
insl
call
sbb
sub
cmp
xchg
cwtl
popa
push
(bad)
jmp
jle
cmp
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
push
movsb
nop

xor
cwtl
pusha
cmpsl
fnstsw
push
sub
out
xchg
sbb
pusha
out
and
mov
xchg
dec
cmp
and
imul
mov
push
push
adc
jb
add
jbe
mov
popf
in
cmpsl
xor
incb
dec
rcr
loopne
push
in
or
mov
push
pop
mov
out
and
in
push
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
stos
pop
nop

ret
rcll
push
mov
cmp
loope
(bad)
ret
mov
orb
shlb
lea
sbb
test
push
(bad)
in
pop
cmp
enter
loopne
pop
js
ret
or
enter
lret
dec
push
int3
add
mov
xchg
jle
xchg
add
(bad)
into
pop
add
xchg
and
inc
je
notb
mov
test
scas
outsb
pop
in
mov
sub
sbb
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
(bad)
dec
xchg
lcall
mov
sarb
aam
mov
mov
sti
cmp
push
cld
mov
lea
sub
mov
xor
and
or
movsl
inc
or
fs
cli
iret
aas
cmpb
rorl
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
xchg
hlt
cmpsb
pop
inc
pushl
xor
or
cmc
lret
bound
(bad)
call
iret
insl
push
push
pop
out
test
jge
push
pusha
jg
cmpsb
out
sbb
cmp
das
lea
addb
cmp
pop
mov
test
nop

in
in
mov
xor
pop
lret
mov
pusha
or
mov
xchg
fst
xor
fwait

pop
dec
(bad)
and
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
and
in
fnstsw
roll
insl
stc
mov
adc
test
mov
or
fucom
mov
fadds
lock
ffree
mov
in
mov
out
test
fsubr
inc
imul
(bad)
rcll
fst
pop
inc
adc
mov
inc
in
sti
stos
jecxz
movsl
cmp
out
mov
dec
cli
xor
js
mov
cmp
mov
cmpb
or
or
mov
cmpl
sbb
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jge
mov
rcrl
pop
mov
mov
jo
arpl
cmpsb
mov
xchg
aam
pop
xchg
inc
ja
cmp
popf
or
test
leave
fucomip
mov
cmp
xor
mov
nop

jns
jp
lods
fsubrp
enter
xor
cmp
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
divl
or
scas
stos
sar
in
xor
test
xlat
mov
pop
xor
mov
fnstenv
cmc
out
mov
sub
test
jmp
push
out
jle
push
xchg
jns
insb
in
loop
sahf
orb
cmpl
jle
sbb
sbb
mov
xchg
cmpsl
repnz
lcall
push
xor
cmp
pop
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
imulb
jmp
(bad)
sti
lds
lret
loope
mov
lods
fbstp
icebp
rorb
push
add
imul
and
popa
push
scas
icebp
cmpsl
out
daa
sarb
sub
mov
mov
lcall
jns
das
ret
popf
loop
rorl
sub
jp
and
xchg
jns
xor
sub
out
adc
push
popa
mov
repnz
dec
mov
shrl
stos
add
pusha
mov
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
arpl
pop
je
scas
pusha
mov
dec
and
dec
mov
pusha
mov
jge
sub
adc
sbb
in
or
mov
incb
dec
test
xor
xchg
pop
inc
or
mov
xor
dec
adc
mov
shr
or
std
lods
push
sbb
jmp
xchg
int3
addb
mov
inc
ljmp
push
cwtl
cmpsb
int
ds
cmp
adc
sahf
imul
ds
mov
pop
sub
nop

sub
add
insl
inc
xchg
repz
(bad)
lds
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
outsl
and
movsb
jecxz
lea
aas
xchg
xchg
mov
and
cs
cs
mov
(bad)
mov
fwait

inc
push
lods
js
add
rol
jb
scas
push
stc
mov
sub
in
or
std
jge
fiadds
sbb
mov
add
into
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xor
inc
and
sbb
and
xlat
mov
pop
mov
movsb
popf
sbb
ljmp
in
xor
cltd
push
test
cmc
adc
lods
pop
lods
add
mov
sar
test
sbb
xchg
mov
movsl
int
ds
cmpsl
fldenv
inc
out
pop
and
push
push
jns
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
pop
sub
fucom
pushf
in
or
call
ss
mov
fstl
inc
cmp
bound
cmp
fldl
push
movsl
mov
pop
push
(bad)
pop
push
scas
mov
test
int
pop
adcb
imul
inc
mov
fildl
xor
and
push
push
adc
push
orl
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
rclb
cwtl
(bad)
fistl
and
dec
xchg
es
nop

pop
xor
repz
inc
(bad)
jbe
cmp
xor
xor
sub
stc
mov
lret
enter
cmpsb
in
clc
xchg
in
lods
sahf
mov
xor
lock
iret
mov
adc
mov
xchg
pop
shlb
sub
pusha
or
int
mov
scas
ljmp
mov
lock
imul
add
adcl
ret
mov
fidivs
(bad)
cwtl
(bad)
out
adc
test
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
push
xchg
pop
sar
icebp
nopl
lret
mov
mov
icebp
push
mov
xor
testb
icebp
push
mov
xorb
addb
icebp
aas
jecxz
jb
mov
fists
fcompl
addl
dec
movsb
mov
cmpsl
mov
fnstsw
or
xchg
xchg
(bad)
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jecxz
pop
in
icebp
mov
push
dec
aam
pop
jno
ror
dec
sub
gs
in
mov
arpl
push
sbb
ret
jne
jmp
mov
jne
jo
xchg
add
(bad)
loop,pn
xor
inc
(bad)
pop
lds
fwait

mov
adc
cmp
cwtl
sti
mov
mov
push
loop
sub
jne
cmpsl
adc
int3
adc
jge
xchg
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
push
in
push
dec
and
sbb
add
dec
sahf
or
push
mov
dec
cli
dec
sbb
sub
cwtl
adc
cmp
mov
jo
orb
push
fbstp
xor
pop
insl
lock
sbb
lcall
mov
add
fcmovnu
lahf
push
sub
nop

leave
mov
lods
insl
nop

int
cmc
mov
add
or
int3
xchg
out
xchg
xor
scas
mov
stc
mov
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
repz
inc
cmp
nop

and
fwait

sbb
mov
(bad)
adc
cmpsb
aad
ret
or
push
pop
cld
call
inc
mov
pop
or
iret
loopne
adcb
sub
pop
or
add
(bad)

mov
pusha
ja
sub
int3
ret
(bad)
push
push
ret
xchg
xchg
out
adc
rcll
mov
pop
lds
jne
add
mov
scas
pop
or
pop
dec
out
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
push
(bad)

addb
inc
jl
xor
pop
out
imul
stos
outsl
or
xchg
jg
pushf
rclb
dec
xchg
xor
decl
jo
arpl
(bad)
cmp
mov
cmp
or
push
aaa
lods
iret
pop
and
xchg
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
cmp
jae
enter
(bad)
int3
xorb
negl
cwtl
repz
mov
push
mov
jg
cld
xorl
xchg
jmp
in
adc
outsb
mov
jmp
or
mov
in
dec
mov
mov
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
jle
loope
cltd
pusha
push
xorb
insb
les
pusha
shll
cld
or
ljmp
popf
sbbl
aad
mov
dec
xor
xor
xor
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
data16
outsb
not
mov
jmp
cmpl
mov
adc
fsubs
xor
xor
into
mov
pop
add
pusha
inc
je
repnz
pop
gs
pusha
outsl
sbb
push
test
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
pusha
xor
lds
jnp
lock
rcl
pop
int
jecxz
fwait

adc
cwtl
sbbb
fldenv
mov
cmp
insb
xchg
or
mov
aam
and
xchg
mov
popa
jb
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
scas
sbbb
test
je
in
ret
jp
mov
int3
push
in
xchg
xchg
test
fwait

cmp
lock
inc
aam
(bad)
imul
jle
inc
mov
imul
mov
aas
jo
or
popf
push
(bad)
insb
adc
fstl
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
outsb
movsb
call
in
or
loopne
xchg
mov
pop
cmp
stos
cli
sub
xchg
cmpsb
mov
adc
cli
inc
cmpl
adc
jb
fnstcw
cli
lods
push
cmp
lds
andl
xor
cli
cmp
insl
fwait

xchg
or
mov
fmuls
cli
or
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
lcall
pop
sbb
insb
xchg
xor
mov
and
data16
or
or
inc
lock
mov
test
movsb
mov
int
mov
ficoms
lret
inc
rorb
daa
mov
adc
test
adc
pop
and
rcll
(bad)
loop
int
fcoml
mov
cmp
stos
mov
mov
lcall
mov
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xor
in
mov
ljmp
mov
or
out
divl
mov
ds
lahf
mov
repnz
pop
cld
(bad)
incl
mov
dec
sbb
or
aam
in
push
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
lods
cmpl
mov
fstpl
lea
daa
loop
pushf
lahf
xor
fmul
cmpsb
aaa
fdiv
lea
jae
xchg
push
sbbb
push
pop
lret
lods
sbb
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
cmp
dec
out
idivb
test
popl
test
mov
test
adcb
or
jbe
(bad)
cmp
mov
add
(bad)
imul
and
int
xor
xchg
dec
jns
adc
pop
icebp
xor
scas
fiadds
popa
adc
and
(bad)
cmp
inc
push
mov
lcall
inc
lods
mov
mov
inc
fidivl
fisttpll
pop
dec
into
push
test
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
imul
call
mov
sti
outsl
xchg
loope
ror
fildl
imul
repz
je
rcll
popf
cli
or
(bad)
stos
hlt
jp
xchg
jp
push
push
cwtl
inc
and
(bad)
cltd
fs
xchg
sub
(bad)

add
xor
(bad)

pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
sbb
(bad)
cmp
test
sbb
adc
cli
jbe
lds
jp
jecxz
sahf
popf
(bad)
xchg
mov
push
mov
(bad)

xchg
(bad)
es
fs
push
lds
fwait

push
hlt
mov
pop
lds
mov
in
xchg
stos
inc
pop
dec
add
mov
hlt
pop
mov
pop
cmpsl
push
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
jle
int3
push
in
aam
fnstcw
add
mov
fdivp
cmp
cmp
mov
push
ljmp
enter
addr16
mov
cmp
(bad)
sarl
inc
std
rorb
insl
cmp
jle
rcrb
jmp
(bad)
gs
or
pop
add
outsb
addb
jecxz
filds
fbld
lcall
sbb
lcall
ja
mov
pushf
jae
test
gs
lcall
push
(bad)
stc
cmp
cmp
adc
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
in
xor
adc
iret
test
mov
xor
test
negl
roll
xor
test
inc
pusha
mov
int3
test
imul
fidivrs
push
jbe
out
mov
stos
cmpsl
mul
lret
(bad)
mov
inc
inc
jbe
xor
test
and
dec
mov
mulb
mov
jae
shlb
mov
xor
les
repnz
fisubrs
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
lret
ffreep
xor
lods
test
nop

into
xchg
testl
out
lods
xchg
push
movsb
mov
pushf
lcall
cmp
out
or
or
(bad)
push
rclb
sbb
icebp
add
cwtl
in
mov
mov
sbb
ret
arpl
lock
adc
cmc
lcall
fisubrs
out
icebp
mov
and
maskmovq
mull
icebp
(bad)
fmull
movsl
pop
pop
pushf
inc
sub
mov
aad
ds
stos
(bad)
pop
jmp
scas
or
and
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
sub
push
cmpsl
mov
test
push
inc
add
push
mov
fwait

cmp
xchg
cmpsl
jne
pslld
jg
cmc
insb
lahf
inc
pop
test
cmpsl
mov
ds
push
int
push
jle
mov
push
lods
dec
jae
cmpl
xchg
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
daa
mov
xor
jno
lea
lcall
mov
pusha
faddl
mov
insb
push
addl
mov
popa
lds
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
ss
pushf
sub
fisttpl
mov
pusha
lret
xchg
inc
out
ret
bound
xchg
pusha
mov
adc
pop
jge
in
ja
(bad)
cwtl
xchg
push
mov
fs
in
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
nop

xor
mov
and
cmp
pusha
mov
or
pop
adc
in
xchg
mov
cmp
push
cld
pmulhuw
in
adc
mov
pop
xchg
daa
adc
popa
sbb
mov
mov
ljmp
aas
inc
lret
push
add
clc
jbe
dec
xor
mov
jl
movsb
cwtl
mov
xor
cmp
add
mov
and
xchg
cs
or
jae
lock
in
repnz
or
je
mov
jmp
adc
and
inc
pop
leave
mov
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
in
outsb
push
dec
popf
mov
sbb
repnz
lods
test
dec
xor
dec
loop
iret
jmp
repz
xor
pop
test
pushf
cli
inc
xchg
scas
idivl
mov
mov
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
iret
clc
js
push
dec
sbb
shrl
lds
dec
xchg
nop

aaa
xor
mov
mov
stos
pop
inc
mov
rclb
out
mov
iret
sub
fs
mov
mov
xchg
fmull
xchg
xor
sahf
xor
xor
lret
mov
cmpsb
out
stos
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
gs
test
adc
divb
mov
imulb
cli
dec
lods
insl
dec
or
fwait

hlt
fs
sar
loop
adc
ffree
jns
jp
push
mov
movsl
int
dec
cmpsl
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
push
cs
sbb
mov
sti
stos
cmp
test
scas
enter
push
or
sbb
outsb
xchg
mov
mov
dec
cmp
cmp
in
adc
pop
popf
sbb
shrb
cmp
int
lds
add
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
outsb
dec
pop
in
sub
sarb
mov
xchg
cmp
or
mov
xchg
scas
pop
out
(bad)
icebp
int
imul
jnp
xchg
in
lods
add
sub
notb
jno
mov
lods
push
cltd
sbb
test
push
es
inc
sub
adc
adcb
sbbb
rorb
popf
pop
mov
insb
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
add
jecxz
psrlw
lods
popf
repz
int3
inc
mov
subl
daa
shl
adc
cld
sbb
jmp
jns
in
mov
shll
aas
lea
ret
add
adc
stc
fisttpll
imul
inc
imul
inc
push
mov
dec
xor
xor
adc
lea
lret
push
iret
adc
and
dec
mov
and
(bad)
in
mov
stc
push
jle
mov
pushf
out
cwtl
clc
mov
add
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pop
fidivs
fadds
adc
fwait

pop
adc
aas
sub
adc
jge
movsl
xor
stc
xor
inc
iret
fisubs
into
mov
pop
aam
add
mov
cld
mov
mov
frstor
adc
and
icebp
jnp
paddusw
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jl
pop
or
rcll
mov
adc
cmp
es
in
stc
add
xchg
jg
mov
popf
fstpl
lods
or
or
frstor
repz
addl
and
js
imul
lea
paddusw
call
subb
hlt
inc
jae
sub
popf
repz
adc
sbb
in
mov
(bad)
lds
test
jmp
lret
daa
lods
dec
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
jne
iret
in
ja
and
fstps
mov
shll
loope
loop
cs
nop

mov
inc
lds
movsb
(bad)
cwtl
mov
popl
push
cltd
lds
mov
pop
dec
mov
cmp
out
inc
aad
lods
xor
mov
add
xlat
lret
iret
sbb
xchg
fwait

into
cwtl
add
stos
lds
push
ds
dec
dec
dec
adc
lds
lahf
stos
out
sbbb
sbb
cmpsl
daa
fcmovnb
outsl
pop
cmpsb
or
lds
xchg
aad
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
or
test
push
mov
xlat
cmpsb
sti
pop
insl
adc
(bad)
fwait

lds
pop
daa
xor
(bad)
flds
cmp
movsb
shr
shll
xlat
test
mov
pop
mov
sahf
xchg
shll
cmp
mov
and
imul
sub
test
add
test
dec
int3
xor
xchg
fisttpll
test
jge
je
push
aam
orb
mov
enter
push
xchg
mov
xchg
aam
adc
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
into
cmp
sti
(bad)
aam
lea
push
inc
les
rcrl
and
mov
test
fsubs
sahf
xchg
mov
lahf
in
aam
ss
ret
add
adc
push
xchg
sbb
clc
loop
and
dec
xor
cmc
push
aam
int
cmp
rcll
loope
jae
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
lret
mov
mov
xchg
add
sbb
and
push
mov
add
xor
xchg
data16
sbb
adc
push
xchg
jbe
inc
pop
sbb
sub
xchg
test
call
push
xchg
in
icebp
cwtl
jecxz
xor
outsb
pop
mov
jne
shl
sub
xor
dec
lcall
sarl
adc
and
push
test
or
mov
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
loop
cmc
push
xchg
sub
pop
clc
mov
xor
icebp
cmp
xor
xchg
pop
jmp
movsl
ret
jns
jmp
xchg
adcb
andl
fsubl
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cmp
ret
stos
xchg
vpsrlw
shlb
xchg
jp
orl
lcall
(bad)
jae
cmp
sbb
jne
rclb
xchg
repz
sbb
leave
les
outsb
push
stos
je
inc
lods
mov
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
and
lahf
xor
sbbl
icebp
outsb
nop

mov
add
das
dec
push
aaa
push
push
sbb
int3
(bad)
addr16
in
dec
dec
jmp
fidivl
gs
xchg
inc
out
inc
ret
and
pop
pop
dec
lock
sbb
adcl
mov
popf
push
fisubrs
xlat
jmp
sbb
into
mov
xor
test
dec
mov
bound
stos
cmp
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
addl
inc
inc
addl
mov
pop
fstl
fildll
xchg
inc
out
aaa
dec
add
dec
outsl
loop
xchg
mov
push
movsl
insb
xor
jns
adcl
(bad)
div
fwait

sbb
lea
cmp
icebp
mov
inc
test
mov
or
addl
sub
fdivrs
clc
shll
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
ja
xchg
stos
jb
mov
addb
mov
mov
fwait

mov
xchg
(bad)
mov
loop
mov
lcall
aas
popa
shrl
fs
test
aam
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
pushf
adc
mov
ds
sub
leave
sub
shl
repnz
pop
mov
pushf
sub
roll
ret
in
cmc
push
push
cmc
fildl
adc
jge
mov
pop
nop

adc
int
adcb
mov
mov
mov
cld
and
push
fistpl
das
fwait

jno
mov
xor
adc
subl
clc
movsb
push
xchg
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
cmpsb
aas
pop
xchg
adc
cmpsl
xchg
cmp
mov
mov
outsb
sbb
outsl
repz
sbb
adc
dec
orl
pop
jge
mov
ja
jb
xor
dec
fsubp
fnsave
insb
and
cmp
xchg
jnp
dec
xor
fsts
adc
fdivr
loop
cmc
stos
mov
(bad)
push
inc
daa
in
cld
shlb
and
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
inc
xor
lods
mov
or
add
jmp
and
inc
cmp
shlb
arpl
ljmp
push
int
push
fmull
add
clc
test
in
jae
xor
stos
pop
ljmp
fwait

push
fstl
adcl
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
int3
out
and
out
inc
(bad)
cmp
add
jle
cmp
mov
mov
cmpsl
and
andl
push
push
jns
(bad)
adc
xor
xor
(bad)
mov
in
das
and
(bad)
xchg
mov
scas
inc
sub
xchg
mov
(bad)
insl
inc
cmp
loopne
dec
fisttpll
insl
sbb
scas
das
mov
add
sbb
in
mov
sub
popf
xchg
mov
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
jnp
iret
outsl
repz
mov
aad
pop
sub
mov
jp
fucom
ljmp
and
inc
inc
fnstsw
mov
fs
or
sub
mov
cmp
jg
xchg
data16
outsb
add
xchg
inc
lds
scas
dec
gs
clc
mov
mov
jp
stc
outsl
inc
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
xchg
repz
jmp
adc
ja
andl
push
mov
mov
adc
xor
int3
cld
clc
addr16
mov
imul
test
xor
lea
xchg
rcr
jae
test
pop
(bad)

in
ds
mov
ficompl
or
ret
add
add
lahf
lea
jmp
add
add
out
sub
mov
movsb
push
push
inc
adc
lods
mov
int3
cmpl
inc
xchg
mov
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
add
dec
(bad)
sub
lods
push
push
jecxz,pt
test
pop
mov
in
aam
shll
std
lret
mov
cli
mov
test
sar
iret
cmpsb
mov
dec
xchg
aas
and
jmp
cmp
mov
and
lret
out
mov
mov
or
push
inc
adc
jbe
ljmp
test
jl
out
movsb
mov
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
push
aas
icebp
psrlw
sbbb
xchg
idivl
push
mov
jl
jbe
mov
adc
cmpsb
mov
out
and
out
(bad)
cwtl
icebp
jmp
mov
(bad)
stos
int3
mov
push
test
push
or
lcall
pop
cld
cmp
je
ljmp
sar
mov
sub
inc
fucom
daa
and
test
mov
mov
add
xchg
sbb
cwtl
mov
shlb
cmp
cmp
pop
insb
jne
add
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
inc
xor
lahf
flds
pop
lea
and
jno
add
into
loop
add
aas
or
xorb
in
jecxz
clc
pop
pop
sub
sbb
dec
leave
in
negl
adc
test
push
mov
sbb
mov
mov
lcall
add
push
imul
cmpsb
mov
aad
shrl
sbb
sub
stos
cwtl
mov
insl
push
and
mov
leave
mov
ja
iret
loopne
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
fcomps
imul
cmpsb
test
outsl
andl
imul
frstor
jno
jnp
or
loopne
cmpsb
xchg
mov
es
movsl
in
bound
jo
mov
jae
mov
das
xchg
adc
sbb
pop
dec
outsl
adc
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
iret
sub
nop

call
mov
sarb
xor
(bad)
add
lds
pop
ja
mov
iret
aam
jns
xchg
lock
aaa
cmp
pop
adc
jne
out
leave
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
push
in
and
insb
gs
lret
sbb
test
dec
jl
faddl
sbb
stos
cmp
mov
sbbl
repnz
call
adc
xor
outsl
dec
push
sbb
lods
pop
mov
xchg
or
nop

add
xchg
mov
push
xchg
xor
cmp
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
jae
fdivrp
repz
stos
xor
fstpl
les
aas
js
dec
out
pop
mov
or
jno
orps
mov
inc
cmpsb
fldcw
cmpsb
ja
push
clc
cli
int3
mov
or
or
pop
xor
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
adc
fstps
push
enter
jl
mov
ret
sbb
sahf
or
enter
fsub
int3
mov
mov
adc
enter
outsb
and
scas
sti
pop
shlb
out
decl
ret
mov
or
stc
cs
inc
cmp
gs
mov
xchg
adc
ja
mov
(bad)
in
hlt
lock
xchg
sub
daa
jo
icebp
fstps
sbb
mov
xor
(bad)
mov
sub
int
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
sbb
insl
leave
pop
mov
mov
sbb
and
fwait

bound
loope
pop
loop
jp
pop
jne
adc
int3
loop
xchg
enter
inc
pushf
movsl
pop
loopne
sti
mov
ret
xor
jbe
mov
pop
icebp
push
fnstsw
cmpsb
in
lcall
mov
xchg
mov
jno
dec
leave
add
mov
lret
cmpl
inc
repz
aam
add
insb
mov
jp
dec
jmp
int
mov
iret
fbld
int
mov
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmpsl
pop
pop
out
adc
dec
cli
add
loopne
fsubrl
add
and
shlb
ret
dec
mov
icebp
adc
lock
scas
rcrl
bound
dec
sub
hlt
xchg
cwtl
dec
enter
adc
cmpsb
add
stc
and
out
mov
shl
dec
shll
dec
aam
push
dec
inc
mov
arpl
int3
sar
jo
jmp
icebp
push
adc
scas
in
mov
sub
xor
shll
or
stc
mov
xchg
xor
or
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
sbb
les
repz
or
sbb
push
fisttpll
popf
daa
mov
in
add
bound
shll
sbb
xor
stc
out
sub
cwtl
lret
cmp
inc
lret
repnz
fbstp
mov
enter
insb
lcall
enter
inc
mov
sbb
sbb
mov
in
lret
into
and
rolb
ja
scas
popf
push
lods
into
lcall
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cld
and
xchg
xor
adc
std
lock
cmc
adc
and
outsb
jne
add
jmp
(bad)
int
fistl
sti
(bad)
outsl
movsl
aad
sbb
jb
inc
mov
packssdw
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
hlt
test
jg
call
pop
shl
and
sub
push
in
add
sbb
enter
jp
mov
pushf
mov
nop

mov
dec
data16
mov
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sbb
inc
outsb
imul
lods
pop
out
pop
xchg
xchg
ja
xlat
and
push
in
lock
cmp
repz
mov
inc
mov
sbb
pop
push
js
cld
lea
es
pop
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
inc
mov
jae
arpl
push
push
fucomip
bound
out
jb
loopne
or
sahf
scas
popa
pop
dec
ret
xchg
fwait

dec
lahf
add
andb
stos
dec
nop

add
mov
mov
dec
inc
mov
jae
(bad)
inc
pushf
lea
cwtl
leave
cld
adc
(bad)
(bad)
fcomps
mov
xchg
pop
add
imul
xchg
and
clc
addr16
fnstcw
push
insb
fwait

hlt
push
mov
subl
fcmovnu
pusha
mov
std
ficomps
jge
sti
adc
jge
inc
cmp
stc
mov
pop
addr16
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
push
inc
aad
push
movsl
mov
in
or
xchg
andl
ss
xchg
xorl
bound
arpl
aad
adc
jnp
push
xchg
or
dec
mov
iret
(bad)
in
xchg
gs
fnstcw
lret
jp
stos
xchg
mov
in
sub
inc
adc
test
jbe
push
mov
cmpsb
test
scas
cli
sbb
out
adc
cli
and
ret
mov
in
arpl
jle
adcl
loope
sbb
mov
es
fidivs
mov
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
scas
aam
daa
lret
out
outsb
mov
inc
inc
repz
movsl
lret
jne
shrl
or
pop
inc
jns
andl
jp
xor
xchg
mov
dec
jge
ret
test
mov
pop
push
pop
rcrb
out
lock
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
dec
in
pop
(bad)
cmp
addb
movsl
xor
inc
xchg
mov
cmc
test
out
insl
mov
addr16
dec
in
popf
js
ficomps
or
in
insb
outsb
out
in
lods
sbb
adcl
jg
jmp
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
(bad)
andb
int3
je
push
xchg
ljmp
push
frstor
lret
ss
mov
xchg
mov
cld
add
xchg
sahf
and
notb
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
ljmp
xchg
and
movsl
jnp
adc
not
sub
pop
icebp
fstps
ljmp
sbbl
cmpsl
pop
lret
cmp
cmp
mov
push
jb,pt
jbe
andb
adc
jnp
inc
imul
inc
add
push
pop
lods
inc
jge
push
fisttps
xor
movsl
jp
fcom
push
out
xchg
scas
cmpsl
scas
int3
mov
in
push
xor
xor
sbbl
pusha
aaa
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
into
sbb
loopne
in
in
mov
dec
jbe
out
sbb
mov
cwtl
fildll
cmpl
les
les
cld
or
push
add
sahf
pop
cmp
movsl
mov
mov
mov
mov
dec
inc
ret
jg
cmp
std
and
sub
fsubl
xchg
cmpb
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
fxch
clc
in
xchg
sbb
adc
cmp
cltd
repnz
je
inc
movsb
mov
hlt
adcl
push
xor
or
lret
aad
dec
lcall
add
cltd
adc
stc
repnz
add
mov
dec
stos
pop
jecxz
outsb
dec
mov
movsb
sti
aas
popl
stc
push
lahf
mov
loop
adc
push
adc
jg
cltd
cwtl
sub
out
xchg
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
popa
les
push
ja
rorl
stos
rorb
scas
cwtl
lret
nop

into
xchg
(bad)
rolb
push
popf
arpl
jge
mov
imul
or
sub
xchg
push
into
stc
pop
movsb
xchg
fdiv
sub
clc
subb
xchg
xorl
popl
sub
lods
rcll
sbb
push
dec
sbb
xchg
add
mov
das
xorl
cltd
mov
aam
push
push
stc
(bad)
stc
inc
dec
imul
inc
xor
cmpsb
jle
xor
rolb
dec
mov
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
and
ret
and
inc
jne
(bad)
daa
lods
sahf
cmpsb
xchg
outsb
xor
loopne
int
sarl
xchg
xchg
jg
adc
loop
or
mov
cmp
out
mov
loopne
fidivl
loop
in
inc
push
cmp
pop
mov
stos
shl
and
add
nop

push
dec
or
test
mov
orb
shr
cmp
mov
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
add
fmuls
(bad)
dec
into
int3
xchg
mov
int
fucomp
enter
inc
je
orb
stos
lods
cs
mov
dec
fidivs
(bad)
fnstcw
dec
cmp
add
mov
mov
pop
dec
adc
je
outsb
das
mov
push
in
das
orl
imul
mov
scas
mov
ret
gs
xchg
and
pop
daa
mov
mov
lcall
(bad)
inc
sbb
repnz
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
adc
les
push
imul
sbb
(bad)
jne
cmp
cmp
movsl
divb
sbb
(bad)
cmp
or
add
cmp
outsb
ljmp
(bad)
ja
pop
cmp
loop
push
jmp
xor
sub
xlat
cmpsb
jbe
addb
pop
inc
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
pop
and
aad
dec
push
mov
ja
loope
adc
popf
insl
imul
iret
mov
xchg
les
xor
mov
inc
jmp
divb
jae
push
scas
sbb
imul
ljmp
push
mov
dec
mov
ficompl
test
adcl
clc
pop
rcll
(bad)
cmp
std
addr16
ret
or
fisubrs
adcb
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
(bad)
lret
dec
add
cmp
sbb
rorb
ljmp
jbe
push
fs
push
sbb
xchg
lret
insb
je
xchg
sbb
jle
scas
pop
sub
cmpsb
test
roll
(bad)
fwait

add
out
fs
jne
mov
les
jae
jnp
xorl
pushf
jae
mov
dec
xor
cmp
loope
fcmovu
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
push
clc
into
scas
xchg
sbb
push
nop

call
bound
mov
add
stos
lahf
xor
lret
pushf
pushf
and
pop
outsl
imul
movsb
inc
jmp
xchg
jnp
clc
or
adc
pop
dec
cmp
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jne
add
and
loope
mov
loopne
jne
pop
mov
gs
frstor
sbb
jp
test
ret
jb
ds
je
or
dec
cmp
test
(bad)
jo
pop
movsb
out
jp,pt
xor
jl
mov
push
lahf
jl
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
mov
outsb
pusha
inc
adc
and
adc
xor
sub
push
stos
lea
xor
jno
(bad)
and
mov
cli
xor
ss
mov
cmc
and
jo
jno
fimuls
jg
inc
cmp
inc
int
sbb
mov
cmc
adc
xchg
push
xchg
movsl
sbb
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
add
test
out
mov
xchg
xor
adc
mov
pop
leave
lcall
dec
pushf
sub
stos
jb
push
fldl
mov
inc
dec
inc
sbb
in
mov
inc
jge
(bad)
or
cmp
cmpsb
adcb
lock
inc
mov
lret
jecxz
inc
addr16
pop
bsf
or
pop
int
and
iret
lahf
iret
call
mov
dec
repz
cmc
out
cmp
inc
loope
(bad)
aaa
out
lahf
pop
cmp
(bad)
std
dec
adc
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
lods
aas
std
lods
in
lret
fmuls
nop

stos
test
or
loop
ret
cmpsb
cltd
movsb
clc
adc
xor
adc
inc
js
insb
cmp
xchg
(bad)
out
in
pop
xchg
rolb
rcll
lock
pop
push
mov
loopne
outsl
mov
jno
mov
mov
sarb
mov
dec
push
fstps
dec
pop
xchg
rorl
or
jge
inc
enter
add
(bad)
push
dec
inc
cmpsl
mov
push
dec
add
ret
push
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
out
int3
shl
mov
outsb
inc
loope
push
insl
sbb
repz
mov
xor
int3
out
inc
sbb
jmp
popa
mov
jmp
scas
nop

or
(bad)
mov
jl
adc
xor
xor
or
mov
adc
out
roll
jns
xchg
iret
add
aas
xor
jg
sub
pop
dec
insb
les
ss
sbb
cs
roll
mov
lret
mov
call
loopne
add
jmpw
mov
xchg
testl
scas
push
mov
jmp
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
out
test
dec
clc
or
fwait

pop
ret
mov
mov
sbb
int3
rcr
enter
jbe
sub
rcll
xchg
leave
lock
in
mov
int
inc
add
and
or
mov
jge
cmp
xchg
movsb
loopne
jg
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
adc
mov
sub
mov
sbbl
mov
cmp
pop
popa
test
jb
lds
shll
or
es
push
mov
mov
adc
nop

cld
cs
jge
sti
xlat
(bad)
xchg
testb
jno
xor
push
and
jne
into
add
jo
mov
jmp
fadds
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmpsl
les
adcb
cmp
pop
and
std
xorb
lcall
cmp
jecxz
stos
lcall
adc
hlt
xchg
call
pop
mov
dec
out
jo
cmp
icebp
leave
test
insl
pop
imul
inc
xchg
sub
sbb
xchg
(bad)
cs
sti
push
addr16
outsb
mov
sbb
nop

popf
outsl
add
add
sbb
sbb
repnz
add
cmp
inc
jb
les
mov
cwtl
pop
les
stos
nop

cmpl
cmp
cmp
sbb
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
cmpsl
pop
shll
mov
pop
mov
insb
sbb
or
xchg
fistpl
pushf
xchg
pop
push
inc
outsl
add
popl
sarl
add
aaa
outsb
in
cmp
aaa
mov
in
loope
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
pop
sub
aas
addl
cmpsb
inc
cmp
mov
ret
nop

stos
cmp
gs
pop
adc
cmp
push
testb
in
int
xchg
(bad)
sbb
inc
ficoms
inc
bound
movsb
mov
pop
or
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
jo
dec
cli
mov
in
mov
ja
arpl
popf
mov
nop

aad
push
pop
push
inc
pop
ljmp
stc
inc
and
mov
mov
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
into
jae
mov
stos
mov
or
jnp
lahf
ds
(bad)
jmp
outsb
insl
xchg
cmpsl
stos
jp
iret
popa
stc
ljmp
mov
jl
jbe
clc
fs
sub
xchg
mov
jnp
cmp
popf
cmp
js
mov
ds
adc
and
test
movsl
icebp
inc
pop
ss
movsl
jp
inc
adc
call
scas
loop
cmp
call
out
cli
push
jns
out
arpl
(bad)
and
push
xchg
push
push
lahf
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cmc
repnz
fbstp
add
aam
or
pop
lea
cld
xchg
inc
push
jg
out
dec
adc
popa
test
xchg
hlt
lods
mov
and
daa
xor
sahf
mov
loopne
call
pushf
xchg
xchg
pop
fimuls
sub
sbb
into
xor
xor
mov
adc
push
mov
adc
mov
mov
fstl
mov
push
pop
inc
or
xor
maxps
rclb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
adc
jmp
push
(bad)
push
cmp
iret
push
adc
pop
and
sbbl
aam
mov
xchg
out
loopne
mov
hlt
hlt
fstl
call
loopne
sub
addl
xchg
les
cmc
xchg
(bad)
push
mov
sti
xchg
pop
(bad)
cli
notl
ljmp
addl
or
add
scas
sub
test
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
push
inc
pushf
xor
push
aas
lret
add
subb
xor
insl
mov
scas
(bad)
out
xchg
rcr
test
mov
out
jb
lea
in
dec
adc
mov
jno
ret
xchg
stos
mov
push
fisubs
cmc
pop
movsl
pusha
inc
and
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
and
jp
jbe
and
jae
xor
mov
pop
pop
into
mov
push
flds
filds
scas
test
lret
add
les
jo
xchg
or
in
test
mov
call
adc
add
arpl
push
xchg
mov
push
mov
fldl
inc
inc
or
popf
sti
movsl
stc
popl
or
inc
xchg
imul
cmp
mov
out
xor
shrb
pop
sbb
sub
mov
ds
mov
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
pop
test
mov
rclb
add
mov
enter
mov
es
xor
outsb
push
cmpsl
add
leave
jae
ds
push
adc
adcb
jns
cmpsb
or
addr16
add
fsts
xchg
mov
xorb
push
push
adcl
rclb
jmp
gs
cmc
adc
jbe
int3
dec
in
sahf
xchg
pop
mov
scas
das
or
add
mov
mov
jl
int
inc
mov
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
push
lods
shr
inc
lods
mov
jbe
ljmp
dec
inc
mov
sti
dec
cmp
push
mov
jnp
mov
das
loop
iret
push
cmc
cmpsb
repz
std
jne
push
sbb
into
cmpsb
test
rorl
arpl
cmc
xchg
fnstenv
lock
(bad)
mulb
inc
jnp
xor
jecxz
aas
sbb
lea
lcall
mov
nop

les
sahf
sub
pop
mov
xchg
pop
dec
mov
in
xor
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
sbb
add
lret
popa
pop
ret
cmp
cmp
pop
xlat
int3
shr
fisttps
aad
nop

(bad)
(bad)
imul
stos
sahf
icebp
(bad)
or
mov
or
dec
xchg
xorb
xchg
mov
push
sbb
cmpsb
mov
pop
popl
and
lds
inc
(bad)
(bad)
mov
subl
xchg
xorb
fwait

(bad)
adc
push
push
mov
fneni(8087
aad
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
test
mov
cmp
mov
fisubs
mov
scas
inc
aam
jns
xchg
les
push
push
push
(bad)
mov
cmp
cmpsl
in
cltd
fildl
hlt
std
jecxz
sub
stos
outsb
movsl
movsb
sbb
popa
lods
push
xchg
inc
jp
aas
xchg
mov
(bad)
imul
ljmp
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
mov
and
inc
inc
sarl
xchg
aad
ret
mov
pop
enter
pop
outsb
jnp
(bad)
sarb
xchg
adc
arpl
xchg
pop
and
sub
fistpl
jge
repz
sub
or
and
ret
jg
and
add
pop
scas
dec
mov
jae
sub
sbb
call
rcll
cwtl
jnp
mov
cwtl
fistpl
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
bound
pusha
gs
(bad)
jns
enter
cmp
cmp
pop
lret
pop
enter
mov
test
call
pop
add
ja
or
pop
mov
xorl
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
shl
cmpsb
dec
adc
aaa
mov
(bad)
mov
jge
sti
sbb
xchg
insl
mov
pop
into
(bad)
jns
ret
and
and
mov
aaa
aas
mov
out
add
push
xchg
mov
(bad)
loopne
stc
or
dec
cs
push
incl
jo
push
repnz
adc
orl
addl
daa
push
jbe
lret
mov
dec
das
dec
fs
sbb
cmp
mov
les
mov
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
adc
loop
lret
adc
dec
adc
mov
nop

(bad)
cmc
ret
movl
std
int3
push
mov
push
aaa
dec
test
add
add
jae
add
jno
add
add
add
in
push
push
push
push
mov
mov
mov
sub
mov
mov
mov
push
push
push
mov
mov
call
lea
lea
pushl
push
push
lea
push
call
add
push
push
call
add
movl
mov
mov
mov
cmp
jne
mov
inc
mov
test
je
cmp
jne
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
cmpb
je
cmpb
ja
inc
cmpb
jne
movl
lea
push
call
testb
mov
je
movzwl
push
push
push
push
call
push
call
push
call
jmp
mov
mov
mov
mov
pushl
push
call
add
ret
mov
pushl
call
add
movl
mov
pop
mov
pop
pop
mov
pop
ret
jmp
repz
adc
sbbl
sbb
xchg
ja
fisubrl
stos
dec
dec
mov
lret
cmp
push
scas
jbe
dec
andl
test
cmp
inc
sub
test
push
js
popf
test
and
movsb
mov
jns
int3
out
ret
mov
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
arpl
les
mov
xor
pop
movsb
loope
loop
mov
or
rol
jne
sub
cld
mov
arpl
lcall
sbb
dec
sub
jb
sti
mov
add
xor
cmpb
fwait

out
popl
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
(bad)
imul
nop

sti
lods
mov
jmp
push
fwait

xchg
or
mov
movsb
dec
negb
xchg
in
jmp
les
pushf
(bad)
aaa
lret
and
xchg
repnz
dec
in
das
dec
test
in
in
mov
sub
lret
jmp
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
sub
scas
xchg
ja
adcl
cwtl
arpl
push
dec
iret
and
cmp
loope
pop
hlt
inc
cmp
scas
adcl
pop
pop
pusha
ret
and
xchg
mov
stos
mov
dec
inc
js
mov
shll
ss
out
cmp
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
push
call
js
mov
popl
aam
mov
pop
shr
pop
mov
xchg
aas
xchg
bound
lods
pop
and
rcl
ljmp
dec
in
sbbb
add
sbb
stc
nop

xlat
loop
or
cld
pop
fdivrs
xor
sub
jmp
mov
jle
xchg
push
lds
mov
adc
jl,pt
mov
lcall
or
lds
and
jl
into
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
sub
rolb
cmc
sub
mov
roll
fstpl
and
inc
mov
fnstenv
(bad)
mov
add
inc
test
call
lock
movsb
in
aam
stos
movsb
lods
dec
jae
pusha
lods
push
xor
loope
cmpsl
(bad)
cmp
pushf
daa
sbbb
out
rcll
pop
les
call
clc
or
xor
or
sbb
cmp
cmc
fsubrl
xor
sbb
rcrb
rorb
scas
test
add
stc
addl
cmpsb
les
scas
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
adc
mov
push
lds
mov
mov
or
lret
cmp
push
pop
push
xorb
add
mov
int3
cmp
dec
push
out
dec
mov
or
mov
addb
mov
adcl
jns
mov
and
mov
fwait

shrb
mov
les
adc
stos
push
inc
inc
lea
xchg
neg
jmp
mov
adc
out
fistps
in
jle
xchg
push
cmp
mov
rcr
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jecxz
insb
cmpsb
xchg
push
lods
jnp
std
adc
jnp
cmp
xchg
mov
fwait

lahf
and
mov
ds
dec
es
inc
cmpsl
(bad)
xchg
mov
aaa
sti
mov
sub
xchg
iret
push
dec
in
test
mov
loope
rol
test
stos
pop
ss
test
inc
movsb
in
push
mov
pminsw
and
push
jmp
cmp
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
jo
add
ret
mov
cmp
loope
mov
or
adc
mov
or
les
jo
cli
and
and
xor
mov
clc
movsb
roll
lock
inc
mov
and
fnstsw
inc
adc
fisubrl
scas
jns
ror
mov
repnz
jge
push
mulb
ja
add
cltd
dec
movsl
test
sbb
jnp
adc
test
mov
out
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
add
xor
mov
mov
cmc
fnstcw
imul
arpl
out
jp
and
inc
xor
mov
ret
fsubrl
mov
push
jb
inc
lcall
xchg
pop
xchg
cmpsb
je
(bad)
dec
out
jle
sub
out
mov
pop
outsl
cmp
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
or
and
lea
test
rorb
inc
adc
mov
cmpsl
das
int
and
xchg
push
cwtl
xlat
add
fsubr
xor
push
rorl
loop
sub
mov
jmp
ja
fwait

push
or
dec
dec
(bad)
adc
add
(bad)
rcll
dec
cltd
dec
inc
decb
repz
adc
mov
cmp
addl
mov
call
cmp
xchg
xor
inc
(bad)
cltd
sbb
mov
fldl
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cwtl
sar
pushf
and
movsl
dec
mov
rol
inc
stos
or
aad
xchg
add
add
inc
and
rcll
test
mov
lcall
std
fsubrs
(bad)
or
add
popf
pusha
addr16
shrl
lods
das
xchg
pop
dec
jae
jne
popf
push
addb
dec
mov
call
sbb
push
adcb
out
xor
mov
in
sbbl
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
test
shrb
pusha
(bad)
xchg
mov
lret
and
insb
and
dec
or
popa
repz
popf
insb
std
push
jl
mov
push
inc
mov
adc
and
add
iret
std
xlat
pop
sahf
mov
add
xchg
sub
adc
sub
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
rol
cmpsb
xor
or
outsb
fucomi
jp
jmp
(bad)
push
and
xor
lods
cmpsb
lock
pushf
push
cs
adc
leave
fmull
sbb
cmpsl
mov
dec
mov
and
shlb
mov
in
jg
loope
pop
xchg
add
mov
in
dec
call
mov
xor
xchg
xor
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmp
or
in
cmp
out
jg
rclb
pcmpgtw
inc
repz
jmp
cmc
fsubrp
jle
cs
xchg
mov
stos
cwtl
pop
dec
out
sahf
sbb
adc
mov
gs
mov
mov
pop
xor
orl
call
sbbb
or
push
and
mov
imul
mov
mov
imul
cmp
mov
jae
leave
xor
xchg
inc
loopne
cwtl
rcr
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
ret
mov
mov
mov
fisubrl
insl
sub
sub
mov
pushf
les
imul
aas
dec
sbb
(bad)
sbb
mov
jae
add
push
xchg
sar
adc
push
jo
hlt
jo
and
mov
xor
lret
addl
jb
out
inc
aas
iret
test
sbb
ss
cld
(bad)
insl
jecxz
xchg
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
in
shr
out
or
enter
or
addl
in
mov
(bad)

into
mov
cmp
cmc
inc
sub
push
jmp
cmp
mov
stc
ret
cld
push
inc
stc
incb
sub
fs
xlat
repz
jp
ljmp
scas
inc
jo
ds
sub
leave
push
int3
aam
bound
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
stc
and
push
sub
aaa
dec
inc
fmull
scas
in
push
enter
nop

jns
outsl
xlat
ljmp
jne
mov
mov
xor
es
mov
lahf
(bad)
rorl
icebp
call
stos
insl
cmp
cwtl
xchg
pcmpgtd
je
pop
fstps
and
mov
dec
and
lcall
mov
int
sbb
ja
mov
jecxz
ds
pushf
mov
add
fs
xor
mov
(bad)
mov
cli
xchg
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
lea
loope
in
rcll
mov
sbb
push
cwtl
clc
dec
rcr
sarb
sub
movsl
les
fbstp
stc
adc
xchg
cmp
in
repz
popa
pop
push
push
mov
push
cmpsb
pop
push
jbe
out
pop
jae
jne
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
aas
adc
pop
ss
pop
ds
jnp
adc
jo
mov
in
rcrl
leave
out
pop
xlat
inc
dec
jecxz
ss
mov
nop

int
mov
sbb
ss
mov
hlt
std
xor
xchg
and
push
and
xchg
inc
jge
scas
xchg
shrb
pusha
push
add
mov
xchg
pop
pusha
xorb
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
cmp
xchg
sti
lcall
jno
lcall
jg
mov
dec
pop
cmp
push
dec
pop
ret
andb
jmp
jae
clc
mov
inc
mov
xchg
sbb
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
shlb
mov
ficomps
jp
iret
xor
push
sbb
out
test
lds
mov
mov
xchg
xlat
repnz
aad
mov
jo
mov
jbe
mov
in
lea
popa
mov
outsl
(bad)
mov
insb
ds
cmpsb
dec
aaa
scas
push
mov
fdivl
dec
inc
leave
push
cs
call
xchg
pusha
cltd
pop
adc
ret
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
cmp
push
ficoms
cmp
fxch
cmp
jnp
add
out
sub
dec
and
arpl
stos
jbe
push
into
sub
decb
push
into
dec
adc
sub
sub
stc
ja
and
repz
cwtl
into
or
in
sbb
ficoms
inc
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
push
add
lds
mov
cmp
dec
push
xor
orl
stos
push
dec
inc
or
or
xchg
dec
movsb
or
push
movsb
add
fnstcw
fs
iret
rol
mov
lea
adc
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
fsts
cmp
loope
cmp
movsl
xlat
sub
mov
addb
hlt
mov
rcrl
aaa
les
inc
mov
sbb
cwtl
xlat
fcoml
or
mov
jae
aam
pop
in
mov
add
inc
andl
and
shlb
fildl
mov
fisubs
dec
pxor
or
pop
adc
divb
sti
lods
(bad)
scas
lret
xchg
cmpb
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
aas
jg
mov
aaa
xchg
jmp
imul
push
jmp
(bad)
int
xchg
sub
adc
ficoms
sub
ret
test
orb
loope
xor
jae
sub
andl
jno
fldenv
call
lods
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
(bad)
jns
xchg
mov
mov
clc
mov
rorl
mov
sbb
outsl
pusha
jecxz
pop
cmp
and
pushf
ret
cmpsl
into
in
cmp
and
aam
cmpsb
loopne
add
movsb
adc
inc
outsl
hlt
adc
movb
notl
push
xchg
mov
rcll
stos
xchg
dec
outsl
test
cmp
in
ds
mov
add
mov
cmp
addr16
add
mov
add
inc
inc
jae
fisubs
mov
cmp
pop
roll
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
roll
add
roll
or
ret
movsb
mov
mov
int
mov
or
outsl
inc
and
or
xor
adc
(bad)
sar
(bad)
cmpsl
test
or
xchg
mov
mov
daa
xor
and
nop

and
sub
loope
push
dec
sti
stos
pop
outsl
fcoms
insb
clc
xchg
iret
call
mov
ret
and
fwait

pop
movsb
mov
fisttpll
jns
and
jnp
outsl
xchg
mov
fdiv
fistpl
jle
scas
mov
orb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
jo
icebp
test
fadd
fistps
dec
sarb
js
sbb
fstps
aad
shlb
xor
test
arpl
enter
mov
push
xchg
jecxz
xor
je
fdivl
xor
sub
test
adcb
sub
jns
inc
push
mov
sbb
inc
mov
call
and
sbb
orl
aaa
orl
in
lret
sbb
add
rcr
stos
icebp
push
jge
inc
sbb
enter
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
test
mov
cltd
cmp
cmp
mov
rcl
loope
push
mov
fnstcw
dec
add
popf
sbb
rorb
lock
cs
aam
add
inc
push
pop
push
out
mov
std
rorl
lahf
pop
mov
cmp
cmpsl
nop

imul
movsl
shlb
adcb
incl
sbb
add
fdivrs
mov
aad
lods
xor
push
(bad)
mov
or
orb
(bad)

and
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
iret
aaa
sti
addr16
mov
or
dec
xchg
int
(bad)
stos
jp
nop

cmp
xchg
mov
(bad)
pop
sub
xchg
insb
mov
and
and
rol
pop
insl
fst
lahf
fdivs
cmpsb
outsl
mov
cmpb
loope
and
dec
or
arpl
ljmp
pop
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
dec
pop
push
daa
sbb
sarl
lds
mov
mov
in
pop
faddl
jecxz
dec
rcrl
mov
lock
or
shlb
stos
mov
pop
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
dec
xor
ret
mov
adc
repnz
mov
push
lahf
test
daa
xchg
cmp
mov
or
xchg
lcall
sbb
fisubrl
lret
sbb
incl
fldenv
cltd
scas
je
sub
xor
(bad)
jnp
cmp
pop
xlat
call
mov
add
fisttpll
cmp
sti
cmpl
dec
add
nop

cld
jg
or
inc
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
inc
shrb
fldt
adc
in
test
cmp
movsb
mov
fisttps
ret
aad
fsubp
iret
inc
cmp
dec
sbb
mov
and
pop
jb
push
mov
cmp
jnp
and
int3
jne
xchg
lods
fisubs
loopne
cs
insb
inc
cs
daa
stos
in
jnp
mov
sub
lret
mov
(bad)
pop
xchg
pop
and
xlat
and
out
cmp
mov
out
mov
mov
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
lahf
repz
adc
fidivs
and
fcmove
or
lods
std
mov
mov
sub
push
sub
(bad)
add
sbb
add
andl
sub
dec
repnz
les
stos
inc
test
adc
cli
add
inc
mov
lcall
mov
mov
xchg
inc
push
add
test
and
fcoml
inc
imul
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
out
mov
outsb
shl
jge
fbstp
lea
mov
sbb
push
adc
xchg
xchg
xlat
into
mov
imul
dec
into
aam
inc
sbb
fisubrs
push
gs
push
rol
fstpl
bound
pop
mov
pop
aas
int
adc
mov
daa
pop
mov
xchg
mov
dec
stos
sbb
pusha
pop
ds
push
dec
mov
jo
push
loop
cmpl
sahf
xchg
jl
mov
xlat
xchg
dec
adc
mov
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
pop
shll
adcb
and
push
aaa
sbb
mov
imul
sub
inc
out
mov
jae
inc
out
dec
mov
dec
mov
shl
call
insb
add
xor
scas
jle
pand
jno
xchg
in
stos
mov
and
rorl
les
sub
stc
add
jnp
dec
addl
mov
sbb
out
ljmp
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
cli
daa
addr16
idiv
pop
mov
mov
(bad)
pushf
lea
cs
pop
mov
lcall
imul
jge
stc
in
inc
mov
insb
mov
mov
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
jecxz
jbe
mov
inc
ficoml
lret
out
xor
popf
fistps
cmpsl
push
dec
or
daa
lds
xor
idivb
xchg
jge
ljmp
test
iret
xchg
jp
xchg
notb
add
push
aad
ret
mov
les
jmp
pop
loopne
js
popa
stc
out
and
xchg
fisttpll
and
sbb
stc
inc
sbb
popf
fwait

nop

xchg
mov
test
jnp
scas
inc
aad
lahf
cmp
ret
inc
test
mov
icebp
xchg
sub
adcl
pusha
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
jp
mov
les
pop
mov
repz
fucom
mov
xchg
repnz
hlt
jb
movsb
mov
jl
add
inc
or
js
pop
insl
cmc
movsb
(bad)
test
sub
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
cmp
mov
xor
adc
out
fwait

or
cli
push
(bad)
clc
fistl
aam
mov
gs
rcrl
not
xorl
ror
nop

and
addr16
testl
jbe
imul
xchg
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
mov
sbb
mov
mov
roll
pop
or
cmp
pop
ss
orb
out
or
addb
and
fldl
addb
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
lret
test
jo
or
mov
(bad)
cmp
or
mov
lret
test
and
jae
nop

lcall
andb
andb
or
int3
aas
adc
mov
mov
ljmp
mov
insb
nop

cltd
mov
movsb
inc
fs
xor
mov
lods
xchg
push
adcb
sub
inc
pop
mov
aad
add
mov
nop

adc
dec
call
push
inc
(bad)

ss
js
mov
stos
push
jbe
andl
pop
mov
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
push
adc
dec
sub
in
aad
or
mov
stos
add
mov
or
popf
fstpl
ja
sbb
pusha
add
mov
data16
push
mov
push
vmwrite
and
es
les
fstpl
xchg
fwait

and
ret
mov
data16
dec
mov
ds
daa
pusha
xor
int
les
insb
insb
fists
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
scas
int3
dec
dec
pop
dec
mov
les
insl
xchg
js
cwtl
fs
lds
out
cbtw
xchg
fwait

lods
and
sbb
cmp
scas
xchg
add
push
ret
arpl
mov
sbb
jbe
sub
push
popa
mov
or
push
add
ret
pop
mov
scas
enter
cmpsb
lods
jecxz
jb
lds
xchg
jmp
lds
mov
lahf
xchg
xchg
jbe
sbb
inc
cs
fwait

adc
adc
push
sbbl
sbb
mov
or
mov
(bad)
stc
add
addr16
es
addl
mov
andb
mov
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
bound
inc
push
rcrl
xor
cmpsb
push
mov
jne
filds
mov
mov
pop
(bad)
mov
push
lods
test
push
mov
mov
pop
xorl
add
iret
push
lret
cld
cmpsl
fucomip
(bad)
cmp
repnz
and
adcb
addl
adcb
addl
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
mov
cli
or
cli
pop
(bad)
add
inc
test
pushf
ret
(bad)
imul
daa
bsr
stc
cmp
nop

aad
xchg
lret
push
sub
cmp
inc
addb
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
jmp
sahf
jl
push
mov
inc
inc
mov
mov
pop
enter
loop
lcall
or
fildll
adc
add
subl
inc
adc
ja
jne
adc
add
addl
mov
addl
addb
pop
int3
addb
sbb
addb
inc
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
andl
mov
xorb
pop
lock
dec
add
lret
mov
pop
lret
xchg
int3
cmpsl
call
aas
jecxz
xor
into
add
lcall
pop
int
mov
sarb
out
inc
rclb
sub
in
addr16
or
into
or
lret
in
mov
int
or
cmp
adcl
fcoms
icebp
xchg
pop
popf
std
adcl
mov
leave
or
and
mov
or
inc
adc
mov
xchg
inc
lods
cld
mov
movsl
fcoms
sti
fldl
mov
addl
xchg
mov
mov
xchg
addl
xorl
mov
addb
mov
addl
addl
addl
fldl
fnsave
pop
mov
addl
loopne
mov
mov
into
stc
mov
in
nop

lods
dec
xchg
lret
loope
shrb
push
pop
(bad)
enter
jp
cmp
xchg
mov
jmp
movaps
stos
push
xchg
pop
subb
pusha
sbb
imul
(bad)
pop
xchg
pop
xchg
inc
lea
jb
popf
pushf
insb
ss
into
cld
aas
pop
rcr
xchg
fstl
jecxz
repz
jo
fucomi
frstor
fadds
addl
adcl
addb
mov
addl
mov
addl
pusha
sbb
mov
sbb
mov
int3
addl
mov
adcl
fldl
adcl
int3
andl
andl
ret
(bad)
outsl
and
popf
sbb
add
inc
and
xor
jo
shrb
mov
filds
sbb
arpl
sbb
sbb
(bad)
cmp
addb
pop
insl
addl
sarb
dec
popa
jnp
cld
rolb
or
insl
push
stos
mov
popa
mov
lahf
pop
out
in
fcomi
jg
lahf
testb
cltd
xchg
mov
stc
xchg
inc
push
subb
addl
addb
addl
adcl
xorl
pop
andl
inc
andl
adcl
andl
addl
inc
xchg
adcb
adcl
int3
int3
int3
int3
int3
int3
push
mov
inc
or
inc
push
mov
inc
call
mov
dec
mov
dec
push
push
mov
push
push
jmp
inc
mov
call
pop
add
ret
call
mov
mov
inc
mov
jmp
int3
pop
cmp
jmp
enter
inc
adc
pop
dec
xchg
int
sbb
jmp
jg
pop
cmp
jmp
or
inc
roll
dec
shl
mov
pop
pop
shlb
inc
sub
gs
and
xlat
je
sbb
test
lock
int
dec
push
sbb
pop
arpl
aaa
sbb
xor
cmp
and
or
dec
in
outsl
adc
mov
lds
jg
mov
xor
adc
sahf
and
sbb
jl
test
sarl
scas
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
cmpl
je
cmpl
je
jmp
mov
jmp
mov
and
movzwl
cmp
je
mov
and
movzwl
cmp
jne
mov
and
movzwl
push
mov
push
call
mov
jmp
xor
mov
pop
ret
int3
int3
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
