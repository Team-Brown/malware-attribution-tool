xor
xor
xor
xor
adc
mov
or
clc
add
bound
push
lahf
push
pusha
sub
scas
daa
jge
cmp
jmp
mov
test
jmp
jmp
jecxz
cld
jecxz
ret
dec
popa
sbb
xchg
xor
inc
cld
(bad)
rcrl
jnp
jb
mov
push
insb
dec
mov
xchg
and
push
xor
inc
pushf
cld
sbb
shl
add
and
into
imul
mov
scas
adc
sub
inc
fwait

mov
push
add
pop
jle
test
push
int3
xor
mov
popf
inc
test
xor
fidivrl
stos
xchg
sbb
imul
xchg
fptan
dec
adc
sub
(bad)
or
dec
stos
xchg
jnp
mov
stos
sub
leave
xor
mov
jle
jp
popa
out
xlat
add
jns
xchg
les
adc
pop
adc
nop

dec
mov
sub
xchg
jno
fldenv
or
sbb
rclb
cmp
out
xorb
xor
and
sbb
fsubrl
cmp
sub
cmp
cmpsb
loopne
out
ljmp
pop
pushl
std
xchg
push
test
in
aaa
jp
roll
repz
dec
movsl
mov
and
cmp
push
(bad)
dec
cli
imul
xchg
cmp
outsl
add
pop
sti
lret
jb
pushf
jno
clc
add
cmpsb
addb
push
push
addr16
rolb
inc
insb
js
stos
lock
fstpl
cmc
mov
popa
pop
push
dec
and
xor
(bad)

xlat
shrb
scas
dec
cli
jl
popf
lret
imul
push
or
add
inc
ret
jle
push
inc
mov
insb
mov
stos
aas
jns
scas
mov
iret
cmpsb
mov
arpl
inc
jnp
sub
shlb
stc
cmp
ret
cmp
dec
ret
mov
cmp
dec
loope
add
dec
enter
movsb
aam
mov
dec
dec
repz
mov
sbb
jo
and
mov
jle
mov
pop
push
jmp
push
aad
jp
mov
popf
loop
push
out
call
push
dec
pusha
jns
adc
cmp
mov
ret
stos
iret
dec
and
stc
xorb
icebp
orl
mov
hlt
jno
lds
sub
pop
shlb
repnz
pop
sahf
sub
inc
dec
aas
imul
out
fs
(bad)
push
test
scas
sbb
pop
insb
sub
scas
in
repz
daa
cmp
lahf
cltd
stos
movsl
mov
lret
cmpsl
and
jo
test
pop
xor
std
xchg
add
xor
aas
fwait

rdpmc
sub
aaa
mov
bound
mov
test
lods
xchg
xor
adc
ds
aaa
mov
andb
hlt
repnz
in
add
lcall
sbb
js
hlt
insb
or
es
push
jp
add
mov
add
mov
add
(bad)
cwtl
ret
push
cmp
idivb
xor
jno
(bad)
jmp
xor
dec
dec
sub
adc
shl
std
loopne
cmp
jb
loop
push
add
hlt
out
xor
push
std
mov
lock
mov
add
or
mov
or
sub
jl
loop
and
push
roll
out
pushf
jno
adcb
fsubl
xor
pop
xor
mov
inc
test
and
sbb
mov
mov
scas
iret
adcb
lock
xchg
stos
xchg
mov
xchg
std
fidivl
mov
scas
fucomip
add
sbb
addr16
sub
dec
pop
inc
pop
cwtl
or
pop
jae
jb
pop
cmp
pop
(bad)
mov
jp
ret
lock
ljmp
rorb
mov
mov
jecxz
jl
outsb
insb
test
push
dec
jmp
and
(bad)
fcoms
add
cli
add
xchg
jle
inc
repnz
popa
inc
stc
add
nop

shr
ret
out
cmpsb
cmp
lods
jge
cmp
mov
sbb
mov
jb
scas
aam
paddsw
pop
dec
jbe
sti
fists
iret
xchg
jo
repnz
aas
repnz
push
ljmp
push
cli
pop
insl
inc
jno
fldcw
cmp
outsl
shlb
jmp
(bad)
call
sub
dec
dec
mov
iret
push
cmp
lock
movsb
scas
std
or
es
outsb
push
xorb
push
imul
push
stos
jo
push
push
cmc
rcrb
jecxz
gs
add
ret
adc
subb
sbb
lods
scas
and
add
scas
and
xchg
push
add
inc
or
andl
inc
add
mov
add
ret
outsb
cmpl
xorb
or
(bad)
adc
fadd
imul
xchg
hlt
mov
leave
or
xor
and
mov
int
jbe,pn
add
(bad)
arpl
adc
add
stc
jg
ret
lcall
movl
jne
sti
xor
sub
inc
insb
jp
adc
fimuls
fcmovnbe
mov
aaa
pop
decb
add
sti
ret
imul
xor
inc
(bad)
pop
mov
pop
mov
test
insl
ds
push
pop
leave
cmp
cmc
test
or
test
mov
mov
es
pop
mov
addr16
adc
mov
mov
jnp
hlt
popf
out
jg
les
inc
loope
add
in
sbb
xchg
xchg
cld
xchg
or
(bad)
xchg
insb
cli
leave
stos
mov
hlt
leave
rcll
bound
jnp
notb
lods
and
scas
xchg
sub
dec
mov
bound
inc
sarl
ret
cmp
lret
sqrtps
mov
xor
dec
jp
sbb
xor
or
cmp
outsl
pop
pop
into
jbe,pn
popf
shlb
mov
pop
pop
cltd
pop
pushf
xor
lahf
jmp
pop
fcmovnb
push
popf
or
je
cli
sbb
bound
rol
add
loopne
xor
std
daa
subb
mov
sahf
add
jbe
and
pusha
cld
xchg
pop
mov
fstps
dec
xor
sbb
stc
adc
loope
xchg
popa
(bad)
cmp
add
fsts
shr
cltd
inc
pop
scas
(bad)
mov
addr16
sbb
and
pop
pop
andb
std
mov
rcrl
shlb
mov
sbb
enter
cli
jl
shrl
pushf
pop
fdivr
pop
inc
sbb
dec
add
jmp
sbb
dec
xchg
icebp
stos
cmp
ja
cli
pushf
mov
xor
dec
out
out
inc
xchg
out
xor
mov
punpcklwd
lods
div
cmp
jp
xchg
or
fiaddl
mov
test
mov
cmp
mov
xor
dec
xor
pop
and
ds
outsb
stos
(bad)
repz
scas
add
dec
cmpsl
dec
inc
dec
leave
shlb
mov
addr16
outsl
inc
stos
xchg
scas
jge
cli
pop
loope
scas
imul
out
(bad)
pop
pop
fstpl
mov
into
mov
rcrl
int3
pop
push
das
movsl
sbb
insb
and
lcall
daa
xchg
pop
in
loopne
scas
insb
or
cwtl
rcr
lock
dec
cmp
cmpsb
aas
cs
int3
cmp
xor
sbbb
xchg
das
movsb
and
ret
xor
mov
das
ret
add
scas
addl
insb
icebp
or
scas
jo
adc
pop
xlat
dec
loope
mov
mov
gs
cmp
lret
clc
gs
mov
jle
mov
lods
call
out
cld
fdivp
pop
cltd
out
sub
add
pop
or
jg
pop
mov
push
rorb
sbb
mov
gs
xlat
dec
lret
jbe
scas
stos
arpl
icebp
push
jp
and
dec
(bad)
mov
int
repz
inc
in
sbb
clc
mov
ret
repnz
cmp
add
icebp
je
orl
(bad)
leave
lret
sahf
repz
movsb
pop
in
mov
test
pop
xchg
push
cmp
repnz
lcall
xor
inc
and
fsubl
insl
(bad)
je
popa
sub
hlt
mov
cmp
out
imul
fcompl
xchg
pop
arpl
test
repnz
pop
daa
repnz
inc
mov
inc
or
inc
aam
sbbb
xlat
gs
add
jbe
jp
dec
dec
popf
dec
cmp
push
jno
movnti
hlt
(bad)
sub
shrb
lcall
fucomip
inc
cmp
add
sub
sbb
scas
dec
cmp
mov
movsb
inc
ret
and
mov
rorb
mov
cmpsb
mov
fadd
fs
cli
gs
and
addl
jo
cltd
xchg
in
or
sub
add
sub
hlt
movsb
add
sub
xor
dec
int
cmc
sti
inc
ds
xchg
push
mov
cltd
mov
xor
test
(bad)
js
inc
out
cli
das
dec
clc
in
dec
inc
push
mov
adc
(bad)
mov
daa
push
sbb
xchg
adcb
push
sarb
lock
data16
int3
jmp
push
dec
stos
jo
fisubrs
mov
mov
add
addr16
adc
inc
jge
lcall
mov
xlat
dec
loope
mov
popl
cmc
(bad)
mov
pusha
fsubrs
xchg
(bad)
mov
call
lds
cwtl
mov
jl
rclb
adc
ret
dec
dec
js
push
(bad)
mov
dec
xor
aam
adc
fnstcw
push
mov
ficoms
mov
inc
sub
adc
or
jl
enter
cli
adc
icebp
repnz
xchg
and
int3
mov
dec
cld
mov
mov
gs
xchg
ljmp
mov
imul
add
cmp
(bad)
jns
add
mov
ret
sub
dec
add
jo
inc
inc
jmp
(bad)

scas
mov
push
out
shll
xchg
arpl
repnz
xchg
ficoml
(bad)
int3
out
(bad)
sbb
sbb
das
sub
xlat
adc
lcall
or
inc
and
ljmp
push
mov
push
(bad)
mov
test
jmp
adc
push
mov
hlt
lds
cwtl
addb
test
pop
dec
mov
int3
movsl
and
lret
out
or
sbb
push
mov
loop
mov
push
in
jb
dec
sti
js
cmpsl
xchg
inc
or
lret
mov
aaa
xor
rcrl
sar
ret
seta
(bad)
pop
sub
jno
dec
das
gs
je
aas
dec
stos
push
mov
mov
cmp
les
push
pop
push
mov
loope
fnsave
pop
mov
int3
sbb
jnp
stos
adc
pop
lea
arpl
int
and
push
dec
push
sbb
mov
andl
lret
or
out
jp
stos
mov
outsl
in
jbe
shlb
(bad)
adc
mov
sbb
rcll
push
int
xchg
push
add
push
mov
dec
mov
fists
test
cmp
pop
aam
sub
popf
jb
mov
inc
lock
(bad)
sbb
stc
mov
and
xchg
cltd
mov
nop

out
xor
test
xchg
sahf
or
push
jp
clc
mov
mov
jnp
shl
outsl
inc
lcall
stos
xchg
and
popf
outsl
addr16
and
sub
cmp
loop
test
cmc
repz
dec
pop
mov
cmp
mov
in
adc
cmp
cld
xchg
sbb
sub
mov
xor
mov
ss
rorb
and
cmpsb
out
loopew
cmp
xchg
add
jmp
pop
dec
fildll
xor
add
jns
addb
cmpsb
int3
imul
fdivrp
leave
jo
addr16
or
(bad)
cli
shll
(bad)
jl
mov
clc
test
insl
add
pop
icebp
repz
cmp
outsl
dec
outsl
aad
or
mov
or
jge
pop
mov
(bad)
outsl
and
stos
or
xorl
pop
popa
sub
lea
mov
xor
popf
mov
cmpsb
push
lahf
or
int
pushf
sbb
push
mov
push
fldcw
shrb
fisubs
dec
ja
mov
xchg
xor
icebp
add
push
and
imul
popf
(bad)
cmp
mov
inc
mov
rcl
mov
mov
inc
jne
mov
fwait

andl
loop
dec
sbb
pop
push
pop
ret
pop
pop
out
push
pop
dec
sub
mov
xor
sbb
add
mov
mov
std
pop
repnz
add
cld
cmpsb
or
mov
into
test
test
mov
into
ljmp
pop
cmp
dec
xor
push
cmpl
sub
jl
mov
mov
lock
clc
test
xchg
addr16
adc
repnz
or
and
lock
add
xchg
lcall
movsb
adc
sarl
cltd
mov
std
in
push
nop

dec
push
movsb
je
lea
or
fwait

and
mov
push
lahf
add
inc
lock
outsb
movb
inc
adc
jne
jle
gs
ljmp
dec
scas
ja
xchg
mov
sahf
(bad)
cmp
adc
loopne
cmpsl
subl
mov
ficomps
add
aad
push
daa
push
incl
mov
sbb
fisubrs
lret
in
pop
(bad)
cmpsl
out
popf
mov
(bad)
push
addr16
pop
test
lahf
cmp
insb
mov
sbbb
inc
xchg
popf
imul
inc
(bad)
cmp
mov
dec
arpl
inc
mov
rolb
shrb
daa
and
or
pop
shl
into
sbb
push
and
(bad)
fdivrs
push
lock
(bad)
outsb
stos
lcall
fwait

movsl
nop

es
dec
pop
sbb
and
mov
dec
dec
cmp
add
lods
xor
cmp
imul
repnz
popf
ret
cmp
cmp
sbb
xchg
dec
fwait

sbb
mov
mov
xor
mov
mov
in
ds
xor
imul
loop
push
cs
iret
inc
xchg
mov
xor
out
push
divl
addl
mov
mov
mov
cltd
fsubrs
out
sub
roll
dec
sub
jns
mov
adc
popa
jecxz
mov
and
fisubs
fsubl
or
jmp
mov
adc
mov
mov
fsubrl
adcl
sbb
xchg
and
jp
push
xchg
arpl
and
cmp
pop
jp
xor
push
insl
mov
iret
mov
(bad)
fisttpll
dec
sarl
ss
daa
mov
jo
xor
cmp
in
mov
and
inc
sbb
stos
fs
jnp
and
cmp
(bad)
sub
stos
push
ret
cmp
mov
adc
imul
ret
ja
in
scas
push
mov
test
dec
(bad)
(bad)
aad
mov
faddl
into
lcall
inc
(bad)
inc
dec
mov
arpl
lea
fsubr
mov
scas
es
(bad)
js
mov
ss
cmp
inc
dec
inc
divl
jmp
sub
cmp
movsl
lods
hlt
push
ret
into
mov
outsb
stos
sub
cmp
or
xchg
push
adc
fwait

rclb
shll
adc
sub
mov
xchg
or
mov
mov
lods
push
pop
enter
in
adcl
testl
imul
es
mov
cld
push
daa
jns
pop
mov
inc
das
sub
lcall
cmpsl
jno
pop
sbb
cmp
adc
stos
mov
test
test
dec
xor
mov
or
imul
mov
lcall
out
xchg
icebp
dec
les
add
loop
add
sti
xor
sti
dec
sub
lret
push
push
lea
ret
mov
mov
sbb
ffreep
pop
dec
mov
int
lds
negl
lods
mov
mov
shrl
in
xor
add
mov
fidivl
sbb
add
dec
out
aam
and
xor
cmc
push
cmpsb
call
adc
sahf
push
sarl
push
mov
mov
jb
js
insl
jne
fs
ss
sarl
xor
out
xchg
inc
mov
aad
push
jg
outsl
aam
cmp
lods
test
adc
fcoml
lea
adc
icebp
push
rcr
cmc
sbb
cmpb
aad
xor
or
and
dec
lret
jae
jp
lret
ljmp
cmp
(bad)
sbb
xchg
jno
sub
lahf
mov
ja
xadd
pop
(bad)
rcrb
mov
aad
mov
jo
or
or
mov
mov
lret
in
(bad)
cmp
and
mov
cmp
push
mov
lea
sub
jbe
add
push
mov
loope
xor
sahf
mov
pop
push
mov
rcrl
call
lahf
sbbb
scas
push
lahf
icebp
add
daa
add
mov
mov
insb
out
mov
lahf
xchg
inc
mov
aaa
cmp
loope
dec
iret
push
lods
and
leave
(bad)
push
mov
in
xchg
addl
push
and
imul
lds
or
or
push
mov
fdivs
fs
jp
xchg
fldt
dec
jb
pop
adc
jl
xchg
es
sti
and
xor
mov
stos
xor
test
inc
add
cwtl
clc
movsl
push
loopne
outsb
sbb
sub
les
fmul
daa
push
sub
push
sub
test
es
add
cli
jmp
dec
(bad)
imul
out
addr16
sub
pusha
rolb
xchg
out
cmpsb
or
pop
or
cltd
sub
sarl
(bad)
mov
call
es
aas
ret
adc
out
mov
adc
repnz
rcl
fcmovnbe
addb
xchg
sarl
iret
add
or
outsb
je
push
add
rorb
rcl
xor
negl
jae
repnz
add
js
mov
or
pusha
loopne
xor
sbb
addb
test
mov
jno
or
xchg
ljmp
sub
repz
mov
sbb
inc
in
mov
push
xchg
mov
lds
mov
test
ljmp
mov
inc
adc
and
std
scas
or
data16
add
(bad)
push
inc
mov
cs
adc
bound
xorl
gs
loope
cvtps2pi
dec
pushw
sbb
cmp
into
repz
in
std
sub
jmp
pop
data16
in
pop
cmp
fcomi
aam
pop
xchg
lea
mov
mov
mov
or
shll
sub
inc
testb
lret
and
cmpsb
cwtl
mov
stc
mov
jne
pusha
mov
lcall
fadd
sti
scas
mov
xor
adc
jne
inc
pop
dec
mov
aad
pop
mov
lret
rcll
mov
xor
jle
pop
lds
dec
add
jns
(bad)
nop

sub
flds
or
sbbb
mov
daa
xchg
scas
cld
cmpsb
int3
xor
sub
rorb
mov
daa
xlat
(bad)
cld
lock
aaa
adc
and
mov
cwtl
dec
and
cmp
add
cli
fs
or
jno,pt
mov
pop
xchg
push
mov
xchg
push
pop
mov
lods
jecxz
cmp
sub
loop
or
sub
pop
sbb
in
popf
dec
cmp
pop
cmp
test
mov
mov
ja
cmp
ljmp
fidivl
dec
add
imul
adc
aam
jg
test
sti
inc
into
push
add
add
pop
pop
sar
xchg
dec
adc
outsb
dec
stc
lret
inc
sbb
jbe
push
mov
loopne
xchg
jp
push
lret
jno
iret
imul
out
mov
cpuid
mov
data16
jecxz
rol
lahf
add
inc
pop
cmp
adc
pop
sahf
jne
pop
cmp
jmp
ljmp
sbb
sahf
lret
gs
xor
int3
enter
sub
aas
mov
cmp
jge
or
loop
daa
fadd
loope
fs
rol
inc
mov
mov
pop
mov
aas
mov
sub
mov
sbb
loope
clc
jge
call
push
mov
xor
and
arpl
mov
jl
jne
sti
sti
inc
push
jge
cmpsb
inc
sub
icebp
pop
imul
cltd
inc
lock
(bad)
(bad)
mov
xchg
out
movsb
mov
xor
adc
imul
xchg
es
cld
clc
inc
dec
ds
nop
mov
xchg
cwtl
xor
repnz
mov
stc
pop
rcrb
mov
push
fimuls
fs
(bad)
xor
int
push
fwait

xchg
mov
test
adc
cmc
divl
lret
jae
push
mov
inc
xchg
sahf
dec
and
hlt
hlt
daa
inc
je
inc
repz
push
cs
mov
cmp
sbb
mov
xlat
mov
mov
jnp
mov
and
jns
aad
or
sbb
dec
ret
scas
lock
mov
cmpsl
clc
call
mov
inc
xchg
sti
ss
inc
jno
sub
xchg
mov
fnstenv
add
xchg
es
addr16
dec
xorb
sahf
ja
repz
sahf
xorb
popf
mov
stos
push
lds
(bad)
test
aad
sbb
sub
les
mov
data16
imul
jge
add
mov
or
fs
jae
into
aas
testb
jmp
mov
imul
cmp
add
clc
enter
and
mov
testl
cwtl
cltd
push
lods
imul
sbb
fsts
cli
in
leave
fmuls
out
stos
sbb
test
or
mov
ret
xchg
ljmp
sti
pop
adc
xchg
mov
lcall
bound
loop
xor
mov
filds
and
movsb
stos
lahf
xlat
sub
dec
jmp
scas
mov
lds
jmp
or
cmp
pop
cmp
mov
fdivrl
js
clc
lods
mov
scas
cmp
cmp
mov
sub
xchg
push
mov
pop
lods
xchg
push
hlt
xlat
xor
test
test
adc
mov
dec
jnp
lcall
xchg
addr16
(bad)
sub
add
popa
addl
sub
jmp
xor
mov
cmc
outsb
inc
xor
jo
stos
repz
xchg
adc
mov
dec
push
stos
testb
mov
test
repz
xor
ds
sub
fs
movsl
xchg
push
add
inc
mov
je
stc
sub
sub
fwait

cmp
lea
in
popa
cmp
clc
mov
movsb
add
and
(bad)
adc
push
xchg
addr16
(bad)
xchg
movsb
jb
sbb
push
mov
and
sarl
inc
xor
loop
adc
jb
outsb
jg
pop
ret
pop
xor
movsl
pop
add
add
add
push
loop
push
dec
jp
pop
xor
loop
js
xor
std
sub
popa
inc
out
jg
xchg
movsb
test
xchg
pusha
dec
lret
pop
sub
(bad)
dec
sbbl
imul
mov
xchg
mov
aad
aad
add
sub
mov
(bad)
cmp
push
jne
sbb
repnz
mov
mov
mov
push
or
adc
xchg
mov
cmp
sub
dec
mov
mov
(bad)

inc
shlb
fiaddl
insb
roll
xchg
rolb
(bad)
out
sub
dec
mov
jmp
(bad)

ret
std
outsl
mov
jo
bound
bnd
rolb
xchg
mov
mov
enter
fxch
mov
fwait

sub
mov
push
mov
push
das
cmp
mov
cmpl
int
pop
int
(bad)
(bad)
dec
pop
dec
shlb
lret
in
sub
jb
out
dec
aaa
sbb
mov
pop
xchg
outsl
js
enter
icebp
jmp
ljmp
ds
add
lods
in
cmp
dec
jb
pop
pop
xchg
in
lea
fidivrs
out
push
fadds
out
jns
int
fnstcw
dec
aad
cmpsl
pop
jge
mov
xchg
push
dec
xchg
hlt
dec
enter
or
decb
push
xchg
rolb
fwait

sub
int3
repnz
add
push
sub
adc
xchg
and
jne
mov
xchg
dec
dec
xor
inc
hlt
xchg
out
arpl
add
les
or
push
out
push
push
mov
test
insl
sub
adc
or
and
push
(bad)
stos
push
loopne
pop
jg
(bad)
imul
cmp
jns
dec
hlt
jle
cmc
push
es
mov
sbb
inc
xor
ret
arpl
iret
push
or
push
adc
sub
fninit
add
data16
pop
sub
in
mov
adc
dec
shr
rorb
mov
sbb
loopne
lods
mov
loop
xor
sub
ja
jnp
mov
or
push
fnstenv
out
lcall
fisubrs
mov
cltd
orl
fwait

in
hlt
mov
and
popa
notl
pop
ffree
sti
and
cmpsl
subb
mov
xlat
andb
xchg
js
scas
mov
mov
ret
xchg
xchg
bound
adc
pop
push
sub
xchg
lock
mov
(bad)
mov
cwtl
push
sbb
jecxz
lods
int
popf
(bad)
call
ficoms
jg
lods
stc
in
mov
or
daa
jmp
add
rcll
enter
ljmp
jnp
aas
mov
dec
inc
outsb
enter
inc
xchg
add
inc
add
adcb
or
dec
in
mov
inc
into
je
mov
imul
dec
add
or
mov
mov
xchg
dec
adc
sahf
mov
jp
bound
lods
jae
push
mov
cld
add
dec
or
bound
xchg
mov
inc
sti
mov
or
es
stos
sub
hlt
push
ficomps
scas
dec
lock
pop
repnz
mov
lcall
(bad)
mov
or
jp
out
xor
mov
or
sbb
loopne
pop
and
enter
or
mov
add
lret
jb
xlat
mov
lahf
inc
orl
pop
or
cld
ljmp
stos
insl
sbb
mov
popf
hlt
gs
aas
shlb
or
mov
repnz
sbbb
ret
add
mov
push
dec
pop
out
dec
sbb
es
mov
imul
inc
gs
jp
cmp
or
dec
push
mov
mov
stos
or
dec
(bad)
daa
test
icebp
scas
aad
mov
insb
jne
jmp
jns
hlt
call
or
adc
push
jne
lret
mov
pop
adc
in
or
add
insl
(bad)
jg
pop
pop
scas
cmc
orl
stos
inc
cmp
cmp
cltd
fidivrs
jno
rclb
(bad)
mov
dec
les
inc
jl
adcb
fcom
aas
mov
es
cltd
in
filds
test
or
dec
xlat
gs
or
data16
mov
int3
js
push
lods
imul
pushf
icebp
mov
mov
mov
mov
mov
jo
and
popa
arpl
cmpsb
adc
lret
(bad)
scas
bound
call
out
xor
(bad)
add
dec
cmp
lcall
cmp
mov
rcrl
cli
popf
add
mov
je
mov
(bad)
arpl
jno
lahf
cmc
mov
into
or
sarl
gs
mov
ja
fsubs
shll
stos
mov
mov
inc
sbb
add
mov
xchg
pop
test
jbe
lock
dec
leave
cmpsb
fstl
or
sub
(bad)
cmpsb
pop
jle
pop
sub
cmp
fisttpl
dec
scas
cmp
enter
adc
test
mov
ss
xchg
xor
(bad)
rol
cwtl
lea
jo
fwait

jae
and
mov
popa
inc
jge
sbb
cmp
ljmp
adc
mov
ja
push
sbb
sbb
mov
pop
jle
push
test
(bad)
sub
nop

cmp
out
jl
sub
and
movsb
ljmp
xor
mov
jmp
push
push
dec
dec
mov
mov
mov
(bad)
rcl
or
xchg
mov
and
xchg
xor
cmp
push
jge
pop
jmp
mov
movsb
add
popf
clc
xchg
arpl
sti
inc
into
(bad)
xchg
(bad)
(bad)
mov
push
sbb
out
stos
nop

push
imul
(bad)
jecxz
pop
movsb
mov
add
je
xor
jae
or
ja
jne
icebp
mov
adc
cmp
dec
repz
push
or
js
and
movsb
lea
test
out
or
les
xchg
jg
push
inc
xchg
lds
loope
jae
aas
push
dec
fsubs
movsl
mov
les
xchg
sbb
xchg
cmpsl
scas
jp,pn
and
repz
cmp
xchg
cmp
test
rolb
stc
stos
repz
pushf
fwait

and
jb
popa
or
cltd
or
rcl
jne
adc
test
popa
xor
imul
nop

lods
(bad)
or
out
out
int3
xchg
mov
pushf
mov
sahf
jg
arpl
stos
mov
and
and
xchg
ret
jmp
cmp
les
sbbl
pop
push
icebp
repnz
hlt
sub
adc
xchg
mov
sbb
data16
hlt
sub
dec
adc
loopne
ret
sub
mov
mov
adc
push
es
icebp
jbe
jmp
mov
stos
add
jne
in
adc
dec
inc
mov
xor
sub
sbb
mov
in
js
popf
mov
ds
mov
inc
dec
(bad)
popa
dec
push
jl
into
sbb
xor
out
rcrb
wbnoinvd
call
fcoml
iret
mov
lock
outsl
lods
mov
sub
shrb
pop
aam
xor
stc
cmp
mov
out
fsubs
pusha
lret
xchg
sbb
cmpsl
push
push
std
dec
xor
and
movsb
mov
adc
mov
mov
cmp
outsb
daa
ret
push
aaa
sbb
jne
fists
xor
jecxz
in
ret
ja
and
pusha
jb
loop
jmp
fs
int3
adc
inc
lods
mov
fbld
pop
xor
sbb
fcomps
je
cmp
rcrb
sti
push
out
jecxz
sbb
jb
in
test
scas
dec
cmpb
jle
movsl
movsb
stos
cltd
sbb
rcl
dec
imul
insb
out
xor
out
xchg
xor
(bad)
xor
ret
mov
mov
flds
int
inc
adc
(bad)
xor
mov
fstps
loop
fcomi
adcb
test
xchg
pusha
xor
inc
test
adc
ja
or
mov
(bad)
aam
pusha
shlb
mov
in
mov
jge
lock
(bad)
ljmp
sub
jecxz
rorb
xchg
mov
jae
out
hlt
adc
inc
push
fs
xchg
mov
cmpsl
lcall
pushf
into
jle
mov
adc
pop
mov
push
dec
shll
dec
mov
cs
pop
add
outsl
sbb
mov
pushf
fistpll
sbbb
int3
fistpll
add
pop
adc
mov
nop

add
aam
sub
xor
fistpll
push
leave
jbe
outsb
push
mov
arpl
bound
clc
push
insl
in
(bad)
out
jo
xor
adc
daa
out
jns
cld
fisubl
jl
jmp
push
fidivrl
mov
int
insb
xchg
push
addr16
enter
shl
(bad)
jl
(bad)
call
ficoms
sub
fs
test
hlt
lods
inc
fbld
mov
xchg
(bad)
pop
cmp
and
jne
jno
pop
shl
icebp
jmp
cmpsl
mov
ss
adc
js
sub
push
lahf
outsl
mov
dec
xor
scas
add
adc
sarl
mov
sbb
into
testl
ja
cmpsl
dec
pushf
adc
ja
les
sbb
sbb
call
int
dec
jnp
xchg
sti
movzbl
sbb
clc
jae
cli
jmp
test
popa
jae
and
and
pop
gs
loope
sub
dec
jo
fwait

mov
mov
test
jae
(bad)
into
fistps
push
cmpsl
in
sbb
stos
popa
shl
fstl
jmp
int
jbe
pop
push
rorb
xchg
pop
jl
lret
sbb
loopne
mov
fwait

push
inc
fcoms
ss
xchg
test
ds
xor
cltd
mov
sbb
cwtl
dec
pop
mov
pop
push
or
jae
lahf
lods
dec
mov
push
aas
push
pop
mov
fcmovb
inc
std
inc
sar
mov
sbb
ficomps
pop
adc
stc
paddb
adc
gs
push
mov
dec
xchg
pop
rcrl
dec
icebp
cmpsb
jg
repz
pop
push
(bad)
lcall
(bad)
or
dec
data16
cmp
aam
mov
jae
mov
sbb
push
pop
pop
test
cli
and
in
loopne
je
pop
inc
push
inc
int3
sbb
sbb
pop
mov
jo
or
jl
adc
xor
push
adc
dec
sub
jns
sbb
sub
fwait

mov
cli
imul
orl
dec
lods
leave
(bad)
xchg
push
dec
scas
and
sbb
(bad)
aaa
pop
inc
les
sbb
pop
push
pop
jae
(bad)

nop

push
jg
ja
cld
je
aad
hlt
adc
test
lret
mov
mov
sbb
mov
popa
xor
ja
mov
stos
(bad)
and
movsb
push
push
orl
push
push
push
(bad)
in
pop
add
arpl
mov
add
sahf
icebp
sub
mov
push
mov
mov
int3
cmpsl
cmp
loope
ljmp
adc
call
scas
dec
fwait

ret
outsl
es
aad
imul
ds
cwtl
in
xchg
mov
mov
cltd
ror
pushf
cmp
sbb
out
ror
add
jp
mov
int
lock
inc
fadds
out
cli
out
pop
cmp
fadds
stos
leave
and
call
lret
inc
addr16
and
dec
addl
fwait

add
jb
popf
(bad)
ss
ljmp
in
sti
mov
cmc
pushf
lahf
cld
aad
into
roll
mov
sarl
sbb
(bad)
dec
nop

mov
imul
adc
sbb
add
pop
jge
iret
(bad)
js
ficoml
xchg
js
cmp
jb
lods
xchg
inc
js
sbb
sbb
mov
shll
lret
and
call
jge
stos
push
in
mov
mov
(bad)
sub
push
outsl
push
inc
or
ljmp
gs
ds
or
mov
lea
dec
cmp
loope
outsl
dec
and
cmp
mov
pop
lcall
xlat
bnd
and
dec
stos
lcall
inc
adc
insl
adc
jp
sbb
cs
ret
test
dec
mov
shrl
sub
int
out
push
lods
jns
arpl
pop
or
loop
xchg
loop
dec
mov
lds
outsl
inc
dec
out
adc
unpcklps
xlat
stos
xchg
into
in
mov
out
xor
test
pop
rcr
pushf
sub
cmp
into
pop
cwtl
mov
fnstsw
test
cmp
lret
les
push
(bad)
aad
push
rcrb
into
xchg
push
nop

push
mov
iret
push
das
push
jns
add
out
shl
test
sub
jnp
popf
sub
mov
stc
pop
insl
dec
lret
fndisi(8087
pop
std
add
push
test
mov
pop
mov
ss
loop
adc
dec
bswap
dec
mov
stc
repnz
push
and
stos
inc
jl
pusha
dec
pop
dec
push
rcr
and
shrb
movsl
loope
sub
dec
hlt
or
pop
and
or
or
and
push
xor
(bad)
(bad)
sbb
daa
inc
fistl
lods
mov
xchg
lret
lods
xchg
adc
mov
in
xor
das
jns
jl
or
in
jnp
fcoms
mov
hlt
addb
adc
xchg
sbb
inc
loopne
data16
sbb
sbb
xor
mov
stc
dec
cmp
fs
pop
hlt
test
jnp
test
inc
ss
test
add
mov
(bad)
loope
lods
imull
shrl
pop
ja
hlt
int3
cmovg
jmp
add
jg
fisubrs
add
jge
push
dec
cli
mov
adcb
clc
jecxz
dec
inc
jae
jge
xlat
or
lock
aaa
aaa
push
add
pop
je
adc
and
cmpl
and
pop
add
outsb
outsl
mulb
fidivrl
add
rclb
enter
negl
shl
ret
lret
pop
(bad)
mov
add
imul
mov
pop
cs
cmc
imul
adc
insb
shll
sub
loop
push
jno
les
adc
push
pop
outsb
imul
out
fmull
mov
and
outsb
push
mov
dec
dec
cmp
int
sbb
inc
lret
call
shlb
cwtl
pop
cmp
popa
adc
inc
xor
xchg
pop
jge
sub
nop

ret
sbb
and
jbe
jle
repnz
enter
push
addb
dec
mov
mov
xor
nop

cli
cmp
jl,pn
or
lock
arpl
(bad)
out
faddl
stos
fnstsw
pop
pop
mov
cmp
mov
xchg
mov
sahf
jns
scas
mov
mov
mov
and
sub
pop
push
jo
repnz
adc
mov
push
mov
mov
xchg
movsl
pop
jecxz
jnp
cmp
cmp
push
dec
pop
xchg
adc
mov
clc
lock
xchg
dec
jp
inc
sbb
xchg
leave
add
push
jbe
adc
jle
fdivs
imul
jmp
xchg
(bad)
fucomp
movsl
dec
jp
and
into
cmc
push
cli
mov
int
lock
into
cmp
sub
movsl
ja
in
adc
es
lahf
(bad)
push
add
ss
xor
cmp
cld
push
sbb
push
cwtl
sbb
pop
pop
shrb
pop
arpl
inc
mov
fmull
shlb
mov
inc
mov
sbb
enter
cli
out
loop
cltd
push
test
mov
pop
sbb
insb
cltd
sbb
mov
pop
mov
idiv
outsl
pop
fwait

jp
stos
fdivl
movsl
adc
pop
push
mov
dec
mov
cli
(bad)
mov
lahf
dec
(bad)
ss
cmp
call
cmpsb
stos
push
mov
sbb
inc
addr16
xchg
stos
mov
push
mull
les
push
add
into
mov
ret
push
mov
lds
push
mov
test
or
inc
adc
decb
rol
sahf
mov
adc
jae
popa
push
(bad)
xor
stos
(bad)
mov
mov
(bad)
push
sub
fcompl
xchg
pop
or
push
jmp
cmp
bound
push
es
xchg
add
sub
mov
std
or
mov
rcrl
sbb
insb
clc
sbb
xchg
mov
(bad)
xor
dec
push
inc
mov
dec
ror
and
jns
adc
jecxz
mov
pop
xchg
xor
(bad)

xor
adc
jae
lds
ljmp
fucomip
mov
adc
jno
cmp
pop
mull
mov
out
add
rcr
push
rcrl
leave
cmp
dec
jnp,pt
in
ss
sub
sub
dec
jp
push
mov
jg
mov
roll
inc
mov
pop
fistl
ja
inc
mov
xor
xor
cmc
add
call
mov
js
arpl
stos
js
xchg
jmp
adc
loopne
xchg
push
xor
xchg
sti
mov
aas
sbb
cltd
je
and
sbb
cmpsb
pop
jecxz
hlt
fldenv
mov
adc
xchg
and
xor
mov
mov
lock
xor
inc
(bad)
mov
mov
dec
sub
or
lahf
andl
scas
enter
adc
push
xor
jmp
rorb
daa
mov
aam
inc
sub
arpl
add
push
fstl
aaa
or
mov
pop
mov
jmp
add
out
repnz
add
jnp
mov
pop
add
clc
mov
sub
adc
add
push
mov
imul
xchg
lahf
pop
add
(bad)
mov
jl
sub
int
dec
xchg
fs
cmpsb
shrb
and
lods
out
lret
test
je
adc
fdivrl
add
stos
out
or
sub
(bad)
lcall
jmp
mov
aad
sub
jns
push
stos
pop
inc
lret
mov
pop
cmpsl
int
dec
jp
leave
(bad)
nop

jo
outsl
(bad)
pop
fnsave
(bad)
jg
addr16
mov
mov
lcall
and
xor
and
(bad)
mov
sbb
dec
mov
mov
imul
rclb
push
shlb
addps
mulb
movb
jg
ja
aas
pop
rorb
lar
call
fwait

jp
scas
loopne
pop
sbb
jno
adc
xchg
mov
pop
test
pop
das
popa
jno
addl
push
popf
xchg
adc
cmp
imul
jne
lock
shr
push
(bad)
test
call
xchg
lds
pop
mov
jl
jg
enter
add
jle
pop
mov
xor
push
cld
sub
test
loop
aad
add
test
leave
lods
sti
jle
mov
(bad)
imulb
adc
loope
jbe
(bad)
lret
addr16
out
mov
add
xor
add
test
xchg
cmp
in
cmp
inc
popa
ss
scas
inc
mov
mov
jns
sub
lock
inc
mov
(bad)
push
shr
in
repz
xchg
sbb
gs
xchg
push
push
imul
(bad)
fisubs
push
repnz
inc
ret
push
jge
xor
jno
dec
cmp
icebp
mov
cwtl
test
or
jne
pop
lea
imull
dec
lock
inc
push
sub
testb
pushl
sub
push
lcall
movzwl
test
test
bound
sbb
shll
lret
push
popa
jns
std
fs
mov
jbe
sub
and
pop
cmpsl
xor
xchg
push
dec
or
mul
sbb
divl
fdivrs
cmc
js
loop
sub
inc
add
stc
dec
jno
cmp
jg
scas
lret
and
(bad)
pop
ret
sahf
jns
lcall
add
or
(bad)
aad
dec
lret
mull
lock
test
lahf
shlb
loopne
stc
or
add
shll
les
xchg
bound
in
pop
test
add
push
cmp
sbb
jmp
mov
mov
mov
jmp
pop
fsub
mov
push
rcr
lds
mov
push
shll
and
pop
push
(bad)
mov
and
xchg
clc
push
mov
loopw
dec
out
cmp
shlb
jecxz
fildll
cmpsl
out
xchg
pop
bound
lods
mov
bound
inc
ss
orl
loop
sarb
movsb
(bad)
(bad)
jnp
add
xchg
test
dec
jae
push
scas
add
jnp
enter
fadd
mov
mov
mov
push
add
dec
inc
hlt
fadds
insb
dec
fadds
pop
inc
dec
subl
int3
stc
cmp
jae
mov
popa
movsl
daa
nop

push
or
xlat
in
or
inc
sbb
jge
mov
jns
adc
les
int3
sbb
mov
mov
inc
fistpll
or
inc
mov
(bad)
xor
sbb
mov
mov
popa
inc
inc
adc
xorb
daa
adc
xor
outsl
gs
push
repnz
pop
jp
or
push
ficoml
inc
add
aam
ja
xchg
imul
adc
sub
aam
in
aad
jmp
add
outsb
stc
cmpsb
pusha
lock
push
std
iret
arpl
pop
xchg
test
or
ja
(bad)
sbb
ret
lahf
hlt
or
mov
mull
popf
pop
dec
fdivrl
scas
push
xor
les
fsubrs
inc
adc
das
aaa
orl
ret
inc
jns
subl
fcoms
and
test
fldl
jg
stc
pop
fnstenv
and
clc
ror
xchg
nop

out
sbb
mov
jmp
in
(bad)
jns
addb
sub
ss
mov
jecxz
sub
sbb
xchg
fisubrl
sbb
and
cltd
les
inc
clc
fiaddl
repnz
jp
out
shlb
fstps
push
mov
sbb
cmp
loop
lods
jne
js
or
dec
rcrl
mov
sbbl
test
scas
outsb
pop
xlat
and
rcll
add
int3
add
adcb
mov
sbb
jmp
xchg
mov
adc
mov
hlt
adc
push
mov
or
xchg
imul
sti
scas
xor
or
js
inc
popf
push
fisttps
sbb
es
arpl
in
cmp
or
repz
cwtl
adc
push
rorb
fsts
sbb
aas
jl
outsl
inc
popf
call
cmp
sub
popl
int
inc
dec
cmpl
mov
cmp
sbb
and
pop
call
adc
push
insl
in
jl
sub
sbb
scas
in
adc
push
je
and
sahf
mov
mov
mulb
lock
mov
jno
sub
inc
sbbl
and
xor
scas
sbb
mov
loope
mov
jmp
ljmp
out
dec
subb
nop

jne
cltd
sub
cmp
pop
mull
inc
adc
out
int3
stc
test
(bad)
sub
addl
xchg
imul
or
gs
mov
add
repz
ja
jle
(bad)
clc
pop
insl
sahf
mov
inc
out
inc
aas
adc
xor
mov
inc
int3
and
or
or
test
mov
xlat
insb
(bad)
pop
fdivrl
jno
push
test
pop
jnp
cli
jb
ret
pop
push
popf
xchg
test
out
jbe
pop
or
mov
aaa
push
add
aad
sub
pushf
stc
cs
data16
mov
outsl
ds
aas
or
mov
jno
(bad)
mov
dec
push
cmp
pop
out
dec
sbb
out
inc
add
inc
sub
in
cmc
imul
data16
sahf
xlat
cmc
nop

jg
ljmp
cmc
inc
aad
lcall
lods
jmp
stos
repnz
jne
inc
push
sub
push
jbe
test
mov
fildll
lods
cmp
or
pop
loopne
pushf
(bad)
scas
xor
xlat
das
cmp
nop

int3
andl
enter
mov
jl
shll
and
lret
or
call
cmc
arpl
jge
xchg
in
cltd
out
jne
jo
(bad)
stos
xor
arpl
popa
loop
leave
aam
adc
dec
jge
test
in
scas
rcrb
or
xor
clc
or
sub
dec
bound
pop
lcall
daa
adc
ja
insb
xchg
aad
dec
sub
xchg
shl
xor
in
outsb
lods
mov
add
fsubr
insl
lret
push
inc
xor
fs
stos
push
mov
test
pusha
cmp
insl
xchg
movsb
jecxz
test
jno
(bad)
lcall
xchg
mov
cwtl
sbb
fstps
and
cmp
sahf
shr
inc
push
mov
out
fs
mov
ret
push
scas
jae
or
inc
cmpsb
mov
cs
pop
movb
dec
dec
sbb
sbb
pop
ret
dec
dec
push
sbb
inc
mov
xchg
ss
mov
fcmovne
jecxz
jne
sbb
bound
push
inc
inc
add
pop
fadd
das
mov
or
dec
xor
loopw
xor
sub
mov
xchg
enter
lret
imul
xor
fldenv
(bad)
es
js
in
add
mov
xor
mov
in
in
leave
push
out
fstps
fwait

cmp
lret
movsl
cmp
ret
push
jns
and
(bad)
icebp
cs
xchg
mov
cmc
popf
push
orb
lret
imul
mov
lea
xchg
cli
pop
popf
jnp
outsb
orb
cmpsl
add
stc
fdivl
ret
jns
dec
outsb
push
mov
sub
shr
cmp
pop
outsl
fmulp
or
das
ljmp
lret
and
pop
jb
enter
js
(bad)
movsl
jbe
push
cwtl
fs
inc
push
ficomps
pusha
sbb
in
sub
dec
into
inc
fsub
lahf
aaa
fisubl
push
pop
or
fimull
xor
popl
mov
adc
xchg
mov
in
pop
daa
mov
fnstcw
inc
or
xor
popf
mov
in
adc
pop
lds
daa
fwait

mov
xchg
mov
mov
dec
stc
bound
jo
add
adc
mov
adc
push
push
cmpsb
cmp
sarl
inc
mov
mov
inc
mov
clc
push
lcall
nop

data16
mov
outsb
fdivs
scas
fsts
sub
inc
and
addr16
call
orb
push
or
and
mov
xchg
xchg
add
(bad)
and
out
es
xchg
imul
xor
out
xorb
xor
mov
add
aad
popf
into
add
push
fmuls
or
gs
adc
pop
lock
mov
pop
(bad)
frndint
adc
fstpt
inc
xchg
mov
inc
sbb
push
sbb
jmp
clc
sahf
lods
movsb
sub
(bad)
dec
adc
popa
cwtl
cltd
sbb
ret
adc
mov
pop
jge
mov
rorl
daa
xorb
push
les
stos
jmp
and
dec
mov
into
loop
add
jmp
fisubl
cmp
xchg
inc
push
js
insl
les
in
adc
mov
pop
movsb
test
out
test
or
(bad)
cmp
inc
push
xchg
push
popf
adc
clc
cld
sub
insb
lret
or
sbb
lods
or
pushf
popf
and
mov
cltd
scas
fwait

xchg
nop

jp
repnz
jno
sbb
mov
or
(bad)
iret
out
push
fistps
inc
test
cmp
adc
insb
pop
sahf
and
or
cltd
lods
mov
mov
int3
push
mov
pop
je
test
xchg
lods
pop
sub
pop
sahf
xor
sub
push
xchg
fidivrs
adc
dec
pop
mov
adc
lea
ljmp
stos
popa
dec
pop
cmpsb
aad
fcmovne
lods
scas
in
or
jle
fadds
out
lea
mov
xchg
mov
pop
shrb
xor
aad
(bad)
jb
loopne
add
stos
add
daa
push
cmpsb
clc
iret
adc
shrb
cli
xchg
sub
mov
dec
(bad)
xor
imul
or
negl
and
xchg
inc
pushf
xor
bound
jo
jns
loope
arpl
in
and
adc
fwait

cmpsb
lods
scas
jo
ret
cld
lods
add
iret
add
dec
aaa
xor
ljmp
out
test
xor
idivl
fidivrs
pop
(bad)
outsb
mov
aaa
pop
jmp
sub
dec
movsl
call
mov
xor
push
xor
push
jns
mov
nop

sub
lret
xchg
jp
inc
xchg
lret
jle
lret
jle
iret
sbb
imul
xchg
dec
mov
cmp
jns
jae
xchg
mov
adc
mov
leave
test
and
fidivl
pop
xchg
jbe
pop
mov
push
insl
repz
xor
add
cmpsb
stos
mov
add
cmc
add
test
(bad)
jmp
(bad)
push
pop
jo
jae
bound
out
imul
xor
sbb
pop
inc
setne
imul
mov
lock
cld
ss
mov
xor
or
cmp
(bad)
mov
mov
mov
mov
pop
mov
hlt
xchg
and
lahf
or
jne
ds
(bad)
adc
mov
test
stos
outsl
movsb
dec
movsb
(bad)
aam
cmp
push
lcall
mov
push
outsb
mov
cmc
jp
scas
adcl
out
jo
pop
sti
jl
inc
jecxz
aas
in
cld
jae
repz
scas
mov
pop
jle
push
out
jnp,pt
mov
bound
sti
push
pop
das
out
lahf
dec
arpl
xchg
pop
loope
inc
inc
inc
and
jecxz
adc
mov
aad
cmpsb
jns
ret
insb
vmread
mov
es
or
rcll
sub
mov
push
out
(bad)
and
ret
jbe
sahf
loope
inc
ljmp
cld
or
out
ss
or
std
mov
(bad)
mov
mov
mov
mov
mov
insl
cmp
cmp
(bad)
push
iret
lods
scas
pop
movsl
lds
adc
notl
aad
xchg
repnz
test
jne
aas
mov
(bad)
fstps
cld
pop
inc
ds
sar
pop
xor
cld
loopne
pop
iret
(bad)
fsub
dec
xchg
adc
jae
js
add
xor
sbb
mov
add
cmc
fcmovu
pusha
rol
or
mov
add
sub
sti
jl
mov
es
cmp
inc
dec
mov
bound
cmp
aaa
sub
push
add
adc
das
into
(bad)
aam
cmp
into
jl
fldt
sbb
out
in
inc
dec
adc
inc
sbb
je
and
sub
inc
mov
testl
mov
jge
int3
jns
pextrw
inc
pop
jb
(bad)
insl
pop
rorb
pop
mov
(bad)

pusha
pop
sti
(bad)
cmp
and
inc
cwtl
dec
dec
loope
xchg
inc
push
xor
jle
out
repz
sub
jmp
fwait

inc
adc
movsl
cmp
mov
gs
lret
dec
mov
add
mov
xor
les
xor
inc
jb
movsb
jg
mov
and
cld
in
aaa
arpl
mov
xchg
xchg
fldenv
lret
dec
clc
cmpb
pop
pop
popa
das
sub
sbb
int3
mov
cmp
fistpll
add
nop

mov
mov
xchg
sbb
or
lods
xchg
pop
loop
lret
pop
fildl
push
aam
dec
imul
push
or
(bad)
stos
or
andl
cmp
jbe
lahf
outsb
lea
repz
sbb
adc
pop
push
adc
mov
sbb
xlat
aam
jb
inc
pop
sbb
adc
cmp
mov
or
enter
mov
popf
(bad)
data16
in
mov
push
lock
mov
divl
sti
xchg
sbb
(bad)
fistps
daa
mov
out
add
outsl
sbb
push
or
mov
inc
fsub
mov
push
jge
lret
mov
or
push
out
xor
mov
loope
scas
cmpb
js
jnp
inc
pop
jbe
mov
aaa
adc
fs
aam
xor
push
cltd
and
mov
inc
mov
outsl
pop
mov
in
xchg
repz
push
mov
(bad)
dec
lods
dec
mov
inc
incl
xchg
(bad)
divl
(bad)

shlb
(bad)
xor
fiaddl
and
in
(bad)
ds
dec
lods
call
mov
int
xor
push
xor
jmp
subb
in
dec
mov
mov
sahf
orl
pushf
push
mov
jbe
pop
fnstsw
push
lock
sbb
pop
sbb
in
xor
sbb
outsl
lds
dec
stos
lods
andl
xchg
loopne
or
xor
push
mov
lds
int3
jmp
test
test
lods
out
es
ss
pop
iret
shlb
stc
add
sbb
or
pop
mov
lods
pop
dec
loop
shld
ret
dec
ljmp
outsb
mov
inc
cmp
ljmp
inc
xchg
mov
les
add
push
aaa
push
mov
pop
add
in
or
push
jg
leave
mov
out
int3
jb
dec
lock
xchg
in
lret
jae
push
xchg
xor
cmp
lcall
mov
mov
mov
mov
mov
daa
mov
lea
mov
les
nop

dec
adc
int
pop
mov
pop
fucomi
rorl
add
xchg
xchg
add
inc
sbb
adc
jl
movsl
dec
xor
dec
jp
pop
and
out
jp
cwtl
bound
cmp
je
and
les
rclb
popf
cs
mov
cs
ljmp
add
sub
test
adc
push
cmp
or
andl
mov
hlt
mov
iret
into
scas
test
mov
gs
hlt
add
int
(bad)
and
mov
jb
aas
mov
addb
dec
test
jle
stos
movsb
shrb
fsub
aas
idivl
mov
pop
xor
sub
sti
insb
sub
xor
pop
sub
sbb
cltd
bound
mov
push
push
push
inc
(bad)
jne
pop
insb
push
sbb
aam
cmp
and
sbb
test
clc
mov
lret
loopne
out
and
cmpsl
adc
lret
(bad)

daa
inc
push
or
jp,pn
xlat
dec
and
dec
add
dec
mov
add
pop
in
sub
neg
pushf
inc
pop
shrl
mov
lods
adc
push
pop
push
aas
cvtpi2ps
dec
stos
ret
jp
cmpsl
cltd
cmpsb
je
cs
in
pop
mov
cs
fsubs
pop
arpl
mov
jae
imul
pop
sub
pusha
andl
xor
(bad)
hlt
iret
xchg
sbb
sti
dec
movsl
in
add
cwtl
leave
xlat
push
in
jge
or
gs
lcall
ljmp
fisubs
mov
popa
fwait

add
jg
out
nop

and
cmc
insb
out
out
jle
scas
and
mov
(bad)
out
repz
adc
jmp
stc
dec
test
cmp
pop
scas
cmpsb
adc
popf
pop
fldcw
es
jl
out
mov
cmpb
fxch
jb
and
fwait

jp
rcrl
push
sbb
addr16
dec
add
in
sub
mov
mov
scas
inc
add
insb
cmp
pushf
lods
xchg
mov
mov
push
mov
xor
inc
or
js
cmpsl
ja
push
faddl
pop
call
cmp
jo
and
sbb
mov
sub
and
faddp
push
std
xlat
mov
lea
jno
es
pop
pop
mov
icebp
popf
and
js
push
mov
sub
mov
or
jo
sub
dec
mov
das
testb
jo
xlat
pushf
out
cli
push
insl
adc
lods
ljmp
fnstsw
jp
and
in
jae
loope
lea
fwait

xor
xchg
outsb
mov
push
pop
outsb
mov
push
cwtl
clc
dec
mov
adc
ss
pop
in
aas
ret
dec
lret
mov
push
je
mov
sbb
aaa
cld
mov
cmp
jl
fs
and
mov
aad
daa
into
push
sub
scas
and
and
cmc
test
dec
(bad)
leave
jnp
pop
rcr
mov
out
push
mov
popa
cmc
aam
mov
mov
jl
rcll
std
xchg
ss
cli
scas
vandpd
inc
mov
aad
xor
in
in
inc
loop
sbb
mov
mov
dec
addr16
xor
mov
lahf
mov
fnstsw
notl
xchg
sbb
pop
mov
mov
fcompl
fimuls
test
adc
mov
mov
push
mov
sub
subb
lds
dec
mov
cmc
add
mov
int3
dec
pop
xor
aas
orb
sbb
sahf
push
in
enter
adc
ret
sbb
nop

loopne
mov
mov
cmp
jl
stos
aad
bound
add
mov
orb
mov
(bad)
loopne
lret
ret
daa
js
mov
shr
es
imull
pop
and
jno
daa
mov
mov
sbb
ja
loopne
xchg
inc
and
(bad)
stos
xor
dec
inc
dec
sbb
imul
nop

sub
jp
pushw
cmp
arpl
fadds
cmp
out
mov
xor
and
cwtl
mov
imul
js
xor
out
or
aas
pop
movsb
mov
adc
mov
pop
addr16
mov
sub
ss
divb
cmp
xor
testb
stos
xchg
push
cmpsb
push
mov
mov
js
push
xchg
mov
adc
in
dec
jns
mov
jp
sub
inc
scas
pop
sbb
inc
out
dec
add
cmc
and
add
mov
sub
xchg
sub
or
adc
pop
scas
xchg
inc
and
sbb
addb
imull
fs
sub
xchg
daa
sbb
push
lock
add
in
int
sub
adc
cmp
pop
jge
push
fdivr
inc
mov
mov
xchg
mov
fbstp
mov
mov
adc
mov
call
test
jmp
lahf
ret
or
outsb
popf
in
xor
xor
shlb
adc
fs
fsubl
mov
fidivl
dec
in
dec
out
dec
jmp
xchg
sbb
and
mov
iret
lock
cmpsb
sbb
int3
scas
sbb
je
mov
sbb
outsb
jns
push
into
iret
or
add
stos
cld
insl
jp
scas
xchg
fbld
pop
(bad)
cwtl
mov
aad
ds
sbb
mov
mov
xor
sbb
adc
cmpsb
mov
fwait

ss
test
insb
jp
nop

inc
inc
sbb
in
cmp
out
add
and
stos
shll
cmp
rorl
lret
xlat
loop
adc
daa
stos
idiv
lea
mov
fcompl
outsb
(bad)
mov
adc
ja
cld
add
cmpsb
popf
loope
sub
mov
fcmovbe
mov
push
out
cmp
nop

push
xor
lds
push
cmp
xchg
push
dec
leave
sub
xchg
jnp
cwtl
inc
push
mov
cli
cmc
sub
stos
insb
adc
inc
and
jg
jmp
divl
xchg
int
and
dec
add
aaa
cld
shrb
gs
adc
imul
xchg
xchg
nop

test
fidivl
mov
aaa
mov
xorb
xor
lret
mov
cmp
loope
lret
inc
mov
xor
jecxz
fs
xor
pop
prefetch
or
loope
je
rcr
pop
jnp
popf
pop
and
pop
mov
pop
or
movsb
sbb
pop
adc
lods
adc
sarb
aam
mov
lds
sbb
cmp
leave
push
pop
loop
ret
pop
fiadds
insl
int3
int3
mov
outsb
ja
mov
imul
ficomps
idivl
les
dec
pushf
adc
test
outsl
rclb
mov
mov
xchg
inc
adc
movsb
add
enter
nop

ret
clc
pop
cs
jns
cmp
mov
xor
scas
pusha
test
inc
mov
mov
jg
jp
cmpsl
fdivr
xchg
ljmp
outsb
imul
clc
mov
mov
xchg
lods
mov
lret
daa
cld
les
mov
mov
ret
push
mov
cmp
ficoml
lret
pop
mov
push
cmp
xor
mov
cmp
mov
mov
cmp
imul
icebp
sub
cltd
cmpsl
sbb
and
nop

call
mov
pop
mov
hlt
inc
dec
add
fsub
mov
fidivl
addr16
adc
hlt
adc
push
adc
xor
stos
psubsw
xchg
rclb
sbb
dec
cltd
inc
imul
mov
cwtl
cltd
(bad)
xchg
and
filds
jbe
xor
int
cmp
add
inc
popa
test
push
cmc
sbb
sub
hlt
or
push
lret
fdivl
in
sbb
add
jns
js
jp
in
xor
nop

in
mov
ljmp
fistl
push
fcmovb
in
inc
sbb
dec
test
ss
xor
dec
mov
xlat
cs
push
cwtl
fstl
mov
add
and
lret
daa
pop
inc
lea
aas
jb
cmpb
stos
mov
lcall
sub
aas
mov
inc
xchg
push
pop
mov
pop
cmp
cs
sahf
in
(bad)
inc
mov
mov
dec
leave
scas
and
xchg
xor
ret
sbb
sbb
xor
mov
add
fistpll
(bad)
sub
xor
dec
adc
pop
subl
out
fbld
cwtl
xchg
and
out
es
cmpsl
add
dec
js
aad
cmp
arpl
sub
test
stc
mov
movb
mov
test
mov
or
cwtl
(bad)

gs
mov
test
pop
mov
or
imul
cmp
jns
fldcw
inc
gs
fxch
out
out
mov
add
or
xchg
xor
cmp
out
dec
arpl
mov
stos
loop
cltd
sbbb
add
sub
js
mov
test
dec
jge
call
inc
xlat
sbb
lret
and
pushf
dec
jns
repnz
push
or
cmp
jbe
mov
sub
adc
fistpl
test
xor
add
mov
jbe
mov
lods
dec
dec
mov
shlb
add
daa
cwtl
inc
cmp
jnp
inc
mov
dec
add
jle
imul
add
rcrb
inc
bound
stos
ret
fsubs
jp
xchg
cmp
mov
fidivs
mov
stos
sbb
mov
rcll
jbe
nop

push
mov
sarb
sarb
sub
addl
inc
pushf
testb
inc
xchg
lds
test
sub
iret
pop
jns
cmp
(bad)
into
lds
shr
cmp
mov
test
mov
clc
inc
mov
aas
xor
aaa
and
imul
imul
ret
adc
xor
lcall
add
pop
repnz
aam
sbb
inc
nop

xlat
in
test
or
adc
(bad)
cmp
pop
das
bound
adc
and
(bad)
mov
jg
int3
mov
mov
cmpb
adc
adc
cmpsl
in
sub
dec
push
vpaddusb
sub
cli
leave
fwait

or
inc
stc
push
sub
cs
cmc
adc
lret
push
movsl
pop
push
imul
xchg
shlb
insb
movsb
movsb
out
dec
lock
in
jb
lret
std
cmpsl
and
push
add
pop
cmp
cmp
cmp
lcall
or
pushf
push
fmulp
pop
aam
stc
dec
cs
cs
mov
cmpw
push
test
push
ror
aas
cmpsb
fstpt
mov
mov
(bad)
push
inc
lret
jecxz
mov
mov
sub
push
add
and
cwtl
push
jl
clc
sub
jnp
mov
out
mov
add
xchg
add
push
sbb
in
xchg
sbb
xor
xchg
cmp
or
mov
inc
loope
(bad)
xlat
inc
inc
dec
stos
adc
shl
lahf
add
loope
outsl
jo
stos
or
mov
or
loope
xlat
jmp
std
mov
and
cli
and
lods
pop
pushf
mov
and
fcomi
shl
inc
in
inc
adc
scas
dec
or
out
iret
out
seta
lcall
xor
or
mov
mov
sbb
arpl
lods
pop
sub
punpckldq
xchg
lods
ret
add
dec
dec
mov
cmp
loope
xor
push
hlt
clc
xchg
inc
pop
out
adc
inc
(bad)
outsb
mov
sbb
cmc
adc
cli
mov
test
lcall
adc
pop
jo
sahf
jg
adc
out
icebp
ret
(bad)
jb
and
outsb
push
cmp
ja
inc
push
xor
stos
inc
negb
xor
inc
mov
sbbb
call
scas
jo
mov
roll
adc
and
mov
icebp
pop
sti
xchg
adc
adc
cmpsb
lds
std
inc
mov
loope
pushf
inc
nop

lock
push
inc
mov
pusha
lcall
xor
out
lea
or
cld
dec
push
lock
push
popf
mov
popf
dec
sub
push
xor
sub
test
inc
arpl
xchg
ja
jns
popf
ss
and
mov
xchg
jl
jo
add
adc
push
pop
lods
mov
sub
jge
cltd
lock
invd
adc
adc
lea
mov
adc
imul
xor
jmp
mov
mov
sub
cmp
inc
popf
jmp
(bad)
cld
aam
mov
jl
inc
stc
sbb
shrl
cltd
fdivrs
cmp
sub
xor
adc
push
sbb
cmp
stos
or
outsb
xchg
iret
sbb
iret
in
sbb
inc
sbb
cmp
pusha
popa
push
enter
push
inc
push
bound
call
fsubr
fiaddl
xchg
cwtl
jl
fdecstp
add
lret
dec
stos
inc
das
ret
aas
push
xor
mov
sub
nop

flds
cmpsb
mov
add
movsl
testb
repnz
dec
dec
sahf
push
and
shrb
mov
xorb
pop
mov
mov
fcoms
fisubrs
adc
pop
jmp
push
decb
ficomps
aas
push
lods
mov
adc
sub
imul
mov
push
cmc
jp
cmp
nop

adc
fistl
mov
gs
sub
mov
inc
fsubp
repnz
(bad)
in
loope
xor
or
es
das
in
cmc
jnp
rorl
movsb
mov
cmpsl
xchg
rol
xchg
jl
lods
inc
mov
jnp
mov
pop
xchg
and
stos
outsb
cmp
lret
mov
xchg
and
push
fdivl
pusha
mov
pop
pop
add
int3
jno
inc
test
dec
or
scas
xor
and
(bad)
pop
mov
daa
dec
adc
jle
or
push
sti
or
mov
out
icebp
movsl
push
xchg
mov
sahf
cs
repnz
sub
stos
loope
pop
mov
and
aad
sbb
dec
sub
dec
(bad)
push
xor
ret
mov
adc
pop
or
push
fnstenv
add
addr16
repz
jge
stos
mov
stos
xchg
jecxz
in
cli
scas
loop
xchg
dec
adc
or
stos
mov
dec
fnstsw
aad
daa
mov
push
push
not
dec
push
cs
ljmp
xor
(bad)
les
jnp
add
xor
jl
jmp
lea
push
in
scas
into
jne
les
into
and
lcall
lcall
jl
js
xlat
ljmp
int3
enter
data16
pop
mov
mov
lds
ficomps
mov
xchg
sbb
jo
push
pop
adc
sbb
in
insl
cmp
push
movsb
mov
jo
loop
jl
push
test
icebp
cltd
mov
xchg
inc
or
pop
jbe
mov
stos
and
hlt
movsl
mov
das
rcl
mov
push
mov
loope
sub
std
inc
inc
fs
imul
sub
fists
popa
mov
mov
xchg
sub
sub
cli
lcall
outsl
sub
ret
jl
cmp
rol
xchg
mov
mov
xchg
and
mov
scas
ud1
adc
pop
jbe
fcoml
xor
lahf
setbe
adc
xchg
hlt
cmp
or
scas
out
cmp
notl
pop
adc
cli
lods
arpl
aad
in
push
outsl
int
sbb
sbb
xorb
movsl
lods
movsb
mov
shrb
pop
and
push
or
pop
mov
sbb
loop
std
fisttps
adc
add
cmpsl
cmpsl
jl
xchg
rcl
add
pushf
mov
(bad)
clc
sub
pop
xor
push
shlb
bound
lret
(bad)
hlt
iret
data16
lds
add
pop
inc
data16
stc
fistps
es
adc
ja
sti
cmpsl
xchg
mov
addr16
test
adc
mov
and
lcall
add
std
ret
cmp
dec
sub
xchg
and
push
or
rol
sub
jb
daa
fdiv
add
and
lcall
pop
mov
adc
sarb
popf
add
fldenv
cld
sti
nop

stos
call
gs
dec
dec
push
ret
lret
dec
stos
inc
rorl
icebp
leave
or
jecxz
fdivrl
cmc
cmp
push
stos
icebp
add
js
jbe
add
sub
and
sub
or
lods
and
std
dec
or
dec
in
jns
stos
mov
(bad)
pop
mov
cs
popf
mov
sti
xchg
sbb
xor
cld
mov
push
mov
jle
aaa
cld
cmpsl
pop
pop
fstps
das
lods
subl
(bad)
xor
rcr
(bad)
push
mov
xchg
pusha
jno
cmp
cltd
mov
jbe
outsl
jmp
push
push
xor
push
inc
pusha
pop
xor
in
js
lock
or
enter
popf
cmp
scas
sbb
and
sub
lock
and
insb
mov
imul
pop
pop
push
dec
or
cwtl
add
vunpcklps
fldl
imul
pop
mov
jge
mov
dec
dec
imul
or
subl
sub
fsubrl
aad
std
stos
testb
sbb
xor
mov
jmp
jne
jp
push
subl
pop
nop

bts
sbb
push
push
jno
cmp
stos
mov
fdivs
cmp
rorl
js
cmp
inc
mov
sub
popa
hlt
pop
call
jecxz
pop
or
cmp
out
cmp
xchg
inc
cmpsb
test
jno
adc
dec
popa
adc
inc
pop
subb
ss
loope
ficomps
(bad)
sti
outsb
insb
cltd
dec
inc
stos
hlt
push
imul
div
pop
in
mov
jmp
lock
cmp
and
push
movsb
xor
lahf
pushl
adc
scas
fmulp
(bad)
cmpsl
mov
cmp
aas
sbb
mov
call
imul
outsb
int
mov
int
and
in
xchg
sub
test
mov
(bad)
std
xchg
lock
jno
and
push
test
outsb
sbb
mov
subb
ss
ja
cmp
dec
dec
mov
ret
aam
ret
mov
push
out
mov
stc
push
aam
jmp
dec
xchg
ss
pop
dec
push
add
dec
mov
mull
(bad)

inc
lret
jmp
dec
and
sbb
in
adc
pop
sub
and
incl
add
(bad)
push
add
loop
or
fstl
jae
pop
push
add
ret
mov
xor
mov
adc
pop
lcall
adcl
xlat
sti
out
push
or
mov
nop

shr
pop
xor
cmp
adc
pop
fidivrs
xchg
xor
adc
data16
out
sub
mov
sbb
aad
jnp
cmp
(bad)
(bad)
xor
mov
lret
(bad)
adc
push
dec
jecxz
les
mov
inc
negl
dec
in
push
addr16
inc
xchg
das
das
sbb
or
push
dec
insl
push
xchg
jge
mov
push
les
xchg
divl
rcll
pmullw
imul
inc
inc
bound
mov
daa
cmpsl
adc
cmp
mov
gs
add
fildl
push
mov
test
xchg
jbe
adc
dec
mov
fbld
test
sub
mov
into
rcrb
sub
sbb
inc
outsb
flds
(bad)
sub
fs
cltd
insl
pop
repnz
jb
movb
into
movsb
pop
js
rcrb
jns
xchg
movsb
lahf
scas
push
rcl
xchg
idivb
loope
rcll
in
push
push
loope
leave
sub
out
idivb
stos
xchg
push
insl
insl
mov
loope
xchg
mov
sbb
mov
out
stos
push
imul
ljmp
sbb
jl
pop
subl
cmp
cs
repnz
pop
mov
cltd
nop

dec
cltd
xchg
loop
fwait

jns
idivb
jmp
leave
enter
dec
jl
push
fildll
cmp
adc
sbb
push
iret
xorb
lret
mov
mov
(bad)
mov
pop
mov
pop
xchg
(bad)
xor
sub
rcll
jno
xor
mov
sarl
test
mov
lods
pushf
lods
dec
or
add
shlb
in
push
fsts
loope
cltd
inc
push
xor
lahf
aam
sub
jnp
das
testl
inc
jnp
into
std
pop
dec
or
stc
bound
pusha
ljmp
pusha
data16
fnclex
adc
xor
(bad)
mov
cli
test
xchg
jb
outsl
jle
add
scas
idivb
mov
int
pusha
(bad)
(bad)
adc
(bad)
and
sbb
in
lods
cmp
pop
stos
inc
sub
movsl
inc
push
push
in
jp
sub
adc
adc
lret
shrb
sub
jg
addl
movsb
mov
xor
xor
notl
xchg
jns
scas
cmc
popf
sbb
mov
hlt
fcomp
cmpl
scas
push
pop
cmp
shrl
mov
jmp
notl
nop

xchg
cs
sub
jmp
xchg
loop
scas
fbstp
pop
out
dec
shlb
loopne
fistl
xor
fdivl
cmp
xchg
fld
ds
pop
es
in
cwtl
cmp
jmp
push
lret
sbb
ficomps
repnz
out
pushf
flds
jns
bound
fistpl
jae
iret
(bad)
cmp
push
insl
fidivrs
inc
xor
and
(bad)
jo
mov
movsl
or
clc
arpl
adc
jae
and
jp
imul
mov
and
ss
movsb
or
fists
pushf
or
pop
fs
and
fsubrp
pop
pop
sbb
out
(bad)
mov
mov
pushf
ja
clc
inc
jg
mov
(bad)
mov
lahf
pop
xchg
mov
fildll
data16
addr16
scas
jp
xchg
add
xor
xorb
stos
or
mov
or
mov
xchg
gs
imul
dec
std
out
pop
or
xchg
xor
les
mov
jmp
or
nop

mov
push
scas
ss
cmp
out
dec
push
je
adc
sub
sub
cmc
loopne
ja
ds
loopne
mov
sbb
dec
test
arpl
stos
andb
es
ljmp
sbb
hlt
movsb
xchg
repnz
filds
xchg
inc
mov
decb
pop
jo
or
push
or
(bad)
(bad)
jge
(bad)
stos
insl
mov
(bad)
out
and
xchg
xchg
pop
pop
xchg
call
hlt
push
sbb
gs
cmp
pop
adc
mov
int3
mov
lcall
add
addl
jp
xchg
pop
mov
popf
cli
cmp
(bad)
xor
push
lds
jmp
add
lret
(bad)
test
(bad)
pop
mov
adc
xor
xor
lods
jo
fwait

mov
jp
shlb
lea
push
ja
pusha
adc
in
and
shr
adc
sbb
push
sbb
add
push
jmp
cmp
cmpps
or
(bad)
je
xchg
adc
repnz
mov
loope
jl
insl
add
cmp
xor
fisubrl
outsl
fwait

cltd
mov
test
aad
pop
pop
ljmp
mov
leave
lock
and
sbb
xor
repnz
insl
fiadds
call
sbb
dec
inc
inc
jbe
xor
aad
jle
jb
das
pushf
test
xor
push
fistpll
push
mov
lcall
pop
push
stos
jb
jl
enter
sarb
cmpsl
cmp
and
imull
ljmp
mov
dec
dec
(bad)
out
insb
sub
or
int3
aad
push
inc
cmp
xchg
in
stc
fiaddl
imul
imulb
push
fs
pusha
dec
and
mov
inc
xor
bound
enter
jl
jno
mov
gs
xchg
stos
xchg
aam
or
in
cli
fwait

lds
and
xchg
xor
jmp
data16
out
out
pop
lret
and
cli
add
out
mov
mov
push
rclb
daa
mov
push
scas
in
testb
gs
nop

xchg
lods
pop
cmp
push
sub
inc
ss
mov
imul
aas
lahf
xlat
push
cmc
enter
inc
aas
(bad)
(bad)
sbb
ss
mov
push
xor
imul
call
mov
icebp
in
ljmp
mov
cwtl
mov
int
mov
movsb
xor
inc
outsb
cmpsb
sub
adc
push
out
pop
inc
stc
inc
into
aam
mov
(bad)
lea
xor
and
mov
lods
ror
and
repz
jp
cmp
mov
pop
fimull
inc
add
test
inc
inc
idiv
push
sbb
(bad)
and
or
loop
rcl
cmp
mov
(bad)
fdivrl
movsb
hlt
sbb
cmp
mov
push
cmpsb
mov
pusha
sub
add
sti
movsb
iret
mov
cmpsb
or
dec
push
push
xchg
fs
cmp
or
lret
pop
cmp
inc
mov
push
adc
mov
adc
imul
aam
mov
jne
mov
or
lahf
shll
mov
pop
cmp
fsubp
push
inc
ljmp
inc
xor
sbb
pop
js
pop
xor
bound
jecxz
in
xor
push
xor
dec
ss
mov
pop
mov
pop
rcrb
jne
jne
mov
xor
inc
popa
hlt
push
aad
jno
xor
jmp
gs
fimuls
adc
jle
imul
push
repnz
mov
cltd
inc
sbb
cmp
rclb
mov
(bad)
jl
js
adc
pop
mov
mov
subl
out
dec
(bad)
in
gs
(bad)
push
mov
pop
cmp
insb
rorb
or
xchg
jl
jg
pop
in
mov
int
pop
enter
cmp
lea
add
enter
inc
mov
dec
mov
sub
or
add
sti
js
push
cmp
pop
mov
dec
test
inc
mov
adc
into
ja
loope
and
xchg
shl
outsl
es
xor
inc
in
pop
jmp
mov
orl
in
cld
arpl
mov
pop
xchg
ljmp
pushf
jns
dec
dec
dec
iret
adc
xor
les
push
xchg
dec
jg
jno
mov
inc
in
push
cltd
adc
hlt
loope
ja
out
mov
push
sub
test
jne
xchg
ret
sbb
xchg
test
pop
stos
pavgb
jno
pop
cmp
inc
inc
loope
stos
imul
psrlq
and
je
mov
test
add
mov
xor
cmp
std
mov
out
cmp
dec
xchg
cmc
les
daa
cmpsl
xlat
mov
lea
dec
sub
jl
pop
sahf
xchg
fcmovb
or
repnz
in
mov
aad
sar
mov
mov
out
jnp
in
fnstenv
out
sub
(bad)
xor
cmp
lods
movsl
sub
sub
dec
les
and
xchg
xor
xor
lcall
dec
add
fisubrs
fidivs
mov
push
lods
popa
inc
xchg
(bad)

arpl
dec
std
sahf
stos
popa
(bad)
aad
in
jg
add
sub
mov
popf
jge
flds
aad
lods
and
and
jp
or
mov
(bad)
dec
test
and
cmp
mov
xchg
ja
sti
xor
in
sub
add
mov
ret
adc
mov
jo
lods
mov
add
(bad)
js
loopne
mov
xor
sbb
jl
add
movl
shll
in
sub
adc
clc
mov
inc
adc
inc
sbb
pop
xor
enter
cli
push
cltd
mov
sub
jle
sbb
test
aad
adc
ret
sub
inc
std
je
test
out
shlb
fdivp
or
sbbl
cmp
cmp
pushf
push
mov
lods
in
push
and
push
imull
sub
push
sahf
mov
imul
mov
mov
jno
shl
pusha
or
xor
std
je
lahf
aam
lret
inc
inc
mov
out
lods
push
mov
mov
fldcw
sbb
jno
xor
fistpl
xchg
fucomp
vminps
fisubl
lods
shrl
lcall
push
ficoml
aaa
inc
push
push
addb
inc
jne
or
jb
aaa
fidivrs
decl
jno
mov
(bad)
cmp
mov
clc
mov
jmp
inc
insb
pop
aaa
sub
cmp
jnp
push
xchg
mov
add
lcall
lods
jnp
pop
and
sub
jecxz
cmp
cltd
out
sub
push
xchg
pop
xchg
and
inc
pop
fisubrl
int
fistpll
xor
mov
xor
xchg
adc
popf
shll
std
xchg
mov
lret
loope
aam
pop
gs
hlt
push
lcall
pop
pop
mov
imul
std
ds
aad
push
shll
rdmsr
sbb
dec
bound
jbe
xor
push
loopne
mov
mov
out
sti
adcl
in
ficomps
cmpb
xchg
fcom
sbb
jp
loopne
xlat
sbbl
cld
xor
xchg
insb
popf
cmp
jne
sbb
sub
jmp
mov
es
mov
adc
fldenv
ja
mov
(bad)
into
or
nop

es
xor
ret
inc
xlat
cmc
mov
ret
dec
cmp
ljmp
mov
setb
shlb
jbe
popa
adc
(bad)
es
cltd
mov
pop
push
dec
and
mov
or
int
xchg
and
cmp
xlat
inc
xchg
test
sub
(bad)
mov
cltd
inc
fldl2e
inc
add
sub
and
js
inc
es
rcrl
add
sti
mov
xor
idivb
jno
cs
mov
add
test
std
sub
(bad)
loop
cmpsb
sbb
shrb
idivb
adc
mov
sti
ret
push
mov
mov
das
xchg
ljmp
(bad)
sbb
push
push
push
and
jns
xchg
adc
push
inc
les
stc
mov
mov
jns
subl
adc
dec
cmpl
movsl
cmp
stos
fisttpl
out
sti
sbb
jecxz
lcall
jecxz
pop
add
push
(bad)
fadd
aad
sbb
out
cs
xchg
xchg
aad
xchg
movsb
cmp
in
lds
cmpsb
mov
fdivrp
shrb
fimull
adc
pop
or
outsl
addl
and
xchg
mov
leave
jecxz
jp
push
mov
test
out
pop
xchg
push
xchg
cld
data16
divb
repnz
dec
jmp
sbb
out
mov
inc
lret
scas
out
fists
mov
(bad)
loope
cli
outsb
imul
lret
xchg
push
xchg
inc
test
mov
jne
test
pusha
mov
insb
les
push
jo
fwait

mov
mov
insl
adc
mov
push
xlat
xchg
je
push
clc
lcall
cs
mov
mov
and
pop
xor
shlb
mov
lret
push
stos
add
sbb
mov
mov
mov
lock
ret
sub
cmp
jno
imul
xlat
in
cmp
in
pusha
mov
xor
push
xchg
hlt
lods
pop
repz
inc
sbb
leave
lahf
pop
and
aam
inc
insb
jo
push
bound
gs
mov
(bad)
fnsave
mov
inc
ljmp
mov
cli
xor
mov
push
aaa
fstpl
icebp
or
push
(bad)
jp
inc
out
leave
into
lahf
test
or
stos
sbb
add
xchg
pop
test
lcall
andb
mov
pop
lods
in
fisttps
push
fs
inc
cmpsb
sbb
ret
lea
inc
inc
arpl
adc
outsb
pushf
iret
sub
jle
jp
test
adc
call
test
movsl
mov
cs
mov
jnp
pop
xor
push
pop
fsts
outsl
sub
icebp
pusha
(bad)
mov
mov
adc
xor
sbb
push
jge
push
mov
xchg
inc
xchg
movsl
mov
lea
stc
jp
mov
lods
bound
push
cwtl
insb
mov
mov
arpl
cs
(bad)
adcl
adc
add
and
inc
gs
mov
std
jno
inc
or
or
and
pop
ljmp
fwait

pop
es
ds
out
xorl
les
xchg
push
xorb
pop
loopne
or
lcall
jecxz
bound
out
pop
leave
fsubrl
jmp
cmpsb
inc
es
or
scas
and
push
cli
jmp
and
push
dec
inc
cwtl
cmpsl
jge
xchg
(bad)
lock
mov
lcall
sub
mov
icebp
lcall
loope
mov
xorl
mov
loopne
imul
xchg
mov
das
bound
call
fwait

dec
cmp
push
je
neg
int
das
sbb
(bad)
xor
pop
mov
mov
jmp
pop
push
or
add
xlat
in
pushf
jecxz
xchg
adc
scas
xorl
out
mov
fldl
ds
in
fs
jae
in
cwtl
inc
enter
fdivr
hlt
pop
jecxz
movsb
push
or
divl
test
jmp
push
sti
shl
inc
inc
lret
test
mov
sti
fnstenv
cmp
test
adc
fnstcw
pop
inc
arpl
movsl
sbb
out
shrl
jl
or
pop
loope
push
cwtl
mov
xchg
jns
inc
pop
sbb
jo
adc
inc
shll
iret
adcb
or
sbb
or
jno
jle
std
lds
dec
(bad)
imul
jnp
lods
mov
or
or
jmp
adc
cmp
cmpsb
ret
stos
fwait

imul
cmpsl
and
push
icebp
ss
stos
mov
xchg
faddp
arpl
push
pop
push
and
movsl
adc
and
mov
mov
shll
cmp
lret
into
or
mov
sbb
pushf
sub
push
push
mov
rolb
jnp
inc
push
ficoms
cmp
jg
stc
cmp
cmp
leave
mov
push
push
cs
out
(bad)
and
jp
and
in
adc
inc
pop
mov
popf
mov
test
loope
or
pushf
push
push
dec
call
mov
xor
stos
cmp
movb
pop
iret
push
sbb
inc
out
push
push
cmpb
push
mov
sub
hlt
pop
cmp
loopne
(bad)
mov
std
ss
pusha
sbb
lods
mov
loope
punpckhwd
pop
dec
sub
fidivrs
popa
xorb
mov
xor
xlat
shll
fdivr
jne
adc
arpl
xor
xor
pushf
lock
rcrl
out
(bad)
fcoms
and
insl
cmpl
ss
scas
mov
aaa
pop
arpl
push
add
in
js
daa
gs
inc
sbbl
cmc
sbb
xorb
mov
xchg
lahf
inc
mov
cwtl
icebp
push
mov
lret
movsl
mov
dec
jo
xchg
iret
mov
sbb
aaa
add
fsubl
ds
push
jo
jns
shll
inc
or
cmpsl
adc
mov
add
jo
ret
push
jns
mov
into
stc
mov
pop
sub
out
xor
testl
(bad)
jns
and
sbb
adc
pusha
dec
imul
sbb
mov
dec
test
adc
leave
cmp
hlt
xchg
or
rorl
or
icebp
sbb
pop
ss
shlb
pop
(bad)

push
push
push
mov
jno
mov
adcl
outsl
(bad)
loope
dec
add
mov
pop
pop
mov
cmpsl
ljmp
stc
pushf
fiaddl
mov
xor
sahf
sub
out
sbb
js
lret
in
and
(bad)
sbb
mov
sub
jae
pushf
mov
push
cmc
mov
fs
and
enter
jae
sub
ret
xor
jge
xchg
nop

add
mov
xchg
in
leave
repz
popa
push
xor
push
xor
notl
adc
push
push
sti
movsb
xor
inc
cmp
cmp
roll
pop
jne
aam
(bad)
loopne
sub
jo
mov
or
aad
(bad)
jmp
adc
popf
mov
fnsave
mov
mov
imul
fs
sbb
imul
incl
adc
aad
xchg
lods
int
inc
pop
out
pop
mov
add
stos
xchg
push
pop
push
mov
pop
dec
mov
or
jg
fstpl
and
xor
jne
std
mov
std
enter
fidivs
jmp
dec
movsl
add
rorb
mov
adc
jns
stos
sti
aad
push
mov
addr16
sti
mov
sbb
xor
ja
sbb
pop
inc
leave
aad
outsl
aaa
lock
dec
lods
mov
movsl
and
xchg
push
jmp
and
outsb
nop

jne
lock
xchg
xor
jmp
sbb
aaa
lret
push
xor
inc
sub
(bad)
mov
jle
lods
xchg
adc
xchg
leave
scas
inc
out
jae
stc
rcrl
clc
jno
jmp
fildl
lcall
mov
jge
cs
bound
dec
sti
imull
out
pop
or
sub
lds
inc
cmp
adc
and
loopne
movsl
xor
or
push
jle
push
or
adc
sub
sbb
insb
mov
cmp
and
fistps
sbb
jmp
(bad)
sbb
out
sub
(bad)
sbb
inc
sbb
rcr
or
das
int
jg
xchg
stos
sbb
xorb
xchg
in
subb
adc
imul
idiv
js
das
in
pop
mov
les
jnp
or
out
xor
test
adc
insl
insl
xor
jecxz
adc
xchg
addb
in
clc
cwtl
jmp
mov
movsl
or
mov
es
in
sub
mov
adc
testb
scas
or
mov
pop
mov
scas
ret
inc
stos
and
inc
lcall
nop

jl
imull
fists
scas
lcall
add
jbe
cmp
sbb
stc
test
fucom
nop

add
imul
sbb
jns
jnp
inc
les
cltd
adc
dec
shlb
jns
and
add
bound
(bad)
mov
(bad)
dec
mov
or
and
out
lret
cmpb
sub
lea
imul
call
adc
leave
xchg
in
pop
fcmovne
mov
inc
test
mov
pushf
pop
xchg
sbb
aad
test
out
dec
sbb
stc
xchg
adc
sahf
sbb
into
sub
jge
add
cmp
loopne
adc
jl
mov
loopne
dec
js
ficompl
jns
xorl
xchg
fwait

ret
push
sbb
dec
nopl
inc
mov
lea
mov
xor
ja
movsb
lret
sbb
adc
out
testl
adc
xorl
roll
scas
cs
push
pop
cmp
repnz
movsl
test
push
xchg
and
pusha
and
jl
lret
test
jl
aas
jl
dec
sub
sbb
inc
dec
mov
sbb
and
scas
xchg
mov
xor
xchg
outsb
jo
cld
push
(bad)
fs
stc
bound
(bad)
and
add
pushf
cs
jo
mov
dec
jmp
js
inc
lret
mov
mov
mov
das
sbb
pushf
jne
push
adc
fisubs
or
sbb
mov
and
cmp
hlt
sub
sub
sti
jg
jb
stos
fs
and
sbb
stc
xor
subl
out
or
push
in
repz
fistpl
mov
imul
inc
cmp
mov
addl
adc
dec
xchg
aaa
xor
mov
push
stos
dec
cwtl
or
pop
das
xor
pusha
lcall
add
fdivl
pop
lods
in
call
or
imul
scas
repz
jmp
dec
dec
jns
pop
mov
pop
or
out
dec
push
insl
scas
push
fucomip
fildl
(bad)
test
jne
push
subb
cmpsl
mov
pop
mov
cmp
push
cmpsb
idiv
pop
mov
and
mov
shr
inc
addr16
dec
cs
loop
xorb
add
xchg
pop
inc
and
or
add
loop
mov
mov
inc
mov
mov
xchg
dec
xor
inc
xchg
sahf
jg
adc
icebp
hlt
das
sbb
sub
jecxz
lcall
js
add
mov
mov
sbb
mov
xchg
frstor
or
mov
imul
fwait

mov
sbb
xchg
js
jmp
jl
(bad)
popf
rcll
sahf
rcr
sti
outsl
jbe
popa
and
sbb
popf
int
and
add
xor
rorb
lret
jno
rcll
xchg
popf
fcom
ds
std
push
mov
and
stos
lahf
lahf
mov
orb
sahf
or
pop
lods
xor
int3
pop
test
rclb
stos
scas
inc
dec
into
pop
ljmp
adc
dec
iret
int
pop
jmp
repz
and
dec
add
push
lods
xor
mov
mov
imul
aaa
mov
cmp
int3
mov
sub
push
xor
es
jae
dec
nop

cwtl
mov
cmp
mov
insl
dec
cmpsb
test
(bad)
or
iret
insb
jb
dec
les
cmc
or
and
inc
jae
cltd
addl
sub
int
xchg
(bad)
(bad)
mov
test
push
frstor
fmul
lock
leave
lds
mov
out
cld
cmpsb
arpl
cwtl
xlat
cwtl
sub
ljmp
aas
jo
inc
push
and
insl
mov
mov
rclb
rcll
int
add
adc
fsubrl
in
dec
add
jg
ret
repz
add
push
rorb
orb
add
(bad)
mov
inc
inc
in
cmp
lret
cltd
xor
loop
les
outsb
inc
lods
stc
ljmp
jbe
icebp
xor
mov
scas
movsl
jmp
cmpsl
jne
out
sub
jo
mov
cmp
adc
push
das
lret
ss
orl
movsb
jns
test
cli
add
push
aad
pop
pop
enter
dec
ljmp
and
pop
ss
or
addb
dec
decl
dec
out
and
mov
mov
and
daa
lods
push
adc
and
fwait

pop
outsl
roll
arpl
mov
cmp
popa
mov
ss
xor
bound
mov
(bad)
out
out
jmp
add
xor
leave
xchg
or
jmp
jbe
mov
insb
aad
rcrl
iret
scas
pop
mov
pop
adc
div
mov
rorl
and
mov
xor
daa
gs
pop
mov
and
cld
jmp
jle
mov
in
jno
call
push
scas
adc
jmp
popa
dec
aas
call
(bad)
movsb
pusha
addr16
sbb
sbb
mov
or
sub
scas
into
jbe
das
call
dec
icebp
push
mov
sbb
fcoml
cmc
push
mov
or
mov
test
dec
(bad)
fisubl
in
add
cmp
stos
add
jnp
mov
repnz
outsb
aam
xor
lods
stc
stc
add
adc
test
jge
rclb
cmp
jmp
outsb
pop
jmp
mov
sub
mov
push
gs
and
push
ret
or
sub
xchg
popf
arpl
mov
and
inc
(bad)
clc
orl
fwait

lods
subl
lret
pop
(bad)
fsubl
pop
pop
jo
in
jmp
dec
pop
xor
movsl
jmp
aad
mov
in
popf
jns,pt
xor
stos
add
ljmp
and
push
andb
dec
popa
mov
loope
mov
mov
or
les
jns
mov
inc
outsl
mov
scas
cld
clc
out
ret
jp
orl
testb
lcall
pop
fimull
mov
add
inc
dec
out
outsl
stc
and
and
test
cmp
(bad)

ret
fstpl
mov
(bad)
sahf
or
sub
fs
das
loop
adc
movsl
mov
sub
lcall
cmp
notl
lret
loopne
hlt
xchg
movsb
sub
xor
imul
pop
mov
sbb
outsl
pop
jae
rclb
and
cld
mulb
push
xchg
sbb
cmp
clc
les
xchg
test
xchg
lret
stos
cwtl
data16
dec
outsl
push
mov
add
inc
mov
call
(bad)
and
cmpsb
mov
inc
dec
push
xchg
aam
add
popf
jnp
fiaddl
mov
dec
pop
sti
push
mov
push
mov
ret
xchg
cmpl
inc
mov
pop
ss
jne
test
mov
inc
jle
nop

xor
dec
cmp
mov
adc
inc
test
test
icebp
insl
dec
xlat
and
clc
loopne
dec
dec
scas
or
lcall
xchg
xchg
in
into
add
jo
inc
in
mov
out
int3
repnz
inc
leave
and
in
and
into
inc
scas
adc
shlb
outsl
aaa
mov
in
push
push
ret
cmp
(bad)
xor
out
imul
xorl
fimull
inc
ret
out
mov
or
mov
push
std
fsubl
or
push
sub
gs
mov
push
inc
adcb
adc
sbbl
out
mov
lods
daa
pop
fsubrl
mov
aam
inc
mov
mov
pop
clc
adc
pop
add
inc
inc
jmp
loop
cli
pop
test
xchg
dec
jl
cmpsl
addr16
or
sbb
push
mov
adc
jns
lahf
stos
dec
jb
adc
popa
movsb
or
pop
inc
daa
jecxz
cmc
fwait

xor
xchg
lret
ret
xchg
mov
xor
daa
or
in
pop
xchg
lahf
or
pmaddwd
sub
iret
lret
stc
nop

idiv
push
sbb
sub
addr16
dec
out
mov
push
fucomp
icebp
pop
clc
mov
cmpsl
es
data16
inc
in
shlb
(bad)
fisubrs
xchg
filds
subb
xor
push
mov
xchg
test
pop
or
fnstcw
xor
mov
xchg
inc
mov
data16
daa
xor
bnd
cli
jp
mov
ljmp
stc
scas
fdivrp
sahf
xchg
lcall
cmc
(bad)
jp
std
lock
push
mov
arpl
or
xorb
jle
insl
je
cmc
lea
ret
test
aam
scas
adc
enter
rcrl
adc
aad
(bad)

dec
mov
inc
ret
in
arpl
sub
loop
mov
aad
cli
movsl
cmp
nop

xchg
sarl
or
or
lods
pusha
(bad)
cmp
lds
ss
ja
cld
stc
bound
mov
aas
mov
test
fisubrl
lret
cld
pop
outsb
shl
lock
mov
lahf
cwtl
xchg
je
xchg
bound
mov
pop
hlt
cmp
movsl
push
(bad)
cmpsb
loop
imul
jecxz
adc
inc
rolb
into
xchg
xchg
ja
cmp
sub
jae,pn
out
shll
in
cwtl
subl
out
hlt
sbb
movl
dec
lock
mov
fwait

int3
int3
icebp
mov
out
and
insb
cmp
jmp
inc
xchg
(bad)
and
sub
add
jg
incl
sahf
xor
fmull
out
sbb
mov
jne
fsub
cmc
adcl
mov
xlat
rorb
lcall
xor
adc
out
push
jnp
sbb
or
pop
mov
jo
mov
sbb
insb
mov
movsl
xor
xchg
mov
xchg
jne
inc
sbb
mov
mov
lcall
push
cmpsl
mov
add
cmpordps
mov
lock
mov
push
mov
shll
mov
addr16
jl
mov
xor
(bad)
mov
pop
and
loop
xlat
inc
(bad)
adc
gs
in
push
xor
call
sub
icebp
out
insl
fwait

scas
enter
dec
mov
jbe
ret
test
jae
dec
(bad)

add
sbb
mov
clc
mov
pop
lock
add
add
in
lret
mov
cld
sub
push
mov
dec
lea
dec
mov
or
sbb
stc
mov
cs
std
out
arpl
adcl
bnd
arpl
cmpsl
and
pop
add
pop
jno
fnstcw
daa
push
insl
cltd
cltd
lods
push
aas
push
data16
jg
xor
jns
lcall
or
inc
bound
out
or
imul
cmp
out
mov
(bad)
jmp
inc
stos
mov
out
mov
aas
mov
sub
add
aam
adc
mov
push
add
js
mov
cli
mov
cmc
outsb
repz
pop
or
pop
xchg
andl
loope
mov
iret
push
jo
dec
test
lea
mov
xchg
push
outsb
in
push
add
sub
rcrb
bound
mov
cmp
aam
pop
xor
pop
cmp
cmp
or
fs
cmp
mov
(bad)
imul
scas
lea
test
ljmp
cmp
idivb
xor
shlb
jno
mov
sahf
outsb
jns
and
fimuls
ja
movsb
clc
nop

in
pop
mov
stos
imull
(bad)
lcall
jp
mov
pushf
fstp
lret
push
xchg
pop
in
sbb
stos
and
repz
mov
mov
loopne
fsts
fnsave
inc
inc
lret
xor
mov
jge
imul
mul
test
push
cmp
xchg
stos
mov
icebp
mov
mov
adc
cmp
test
xchg
xchg
(bad)
push
int3
jmp
test
jae
push
pop
sub
xchg
mov
(bad)
jmp
cli
fistps
add
pop
push
xor
or
add
mov
lock
es
xchg
cmp
inc
movsl
(bad)
popa
jnp
pop
stos
inc
je
jp
push
and
and
jecxz
in
sub
mov
jne
sub
pop
adc
xchg
xor
enter
mov
pop
cmpsl
in
mov
mov
dec
push
daa
sahf
test
cmp
shll
scas
(bad)
bound
(bad)

cmp
bound
imul
pop
outsl
pop
push
lods
fistl
jmp
shll
add
cld
push
scas
stos
or
les
call
or
xor
or
cmp
call
push
and
inc
inc
jmp
mov
mov
add
mov
mov
imul
pop
lods
cmpsl
jne
xor
dec
xchg
cltd
pop
pushf
ds
out
js
push
(bad)

add
aad
jns
sti
out
xor
scas
sub
ret
mov
imul
mov
clc
roll
cmp
(bad)
repz
or
pop
sub
xchg
xchg
fwait

add
inc
pop
jmp
dec
adcl
cmpsb
rclb
jecxz
and
mov
and
cmp
movsl
not
jne
lret
adc
movl
scas
das
cmp
jo
adc
fdivrp
addr16
and
in
push
xchg
xor
in
jns
mov
test
add
inc
daa
mov
flds
(bad)
stos
cmpsb
mov
fiaddl
outsl
lea
jb
dec
sub
or
mov
mov
push
mov
adc
adc
mov
sbb
jns
xchg
fcomps
jl
xchg
icebp
fldenv
push
ret
push
pop
pushl
addr16
scas
mov
ds
add
jae
mov
and
ret
jl
pop
shlb
mov
jle
repz
xchg
flds
mov
mul
cmp
xchg
addl
mov
fidivl
hlt
xchg
dec
out
push
push
or
movsb
(bad)
push
jl
cwtl
sbb
adc
lock
and
push
pop
cltd
mov
pop
sub
adc
addr16
pushl
mov
jp
push
movsl
lcall
mov
call
dec
stos
or
outsb
xorl
push
mov
js
loope
in
push
mov
int
jge
mov
in
movsl
inc
outsl
fsubrl
dec
imul
mov
ds
cmpsb
(bad)
(bad)
pop
call
cmp
sub
sbb
jne
lods
inc
add
push
fwait

in
and
adc
jmp
arpl
scas
xchg
movsb
dec
and
les
xchg
out
add
mov
ss
jge
add
mov
cmp
mov
mov
in
(bad)
cmp
jl
lods
xor
sub
repz
pusha
xchg
jns
push
add
xchg
int
rcrb
insb
pop
out
daa
pop
mov
fnsave
or
cld
cmp
repnz
divl
fstpt
(bad)
pop
jb
popa
cmp
adc
cmp
xlat
jno
rorl
xchg
je
movsl
adc
fistl
test
rclb
cmc
push
inc
je
mov
jmp
sbb
add
mov
mov
lea
cmpsl
xchg
mov
dec
mov
test
mov
push
mov
addb
and
mov
adc
jbe
test
inc
xor
test
orl
sahf
sub
inc
inc
cli
mov
dec
popf
cwtl
(bad)
mov
fsqrt
jne
pushf
jg
ds
inc
jge
icebp
add
cld
mov
gs
inc
lret
xchg
mov
pop
dec
inc
inc
aad
jae
fcmovne
cmpsl
mov
in
jecxz
push
mov
xchg
popa
pop
xlat
cmpsb
test
aam
jo
mov
fwait

das
inc
addr16
cmp
add
out
(bad)
lds
dec
lds
jmp
sub
mov
sbb
data16
sbbl
(bad)

inc
adc
cmc
iret
ja
mov
aam
xchg
outsb
jno
cwtl
in
jo
in
push
jno
sub
and
mov
jnp
loope
add
rorb
icebp
pop
mov
pop
sbb
xchg
jae
xor
clc
testl
sbb
mov
or
pop
adc
in
stos
dec
enter
cmc
lock
shrl
out
sbb
lods
out
sub
aad
lret
(bad)
test
fildl
(bad)
and
cmp
mov
and
dec
cmp
lret
adc
xchg
jge
mov
addr16
push
push
inc
popa
and
data16
int3
insb
fcomps
fnstenv
and
testb
scas
and
ja
add
nop

push
and
jmp
or
ljmp
in
pop
pusha
rcl
adc
xchg
inc
xchg
addr16
mov
stos
aas
js
mov
jo
jb
dec
push
nop

xchg
dec
cmpsl
cmp
sub
sahf
or
sbb
and
loope
push
cmp
rol
jl
mov
pushl
rolb
inc
add
(bad)
jmp
sahf
movsb
insl
fisttps
cmc
mov
les
push
loope
inc
loope
jg
mov
push
ljmp
imul
outsb
add
xchg
leave
sti
ljmp
aaa
mov
enter
imulb
mov
ret
(bad)
std
pushf
cmp
pusha
dec
pop
add
adc
pop
(bad)
inc
push
loop
stos
jmp
popf
and
pop
in
sub
cld
aas
imul
and
hlt
ret
aam
inc
jbe
pop
pusha
pop
cmp
fnstenv
xchg
pop
(bad)
repnz
mov
fs
mov
jp
pop
stos
outsl
scas
mov
imul
(bad)
inc
mov
push
jo
(bad)
cmpsl
in
ret
adc
cli
dec
inc
mov
fsubrl
dec
mov
outsl
sbb
rcl
mov
movsl
or
pop
cmp
inc
aas
std
lcall
ljmp
cwtl
aaa
and
loop
dec
cli
repnz
sbb
icebp
sbb
repz
test
xor
or
mov
mov
jg
js
or
pushf
sbb
out
inc
or
(bad)
(bad)
adc
sub
sbb
push
je
test
inc
test
mov
jo
cltd
cmpb
push
mov
jnp
sbb
xor
jae
and
dec
cmp
ja
inc
insb
and
idiv
enter
sahf
jb
fmul
insl
push
and
fisttps
mov
(bad)
cmp
or
sbb
mov
popa
mov
movsl
out
js
jl
lret
sbb
pop
pop
cmp
jge
xor
mov
ret
mov
outsb
das
(bad)
mov
add
add
xchg
sub
ret
push
dec
repz
mov
or
into
cmp
or
and
in
fldcw
jne
dec
cld
adc
loope
sub
add
and
out
insb
mov
dec
jnp
andb
xchg
sbb
fsubrl
jbe
cli
js
inc
push
out
adc
std
fidivrs
mov
mov
dec
pushf
xchg
roll
jno
add
cmpl
or
pop
test
jne
jno
inc
jo
decl
mov
cmp
pop
mov
(bad)
jg
int3
lods
loop
push
mov
(bad)
sbb
lock
sub
(bad)
stc
xchg
pop
lds
mov
adc
std
imul
stc
and
pop
pop
sbb
das
inc
imul
mov
xchg
test
shr
pushf
fdivr
or
in
cwtl
in
out
inc
aas
inc
push
push
lret
or
and
xchg
push
lret
mov
(bad)
aam
out
lret
dec
cmp
lods
mov
mov
std
out
push
repz
cld
fmul
cmc
jp
push
shrl
push
dec
inc
pop
shr
jp
sarb
scas
inc
sahf
popf
sub
int3
fdivrs
cmp
xor
gs
ret
and
dec
lds
mov
out
inc
int
sub
push
and
fcom
mov
loopne
xchg
xor
ljmp
(bad)
dec
cmp
xor
mov
mov
stos
pop
loope
xchg
stos
jo
(bad)
and
mov
ret
or
sub
pop
mov
(bad)
pop
insl
shlb
jbe
push
sahf
adc
mov
sub
cmpsl
aam
or
gs
jo
leave
nop

popa
push
cmp
sbbl
add
adc
or
lret
test
lret
cltd
shll
pop
outsl
jp
xchg
ds
adc
jne
mov
imul
dec
dec
ret
aam
xchg
ja
dec
mov
lret
push
(bad)

or
faddl
sub
out
mov
push
and
sub
les
xor
mov
pusha
xor
dec
loop
lods
lods
lahf
push
aad
jns
sbb
lcall
pop
xchg
cmpsb
hlt
inc
push
seta
gs
xchg
push
dec
leave
sbb
int
into
jp
dec
sub
push
stos
lods
xchg
lock
inc
jb
ret
mov
dec
cmp
shl
sub
insb
inc
dec
mov
add
(bad)
mov
fidivl
sbb
cmpsl
or
jecxz
add
mov
lods
inc
pop
mov
push
int
fiadds
popa
sbb
negl
stc
in
clc
jmp
das
pop
add
hlt
(bad)
mov
and
cmc
dec
sbb
sbb
orb
mov
test
push
pop
push
ret
les
pusha
and
dec
mov
clc
jmp
test
test
clc
(bad)
xor
das
lock
scas
cltd
insl
std
cmp
test
cltd
sub
test
shl
stos
pop
cmp
ljmp
xchg
fcmovnb
pop
dec
mul
(bad)
insl
jg
cmpsl
imul
ds
insl
(bad)
cltd
or
stos
pop
pop
ds
cltd
outsb
jg
fimull
js
mov
dec
xchg
les
dec
cmp
psubd
in
js
js
push
mov
(bad)
jmp
adc
test
adc
(bad)
outsb
(bad)
and
or
cs
mov
inc
test
mov
(bad)
stos
push
(bad)
int
mov
icebp
jmp
add
or
cmp
jecxz
(bad)
adc
jns
clc
movsl
cld
outsb
mov
mov
nop

test
fcoml
pop
inc
adc
push
outsb
xor
shll
add
movsb
sbb
adc
js
sbb
loopne
xor
stos
xchg
jecxz
adc
xor
repnz
repnz
lcall
aas
pop
and
aaa
add
sbb
mov
int3
ljmp
or
xor
jle
aaa
cwtl
fisttpl
push
lods
lret
sub
popa
lds
mov
mov
mov
xor
std
push
ret
popf
adc
inc
jnp
xor
jbe
call
lods
sub
xor
mov
fbld
and
dec
dec
lods
movaps
test
and
push
xor
push
(bad)
sti
sti
es
add
lods
shrb
pop
lahf
movsl
xor
enter
dec
movsl
jnp
pusha
or
xchg
aas
push
jb
pop
testb
push
ljmp
and
divl
mov
fidivrs
std
or
xchg
test
mov
push
cmp
fistl
out
push
xorb
stos
mov
jp
pushf
and
dec
xor
movsl
lahf
loopne
pop
popa
mov
pusha
leave
mov
inc
xor
and
jno
pusha
insb
dec
fimull
outsb
in
sub
inc
fimull
ljmp
jecxz
int
lock
loope
or
mov
lret
jle
mov
jns
jp
in
jno
and
pop
lea
pop
sub
and
pusha
push
lea
pop
stos
mov
and
cmpsb
cmp
push
fdivp
rol
mov
out
add
aas
xchg
xchg
ficomps
cmp
push
mov
(bad)

add
mov
test
insl
stos
fwait

add
dec
mov
xchg
idivb
pop
and
sbb
jno
cwtl
fdiv
gs
mov
xchg
int3
and
imul
(bad)
test
dec
loopne
gs
mov
loop
or
mov
mov
pop
cmp
aam
mov
sbb
and
(bad)
mov
adc
or
xchg
adcb
jno
sahf
stos
in
pop
sbb
mov
inc
mov
jbe
std
sub
push
into
sub
sti
push
sub
pusha
push
daa
xchg
pop
shll
pop
mov
pop
xchg
inc
fisttps
sbb
cmc
loopne
into
ret
dec
fcoml
inc
adcl
and
add
dec
es
jg
int3
(bad)
in
push
out
bound
icebp
cmp
pop
lahf
movsb
add
cmpsl
mov
pop
push
(bad)
cli
jo
mov
add
out
orl
xor
pfacc
repnz
rcll
mov
or
push
or
ss
mov
inc
mov
xchg
outsl
pop
inc
rcrb
adc
jecxz
sbb
int3
xchg
mov
pop
arpl
mov
cmp
inc
std
hlt
(bad)
fistpl
xchg
and
mov
popa
xor
fucom
je
pop
and
test
jns
(bad)
jbe
adc
lahf
fsubl
ja
add
into
repz
mov
iret
imul
daa
inc
stc
ret
adc
push
cmp
xchg
add
push
stos
cmpsl
pop
test
sbb
jmp
(bad)
addr16
jle
push
dec
sti
lcall
add
mov
adc
sbb
call
popa
and
jno
pushf
cmp
mov
mov
lods
lea
imul
lret
icebp
and
add
xchg
and
xor
ds
push
ljmp
cmpsl
mov
jno
mov
aam
jmp
cmp
xorb
cli
jmp
in
xchg
nop

or
mov
in
jl
ljmp
mov
std
mov
push
cmp
int3
lcall
sbb
popf
push
push
arpl
cmpsb
(bad)
hlt
cli
sbb
sub
fs
push
mov
jb
movsb
xor
pop
les
cmpsl
dec
inc
test
pop
ljmp
pop
dec
add
push
mov
aam
xor
sbbb
dec
std
push
dec
add
in
pop
dec
out
popa
fdivl
xchg
mov
and
add
jp
out
insb
fistl
ret
sbb
dec
inc
mov
push
lds
cmp
cmpsl
mov
mov
lret
shrb
cmc
dec
add
xchg
repz
cli
sbb
roll
pop
push
xchg
xchg
jl
inc
jns
fdivrl
xor
sub
mov
cmp
and
xchg
sub
pop
adc
cwtl
and
les
xchg
cmpb
push
scas
jmp
mov
jnp
xchg
inc
sub
mov
jne
stos
and
(bad)
data16
pop
mov
mov
pusha
xor
rclb
mov
int
mov
add
js
inc
cmpsl
in
fs
pop
mov
push
jle
pusha
xor
andb
fprem
jl
cmp
pop
adc
fucomi
pop
shrl
out
cmp
mov
dec
popl
dec
es
mov
es
ljmp
mov
ret
idivl
stos
xchg
dec
sub
es
lret
jg
loope
add
aas
in
inc
stc
lds
lahf
fdivrs
xorb
push
(bad)
shlb
(bad)
sub
and
xor
fists
stc
and
es
into
iret
mov
push
repz
mov
aas
cmpl
lret
mov
sub
nop

mov
out
out
cld
xchg
xor
xchg
jge
je
xor
mov
mov
pop
add
jbe
shlb
sbb
mov
fsub
jo
sbb
pusha
jmp
or
pop
xchg
ret
adc
pop
sub
cmpb
adc
mov
dec
shl
dec
inc
inc
loopne
rcll
aaa
lock
sbb
cmp
icebp
mov
or
jne
mov
xor
int3
push
fsubs
in
repnz
and
pop
sti
test
das
push
cmp
jne
adc
jnp
sub
mov
xchg
lods
std
ret
in
mov
mov
mov
push
std
jns
mov
test
insb
inc
scas
mov
lods
add
fidivl
inc
xchg
(bad)
mov
mov
fcom
jge
lock
imul
(bad)
lea
(bad)
mov
mov
in
rcr
inc
push
mul
push
xchg
pop
add
mov
movsl
in
sbb
loopne
scas
add
sbb
test
dec
push
cmc
insb
mov
pushf
jae
movsb
bound
(bad)

loopne
scas
(bad)
stc
mov
dec
int3
cwtl
cli
inc
xchg
dec
shll
push
push
xchg
mov
mov
mov
in
jle
sbb
sub
call
insl
clc
shrb
push
in
aam
inc
ss
popf
in
into
cmp
rcll
es
push
rcl
or
movsb
jp
or
mov
lock
rcrb
daa
and
sbb
aas
incb
fwait

add
(bad)
xor
int3
sub
mov
mov
mov
pop
dec
test
ds
(bad)
aaa
loop
cltd
loope
cmc
scas
cmp
jno
in
push
jmp
cmpsb
and
and
dec
scas
in
call
lds
cmpsb
sbb
frstor
add
into
mov
mov
dec
jg
cmpsb
insb
mov
mov
xor
in
xor
jne
cmp
mov
lret
inc
dec
xor
mov
imul
scas
xchg
lret
lcall
push
cmp
adc
or
xor
push
icebp
fs
aaa
loopne
cmp
mov
scas
outsb
inc
sbb
xor
push
ret
adc
sub
rcrl
pop
push
fwait

(bad)
in
xchg
lret
pop
test
xlat
add
in
cmp
sub
in
inc
leave
xor
and
pusha
add
daa
dec
jno
and
in
or
scas
sub
fadds
js
cmp
rolb
jne
stos
dec
jbe
or
push
dec
xchg
jle
cmc
xlat
in
leave
mov
jns
xchg
setae
in
or
dec
mov
xor
xchg
out
inc
rcrb
add
xchg
es
dec
mov
inc
sbb
nop

pop
out
call
mov
into
jb
mov
cmpsb
sbb
add
jbe
daa
insl
inc
cmp
dec
mov
jecxz
ret
ret
fs
push
insl
outsl
inc
ficomps
imul
rcrl
iret
jge
jo
or
aad
clc
mov
push
ret
ficoml
mov
or
das
sbb
cmc
adc
imul
cmp
repz
xor
cwtl
fldenv
inc
ret
jno
fimull
out
mov
scas
shrb
psubusb
dec
stc
cmp
inc
adc
push
or
bnd
std
fildll
outsl
pop
in
xchg
pop
mov
(bad)
pop
cmpsl
xor
out
lds
fbstp
xor
push
out
repz
hlt
sti
mov
bound
shll
es
out
cmp
adc
jmp
(bad)
cmp
dec
mov
dec
or
sbb
dec
shlb
lea
cmpl
gs
or
(bad)
rcl
fbld
xchg
fisttpl
data16
mov
pop
les
push
pavgw
mov
adc
adc
repnz
test
mov
(bad)
xchg
test
inc
mov
loope
je
pop
xchg
rcl
js
dec
jp
xor
dec
cmp
mov
xor
in
test
push
cmp
push
mov
push
or
or
lds
test
mov
outsb
cld
aad
xchg
push
xlat
sub
pop
shl
cmp
and
push
xor
cmpsl
cmc
out
mov
mull
movl
or
(bad)
push
rorl
pop
popa
pushf
fistl
mov
inc
insb
cmp
loope
test
jb
jne
in
(bad)
loope
sarb
rcl
cli
icebp
mov
in
pusha
cmp
and
addl
sbb
insl
orl
imul
pop
ret
adc
outsl
add
or
lds
icebp
mov
mov
sub
js
into
leave
int
loopne
scas
in
adc
inc
loop
neg
push
push
mov
lods
fcmovnu
jb
sbb
mov
into
xor
rolb
push
xchg
inc
xorb
(bad)
leave
cmp
sbb
mov
and
and
shl
cmp
stos
add
add
stos
mov
hlt
test
loope
and
adc
push
or
xor
mov
pop
cmc
mov
(bad)
repnz
pop
call
xchg
xchg
in
sub
imul
vpsubd
xlat
out
add
in
dec
sub
mov
lcall
mov
add
or
cmp
fcmovbe
push
testl
in
out
inc
movsl
xchg
lahf
(bad)
ret
sbb
xchg
jae
xor
adc
dec
sub
xchg
cmp
xchg
outsb
dec
and
xor
pop
mov
sbb
jns
adc
cmp
andl
hlt
sbb
arpl
js
sbb
push
push
mov
jo
sbb
mov
push
idivl
xchg
sbb
dec
cli
mov
inc
add
mov
cwtl
mov
mov
add
add
dec
mov
movsb
mov
cmp
mov
pop
adc
es
dec
jbe
sub
push
sub
stos
lret
aam
xchg
insb
mov
push
inc
lods
mov
xchg
cmp
xor
xor
scas
inc
push
fcom
mov
xor
imul
rorb
fmuls
fwait

test
sub
mov
dec
lret
sub
jg
js
adc
gs
mov
lods
js
stos
lds
fs
lret
lcall
mov
pop
out
dec
xchg
sub
push
out
fwait

bound
into
and
adc
push
fdivl
sbbl
dec
insb
out
inc
mov
shrb
sahf
mov
or
and
push
dec
xchg
idiv
nop

lahf
mov
dec
dec
sbb
outsb
les
dec
movsl
lcall
cmpsl
xchg
addb
test
mov
mov
lahf
jbe
lret
daa
sub
mov
add
outsl
fidivrl
jmp
jp
xor
xorb
movsl
sub
mov
lret
cmp
cmpsb
mov
sub
jecxz
cli
push
push
sub
push
pop
sub
fwait

cld
or
adc
sbb
out
test
repz
ja
(bad)
push
mov
push
xchg
mov
cmp
mov
in
data16
mov
(bad)
or
ds
arpl
mov
sub
addl
aad
andl
push
and
scas
add
out
xchg
imulb
mov
das
ljmp
icebp
jmp
xchg
sub
and
or
daa
xchg
inc
xchg
dec
cmp
mov
fsubp
insl
sub
xor
lret
aas
sbb
mul
sti
mov
stos
push
inc
inc
movsl
mov
xchg
outsl
mov
std
sbb
movsl
dec
insb
push
mov
nop

imul
jno
cmpsl
into
pop
pop
stos
fs
inc
outsl
mov
cs
cmc
jne
ja
aaa
inc
loopne
out
jne
inc
loop
jecxz
adc
data16
add
(bad)
ret
or
(bad)
sahf
jmp
loop
scas
idiv
inc
mov
dec
pop
xor
jle
loop
lahf
lea
add
popa
sbb
ror
pop
mov
jbe
icebp
sbb
orb
xor
in
imul
jo
cmp
and
cmp
sbb
fstp
mov
stc
adc
jne
and
icebp
pushf
scas
push
(bad)
loopne
sub
dec
xchg
int
and
iret
pop
jp
rorb
in
sbb
(bad)
ljmp
aaa
sub
pop
jno
mov
les
xor
pop
mov
ljmp
imul
lods
pop
arpl
int3
inc
shlb
rol
mov
push
mov
(bad)

lds
lret
cwtl
adc
jecxz
inc
int
sbb
and
xor
ret
pushl
inc
lahf
lahf
pop
mov
das
fldcw
xchg
xchg
add
mov
lret
sub
testl
push
adc
adc
or
sbb
fdivr
sti
pop
add
xchg
cmp
insl
mov
mov
scas
sub
rol
outsl
mov
mov
lret
cs
scas
divb
out
xor
fisttps
nop

loop
shll
push
divb
std
ljmp
jle
mov
or
push
outsb
loop
aad
jle
subl
xchg
shrb
mov
or
ja
call
loop
cmc
push
jl
mov
pop
jp
xchg
test
cmp
adc
iret
cmp
int3
cltd
cld
sub
mov
mov
inc
fcomip
gs
outsb
fstps
inc
or
fimull
bound
clc
xor
in
notb
xchg
in
es
(bad)
dec
int3
mov
nop

into
imul
loope
mov
lcall
cld
pop
leave
push
or
bound
inc
dec
test
cs
leave
xchg
pop
loopne
push
icebp
out
add
or
cmp
jmp
add
sub
jb
cmp
cltd
push
not
sti
xchg
out
(bad)

sahf
loope
imul
sbb
out
je
pop
jnp
push
ss
scas
push
incb
dec
xorl
ret
das
in
lcall
fs
aad
lahf
insb
xchg
inc
sub
aad
adc
repz
leave
mov
jne
xchg
rcrb
inc
add
imul
cld
mov
adcb
jmp
cmpsl
pop
out
cmp
xchg
pop
xchg
out
jle
push
iret
xor
xchg
inc
add
or
out
jmp
adc
jg
fcoml
incb
sbb
je
outsb
dec
data16
push
js
dec
cmpsl
loop
mov
pop
cmpsb
enter
int3
xorb
shlb
out
imul
xchg
mov
rolb
(bad)
mov
cmpsl
pop
movsb
jb
cmpsl
jo
adc
ja
xchg
xchg
jo
hlt
int3
ja
hlt
cmp
push
mov
mov
sar
fwait

repnz
(bad)
(bad)
in
push
xor
or
loopne
xchg
pop
mov
mov
out
ljmp
sbb
jno
loop
stos
sub
lea
jl
fs
pop
scas
pop
lods
jne
lcall
or
mov
cwtl
and
inc
cli
pop
mov
popa
iret
adc
adc
cmpsb
adc
jbe
in
movsb
or
nop

rcll
inc
into
mov
xchg
add
imul
ret
mov
add
xlat
enter
xchg
popa
or
out
push
pop
movsb
cmp
aas
sbb
test
xor
sbb
sub
bswap
add
inc
push
or
xchg
jno
jns
mov
loop
loopne
sub
jne
lcall
xchg
jnp
push
imul
inc
out
add
in
addr16
outsb
mov
insl
iret
ja
sti
outsb
divb
xor
add
push
adc
dec
jae
sub
xor
cmp
or
mov
mov
xchg
fwait

mov
mov
xlat
jns
xorb
stos
add
aam
inc
mov
lods
(bad)
jg
push
or
cld
sahf
push
pop
fdivrs
negl
sub
pop
lcall
pop
(bad)

xchg
nop

incb
(bad)
outsl
cmp
out
add
test
and
lahf
or
add
lds
pop
or
sub
insl
int
mov
xor
mov
add
mov
popf
push
adc
rolb
dec
cmp
dec
mov
and
and
in
mov
js
fstpt
xor
jle
cld
in
push
mov
das
mov
pop
pop
jge
mov
sahf
dec
cs
jne
test
adc
ficompl
mov
cmp
insl
lcall
mov
imul
push
inc
sub
(bad)
(bad)
jbe
add
je
xor
scas
xchg
lcall
int3
or
fs
pop
mov
xchg
xor
or
add
mov
cmpl
call
mov
jp
imul
cmp
nop

andb
cmp
sbb
imul
stc
call
out
add
lret
inc
(bad)
bound
pop
int3
adc
pop
xorl
lret
pop
movsb
daa
rolb
(bad)
or
pop
test
ret
push
test
test
les
mov
add
push
xor
mov
js
(bad)
fwait

bound
jmp
rep
js
fs
sbb
mov
dec
add
dec
mov
sbb
or
or
(bad)
mov
jmp
adc
mov
cmpsl
xor
pop
xor
enter
es
imulb
mull
mov
out
mov
lods
mov
xchg
jg
andb
test
sarl
or
mov
fadds
xchg
pop
mov
and
xchg
pusha
popf
fmull
fs
rcrl
fiadds
mov
imul
test
xchg
inc
cltd
pop
inc
rcrl
jmp
sub
lods
out
jge
pop
xor
fs
sbb
into
cltd
jno
fistpl
les
mov
jl
loop
adcl
aas
adc
jnp
clc
clc
jge
cli
imul
sbb
sti
repnz
xchg
xor
and
aad
or
inc
sbb
int
pop
scas
rolb
daa
fmull
repz
sub
push
in
popf
mov
xor
in
(bad)
jle
and
mov
and
pop
dec
add
out
mov
add
cld
mov
sub
rcrb
fisubrs
jp
and
arpl
adc
sub
sti
test
mov
into
mov
jg
hlt
loope
push
cmc
add
out
add
(bad)
cld
subb
add
mov
sti
inc
cmp
dec
adc
imull
pop
mov
setl
xchg
je
cld
pusha
push
dec
dec
mov
mov
ret
lea
cltd
in
outsl
int
dec
pop
sbbb
push
jl
bound
enter
outsb
and
cs
cmp
jns
leave
cmpb
into
adcb
and
push
pop
and
push
int3
push
out
mov
push
pop
movl
testb
lods
mov
pop
push
pop
lahf
pusha
cmp
rorb
hlt
pusha
enter
push
lret
movsl
sub
cmp
sub
jne
fldcw
popa
les
push
pop
fwait

jle
mov
jnp
mov
xor
or
jns
movsb
repnz
scas
scas
mov
call
jg
and
xchg
pop
data16
or
mov
sbb
addr16
insb
cbtw
fcomp
mov
xchg
add
dec
jo
loop
call
gs
cwtl
std
shl
push
xlat
shl
push
test
xorl
rcrl
mov
es
jmp
stos
ret
mov
pop
add
push
push
cwtl
(bad)
cld
inc
movsb
(bad)
push
dec
lret
arpl
sub
sti
push
std
scas
aad
jno
jo
fs
cmp
push
sub
pop
enter
xchg
dec
test
push
aam
into
les
xchg
fisttpll
iret
fnsave
sahf
(bad)
rolb
mov
adc
repnz
cmp
inc
mov
adc
dec
ret
xor
mov
call
mov
pusha
filds
aaa
shl
fucomi
ds
push
aad
sub
add
inc
lock
pusha
push
test
cli
ss
aad
push
fnstcw
cli
xor
mov
or
dec
push
jnp
in
lds
je
fisubrs
int
rcrb
jmp
scas
sbb
fcomi
stos
js
mov
leave
sbb
xor
int
mov
push
push
cmp
inc
shlb
and
insl
adc
fxch
push
or
and
jae
xor
jp
test
cmc
jo
push
(bad)
mov
in
push
jg
adc
pop
adc
lods
flds
sbb
scas
aas
dec
inc
xor
inc
mov
int3
into
in
jp
insl
mov
(bad)

jo
cmp
pushf
push
inc
add
fwait

int
flds
jecxz
cmp
(bad)
call
or
cmp
mov
je
movsl
or
into
lea
ljmp
mov
mov
adc
xor
xchg
in
mov
cwtl
and
jecxz
jmp
scas
dec
and
lret
jmp
lds
push
ret
xchg
std
cmc
fiaddl
sbb
inc
xchg
and
popa
aam
sahf
jae
rcrb
cmp
jmp
jl
les
or
sahf
sbb
pop
mov
jp
(bad)
in
xchg
sbb
daa
sub
loop
and
sub
fisttpll
movsb
filds
jno,pt
ret
stos
fincstp
pop
add
or
push
inc
xchg
fwait

cltd
adc
movsb
adc
cmc
sbb
cwtl
test
mov
pop
add
xor
in
pop
mov
jp
aam
aaa
stc
into
mov
loopne
(bad)
fldl
adc
shlb
sub
cltd
pop
test
jl
mov
sub
inc
dec
lods
scas
iret
add
and
repnz
aad
aad
or
jecxz
mov
lret
aaa
cld
push
sub
les
sbb
xchg
or
dec
mov
or
shlb
or
scas
push
sub
mov
jecxz
mov
hlt
lret
cmp
and
int3
sbb
cmp
jns
dec
add
movsl
mov
sbb
in
push
scas
mov
(bad)
push
xchg
stos
jmp
and
dec
jmp
jnp
pop
jmp
jnp
add
subl
add
fidivrl
popf
jmp
jl
dec
xchg
sbbb
das
or
cmpsl
lds
ljmp
or
mov
fs
roll
subl
fcoms
jo
int3
fwait

mov
mov
pusha
jecxz
nop

adcb
scas
sbb
mov
adc
call
sub
adcb
enter
or
mov
xchg
cmpsb
mov
enter
lods
inc
mov
xor
push
xorb
mov
stos
outsl
subl
xchg
in
mov
int3
sarb
sbb
shll
mov
jne
(bad)
aaa
jp
xchg
out
push
xchg
mov
fcmove
inc
jns
iret
add
mov
loopne
inc
jno
add
clc
test
(bad)

lods
sbb
and
pop
movl
fsubrl
xchg
xlat
push
adc
mov
pop
out
aaa
outsl
clc
mov
lret
and
jno
mov
and
cmp
jl
sti
out
push
test
dec
push
sarl
ret
clc
mov
(bad)
pop
lret
(bad)
ret
push
insl
cwtl
loopne
jb
sub
xchg
int
sbb
repnz
mov
mov
data16
sub
mov
out
shll
jo
pop
inc
pop
sbb
or
dec
mov
xchg
mov
mov
aas
in
cmpsl
sub
jbe
push
sbbl
xor
in
jecxz
lahf
mov
cmpsl
hlt
mov
sbb
pop
mov
mov
sub
or
xor
sbb
and
mov
loop
ret
adc
pop
xor
pop
bsf
push
inc
xchg
dec
push
mov
pop
pop
lods
scas
push
mov
ljmp
popf
jmp
dec
sub
scas
jo
sub
jle
xchg
jae
std
rorl
add
cmp
sbb
mov
pop
jb
outsl
jp
jge
xchg
arpl
pop
mov
mov
or
adc
inc
cmp
mov
ret
ds
or
or
mov
mov
fstl
sbb
sbb
es
mov
inc
(bad)
cmpsb
fsubrs
or
int3
out
pop
pop
aas
add
data16
cmp
xorl
pop
aad
and
dec
inc
mov
and
pop
(bad)
cmc
add
pushf
mov
xchg
(bad)
sbb
mov
push
pusha
insb
mul
fstpt
add
dec
aam
repnz
pop
mov
dec
xor
add
insb
mov
adc
rcrb
div
mov
cli
and
test
out
cmp
sbbl
imul
arpl
sbb
cltd
cmp
clc
(bad)
jp
rorl
ja
xchg
sub
and
dec
sbb
push
push
add
inc
cmc
pop
insb
push
cmp
push
out
lahf
bound
xor
pop
sub
cld
shlb
and
in
jne
adc
(bad)
outsl
ret
(bad)
mov
or
push
rcll
fdivs
lock
push
decb
fbld
mov
xor
shlb
mov
data16
cmp
push
sub
cltd
cmp
lea
and
jnp
mov
orb
or
push
cmpsl
in
push
fwait

test
push
cli
pop
cmovl
sbb
jno
or
jb
jmp
ja
fsubrl
ja
push
mov
dec
mov
lods
mov
push
inc
outsb
daa
rcrl
and
jg
outsb
adc
imul
roll
jg
mov
mov
push
dec
lods
and
cltd
into
paddsw
jp
cmpsl
jbe
cmp
mov
mov
lcall
and
aas
jecxz
testl
mov
in
imul
cmp
cli
shll
es
push
clc
(bad)
inc
dec
push
out
xor
dec
ret
add
xchg
mov
mov
stc
inc
lret
loopne
movb
fcoms
or
xchg
add
xchg
xchg
or
cmpsb
aaa
adc
pushf
loope
inc
lods
push
mov
dec
xor
xor
xor
cmp
dec
cmp
ret
imul
jb
mov
(bad)
adc
mov
scas
push
mov
mov
lret
outsl
popf
daa
(bad)
aaa
dec
pop
sub
xchg
stos
add
stos
sbb
lahf
push
movsl
jo
out
jmp
lods
xchg
daa
or
lahf
aaa
cmp
mov
test
ljmp
lret
push
push
not
mov
jbe
sub
in
fs
fisttpll
loope
jb
dec
cmpsl
int3
lahf
or
into
mov
mov
lods
fidivs
in
pop
les
xlat
(bad)

out
cmp
push
je
dec
xor
cwtl
adc
cld
xchg
xchg
rolb
loop
push
setae
dec
adc
adc
xchg
xchg
stos
fildl
mov
loopne
sbb
mov
subl
shl
lcall
inc
dec
xchg
mov
inc
in
imul
shrb
out
mov
(bad)
fwait

mov
jmp
sub
sub
push
cmp
insb
fsts
adc
fmull
mull
adc
stos
ja
cmp
dec
mov
in
in
or
leave
mov
lcall
orb
mov
mov
daa
or
loop
mov
pop
add
jae
in
jno
in
mov
jmp
lock
movsl
cmp
shrb
cmpsl
scas
ja
lret
pop
cwtl
scas
ljmp
sbb
jg
ss
ret
adc
pop
xor
jg
pop
push
add
fisttpl
dec
jae
xchg
shlb
sub
inc
aam
adc
sbb
sahf
cmp
pop
adc
std
jle
(bad)
sti
xor
sbb
xchg
clc
imul
dec
cmp
loop
jbe
icebp
scas
jle
loope
mov
test
push
aas
daa
cwtl
sbb
push
ds
mov
dec
jg
pop
mov
mov
jecxz
mov
mov
(bad)
ds
xchg
inc
sub
xchg
jecxz
pop
subb
es
xchg
pushf
pop
pushf
push
sbb
jbe
loope
aam
xchg
out
cmp
push
sub
xchg
adc
xor
mov
outsb
pop
lods
test
adc
and
lea
and
fildl
adcb
push
incb
push
sub
test
fcmovnu
subb
gs
into
aam
sub
jmp
mov
mov
ucomiss
cmp
nop

jns
addr16
xor
add
mov
sbb
jbe
cmc
loopne
fs
loopne
jl
mov
or
movsl
arpl
mov
insl
and
and
adc
inc
push
xchg
jmp
movsb
xor
mov
negb
popa
in
pop
lea
pop
sub
mov
rcr
(bad)
test
xchg
push
stos
push
pop
fldt
push
add
insl
(bad)
call
in
out
fimull
pop
ljmp
push
xor
sub
sahf
fidivrl
sub
mov
jecxz
fsubs
(bad)
in
push
lret
fsubp
lret
jge
mov
jg
aas
enter
repz
sbb
jmp
out
xorl
fsubl
andl
mov
cli
insl
cmc
fildl
inc
mov
sub
andl
imul
call
and
das
jae
cwtl
push
pushf
ret
lahf
push
js
int3
dec
add
mov
pop
mov
mov
test
loope
adc
xchg
inc
(bad)
fbld
out
and
pop
fiadds
ljmp
fstpt
mov
push
ljmp
or
xchg
adc
pop
insl
inc
mov
xchg
shl
or
dec
iret
mov
cmp
or
stc
pop
xor
xchg
mov
cmpsl
sub
nop

adc
xchg
mov
pop
into
bound
mov
inc
jge
icebp
in
pop
add
repz
xor
es
pusha
out
add
scas
shrl
test
fxch
dec
pop
lcall
popl
lahf
int3
subl
(bad)
jnp
in
dec
mov
push
sbb
jmp
adcb
inc
daa
pop
test
xorl
movsb
push
pop
push
xor
inc
ds
jge
push
outsb
int
xor
fnsave
sbb
and
shrb
iret
mov
sub
movsl
(bad)
cs
cld
mov
mov
cmp
hlt
sbb
fwait

daa
das
cld
dec
sbb
mov
pop
inc
sub
push
push
loop
icebp
pop
dec
in
sub
cmp
cmp
mov
mov
ja
cmpsl
adc
movsl
fmuls
pop
jecxz
cmp
mov
stos
pusha
lea
lcall
ret
fsubr
movsb
and
into
test
jmp
negb
shl
ss
mov
pop
cmpsl
sub
loope
neg
and
icebp
cmpsb
iret
fsubs
jle
sbb
inc
daa
cmc
inc
cmp
cmpl
adc
add
mov
jbe
push
in
ljmp
loope,pn
negb
pop
cmpsl
push
adcl
ja
push
imul
es
xor
jo
in
(bad)
and
dec
mov
imul
flds
inc
push
sahf
ds
add
dec
push
dec
in
pushl
(bad)
roll
mov
outsl
dec
cmpsl
call
push
div
xlat
mov
je
andb
shrl
cmp
imul
pusha
sbb
mov
push
and
insb
adc
popa
jb
aas
jo
sub
out
inc
out
je
shll
jae
cmp
out
jp
mov
xchg
cs
xchg
xchg
insl
add
xchg
loope
sbb
in
or
mov
test
or
popf
cmp
jae
push
xor
pop
in
or
pop
ret
push
insl
(bad)
(bad)
hlt
sub
mov
and
cwtl
scas
scas
add
xchg
sti
and
inc
std
inc
mov
mov
pop
dec
test
(bad)
clc
cli
pop
setb
movsb
lods
mov
jg
shrl
movsb
dec
pop
mov
sbb
xchg
dec
push
scas
(bad)
sub
xor
or
or
cmp
ret
lds
les
ljmp
jo
mov
mov
rolb
lods
cwtl
or
dec
jno
aas
sbb
pop
adc
out
inc
jb
in
fwait

xor
xor
xor
push
ja
or
pop
testl
inc
sbb
cli
in
jb
jg
jmp
(bad)
lahf
inc
movsl
push
xchg
xor
and
into
(bad)
pmulhuw
jmp
sbb
je
popf
push
mov
sbb
inc
gs
jmp
mov
jo,pt
testb
xor
or
lahf
xchg
cmp
or
ret
cmp
fistps
cmp
xchg
aas
fld
gs
es
(bad)
fwait

in
or
sub
scas
int3
mov
push
push
repz
out
les
adc
pop
jno
daa
xchg
mov
fiadds
and
jle
or
or
ret
add
jnp
hlt
pop
or
dec
cmc
mov
cmp
inc
dec
shl
ds
pop
and
sbb
push
sarb
lock
add
imulb
jbe
fbld
mov
lock
mov
in
scas
pop
pop
outsl
inc
adc
aas
jne
mov
xor
jnp
and
xchg
mov
fdivrl
push
cmp
(bad)
out
ds
aad
push
lahf
adc
fnsave
adc
sbb
mov
xchg
jne
into
mov
insl
sbb
lods
pop
ja
or
xchg
adc
cmp
and
js
rcll
push
test
test
imul
cmpsb
xor
out
push
popf
push
daa
mov
and
cmpsb
mov
inc
ffree
lds
cmp
popf
arpl
setnp
movsl
inc
test
xlat
(bad)
outsb
and
xchg
fcoms
xchg
adc
divl
hlt
push
iret
stc
shrb
and
xchg
(bad)
pop
sbb
sub
in
ja
(bad)
pop
dec
xor
sbb
push
sbb
popa
bound
aam
inc
lahf
test
cmpsl
addb
outsl
pushf
push
movsl
lds
inc
pop
iret
sub
push
pushf
push
fimull
or
pusha
cmc
mov
test
xchg
push
mov
iret
test
(bad)
fidivs
add
sbb
sti
xchg
cmp
jns
or
in
mov
adc
movsl
(bad)
sar
push
cmp
mov
add
push
(bad)
shll
pop
test
jnp
in
out
fistpl
aaa
mov
lods
aam
sbb
dec
xor
xlat
lods
js
push
xchg
jns
(bad)

and
rep
rol
jne
popa
inc
dec
fimull
xlat
shlb
jmp
test
gs
push
xor
jnp
jmp
aad
mov
(bad)
stos
fdivrl
jnp
fldpi
pop
inc
ja
in
nop

inc
push
data16
aad
out
add
cli
insb
mov
jno
sar
in
or
out
data16
adc
cltd
pop
fbld
jo
inc
inc
and
adc
fisubl
mov
flds
add
mov
out
jle
xchg
aad
and
cmp
rorl
scas
fwait

sbb
ss
cmp
arpl
cwtl
dec
ffree
inc
loopne
pop
xchg
ret
out
pop
out
icebp
stos
xchg
push
dec
adc
lahf
aaa
ja
add
pop
adc
and
dec
pop
xchg
sub
fstps
mov
das
push
(bad)
lods
add
pop
in
mov
pop
lret
dec
(bad)
lea
adc
hlt
mov
ljmp
repz
xchg
(bad)
imul
xchg
sbb
out
mov
sub
mov
mov
ret
mov
mov
sbb
jmp
iret
sahf
fstpt
inc
add
pop
add
stos
(bad)
fistl
xor
ror
(bad)
mov
mov
or
icebp
fdivl
xor
mov
lahf
das
jne
dec
jmp
cli
pop
mov
enter
pop
push
insl
es
jle
mov
sbb
out
sbb
test
or
addr16
notl
stc
mov
jmp
pop
adcb
fwait

add
sub
or
seta
lods
jno
push
jge
inc
(bad)
mov
lsl
jae
sbb
popl
and
in
push
popf
insb
mov
roll
pop
enter
and
call
adc
scas
sub
mov
mov
cmp
test
(bad)
nop

adc
adc
mov
int3
add
xor
push
jmp
push
(bad)
mov
push
sub
enter
xor
in
cmp
cmp
fwait

xchg
sub
addr16
pop
or
adc
adc
mov
fnstsw
push
mov
mov
cmp
cltd
jns
push
bound
jle
(bad)
in
daa
ss
pop
std
dec
(bad)
fstl
(bad)
mov
lret
mov
xor
popl
inc
sub
data16
addr16
out
lahf
enter
sub
cmp
ljmp
mov
je
inc
mov
mov
sbb
cmpxchg
mov
out
inc
or
ljmp
mov
mov
movsl
xor
lcall
cs
call
testb
je
adc
call
push
cmp
nop

add
shr
pop
xor
lods
add
or
pushf
push
sub
enter
xor
stos
push
push
mov
leave
mov
(bad)
jo
ffree
xor
jg,pn
rcr
xchg
jl
stc
mov
mov
xor
cwtl
test
inc
fcmovbe
inc
insl
inc
jno
lea
or
call
cmpsl
or
aaa
aaa
ret
and
xchg
adc
pop
cmpsl
sub
icebp
jbe
out
mov
pop
stos
shrl
xchg
outsb
test
lds
mov
pusha
cmpsb
fcomip
in
pop
jg
xor
in
loopne
(bad)
out
mov
dec
jecxz
mov
inc
aas
outsl
mov
push
cld
sti
hlt
subl
inc
ret
pop
je
or
mov
mov
fdivs
jne
xor
fisubrl
in
push
test
push
sbb
test
and
ds
pusha
mov
arpl
loop
inc
(bad)
cmp
(bad)
cmpsb
mov
cld
add
and
les
and
ror
lret
add
ret
test
push
aaa
xchg
sbb
pop
push
lds
push
pop
add
pop
cltd
and
adc
int
ret
push
imul
ds
sub
push
repnz
loopne
fwait

xchg
fwait

data16
aad
std
adc
sbb
mov
cmpsl
add
sbb
andl
sub
pop
scas
cmc
dec
add
daa
je
sti
add
shl
movsl
adc
in
icebp
sub
jle
adc
scas
fmull
cli
xor
push
push
popa
inc
jnp
add
lret
or
xchg
or
in
dec
loop
mov
push
fs
push
mov
fs
jb
or
int
mull
repnz
pop
pop
into
inc
rolb
jle
cvtps2pi
mov
mov
mov
jb
xchg
pop
xor
imul
sarb
push
pop
enter
out
cli
dec
push
sysenter
outsl
add
in
lock
js
sbb
jns
mov
xchg
pop
(bad)
iret
ja
jbe
cli
lea
mov
jle
bndstx
loop
insb
xchg
jns
cltd
ror
push
inc
sbb
fldt
stos
ficoml
orl
mov
xchg
roll
pushf
sbb
jp
cmp
adcl
dec
adc
test
inc
sahf
dec
lea
movsb
xchg
sahf
dec
pop
jmp
xor
xchg
cmp
xor
and
push
fs
fs
fdivs
and
inc
inc
pop
sahf
or
aad
stc
mov
lods
insb
in
sbb
shlb
cmp
jmp
sub
addr16
popa
or
sbb
iret
cli
shlb
mov
test
fcmovne
test
in
cmp
jns
call
mov
cmp
mov
scas
loop
outsb
xor
xchg
sub
mov
sbb
add
add
std
push
and
xor
lret
mov
fisttpl
std
repnz
insl
adc
mov
mov
and
mov
mov
cwtl
add
xchg
xor
dec
xor
gs
lret
test
mov
leave
lret
jmp
popa
mov
(bad)
fs
aam
adc
jo
outsl
loop
(bad)

dec
cmp
jge
xchg
mov
imul
pop
fs
jae
xchg
push
ss
aaa
sbb
cmp
aas
lcall
bsf
rcrb
lcall
xchg
stc
decb
sbb
jecxz
jb
aaa
adc
leave
push
lds
sub
and
out
inc
mov
pusha
addl
rorb
jp
push
bound
xchg
pop
loop
aaa
pop
fs
sub
fistpll
hlt
inc
pop
xor
movl
pushf
sub
(bad)
mov
adc
jbe
and
sarl
sahf
clc
sahf
inc
fcomps
lahf
push
ds
add
jmp
jnp
jecxz
jno
in
or
mov
loope
test
adc
add
dec
sbbb
lret
pop
daa
fcmovb
stc
(bad)
repz
aaa
mov
mov
insl
hlt
mov
pop
or
mov
int3
jne
jg
out
mov
lods
ja
testb
mov
sub
in
pop
xor
inc
in
daa
sti
sub
in
mov
mov
bnd
xor
cmpsb
or
cmpsl
dec
cmpsl
(bad)
sub
inc
out
lcall
(bad)
xor
andl
and
cli
rclb
shl
mov
aad
fisttpll
sbb
mov
sbb
pop
cmc
subb
pop
adc
pusha
cwtl
dec
and
orb
loop
(bad)
or
fstpt
mov
adc
xor
adc
ljmp
mov
insb
out
or
jno
ljmp
enter
call
xchg
cld
(bad)
(bad)
and
sub
inc
adc
jl
mov
mov
pusha
in
(bad)
dec
fs
hlt
nop

out
in
mov
xchg
rorb
popa
test
mov
lods
push
adc
es
sbb
ds
add
mov
cmpsl
test
repz
mov
leave
arpl
push
mov
mov
mov
fnsetpm(287
pop
lcall
inc
push
push
pop
stos
sbb
sti
bound
gs
flds
ret
out
out
or
int3
mov
lea
jg
sub
mov
loop
not
jne
rorl
inc
xor
push
xor
mov
in
cmp
and
push
scas
xchg
add
bound
and
adc
inc
or
push
out
(bad)
pop
ljmp
scas
es
(bad)
cli
and
adc
push
lea
in
pop
cmp
sub
jbe
cmp
push
and
std
adc
aas
out
subb
fdivs
mov
scas
jg
adc
sub
pop
dec
or
jb
mov
sti
push
pop
xchg
sbb
ja
cmc
in
ror
cld
mov
shrb
sub
mov
sbb
xchg
and
shrb
jne
xchg
push
das
lds
and
add
mov
jp
sbb
sbb
test
push
cmp
xchg
out
pop
sub
or
lods
fildl
cmp
xlat
mov
inc
cmpsb
adc
mov
decb
inc
sub
mov
test
xchg
scas
(bad)
loope
bound
and
add
mov
or
ljmp
divb
outsb
(bad)
mov
sbb
cli
mov
and
test
stc
cmp
daa
and
sbb
popa
leave
popa
jmp
and
in
xchg
mov
dec
xor
daa
jl
jl
lcall
fsin
lock
mov
imul
loopne
ret
push
mov
insb
push
incb
into
rorb
jle
adcb
mov
and
mov
cmpsl
out
cmp
bound
mov
lahf
into
xorb
jb
jo
ljmp
mov
xor
add
mov
out
gs
aas
mov
out
(bad)
scas
out
pushf
sbb
outsb
(bad)

lea
lock
popf
pushf
xor
push
mov
add
lahf
push
cmp
pop
stos
insb
das
icebp
(bad)
sub
mov
stos
inc
addr16
out
xor
add
ret
in
repnz
aas
fistps
sbb
lods
or
fiaddl
cli
lret
jmp
jmp
cmpb
mov
inc
lcall
sti
cmpsb
mov
iret
adc
std
mov
imul
and
pop
xor
jnp
mov
push
xor
(bad)
mull
adc
push
gs
jge
sub
mov
adc
loop
dec
dec
dec
leave
orb
pop
jmp
xchg
xchg
adc
or
mov
jbe
stos
mov
inc
jo
jnp
mov
in
push
loopne
jmp
dec
ret
cmp
xchg
push
jmp
data16
lds
mov
and
outsl
cwtl
mov
ret
leave
jns
and
adc
ds
call
xchg
cwtl
out
pmulhw
push
xor
decb
psraw
jne
sbb
push
push
(bad)
mov
sbb
push
js
and
fnstcw
mov
mov
pop
(bad)
movsb
stos
insb
outsl
movsl
sub
vxorps
mov
orl
or
scas
enter
mov
ds
daa
push
fsubs
leave
lcall
inc
lea
jne
sbb
popf
cs
into
or
scas
mov
loop
or
sahf
lcall
lods
pushf
gs
mov
sbb
inc
leave
inc
sub
cmpsb
arpl
lret
std
or
push
and
in
std
ss
cmc
mov
scas
push
push
sbb
int
xchg
in
or
dec
xchg
shrl
cld
mov
xchg
ss
movsl
push
or
ret
mov
add
push
xchg
push
or
test
popa
nop

xor
clc
dec
jp
jb
jns
lods
cmpsb
xchg
ljmp
cmpsl
xchg
leave
clc
clc
into
push
icebp
lret
dec
push
insl
add
enter
insb
push
dec
mov
jno
push
imul
nop

gs
out
and
add
shlb
xchg
adc
out
mov
ss
loopne
aad
(bad)
pop
adc
ja
jae
scas
(bad)
jo
jbe
push
enter
test
ret
mov
fsubs
mov
mov
stos
mov
lcall
dec
mov
in
fmuls
jns
das
inc
add
xor
hlt
std
movsl
adc
inc
or
inc
int3
stc
mov
repnz
pop
loopne
adc
push
lcall
mov
push
mov
dec
inc
fsubl
lret
xor
xchg
cmp
cmp
(bad)
fbstp
pop
jmp
outsb
sub
mov
xor
ret
(bad)
in
sub
js
call
mov
push
js
test
cli
mov
mov
adc
pop
sbb
mov
mov
dec
jb
stos
push
out
fisubrs
mov
xor
out
sbb
iret
adc
and
mov
(bad)
cltd
dec
xchg
cmp
dec
sub
icebp
mov
rorl
out
stos
and
mov
push
lock
jp
xchg
repz
cmp
dec
cmpsb
dec
and
idiv
lret
push
test
in
test
inc
cmpsl
int
jmp
sbb
dec
imul
lds
inc
mov
dec
cmp
mov
(bad)
les
ret
js
scas
invd
(bad)
mov
clc
leave
jle
dec
aam
mov
lret
push
cmpsb
xchg
nop

pop
jge
and
sbb
mov
mov
sub
add
sub
lock
mov
insl
xchg
enter
add
(bad)
push
call
and
insl
icebp
and
imulb
and
(bad)
jg
jbe
add
mov
push
push
sbb
inc
lret
ja
mov
movsl
mov
dec
cmp
jle
mov
inc
loop
pushf
ljmp
ljmp
cmp
(bad)
jnp
ljmp
mov
in
inc
test
pop
mov
call
fidivrs
rcll
dec
(bad)

xchg
cs
(bad)
xchg
dec
mov
xor
xor
jbe
and
xchg
fdivrs
call
std
ret
dec
jb
mov
sbb
cmp
inc
fs
mov
(bad)
not
sub
gs
outsl
ror
pop
imul
xor
shlb
gs
adc
pop
test
aad
repnz
shrd
mov
jnp
pop
fs
push
out
fs
xchg
push
out
sar
aas
mov
sub
xchg
pop
adc
loop
pushf
pop
jle
mov
mov
xor
aas
subb
jo
decl
mov
jo
pop
mov
pop
test
fs
(bad)
mov
scas
mov
call
inc
pop
inc
mov
mov
inc
lea
pop
xchg
xor
mov
sbb
pop
or
dec
inc
scas
xchg
scas
push
mov
cmp
cmc
pushl
dec
test
popf
mov
xor
scas
insl
mov
leave
sarl
in
iret
(bad)
cmp
mov
(bad)
sub
xor
lods
push
std
add
adc
cld
and
in
insb
imul
imul
or
(bad)
cwtl
arpl
int
rcrl
mulb
mov
les
and
pop
mov
inc
je
inc
xlat
add
inc
sub
adcl
and
inc
add
lds
pop
cmp
test
adc
ret
mov
daa
mov
mov
rclb
jge
or
daa
or
dec
xchg
loope
comiss
sub
dec
(bad)
pop
insl
inc
jbe
lock
call
daa
mov
jns
imull
rorl
sbb
mov
lret
and
nop

push
sbb
decl
inc
jbe
xchg
data16
sub
dec
jnp
push
rorb
pop
pop
mul
ss
push
arpl
sbbb
sbb
in
or
mov
xchg
out
lret
pop
jge
stos
jo
sbb
stos
repnz
mov
push
xchg
pop
das
insl
pop
out
popa
mov
aam
(bad)
pop
fwait

mov
add
into
or
xor
sub
adc
shr
jle
pusha
bound
test
je
push
adc
js
xor
mov
loop
jnp
sub
push
into
movb
inc
inc
popl
mov
add
jo
pop
xchg
rcll
inc
dec
nop

jge
xchg
pop
loop
dec
cs
inc
pop
popf
or
inc
cmp
iret
push
(bad)
adc
loope
lahf
pop
outsb
xchg
and
cld
popf
jnp
push
cmp
pushl
insb
(bad)
loopne
out
test
cmpsb
loope
rcrb
iret
shlb
div
mov
or
fdivrl
push
lret
jl
push
nop

xchg
mov
pop
sbb
mov
push
dec
ljmp
stos
push
lahf
lret
lret
mov
scas
mov
in
sub
ss
mov
dec
fcomi
call
push
hlt
pushf
insb
and
cmp
sub
add
sub
arpl
mov
pop
out
sub
les
lds
cmp
or
cmp
nop

pop
inc
mov
scas
into
stos
xor
out
jl
aad
mov
ljmp
ret
mov
sub
inc
js
fdivrl
in
cmp
into
cli
imull
mov
mov
inc
adc
stos
js
jge
mov
jp
mov
mov
push
outsb
xor
inc
shlb
stc
(bad)
mov
mov
xchg
push
movsl
cmp
(bad)
hlt
lret
adc
repnz
pop
incl
fistl
clc
xchg
inc
cltd
das
rorb
pop
out
daa
add
mov
lea
fwait

adc
or
(bad)
in
repz
movsl
insl
popa
insb
dec
add
or
mov
mov
xor
cmp
inc
mov
jle
inc
cmc
pop
mov
push
sub
out
jge
dec
add
inc
ds
inc
push
lret
iret
repz
adc
sarl
hlt
jg
mov
arpl
or
data16
pusha
in
ss
dec
sbb
inc
push
mov
xor
add
and
out
andl
aas
jne
and
faddl
insl
fistpl
enter
lahf
repz
pop
in
pop
(bad)
jbe
adc
or
aaa
jb
pushf
int3
cltd
sti
icebp
cmp
sti
pop
xor
aaa
and
addr16
enter
out
add
xchg
sbb
mov
jl
aam
pop
mov
add
shrl
fstps
in
ss
and
sbb
aaa
fs
fs
jmp
push
imul
push
lock
xor
add
outsb
orb
dec
mov
push
xchg
jo
rcrl
in
lcall
or
dec
insb
mov
pop
ljmp
jp
cld
dec
icebp
fcmovbe
add
out
mov
adc
add
mov
mov
sub
cld
push
dec
(bad)
cmp
mov
mov
inc
cmc
movsb
fdivrs
std
adc
push
jno
(bad)
popf
dec
xlat
xchg
fst
pop
and
xor
xor
ljmp
cmp
inc
mov
fcom
xchg
jp
sti
fcmovu
loopne
mov
popa
dec
movsl
shll
mov
sbb
lock
lcall
xchg
sub
push
stos
pusha
cmp
push
xchg
mov
imul
rcll
mov
(bad)
sub
mov
out
and
sub
cs
or
sahf
push
push
jnp
mov
std
xor
stos
pop
inc
mov
xor
cs
outsl
arpl
cmpb
rclb
cmpsl
fdivl
mov
mov
sub
jae
mov
inc
pop
mov
scas
lret
addr16
(bad)
hlt
dec
ret
mov
(bad)
jmp
pop
dec
pop
js
pop
sub
cmp
cmpsl
in
mov
add
enter
mov
pushf
cmp
in
pop
dec
fisttpll
(bad)
pop
jnp
and
push
sbb
mov
adcb
sbb
adc
jp
sub
insl
test
xchg
enter
leave
ja
lock
cltd
mov
jae
cmp
mov
dec
loop
and
test
jp
pop
mov
iret
outsl
mov
(bad)
and
lcall
jl
and
das
xchg
pop
insb
jle
outsb
scas
mov
jno
imul
push
xchg
jl
in
mov
push
or
subb
clc
mov
js
inc
loopne
sub
shlb
(bad)
and
xchg
sub
aad
movsl
inc
mov
pusha
testl
xchg
sbb
rcrl
or
push
ja
xchg
pusha
lea
out
movq
test
call
mov
add
mov
and
lds
mov
inc
or
xor
mov
add
test
pop
pop
cs
mov
decb
push
imul
xor
adc
cwtl
mov
insb
dec
test
mov
sbb
or
mov
(bad)
nop

sti
xor
cmpsb
push
pop
loope
lock
ret
jb
test
les
imul
mov
(bad)
cld
bound
sbb
cmc
fists
les
in
adc
les
jae
je
push
add
jb
and
nop

push
in
mov
fwait

mov
inc
add
mov
cmpb
andb
mov
ds
sbb
pop
cmp
inc
sbb
iret
mov
push
and
out
sbb
fnstcw
out
in
jl
cmp
sbb
xchg
mov
and
cltd
mov
hlt
cltd
pop
sbb
or
mov
pop
in
mov
mov
insb
nop

popa
fisttpll
pminub
cmp
cwtl
jbe
push
idivb
push
into
out
mov
mov
add
inc
mov
mov
push
data16
cmp
lcall
movsl
fucomi
inc
shlb
inc
mov
(bad)
cltd
jbe
stos
pop
movsb
sahf
shrb
ret
mov
in
sub
push
movsl
stos
movsb
cmpsl
jnp
clc
ds
xchg
pop
enter
pop
movsb
adc
push
adc
cmp
pop
sbb
sub
xchg
loopne
mov
adc
jns
bound
(bad)
aaa
add
aaa
mov
shll
leave
mov
outsb
out
mov
xchg
or
(bad)
mov
testl
and
xor
dec
out
add
sbb
push
test
lahf
fstps
jl
fidivl
insb
out
ja
pop
cmpl
mov
xchg
scas
ds
pushf
push
test
test
sarb
inc
out
push
das
fistl
aam
jae
jo
mov
xchg
xchg
or
ja
mov
sarl
loopne
clc
test
jecxz
stc
popa
lcall
test
je
lea
mov
mov
sub
cltd
sbb
xor
add
scas
loope
leave
xor
sbb
inc
pop
int3
cmp
ss
js
dec
int3
shr
dec
fisttpll
pusha
(bad)
jmp
bound
pop
out
xor
shlb
lods
aaa
push
popf
js
shll
push
movsb
enter
loope
dec
lds
out
push
enter
outsl
xchg
ljmp
mov
sbb
add
push
jp
xor
fxch
int3
aaa
xor
cmp
enter
mov
jno
imul
out
dec
out
lret
sbb
jg
andb
pop
sub
sub
addr16
int
push
mov
hlt
mov
add
pop
negl
rcrb
pop
mov
cmp
dec
pusha
mov
inc
add
jo
xchg
lock
pop
mov
decl
outsb
outsb
int
repz
ds
sbb
jg
pop
lret
xchg
push
or
sbb
add
xorb
ret
or
or
adc
sarl
and
xchg
xor
pop
jge
xor
mov
push
(bad)
icebp
xor
mov
hlt
imul
pop
sbb
pop
lods
xor
xchg
xchg
out
shrb
push
loop
pusha
loope
mov
push
sti
sbb
or
inc
fisttps
dec
inc
inc
cmp
hlt
sub
test
ret
adc
lret
sbb
lds
cltd
push
dec
(bad)
stos
cwtl
mov
mov
add
je
mov
cmpsb
int
movsb
sbb
js
daa
push
hlt
mov
mov
mov
icebp
pushf
int
lods
out
push
roll
mov
sbb
dec
sbb
ret
cmp
pop
fstpl
dec
into
sub
dec
(bad)
sbb
or
in
fistps
(bad)
out
movsb
ja
insl
clc
in
or
aad
sahf
push
and
outsl
or
sub
inc
imul
xchg
inc
mov
sub
push
lock
leave
mov
nop

mov
imul
or
pop
and
mov
xor
cmp
push
aas
test
in
cld
xor
jne
lods
push
mov
icebp
pop
lods
rolb
nop

int
sub
fdivrl
(bad)
call
je,pt
data16
int
loop
jg
mov
pop
or
popa
xor
adc
stos
sub
xor
fsts
adc
inc
jmp
and
idivl
dec
(bad)
sbb
stos
imul
push
mov
int3
hlt
gs
test
and
sbb
adc
pushf
ljmp
jmp
dec
packssdw
sbb
loop
pop
dec
cltd
das
int3
xchg
xchg
iret
out
out
or
sub
fwait

jno
cmp
sub
subb
jmp
or
push
cmpl
into
dec
cmc
arpl
sub
sti
mov
cli
pop
pushf
and
xchg
mov
jno
iret
xor
imul
call
fidivs
mov
jae
adc
test
cpuid
push
pop
jb
arpl
(bad)
sub
xlat
dec
dec
pop
scas
pushf
dec
inc
push
sbb
xor
pop
(bad)
imul
cli
xchg
add
sbb
loopne
mov
rcrb
and
movsl
sti
mov
(bad)
das
fcoml
aad
icebp
aaa
fidivrs
aas
ljmp
test
leave
and
pop
mov
mov
and
stos
and
inc
dec
xchg
xor
jl
inc
nop

xchg
xchg
push
push
pop
xorl
out
jae
es
dec
jb
daa
shll
dec
sbb
add
xchg
in
es
xor
testb
jbe
ss
lods
mov
dec
(bad)
add
dec
loope
jno
dec
les
jbe
sarb
loop
dec
jge
push
inc
(bad)
sahf
lds
ret
adc
jmp
icebp
jno
mov
mov
icebp
rolb
inc
lret
call
fwait

push
jne
cmp
movsb
andl
insb
jl
xchg
cld
andb
inc
pop
push
pop
(bad)
int3
mov
shl
(bad)
fsubr
pop
mov
pusha
int3
pusha
mov
out
fsubrp
inc
mov
inc
and
dec
sub
fwait

arpl
cmp
std
ret
inc
add
cld
(bad)
sub
orl
cltd
jl
das
or
lock
repz
dec
ds
ds
jp
jo
sub
and
add
cmpsl
insb
sti
sti
adc
movsl
mov
mov
cltd
into
add
push
insb
gs
inc
inc
fxch
in
std
clc
std
ss
jle
xlat
jg
lahf
imul
mov
ficoms
and
insb
mov
xchg
cmc
int
jmp
scas
xchg
mov
sub
(bad)
aam
xchg
int3
in
fldcw
enter
or
insl
add
testl
add
xor
lcall
sbb
sub
adc
(bad)
out
push
push
and
pop
ljmp
insb
push
fldenv
cwtl
sub
stc
leave
ret
or
push
mov
jmp
push
ja
pop
inc
je
sahf
mov
inc
dec
mov
test
test
and
or
mov
push
mov
leave
cmp
dec
out
pop
mov
lock
iret
loop
sbb
cmp
xor
add
int3
jns
jecxz
sahf
sbb
jne
dec
jbe
fbld
push
jmp
sbb
jae
xchg
imul
cltd
mov
ja
xorb
pusha
sub
and
mov
push
leave
clc
cltd
jl
data16
aad
jnp
arpl
sub
je
mov
mov
xchg
int3
jp
clc
xlat
mov
xchg
je,pn
mov
dec
and
push
sub
jle
jbe
pop
add
fadd
sub
inc
mov
enter
sarl
push
jg
xor
in
cld
dec
hlt
xor
loopne
movsl
cmpsl
test
test
push
mov
mov
repz
in
mov
push
fwait

mov
das
test
add
loopne
mov
pop
pop
fwait

sub
nop

mov
int
pusha
cmp
mov
ds
roll
rclb
(bad)
sub
mov
add
or
jo
pop
sti
andb
out
nop

and
stos
pop
fisttps
push
adcl
mov
leave
inc
fwait

xor
xchg
jp
push
insl
push
mov
jne
dec
ss
adc
add
jns
andb
adc
sub
pusha
add
cmpsb
lcall
sti
inc
int3
push
cmpsb
pop
adc
mulb
jmp
add
mov
add
inc
inc
pushf
int
(bad)
neg
mov
adc
out
mov
xor
xor
inc
sub
pusha
scas
loop
(bad)
in
xor
xchg
and
xchg
mov
ret
test
pop
cmpsl
adc
test
jo
xchg
xor
inc
(bad)
or
add
lret
loop
stc
jbe
mov
outsb
mov
stos
mov
push
jb
ds
das
mov
std
jp
(bad)
(bad)
popa
ret
lcall
loope
xchg
es
push
into
mov
movsb
add
sti
int3
cmc
and
cmp
xor
add
xor
pop
fld
jecxz
add
add
cmp
jns
orl
ss
fidivrl
mov
fldcw
(bad)
(bad)
mov
cmp
les
xchg
loope
xchg
inc
or
cmp
sti
dec
insl
add
dec
(bad)
add
lds
or
mov
insb
xchg
mov
andl
insl
lret
(bad)
ds
add
sahf
daa
rcrb
push
test
hlt
pusha
sub
hlt
iret
adc
mov
xor
fisubrl
jo
add
fs
mov
scas
adc
enter
imul
adc
cmp
pop
clc
je
lret
pusha
icebp
out
mov
insb
pop
incb
mov
mov
scas
cltd
push
rcl
fsubrl
int3
or
movb
add
inc
scas
and
bound
lea
and
push
xchg
mov
dec
adc
sub
adc
in
sbb
call
pop
pop
movsb
leave
lcall
xlat
dec
xor
les
mov
cltd
lods
mov
sbbb
cld
push
add
add
nop

dec
xor
pop
cmp
sub
lcall
fs
push
mov
dec
mov
and
dec
stos
pop
roll
jge
sub
mov
mov
fmul
dec
(bad)
aas
in
roll
pusha
int
jecxz
push
mov
cld
lret
sbb
add
sti
cmp
mov
adc
push
push
push
stos
addr16
jns
xor
or
inc
(bad)
and
xor
std
popf
repz
cmp
imul
add
lahf
fucomp
cmp
add
jp
jecxz
repnz
(bad)
jle
mov
inc
dec
cmc
add
inc
test
xor
popa
cs
fsts
jle
sub
fiaddl
xchg
inc
cmpsb
and
mov
int
fadd
rorb
outsb
int3
push
jge,pn
insl
lods
pop
outsb
mov
nop

or
sub
jmp
fs
pop
mov
ret
dec
out
sahf
int
xchg
mov
sbb
lret
test
jle
push
in
stos
cmp
cmpsb
inc
inc
dec
mov
insl
dec
outsb
sub
inc
inc
jl
faddl
and
dec
insl
pop
fstps
cmpsl
mov
jle
call
repz
pop
dec
icebp
jns
dec
inc
outsb
aad
movsb
jp
lds
push
cmp
jp
loopne
das
js
out
filds
in
or
out
cmpsl
in
add
(bad)

jmp
test
jmp
mov
dec
push
push
xchg
lds
ja
sub
jbe
cmpsb
adc
xor
(bad)
xchg
(bad)
xor
mov
adc
xchg
mov
add
jmp
pop
aaa
int3
sbb
sbb
mov
lods
push
push
mov
incb
cs
inc
pop
jp
sarb
inc
stos
(bad)
cli
mov
addr16
(bad)
bound
mov
mov
bound
rcrl
loop
mov
mov
sbb
stc
xchg
imul
push
push
mov
xor
(bad)
pop
mov
inc
jmp
inc
cmpsb
es
sbb
shll
xor
in
mov
sbb
cmpsb
pop
xchg
sbb
cmp
push
(bad)
and
(bad)
push
mov
sti
lret
sbbb
sbb
roll
add
dec
push
dec
sbb
leave
cwtl
sbb
in
loopne
mov
insb
dec
and
sbb
movsb
cld
push
enterw
ds
sub
mov
adc
cwtl
ret
xchg
push
or
xchg
mov
xor
mov
loopne
arpl
push
dec
ljmp
mov
fcom
in
add
int
cmpsl
sbb
push
adc
pop
mov
cmp
outsb
and
in
lahf
fiadds
pop
lods
inc
out
xor
push
xor
dec
arpl
aad
jecxz
enter
nop

stos
adcl
inc
cmpl
mov
mov
test
out
iret
or
mov
cmc
mov
loop
stos
sub
je
cmp
dec
dec
inc
mov
(bad)
aad
lret
mov
xchg
(bad)
and
xrelease
push
sbb
je
pop
mov
shlb
push
lods
ficompl
ret
adc
sub
lock
loope
cmp
test
fcoml
lock
test
lret
add
lock
sbb
sbb
pushf
or
call
adc
mov
cmp
out
ljmp
sub
cmpsl
xchg
adc
jb
cmp
cmp
mov
xchg
into
mov
test
mov
enter
jnp
fldcw
add
adc
push
adc
push
mov
jo
push
jns
int
push
outsl
jl
push
pop
repz
and
shll
stos
sub
repnz
xor
mov
lret
or
dec
sti
mov
dec
xchg
movsl
dec
sub
icebp
adc
loopne
or
cmpsb
test
mov
dec
mov
sbb
cmp
adc
out
lret
push
cmc
jmp
pop
xchg
xchg
push
out
jg
out
flds
sub
push
arpl
std
xchg
rclb
test
lods
or
mov
xchg
lcall
outsl
cmc
and
inc
inc
cmp
int
in
and
dec
xchg
call
xor
cmpsl
jns
addr16
xor
jg
adc
ds
ja
pop
dec
xchg
push
mov
adc
xor
push
cmc
sbb
addr16
mov
out
sub
pop
pop
out
sahf
dec
xchg
fsubr
pusha
sub
inc
aaa
or
rol
stos
fcomps
dec
xchg
add
(bad)
shlb
and
in
push
mov
rorl
iret
clc
sbb
ja
ss
sbb
xchg
sbb
pusha
fsubrs
pop
scas
mov
mov
xchg
in
push
out
inc
test
outsb
ss
pop
mov
fiaddl
sbb
stos
cmpsl
aam
iret
in
stc
out
movsb
popf
sahf
mov
mov
lret
mov
add
negl
add
push
js
xchg
stos
stos
cmpb
icebp
int
es
popf
xchg
sahf
filds
add
add
call
xor
pop
dec
gs
mov
test
or
sub
and
sbb
je
fnstenv
fldt
popf
(bad)
fsub
(bad)
mov
ja
adc
divl
and
mov
lahf
mov
xor
(bad)
cmp
(bad)
icebp
in
pop
jp
xor
jmp
out
mov
adc
mov
rcl
dec
or
(bad)
jge
loope
xor
lret
jnp
into
mov
test
cmp
pop
inc
shll
or
xchg
sbb
mov
push
or
repnz
imul
out
int3
adc
out
sbb
mov
int3
xchg
pop
mov
ljmp
sbb
or
jbe
cld
mov
push
notl
push
jne
push
enter
faddl
les
cs
pop
les
sbb
in
cmp
inc
sub
pop
ljmp
mov
pop
inc
sub
adc
sub
movsl
scas
loope
mov
jo
jne
enter
xor
sbb
or
inc
mov
sub
jo
cmpsl
push
push
sbb
out
lcall
or
inc
dec
adc
mov
mov
sahf
pop
loopne
sbb
push
sbb
jecxz
mov
cmp
mov
sub
test
iret
mov
pop
add
scas
outsl
mov
ret
sahf
fs
xor
lahf
pop
cmp
push
pop
pop
aas
into
subl
xchg
cmp
mov
rcrl
sbb
jae
pop
ret
ss
ss
push
pop
mov
mov
jle
(bad)
lds
cmp
mov
shrl
mov
push
jle
test
insb
fadds
or
add
jns
pusha
mov
sarl
(bad)

outsb
stos
add
cmpsl
aam
and
mov
xlat
fldcw
loop
add
mov
dec
std
xor
repnz
xchg
sub
enter
inc
fistps
mov
cmpb
fbstp
fldl
jae
cmc
jmp
orl
jo
and
mov
cltd
and
mov
(bad)
idivl
(bad)
(bad)
stc
das
mov
xlat
xchg
inc
in
sti
rcrl
(bad)
test
aas
mov
int
insb
cmc
(bad)
iret
or
xchg
pop
or
andb
jcxz
xor
addr16
or
mov
stos
pop
pop
subb
jecxz
sahf
push
testl
enter
dec
mov
mov
adc
inc
cli
add
flds
cmpsb
push
dec
sub
(bad)
pop
jo
cmc
mov
pop
fdivp
inc
dec
pop
jle
dec
mov
add
inc
sub
test
jno
mull
mov
addr16
pop
aam
jae
aad
cmpsb
mov
jecxz
rorl
imul
bound
fcmovb
iret
outsl
orb
stc
mov
ficoml
cld
stc
fadds
(bad)
inc
outsb
das
mov
cmp
lcall
pop
sbb
ds
les
cmp
inc
dec
ret
ffree
out
push
insb
sbb
and
into
adc
xor
cmp
mov
clc
dec
out
cmpsb
jne
cld
inc
daa
push
sub
dec
push
inc
movb
mov
outsl
cmp
jo
sbb
jmp
cmp
mov
movb
out
dec
and
jge
xlat
jbe
pop
test
lret
roll
push
xrelease
push
lahf
dec
mov
add
sbb
pop
incb
fidivrs
pop
cmp
ljmp
andl
lret
pop
jo
movsl
icebp
stmxcsr
cmpsb
mov
inc
hlt
cmp
mov
xchg
or
push
gs
pushf
jp
inc
(bad)
daa
adc
push
mov
sub
out
add
sti
clc
int3
sbb
add
xor
aad
jnp
cwtl
enter
adc
mov
jns
and
xor
outsl
in
in
xchg
out
cs
cmp
test
shr
pop
sbb
fnsave
shll
cli
sub
mov
inc
cmc
push
and
xor
add
push
xchg
cmp
mov
cmp
xor
xchg
fsubl
fisubrs
and
fisubrl
fstl
out
sub
push
cmpsb
lods
jnp
insb
fists
dec
cmpsl
add
adc
mov
sub
inc
inc
lret
ja
insb
repz
outsl
scas
pop
imul
shl
fucom
cmpsl
push
xchg
and
or
xor
mov
xchg
fdivrl
sub
or
push
pop
rcrb
ret
inc
pop
cltd
dec
js
xchg
sti
outsl
pop
mov
inc
testb
scas
cmp
cmp
sub
xchg
pop
sbb
testb
js
lods
bound
jecxz
or
jns
sbb
arpl
jnp
dec
mov
loope
test
lret
aaa
popf
push
push
std
shll
mov
add
sbb
mov
in
fcoms
movsb
pop
jecxz
rorl
xchg
mov
call
sbb
sarb
stos
pop
jns
add
jg
push
cmc
sbb
adc
sub
ja
mov
pop
and
movsb
inc
fidivrl
movsl
leave
pusha
and
aad
inc
sbb
insl
je
mov
push
jnp
mov
inc
pop
rcrl
pop
mov
leave
push
dec
out
sbb
(bad)
into
nop

les
and
enter
lds
cmp
pop
mov
push
ds
(bad)
adc
xchg
sub
or
add
(bad)
and
sub
lods
sub
lods
ficoms
inc
js
dec
lods
mov
mov
push
cli
les
mov
push
insl
push
in
dec
sub
mov
mov
cmp
pop
mov
jnp
jae
push
in
push
or
movsl
cmp
loop
inc
clc
jge
bound
sub
xor
cmp
adcl
jecxz
sub
inc
xchg
xor
mov
in
xchg
mov
cmp
dec
or
into
inc
jne
mov
pushf
in
push
dec
cmp
xchg
leave
inc
add
dec
cmp
sbb
je
daa
push
das
sar
push
flds
sub
xchg
xorb
xor
sub
sub
pop
aad
push
pushf
in
pushaw
add
(bad)
and
inc
ror
dec
das
jne
iret
mov
orl
out
es
orb
cmp
cli
test
js
push
clc
or
xchg
or
subl
add
mov
out
daa
cwtl
insb
mov
sbb
add
pop
mov
pop
out
pop
push
pop
(bad)
jmp
(bad)

js
xor
pop
aas
xor
movups
lods
mov
insl
add
inc
jl
push
outsl
adc
mov
sti
aaa
test
inc
fdivrp
push
jne
mov
pusha
mov
dec
cwtl
ret
(bad)
mov
loopne
cmpsl
pop
mov
mov
mov
and
fsubrs
call
push
jo
jno
out
ja
cmp
sub
fnsave
jp
xorb
xchg
gs
leave
push
xchg
decb
movsb
xlat
out
shl
cmp
cld
inc
cmp
int3
icebp
or
cmp
mov
fmull
pop
xor
imul
leave
jmp
xchg
sbb
pusha
mov
dec
fldcw
adc
adc
ret
rcll
dec
pop
adc
cmc
les
fwait

push
inc
bound
or
and
add
jmp
or
ds
xchg
mov
test
and
mov
or
repnz
loope
adc
pop
mov
setl
bsf
mov
(bad)
cmpsb
shrl
scas
outsb
enter
add
les
ljmp
(bad)
jmp
popf
xchg
rclb
jnp
movsl
pop
pop
dec
mov
cwtl
add
loop
imul
xchg
fucompp
inc
lock
rorb
and
jnp
icebp
mov
cli
xchg
fsts
jns
xor
xchg
(bad)
insb
pop
lret
adc
push
addr16
adc
in
dec
pop
pushf
add
sub
(bad)
shll
xchg
xchg
leave
imul
push
fisubs
testb
jne
jecxz
imul
leave
mov
(bad)
mov
divb
in
imul
pop
jg
scas
mov
hlt
or
lcall
adc
adc
cmp
jmp
push
cmpsb
pop
push
add
xor
jne
in
xchg
pop
adc
fst
sahf
sbbb
lret
(bad)
dec
out
jecxz
mov
fxam
lea
cmp
out
pop
shlb
sub
sub
pop
shlb
stc
sub
pop
xchg
mov
mov
fwait

std
jl
jmp
jno
cltd
(bad)
loop
jnp
add
and
mov
pop
stos
lahf
mov
movsl
and
mov
adc
shlb
fmuls
xor
imulb
rclb
enter
cltd
adcb
scas
mov
clc
popa
sti
repnz
mov
xor
addr16
inc
fstl
push
add
out
out
lret
out
xchg
dec
dec
aaa
(bad)
fimuls
test
cs
or
lahf
ja
mov
fcmovb
mov
xor
jge
and
data16
xchg
movsb
or
inc
and
popf
gs
testl
adc
mov
cmp
cs
add
sub
jne
dec
adc
jae
fcoml
stos
lret
clc
nop

rolb
test
cmc
sbb
adc
std
sti
cwtl
in
aas
mov
add
daa
outsl
in
out
int3
(bad)
push
sub
sub
mov
dec
mul
cwtl
lods
fstps
fdivrs
out
pushf
jnp
mov
into
jb
pop
scas
xchg
xchg
in
mov
ljmp
lock
ret
das
dec
sbb
lcall
adc
push
lea
jmp
dec
xor
dec
sbb
jnp
imul
ret
test
(bad)
xchg
fimuls
(bad)
and
push
mov
or
push
js
shlb
test
jp
sub
xor
or
mov
fldcw
js
jp
popf
jge
rol
(bad)
(bad)
fsubrs
xor
imul
loop
std
shrl
mov
aas
inc
aas
xchg
xchg
call
cmp
aam
adc
cmp
mov
fs
add
js
gs
or
lcall
jo
or
dec
dec
pop
pop
adc
movsb
jle
ljmp
adcl
xor
push
fldt
loopne
xor
pop
pop
test
mov
sub
ja
push
inc
addl
cmp
lcall
stc
push
push
data16
push
(bad)
lds
fxch
lds
cmp
xchg
(bad)
popa
sbb
sbb
dec
imul
out
sahf
and
push
push
rcll
sub
lahf
dec
adc
pop
fbstp
inc
cmp
or
shll
dec
lret
adc
cs
(bad)
enter
loope
shrl
and
xchg
lret
shlb
mov
cmpsb
mov
mov
cli
jle
mov
dec
stos
jno
incl
mov
pop
clc
xor
add
mov
cmc
ret
add
inc
mov
inc
sbb
outsb
or
pop
std
sub
push
inc
xchg
insb
dec
mov
(bad)
notb
dec
lods
js
aam
test
dec
(bad)
mov
dec
xchg
mov
jne
dec
add
add
mov
bound
xor
stos
and
fcmovbe
loop
rorb
scas
inc
add
mov
push
dec
cmc
sbb
mov
mov
xor
push
int3
fld
mov
pop
jecxz
pop
sub
cmp
adc
dec
xor
pop
push
dec
lea
jae
mov
enter
cmp
addl
pop
adc
xchg
mov
cwtl
outsb
mov
(bad)
pop
xor
imul
jge
pop
jns
inc
mov
iret
sahf
mov
sbb
imul
jmp
or
sub
stc
add
mov
dec
pop
addr16
fsubrl
mov
shr
lds
pop
xchg
sub
cld
outsl
fmuls
sub
and
lods
imul
jae
shrl
cld
dec
dec
jb
ja
and
jle
inc
cs
mov
test
sarl
jnp
jbe
insl
icebp
xchg
(bad)
cmc
mov
lock
push
jle
fucomi
add
sarl
xchg
mov
push
fwait

push
push
icebp
stos
fmul
in
add
fninit
dec
lods
stos
into
fnstsw
jns
fdivrl
je
inc
enter
ja
push
mov
test
jge
sbb
mov
xchg
inc
test
push
jecxz
lcall
mov
insl
mov
cmp
mov
cmpsb
scas
xchg
pop
sbb
push
ja
xor
sti
jecxz
mov
cmpb
pop
inc
mov
cmp
adc
dec
(bad)
into
movsb
or
jmp
lret
lcall
idivl
adc
sbb
jecxz
test
sub
add
xor
push
fsubs
out
xor
inc
orl
test
mov
cmpsl
rcll
pusha
mov
in
adc
hlt
fisubrs
negb
jnp
adc
cmc
add
jp
(bad)
mov
repnz
rolb
arpl
insl
mov
inc
mov
push
xor
adc
mov
add
jns
js
loope
ret
add
sub
int
mov
mov
cmp
adc
(bad)
aam
mov
int3
jle
movsl
int
pop
mov
jg
push
cmp
pop
das
fsubrs
adc
cwtl
jae
or
jecxz
sub
jecxz
xchg
pop
and
push
push
mov
mov
aaa
fadds
adc
pop
cmpsl
mov
iret
jl
in
lcall
insl
push
jnp
pop
pop
jb
mov
adc
in
mov
loopne
scas
sbbb
iret
cmpsb
jno
push
pop
daa
pusha
outsl
fucom
(bad)
loopne
out
test
or
pop
dec
rorb
cld
add
mov
(bad)
jne
ds
cmp
or
jle
xlat
and
imul
into
push
shrb
jnp
sarl
outsl
lahf
fsubs
jo
cmp
jmp
xchg
stos
(bad)
sbb
jo
jge
inc
jno
dec
inc
jno
shlb
pop
fsub
sbb
cmp
(bad)
mov
sbb
iret
inc
sub
out
je
jne
mov
or
xor
loopne
mov
inc
sbb
pop
aas
mov
push
dec
insb
cmp
dec
xor
lea
dec
rclb
push
movsb
xchg
dec
jge
shrl
pop
aas
xchg
outsl
gs
mov
leave
sbb
(bad)
in
subl
jl
popf
cwtl
repnz
mov
icebp
mov
or
es
mov
int
je
xor
mov
and
loop
cmp
cmp
xor
or
sahf
jle
mov
inc
inc
push
push
or
jle
es
cltd
mov
nop

push
sub
js
sub
add
lods
int
fs
pop
adc
fwait

cmp
(bad)
add
inc
ja
sbb
pop
sbb
shlb
pusha
loope
jl
adc
add
pusha
push
adc
and
fmuls
fisttpl
outsb
push
fsubrl
inc
jmp
mov
push
cmp
mul
cwtl
iret
mov
mov
scas
fiadds
mov
mov
pop
lods
inc
jge
fiadds
insb
in
mov
(bad)
xchg
jmp
in
inc
mov
repz
jl
inc
push
sbb
lock
pop
movzwl
into
mov
testb
int
jmp
pop
int
sub
in
cmp
push
mov
push
push
imul
mov
popf
cmp
and
stos
jge
inc
jb
push
pop
sub
lds
mov
js
mov
dec
fs
jmp
sbb
pop
adc
pop
cmpl
dec
push
popf
lcall
leave
lahf
mov
inc
sti
fcoml
lods
cli
scas
cltd
in
les
mov
adc
xor
pushf
insl
jno
das
frstor
flds
(bad)
loopne
inc
es
int
aas
sbb
mov
test
dec
sbb
jns
mov
repnz
jnp
mov
scas
pop
fldt
sahf
and
sbb
pushf
mov
aam
dec
jo
dec
loop
mov
mov
std
hlt
movsb
add
jb
or
out
bound
xchg
and
inc
xor
in
test
lret
lods
loopne
ja
adc
sti
insl
mov
cmp
call
cli
les
jle
or
xchg
mov
nop

cmp
orb
fs
mov
jecxz
dec
mov
xchg
cltd
stos
mov
pushf
fs
mov
sub
mov
jnp
(bad)
sbb
xorl
jmp
rolb
rcl
or
hlt
inc
mov
add
test
flds
jns
pop
pop
frstor
lock
imul
inc
xchg
les
inc
mov
cltd
jb
mov
and
push
cmp
mov
or
shll
(bad)
loopne
and
cltd
mov
add
and
lret
pop
sahf
xor
push
pop
add
ss
or
dec
and
push
mov
movsl
jg
daa
mov
lods
(bad)
sub
mov
xor
mov
mov
in
cltd
xor
pusha
push
lahf
xchg
mov
sub
cmp
fnstcw
fistpll
mov
mov
sbb
mov
int3
out
test
push
js
xor
mull
movsb
(bad)
vpmaddwd
jb
daa
pop
mov
and
(bad)
leave
and
inc
insb
dec
aaa
ds
mov
xchg
iret
stos
add
jne
pop
sbb
sbb
(bad)
jno
jmp
das
and
lahf
sarl
movsl
js
popf
jbe
in
(bad)
cmp
in
inc
cmp
and
insl
(bad)
adc
jae
mov
xchg
enter
scas
movsl
mov
pop
lret
les
cwtl
jns
fs
sub
inc
sub
jle
jl
out
test
inc
mov
lds
xchg
mov
(bad)
std
xchg
stos
repz
jmp
or
cmp
jge
jb
push
sbb
cmp
ja
ljmp
sahf
push
loop
test
xchg
sbbl
test
inc
sbb
adc
aad
leave
xchg
in
push
jb
dec
jmp
(bad)
xlat
dec
pop
popa
jnp
cld
pop
sarb
rcrl
mov
test
push
jecxz
(bad)
inc
xchg
insl
add
aam
sbb
inc
xor
aam
mov
out
sbb
mov
aas
and
push
insl
imul
adc
addr16
and
leave
outsl
repnz
adc
jmp
xor
lods
jge
xchg
dec
sbb
xchg
stc
fsubrl
faddl
inc
pop
xor
pushf
mov
insl
daa
fcom
push
or
cmp
out
xor
mov
mov
mov
subb
mov
lock
mov
jne
or
fs
fnstsw
or
mov
in
jbe
fimuls
push
sbb
jns
into
jle
mov
push
xlat
pop
stos
bound
out
mov
or
cmpl
and
xchg
adc
stos
cmp
arpl
test
call
sbb
cmp
call
popf
aas
xchg
xor
inc
in
mov
push
fsubl
pop
enter
lock
push
loop
and
orl
shll
jmp
loope
addb
mov
aad
sti
dec
sbb
(bad)
sti
jge
mov
scas
inc
(bad)
lock
insb
jecxz
cmp
jnp
dec
mov
mov
and
stos
mov
mov
andl
mov
fistps
mov
jbe
push
sti
daa
mov
stos
jb
stc
mov
movsb
movsl
pop
sbb
scas
add
fisubl
outsl
enter
mov
aad
iret
mov
cwtl
in
sub
and
jo
call
jo
mov
xor
mov
mov
or
cld
stos
pusha
inc
sbb
add
push
(bad)
jmp
xchg
xchg
xorw
or
fsubl
push
fildl
divb
jecxz
mov
inc
xor
mov
push
mov
cli
or
sbb
aas
daa
jg
(bad)
ss
icebp
dec
mov
test
rcll
push
lahf
enter
push
jns
icebp
xchg
in
mov
sbb
pusha
arpl
dec
andb
in
sub
sbb
into
dec
dec
mov
sub
leave
add
arpl
or
aad
sub
out
in
cmp
imul
repnz
mov
jb
sahf
ret
cltd
aam
sti
popa
out
lcall
rcl
shr
cs
loopne
das
jno
and
cltd
push
pushf
or
pop
aas
pop
pop
mov
or
in
(bad)
outsb
jb
test
add
test
dec
pop
cld
cmpsl
jmp
popf
mov
out
insl
decl
mov
jmp
pop
cmpsl
arpl
lea
and
mov
loop
lea
sbb
pop
fsubrl
xor
das
mov
shrl
aad
fsubrs
shl
pop
mov
notb
outsb
adc
pop
js
push
push
dec
sbb
pusha
inc
enter
inc
cmp
insl
fidivs
lea
add
sbb
fsts
std
xor
ja
test
subl
das
pop
add
call
sbb
cmp
leave
aam
mov
out
in
es
sub
xchg
xor
ret
les
xchg
push
jbe
aas
idivl
push
jge
jno
ret
popf
dec
les
out
xchg
les
loop
pop
sarl
xchg
lcall
xchg
dec
hlt
add
or
jmp
add
(bad)
fldl
or
mov
inc
jmp
ret
mov
leave
dec
mov
cmp
cmpsl
sahf
les
fnsave
xchg
in
push
xor
dec
jo
fildl
imul
divb
inc
xchg
leave
sbb
repnz
shr
insl
add
fildll
dec
fmull
stc
sti
inc
adc
(bad)
sub
arpl
mov
xchg
sub
addr16
push
cs
mov
ja
dec
sti
xchg
cld
pop
stc
inc
adcb
mov
ds
fs
sti
and
aad
cmp
mov
jns
jbe
int
mov
mov
in
push
jecxz
or
cmpsl
xor
mov
jge
fiaddl
test
jo
mov
xchg
out
push
xor
loopne
js
call
or
movsl
sub
out
or
lods
xorb
mov
push
nop

les
mull
je
pop
pop
pop
mov
or
cltd
xor
imul
sbb
in
and
(bad)
mov
or
rorl
xchg
cmpsl
adc
lds
popl
cwtl
mov
or
mov
add
and
adc
fwait

icebp
or
ret
jo
mov
sbb
mov
arpl
flds
test
movsb
fimull
sbb
push
sub
adc
(bad)
lret
pop
lods
cmp
pop
xor
jmp
fcompl
xchg
out
xor
or
hlt
lods
mov
jl
lret
int3
mov
mov
mov
pop
pop
jno
pop
sub
pop
adc
add
adcl
in
and
rclb
in
mov
scas
push
in
(bad)
out
mov
or
jno,pt
add
shlb
movl
add
pop
cmp
mov
nop

ljmp
jbe
fucom
and
sbb
xchg
jae
test
xor
in
mov
add
ret
inc
xchg
and
ficompl
xchg
mov
repnz
sbb
xor
fildl
out
inc
clc
jle
cmp
cmpb
push
dec
fwait

xor
in
cmpsb
lds
sub
and
aas
adc
or
or
sub
adc
mov
inc
jns
fcomps
js
xchg
xlat
das
adc
pop
pop
push
cmp
je
sti
push
neg
push
sbb
fldt
inc
mov
out
xor
or
ja
or
push
fnop
xor
xchg
pop
insl
jns
pushf
or
cmp
ljmp
(bad)
dec
xchg
andb
push
cmpsb
int
outsl
test
cli
fwait

pushf
adc
cwtl
dec
jo
pop
push
or
inc
jp
leave
dec
sbb
add
sbb
push
jae
mov
mov
lahf
sub
lods
sbb
(bad)
incl
adc
inc
sub
gs
lock
xchg
outsb
ja
xchg
dec
pusha
movsl
jne
loopne
xor
fnsave
shll
loopne
or
scas
inc
push
xchg
ret
mov
lahf
xor
aas
mov
pop
push
repnz
pop
xor
and
pop
call
dec
dec
test
popf
jmp
sbb
(bad)

ja
(bad)
clc
ret
sub
jnp
ljmp
loope
cli
jmp
out
(bad)
int
lea
push
push
xchg
test
push
scas
or
adc
xchg
je
fwait

mov
mov
inc
push
pop
icebp
dec
fdivs
adc
dec
and
lret
mov
cmpb
shll
jp
xchg
dec
mov
nop

pop
pop
cwtl
jmp
push
out
xor
xchg
lea
push
sub
call
cmp
shrl
or
(bad)
jle
icebp
adc
push
filds
mov
test
xchg
and
fisttpl
arpl
adc
or
dec
aad
test
push
sbb
movsl
les
in
inc
arpl
xor
imul
cmp
jnp
das
xor
and
pop
sahf
xchg
mov
xor
loop
nop

xchg
dec
mov
lahf
xor
pushf
cltd
cmp
loopne
out
out
stos
pop
dec
mov
sub
bound
mov
cmp
pop
mov
adc
das
popa
out
push
cli
jecxz
movsb
lds
jmp
cmc
lret
shl
int
cwtl
xlat
stos
xor
loope
sarl
push
pop
out
jo
add
in
or
dec
sub
ja
les
sbb
add
fistpll
cmpl
out
or
jo
and
stc
mov
fildl
test
push
bound
pop
hlt
ss
fisubrs
inc
pop
and
xchg
or
mov
push
aas
cmp
mov
mov
rolb
shr
(bad)
leave
push
dec
and
cmp
cmpsb
scas
and
movsl
xor
xor
popa
mov
pop
or
stc
ror
jae
popa
enter
jne
dec
cmp
imul
cmp
(bad)
mov
dec
cltd
andb
rclb
aam
divb
sub
in
sbb
fsts
mov
xchg
out
ljmp
cs
mov
push
nop

call
xor
scas
lret
sub
outsb
out
sub
pop
pop
mov
leave
hlt
xchg
int
push
sbb
aad
jl
into
sbb
sbb
nop

push
nop

in
xchg
mov
and
jno
xchg
lock
aad
je
adc
(bad)
aam
leave
push
test
enter
sub
outsb
cmpsl
cs
rclb
lea
or
sub
sbb
sbb
adc
cmpsl
out
rorw
xor
inc
fs
xor
in
adcb
jp
mov
pop
lds
push
nop

aaa
lods
scas
xchg
(bad)
fisubs
jmp
xchg
(bad)
pop
ds
xchg
mov
mov
sub
fwait

shlb
xchg
insl
ljmp
dec
fisttpll
js
add
pop
xchg
inc
dec
pop
imul
cli
and
out
mov
cli
fwait

mov
call
cld
push
sbb
add
dec
dec
je
test
sarb
cmp
shll
and
fucomi
xlat
sbb
out
pop
jbe
sub
sahf
sbb
mov
and
xchg
xor
iret
sub
xchg
xor
or
push
aas
sti
mov
sbb
jbe
xor
mov
mov
movsl
mov
cmpsl
lahf
mov
les
inc
xor
mov
add
lods
outsl
add
inc
idiv
sbb
imul
dec
xor
cmp
cwtl
jg
aaa
adc
cmc
and
and
or
scas
push
int3
lods
jecxz
arpl
insl
sbb
incb
sbb
mov
xor
pop
mov
xor
sbb
test
cmp
dec
outsl
bound
test
xor
cmp
adc
fsubrl
test
jle
push
jae
gs
xor
ret
mov
xor
loop
fists
mov
and
xor
insb
aas
clc
jmp
mov
mov
inc
and
cmpb
xchg
mov
jae
std
nop

pop
mul
jmp
xchg
sbb
test
lret
adcb
cmp
(bad)
rcr
mov
es
jl
xchg
rcrb
ja
arpl
mov
insb
pop
pop
dec
add
nop

loop
jg
mov
ss
sub
adc
loope
call
fldenv
ds
insl
jmp
mov
mov
repz
inc
sti
xor
fstl
mov
movsb
cmp
inc
sarb
and
sti
cltd
lock
enter
fs
xchg
dec
inc
aas
test
xor
jge
mov
jg
xor
fisubrl
(bad)
insl
mov
or
in
in
xlat
rcrb
mov
fstpl
lock
les
pop
pop
(bad)
cld
outsb
or
scas
out
pusha
sub
jno
insb
leave
mov
inc
push
or
test
mov
jb
jl
xchg
mov
mov
push
mov
mov
adc
and
sbb
in
pop
sbb
je
movsb
movsl
lock
pop
in
and
pop
mov
pop
lods
cmp
js
lods
enter
dec
cmp
jl
sub
jge
clc
es
into
and
jne
adc
mov
loope
xchg
xor
mov
mov
js
aaa
out
and
mov
or
cmpsl
and
(bad)
sbb
and
pop
xchg
loop
xor
mov
mov
xchg
shll
xchg
mov
sub
lcall
push
inc
xchg
mov
faddl
push
aaa
add
or
cmp
inc
mov
iret
insb
adc
mov
mov
inc
repnz
adc
push
dec
or
loop
and
mov
xchg
mov
fwait

mov
andb
mov
push
(bad)
cmpsb
mov
sub
insb
mov
ds
push
and
mov
pusha
scas
or
sbb
addb
add
jbe
js
adc
and
fwait

sbb
pop
add
xor
xlat
faddl
xor
loop
negb
call
loopne
or
jg
int
repz
ss
nop

iret
sbb
sbb
test
fcmovnbe
pop
and
dec
hlt
test
adc
dec
xorl
stc
or
lea
nop

pop
loop
out
aaa
out
pop
scas
cmpsl
push
(bad)
mov
mov
(bad)
out
shlb
data16
add
les
and
xchg
mov
pop
arpl
mov
leave
xchg
mov
xchg
or
sub
sbb
dec
or
in
enter
jnp
pop
or
icebp
jg
push
aad
les
imul
aaa
inc
clc
pop
mov
mov
dec
sub
cltd
add
sahf
jno
test
into
mov
xor
cmc
dec
rcrl
push
insl
jmp
or
xor
scas
push
xor
imul
mov
fadd
pop
addb
test
lods
lcall
sbb
imul
rcrb
sbb
jmp
scas
gs
push
push
rorl
jo
cmp
sub
cmp
mov
mov
inc
jnp
js
add
xchg
daa
push
push
sbb
jecxz
or
or
lret
test
andnps
stc
xchg
(bad)
and
dec
cli
push
ja
adc
fcmovnu
push
shrb
pop
scas
jecxz
js
into
jae
add
cmpsl
nop

pushf
sub
dec
mov
cmp
jo
arpl
sbb
xlat
xor
sarl
mov
shrb
and
push
mov
sbb
and
test
cmp
pop
pop
and
movsb
icebp
pop
or
dec
cmp
add
pushf
pop
into
xor
push
adc
fwait

testb
pop
dec
dec
cs
nop

sarb
xchg
es
popf
leave
cmp
sub
outsb
icebp
inc
pop
outsb
fdivrl
or
mov
jl
in
in
mov
jge
sub
adc
mul
shll
mov
lds
sub
stos
pop
and
push
push
into
loopne
mov
mov
scas
lret
mov
jmp
bound
mov
scas
lds
in
lret
cli
mov
xchg
mov
lock
push
sub
fcompl
imul
inc
jp
cwtl
add
imul
xchg
cmpsl
cmpsl
mov
mov
es
je
in
aas
int
cmc
in
mov
imul
test
rcl
jne
in
and
fstps
xchg
cld
sub
xor
outsb
push
xlat
xchg
mov
fisubrl
sub
rolb
lea
add
cltd
mov
scas
add
or
xor
mov
movl
jge
icebp
int3
dec
add
cmp
dec
aaa
imul
jb
stos
cmp
jp
sub
jle
xchg
iret
mov
jg
mov
jmp
jge
xchg
adcb
or
adc
push
sarb
lea
jb
imul
sub
addr16
push
xchg
adc
mov
jle
mov
inc
hlt
(bad)
xor
jp
pop
jo
repz
cmpsb
ljmp
pop
rorl
ret
dec
sub
xchg
pop
sbb
lret
and
data16
das
ret
adc
adc
mov
jnp
adc
loop
adc
cmp
xlat
addr16
xor
jae
imul
hlt
fs
dec
pop
mov
mov
xchg
repz
insb
sbb
push
shll
xor
push
movsl
push
mov
test
mov
xchg
gs
sbb
setne
shll
loop
out
outsl
and
popf
ljmp
cmp
sbb
and
jle
decl
adc
fs
(bad)
vpsrlw
add
push
pusha
outsl
aaa
mov
cld
pop
nop

add
fidivrs
pop
lcall
cli
mov
stc
jbe
push
jge
adc
jb
lret
mov
stos
pop
inc
cwtd
mov
mov
addr16
pop
inc
icebp
jne
pop
cmp
into
imul
imul
mov
jne
dec
std
adc
sti
sbb
xchg
dec
xchg
outsb
out
shll
das
pop
aaa
dec
inc
sbb
jo
add
mov
loop,pt
aaa
jne
aaa
push
in
lea
push
jae
fs
dec
mov
push
lret
clc
xchg
daa
xor
xchg
decb
mov
add
call
fstl
pop
jge
stos
or
mov
adc
push
insb
mov
mov
jb
sti
inc
int
xchg
sti
push
jle
popa
out
push
xlat
arpl
jnp
inc
int
lods
fldcw
loopne
mov
add
dec
mov
jo
sti
outsl
vmovaps
pop
das
add
aas
mov
clc
jnp
push
lock
add
and
xor
and
push
fcomi
sarl
xchg
pushf
sbb
pusha
sub
mov
shl
andl
lds
stos
xor
test
and
inc
(bad)
mov
jns
insb
ret
leave
addr16
and
sahf
xchg
jno
fdivrs
pop
loop,pn
cs
imul
ret
adc
shrb
and
psrld
inc
dec
fldcw
pop
pop
sbb
cltd
into
mov
loope
add
pusha
push
testl
sbb
xor
lea
jb
jmp
(bad)
pop
je
mov
or
cmpb
in
add
or
pop
stc
xchg
push
xchg
decb
push
pusha
js
or
and
mov
cwtl
dec
add
add
addr16
cmp
jl
mov
adc
dec
ret
shrb
imul
jmp
sub
xchg
sub
lods
or
sbbl
(bad)
insb
outsb
push
leave
gs
stc
push
std
leave
(bad)
ljmp
fisttps
insl
add
sbb
xchg
popa
rcll
mov
xchg
dec
lock
ds
icebp
(bad)
aam
lods
mov
popf
movsl
mov
jo
das
in
shrb
sbb
inc
xchg
cmc
pushl
push
adc
dec
test
xor
(bad)

jb
or
(bad)
dec
js
lret
in
dec
and
mov
das
rcll
pop
xor
stos
(bad)
mov
xchg
add
fwait

popa
(bad)
lods
es
and
mov
or
shr
orl
dec
out
pop
sarb
sub
cmp
pop
jbe
das
sbb
add
inc
sbb
out
div
lods
mov
std
sub
sti
fldt
xlat
inc
sbb
and
xor
pop
pop
shll
adc
leave
arpl
and
lods
jmp
or
mov
sbb
sbb
and
mov
gs
ss
mov
jge
hlt
inc
jne
and
shll
cmp
or
sbb
dec
dec
adc
faddl
xor
shrl
cmp
pushf
and
outsl
std
jle
cli
mov
leave
dec
popa
das
inc
sarb
inc
xor
dec
xlat
adc
or
popa
ja
adc
in
add
fbld
push
shl
sub
lea
pop
das
scas
mov
jecxz
cmp
and
xor
outsb
gs
scas
and
js
sbb
bound
shll
out
(bad)
jle
mov
sub
pop
add
jnp
lret
dec
mov
sti
sbb
in
into
orl
xchg
lret
sub
inc
mov
aas
mov
test
hlt
push
add
outsb
sub
arpl
dec
std
fstpt
xor
and
jecxz
loopne
add
mov
dec
fcomp
pop
in
int
sahf
push
xorl
dec
cs
bound
jae
pushf
push
out
xor
inc
add
in
xor
xor
mov
mov
pop
scas
ret
add
xor
cmp
arpl
pop
add
push
notb
repz
push
and
add
sahf
mov
dec
aaa
jg
adc
cmp
loope
xchg
int
add
loope
lcall
mov
mov
xor
popa
sub
cmp
mov
xchg
or
cmpsb
jge
cmp
mov
jno
int3
push
out
cmp
jmp
lock
leave
inc
jbe
sub
or
inc
adc
dec
xchg
jbe
dec
cli
pop
mov
mov
ficoms
jmp
ja
cltd
jnp,pn
outsb
pop
add
add
(bad)
outsb
js
add
ljmp
movsl
mov
mov
mov
inc
fnstsw
stos
and
loope
imul
aam
sarl
push
mov
lahf
push
jb
fisubl
jle
or
push
cli
mov
sub
pop
fiaddl
xor
cmc
add
sbb
into
xchg
jl
roll
mov
xchg
mov
push
addl
ljmp
cmp
(bad)
pop
call
(bad)
fwait

daa
pop
stc
fstps
and
js
repnz
and
fbld
add
push
jo
jb
es
mov
mov
jge
pop
push
fadd
sahf
mov
and
fstl
movsb
add
sbb
jle
daa
cmp
iret
xchg
test
jp
fadd
fstl
int
xor
iret
cs
aad
mov
stos
and
fcmovnb
hlt
std
cmpsb
scas
inc
(bad)
cmp
cmp
fstl
push
pop
mov
cmpsb
nop

mov
shll
aas
or
outsb
adc
mov
out
mov
hlt
ljmp
adc
jno
jecxz
mov
cwtl
pop
add
lret
adc
out
jb
xchg
jge
push
mull
adc
lret
inc
les
push
dec
sbbl
lea
jp
mov
dec
fwait

in
fcomip
ds
mov
lcall
out
push
je
inc
loope
lock
xor
xor
sbb
daa
adc
or
pop
das
cmp
inc
pop
adcb
sub
or
mov
mov
cmp
into
arpl
dec
add
es
xchg
cmpb
(bad)
and
int
ljmp
cmpsl
sub
push
test
push
sub
call
add
mov
mov
and
in
cmc
dec
and
mov
inc
inc
xchg
sbb
stos
into
ffree
inc
xlat
jnp
push
dec
jl
sbb
mov
shrl
dec
pop
xchg
cmc
sbb
rcl
jl
pusha
cli
mov
lcall
xorl
cmpsl
icebp
push
add
jne,pn
sbb
mov
mov
fwait

xchg
xchg
lock
loope
or
jnp
lock
bound
sbb
jbe
into
mov
in
test
imul
int
push
fistps
xlat
sti
cmp
or
pop
mov
sub
fsubrs
fcoms
pushf
fnstenv
add
pop
or
sub
and
lret
shll
push
dec
mov
les
jg
dec
adc
push
cvtps2pi
jnp
sarb
fisttpll
stos
insl
aam
lock
xlat
pusha
aas
testb
fwait

cmp
and
lock
pop
cmp
dec
adcl
bound
lds
ljmp
push
jbe
xchg
sub
add
and
cwtl
xchg
xor
ljmp
pop
imul
add
jb
xchg
stc
mov
out
ffreep
test
inc
std
ds
mov
addb
fnsave
sub
push
xor
xchg
xor
ret
orb
sbb
aaa
loopne
sbb
repnz
lcall
dec
call
mov
cmc
sub
cs
and
imul
es
or
rcr
pop
movsb
cli
xor
xor
cmp
sti
mov
xchg
(bad)
shlb
dec
xchg
stos
sbb
add
jbe
lock
ljmp
push
int3
mov
jp
push
xor
aam
pusha
jg
xor
popf
je
cmp
mov
stc
mov
sub
movsb
aas
(bad)

dec
push
inc
dec
dec
cs
dec
dec
add
push
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
push
add
add
add
dec
pop
inc
inc
inc
add
jne
addr16
jae
popa
je
jae
add
jne
addr16
jae
popa
je
jae
add
jne
addr16
outsb
outsl
je
outsw
jne
and
inc
bound
addr16
outsw
jne
and
push
mov
sub
call
push
pop
mov
xor
push
call
test
push
push
call
test
mov
call
push
push
push
push
call
xor
cmp
mov
test
xor
push
push
call
or
mov
int
mov
int
mov
int
mov
test
nop

nop

int
cmp
je
nop

nop

nop

push
cmp
setae
push
push
push
call
mov
int
mov
push
call
mov
add
mov
mov
xor
or
add
sub
mov
add
cmp
add
and
pop
call
inc
cmp
jne
mov
add
lea
sub
sub
call
add
sub
cmp
cmp
add
not
dec
call
call
not
or
lea
cmp
cmp
cmp
sub
lea
and
xor
sub
cmp
push
call
sub
xor
mov
add
xor
mov
xor
and
add
call
pusha
lea
sub
add
sub
mov
mov
xor
add
add
sub
xor
lea
add
sub
and
push
call
cmp
neg
sub
add
cmp
add
xor
mov
inc
sub
and
cmp
mov
xor
and
not
add
xor
xor
cmp
not
cmp
cmp
mov
popa
cmp
jne
call
mov
add
mov
mov
lea
pusha
xor
add
xor
xor
sub
or
xor
and
mov
xor
lea
sub
push
call
sub
cmp
add
xor
mov
or
nop

inc
add
dec
sub
sub
add
popa
mov
add
add
and
pusha
cmp
and
xor
mov
cmp
sub
sub
mov
inc
neg
and
mov
popa
add
push
push
push
push
call
pusha
cmp
add
mov
and
or
inc
xor
and
xor
and
xor
xor
sub
xor
xor
cmp
sub
call
add
cmp
not
xor
push
call
cmp
sub
add
mov
and
and
add
mov
popa
test
je
mov
mov
mov
lods
test
je
mov
stos
jmp
mov
mov
mov
rep
mov
add
jmp
push
mov
sub
call
pop
lea
push
add
mov
mov
mov
push
push
call
mov
mov
pop
push
mov
add
rep
lea
movzwl
pushl
push
push
call
pushl
pushl
call
push
push
mov
and
push
mov
add
push
jmp
and
dec
add
add
sub
add
lea
sub
nop

nop

nop

mov
xor
xor
neg
mov
xor
add
sub
sub
xor
sub
sub
add
xor
lea
mov
xor
xor
cmp
xor
cmp
cmp
xor
and
cmp
and
push
mov
pusha
mov
add
push
mov
mov
test
je
test
jne
mov
mov
add
add
mov
add
cmpb
jne
inc
jmp
push
call
mov
lods
test
je
bt
jae
and
jmp
add
add
push
push
push
call
pop
stos
jmp
pop
add
jmp
pop
popa
leave
ret
cmp
sub
neg
and
and
add
xor
mov
xor
add
mov
xor
push
mov
pusha
mov
mov
push
mov
add
mov
mov
add
rep
pop
add
dec
jne
popa
leave
ret
sub
and
cmp
sub
sub
lea
and
add
cmp
dec
sub
nop

nop

and
cmp
sub
sub
cmp
mov
cmp
and
not
and
cmp
add
sub
push
mov
pusha
mov
mov
add
push
call
push
push
push
call
push
push
push
push
call
test
je
add
cmp
jl
popa
leave
ret
sub
add
and
sub
xor
sub
sub
add
mov
add
sub
pusha
mov
xor
mov
std
stos
dec
jns
cld
xor
mov
xor
divb
xchg
xor
add
add
add
mov
movzbl
mov
mov
mov
inc
cmp
jne
popa
ret
add
xor
mov
sub
xor
sub
mov
xor
lea
xor
add
sub
and
add
sub
cmp
cmp
xor
mov
push
mov
pusha
mov
and
push
mov
add
pop
mov
movzbl
mov
mov
mov
mov
add
mov
popa
leave
ret
and
add
xor
xor
nop

sub
sub
sub
add
add
cmp
lea
push
mov
mov
and
xor
push
call
leave
ret
and
cmp
sub
mov
add
add
and
mov
add
mov
sub
mov
neg
xor
mov
cmp
lea
add
push
mov
pusha
movb
mov
mov
mov
lods
stos
test
je
loop
sub
neg
mov
call
popa
leave
ret
lea
xor
xor
cmp
and
add
sub
mov
mov
mov
xor
cmp
and
sub
add
not
sub
add
xor
sub
cmp
neg
cmp
mov
sub
add
sub
and
lea
add
xor
xor
push
call
mov
mov
mov
lods
push
call
stos
loop
ret
cmp
lea
dec
xor
sub
xor
add
sub
add
dec
add
add
cmp
add
call
xor
and
xor
sub
xor
add
add
cmp
sub
sub
cmp
sub
and
push
pop
mov
ret
lea
xor
and
xor
sub
and
xor
sub
or
cmp
xor
cmp
add
or
sub
mov
mov
sub
push
push
call
add
sub
not
xor
add
xor
and
sub
add
sub
add
cmp
xor
sub
and
and
push
pop
mov
ret
nop

push
pop
mov
xor
nop

int
cmp
je
push
pop
mov
xor
nop

mov
int
mov
int
mov
int
nop

mov
nop

test
nop

mov
int
mov
xor
mov
pushl
mov
xor
div
popl
add
xor
call
push
call
nop

push
push
mov
inc
add
sub
test
xor
pop
pop
pminsw
nop

push
push
call
test
jne
push
push
push
push
call
jmp
push
push
push
push
call
push
call
push
push
push
push
call
mov
mov
add
xor
mov
push
add
mov
movb
inc
dec
jne
dec
jne
pop
mov
push
call
mov
cmp
mov
mov
mov
mov
nop

push
push
call
rdtsc
xor
add
rdtsc
sub
cmp
jae
nop

mov
mov
mov
cmpl
jne
push
call
mov
mov
test
jne
mov
movb
call
mov
cmpb
jne
mov
mov
movzbl
or
jne
fnclex
fwait

smsw
test
jne
smsw
test
je
push
call
test
push
push
call
test
mov
call
push
push
push
push
call
xor
cmp
mov
test
xor
xor
mov
ret
rdtsc
int
xor
add
push
pop
mov
xor
mov
mov
mov
jmp
mov
int
int
int
push
call
int
loop
test
test
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
nop

xchg
inc
ror
xor
imul
xor
push
push
pushl
mov
imul
xor
pop
pop
pop
mov
jmp
call
mov
nop

xchg
inc
ror
xor
test
mov
mov
test
xchg
inc
dec
xor
test
mov
mov
test
xchg
inc
ror
test
imul
mov
mov
test
xchg
sub
ror
test
test
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
mov
nop

xchg
sub
dec
xor
test
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
nop

xchg
inc
dec
xor
imul
xor
push
push
pushl
mov
imul
xor
pop
pop
pop
mov
jmp
call
mov
nop

xchg
inc
ror
xor
fwait

mov
mov
test
xchg
inc
dec
xor
test
nop

xchg
inc
ror
xor
imul
mov
mov
nop

xchg
inc
ror
test
imul
inc
inc
test
xchg
sub
dec
test
test
inc
mov
test
xchg
sub
ror
xor
imul
mov
mov
nop

xchg
sub
ror
xor
imul
mov
mov
nop

xchg
inc
dec
xor
dec
mov
mov
nop

xchg
inc
ror
test
test
xor
push
push
pushl
mov
test
xor
pop
pop
pop
mov
jmp
call
mov
nop

xchg
sub
ror
test
imul
inc
inc
test
xchg
sub
test
xor
imul
mov
mov
fwait

xchg
sub
ror
xor
test
mov
mov
nop

xchg
inc
ror
xor
imul
mov
mov
nop

xchg
inc
test
test
imul
xor
push
push
pushl
mov
imul
xor
pop
pop
pop
mov
jmp
call
mov
nop

xchg
sub
ror
test
test
inc
mov
test
xchg
sub
ror
test
imul
mov
mov
test
xchg
sub
test
xor
imul
mov
mov
nop

xchg
inc
dec
xor
test
mov
mov
nop

xchg
inc
ror
xor
imul
mov
mov
ret
xor
mov
inc
xor
inc
cmp
jne
ret
xor
mov
inc
xor
inc
cmp
jne
ret
xchg
inc
add
cmp
bound
inc
add
cmp
inc
cmp
push
cmp
dec
cmp
push
cmp
cmp
pop
cmp
jbe
inc
add
cmp
sahf
cmp
mov
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
add
inc
add
inc
add
add
add
inc
add
add
add
cmp
add
add
cmp
add
cmp
add
add
push
cmp
add
add
add
mov
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
hlt
aaa
add
add
add
push
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
add
cmp
add
cmp
add
cmp
add
add
add
aaa
add
add
add
push
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
add
add
cmp
add
cmp
add
cmp
add
add
add
add
jo
outsb
fs
outsb
jne
add
add
fs
imul
add
jne
insb
push
arpl
add
outsb
fs
imul
add
inc
imul
outsl
ja
js
add
add
je
outsb
jne
add
inc
gs
gs
popa
addr16
outsl
jae
add
dec
outsb
jbe
insb
imul
je
add
add
inc
push
jo
jb
add
add
dec
outsl
popa
fs
jne
jae
jb
add
add
jae
popa
addr16
outsl
js
add
add
jae
push
jne
je
gs
popa
add
add
jb
outsb
push
outsl
inc
insb
imul
add
je
popa
jb
je
outsl
jae
add
push
jb
arpl
outsl
jo
jo
outsb
jne
js
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
data16
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
and
add
sub
add
add
add
cmpsb
cmp
add
add
aam
add
call
cmp
add
cmp
add
cmp
add
cmp
add
add
add
data16
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
and
add
sub
add
add
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
insl
jo
jb
inc
imul
add
inc
js
je
jb
arpl
jae
add
inc
gs
jne
jb
outsb
je
push
add
add
inc
gs
imul
push
jo
arpl
add
add
je
js
je
outsl
fs
jb
arpl
jae
add
add
je
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jb
arpl
fs
jae
add
add
inc
gs
imul
je
add
add
outsl
bound
inc
jb
add
add
dec
jae
bound
addr16
jb
jae
outsb
je
add
dec
outsl
popa
fs
imul
add
add
push
gs
jb
push
inc
add
add
je
jb
arpl
jae
data16
dec
popa
jae
add
add
push
insb
gs
add
push
insb
gs
js
add
push
outsb
insl
popa
jo
imul
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
jb
jne
insb
push
jb
je
arpl
add
insb
jae
jb
popa
je
add
add
insb
jae
jb
insl
jo
add
add
insb
jae
jb
outsb
inc
add
jo
add
xchg
add
pushf
cmp
add
add
lret
add
add
add
add
xchg
add
pushf
cmp
add
add
lret
add
add
add
add
gs
je
inc
jb
jae
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
outsb
imul
add
inc
gs
gs
dec
bound
arpl
add
inc
gs
gs
arpl
popa
jo
add
add
je
imul
outsl
jb
add
add
je
gs
inc
outsl
insb
outsl
jb
