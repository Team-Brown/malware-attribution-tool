push
call
mov
call
mov
call
mov
push
pushl
push
pushl
call
push
call
push
mov
sub
push
pushl
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
push
push
call
mov
pushl
popl
push
call
test
je
push
pushl
push
push
push
push
push
push
push
push
push
push
call
test
je
push
pushl
call
mov
push
pushl
call
push
pushl
call
pushl
call
push
push
push
push
call
cmp
jb
jne
push
call
push
call
jmp
leave
ret
push
mov
push
push
push
cmpl
je
pushl
pushl
pushl
pushl
call
jmp
mov
mov
nop

add
mov
nop

inc
push
jp
jb
push
inc
pop
pop
push
clc
pop
sub
push
jno
shl
pop
rol
ja
jl
cmp
jb
push
xor
pop
js
xor
push
push
push
test
pop
pop
pop
clc
js
push
cmp
pop
push
push
test
pop
pop
sub
cmc
sub
mov
mov
xor
jns
push
test
pop
stc
ja
push
mov
pop
push
push
sub
pop
pop
nop

stc
add
mov
rol
jnp
xor
push
ja
stc
pop
jle
rol
jnp
push
mov
pop
cmc
jno
sub
push
push
mov
pop
pop
shl
nop

mov
mov
xor
add
push
push
rol
pop
pop
jno
push
push
pop
pop
push
jb
jne
sub
pop
cmp
jg
jb
or
test
nop

ja
push
sub
pop
mov
jae
and
push
jno
test
pop
stc
push
push
push
pop
pop
pop
cld
push
jno
push
add
pop
jno
ja
cmp
test
test
nop

stc
add
mov
xor
jl
push
mov
pop
push
push
cmp
pop
pop
nop

push
jo
push
push
pop
pop
pop
push
push
push
or
pop
pop
pop
clc
cld
and
nop

add
ror
test
push
inc
pop
clc
mov
mov
or
cld
xor
clc
push
jle
push
add
pop
lea
push
cmp
pop
sub
lea
nop

add
mov
lea
jl
and
push
mov
pop
push
add
pop
push
push
inc
pop
pop
je
or
jle
jbe
cmp
ror
push
jns
test
pop
jae
push
add
pop
jl
dec
inc
ja
jge
add
jns
sub
cmp
fnop
clc
cld
mov
cmp
jge
jbe
or
jne
shl
push
sub
pop
rol
jo
add
or
stc
jle
ror
and
and
jo
clc
lea
call
push
mov
pop
jb
rol
test
js
push
add
pop
or
je
shl
push
add
inc
dec
push
ja
push
mov
pop
pop
cmp
push
push
test
pop
pop
xor
jl
jnp
jae
ror
mov
inc
nop

cmp
jne
xor
mov
lea
lea
mov
or
push
or
pop
and
or
ror
add
add
test
mov
jle
and
sar
jno
sar
jb
stc
clc
sub
push
push
rol
pop
pop
push
ja
jl
xor
xor
pop
push
push
jge
mov
pop
pop
cld
lea
call
mov
inc
cmp
mov
jne
call
lea
inc
inc
inc
push
nop

pushl
popl
push
push
push
push
push
push
pop
pop
ja
sub
or
push
and
pop
ror
nop

jb
push
and
pop
test
rol
je
push
push
pop
pop
js
or
push
inc
pop
jg
jns
jne
cmp
push
dec
pop
push
push
push
add
pop
pop
sub
stc
stc
push
push
mov
call
pushl
lea
sub
sub
xor
push
inc
pop
addr16
addr16
add
inc
inc
push
pushl
call
call
mov
pop
nop

inc
inc
pushl
nop

popl
push
push
nop

nop

push
nop

push
push
push
mov
nop

call
push
and
cmc
shl
push
push
push
add
pop
pop
pop
add
or
jno
sub
jp
push
and
pop
add
push
mov
pop
jle
sub
cmp
jp
std
cld
push
jl
or
pop
push
push
mov
pop
pop
jnp
cmp
push
je
xor
pop
mov
push
push
ror
push
pop
jl
cmp
push
or
pop
sub
push
mov
pop
cmp
cmp
and
and
and
jbe
test
test
push
mov
pop
shr
push
jb
sub
pop
test
cmp
xchg
push
cmp
pop
test
test
push
sub
pop
test
cmp
push
nop

nop

push
push
nop

nop

mov
stc
push
push
test
pop
pop
clc
xor
push
jp
push
rol
pop
pop
jo
jge
push
mov
pop
stc
cmp
push
and
pop
push
jle
sub
pop
jo
add
cld
and
jns
add
push
push
jns
shr
pop
pop
jae
addr16
addr16
cld
push
push
ret
mov
cmp
nop

je
mov
push
js
push
test
pop
push
push
jp
cmp
pop
pop
jbe
xor
push
push
test
pop
pop
cld
push
ja
xchg
pop
jae
add
and
test
cld
push
je
cmp
pop
sub
jae
and
push
jo
jae
test
pop
push
push
and
pop
pop
je
jno
je
rol
cld
cmc
nop

test
push
push
push
nop

pushl
shl
push
jle
shr
pop
ja
jno
xor
cmp
jp
jno
push
cmp
pop
jbe
push
push
test
pop
pop
push
push
mov
pop
pop
jg
push
mov
pop
jnp
ror
push
mov
pop
and
add
push
push
push
add
pop
pop
pop
stc
stc
stc
ret
xor
jmp
jmp
xor
pop
pop
pop
leave
ret
sub
add
add
add
sub
sub
sub
xchg
sub
imul
xor
int
and
sub
xchg
sub
jg
inc
pop
sub
pop
dec
inc
sub
inc
inc
pop
or
pop
pop
inc
or
outsl
bound
inc
inc
stos
dec
dec
add
and
or
stos
sub
or
out
insl
shlb
dec
int
ja
sub
cmp
inc
mov
das
cmp
mov
push
sub
lock
je
sub
mov
sub
dec
das
sub
inc
dec
sub
mov
sub
sub
pushf
lods
sub
sub
sub
mov
test
sbb
sub
stos
lods
cs
sub
and
scas
sub
sbb
sub
aas
lods
ds
sub
sub
sub
cmpsl
sub
dec
sub
push
daa
sub
cs
add
sub
sub
mov
lods
sub
stos
pop
sub
and
pop
dec
stos
dec
pop
dec
sub
popa
and
sub
add
push
sub
imul
in
jmp
pop
pop
pop
pop
dec
in
sub
adc
pop
sub
sbb
inc
inc
mov
daa
mov
paddsw
jle
xchg
out
shr
and
pop
insl
adc
adc
adc
adc
movntps
(bad)
cmp
sub
jge
or
ds
aam
sub
insl
sub
cmpsb
pusha
fstpt
dec
das
jge
in
push
sbb
sub
mov
inc
cmp
jge
in
push
aam
jnp
sub
xlat
jl
cmp
jae
enter
sub
cmp
and
lea
sarb
push
cmp
push
fcmovnbe
ds
(bad)
sub
mov
and
jp
inc
das
lods
sub
xlat
sarb
jne
cs
sub
jge,pn
das
inc
sub
jp,pt
cmp
and
scas
(bad)
mov
sub
jnp
lds
and
mov
cmp
das
sub
imul
fsubr
cmp
inc
cmp
ss
or
mov
mov
cmpsb
js
jg
pop
das
insl
cmp
dec
mov
or
push
fnstcw
pop
push
cmpsb
and
jl
adc
es
daa
inc
sub
jl
sub
outsb
frstor
int3
push
inc
sub
aam
ds
(bad)
stos
sub
and
outsb
aad
inc
stos
add
or
ljmp
xor
xor
dec
add
push
aam
scas
in
mov
sub
sbb
push
sub
inc
jmp
push
out
mov
sub
ljmp
sub
in
xor
or
add
fistpl
outsb
aaa
filds
std
mov
(bad)
cmp
push
mov
es
sub
cmp
fsubl
cmp
add
push
outsb
jnp
pop
cmp
ljmp
xchg
sti
dec
mov
scas
aad
and
or
sbb
aam
jo
push
cmp
sbb
or
js
cld
push
in
pop
dec
cmpsb
aaa
push
sbb
push
sbb
mov
or
jnp
movsl
in
push
ds
call
adc
ljmp
jns
stos
sub
dec
das
cmp
cmpsb
data16
in
adc
mov
leave
jns
xchg
stos
sbb
lods
(bad)
and
js
cmp
dec
in
sub
jge,pn
das
sub
sub
pop
shrl
sar
cmpsb
repz
rcl
and
scas
xor
stos
cmp
or
adc
jns
shrl
rorb
cmp
dec
sub
mov
int
hlt
lret
lods
int
lret
rcl
rorb
ror
sub
xor
xor
aam
jns
jl
in
(bad)

sub
mov
sub
mov
push
mov
stos
cvtdq2ps
sub
pusha
lea
cmpsb
mov
sub
scas
or
push
aad
sub
pop
sbb
pop
out
sub
and
outsb
fnstenv
ds
fldenvs
cmp
aad
ds
fistpl
iret
lods
lds
les
imul
adc
or
shll
jb
std
imul
fbstp
inc
and
idivb
jbe
out
push
and
and
push
inc
cmp
add
insb
imul
adc
jp
imul
jns
jbe
xor
das
cmp
sub
cli
popf
sub
es
aas
mov
mov
es
adc
xor
cmp
js
jg
adc
push
sub
xor
aam
mov
adc
mov
es
and
fldenv
dec
in
or
and
xor
sub
das
mov
sbb
cmc
scas
mulb
xor
jnp
mov
cld
shrl
mov
push
clc
movsb
sub
aam
mov
movsb
adc
rcrw
jnp
adc
push
sub
clc
mov
fstpt
dec
jmp
gs
fsubrs
cli
sub
mov
sub
sub
frstor
lahf
sub
xlat
dec
pop
cmp
stc
daa
cltd
xor
arpl
push
cmp
sub
loop
add
mov
sbb
sub
jmp
outsb
std
cmpsb
push
lea
jns
inc
or
pop
or
js
movsb
jle
mov
js
movsb
jle
sub
movsb
jle
out
movsb
jle
mov
js
movsb
jle
mov
js
movsb
jle
aam
sub
cmp
cmpsb
jle
mov
jg
sti
mov
jge
dec
and
lcall
sub
inc
sbb
jg
push
jnp
sbb
in
sub
sub
(bad)
in
je
adc
das
and
mov
ret
pop
and
sub
aam
stos
aas
and
cmp
sub
movsl
and
push
lds
adc
pop
or
pop
aaa
mov
mov
jmp
insl
outsb
cmp
jmp
jl
cmpsb
pusha
aas
push
in
push
cmpsb
das
js
int
cmpsb
jle
arpl
xor
shrb
movsb
pop
stc
mov
mov
sub
jl
lea
xor
cmp
sub
mov
sub
iret
sub
lret
movsb
addps
les
insb
rcrl
js
int3
sub
mov
pop
fbld
sub
call
mov
push
xor
aaa
sti
int3
popa
cmp
sub
xor
iret
aad
sub
ljmp
scas
das
or
stos
(bad)
stos
sub
loopne
mov
sub
int
ljmp
icebp
aam
iret
sub
(bad)
fs
sub
push
out
mov
mov
and
and
xchg
sub
(bad)
das
lods
and
pop
fsubs
lods
pop
cmp
and
sub
sub
rorl
jle
fsubrs
mov
sub
dec
loope
jb
dec
cmp
cmp
sub
loopne
dec
shll
sbb
push
and
sub
jmp
pop
das
sub
test
aas
sub
outsb
aad
pusha
xlat
movsb
and
sbb
pop
sub
mov
cs
pop
and
lods
rcr
dec
test
sub
lods
(bad)
lods
shrl
pop
sub
jae
mov
rcll
xor
jmp
mov
mov
lret
cmp
insb
sub
pop
push
jnp
sbb
das
daa
inc
jmp
sub
ret
movsb
rolw
enter
and
lods
(bad)
lret
and
and
pop
and
lea
in
das
sub
and
and
cmpsl
outsb
shrb
daa
je
cmp
inc
les
inc
stc
pop
fwait

js
lock
(bad)
in
and
outsb
ffree
sub
mov
mov
and
dec
adc
pop
sub
jne
pop
dec
loop
out
shr
and
cmp
cmp
cmp
and
stos
mov
sbb
mov
xlat
std
sub
test
cmp
aas
jge
and
and
push
sub
stos
cmp
and
and
jle
jle
inc
subl
insl
outsb
cmpsb
jns
lret
or
int3
and
aam
aam
fsubl
aam
dec
shlb
fbld
sarb
and
test
jmp
sbb
mov
out
sub
imul
sub
mov
int3
xchg
sub
aad
aam
cmp
sub
rol
sub
sub
shrb
and
in
rcl
das
pop
test
in
pop
push
mov
mov
sub
loop
dec
movsb
sub
movsb
data16
inc
push
ljmp
lds
sub
(bad)
lods
shrb
push
xlat
mov
int
add
cs
int
pop
sub
sub
sub
stos
frstor
test
sub
mov
jae
das
push
push
stos
cs
and
and
es
sub
and
mov
sub
scas
mulb
or
push
cmpsb
aad
sub
push
mov
pop
das
dec
sub
sti
movsb
jle
(bad)
cmp
cmpsb
leavew
sub
push
sub
cmp
sub
cs
ds
jle
sub
mov
ja
mov
outsb
lds
and
pusha
(bad)
and
test
sub
ljmp
in
sbb
je
or
enter
push
mov
xor
loope
das
and
jb
cmpsb
in
cs
and
mov
aaa
jno,pt
das
stos
shrl
jge
sub
sub
pop
sub
sub
rcl
aam
cs
and
cmpsb
fstps
jmp
imul
push
das
inc
test
(bad)
shrl
xchg
imul
sub
outsb
cltd
mov
mov
insl
adc
std
fisttps
and
in
adc
or
mov
and
cmp
loopne
jle
xchg
ds
movsb
jle
sub
test
mov
(bad)
adc
mov
in
cmp
jmp
mov
and
sar
movsb
outsb
aad
in
and
scas
insl
sub
jle
cmpsb
pusha
shrl
pusha
lret
mov
mov
push
loop
clc
ds
jp
jnp
outsb
leave
sub
pop
sub
out
(bad)
cmp
inc
and
and
push
cmpsb
dec
and
dec
sub
daa
sub
cmpb
xlat
lea
cmpsb
jle
add
fildll
jbe
(bad)
std
add
dec
and
pop
xor
(bad)
lret
lds
outsb
std
cmpsb
and
cmc
ljmp
lds
and
daa
sbb
dec
and
push
out
mov
push
sub
jmp
fs
push
push
loope
into
or
cmp
sar
cmpsb
add
pop
cmp
cmp
dec
std
ljmp
ss
and
ss
push
cmp
and
daa
push
dec
sub
daa
sbb
jns
rclb
jmp
es
es
adc
es
mov
ljmp
or
jge
push
dec
mov
jl
das
adc
sub
imul
push
ret
adc
dec
add
jo
pop
out
sub
lods
sub
das
jb
out
aas
pusha
cmp
jmp
sub
movsb
outsb
(bad)
dec
movsb
outsb
sub
mov
push
jle
cmpsb
sub
and
in
pop
shlb
or
and
sub
cmpsb
push
lret
cmp
cmpsb
push
mov
jg
inc
das
jnp
ljmp
outsb
aad
sub
adc
test
pop
dec
and
cmp
insl
xor
in
cmp
pop
dec
jmp
ja
movsl
insl
popa
and
mov
mov
mov
inc
out
or
fimuls
in
fbld
and
sti
mov
mov
cmp
ds
or
xchg
sub
jne
jmp
xor
cmp
sub
xor
mov
mov
and
daa
jge
ret
cltd
jp
stos
push
cmp
imul
jb
xor
xor
test
mov
sbb
and
lea
sub
js
int
or
insl
add
dec
cmp
imul
imul
fisubrs
and
scas
sub
pop
test
pop
or
aas
cmpsb
lods
repnz
fldt
in
sub
mov
mov
int3
xor
das
sub
aam
and
or
shrl
aam
je
call
adc
ds
and
inc
sub
sub
inc
aam
sub
sub
outsl
stos
and
or
sub
flds
push
mov
sub
sub
sub
lcall
and
sub
cmc
aam
or
lock
mov
sub
sub
sbb
jne
sbb
or
cmp
jnp
pop
inc
inc
and
sti
sub
sub
sbb
mov
jne
js
cmp
cmp
cmc
jb
sub
sub
mov
sub
mov
cmp
cmp
jb
sbb
sub
jne
aam
fsubrs
daa
outsb
aam
aam
aam
aam
mov
daa
sub
(bad)
sub
pop
push
cs
cmp
mov
sub
sti
fisubrs
pushf
sub
cmp
sbb
jo
ret
mov
pop
std
outsl
out
je
sbb
xor
add
sub
call
aam
jp
sub
mov
sub
dec
and
sub
mov
sub
mov
xor
jbe
sub
cmpsb
scas
scas
imull
sarb
test
lret
inc
cmp
mov
jge
sub
sti
sub
aad
fistps
(bad)
mov
jb
(bad)
sub
and
jl
sub
sarb
das
sarl
ret
rol
cmp
ds
push
js
fdivrl
shrl
sbb
jge
and
mov
sub
jle
sub
sbb
pop
sub
jge
popa
wbinvd
sub
unpckhps
jl
ret
imul
scas
in
push
and
add
nopl
imul
cmp
das
inc
sub
sub
mov
pop
test
or
push
fcomps
(bad)
jmp
jge
cs
sub
cmp
es
dec
das
jg
and
cmp
and
in
sub
adc
sub
xchg
in
sub
push
push
cmp
jnp
mov
pushf
xor
ret
ljmp
frstor
adc
mov
js
popa
nop
es
jl
jl
jp
push
mov
daa
cmpsb
fstpt
cmc
(bad)
or
jle,pt
cmp
or
cmp
sub
mov
and
cmp
insl
test
imul
cmp
imul
or
es
sub
movsl
xor
lock
sub
sub
ffree
ss
mov
cmp
lods
jp
aam
jne
cli
xor
insb
inc
fidivs
lods
sbb
push
lock
sub
aad
xor
sbb
mov
jnp
arpl
js
xor
jns
jnp
cmp
sbb
imul
cmp
jl
push
call
push
jmp
es
inc
adc
sub
or
jp
sub
sub
jbe
imul
dec
ret
pop
and
or
outsl
jg
adc
mov
icebp
test
sbb
lcall
sbb
cltd
scas
fwait

cmp
xor
pop
pop
xor
mov
xor
mov
or
mov
sbb
xor
or
aas
push
das
dec
mov
mov
and
stos
insb
or
psubb
test
push
sbb
sbb
test
sub
clc
lods
mov
dec
mov
inc
stos
fucomip
lret
and
fnsave
sub
das
or
sti
cmpsb
fildl
jns
clc
or
int3
or
jl
mov
jl
push
xor
or
imul
dec
xor
imul
adc
push
mov
and
bsf
cmpsb
sub
jecxz,pn
mov
sub
enter
ds
decl
sbb
adc
mov
dec
jnp
lods
sbb
xlat
imul
ret
mov
gs
rcrl
pop
aad
aam
shrb
sbb
shrb
sub
jnp
push
ffree
xor
stc
ret
sub
jnp
jnp
insl
jge
sti
rcl
cmp
sub
fwait

sub
push
jge
jge
and
insb
sub
es
cmpsb
sub
pushf
ret
ret
sub
imul
lret
sub
imul
push
or
ret
cmpsl
mov
imul
or
cs
jnp
mov
lret
and
sub
jle
add
pop
adc
out
dec
cs
jns
sub
scas
jp
sub
xchg
sub
sub
ds
insl
imul
sub
aam
jge
aas
cmp
in
insb
imul
sub
stos
shr
sub
inc
inc
sub
imul
sarb
jg
sub
cs
sarb
(bad)
sub
sbb
sub
pop
imul
std
mov
mov
das
mov
aam
scas
in
sub
mov
iret
sbb
sub
sub
sbb
sub
jle
aam
inc
and
push
adc
push
lds
aam
aam
out
sub
sub
add
inc
lds
xor
sub
popl
popf
sub
jl
pop
sbb
jp
push
(bad)
sub
stos
shl
sub
cmp
sarb
addr16
daa
imul
ret
or
push
sub
sub
cmp
sub
daa
and
mov
adc
add
aam
aam
jne
mov
sub
mov
das
sub
ds
scas
xchg
and
mov
adc
inc
arpl
cmpsl
xlat
sub
sarb
xchg
sub
adc
mov
aam
inc
dec
stos
sub
lods
sub
inc
mov
js
jg
sub
jns
sub
cmp
ljmp
sub
or
sbb
jl
or
fwait

in
cmp
mov
sub
xor
imul
insl
sub
insl
daa
sub
sub
sbb
out
out
adc
and
sub
xor
sbb
push
lods
push
inc
jg
pop
in
sub
pop
in
and
test
xor
jnp
clc
sub
cs
sub
sub
cmpsb
lods
ss
js
cmc
stos
aas
and
out
add
ljmp
and
pushf
insl
cs
stos
mov
pop
jl
sub
mov
and
lds
xchg
rcl
aam
jmp
xor
sub
pop
xor
pop
stos
sbb
jge
mov
jmp
lods
fisubrs
sbb
hlt
int3
sub
cld
jg
adc
push
loop
dec
movsb
rcl
sbb
cs
test
push
into
sub
call
jle
daa
in
mov
adc
inc
jnp
sub
dec
push
sub
sbb
mov
cmp
cmp
jmp
js
inc
cmp
or
ret
push
sub
sub
mov
das
jnp
cs
sub
cmp
or
push
xor
sub
sub
jae
sub
or
jg
aam
jge
add
movsl
cmc
mov
es
sbb
movsb
ss
sub
pop
cmp
sbb
and
cs
and
push
out
and
sub
xor
insb
int
sub
and
xor
dec
and
lods
push
in
inc
xchg
sub
lods
and
unpckhps
and
sub
sub
dec
cmpsb
outsb
and
xchg
int3
and
pop
adc
cmp
lods
sub
es
sub
ds
add
ja
sbb
or
leave
jnp
stos
roll
sub
sub
dec
in
inc
inc
imul
mov
imul
inc
cmp
sub
ljmp
ret
lret
scas
cs
sub
dec
pop
lea
sub
test
mov
sub
stos
cmp
pop
outsl
or
cmpsb
and
mov
jnp
pushf
popa
(bad)
jp
aam
sbb
mov
or
jnp
les
daa
lea
mov
adc
dec
jg
sub
sub
or
lret
cmp
xor
push
popa
(bad)
sub
jns
ffree
out
testb
mov
aas
sub
ds
cmp
mov
or
pop
sub
aas
and
or
sub
cmc
pop
pop
in
sub
popf
sub
jmp
cmp
pop
inc
ret
stos
ds
lods
and
dec
or
int
ljmp
jecxz
fldcw
sub
or
push
and
daa
cmp
push
lret
int3
sub
ds
daa
(bad)

aam
pop
(bad)
(bad)

inc
loopne
int3
or
jnp
cmpsb
cmp
pop
sub
mov
mov
je
call
jge
outsb
and
adc
sub
sub
sub
sub
sub
sub
sbb
sbb
sbb
mov
sub
sbb
sbb
sub
sbb
jle
sub
sub
sub
and
sub
sub
insb
sub
sub
sbb
sbb
jno
sub
sub
mov
sub
sbb
cmc
sbb
rcrl
sub
sbbl
dec
sbb
sub
sub
sbb
sbb
fstpl
cmp
sub
arpl
leave
sbb
sub
sbb
sbb
pop
sbb
jnp
sub
sbb
fwait

sub
sub
cmp
sub
pop
inc
fwait

sub
sub
pop
sub
sub
sub
sub
sub
jge
pop
sub
pop
sbb
dec
sbb
inc
sub
sub
cmpsl
add
sub
sub
inc
cmp
add
popa
sub
push
pop
jnp
inc
sub
pop
dec
push
sub
dec
pop
pop
sub
dec
pop
jge
dec
pop
sub
jle
dec
pop
inc
inc
das
inc
fnstsw
pop
jp
dec
pop
dec
sub
inc
pop
dec
dec
test
sub
and
fwait

sub
jg
adc
sub
and
sub
cmp
jnp
dec
mov
sub
fwait

and
das
pusha
sub
pop
dec
inc
insb
inc
jne
inc
dec
pop
cs
and
cs
pop
sub
and
and
dec
cmpb
and
jns
mov
cs
sub
pop
sbb
pop
pop
sub
sub
or
fldt
jge
stc
sub
ds
jns
dec
adcb
sub
sub
sub
sub
pop
sbb
sbb
sbb
dec
pop
sub
sbb
stc
sbbl
inc
mov
sub
dec
inc
sbb
jae
dec
inc
dec
and
and
outsb
aas
daa
dec
fnstcw
ja
frstors
sub
aas
pop
sbb
jl
jns
fidivl
dec
sbb
ja
std
outsb
jnp
jp
dec
jg
jnp
and
inc
cmp
sbb
adc
xor
sub
pop
sub
sub
pop
dec
pop
pop
inc
pop
sub
dec
pop
dec
pop
inc
dec
jge
push
sub
sub
jmp
sub
pop
add
sbb
pop
dec
sub
dec
fildl
dec
jge
ja
push
sub
adc
push
push
sub
pop
sbb
test
push
sbb
aam
sub
push
insb
push
insb
push
insb
push
insb
push
insb
push
insb
rclb
push
push
push
push
push
push
push
push
insb
push
insb
push
insb
push
insb
push
pop
or
add
jp
insb
jnp
leave
add
xor
(bad)
sub
sbb
push
pop
pop
sub
dec
inc
pop
inc
sbb
inc
pop
pop
cs
fldt
or
dec
jle
push
or
dec
das
jle
sub
inc
pop
dec
pop
fwait

push
imul
inc
dec
jns
pop
inc
pop
sub
sub
addr16
dec
fldt
popf
ds
jns
jns
pop
pop
mov
outsb
dec
pop
pop
pop
dec
inc
cwtl
popa
or
movaps
imul
sub
sub
inc
dec
arpl
dec
inc
or
sub
xor
(bad)
pusha
and
das
jnp
fs
pop
dec
dec
sub
inc
pop
dec
sub
daa
sub
inc
fs
and
daa
jmp
sub
sub
daa
cli
sub
cs
pop
pop
pop
add
sub
pop
and
pop
push
and
sbb
sub
jae
ds
sub
sub
sbb
pop
pop
pop
jae
sub
jg
cmp
inc
pop
and
dec
push
lret
das
das
sub
inc
pop
inc
jp
sub
inc
inc
inc
inc
sub
pop
sbb
js
dec
or
pop
fdivrl
inc
sub
cmp
out
gs
sbb
push
(bad)
out
cltd
sub
sub
pop
pop
sub
sub
dec
pop
dec
js
pop
sub
sub
dec
pop
addr16
pop
pop
outsb
sub
sub
pop
dec
inc
jle
inc
dec
or
dec
sub
outsb
push
inc
pop
jnp
inc
dec
sub
pop
sub
pop
outsb
inc
inc
inc
dec
inc
dec
and
inc
sub
cs
sub
inc
dec
pop
fs
insl
sub
shrb
jl
imul
pop
js
jmp
dec
inc
dec
dec
pop
sub
jb
in
pop
dec
inc
pop
sub
inc
dec
dec
pop
and
inc
dec
pop
outsl
inc
dec
sub
arpl
sub
insb
sub
sub
or
push
fs
sub
bound
inc
pop
sbb
sub
outsb
pop
dec
dec
pop
shrb
sub
scas
sub
das
pop
sub
inc
sub
dec
push
sub
pop
pop
dec
daa
dec
lods
and
stos
and
dec
imul
outsl
inc
pop
sub
push
lods
and
sub
inc
mov
add
scas
xor
and
inc
sub
stos
popa
insb
test
sub
add
jns
outsb
popa
sbb
inc
sub
pop
pop
pop
lods
pushf
pop
dec
jp
sub
scas
es
lods
or
pop
gs
pop
inc
sub
inc
sub
push
sub
inc
inc
dec
inc
sub
push
pop
pop
stos
popa
rep
inc
inc
sub
out
scas
cmp
pop
inc
dec
pop
sub
sub
sub
lea
inc
jle
lods
(bad)
out
xor
jg
dec
dec
pop
scas
xor
mov
inc
inc
pop
pop
jnp
das
inc
pop
lods
push
dec
dec
jnp
inc
adc
sbb
lods
cvtps2pi
dec
imul
push
test
sub
pop
cs
sub
dec
sub
dec
dec
push
daa
sub
daa
imul
outsl
data16
inc
inc
pusha
jge
inc
pop
inc
jmp
jle
dec
pop
pop
inc
dec
push
jl
in
scas
cmp
das
scas
inc
sub
scas
sub
sub
push
dec
dec
dec
pop
in
es
jle
pop
dec
pop
pop
sub
outsb
pop
pop
sub
inc
pop
pop
dec
pop
dec
testl
insl
xor
out
add
outsb
sub
mov
and
cmp
imul
pop
testl
in
aas
push
push
sub
sub
lods
cmp
jnp
bound
out
sub
in
dec
imul
inc
dec
dec
pop
jnp
pop
out
inc
insl
and
push
sub
sbb
das
xor
xor
xor
xor
shlb
xor
xor
xor
xor
xor
cmp
sub
sub
sub
mov
mov
xor
sub
int
les
sub
sub
sub
lret
sub
lret
sub
stos
sub
lea
test
das
and
and
das
lret
fldcw
(bad)
or
sub
sub
sub
cmpsl
js
sub
int
xchg
cs
cs
sub
sub
mov
sub
sub
sub
dec
sub
dec
sub
sub
imul
mov
ds
sub
sub
or
cs
pusha
dec
sub
clc
sub
loop
push
pusha
sub
mov
lret
addr16
lahf
out
mov
mov
mov
sub
call
das
sub
mov
lahf
or
arpl
jo
movsb
lahf
and
cli
mov
sub
cmc
xor
cmc
aad
jnp
jecxz
xor
xor
xor
and
shlb
and
and
and
and
and
mov
pop
cmp
cmpsb
dec
sub
imul
lods
notb
sub
sahf
xchg
jnp
sub
in
movsb
mov
mov
sub
adc
jge
push
xor
inc
sub
sub
outsb
leave
out
lods
sub
fsubs
inc
lahf
mov
cltd
cmc
cltd
out
jge
mov
xor
mov
mov
sub
xor
(bad)
incb
lret
cmp
outsb
sub
mov
(bad)
outsb
push
sub
fwait

daa
or
imul
in
push
nop

mov
sub
call
push
push
dec
cmp
sar
push
leave
and
sub
mov
sub
sub
adc
sub
negl
mov
adc
jecxz
das
adc
push
and
addr16
stos
imul
mov
sub
xlat
sti
jle
cltd
loop
mov
adc
sarl
sub
adc
xchg
add
nop

cmc
push
jnp
mov
mov
in
cli
es
inc
call
incb
push
inc
jle
cltd
and
cmp
imul
sbb
and
sub
sbb
xchg
shrl
clc
call
cltd
lahf
sub
testl
negb
sub
pop
sub
xlat
(bad)
cmp
sub
sub
shll
sub
and
mov
sub
mov
mov
sub
xlat
clc
push
push
sub
xchg
ljmp
sar
ljmp
out
roll
sub
fwait

and
xor
sub
loop
(bad)
adc
loop,pt
mov
push
lcall
lea
xor
or
adc
dec
scas
sub
xchg
stc
outsb
xchg
jmp
xor
sbb
xchg
xlat
lods
push
sub
push
jo
push
adc
or
clc
popf
and
xlat
jne
pop
mov
ljmp
shrl
jnp
push
xlat
sub
adc
fsub
or
addr16
aaa
out
lods
cli
adc
cltd
sbb
sub
sub
test
xor
lea
mov
mov
enter
and
repz
cmp
shl
sub
jno
sub
shll
out
outsb
sub
call
dec
cmp
repz
adc
out
adc
sub
jbe
xchg
shrl
test
xlat
clc
lret
aas
cmpsl
stos
cmc
jo
aas
cmpsb
out
cmp
cltd
scas
dec
add
cmp
movq
mov
mov
dec
and
sbb
out
popa
add
jnp
sub
stos
and
pop
sub
lret
mov
fmuls
xor
add
mov
mov
xlat
xchg
testl
and
lods
xchg
mov
ljmp
and
and
rorb
sbb
mov
icebp
(bad)
mov
icebp
leave
mov
mov
and
dec
push
adcb
mov
pop
mov
push
outsb
in
xchg
(bad)
mov
jnp
and
mov
and
xor
xor
sub
sti
sub
cld
sub
stc
mov
sub
sub
jnp
and
int3
mov
cltd
sub
push
fdiv
repz
xchg
push
sub
xor
outsl
sub
cmp
int3
or
lcall
cld
pop
or
cmp
(bad)
cs
repnz
and
das
stos
sbb
inc
cltd
cmp
mov
dec
aas
push
jge
aaa
repz
jmp
xor
sub
xor
jmp
mov
cmc
sub
out
in
repz
lret
xor
iret
push
jle
das
xor
pusha
mov
push
push
sub
push
fcompl
pop
sub
pop
ja
jmp
mov
pop
sub
sub
fisubrl
sub
and
push
adc
mov
cltd
addr16
adc
test
sub
sub
jb
sub
jmp
int3
cltd
sub
fsubrs
sub
sub
cmp
xchg
adc
stos
das
lcall
sub
lahf
fistpl
mov
adc
cltd
out
popa
lahf
int3
imul
sub
and
sub
sub
and
sub
xchg
sub
sub
sub
mov
xor
lahf
and
sbb
fwait

xor
cltd
dec
fsubrl
int3
dec
and
das
nop

(bad)
cmc
jnp
xor
lahf
and
sub
dec
xrelease
sbb
cltd
sub
nop

and
sub
and
inc
xchg
inc
mov
incb
xor
add
xor
mov
push
(bad)
xchg
sub
sar
stos
sub
insb
movsb
insl
clc
das
mov
push
jae
sub
insl
clc
push
cmp
push
sub
loop
cmp
scas
(bad)
clc
lods
xlat
(bad)
fldt
mov
mov
sbb
in
xlat
push
mov
nop
xchg
lahf
sub
xchg
add
addr16
cmp
lods
xor
sub
xchg
jb
int3
sub
into
(bad)
in
dec
popa
lahf
and
das
decb
in
sub
sbb
sbb
and
in
sub
xor
push
add
xor
std
popa
lock
jmp
mov
movsb
imul
or
mov
and
aaa
subb
mov
jae
loop
push
nop

xlat
(bad)
and
add
add
jg
push
out
add
push
push
sub
in
outsb
clc
mov
loop
xchg
clc
mov
or
push
push
test
adc
push
push
shrl
xor
push
incb
jbe
and
outsl
cltd
adc
push
sub
lret
call
stos
adc
stos
add
sbb
add
jbe
outsb
cmp
cmp
stos
xor
xchg
mov
cmp
xlat
mov
out
addr16
pusha
out
and
cmp
rorl
out
sub
and
pop
popf
add
inc
inc
sub
clc
pop
mov
insl
xor
ss
popa
sub
xlat
js,pt
or
sbb
sub
adc
pop
lahf
jb
or
dec
sub
outsb
sub
jle
jl
and
js
and
cltd
jmp
stos
cltd
push
add
sub
jl
loop
insl
cmc
jle
lret
jo
sub
dec
std
repz
popa
sub
push
xchg
sub
xor
sbb
cmp
aas
sub
and
xor
int3
lret
aam
mov
add
js
mov
aaa
or
or
adc
das
repz
dec
sub
cmc
popa
and
int3
sbb
sub
mov
sub
sub
inc
or
cmp
dec
and
and
repz
sbb
and
out
inc
or
cmp
jle
stos
int
xor
mov
or
imul
test
mov
rol
dec
arpl
jle
sub
mov
push
test
xchg
popa
cmp
in
es
es
mov
dec
sub
out
lret
imul
sub
xchg
fsub
add
int3
int
sub
int3
sub
cmp
imul
das
cmp
pop
js,pt
scas
dec
test
xor
jle
sub
sub
add
in
sub
int
add
or
nopl
sub
imul
sbb
dec
and
cmp
dec
lea
lock
lods
dec
cmp
movsb
mov
in
and
dec
and
pop
push
(bad)
cmpsl
aaa
jle
or
in
dec
cmp
jle
sbb
sbb
cmp
or
and
iret
sub
and
push
mov
mov
jl
js
jge
outsl
or
xchg
lahf
dec
fs
out
stos
imul
outsb
aas
cltd
lods
sbb
lea
or
cmp
or
push
mov
cs
dec
stos
or
xlat
mov
jle
or
ljmp
xchg
mov
mov
test
js
and
sbb
aam
xor
iret
or
mov
das
iret
in
dec
mov
cli
jle
sub
adc
dec
lods
add
xor
shrd
push
sar
lret
sub
xlat
cld
jge
inc
shrl
cld
lea
xlat
cld
into
push
iret
clc
or
sub
dec
push
xchg
popf
wbinvd
sub
xor
or
jbe
sbb
in
movsl
mov
lahf
jle
push
rcll
dec
stos
xor
jo
aaa
dec
dec
or
pop
cltd
or
or
and
outsb
cli
jmp
and
cs
sub
into
ds
stos
or
and
stos
sbb
jge
mov
or
mov
sub
int
push
cmp
daa
int
push
enter
push
int3
cmc
shll
mov
push
imul
cmp
mov
lret
bound
xor
int3
sarl
mov
push
out
imul
in
jge
stos
int3
insl
xor
cmpsb
insl
sub
push
add
insb
mov
cmp
pop
xchg
cmp
xlat
cmp
sub
mov
(bad)
aas
sub
mov
add
add
imul
or
dec
lea
jp
in
and
mov
xor
xor
pop
dec
bound
mov
xor
sahf
stc
push
insl
sub
stos
jge
mov
sub
sub
xor
sbb
out
shll
xlat
sbb
sub
shll
insl
shll
xlat
fs
das
cmp
outsl
aam
sbbw
push
mov
mov
lahf
cltd
les
mov
ss
xchg
xlat
clc
or
lahf
mov
cmp
sbb
scas
and
xchg
push
mov
and
or
sub
jnp
mov
test
imul
xchg
or
xlat
or
jecxz
xor
mov
push
in
lock
and
cltd
xchg
xchg
cltd
and
and
clc
cmp
loop
mov
pop
aas
push
cmp
and
lods
es
sub
or
out
repz
mov
jle
mov
add
xchg
test
test
sbb
push
ja
sub
sbb
dec
iret
push
mov
outsl
cmpl
adc
pop
or
sub
in
add
decl
sub
cmp
insl
cltd
js
pop
add
sarb
or
push
stos
or
add
xlat
mov
ds
mov
(bad)
cld
or
cli
sub
dec
jmp
lcall
out
and
sub
adc
and
or
dec
dec
xchg
imul
jge
xor
call
add
or
das
xor
daa
and
(bad)
cmp
lahf
mov
push
insl
mov
mov
outsl
and
icebp
xchg
lcall
int
jp
out
sbb
add
jno
loop
push
out
or
jge
pop
loop
cli
sub
jnp
sti
icebp
adc
sub
ljmp
(bad)

push
aas
pop
sub
cmp
outsb
aas
out
push
std
mov
sub
xchg
std
lret
sub
or
ja
mov
mov
pop
sub
push
stc
mov
sbb
sti
add
aas
cmp
sbb
std
das
je
jle,pn
push
ficoms
mov
sub
call
stos
add
xchg
or
xor
test
in
int3
jge
push
ret
adc
packuswb
xchg
out
mov
xor
lret
add
cli
mov
orl
aas
int
in
aas
icebp
jno
insl
xchg
repz
bound
push
dec
(bad)
outsb
enter
lea
jle
mov
jnp
and
push
inc
cmp
sti
cli
or
jmp
xadd
or
call
mov
sub
daa
shr
or
mulb
mov
loope
and
arpl
aas
jle
dec
cmp
xor
es
sub
xlat
call
xlat
sub
adc
adc
sub
sub
int3
lods
push
loope
sbb
sub
pushf
das
dec
stc
sub
out
lahf
lods
cs
ss
or
dec
scas
test
mov
sbb
popf
sbb
movsl
cld
sarl
or
inc
cmpl
in
jnp
call
popa
lock
and
out
sub
and
lods
lahf
and
ljmp
push
jp
out
jge
xor
mov
mov
out
sub
push
inc
in
test
in
sub
ja
jns
push
mov
(bad)
in
dec
jge
popf
jg
jae
nop

sbb
sub
and
ja
mov
scas
and
adc
and
outsb
and
sbb
mov
out
dec
sub
mov
stos
add
adc
cmp
imul
sbb
sbb
int3
add
mov
xor
outsb
sub
clc
call
(bad)
push
or
aas
sbb
sub
push
sub
or
dec
and
ljmp
fucomip
int
and
cmp
sbb
xor
cmp
sub
mov
cmp
add
imul
push
or
sbb
sub
sbb
push
lcall
ret
add
lods
outsb
cltd
outsb
or
inc
sub
mov
jp
repz
pop
add
push
sbb
sbb
sti
xor
and
and
and
aas
push
into
pushf
sub
mov
or
rcrb
cmp
das
xchg
mov
sub
cmc
xchg
not
add
sub
cmp
outsb
std
sub
outsb
mov
jp
in
push
sub
call
mov
das
xchg
call
cli
sbb
subl
add
sub
adc
push
sub
sub
push
mov
pop
sub
xchg
xchg
ljmp
adc
sub
xor
cmp
lea
push
mov
(bad)
insb
pusha
pop
fnsetpm(287
fadds
outsb
popf
add
cltd
popf
jp
lcall
lret
repz
pop
lahf
(bad)
stos
popa
and
or
popf
sub
imul
or
fdivrs
cmp
cs
cs
xor
sbb
clc
(bad)
jecxz
in
inc
fisubl
sbb
dec
sbb
or
cmp
decb
notb
(bad)
push
dec
sub
repz
cli
(bad)
dec
loop
mov
push
lea
(bad)
notb
in
jmp
insl
subl
sub
push
or
imul
cltd
lret
push
cli
aam
cltd
jmp
add
push
fistps
sub
call
enter
xchg
int
lahf
insb
mov
out
adc
fwait

push
sub
mov
int3
adc
movsb
ss
imull
or
sub
lock
jno
adc
outsb
inc
int3
incb
push
mov
sub
loop
xor
out
rcl
jl
loop
mov
or
sub
sub
mov
mov
sysret
mov
icebp
je
push
movsb
sub
pmulhuw
xlat
jnp
aam
rdtsc
mov
cltd
sub
xlat
jp
xchg
push
sub
gs
out
sub
cmpsl
add
push
jge
cltd
push
call
pop
jl
mov
outsb
sub
xlat
adc
push
xlat
stos
sbb
sub
adc
es
gs
sub
movzbl
adc
(bad)
stos
adc
xchg
jo
lahf
in
xchg
sub
mov
test
or
or
das
add
inc
push
outsb
sub
sub
icebp
sub
pusha
jnp
push
stos
adc
lods
or
push
aas
in
sbb
icebp
mov
ds
and
and
push
shrl
mov
loop
js
push
int3
lahf
and
push
out
mov
add
mov
jne
xchg
sub
loop
call
xlat
push
lods
and
pop
dec
stos
stc
ss
imul
pop
sahf
sub
mov
fst
lahf
cltd
sar
or
jmp
sub
outsb
aas
sub
sar
xor
(bad)
aas
and
and
jbe
sub
adc
xlat
loopne
pop
xlat
loopne
push
in
add
imul
cmp
clc
and
cmp
in
aas
stos
push
pop
test
xor
fisttpl
xor
or
sbb
xor
es
sub
loop
push
mov
in
cmp
lods
cmp
and
shll
cmp
loopne
or
lock
and
sub
(bad)
enter
cmp
sub
xor
push
into
mov
adc
and
cs
das
push
sub
jnp
mov
ss
js
das
xor
lahf
mov
outsb
adcb
stos
sub
and
ds
enter
adc
lods
sbb
ss
sub
lahf
cltd
jmp
and
push
mov
or
loop
cmpsl
es
addr16
aaa
cmp
int3
outsl
sbb
out
ds
incb
lret
popf
sbb
mov
test
xlat
incb
sub
cmp
repz
jp
addr16
sbb
push
aas
nop

in
adc
imul
push
sub
ret
add
stos
and
cmp
push
sub
lods
in
sub
aas
sub
sbb
cmp
cmp
aas
loop
sub
cmp
int3
sbb
test
hlt
insb
movsb
call
mov
es
or
nop

imul
out
sub
mov
loop
lahf
icebp
jecxz
pop
mov
ja
pop
out
or
test
insl
(bad)
stos
sub
pop
shl
daa
xor
and
mov
stos
mov
cmp
cmp
arpl
insl
clc
jmp
mov
sub
into
cmp
cmp
sub
pop
dec
cmp
and
mov
ss
adc
inc
(bad)
psubq
sub
and
and
and
cmpsl
cmp
sub
neg
jl
sti
and
push
popa
and
or
dec
xchg
std
and
(bad)
pmulhuw
mov
adc
push
xchg
sub
and
pmulhuw
cs
jmp
mov
cs
stos
dec
outsb
mov
neg
stos
or
mov
notb
lret
sub
ja
shr
xor
or
orl
popa
stos
mov
inc
lea
mov
mov
dec
jge
int3
stos
and
lret
jp
sub
or
sbb
or
sbb
lahf
sbb
sub
ljmp
push
lret
sub
scas
push
add
dec
adc
push
sub
dec
in
mov
adc
nopl
or
lahf
or
lahf
or
(bad)
mov
adc
lahf
xlat
cmp
outsb
std
adc
aas
push
dec
das
movzbl
and
sub
jge
sub
outsb
add
outsb
mov
int
sbbl
aaa
ljmp
mov
lcall
dec
out
outsb
fmul
xchg
fwait

or
and
lods
dec
xchg
sub
pop
cmp
jnp
repz
sub
mov
xor
lahf
std
add
ds
mov
or
imul
add
out
and
xchg
xlat
jp
testl
xchg
sub
sahf
lret
cmp
adc
or
mov
clc
lret
mov
add
push
xchg
repz
stos
stos
jmp
cld
lea
and
lret
cmp
push
or
das
dec
xlat
add
imul
xchg
jecxz
(bad)
rdtsc
stc
pusha
or
jmp
add
das
mov
xchg
clc
push
cmp
sub
stos
daa
sub
xlat
adc
mov
or
sub
outsb
xchg
call
(bad)
rcll
imul
add
and
and
xor
lret
lea
(bad)
push
scas
push
add
jnp
sub
add
mov
sub
xor
xor
(bad)
cld
into
cmp
int
enter
or
dec
or
or
das
aam
daa
leave
xor
cmp
cmp
inc
out
cmp
(bad)
push
xor
sub
int3
push
add
imul
push
mov
xchg
outsb
(bad)
call
jp
shlb
dec
rorl
xchg
nop

or
sti
lea
xor
icebp
jmp
jg
jg
cmp
or
xor
mov
mov
insb
lea
mov
int
and
imul
sub
xor
cltd
mov
push
outsb
dec
mov
out
out
xlat
call
mov
sub
push
cmc
and
or
mov
and
jle
popa
and
js
fwait

shl
loope
nop

addr16
add
dec
xlat
dec
sub
imul
popa
push
xchg
sub
ss
clc
stos
out
popa
paddsb
sbb
jmp
popf
add
inc
dec
in
adc
jle
push
jbe
std
adc
mov
sbb
sub
stos
adc
js
icebp
mov
js
pop
sbb
mov
pop
cmp
or
dec
mov
xor
movsb
push
test
cltd
imul
dec
xor
push
jle
lods
cmpsb
push
or
lret
cmp
cmp
mov
jle
sub
jnp
enter
mov
push
das
clc
or
out
xchg
gs
lahf
pop
dec
cli
mov
mov
outsb
cmc
jle
push
sub
outsb
xchg
pop
out
pop
sub
loop
clc
xlat
xor
das
xlat
cld
out
push
sub
sub
cli
mov
pop
xor
sub
mov
sub
pop
jl
popa
imul
pop
dec
je
jle
jmp
mov
(bad)
outsb
je
sub
cmp
and
stos
sub
addr16
and
js
divb
jnp
outsl
cmp
mov
out
sbb
stc
sbb
sub
jae
push
cltd
sub
jl
loop
cmp
sbb
negl
and
fsubrs
repz
jge
sbb
fdivrs
sbb
and
in
push
jns
pop
in
mov
and
dec
push
jle
dec
daa
scas
lcall
mov
pop
or
daa
mov
xor
in
sub
popa
lock
in
pop
cli
lret
sub
das
and
int
(bad)
stos
sub
jae
mov
sub
xchg
dec
js
mov
mov
call
fisubl
stos
std
das
xchg
push
mov
push
and
movaps
sub
test
sub
sbb
and
cli
pop
and
(bad)
sub
lods
repz
out
push
dec
sbb
jge
push
mov
sub
mov
cmp
mov
and
negl
in
push
stos
sbb
mov
and
or
cltd
js
repz
sbb
push
cs
jnp
pop
fistps
cmp
adc
pop
cmp
and
jle
sbb
ds
and
insl
push
aaa
sub
sub
push
pop
imul
jge
out
cs
sub
das
xor
or
imul
sub
add
push
mov
clc
pop
cwtl
cli
pop
jns
popf
sub
or
js
subl
sbb
pop
mov
inc
dec
dec
sbb
sbb
mov
sub
cld
imul
push
sub
pop
test
or
wbinvd
xor
sub
push
lods
insl
sub
sbb
push
leave
sub
or
add
dec
cmp
dec
stos
sub
inc
mov
sub
sbb
mov
push
mov
sbb
jle
pop
sub
(bad)
sub
jnp
push
hlt
jmp
int
fisttpll
daa
sti
push
mov
das
imul
push
loopne
mov
cmc
dec
sub
sbb
push
jl
adc
aaa
dec
fidivl
call
jle
cmp
call
pushf
add
popa
cmp
pop
cmp
mov
push
or
sub
out
dec
sub
sbb
aaa
movsb
fbstp
jge
xor
push
push
dec
and
sub
sbb
push
mov
daa
daa
out
ss
clc
jae
cmp
lods
insl
adc
(bad)
js
pop
add
adc
or
in
es
js
sub
add
dec
aam
mov
push
mov
loope
xor
adc
das
sbb
cmp
pop
push
mov
xor
fwait

ljmp
and
pop
push
(bad)
in
sub
repz
insl
sub
popf
sub
call
cmc
cli
out
sub
mov
mov
pop
mov
popf
xchg
out
jp
test
mov
pop
inc
push
outsb
in
push
iret
movsb
or
sub
sub
add
push
(bad)
cmp
lret
adc
mov
sub
push
fdivrs
or
push
lret
sub
and
jbe
xchg
mov
mov
push
rcrl
nop

arpl
push
dec
loope
insl
cwtl
js
mov
cld
out
mov
sub
jnp
sbb
inc
sti
sub
dec
sbb
cmp
or
push
or
sbb
jp
dec
ds
dec
cmp
ds
loope
or
mov
push
sbb
push
out
pop
das
xchg
subl
lret
in
pop
push
fmull
and
and
mov
cmc
pop
dec
and
fildll
and
xchg
or
inc
and
push
lea
push
cmp
lahf
cmpl
mov
jbe
push
loope
and
pop
dec
or
pop
loop
cmp
insl
sub
das
cmp
cld
and
jno
rorl
push
jmp
push
repnz
or
cs
cmp
mov
sub
js
lahf
and
mov
mul
nop

sub
add
pop
and
lock
aam
ja
roll
rcll
imul
lods
mov
inc
lret
ss
dec
(bad)
outsb
in
out
add
jno
lock
loope
inc
cmp
and
cmp
in
sub
loop
fidivrs
imul
outsb
insl
cmp
clc
or
jge
inc
cvtps2pi
int3
pmulhuw
cltd
lahf
xchg
insb
movsb
mov
lods
das
mov
cltd
cvtps2pi
cmc
je
lret
out
stos
push
pop
out
lahf
cltd
ss
cs
or
mov
add
jo
and
adc
sub
lds
lods
movsb
sub
dec
lods
ss
mov
sub
cmp
or
lahf
int3
dec
sbb
arpl
sub
adc
or
push
cltd
cmpsb
xchg
dec
mov
sub
push
aam
cltd
mov
outsb
push
stos
push
stos
jge
iret
stos
and
cpuid
sub
clc
push
in
stos
cltd
lahf
mov
push
push
mov
scas
imul
lahf
lods
sub
clc
sub
xor
mov
cs
cmpl
call
sub
push
jnp
sub
imul
or
or
or
lods
dec
xchg
and
and
stos
cmp
(bad)
push
jo
int3
lahf
cltd
add
outsb
adc
inc
test
lods
xor
ds
xor
sbb
js
cmp
lahf
int3
testl
pop
sub
add
movzbl
cltd
lahf
out
xchg
xchg
sub
das
push
fldt
sub
lahf
and
sub
sub
dec
dec
lret
imul
push
push
add
in
insb
lods
popa
jbe
or
leave
jmp
sub
mov
lahf
cltd
sar
push
push
xchg
xor
outsl
das
out
push
cmp
cmp
sub
push
mov
scas
sub
cmp
sub
inc
sub
dec
mov
or
and
and
lods
adc
add
ret
insl
ds
or
popa
in
sub
cmp
stos
jae
jle
dec
imul
insb
inc
xor
jle
test
out
das
push
test
clc
xor
cmp
pop
mov
mov
mov
lret
(bad)
outsb
mov
push
sub
push
(bad)
insl
fs
imul
sub
int
sub
cmpsl
mov
dec
mov
xchg
add
xlat
sub
out
das
test
mov
and
sub
pop
cmpsb
cmp
lods
lea
insb
sub
sub
or
sub
push
int3
dec
loopne
ds
imul
popf
jmp
mov
xchg
mov
xor
daa
inc
les
aas
ljmp
icebp
inc
(bad)
mov
shrl
or
xchg
push
ds
popf
xchg
push
nop

or
add
add
pop
jmp
sub
push
das
sub
inc
push
stos
daa
roll
adc
das
addr16
subb
pusha
mov
(bad)
fnstenv
dec
daa
cmp
jmp
push
outsl
daa
mov
mov
int
mov
mov
xchg
sub
xlat
xor
gs
cmp
lea
xor
cltd
sbb
push
xor
out
push
fstl
lahf
ja
mov
adc
push
adc
and
das
jg
inc
mov
mov
cmp
sub
adc
popf
stos
add
or
(bad)
int3
sub
insl
dec
cltd
lahf
cmp
cmp
sub
jmp
std
or
sbb
adc
out
mov
pop
lret
or
dec
push
sub
insb
inc
std
sub
push
xchg
xchg
xchg
pop
sbb
push
dec
scas
and
nop

insl
jmp
push
sub
mov
cmp
sub
mov
xor
psubb
dec
sub
shrb
popf
cltd
lret
insb
push
push
lcall
lea
mov
das
push
cld
or
push
shrb
xor
xor
loop
andl
push
sub
jno
cmp
movsb
outsb
cmp
leave
sub
add
push
lcall
dec
scas
cmp
pop
ss
nop
insb
ljmp
in
and
imul
or
imul
notb
sub
imul
xchg
dec
cmp
sub
mov
popa
imul
lahf
or
es
sub
pop
push
dec
iret
das
lret
(bad)
sub
cmp
push
loop
outsl
cmp
sub
or
jo
cmpsb
mov
or
and
xor
xchg
push
daa
imul
mov
or
(bad)
and
sbb
movsb
mov
cmp
jmp
push
stos
and
cltd
mov
push
fstps
leave
push
daa
sub
cs
or
stos
insl
sub
and
pop
out
scas
push
adc
lret
enter
outsb
std
push
call
insb
loopne
add
push
mov
test
loop
cmp
and
daa
or
add
mov
nop

outsl
movsl
push
ds
or
and
push
push
test
xor
pop
jmp
or
pushf
shrl
mov
jg
pusha
iret
jg
and
or
(bad)
clc
or
cmp
mov
push
mov
mov
push
jnp
outsb
lods
in
pusha
lret
mov
mov
test
sub
push
nop

sbb
loope
or
movsb
mov
adc
in
xor
dec
xor
xor
imul
es
mov
in
jb
push
xor
add
cli
sub
or
sti
pop
and
push
sub
or
out
dec
sub
js
cmpsl
xchg
jle
sub
jp
mov
sub
xor
push
push
int
icebp
and
adc
in
sub
sub
push
push
lret
xor
sbb
sub
dec
jno
(bad)
cld
popf
scas
cltd
pop
dec
mov
fs
or
or
push
sub
xchg
popf
jge
push
xchg
popf
cmp
cmp
xchg
js
cwtl
cmp
lret
add
mov
jp
adc
push
jge
dec
into
sub
lock
push
sub
cmp
cltd
inc
out
outsl
outsb
push
push
pop
stos
dec
sub
xor
lahf
sub
stos
sub
das
imul
sbb
sub
psubd
mov
push
inc
lahf
cltd
jl
jmp
sub
psubd
cmp
psubsb
lahf
popa
push
jns
jnp
repz
jle
push
pop
push
(bad)
dec
sbb
das
aas
stos
popf
sub
sbb
iret
stos
add
out
jns
(bad)
incl
ds
in
sbb
push
mov
sub
cmp
pushf
sub
mov
aas
push
lret
xor
xchg
push
test
jge
in
(bad)
push
sub
dec
sub
mov
cmp
es
rcrl
das
sub
lods
imul
push
sbb
sub
sub
cmp
lea
movsb
pop
xor
xchg
aas
sbb
pushf
aas
faddp
and
push
clc
inc
sbb
or
in
adc
flds
sbb
or
or
or
xor
shl
popf
sbb
ja
sub
push
xor
aas
or
push
or
xchg
push
int3
clc
xor
sbb
jae
xor
leave
das
jmp
xchg
adc
adcb
and
dec
imul
add
adc
and
popf
and
pop
and
fwait

ds
aas
dec
adc
mov
jmp
jp
fisubrs
inc
push
mov
sub
pop
dec
fildll
outsb
imul
pop
scas
xor
clc
imul
mov
mov
and
cmpsl
sbb
out
sub
jmp
cmp
or
das
mull
fcmovu
cwtl
aam
(bad)
push
lret
dec
push
int
lock
mov
xchg
inc
call
ss
and
shll
sbb
and
aas
push
aaa
mov
icebp
lods
xlat
decb
jmp
cmp
mov
(bad)
mov
frstor
pop
imul
or
clc
stos
sbb
push
insb
adc
(bad)
xor
insb
addr16
xlat
cmp
push
and
and
push
cmp
sub
sbb
adc
push
(bad)
sti
pop
mov
scas
push
dec
jb
jmp
cmp
cmp
out
dec
mov
imul
mov
das
sub
cli
push
mov
ds
xchg
xchg
std
sbb
movntq
lret
jno
mov
xor
inc
push
jne
sub
lods
cmp
das
stos
lret
xor
push
cmp
dec
sub
(bad)
fwait

jl
adc
std
mov
int3
imul
cli
sbb
mov
(bad)
fldt
push
push
xchg
sub
pop
cmp
loop
sar
jmp
cmpsl
mov
mov
inc
(bad)
das
mov
clc
in
mov
insl
jge
push
insl
in
std
cmp
hlt
cmp
int
das
or
cmp
insl
nop

in
movsl
push
pop
stc
insl
sub
ret
mov
sub
es
cmp
mov
adc
outsb
mov
push
sbb
popa
mov
call
incl
cmp
lret
and
push
test
imul
push
(bad)
fnstsw
fwait

push
mov
mov
xor
xor
data16
or
(bad)
dec
cmovne
add
out
scas
and
sub
sti
shrl
pop
push
mov
sbb
inc
insb
sub
cmp
cs
or
dec
mov
and
push
std
dec
sub
or
cld
push
cmp
xor
mov
sub
xchg
xchg
mov
dec
into
icebp
add
stos
sub
sti
cwtl
jnp
ret
xlat
cmp
ljmp
jge
aad
mov
cmp
pusha
(bad)
xchg
fistpll
lods
idivl
xchg
lahf
jl
cmp
imul
xchg
jp
xor
pop
scas
mov
push
xor
mov
lods
dec
sar
in
jo
int3
push
mov
sub
nop

cmp
data16
cli
insb
jo
js
ss
lret
test
mov
js
push
or
out
call
das
jmp
loop
pop
sub
in
stos
cmp
fldt
out
loop
das
out
sub
sub
inc
wbinvd
outsb
sub
mov
loop
sub
loop
push
and
cltd
lahf
sub
mov
mov
adc
lods
out
lahf
sub
int3
(bad)
xor
dec
cs
jns
xor
sub
in
sub
ja
sub
mov
lods
movsb
inc
and
ficompl
dec
sub
xchg
daa
iret
sbb
push
xchg
inc
lret
mov
test
xor
imull
and
inc
loope
mov
cli
dec
or
jle
stc
call
cmc
or
sbb
nopl
jo
and
adc
sti
inc
into
sub
pop
sbb
sub
lahf
int3
mov
sub
ss
mov
xchg
lea
or
sbb
sub
or
in
stos
xor
xchg
popa
cmp
push
sub
push
lahf
cltd
loop
aas
outsl
ds
lret
scas
sub
or
movb
sub
out
les
mov
sub
add
sub
ret
inc
scas
sub
ret
(bad)
scas
sub
ret
sub
mov
hlt
test
cmp
sub
sub
jbe
mov
pushf
sbb
sub
sub
fwait

sub
wbinvd
pmulhuw
cmp
mov
andl
sub
stos
dec
xchg
sub
add
mov
sub
test
lahf
or
add
in
fmull
add
imul
in
sub
movsb
outsb
cmp
jge
in
pmulhuw
sub
cmp
and
loope
sub
jle
sub
inc
sub
lahf
cltd
add
(bad)
insl
sub
jle
lahf
cltd
mov
in
das
xlat
sbb
sub
and
jp
and
js
xlat
shrb
or
push
sub
sbb
cltd
lahf
insl
add
imul
aas
sub
or
in
es
outsb
cmp
xlat
mov
lods
pop
in
enter
adc
sub
ljmp
adc
das
outsb
es
mov
arpl
scas
and
jnp
sub
jmp
outsb
mov
and
scas
es
cmp
movsb
xchg
cltd
lret
adc
(bad)
lods
outsl
jge
xchg
addr16
imul
popa
and
das
or
nop

or
jle
sub
mov
push
mov
cmp
insb
into
xor
sbb
in
push
push
das
add
cs
out
clc
push
pop
sub
dec
outsb
imul
stos
mov
pop
jmp
lahf
cmp
insl
aaa
imul
sub
(bad)
outsb
push
xchg
xchg
sub
nop

icebp
mov
orl
and
daa
mov
clc
js
daa
push
stos
and
jle,pn
imul
add
pop
push
test
sub
(bad)
cltd
lahf
jp
imul
cmp
outsb
std
mov
jmp
or
insl
or
sub
in
movsb
stos
das
outsb
and
int3
and
clc
push
outsb
lea
and
sbb
in
xlat
in
aas
push
lods
das
ljmp
sub
lret
push
or
stos
in
sub
out
js
das
and
sub
das
mov
lods
mov
incb
push
adc
scas
ss
sbb
es
xlat
and
shll
sbb
push
outsb
lret
xor
outsb
cmp
movsl
outsb
and
lods
sub
incb
adc
mov
insl
sub
push
sbb
clc
push
mov
nop

(bad)
loop
push
jg
sub
xor
cmp
outsb
imul
nop

in
int3
sub
aas
imul
jmp
stos
cltd
jl
and
mov
cmp
shrd
in
sub
fistpll
int3
or
push
(bad)
sub
mov
xchg
add
das
cmp
mov
jbe
adc
cli
int3
cmp
sub
lea
push
fimuls
sub
stos
mull
ss
mov
ljmp
sub
sub
mov
ss
loop
jge
sub
repz
js
xchg
out
gs
or
lret
ljmp
std
mov
sub
cmp
dec
sub
cld
cmp
insb
in
sub
(bad)
out
or
dec
lock
sub
sti
cs
cs
or
cmp
nop

insl
cmp
or
xchg
xchg
mov
and
sub
and
sub
inc
xor
and
mov
sti
cmp
roll
nop

or
mov
cmp
pop
xchg
add
jbe
leave
dec
das
dec
mov
mov
idivl
jmp
inc
(bad)

mov
sub
stos
adc
dec
(bad)
lock
inc
(bad)
dec
fs
xchg
insb
movsb
stos
push
ljmp
jecxz
and
mov
mov
fcmove
sbb
pop
push
aas
lret
mov
leave
mov
or
sbb
stos
pop
idivl
lret
or
stos
xchg
push
mov
dec
pop
cmp
imul
loope
sub
adc
stos
sub
lret
pslld
cli
xchg
or
popf
or
cmovne
adc
sti
icebp
cmp
sbb
mov
mov
mov
cmovno
mov
lret
(bad)
dec
idivb
aas
jle
cltd
imul
sbb
call
dec
mov
pop
dec
ljmp
movsb
push
ss
insl
add
adc
push
lahf
push
cmp
stos
cmp
insl
pop
add
mov
pop
jo
cmp
sbb
cltd
clc
push
or
sub
jle
add
out
mov
outsl
je
inc
sub
sub
call
lret
imul
or
push
and
in
sub
clc
mov
push
or
jp
js
outsb
push
call
cmp
or
mov
sub
es
sub
mov
je
push
adc
stos
outsl
loop
sbb
push
(bad)
stc
pop
jbe
sub
and
add
loop
lods
jbe
addr16
jl
das
popa
stc
xor
mov
stos
jmp
sub
mov
pop
outsb
std
sbb
insb
cs
or
out
outsb
cmp
pop
xor
push
adc
nop

and
xchg
and
lahf
and
nop

and
and
nop

and
fwait

and
dec
jl
outsb
cmp
lods
sub
mov
sbb
les
out
jp
mov
lret
js
mov
dec
sub
xchg
stos
addr16
lds
xor
cs
jno
mov
ja
xlat
ret
js
bswap
sub
inc
jle
push
loop
mov
push
jnp
cmp
loop
sub
stos
sub
pop
mov
push
or
mov
outsb
and
push
icebp
scas
xchg
mov
cltd
xchg
add
(bad)
sub
mov
mov
imul
sub
popa
icebp
and
push
das
add
js
jmp
sbb
mov
sbb
or
mov
pslld
dec
push
adc
lods
pop
jge
xlat
(bad)
out
mov
add
je
test
mov
int3
push
xchg
ljmp
lods
loop
xor
std
dec
insl
lea
int3
insl
xchg
stos
push
mov
adc
ss
add
add
sub
fstl
xchg
push
push
pushf
outsb
sbb
sub
sub
imul
lret
jo
push
lcall
int3
add
pslld
outsb
add
lds
mov
pop
adc
and
subl
decl
push
xchg
inc
jge
cld
push
out
jmp
iret
in
add
inc
cmc
jle
mov
fwait

sub
(bad)
cltd
lret
pop
and
movsb
pop
sub
mov
xor
(bad)
pop
xor
mov
xchg
scas
mov
and
int3
push
mov
insb
in
lcall
movd
das
mov
sub
dec
sbb
add
cmp
pop
xlat
dec
js
imul
sub
and
xchg
dec
js
xor
sub
addr16
and
sti
sub
popf
push
dec
jle
jmp
paddusw
pushf
das
sub
ds
(bad)
add
lahf
jle
push
dec
push
cmp
jl
sbb
mov
jge
and
cmpsl
push
idivl
lods
iret
mov
mov
and
mov
dec
sbb
imul
push
mov
das
push
xchg
cmp
mov
sbb
int3
push
push
adc
push
push
sub
jl
lock
out
mov
repnz
or
fadds
or
cmp
loop
cli
inc
and
mov
inc
pop
cmp
int
hlt
inc
inc
pop
out
inc
pop
in
into
je
mov
xchg
push
int3
lahf
dec
inc
and
inc
fimull
dec
mov
sub
in
aas
push
insl
clc
movsb
lret
jecxz
cmp
dec
sbb
pop
int3
sub
xchg
mov
rorb
pop
and
xor
sub
inc
cmp
jl
mov
std
aam
dec
push
dec
sub
sub
and
sub
mov
xlat
cmp
ss
not
js
or
and
fs
mov
mov
xchg
cvtpi2ps
int3
push
or
fwait

and
jmp
int3
xlat
test
sbb
pop
bound
aam
pop
jno
mov
or
and
into
and
and
sub
lods
xor
into
imul
das
lahf
or
lahf
push
jne
test
add
add
lods
sub
mov
dec
ds
cld
cmp
dec
sub
add
and
xchg
dec
int3
push
pop
push
and
das
int
or
popa
cltd
adc
add
cmp
mov
push
mov
mov
pop
sub
clc
push
cmp
clc
lret
int3
inc
clc
sbb
das
outsl
pop
and
(bad)
adc
push
aaa
cmpsb
imul
mov
lods
sub
push
add
and
(bad)
movsl
mov
ljmp
push
and
loopne
lcall
ja
xor
push
mov
pusha
fistpl
int3
mov
jo
inc
xchg
dec
imul
lret
aaa
movsb
iret
adc
pop
cmp
cld
jns
xchg
dec
xor
in
sub
movq
call
les
or
int3
push
pop
(bad)
pop
lret
scas
insb
movsb
xchg
in
(bad)
mov
jl,pn
into
(bad)
dec
xchg
sub
or
sub
nop

in
adc
xlat
adc
sub
mull
xchg
mov
and
inc
lret
add
loop
push
mov
sub
mov
jb
int3
or
inc
cvtps2pi
int3
outsb
mov
sub
repz
cltd
lahf
lods
outsb
push
jmp
sub
aas
or
movaps
cmp
ja
push
call
(bad)
xor
cltd
jnp
clc
push
sub
sub
insl
add
sub
adc
sub
js
pop
sub
push
adc
sub
sub
mov
cltd
mov
cltd
lahf
sbb
cltd
lahf
or
sub
ds
mov
jge
sbb
sub
imulb
popa
cmp
test
push
sbb
lods
sbb
cmp
lods
adc
push
sub
lahf
lock
and
jge
and
lods
cmpsb
xor
or
inc
sub
mov
outsb
std
push
sub
mov
or
arpl
cltd
sar
imul
push
imul
push
fldcw
push
lods
sbb
(bad)
arpl
pop
xchg
int
sub
sub
outsb
std
roll
imul
scas
sub
stos
das
insl
adc
cli
xlat
cltd
push
imul
jl
and
clc
push
xor
or
adc
(bad)
outsb
push
xor
push
mov
inc
lods
and
mov
notb
push
lods
jne
pop
cmc
sub
adc
out
cld
cltd
lahf
push
fisubl
add
xchg
inc
dec
cmp
and
cltd
lret
pop
add
mov
rcr
in
or
pmulhuw
sub
sbb
int3
sar
push
sub
incb
mov
pusha
call
jo
das
mov
sti
inc
mov
int3
push
into
sub
or
dec
xchg
or
xchg
outsl
jae
xchg
je
jp
loop
test
inc
lock
cmp
movq
insl
ja
daa
jmp
and
and
test
xor
dec
addr16
rolb
dec
mov
lods
dec
sbb
sub
movsb
outsb
add
lahf
cltd
add
sub
pop
outsb
sub
push
cmpl
sub
push
rcrl
inc
call
dec
jo
mov
mov
lods
jo
sub
mov
(bad)
outsb
sub
lret
shrb
cld
mov
cli
out
xchg
in
sub
xchg
push
xchg
or
xlat
cltd
or
(bad)
in
sub
push
scas
lret
dec
dec
mov
cmp
or
incb
arpl
(bad)
cmp
imul
lods
es
in
jb
push
cmp
in
jo
dec
mov
stc
mov
sub
sbb
cmp
push
sbb
enter
pop
sub
push
cmp
push
sub
xor
sub
scas
loop
stos
add
insl
nop

lret
test
imul
jnp
lods
and
and
test
out
mov
mov
push
cli
sub
arpl
dec
inc
insb
das
xor
or
nopl
cmp
cmp
dec
and
loop
pop
xlat
and
or
push
sub
jmp
(bad)
push
imul
scas
or
and
push
mov
xor
dec
cmp
and
mov
adc
dec
and
and
and
mov
and
and
out
cs
aas
outsl
mov
aas
mov
pop
clc
inc
dec
push
ja
push
(bad)
xor
(bad)
stos
cmp
sub
stos
shrb
das
nopl
xor
cmp
int3
xor
out
sub
inc
outsl
xor
ja
testl
or
in
sub
inc
mov
sub
leave
sub
out
sbb
in
mov
sbb
sub
gs
fldenv
sub
xchg
mov
sub
sub
iret
sub
adc
stos
arpl
xchg
test
subb
(bad)
icebp
aam
(bad)
call
fs
jno
sti
mov
js
aas
in
jle
jl
and
dec
js
addr16
jp
aaa
in
sbb
mov
sub
imul
rcll
icebp
sub
cmp
out
or
push
dec
sub
lahf
and
lods
or
test
or
mov
in
jb
loop
xchg
leave
sub
cmp
lahf
int3
aas
xchg
stos
sub
add
dec
push
bound
stos
sub
iret
push
int3
sub
push
sub
pop
insb
sub
push
scas
pop
sub
sbb
sbb
daa
push
sub
(bad)
ss
cmpsl
lods
loop
and
aas
jle
iret
and
dec
lea
jp
and
nop

sub
loop
loope
sub
icebp
mov
sub
cmp
and
add
sub
mov
push
mov
mov
sbb
lret
in
cltd
lahf
xchg
insb
int
std
mov
rdmsr
dec
and
loope
mov
leave
cmp
cmc
enter
sub
sub
push
call
lods
pop
push
mov
imul
lods
scas
daa
inc
into
sub
cmp
add
cmp
sub
sarl
es
sub
or
push
ret
xor
ss
jmp
add
stos
ret
sub
movsb
subl
cmp
cli
mov
loop
dec
sub
cmp
clc
pop
ss
or
(bad)
clc
pop
aas
sub
aaa
int3
add
xor
(bad)
ja
lcall
pop
sub
ljmp
cmp
and
add
ss
xor
or
or
sub
or
bswap
sub
sbb
lret
fisubrl
mov
xor
or
mov
nop
dec
or
fldt
sub
jg
mov
sub
cmp
mov
sti
daa
and
lret
fs
sub
pop
mov
cmp
jmp
nopl
fsubrl
or
and
and
mov
add
gs
mov
xor
dec
sub
mov
dec
sub
movsb
mov
lods
sub
mov
mov
mov
sti
xor
sbb
aad
sub
sbb
sub
push
adc
sub
add
leave
mov
fwait

jne
sbb
mov
push
popa
mov
jp
in
xor
xor
outsb
cmp
movsb
ja
adc
sub
int3
mov
sub
push
xor
cmc
lret
sub
push
stos
sub
rcll
xlat
sub
xlat
push
cmp
push
insb
sub
push
rcll
scas
rcll
xlat
push
fwait

shrl
mov
push
iret
and
push
mov
push
insb
das
sbb
jge
mov
adc
aas
sbb
add
mov
pop
sub
cmp
sub
pop
ds
int3
and
sbb
jl
push
(bad)
jl
iret
sbb
or
fidivrs
mov
in
mov
data16
mov
mov
jo
or
jmp
push
xchg
sti
aas
jnp
mov
mov
push
push
and
sub
mov
push
dec
jge
clc
push
push
pop
push
sub
dec
xchg
cmp
bswap
push
mov
xor
lods
aaa
fdivr
mov
push
outsb
sub
in
push
jp
adc
jecxz
pop
inc
mov
int3
lret
cmp
and
es
xchg
lahf
lods
cmpsl
add
or
ljmp
es
inc
shrb
xor
(bad)
sbb
push
loope
das
mov
lret
imul
enter
das
or
or
das
push
repnz
sub
dec
adc
sub
lods
popf
lock
pop
add
pop
nopl
insb
pop
and
add
sub
and
push
jo
sub
movsl
lret
cwtd
sub
mov
lahf
adc
lea
or
pop
cmp
out
gs
or
mov
cli
adc
in
sub
cmp
cltd
out
sub
fildll
cs
jl
sbb
adc
in
out
jp
pop
push
mov
repz
push
and
aaa
in
ja
push
and
loopne
sub
push
sbb
lods
xor
jae
cmp
jmp
cmp
dec
push
mov
xor
or
jno
xor
or
jle
popf
sub
cmp
xor
ljmp
sbb
sub
or
mov
cmp
cmp
mov
xor
sti
test
sub
cmp
or
in
mov
(bad)
jo
cwtl
shr
shll
imul
adc
dec
mov
imul
push
clc
cld
xchg
add
pop
and
and
add
push
push
sti
sub
jecxz
mov
sub
popf
add
nop

xlat
lcall
mov
jb
aas
or
sub
mov
mov
push
jg
adc
sub
mov
sub
cmp
aam
cmp
pop
sub
mov
fwait

es
call
aas
call
lods
mov
sbb
sub
xor
movsb
mov
outsb
out
and
ds
xchg
mov
jbe
xor
xchg
(bad)
xor
mov
cmp
mov
mov
push
in
negb
pop
xchg
add
sbb
jge
xor
mov
ljmp
xchg
add
dec
mov
xor
sbb
cs
in
imul
gs
sub
or
xor
xchg
outsb
add
pop
push
dec
cmp
xor
pop
jmp
lret
cmp
jmp
add
mov
push
sti
inc
mov
outsb
mov
sub
adc
mov
xlat
repz
jp
and
mov
jg
push
xor
pop
addr16
adc
cli
out
lods
test
imul
push
(bad)
xor
sub
cmc
jle
shlb
xchg
push
sbb
mov
lods
inc
fldt
or
imul
aas
outsb
imul
or
int
call
sbb
sbb
imul
cs
das
pop
pop
sub
outsb
scas
pop
(bad)
push
aaa
ret
and
jle
pop
sub
and
xchg
out
and
sbb
bound
and
pop
xchg
inc
push
sub
test
loop
mov
jns
sub
sub
cli
daa
dec
int
push
or
sub
dec
sbb
cmc
push
or
clc
mov
(bad)
int3
cltd
sub
lea
push
lahf
cltd
sub
lahf
test
ja
in
insl
and
and
repz
sub
icebp
(bad)
cmp
int
popf
mov
add
rcll
or
dec
adc
sub
outsl
mov
lret
mov
xchg
sub
lahf
int3
add
das
or
sub
roll
sarb
dec
sub
enter
jl
loop
ss
mov
push
cltd
lahf
cltd
sub
jae
imul
scas
icebp
mov
sub
aas
jle
sub
wbinvd
adc
or
int3
adc
sub
sub
jae
and
dec
mov
push
sub
cltd
lahf
out
rcll
or
popa
icebp
mov
wbinvd
push
sub
push
push
sub
or
sub
jae
push
push
push
or
push
or
sub
test
or
ss
xchg
xlat
adc
mov
sub
stos
mov
sub
lahf
cltd
notb
xchg
mov
not
les
push
outsb
inc
xchg
inc
lret
sub
push
sub
jmp
sub
sbb
stos
es
sbb
in
or
cmp
and
push
int3
push
xchg
stos
sbb
insb
sub
dec
dec
mov
cmp
sub
insl
clc
push
mov
stos
cmp
cmp
jle
cmp
sub
outsb
stos
es
bound
and
xor
sub
mov
and
cmp
sub
dec
outsb
aas
cltd
or
sub
lret
scas
and
aas
pop
cmp
sub
aaa
stos
lea
mov
bound
movzbl
mov
push
gs
sub
xchg
push
add
adc
fsubrs
xor
sbb
sub
test
jmp
ja
sub
shl
cmp
stos
xchg
and
sbb
jo
push
fs
adc
popa
cmp
sub
pop
insl
sub
push
je
insb
jmp
notb
and
shrl
jmp
xchg
and
cmp
out
outsb
sub
sub
imul
shr
push
add
and
test
add
sub
push
add
stos
and
fsubrs
pop
test
dec
sub
sub
loop
pop
out
cmp
add
insl
sub
cltd
outsb
clc
sub
mov
scas
or
punpckhdq
ds
and
cmpsl
cltd
and
cmp
cmp
outsb
std
out
push
les
std
push
shr
adc
call
repz
sub
mov
mov
sub
leave
ljmp
cs
insl
loop
xor
and
das
or
nop

xchg
adc
scas
adc
insb
icebp
push
sar
out
sub
mov
add
cmpl
in
or
aas
and
insl
pop
(bad)
push
lcall
push
imulb
das
aas
jle
in
das
cmpsl
jle
sub
sub
imul
lahf
in
push
ljmp
daa
lret
daa
shrl
xchg
mov
cwtl
xchg
inc
loope
test
mov
ja
stos
ror
push
mov
xlat
push
mov
push
popf
xlat
push
sub
shll
sbb
sub
xlat
push
add
sbb
mov
dec
or
nop

(bad)
xchg
xor
pop
rcll
jp
mov
sub
dec
dec
jl
and
outsb
sub
outsb
pop
jl
sbb
push
stos
dec
xlat
psubq
sub
in
cmp
or
xor
dec
sub
xchg
sub
gs
push
push
add
sub
sub
mov
mov
in
sbb
adc
insl
xor
dec
mov
or
pop
mov
imul
add
xor
pop
add
dec
cmp
jmp
sub
stos
cmp
cltd
scas
inc
mov
lret
das
jmp
sub
mov
add
adc
outsb
push
lret
sub
sub
mov
xlat
sbb
jae
mov
mov
clc
or
add
sub
(bad)
jnp
push
push
jge
scas
adc
pop
in
sub
xchg
mov
ss
das
mov
shl
inc
dec
sub
sub
mov
lahf
or
push
movsl
pop
sub
or
call
add
clc
decb
repnz
or
setns
insb
cmp
and
ja
imul
inc
lea
aas
in
outsb
push
fmuls
stos
addr16
mov
pslld
dec
outsb
imul
wbinvd
dec
insb
cmpl
insl
es
aas
lods
sub
out
movsb
sbb
or
jge
xor
mov
push
push
push
sub
jmp
push
cwtl
sub
cmp
hlt
pushf
lret
push
pop
das
and
insl
sub
mov
xor
(bad)
ljmp
adc
xor
push
pop
or
push
sub
cmp
dec
dec
sub
loop
sbb
loope
outsb
push
sub
jl
and
pmulhuw
dec
mov
movsl
stos
cwtl
stos
sub
mov
je
sub
sub
mov
ss
lret
and
clc
inc
in
cmp
pop
lods
sub
sub
lods
and
cmp
mov
sbb
imul
lahf
out
insb
fwait

dec
cmp
mov
nopl
sub
leave
repz
xor
dec
movsb
bound
lret
jg
(bad)
iret
test
xchg
push
push
push
sub
pop
stos
mov
hlt
sub
jmp
cmp
mov
clc
mov
lods
add
xchg
lcall
imul
pop
dec
and
es
push
dec
cmp
ja
sbb
mov
stos
mov
popa
and
push
and
add
add
loopne
mov
and
lods
or
pop
push
in
pop
imul
xor
scas
dec
lret
clc
push
(bad)
outsl
push
sub
sub
sbbl
sub
cmp
xor
stos
mov
sub
sub
int
cmp
jns
int
incb
mov
fwait

jge
sub
repnz
sub
test
sub
sbb
mov
fisubrl
mov
sub
mov
mov
sbb
movsb
pop
das
jnp
sub
das
dec
fwait

lea
imul
imulb
and
xlat
jb
xor
push
in
cmp
fldl
sub
push
pop
push
std
bound
push
sbb
sbb
(bad)
stos
imul
push
lahf
push
sbb
bound
xchg
push
sbb
add
sbb
mov
sbb
jle
sti
inc
jl
insb
dec
outsb
mov
es
push
dec
add
fldt
scas
pop
add
mov
sub
js
sub
push
and
push
test
sub
push
mov
sbb
sbb
push
(bad)
sbb
cmp
test
test
addb
push
ljmp
jge
jge
adc
push
imul
insb
xor
cmp
pop
inc
sub
stos
cs
call
das
sub
lahf
and
or
ret
sub
mov
sub
or
cmp
sub
int
cli
std
adc
jne
jge
clc
call
xor
pop
pop
and
push
dec
fcompl
add
shrd
fistps
test
sbb
pop
and
dec
cmp
call
dec
push
lea
mov
rcll
ljmp
pop
clc
cmp
or
pop
dec
sbb
xor
mov
dec
jne
or
cmp
cmp
sub
xchg
pop
imul
xchg
les
or
pop
xor
jns
insb
sub
sbb
lret
dec
bound
or
and
mov
xor
in
sub
pop
adc
push
mov
sub
push
lods
sub
xor
sub
or
int3
das
in
subb
or
repz
iret
mov
sbb
fldl
cmp
mov
(bad)
xor
int3
jbe
aas
dec
idivl
mov
inc
or
lea
mov
lods
mov
int
push
pop
jg
orb
jmp
cmp
outsl
mov
outsb
in
sbb
or
icebp
mov
mov
or
mov
jge
xor
cmp
stos
fbld
fstpl
and
in
cmp
sub
lret
gs
sub
jge
inc
int3
int3
xor
lods
push
shll
cmp
and
sti
stos
scas
jp
mov
stos
sbb
sbb
dec
js
dec
xchg
mov
cmp
sub
jl
pop
in
int3
pusha
sbb
sub
cmpsl
sub
outsb
sub
mov
stos
jp
and
jge
std
sub
push
dec
dec
js
stos
ret
lret
in
cmp
sub
outsb
clc
push
jp
push
loop
pop
int
dec
paddsb
in
sub
cmp
inc
insb
adc
sub
xchg
xor
sub
pop
sub
call
push
pop
insb
sub
pop
and
pop
mov
test
mov
out
pop
out
push
enter
insb
jp
pop
sti
out
inc
mov
cmp
arpl
push
xchg
test
add
mov
outsl
nop

pop
test
push
test
lods
sub
cmp
xchg
pop
ss
fisubrl
lahf
sbb
sbb
or
sub
cmp
das
or
fimull
xchg
minps
and
sub
test
stc
mov
cltd
mov
mov
dec
inc
jp
and
mov
aas
outsl
sub
inc
int3
xlat
lcall
insl
aaa
dec
sbb
icebp
call
lods
sub
bswap
sbb
pop
jnp
and
lods
daa
fnstsw
xor
xchg
mov
(bad)
lret
out
adc
cli
int3
mov
sub
aas
js
add
push
daa
lret
or
mov
cmp
adc
mov
cmp
dec
jmp
mov
sbb
jl
mov
and
into
adc
in
jo
pop
sbb
(bad)
push
or
dec
and
inc
jmp
dec
xor
sub
and
xor
xchg
xchg
sbb
or
sub
loope
in
xchg
call
adc
in
jb
lea
les
ret
loope
addr16
cmp
(bad)
cmp
int3
dec
shlb
jnp
es
sub
int3
outsb
mov
outsb
data16
mov
ljmp
mov
sub
adc
ss
sub
pushw
ss
xlat
sub
sti
xlat
jl
sub
sub
outsb
in
xor
les
push
push
adc
ljmp
add
in
push
test
mov
sub
test
imul
cmp
mov
cmp
stos
sub
jbe
in
imul
addr16
sub
sub
mov
push
ss
xlat
sub
rcll
push
push
add
push
sub
loop
rcll
inc
outsb
push
popf
xlat
push
push
outsb
lods
push
mov
scas
xlat
push
shrl
std
popf
lahf
mov
dec
xor
or
push
call
xlat
sub
sbb
arpl
mov
xchg
mov
add
lahf
sub
insl
cltd
or
xchg
mov
jb
xchg
out
cmc
or
stc
sub
movsb
mov
sub
inc
dec
insl
xchg
sub
insl
xchg
jnp
andb
insl
xchg
pop
inc
sub
outsb
inc
add
loope
outsb
sub
js
cmp
cld
repz
shrb
xchg
sub
(bad)
(bad)
push
sub
or
sub
addr16
lahf
xchg
sub
jle
jmp
cmp
sub
outsb
scas
in
jb
mov
repz
sub
xchg
insl
push
or
sub
lods
cs
repz
push
shrl
or
sub
test
or
cmpsb
das
and
dec
pop
xor
(bad)
jmp
outsl
out
ja
sub
or
rolb
sub
cmovle
sub
xchg
jo
jno
scas
outsb
lods
in
popf
addr16
je
test
mov
out
stos
or
dec
subl
xchg
inc
mov
mov
push
les
adc
in
sub
jle
push
shrl
int3
push
into
sub
jmp
imulb
xor
sbb
xor
lods
cmpsb
mov
sbb
ds
xchg
push
and
sub
(bad)
nop

insl
xchg
nop

and
mov
sub
ljmp
icebp
(bad)
mov
nop
sub
js
mov
mov
stos
sub
or
pop
loop
mov
imul
push
sub
pushf
and
outsb
clc
mov
push
jge
cmp
sub
lock
dec
pusha
or
push
mov
clc
bound
and
in
sub
imul
mov
fsubrs
pop
jno
xchg
shrl
cmp
in
push
xlat
insl
insl
xlat
xlat
push
add
and
outsb
push
sub
pop
mov
clc
lret
inc
lods
sbb
and
lahf
icebp
sub
mov
add
sub
mov
mov
cmp
xor
or
jge
cltd
lahf
xor
sub
and
sub
int3
notb
nop

icebp
decl
loop
outsb
sub
push
push
cs
sub
mov
mov
jl
imul
sbb
insl
jbe
cmp
jnp
cs
call
(bad)
push
je
cltd
lahf
mov
arpl
aas
or
lods
sub
or
sub
ljmp
sti
inc
(bad)
stos
daa
mov
or
push
or
lods
dec
pop
in
insl
and
pop
xchg
push
sub
cmp
dec
sbb
test
movsb
addr16
clc
testl
sub
sub
pop
sub
sub
imulb
sub
sub
xchg
sub
xchg
sub
sub
mov
sub
test
sub
sub
inc
sub
insb
push
cmp
in
aaa
insl
lea
xchg
sub
imul
clc
pop
mov
sbb
sub
imul
mov
sbb
dec
notb
xor
add
sub
add
scas
mov
insl
dec
sub
daa
cltd
outsb
mov
ss
nop

xchg
mov
sub
(bad)
loop
imul
add
icebp
leave
sub
mov
sub
or
sub
jl
out
dec
orb
(bad)
cld
imul
mov
sub
sarl
in
inc
or
stos
or
or
xchg
lods
mov
or
push
add
sub
mov
pop
jmp
push
xor
sub
mull
xchg
add
and
lea
int3
or
in
dec
sub
jb
lret
es
push
lods
cmp
outsb
or
pop
push
lods
or
test
mov
es
sbb
cmp
push
lahf
(bad)
iret
test
xchg
cmp
sbb
shr
sub
push
aam
das
push
add
movsb
daa
xlat
mov
mov
incb
sub
loop
popa
lock
jmp
outsb
in
push
sub
decb
jae
and
push
mov
pop
lret
sub
stos
cli
jns,pn
imul
ljmp
in
sub
ljmp
clc
sub
push
sbb
sbb
push
mov
outsb
in
jge
push
outsl
subl
push
int3
add
push
xor
out
dec
push
addr16
cmp
sub
mov
lods
sub
stos
cmpsb
mov
stos
movsb
inc
jmp
mov
lret
push
add
dec
imul
popa
lock
sub
mov
jle
sub
js
xlat
jnp
push
ds
cmp
sub
cmp
ljmp
lock
sub
or
jbe
cs
push
mov
or
js
jge
jp
sub
mov
repz
addr16
imul
in
adc
int3
ss
mov
movsb
shrl
and
int3
shll
mov
push
stos
push
jmp
push
or
mov
imul
mov
or
aaa
sbb
pop
in
in
add
pop
dec
das
sub
es
insl
sub
shrd
sub
lahf
repnz
mov
mov
repnz
loop
inc
(bad)
and
ss
std
push
mov
repz
in
or
(bad)
sub
lock
push
loop
outsb
hlt
jle
imul
push
mov
or
int3
mov
or
stos
sub
and
lret
das
stos
sbb
sub
sub
loop
or
mov
sub
ja
sub
and
in
nop

mov
jg
jmp
int3
imul
push
outsb
daa
sbb
sarl
mov
sub
fsub
nop

mov
arpl
out
addr16
xor
and
or
mov
xchg
movsb
push
out
repz
xor
sub
pop
das
mov
es
imul
jns
lea
sub
xor
movsb
sub
push
mov
adc
mov
int3
imul
(bad)
(bad)
cmp
int
jnp
mov
and
cmp
or
mov
and
test
int3
or
cmc
adc
dec
insl
jl
cltd
cmp
mov
fildll
mov
call
and
int
fmull
in
jnp
cmp
popf
cmp
jle
jbe
xor
fwait

es
sub
in
insb
sub
imul
and
imul
sub
or
pop
sub
mov
push
insl
outsb
xor
aas
push
and
das
insl
mov
or
add
mov
add
mov
cs
lods
jns
pop
sub
out
fwait

pop
mov
push
xchg
int
std
or
decb
movsb
scas
sbb
test
pop
call
test
push
das
sub
push
push
rcrb
or
adc
jle
sbb
sbb
in
cmp
iret
pop
dec
insl
or
xchg
stos
mov
cltd
clc
push
sbb
fs
add
sti
push
jp
adc
adc
or
imul
push
jmp
sti
push
aas
(bad)
jl
outsl
mov
pop
out
aas
mov
mov
jnp
fnstcw
mov
jnp
dec
sub
adc
sbb
cld
push
mov
cmp
aas
movsb
mov
or
leave
and
sub
push
add
das
mov
jno
mov
sub
adc
push
sbb
jb
addr16
jne
xor
jmp
mov
add
js
scas
pop
and
sbb
pop
and
xchg
push
pop
sub
cmp
and
sub
cmp
add
push
adc
mov
in
aaa
js
sub
cmp
pushf
cs
cmp
xor
pushf
imul
mov
sub
sub
out
aas
push
sub
lahf
cltd
add
mov
adc
and
sbb
mov
scas
cmp
jae
or
popl
icebp
and
sbb
push
lea
lcall
mov
in
add
das
mov
cmp
jo
bsr
push
jecxz
cmp
lret
sub
jmp
or
in
das
push
add
das
or
mov
mov
and
cmp
fstpl
int3
mov
dec
mov
test
sub
std
sbb
mov
sarl
push
sbb
sub
pusha
sbb
sub
mov
scas
sub
push
rcl
sub
push
cld
xor
sbb
out
cmp
pop
jp
push
mov
xchg
icebp
je
sub
scas
push
fs
cs
sub
sub
jns
imul
cli
mov
sarb
add
sub
aaa
int3
stc
cs
mov
out
push
push
mov
mov
xor
add
sbb
sbb
pop
and
pop
es
cmp
sbb
sub
push
sbb
mov
das
(bad)
insl
cmp
xchg
adc
cmp
sbb
lahf
xlat
cmp
mov
out
jnp
sarl
stos
(bad)
in
add
xor
xlat
adc
cwtl
or
pusha
jmp
mov
sub
pop
cmp
mov
std
or
jnp
add
outsb
pop
popf
add
(bad)
popa
addr16
sbb
sbb
jne
xlat
aad
or
sub
push
call
or
xlat
(bad)
daa
push
dec
das
sub
mov
sub
in
(bad)
adc
jno
ds
jg
sub
clc
push
popf
sub
and
bound
xchg
push
cld
imul
aad
popf
sub
jmp
sub
sub
clc
sbb
mov
lcall
adc
lret
adc
or
sti
push
inc
aas
gs
xor
pop
push
inc
lcall
jle
add
push
sbb
pop
jne
push
cmpsl
lea
pop
es
and
sub
clc
push
das
icebp
jmp
or
and
(bad)
mov
jle
insl
cmp
jmp
push
sbb
std
push
frstor
outsl
int
and
sub
cmp
sbb
lret
das
cmp
jp
mov
xor
xchg
nop

push
sbb
jmp
idiv
dec
sub
fisubs
(bad)
pusha
adc
mov
push
xlat
(bad)
cmp
sub
jmp
mov
(bad)
cmp
sub
outsb
inc
xchg
inc
mov
cltd
int3
incb
push
sub
xchg
popa
cmp
sub
lahf
cltd
clc
sub
stc
xchg
mov
cltd
xchg
sub
mov
and
lret
push
xchg
lahf
int3
push
xchg
iret
sub
jbe
lret
adc
sbb
mov
cmp
or
icebp
int3
push
ljmp
out
loop
sbb
imull
pop
into
je
sub
mov
sub
out
push
cmp
lahf
sub
add
dec
pmulhuw
mov
sbb
popa
jmp
xor
cmp
xchg
lods
pusha
sub
sub
sub
(bad)
nop

in
xor
div
push
push
out
daa
and
adcl
or
lret
sub
sub
outsb
test
lods
das
in
sub
lret
sbb
mov
das
cs
jge
lahf
popa
lahf
sub
push
imull
or
push
inc
add
mov
sub
jno
fsts
mov
adc
add
ja
cmp
stos
arpl
mov
sub
outsb
sbb
sub
testb
inc
outsb
lods
aaa
stc
sub
add
lods
movsb
out
or
pop
cmp
sub
add
push
scas
test
ss
xchg
adc
sub
cli
dec
dec
outsb
clc
call
push
xchg
sub
jl
jge
or
sbb
or
js
mov
sub
cltd
jmp
jmp
insl
jnp
jmp
jmp
cmp
call
push
clc
push
xchg
fistps
cltd
clc
sub
xchg
cltd
sti
cltd
xchg
push
in
cmp
jmp
call
cltd
mov
lret
stos
xor
arpl
push
daa
test
sbb
xor
cs
stos
xor
das
push
insl
imul
in
out
inc
insl
jp
mov
insl
push
sub
lahf
cltd
add
setns
lods
or
scas
or
push
mov
push
test
or
movsb
sub
xor
in
and
xchg
nop

mov
movsb
or
adc
sbb
sub
ds
pop
sub
cmp
shrl
es
in
sub
lahf
cltd
ja
lahf
int3
shll
ljmp
jg
cmp
pop
imul
movsl
cmpsb
mov
pop
iret
jmp
sub
jae
lahf
int3
pmulhuw
add
sub
sub
shl
cmp
sub
loop
mov
push
jnp
sub
push
les
mov
nop

xchg
mov
insl
cmp
je
xlat
shrb
mov
push
shrl
mov
stos
mov
mov
or
pop
shrd
mov
push
cmp
loop
xor
in
jbe
xchg
push
sub
int3
(bad)
push
dec
sub
sub
out
jl
and
repnz
cs
lea
imul
sub
adc
int3
push
iret
mov
jnp
push
out
jmp
push
cwtl
in
es
stos
sub
das
outsl
pop
jo
mov
cmp
cmp
xor
adc
insl
sbb
idivl
or
int
movsb
jmp
ja
xlat
mov
stos
xor
cmp
popf
xchg
and
sub
mov
scas
sub
(bad)
out
int3
or
and
mov
pop
and
sub
xor
mov
jbe
les
loope
sub
cli
int3
xchg
sub
pmulhuw
bound
test
xchg
in
inc
cs
in
mov
stos
das
adc
insl
add
pop
(bad)
clc
(bad)
lods
xor
inc
in
aas
add
lsl
xchg
lret
push
mov
and
pop
incb
movsl
or
sti
and
pmulhuw
dec
xor
stos
cs
xor
lret
jmp
mov
add
lret
sbb
ss
negb
jmp
fistpll
mov
leave
lods
sub
cmp
or
xor
aas
or
nop

or
mov
cs
jge
cltd
aas
scas
or
stos
or
xchg
sub
es
mov
jnp
mov
adc
mov
add
cmpsb
cltd
lahf
or
int3
jg
sub
and
or
rorb
shlb
push
adc
sub
mov
sub
sub
rorb
sub
sub
popa
dec
cs
and
cmp
push
outsl
add
repz
insl
mov
popa
and
shrb
xchg
std
mov
dec
and
ljmp
cmp
jmp
mov
push
xchg
std
imul
push
(bad)
popf
lods
add
sub
sub
stc
addr16
(bad)
cmp
push
dec
add
push
call
sub
mov
wrmsr
push
subb
cmp
inc
jge
or
imul
insl
sub
movsb
xchg
add
cmp
jle
es
fucomip
cmp
addr16
or
mov
cmp
mov
or
imul
or
xor
addr16
leave
xor
and
adc
sub
cltd
jns
aas
fisttpl
pushf
stos
cmp
dec
pushf
push
push
lahf
cmp
dec
sub
sub
sub
mov
lods
mov
push
(bad)
and
and
xchg
call
cmpsb
fisttpll
rolb
push
jmp
movsl
cmp
dec
sub
and
imul
push
adc
push
jmp
mov
sbb
jge
test
ljmp
rcrb
or
sub
imul
jbe
pop
dec
sub
xor
xor
insl
or
sub
das
xchg
add
or
cmp
or
lahf
sub
push
cmp
cs
xchg
sub
loop
push
push
lcall
insb
push
sub
jge
ss
das
mov
lods
sub
aaa
mov
imul
sbb
pop
gs
jnp
xor
jge
push
cmp
sub
in
adc
jg
sub
stos
imul
icebp
sub
outsb
in
rcll
int3
jge
outsb
add
xchg
sub
mov
push
sub
adc
test
sub
outsb
sarl
jno
dec
cs
adc
sti
xor
push
mov
mov
sub
cmp
push
add
es
xlat
stos
push
push
jp
push
cmc
outsb
dec
pop
xor
scas
out
push
int
mov
xlat
(bad)
(bad)
(bad)
aas
pop
and
dec
aaa
pop
cmp
add
addr16
sub
push
sub
and
int3
xor
cmp
mov
mov
int3
sbb
das
sub
cmpsl
mov
push
push
out
pop
push
sbb
mov
xor
jo
push
xchg
and
jle
out
sbb
add
es
add
sbb
push
pop
xchg
inc
out
outsb
scas
mov
push
cmpl
dec
and
mov
sub
loop
xlat
jnp
js
jl
aas
lret
cmp
add
dec
dec
inc
pop
push
jp
sub
jbe
daa
mov
mov
lea
clc
push
xchg
and
cmp
jnp
push
push
mov
dec
fnsave
push
push
xchg
mov
xchg
imul
push
movsb
dec
sub
int3
sbb
jg
sub
sub
cli
sub
test
mov
insl
jno
test
aam
test
clc
mov
lret
aam
stos
push
jne
js
scas
and
sti
mov
pop
cli
push
shl
cmp
mov
push
imul
int3
and
add
push
add
mov
add
fisttpl
andl
or
lret
and
(bad)
mov
sbb
int3
in
adc
mov
insl
clc
push
loop
sbb
lret
das
push
js
sub
sub
std
inc
mov
inc
test
(bad)
out
fwait

adc
sbb
inc
cltd
pop
dec
insb
subl
lods
pop
mov
imul
jnp
cmp
jmp
cltd
js
stos
fs
add
push
sahf
int3
lods
int3
js
sbb
cmp
jle
lea
call
and
call
push
outsb
lods
es
clc
mov
xor
outsl
jnp
dec
mov
sub
push
loop
sub
insl
sbb
sub
and
lods
jb
and
pop
push
xlat
or
mov
pop
faddl
sub
mov
xchg
sbb
sub
sti
and
sub
push
push
mov
cmp
mov
adc
in
int
(bad)
push
sbb
and
outsb
push
lret
das
jg
ljmp
das
sbb
add
mov
add
insl
add
stos
mov
jne
pop
stos
cmp
pop
cltd
xor
lods
imulb
addl
cs
popa
das
insl
sarl
js
cmp
sub
jo
cli
jl
dec
fwait

xchg
sub
cltd
outsb
imul
sbb
and
insl
sbb
mov
pop
pop
rcrb
adc
pop
scas
sub
es
cli
cld
and
mov
daa
mov
rcrb
sahf
pop
daa
int
cmp
dec
enter
sub
mov
sub
daa
pop
outsb
adc
sbb
lahf
push
sub
les
fld
xchg
sub
lahf
xor
cmp
mov
dec
notb
sub
sti
nop

std
mov
lds
mov
lret
xlat
mov
sub
mov
mov
fdivr
or
sub
mov
xchg
mov
lods
mov
in
or
sbb
outsb
mov
xchg
(bad)
mov
xor
sub
xchg
jbe
sub
mov
ss
outsb
rcl
ret
mov
xchg
into
xor
sub
setb
sub
sti
sub
and
xor
addr16
mov
lods
js
and
ja
sub
fnstcw
test
xor
gs
outsb
test
sub
mov
out
mov
loop
sub
popa
push
in
pop
sub
(bad)
iret
cmp
mul
or
outsb
(bad)
sbb
inc
outsb
cmp
imul
idivb
das
push
sub
push
loop
in
sub
in
push
in
sub
in
das
jmp
sub
jmp
(bad)
in
xchg
call
jg
adc
cmp
rorl
or
lods
out
outsb
stos
push
sub
xor
xlat
mov
mov
mov
cltd
mov
roll
wbinvd
add
gs
out
push
jp
mov
incb
push
push
ds
packssdw
sub
jns
push
imul
les
inc
sub
mov
push
imul
pop
call
push
jmp
das
cmp
xchg
ljmp
inc
push
add
adc
fs
popa
popa
cmp
sub
sub
dec
cmp
sub
add
push
sbb
addr16
aad
int3
stos
mov
push
xlat
sub
shrb
inc
sub
sub
and
and
push
sub
inc
mov
ss
mov
(bad)
jmp
fs
imul
js
sbb
loope
push
imull
mov
addps
sub
inc
and
xor
outsl
mov
call
add
rcrl
enter
call
add
addr16
wbinvd
lfs
test
dec
ss
inc
mov
orl
push
dec
lahf
jnp
dec
sbb
cs
lods
inc
int3
test
mov
pop
shll
xchg
sub
cmc
cld
testl
or
or
lret
jge
bound
xlat
add
inc
shl
add
std
inc
shrb
in
push
arpl
insl
subl
out
notb
ljmp
shrl
lock
call
shr
push
rorl
sub
imul
push
pop
icebp
mov
cmp
push
lods
add
scas
push
imul
imul
lcall
sub
sub
lods
sbb
sub
imul
in
mov
xor
or
test
cmp
testb
in
roll
xchg
mov
insl
xchg
sub
sbb
aam
insl
lahf
xchg
insb
movsb
ss
out
cld
xchg
das
inc
in
sbb
clc
addr16
lods
aaa
shr
xchg
call
insl
mov
shr
push
add
outsl
sub
push
call
sub
lods
repz
mov
sub
cs
call
insl
call
push
lea
rcll
insl
and
and
mov
add
insl
sub
int3
xchg
sub
push
add
das
inc
xlat
dec
add
lds
xlat
and
push
ds
cs
dec
sub
cmp
test
sub
mov
outsb
or
lds
ss
test
ljmp
outsb
fidivl
dec
or
fdivl
cmpsl
ljmp
outsb
push
push
shrb
sub
das
sub
sub
dec
and
sub
mov
(bad)
xlat
push
out
punpckhbw
add
insb
sub
cmp
sub
data16
jmp
stos
xlat
loopne
outsb
sub
or
in
lcall
sbb
push
mov
dec
sub
sub
sub
stos
and
in
lcall
(bad)
mov
or
sub
and
lods
mov
out
int
int
push
sbb
daa
dec
cmp
sub
and
scas
sub
push
in
xor
scas
sub
call
sub
sbb
push
ss
jnp
inc
dec
mov
int3
sub
imul
outsl
es
and
dec
add
dec
and
lods
sub
add
cs
ljmp
cmp
xchg
push
mov
in
adc
rclb
adc
adc
add
leave
push
js
pop
adc
mov
outsl
pop
leave
xor
cmc
outsb
out
int
sub
mov
or
sub
iret
push
push
and
das
out
in
pusha
jnp
mov
ss
mov
sub
and
jb
pop
in
or
add
loopne
or
add
hlt
mov
das
or
push
loop
outsb
and
es
cmp
jne
push
and
in
das
xlat
loop
outsb
in
or
scas
sub
das
inc
or
and
and
mov
popa
push
and
sub
sub
mov
mov
pmulhw
or
popf
mov
push
cmp
call
xor
fs
pushf
or
push
xor
or
shrb
mov
fdivl
sub
stos
es
insl
and
outsb
int
jl
push
pop
push
stos
add
push
add
cmp
sub
sub
sub
outsb
sbb
ss
(bad)
fildll
in
mov
fwait

sub
cs
sub
xchg
fdivrl
ss
pop
lahf
and
push
sub
outsb
adc
in
pop
sub
pop
and
dec
aam
daa
push
push
iret
cs
aas
fsubrl
and
aas
sbb
cmp
aam
cmp
and
insl
stc
cmp
adc
sub
dec
daa
int
cmp
sbb
ljmp
leave
adc
sub
adc
and
adc
aam
adc
xor
adc
sub
and
xor
jae
xor
cmp
or
push
cmp
iret
xor
mov
jge
rorb
sub
jo
xor
sub
sbb
lods
call
sub
xor
iret
cmp
sub
push
sbb
jae
sub
adc
sub
insl
or
sub
mov
sub
jbe
sub
sub
es
push
xchg
jp
repz
mov
mov
mov
iret
jnp
xor
sub
lret
pop
call
fists
sub
sub
dec
outsl
jg
das
ja
and
xor
hlt
pop
xlat
loop
outsb
inc
outsb
lods
dec
outsb
cmp
push
cli
mov
sub
(bad)
xlat
push
cmpsb
popa
(bad)
sub
cld
fs
outsb
cmp
cld
cmpsb
rcrb
sub
lahf
sub
fs
mov
sub
pop
sub
mov
std
sbb
cmpsb
sub
inc
cld
sbb
xchg
inc
jge
ljmp
cmpsb
jo
cld
mov
adc
jo
cmp
cld
mov
cmp
and
sub
lret
jmp
push
sub
pmulhuw
sub
mov
(bad)
xor
(bad)
push
cvtps2pd
pop
clc
sub
mov
cmp
stos
out
mov
mov
fstl
and
mov
xlat
(bad)
jge
in
icebp
loopne
jbe
dec
sub
and
in
push
mov
lods
cs
xor
out
loope
xlat
cmpsb
lret
sub
push
decb
in
movsb
outsb
std
mov
push
sbb
mov
sub
imul
icebp
dec
int3
sti
pop
in
stos
test
ljmp
or
sbb
pop
mov
mov
(bad)
shrl
clc
mov
mov
sbb
xlat
loopne
sbb
cmp
ud2
notb
pop
lahf
je
lret
sub
js
mov
aas
out
or
xor
sbb
jg
mov
mov
dec
and
cs
and
or
jnp
sub
nop

or
push
lea
cmp
aas
cmp
push
or
into
mov
sbb
cmp
sub
dec
sbb
adc
in
or
addr16
pop
sub
pop
sub
mov
mov
cli
and
sub
or
or
sub
lahf
jnp
xor
xchg
xchg
jo
lret
pop
dec
cmp
cwtl
xlat
loop
mov
cmp
cmp
inc
lahf
int3
jb
imul
pushf
sub
imul
xchg
jnp
clc
sbb
jne
mov
mov
inc
decb
dec
mov
popa
lock
enter
and
sbb
cmp
nopl
das
xchg
insb
or
cmp
das
sub
xor
push
sbb
fbld
roll
fwait

pop
cmp
sub
push
das
dec
and
aaa
mov
daa
cmp
sbb
test
adc
fisubrl
loop
sub
sub
jmp
add
or
push
insl
cmp
aas
cmp
sub
sub
scas
fdivrl
jge
cmp
sub
cmp
lea
pop
sub
pop
adc
das
fstpl
fldt
les
cmp
aam
mov
jne
loop
mov
inc
and
sub
push
cld
sub
sub
jae
sub
and
pop
sti
clc
cmpsl
in
lods
sub
sub
xchg
sub
mov
jbe
sub
outsb
inc
outsb
mov
mov
inc
mov
mov
adc
xchg
push
mov
add
sub
pmulhuw
sub
sete
es
loopne
clc
xor
push
sbb
lods
stc
sub
push
push
and
xor
mov
pushf
stc
outsb
adcb
sub
imul
mov
push
shll
xlat
fs
adc
outsb
add
sub
sub
xchg
xchg
sub
and
push
ret
ds
xchg
xchg
sub
sbb
push
(bad)
sub
cmp
notb
sub
sub
xchg
push
std
outsb
add
add
push
sub
shrb
cmp
popf
push
jle
sub
sub
jmp
mov
das
jae
sbb
cmp
outsb
sub
and
xor
xor
inc
sub
mov
jo
bound
xor
(bad)
push
imul
sti
sub
cs
insb
int3
ss
xchg
scas
jb
xchg
fwait

push
sti
inc
loope
sbb
insl
xor
and
wbinvd
sub
repz
push
pminsw
adc
jle
mov
push
and
outsb
or
into
stos
pop
repz
es
sbb
pop
jle
sub
jno
fstps
sti
adc
lcall
and
loopne
jle
jmp
test
jnp
mov
movzbl
je
in
stc
sub
es
sub
sub
cmp
stos
push
xchg
adc
mov
stos
sub
cltd
sub
sub
xlat
cmp
push
dec
jns
adc
stos
call
jbe
sub
imul
add
mov
xor
in
cmp
add
sub
pop
xchg
das
push
jnp
xor
cmp
iret
cmp
and
(bad)
push
das
mov
xchg
adc
aas
call
std
imul
push
sub
outsb
xchg
sub
insl
sbb
mov
mov
daa
out
sub
roll
add
stos
dec
jmp
or
lods
and
push
ljmp
imul
cmp
insl
mov
pop
and
xchg
push
call
pop
outsb
std
push
sbb
sub
add
push
xor
cmp
jl
imul
in
and
and
jnp
sub
lds
in
stos
inc
ja
fs
imul
in
jmp
addr16
xlat
lods
insl
sbb
test
int3
out
and
add
sub
or
sti
mov
in
stos
xor
daa
shrb
sub
jmp
push
fldcw
ljmp
sub
mov
jmp
call
mov
mov
das
loopne
xlat
std
xlat
inc
push
sub
push
mov
mov
mov
in
outsl
addr16
push
mov
or
xor
loop
stos
pop
push
das
pop
insl
pop
out
ss
add
lea
nop

icebp
add
or
sub
cmp
mov
in
sbb
push
call
sub
outsb
sub
das
jne
lds
scas
sub
stos
rol
test
mov
jecxz
sub
jge
sub
or
out
dec
or
mov
insb
mov
cmpsb
nop

in
cmp
imul
or
int3
push
loop
aas
cli
aas
arpl
push
sub
das
pop
in
out
mov
in
cmp
xor
out
push
cmp
push
jno
adc
insl
mov
and
xor
push
lods
cmp
xor
call
or
imul
push
mov
adc
or
out
out
je
push
xchg
movsb
das
sub
xchg
mov
lret
sbb
jo
and
dec
mov
sub
push
pop
sub
sub
mov
push
lret
sub
out
and
das
adc
nop

mov
push
je
and
(bad)
int3
cmp
dec
popa
mov
or
xor
ja
jp
inc
and
scas
lods
das
push
or
sub
push
jl
cmc
sub
cmp
outsb
sub
add
out
sub
xchg
dec
lahf
sub
call
imul
cmp
xchg
push
sub
xlat
cltd
lahf
out
cmp
push
sbb
jecxz
xchg
add
mov
jno
stos
jl
popa
jns
lods
das
in
sub
sarl
jns
inc
dec
sub
sbb
jno
pop
lods
inc
lods
sub
add
sub
nop

xchg
add
stc
dec
and
std
std
imul
add
in
mov
or
sub
push
mov
popa
nop

jmp
or
add
sub
ljmp
mov
test
or
shll
sub
jnp
dec
stos
dec
mov
sub
cmp
insl
cmp
ljmp
push
ljmp
das
mov
push
movsb
popa
jns
push
dec
and
xchg
mov
push
sub
int3
lea
out
cld
addr16
and
cli
daa
addr16
lods
shl
sub
popa
push
repnz
popa
cmp
lea
stos
or
rdmsr
fwait

stos
or
cmp
add
outsb
sub
mov
outsb
sub
ds
repz
jp
push
addr16
daa
mov
shll
jecxz
in
lcall
lret
and
sbb
xor
and
aas
xchg
lods
popa
arpl
cli
stos
sbb
sub
outsb
xchg
add
xchg
inc
and
mov
and
pop
mov
pop
xchg
jno
dec
sbb
popa
jns
int
adc
mov
cmp
add
push
jg
dec
adcb
adc
lcall
in
inc
inc
sub
xor
lods
sub
sub
sub
cmp
sti
sub
cmp
cmp
pop
sub
fcmovne
popa
or
sub
xor
push
mov
sub
xchg
addr16
imul
cmp
cmp
js
es
pop
pavgw
or
test
dec
or
or
xchg
xor
mov
jp
cmp
out
in
sbb
rorl
sub
lret
push
jl
fnstenv
jb
xchg
das
ljmp
inc
xor
popf
mull
push
cmp
clc
cmp
imul
int3
xchg
cltd
lret
popa
imul
in
pop
gs
adc
sbb
lret
jno
lods
stos
jge
adc
imul
cmp
sub
cmovne
push
icebp
imul
sub
jl
call
xchg
or
sub
mov
mov
sub
or
xor
xor
lea
imul
add
scas
clc
imul
push
xchg
enter
stos
popa
cmpsb
adc
clc
inc
adc
and
pop
sub
rcll
xor
sub
jns
(bad)
das
sbb
add
sbb
stos
sub
mov
xor
push
dec
mov
lret
dec
push
cltd
pmulhuw
cmp
sbb
fistpll
push
add
stos
sub
scas
cltd
out
sub
sti
mov
clc
sbb
sub
xchg
pop
test
cmp
sub
inc
mov
mov
jno
int3
xor
xlat
out
roll
ss
jnp
mov
cltd
sar
push
push
dec
adc
outsl
push
xchg
dec
das
jmp
mov
lret
imul
pop
jle
and
daa
cmp
divl
std
sub
int3
fisubrs
arpl
pop
loope
sub
orl
mull
mov
or
enter
jle
ss
xor
cmp
xor
fcoml
push
int3
dec
das
lret
mov
(bad)
cmp
ss
lret
lret
inc
xchg
add
in
insl
pmulhuw
push
lret
ss
sbb
inc
sub
and
push
push
cmp
sub
adc
or
outsb
and
fstpt
jmp
push
push
sub
outsb
addr16
sbb
sub
mov
push
dec
nop

shrl
das
push
fsubrp
sarl
push
jp
sub
xor
xchg
cmp
lods
dec
mov
jp
pop
sbb
(bad)
imul
or
in
push
cmp
sub
adc
mov
mov
cs
mov
cs
dec
sub
sub
call
inc
push
int3
into
or
cmp
xor
push
cli
xor
cmpsb
decb
xor
adc
sub
aaa
sbb
sbb
lcall
sbb
or
sub
or
lea
and
sub
repz
pop
icebp
xlat
xor
pop
cmp
sub
jno
sub
mov
ficomps
push
lahf
add
ss
pop
add
and
mov
aas
iret
jb
xlat
loop
jp
frstor
and
nop

sub
outsb
dec
adc
push
jle
and
arpl
push
xor
cmp
or
ss
push
out
dec
das
and
sub
sub
jmp
dec
mov
sub
and
adc
sub
cmp
cli
movsl
popf
stos
jp
jp
sub
jmp
xor
xlat
call
outsl
fs
fs
and
mov
jnp
fisttpl
adc
(bad)
out
dec
or
sub
test
sub
int3
sbb
lahf
or
sbb
lock
addr16
dec
sub
jb
call
mov
jp
dec
push
xchg
mov
sbb
jne
and
lods
mov
inc
addr16
arpl
stos
xor
aas
aas
addr16
jmp
mov
lret
and
sub
aas
xor
pushf
xor
iret
(bad)
add
push
test
sub
push
scas
dec
insl
sub
dec
lret
ret
sub
lret
clc
sub
xor
hlt
pop
sbb
jl
cmp
fisubrl
arpl
jle
sbb
adc
xchg
cmp
and
adc
cmc
addr16
cwtl
pushf
and
sbb
inc
jmp
mov
outsb
ret
das
frstor
sub
jae
sub
and
adc
dec
sub
rcrl
or
fisubrl
gs
icebp
jno
mov
(bad)
mov
push
cs
mov
mov
fsubrs
popa
cli
insl
lret
cmp
sbb
sahf
je
imul
fidivl
insb
dec
iret
dec
insl
adc
cld
es
push
movsl
dec
leave
mov
and
sub
loop
sub
loop
push
lea
xor
add
test
popa
cmp
pop
sub
cmp
push
push
sahf
jmp
sbb
pusha
sub
ja
ljmp
shlb
mov
ror
insl
sub
inc
mov
xchg
push
push
cltd
popa
sub
or
push
inc
push
popf
jns
jnp
arpl
jnp
mov
mov
(bad)
fwait

or
xchg
insb
sub
cmp
cltd
sbb
mov
sub
xchg
push
push
cltd
sub
xlat
cmp
mov
outsb
sub
xlat
clc
push
mov
mov
insl
cmp
outsb
push
aas
jle
xchg
(bad)
loop
push
into
sub
insb
int3
negb
outsb
clc
sub
notb
mov
(bad)
in
adc
adc
in
xchg
imul
repz
lahf
int3
outsb
cmp
cmpsl
sub
xchg
mov
loop
outsb
nop

call
in
push
sub
jp
sub
es
sbb
or
(bad)
sub
adc
jnp
and
(bad)
push
sub
add
cmpsb
or
and
xor
or
sub
mov
jecxz
lahf
sub
nop

icebp
xlat
xor
pop
cmpsb
add
loopne
inc
sti
inc
mov
clc
push
add
imul
mov
cmp
push
sub
jne
sub
call
xor
addr16
mov
sub
mov
clc
cmp
ss
mov
xor
mov
cmp
mov
mov
sub
and
out
cmc
icebp
js
or
mov
sub
popa
stos
ja
aas
aam
and
stos
mov
xchg
push
movsb
lahf
sub
daa
int3
and
cmp
mov
nop

mov
gs
cmp
sub
nop

in
cmp
lods
out
push
sub
sub
and
outsb
(bad)
call
sarb
loope
pop
sarl
stos
add
clc
mov
mov
sub
xor
movups
sub
sub
out
adc
pushf
and
sbb
push
mov
push
scas
sub
and
nop

mov
jnp
push
push
cmp
addr16
jp
and
rorl
jae
pop
mov
sub
in
sub
jmp
aam
sub
jnp
(bad)
jne
loop
sub
mov
mov
popa
and
lods
mov
jnp
sub
and
jns
dec
insl
and
sub
mov
nop

cmp
popa
lock
sub
movsb
lods
jb
addr16
push
test
jmp
sbbl
clc
insb
or
or
mov
aaa
cmp
mov
in
sub
imul
mov
jg
loop
push
inc
mov
or
sub
scas
xor
imul
xor
cld
imul
push
mov
cmp
cmp
mov
aas
cmp
popa
jns
sub
sub
or
sub
jl
jmp
aad
push
rclb
and
add
lods
sub
push
clc
push
sbb
popa
xor
rdpmc
lahf
mov
lods
sbb
dec
popa
and
sub
push
and
and
gs
cmp
sbb
dec
and
and
dec
sub
or
mov
imul
mov
mov
add
sub
stos
call
cmp
lret
sub
adc
ljmp
sub
mov
push
xchg
adc
pop
xchg
inc
out
add
cvtps2pi
push
xchg
add
sub
push
push
xchg
mov
or
sahf
jmp
mov
mov
mov
mov
cmp
push
add
and
cmp
mov
in
mov
sub
stos
jge
cmp
sub
push
stos
sub
insl
and
psubb
or
push
mov
cmp
pop
in
and
dec
imul
and
rorb
in
or
sbb
mov
lret
in
mov
sub
sub
int3
incb
lods
mov
push
rorl
push
test
insb
push
xor
sub
add
push
scas
lea
dec
inc
in
or
outsb
test
cs
aas
jl
dec
fwait

push
(bad)

xor
insl
mov
push
outsl
or
ss
push
in
sub
test
mov
and
stos
sbb
sub
sub
outsb
ja
seto
push
das
pop
out
sub
clc
xor
mov
sbb
cltd
jmp
insb
movsb
xor
lods
sub
xlat
(bad)
push
xchg
add
insl
and
jl
and
jmp
bound
mov
lods
sub
sbb
sub
clc
and
xor
cmp
adc
sbb
sbb
inc
decl
pop
aas
clc
sub
or
loop
and
pop
mov
jl
xor
insb
or
test
daa
lret
mov
cmp
dec
adc
add
sbb
sbb
adc
lret
add
lea
wrmsr
fwait

sub
inc
add
ss
jl
sub
sbb
and
jge
std
and
leave
ss
leave
xor
sub
xor
out
cmp
or
sub
clc
cmp
jp
push
sub
mov
jecxz
push
adc
jo
sub
test
jmp
lods
sub
sub
push
addr16
je
das
leave
sub
jmp
cmp
and
stos
push
sub
negb
or
xchg
push
xchg
add
jmp
imul
sub
sub
js
sub
outsb
sub
imul
sub
push
enter
and
ds
sub
and
lret
mov
jl
sub
aas
sub
lahf
cld
imul
or
mov
insl
and
and
sub
wbinvd
int3
xor
cltd
sbb
sub
xor
or
mov
push
cmp
add
push
sub
mov
push
(bad)
jge
mov
test
lods
sub
and
jle
in
sub
mov
push
flds
in
sub
popa
cmp
push
mov
sub
or
and
(bad)
outsb
test
xchg
push
inc
sbb
jnp
outsb
aas
mov
sub
cmp
push
lods
cli
sub
jle
sbb
cmp
dec
mov
pop
int3
mov
lea
lahf
imul
cmp
mov
adc
setb
push
shll
(bad)
mov
ffree
rol
insl
pop
insb
movl
cmp
incb
sub
int3
sub
pop
ss
and
outsb
out
out
adc
and
repz
add
cltd
outsb
sub
outsb
test
adc
mov
push
bound
pushf
outsb
subl
jge
sbb
or
stos
cld
mov
psubsb
clc
sub
xor
jle
jmp
jecxz
fldt
outsl
fildl
and
cmp
int3
int3
and
and
insl
sbb
int
cmp
insl
mov
int3
test
jo
cs
ja
or
movsb
int3
push
push
int
lods
sub
sub
das
insb
add
mov
insb
mov
xchg
add
mov
mov
scas
adc
ja
sbb
sub
stos
sbb
push
ds
lret
push
das
sbb
rdtsc
call
inc
and
sti
mov
cmp
dec
cmp
rcll
das
mull
xchg
add
sub
hlt
fstpl
sbb
sbb
sub
imul
add
mov
lahf
xchg
das
lret
call
adc
enter
jo
xlat
fs
mov
movsb
popa
sub
loope
xchg
mov
dec
sub
insl
stos
push
das
inc
std
push
cmp
scas
dec
and
sbb
subl
mov
push
sti
inc
enter
sub
add
mov
lcall
popf
sbb
mov
push
xchg
cmp
pop
xor
stos
cmp
insl
sub
xor
(bad)
cmpsl
add
ja
and
sub
push
lcall
pusha
imul
mov
xchg
ljmp
ss
scas
jle
pop
xchg
sub
nop

mov
sub
mov
(bad)
sti
sub
dec
and
and
mov
cmp
test
cmp
inc
or
ljmp
data16
sbb
push
std
or
sbb
fiaddl
or
jbe
outsb
stos
push
sbb
pop
sub
pop
sub
pop
sub
inc
stos
adc
lods
and
daa
cmp
sti
xor
push
jmp
push
sub
lock
int
cmpsb
or
es
sbb
cmpsl
cmp
add
lods
(bad)
sub
pop
cmp
push
xor
sub
(bad)
movsb
xchg
push
lahf
cmp
jmp
in
lahf
out
testl
fwait

pop
stos
lods
movsb
lahf
or
jle
jle
in
sub
xor
mov
aas
insl
(bad)
sarl
sbb
test
add
sub
mov
sub
lahf
xor
das
adc
cmovne
lret
adc
jne
std
je
cs
cs
inc
ud0
call
sub
mov
pop
insb
cmp
ds
xchg
lahf
cltd
adc
mov
sub
cmp
sub
cvtps2pi
xchg
sbb
jmp
stos
sub
add
push
add
pop
or
stos
mov
sub
cmp
pusha
or
movsl
or
push
lock
xchg
loop
and
mov
sub
and
adc
aas
popf
stos
ss
inc
jp
outsb
imul
movsl
push
cmp
sub
xchg
push
stc
cmc
int
daa
(bad)
mov
add
pop
scas
and
cmp
sub
mov
nop

mov
cmpsb
ljmp
push
mov
(bad)
mov
das
add
mov
sbb
add
sub
insl
jp
mov
jb
jmp
insb
mov
pavgw
fnsave
pop
out
mov
aam
sub
arpl
sbb
jg
in
roll
in
es
add
mov
ja
out
dec
cmp
popf
adc
movsb
dec
lea
xchg
nop

mov
xor
push
sbb
add
add
jecxz
push
or
(bad)
insl
push
fisubrl
jmp
sti
daa
mov
aas
pop
sub
ds
insb
sub
cmp
into
mov
adc
(bad)
cmp
sub
stc
sub
sub
cmp
ret
mov
sub
aas
mov
cmp
dec
sbb
aaa
imul
pop
sub
daa
jo
out
das
outsl
bound
call
loop
xor
cld
imul
mov
xchg
addr16
(bad)
movsl
fisubrl
pop
bound
jb
sub
cmp
push
cmp
nop

arpl
mov
sub
push
add
nop

add
jge
and
addr16
loop,pt
mov
cmp
int3
notb
nopl
out
sub
mov
or
mov
sub
lahf
cltd
add
shll
pxor
andl
push
cmp
sbb
cmp
sub
out
lahf
int3
std
test
int3
or
cmp
lea
xchg
insb
jge
xchg
xchg
add
inc
xchg
inc
int3
sub
add
cltd
mov
sbb
xchg
xor
jl
xor
sub
and
and
cltd
outsb
sbb
sub
push
sbb
sub
and
shrl
jo
cvtps2pi
add
jae
push
sub
mov
sub
push
adc
sub
push
movsb
cmp
pop
das
adc
sub
xor
sub
popa
xor
and
jp,pn
adc
jl
outsb
adc
mov
ljmp
scas
push
sub
sar
stos
adc
or
jecxz
insb
stos
dec
mov
scas
sbb
or
ucomiss
insb
adc
xchg
xor
inc
test
or
cltd
rcll
sub
and
or
push
dec
inc
sub
sub
in
or
out
sub
cmp
mov
lret
sub
or
sub
sub
and
adc
or
das
mov
les
imul
add
lods
push
cmp
or
imul
xlat
loopne
cmp
loopne
push
dec
xchg
sbb
lods
punpckhbw
push
mov
lods
and
stos
or
mov
push
mov
in
push
push
lea
arpl
and
das
das
loop
lea
pslld
in
sub
add
in
cmp
stos
add
cmp
loop
push
test
adc
xor
movsl
ljmp
movsb
aas
iret
stos
xor
imul
lods
sub
pop
push
hlt
movsl
sub
mov
add
xchg
inc
lahf
xchg
sahf
jle
lahf
sub
sub
lods
cltd
sbb
(bad)
push
(bad)
ljmp
sub
mov
std
jmp
sub
jne
xlat
xchg
mov
push
in
wbinvd
push
jnp
or
push
jnp
sub
jne
nop

lret
pop
insl
sub
aas
jmp
and
xor
shrl
sub
push
sub
stos
cmp
popf
stos
cmp
lods
cmp
sub
(bad)
mov
js
rcll
lods
sub
push
mov
ds
cmp
sub
imul
push
adc
or
jle
js
cltd
and
outsb
cmp
stos
or
js
sbbl
pop
sub
jns
and
push
and
int3
push
mov
outsb
cmp
push
popa
push
cmp
insl
sub
into
sbb
adcl
and
jg
outsb
cmp
xor
int
in
aas
mov
lret
dec
adc
sub
repz
push
insl
in
daa
sub
push
cmp
clc
or
outsb
and
sub
pop
xlat
(bad)
insb
cmp
push
in
aaa
add
mulb
stos
mov
cld
mov
stos
cmc
or
push
imul
in
lret
and
cmp
iret
sub
or
mov
mul
sub
mov
sbb
sub
stos
or
comiss
lods
mov
push
jp
and
xor
and
dec
sti
inc
stc
mov
push
test
imul
mov
jmp
mov
sarb
sbb
nop

mov
or
outsb
dec
mov
pop
push
cmp
dec
push
add
insl
dec
add
dec
arpl
test
push
insb
dec
push
or
cs
sub
pop
fs
fsubl
or
rsqrtps
and
enter
loop
push
cmp
cmp
test
adc
aas
lret
sub
das
sub
xchg
clc
cmp
cmp
mov
sub
int3
imul
cmp
xchg
dec
test
cmp
and
sub
hlt
or
cmp
jmp
cwtl
outsl
mov
lods
mov
(bad)
das
inc
int
xchg
push
adc
insb
sbb
sarb
or
sti
in
jle
pop
pop
dec
mov
repnz
adc
incb
aas
or
call
cmp
lcall
outsl
decl
cmpsl
cmp
outsb
or
lret
lret
popa
imul
push
das
and
rcll
ljmp
mov
addr16
sub
mov
cmp
fsts
sbb
stc
lret
aaa
aas
sbb
lods
xor
aaa
outsb
in
pop
xor
mov
cs
lret
cmpsb
outsl
push
aas
cmp
sub
lret
sub
popl
push
fstpl
nop
int3
outsb
adc
sub
adcl
push
xor
or
imul
subl
in
sub
mov
loop
add
imul
jbe
mov
mov
insl
and
pop
bound
jl
and
int3
or
(bad)
out
xor
sub
das
jmp
mov
lods
cld
icebp
add
in
inc
das
cs
lcall
cltd
lahf
xchg
stos
cltd
int3
sbb
rclb
cs
or
xor
dec
ds
ljmp
cmp
dec
das
dec
(bad)
repz
mov
mov
inc
push
inc
push
sub
jge
ja
in
pop
cmp
and
dec
js
jl
in
push
jns
pop
jge
je
lods
dec
push
(bad)
mov
lods
sub
sub
or
cmp
xchg
mov
dec
or
insb
imul
sub
fwait

and
and
sub
mov
adcl
push
push
cmpsl
mov
dec
outsb
jnp
sub
outsb
movsb
add
push
fdivrs
or
outsb
es
add
xor
sbb
addr16
int3
ss
sbb
push
mov
push
outsb
lret
xor
cmp
mov
push
and
rcll
das
mov
std
(bad)
lcall
sub
mov
cmp
xchg
pop
mov
sbb
dec
sub
adc
cmp
add
loop
scas
push
arpl
xor
jg
cmp
push
loop
adc
icebp
stos
mov
push
cmc
imul
(bad)
push
aam
cmp
fists
test
in
fimull
int3
push
loop
jb
jnp
or
sub
sbb
outsb
js
arpl
xchg
inc
mov
ss
push
cmp
push
jge
push
cltd
sbb
adc
int3
mov
or
cmp
push
rclb
popa
xlat
loop
push
jp
and
(bad)
push
lock
mov
or
clc
scas
sub
bound
sarl
push
jp
test
ljmp
cmp
push
lahf
bnd
iret
push
cmpsl
mov
lret
ljmp
push
sub
cmpsl
push
push
in
xchg
push
in
sbb
push
adc
mov
add
sub
push
jl
xor
cs
push
pop
cltd
sub
jl
out
and
int3
and
mov
push
or
and
jg
jo
sub
movsb
clc
pop
imulb
arpl
das
cli
xor
outsl
aaa
insb
push
in
or
sbb
xchg
push
jge
in
push
mov
push
push
outsl
dec
scas
orb
sbb
push
push
jns
sbb
ret
das
mov
sbb
sub
das
mov
xor
popf
jle
xor
sub
pop
ljmp
cmp
lods
cmp
jb,pn
jmp
lods
out
add
push
mov
stc
aas
or
outsl
sub
or
iret
sub
mov
cmp
add
aas
sub
iret
inc
iret
jge
lret
out
or
cmp
cld
dec
push
in
js
popl
rorb
outsb
test
insl
cmp
ret
out
imul
popf
or
and
mov
lahf
sub
sub
mov
pushf
push
inc
xlat
loopne
stos
das
pop
mov
aas
adc
cmp
sub
repz
dec
mov
stos
int
lea
push
insl
mov
icebp
mov
pop
or
xchg
push
das
mov
mov
test
sub
cmp
pop
cld
sub
sub
pop
cld
lret
das
push
sub
mov
fldl
sub
sub
call
dec
imul
adc
xor
fsubrs
dec
sbb
sarb
and
push
pop
cs
and
les
xor
insl
or
dec
subb
(bad)

push
mov
sbb
lret
ret
movsl
cmp
mov
inc
sub
inc
inc
fildll
scas
das
xor
lods
das
push
adc
sub
or
or
sbb
cmp
jns
push
pushf
ret
and
mov
cwtl
mov
or
test
dec
lods
cs
wbinvd
mov
jecxz
lods
int3
or
mov
lods
sub
pop
fs
adc
ds
(bad)
push
pop
sbb
inc
sbb
cmp
outsb
es
add
adc
fcoml
popf
(bad)
in
mov
js
sub
adc
adc
sub
sbb
sub
lahf
cmp
cltd
fcmovu
idivb
movd
sub
sub
or
lock
aas
out
test
sub
and
enter
cmp
cwtl
jns
jne
sub
sbb
sub
jg
aas
in
jge
push
clc
dec
daa
std
push
rcrl
cld
pop
jg
dec
jmp
sti
and
lretw
bound
aas
jmp
or
out
and
push
int3
(bad)
aas
cltd
mov
push
in
sub
cmp
nop

addr16
cltd
outsb
and
lahf
cltd
sub
push
es
or
lock
sub
jmp
lahf
push
sub
jmp
pop
outsb
clc
cmp
push
outsb
(bad)
sub
inc
clc
cld
pop
call
sub
xchg
push
or
(bad)
push
das
mov
out
mov
cltd
lahf
cmp
mov
push
cmovp
std
cmp
out
and
int3
mov
outsb
jmp
push
mov
sub
mov
push
into
mov
outsb
adc
jo
mov
pop
outsb
sub
loop
xor
or
sub
sub
sub
push
sbb
sub
sub
sub
outsb
test
cs
(bad)
push
sub
push
fsubl
and
sub
adc
xor
and
subb
lock
fisubrs
and
pop
aas
xchg
arpl
push
dec
stos
push
cs
pop
sub
or
and
xchg
sub
push
cmp
and
and
and
push
daa
push
and
and
sub
mov
mov
sub
sub
sub
or
push
incb
lods
and
mov
push
cmp
sub
scas
lods
and
or
das
rcll
sub
and
inc
cmpl
and
and
and
cs
adc
or
sub
or
and
aas
sbb
cltd
and
ss
stos
cmpsl
lahf
int3
lahf
or
sbb
std
and
call
jb
int3
or
outsb
std
mov
test
cmp
mov
sub
and
jno
adc
inc
push
push
ret
adcl
xor
ret
and
pop
mov
add
and
outsb
imul
push
mov
sub
test
cs
cmp
push
clc
push
mov
and
insb
and
mov
mov
inc
xor
pop
int3
incb
mov
sbb
sub
or
in
js
jae
test
or
xor
repnz
push
cmpsb
(bad)
lret
int3
sbb
or
mov
sub
outsl
xchg
scas
jle
std
ret
or
cmp
adc
ljmp
xrelease
jp
adc
testl
lret
cmc
stos
ds
sub
pop
jns
jmp
sbb
in
push
push
js
or
push
imul
or
outsl
or
push
loope
das
gs
int3
int3
fs
es
mov
jmp
lret
mov
mov
sub
mov
add
mov
mov
mov
jmp
stos
lods
cmp
xor
insb
cmp
jmp
add
mov
mov
in
cmp
push
in
cmp
push
sub
outsb
add
push
pop
push
aaa
lret
and
push
cmc
int
outsl
outsb
add
add
ss
adc
or
stc
or
sub
sub
sbb
adc
cmp
int3
ss
fs
sub
leave
imul
sarl
push
pop
nop

(bad)
sub
mov
data16
cmp
or
and
imul
cmp
daa
push
push
sub
add
pop
gs
cmp
dec
es
sub
cmp
pop
sub
mov
mov
and
scas
ror
aaa
or
dec
pop
and
sub
push
sub
les
sub
(bad)
mull
sub
pop
lea
mov
mov
cmp
es
lods
and
out
and
xor
or
mov
xchg
sub
js
or
and
int3
cmp
sbb
movb
or
or
dec
xor
lods
lea
insl
add
lahf
cltd
notl
lods
cmp
aas
in
bsf
nopl
cs
lods
and
cmc
mov
lock
pop
ds
lret
mov
sub
adc
inc
add
lahf
daa
and
mov
insb
add
sub
out
inc
pop
push
sub
das
push
jl
dec
and
mov
cwtl
sub
push
(bad)
jmp
xchg
xchg
enter
lret
and
and
adc
sub
lea
insb
pop
icebp
call
and
xchg
in
mov
cmp
and
sub
cmp
dec
sub
outsb
bound
jo
outsl
cmp
or
or
sub
out
sub
insl
es
sub
jbe
xlat
xchg
sub
mov
xlat
lret
mov
sti
cltd
aas
mov
jmp
jmp
adc
adc
mov
inc
int3
sub
xchg
xor
sub
cmp
dec
sbb
xlat
(bad)
adc
repnz
xlat
incb
mov
and
or
movsb
nopl
dec
adc
aas
xchg
imul
shrl
jbe
call
inc
pop
sub
test
insl
jl
ljmp
sub
dec
sub
xor
out
add
gs
outsl
jnp
sub
in
sub
mov
xchg
xchg
aas
xchg
sbb
cs
xchg
sbb
sub
and
sub
xor
dec
pop
add
imul
xor
push
or
xlat
or
imul
popa
push
das
or
push
pavgw
mov
imul
wrmsr
rdtsc
pop
inc
imul
das
test
pop
nop

add
lods
and
daa
sbb
sub
pop
push
mov
cmp
sbb
pop
cmp
gs
fwait

sub
insl
or
sub
repz
mov
mov
sti
or
push
sub
jl
cmc
sub
cmp
shr
ljmp
js
je
sub
xor
aas
mov
ds
mov
sub
arpl
jno
push
push
insl
pop
daa
xor
push
rcrb
les
sub
pop
or
insl
fmull
dec
test
scas
push
push
xor
add
sub
or
sbb
cmp
stc
jae
das
sub
xor
loope
fldt
mov
jge
mov
sub
sbb
push
int3
push
mov
lret
(bad)
ds
sub
sub
cmpsl
lea
and
(bad)
sahf
inc
cmp
das
or
lret
sbb
cs
insl
push
movsb
ss
jle
push
jp
outsb
bound
pop
(bad)
mov
sbb
or
lahf
mov
mov
mov
pop
and
sub
xchg
stc
mov
or
ss
jge
add
cld
or
clc
push
movsl
dec
sub
mov
xor
adc
in
das
push
cltd
add
adc
(bad)
(bad)
push
sub
das
call
mov
outsb
sbbl
or
enter
fsubrs
loop
stos
push
push
int3
lret
sub
sub
aam
loop
sub
dec
dec
(bad)
outsb
mov
aas
xchg
fwait

or
imul
cmp
sbb
jle
mov
sub
sub
sub
push
cmp
std
and
push
imul
out
sub
test
add
daa
adc
jl
adc
daa
cmp
jbe
aas
sti
inc
xchg
sub
test
mov
mov
stos
xor
js
clc
sbb
sbb
mov
sbb
sub
jle
xor
lret
jg
lock
or
cmp
cs
aas
sub
sub
ds
cmp
push
xchg
pop
xor
adc
imul
or
xchg
mov
sarb
and
imul
dec
mov
out
outsb
push
outsb
in
sub
dec
in
mov
sarl
or
cmp
add
cld
sub
(bad)
mov
add
insl
and
pop
push
jns
sti
cmp
cmp
movsb
or
decb
cltd
lea
pop
push
mov
stos
mov
das
lods
mov
clc
mov
dec
sub
sub
pop
push
pop
scas
lods
das
adc
and
cmpsb
push
jg
dec
jg
dec
cmp
sbb
cmp
sub
mov
sbb
nop

mov
lods
das
pop
mov
das
sub
rsqrtps
wbinvd
cli
sub
xchg
or
repz
sub
sub
sub
repz
push
pop
mov
jp
mov
aas
rcrb
scas
xchg
pop
sbb
aas
cmp
or
sub
pop
or
sub
sbb
sub
hlt
mov
cs
mov
pop
cmp
loope
or
push
inc
push
jmp
xor
pop
ud1
mov
sub
(bad)
insl
pop
sub
or
fnstsw
push
or
jg
sub
dec
sbb
inc
inc
xchg
add
cmp
aas
into
jmp
insl
(bad)
out
push
sbb
pusha
(bad)
cmp
xor
in
jmp
sbb
frstor
mov
sarl
ds
dec
xor
and
dec
(bad)
sub
fnstenv
mov
cmp
add
adc
nop

mov
sub
mov
mov
mov
jl
fwait

pop
insb
dec
fnstsw
das
push
mov
movsb
lahf
and
jnp
mov
movsb
fwait

sub
rorb
call
and
jae
arpl
ja
pop
scas
sbb
and
clc
dec
outsb
cmp
sti
lods
call
movsb
or
pop
out
mov
or
sbb
mov
sub
(bad)
lret
sub
and
and
and
xor
sub
sub
sub
sub
sub
cltd
das
cltd
aam
sub
jle
sub
sbb
sbb
cs
lahf
sbb
sub
sbb
sbb
loope
sub
sbb
sbb
sbb
pop
sub
lahf
std
sbb
jle
sub
sub
sub
xlat
mov
cltd
sub
sbb
sub
dec
js
xor
sub
jle
daa
repz
subl
sub
mov
sub
mov
js
sub
sub
sub
sub
sub
pop
cmp
sub
sub
mov
sub
push
sub
and
sub
ret
push
cmp
xor
cmp
sub
lahf
int3
sub
js,pn
mov
fildll
sub
sub
jp
sub
sub
or
cs
sub
sub
(bad)
sub
inc
sub
sub
lahf
sbb
jge
cltd
lahf
cld
stos
sub
lods
sub
stos
sub
lods
sub
(bad)
stos
cmp
cmc
stos
sub
lods
sub
stos
jo
lods
sub
stos
sub
lods
sub
stos
sub
mov
push
inc
setns
sub
pushf
or
lahf
(bad)
jle
sub
sub
stos
sub
lods
sub
stos
sub
lods
sub
lods
sub
sub
lods
sub
stos
sub
lods
sub
adc
lahf
jns
mov
popa
stos
sub
js
sub
lods
mov
mov
sub
stos
sub
sub
stos
sub
sub
lods
sub
jle
sub
stos
sub
lods
cs
cs
js
cs
lods
sub
jmp
xlat
in
sub
jmp
sub
or
sub
sub
jmp
pop
in
sub
jmp
cs
cwtl
sub
sub
fs
int3
sbb
imul
cltd
loop
es
mov
repz
xor
lahf
and
sub
lahf
inc
jp
das
and
insl
or
jmp
mov
das
cltd
stc
insl
sub
lahf
sub
out
sub
imul
cltd
add
lahf
test
and
lahf
pushf
push
sub
lahf
push
lahf
scas
imul
jns
ret
in
aas
loope
sub
inc
jns
xor
aaa
in
push
fsubrs
insb
sub
cmp
insl
daa
repz
mov
outsl
sub
jmp
cmc
out
add
lahf
dec
pop
cltd
aas
insl
sub
push
xor
jmp
push
outsl
cmp
cmp
add
ss
jns
lahf
adc
popf
push
imul
or
jg
outsb
xor
(bad)
fidivl
mov
cmp
dec
cmp
mov
xor
xor
mov
sahf
jmp
into
das
jge
imul
mov
jmp
sub
stc
ss
sahf
lret
sub
arpl
lahf
insl
and
aaa
and
sub
xor
sub
mov
lahf
jmp
test
out
cmpsb
aaa
sub
inc
mov
mov
xor
fdivl
jmp
sub
xor
jge
imul
push
xor
imul
ss
(bad)
aas
in
mov
sub
icebp
insl
sub
lahf
mov
repz
xor
sub
leave
cmp
and
lret
sub
imul
cmpsb
cmpsl
sbb
sub
(bad)
push
iret
sub
mov
add
and
out
xor
sub
push
jge
push
ss
sub
inc
sub
in
jmp
out
cltd
add
cmpsb
ficoml
cltd
lahf
push
cmp
icebp
call
dec
das
out
sub
sub
das
cs
sub
scas
push
sub
mov
(bad)
sub
cwtl
xor
stos
dec
jmp
mov
lret
sub
jecxz
jp
jl
into
sbb
mov
add
and
mov
xor
in
rcl
dec
sub
cltd
loope
mov
inc
mov
inc
xor
aas
lods
sbb
sub
mov
scas
sub
adc
mov
cltd
aas
and
dec
insb
aaa
xor
and
pop
fdivl
adc
lods
insl
dec
aas
cmpsb
ss
dec
xor
dec
sbb
je
clc
dec
sub
or
dec
dec
push
jns
or
dec
jne
lret
jbe
dec
jge
es
sbb
scas
and
mov
int3
mov
int3
push
out
xor
call
sub
mov
sub
lahf
jl
inc
aaa
or
inc
(bad)

and
js
sub
lea
adc
mov
mov
or
dec
cmp
jnp
sub
cltd
imul
dec
sub
push
lahf
xor
cmp
movsl
xor
dec
sub
push
jmp
xchg
jp
icebp
xor
mov
push
out
jp
xor
lods
sub
ret
cmp
dec
bound
pop
sub
push
push
xor
jge
xor
mov
add
insl
adc
xor
and
out
divl
sub
stc
jnp
repz
lret
xor
stc
int3
add
mov
push
sub
adc
scas
sub
mov
gs
clc
mov
jmp
and
xchg
(bad)
sbb
push
jle
push
movsb
sub
and
sbb
add
fsubrl
sahf
and
push
sahf
fwait

adc
sbb
sub
stos
ljmp
xor
mov
fstpt
and
(bad)
test
cli
mov
lcall
scas
add
push
jo
sub
adc
push
sub
aam
sbb
es
dec
fldcw
cmp
iret
or
add
mov
jbe
std
lock
sub
xchg
outsb
rclb
jns
mov
fs
mov
imul
ret
jle
sbb
push
xor
sub
dec
ljmp
inc
lahf
xor
rcrl
into
hlt
movsb
pop
mov
sub
(bad)
aaa
or
(bad)
sub
pushf
jns
and
xor
sub
cmp
dec
fwait

or
divl
bound
imul
push
lahf
int3
jle
sub
sbb
lret
sub
stc
loop
leave
add
sub
and
repz
push
sub
ds
cmc
push
stc
sahf
xor
xor
jl
cli
add
mov
jnp
fildl
sahf
das
dec
insl
aaa
mov
mov
das
(bad)
stc
pop
movhps
or
push
lea
and
outsb
add
sub
xor
imul
das
cltd
dec
mov
or
aas
jl
fsubrl
nop

or
xor
jmp
cmp
push
mov
daa
out
mov
and
sub
mov
mov
mov
and
jecxz
dec
pop
push
cltd
imul
pop
sub
(bad)
in
sub
xor
pop
sbb
or
add
add
call
and
sub
sub
sub
push
add
loop
test
sub
xor
push
fcoml
dec
sub
jb
out
sahf
aaa
pop
sub
and
jnp
pop
push
mov
mov
repz
fldt
lahf
call
sub
es
cmp
(bad)
sbb
sbb
mov
and
pop
aas
(bad)
cmpsb
mov
mov
sahf
fnstenv
das
mov
mov
mov
adc
and
(bad)
jge
lahf
(bad)
mov
inc
cltd
mov
fistl
aas
pop
sub
mov
sbb
jnp
sub
rcrb
mov
daa
or
daa
dec
inc
outsl
sub
inc
jge
or
or
lahf
xor
jne
push
xor
jns
push
pop
sbb
jle
push
xor
push
sbb
pushf
pusha
xor
sbb
mov
insb
sbb
das
jmp
int3
cwtl
mov
or
(bad)
std
popa
inc
repz
nop

jnp
sbb
cmpsb
add
das
jl
push
sub
and
sub
cltd
jno
sbb
popf
sub
jnp
lahf
cld
jnp
ficompl
sbb
popa
inc
or
sub
fisubl
mov
and
das
sbb
lds
and
jg
punpcklbw
cmp
cmp
xor
inc
sbb
mov
mov
sub
mov
xor
das
pop
mov
sub
fisubrl
pop
cmp
in
sub
sub
pop
mov
mov
inc
(bad)
fbld
ss
sub
sub
fnsave
cld
mov
das
shlb
cmp
sbb
clc
cs
das
sub
or
mov
std
dec
clc
push
sub
xchg
ret
aam
sbb
mov
pushf
jb,pn
jb
das
cli
push
fadds
sub
jp
cmp
push
fistpll
push
sbb
pop
cli
add
and
aas
sbbb
sub
sub
repz
sub
pushf
push
jle
jl
in
sub
das
mov
pop
adc
sub
mov
cltd
sub
push
or
sub
pop
sub
sbb
cmp
jge
or
lahf
jl
fcoml
sbb
xchg
sub
xchg
xor
sub
sub
mov
mov
xor
xor
cmp
sbb
sub
sub
xor
xor
xchg
sub
mov
mov
lahf
cmpsb
sub
and
loop
lahf
jmp
lahf
mov
sub
xor
ds
mov
inc
sub
sub
cwtl
sub
sti
cltd
push
cltd
jp
xor
and
es
mov
cmp
aaa
cltd
jno
sub
xor
pusha
cs
cltd
sub
loop
sub
fisubrl
or
sub
or
and
mov
daa
mov
bound
jl
sub
sub
xor
add
stos
and
push
(bad)
stos
daa
test
stos
cmp
and
mov
xor
jmp
push
xor
cltd
sub
xor
sub
dec
cltd
lahf
aas
sub
mov
jmp
xor
mov
sub
aas
push
insl
cmc
mov
ss
stos
ds
in
cmc
mov
imul
xor
cwtl
scas
cmp
and
es
lret
push
push
mov
inc
cmp
xor
scas
sub
scas
insb
mov
nop

mov
call
stos
cli
repnz
mov
dec
mov
test
lods
cmp
stos
pop
adcl
stos
xor
lods
and
stos
mov
stos
pop
aaa
lods
daa
adc
cmp
cmc
insl
sub
imul
cs
xor
and
sub
cltd
jmp
out
xor
sub
ljmp
cltd
sbbl
out
sub
in
sub
imul
outsb
push
out
sub
insl
sub
sub
push
insl
sub
jmp
ja
sub
sub
xchg
in
sub
in
cmp
add
in
and
cltd
sub
sub
cmpsl
sub
adc
movsb
mov
imul
outsl
push
in
sbb
sub
outsl
or
cmp
and
sub
outsl
xor
insl
sub
imul
push
sbb
add
popa
add
sub
clc
jmp
(bad)
loopne
and
cmp
and
imul
std
cmp
adc
xorb
aas
and
aas
insb
and
xor
jmp
mov
out
adc
in
add
push
cmpsb
aaa
lods
dec
ljmp
adc
ss
outsb
sub
jge
xor
push
sub
jmp
xchg
out
dec
jecxz
xchg
and
and
test
dec
test
sub
mov
clc
sub
dec
arpl
sub
repz
int3
dec
push
outsl
jnp
mov
jmp
and
push
ss
xor
mov
xor
ss
and
sub
jmp
sub
and
jmp
sub
sub
lahf
dec
clc
cltd
mov
scas
pusha
and
jbe
jnp
repz
and
insl
or
sub
jnp
and
call
jge
mov
sub
or
xor
test
lret
or
adc
pop
enter
iret
push
lea
cltd
xchg
cltd
jl
sub
iret
sub
sbb
sub
or
das
add
and
das
scas
lea
sub
mov
rorb
lea
mov
stc
lea
dec
sub
mov
sub
cmp
cmp
cmp
aas
cltd
or
jmp
and
cmc
xor
test
mov
mov
jl
pop
adc
dec
or
sahf
jl
push
sbb
fwait

inc
sub
xchg
inc
cs
and
mov
xrelease
and
loopne
sub
cmp
cwtl
cltd
sub
sub
xor
clc
push
mov
lods
adc
push
xor
loopne
push
subl
mov
in
mov
jmp
cmp
dec
scas
fimuls
or
dec
mov
pusha
add
cmc
dec
das
lcall
sub
cltd
lahf
mov
and
lahf
cltd
sarb
int
inc
sub
dec
das
dec
jb
sub
or
das
pop
lds
scas
shrd
int
dec
push
das
push
lahf
mov
or
dec
and
sub
dec
and
pusha
or
cltd
insb
inc
sub
mov
js
inc
sub
sbb
sbb
lahf
lea
cltd
aam
sub
sbb
sbb
in
sub
sbb
sub
pop
sub
sbb
sbb
loope
sub
sbb
push
sbb
sub
xlat
test
sbb
mov
sub
sbb
cltd
sbb
push
sbb
mov
cmpsb
sbb
cmpsb
sbb
cmc
sbb
sub
sub
sbb
mov
sub
mov
sub
sbb
adc
sub
or
pop
sbb
jnp
mov
or
lcall
xchg
sbb
insb
sbb
xor
and
sbb
mov
sbb
mov
sub
mov
sub
sbb
cli
sbb
push
sub
sbb
fldt
inc
sbb
sub
sub
sub
xchg
sbb
dec
sbb
xchg
mov
sub
jle
sub
sbb
push
popf
and
pop
sub
sbb
sbb
sahf
cltd
das
inc
(bad)
sbb
sub
sub
sbb
and
sbb
sub
cmp
xchg
sbb
sub
sub
lret
or
mov
sub
sbb
mov
sub
sbb
dec
outsb
js
sbb
fwait

sbb
xor
sub
sbb
pop
sub
pop
pop
sub
pop
sub
sbb
dec
popf
add
sbb
sub
sbb
sbb
popf
sbb
cltd
and
sub
mov
jge
mov
fcomps
nop

sbb
lahf
lahf
sub
jns
lret
xor
sub
loop
and
sub
mov
(bad)
mov
jmp
jmp
sub
insb
cvtpi2ps
sub
dec
imul
out
in
sub
repz
cwtl
sub
cltd
or
sub
cli
sub
jge
sub
and
fidivl
sub
mov
(bad)
sub
sub
repz
inc
lods
mov
xrelease
int3
cmpsb
add
mov
mov
mov
sub
sub
fsubr
and
nop

lahf
in
sub
add
cmp
fcomps
pop
lahf
stos
(bad)
pop
sub
add
or
repnz
lret
sub
repz
mov
rcrb
sub
sbb
imul
insb
jge
sub
lahf
stos
fs
mov
loop
xchg
(bad)
jl
sub
imulb
cmc
xor
mov
push
xor
mov
js
aad
sub
push
cltd
lahf
scas
dec
sbb
pop
cmc
push
and
imul
mov
sub
cmp
and
stc
cmp
cmp
xor
frstor
test
cvttps2pi
pushf
mov
xor
sbb
xchg
jnp
sbb
decb
sub
fistpl
xor
jmp
insb
jnp
fnsave
jmp
pop
mov
adc
loopne
mov
sub
fsubrs
dec
jg
ja
mov
mov
xor
inc
int
and
insl
aaa
and
nop

xor
loop
out
sub
jp
or
sub
repz
xor
inc
pop
clc
das
scas
in
add
sub
das
lahf
jmp
push
cmp
xor
dec
dec
mov
sub
sub
sub
inc
in
sbb
push
mov
cmp
mov
add
lahf
pop
pop
sub
xor
push
sahf
add
loop
mov
cli
and
jl
cltd
hlt
ds
bound
sbb
cli
sub
insl
mov
push
ds
or
xor
movaps
loop
sub
pop
mov
lahf
call
jmp
lahf
arpl
fmull
cltd
inc
fisubrs
(bad)
sub
int3
push
or
cmc
popf
and
pop
sub
fcoms
or
stos
cs
and
sub
or
sahf
jae
add
adc
daa
cmc
cltd
fwait

ds
cmc
and
sbb
or
test
stos
(bad)
xor
push
aaa
and
fstpl
into
adc
sti
ds
cmc
clc
or
adc
outsl
out
mov
repz
push
hlt
pop
adc
mov
adc
subl
loopne
(bad)
test
das
xor
and
add
sub
mov
lods
add
mov
or
cltd
jns
aas
sub
push
out
push
jge
clc
cmp
ds
sub
jmp
mov
daa
repz
and
mov
jnp
nop

mov
or
push
sbb
repz
lahf
sub
push
aaa
xor
mov
ss
repz
cltd
iret
sub
mov
rep
xor
lahf
shrb
mov
and
fs
mov
or
mov
cmc
and
fidivl
sub
(bad)
cwtl
mov
cltd
lahf
cmp
push
mov
imul
cltd
mov
and
sub
out
or
mov
in
xor
sub
(bad)
mov
jmp
adc
push
push
or
inc
and
in
and
sub
mov
mov
lahf
jns
cmp
pop
sub
sub
or
xor
and
repz
xor
sub
mulb
jmp
cmp
das
add
sub
cwtl
cltd
lahf
paddb
stos
xor
push
and
xor
daa
lods
scas
push
xor
mov
int3
sub
lahf
mov
xor
lahf
or
cmc
mov
repz
ljmp
push
lods
xchg
sub
or
push
stos
in
imul
jnp
push
mulb
cmpb
adc
cmp
mov
push
(bad)
imul
and
cmp
test
push
xor
xchg
cltd
xchg
test
in
adc
push
sub
mov
xor
cwtl
fsubr
jge
xrelease
ss
cs
and
jge
mov
jge
stos
aaa
(bad)
jl
cltd
sbb
push
mov
lret
lahf
sub
mov
jmp
xor
sub
xor
add
xor
in
cs
cltd
ret
mov
and
push
dec
push
push
insb
sub
sub
daa
xor
xor
sub
push
xlat
dec
loop
cmc
sub
adc
ss
xor
jge
or
loop
outsl
pop
jmp
in
or
jmp
mov
in
mov
call
push
dec
xor
mov
adc
or
das
cmp
push
add
xor
cmp
lods
cmp
lahf
shr
mov
insl
dec
out
sbb
lods
outsl
xor
cmpsb
cmp
jnp
inc
jns
imul
aaa
jae
and
aas
mov
pop
clc
insl
dec
add
xor
aaa
sub
xor
jge
and
(bad)
fcomps
mov
mov
xor
sub
stos
inc
lahf
pop
imul
jmp
insl
or
daa
cltd
xchg
(bad)

cltd
lahf
mov
jmp
push
lea
dec
sub
aas
sub
int
jb
cmc
push
jnp
sub
sub
mov
aas
or
or
in
adc
bound
mov
dec
(bad)
xor
mov
sub
jge
into
sub
mov
test
cs
jl
dec
das
sahf
mov
lahf
xchg
mov
das
xchg
iret
stos
mov
aaa
dec
es
lea
iret
cmp
mov
sub
lock
sub
int
push
mov
cs
cmp
xor
clc
push
mov
adc
adc
mov
das
test
xor
aaa
cmp
jmp
inc
and
xor
add
or
test
sub
xor
rep
push
out
and
sub
pop
lahf
mov
out
sahf
dec
sub
pop
dec
inc
xor
cltd
dec
popa
or
mov
cwtl
cmp
xor
or
or
test
mov
push
inc
mov
push
dec
push
mov
lahf
sbb
dec
pop
push
bswap
cs
adc
int3
sub
xor
cltd
in
sbb
lret
lret
and
scas
lods
xor
(bad)
test
mov
clc
jp
sub
dec
or
cltd
adc
push
xor
add
fs
aad
in
xor
xor
xor
xor
sub
sub
sub
sub
cltd
lret
dec
sub
sub
dec
sub
cli
dec
sub
dec
sub
xor
aam
sub
sub
sub
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
xchg
and
and
and
and
and
sub
mov
lahf
push
jnp
jmp
lahf
jle
jge
sub
sub
sbb
js
pop
sub
pop
sub
jle
sub
pop
sub
pop
sub
push
sub
mov
cltd
push
push
sub
mov
int3
push
sub
sub
push
sub
sub
push
sub
xchg
push
sub
sub
sub
sub
nop

mov
sub
xor
fsubrl
out
out
pop
sub
addr16
sbb
(bad)
lahf
int3
aam
sub
mov
sub
cs
bound
cltd
cmp
sub
sub
sub
rep
lahf
cmp
das
imul
cmp
sub
lahf
test
sbb
(bad)
lret
outsb
pop
sub
sbb
imul
sbb
sbb
sub
sahf
inc
pop
pusha
or
jb
insl
mov
jb
xor
pusha
idivl
sub
sbbb
lods
jecxz
inc
(bad)

cmpsl
sub
aad
shrl
xor
xchg
addb
es
cs
sub
inc
jns
mov
pusha
mov
mov
xor
lcall
sub
adc
jge
sub
xchg
or
jne
hlt
mov
push
(bad)
mov
arpl
jb
sbb
arpl
mov
adc
jb
sub
adc
lods
ljmp
test
pusha
mov
pop
jnp
sub
test
call
mov
push
subb
adc
cmp
movsl
add
nop

(bad)
sbb
sub
mov
je
sub
sbb
sbb
mov
es
pop
and
fldlg2
sub
cmp
cli
cwtl
out
sub
jb
sub
aad
xorl
sub
cmp
stos
add
(bad)

iret
sbb
mov
push
jmp
pop
sub
cmp
add
and
xchg
pop
cmp
loop
mov
imul
cld
rorl
pop
xor
fnstsw
mov
push
sub
sbb
sub
inc
or
repnz
loope
fdivrs
or
test
cmp
jecxz
jb
ret
sub
mov
jg
sub
out
addb
mov
pushf
push
cmc
call
sub
add
lahf
sub
xchg
and
data16
enter
sub
mov
popf
cmp
jb
fisttpll
dec
sbb
sub
lods
jb
pop
adc
lahf
sub
cmp
sub
daa
es
jg
push
shrl
pop
fildll
xchg
xor
add
fdivs
xor
xor
mov
mov
sub
jmp
jg
cmp
sub
nop

test
je
xor
dec
dec
sbb
fldl
mov
je
movsl
sbb
push
or
mov
sub
dec
lret
das
or
mov
fs
cmp
pop
push
dec
sub
test
push
out
pop
cmp
sub
mov
fcompl
daa
sub
stos
lods
sub
sbb
and
jno
int
adc
add
dec
cmp
and
cmp
mov
les
cwtl
(bad)
lock
mov
fstl
sub
xor
mov
or
inc
push
jle
lret
imul
sub
inc
cmp
sub
sbb
pop
cmc
mov
sub
out
mov
sub
xchg
in
icebp
sub
xchg
ja
inc
sub
lock
jbe
sub
and
or
sub
mov
mov
or
imul
sub
sbb
outsb
lahf
jnp
repnz
mov
inc
inc
sbb
sub
clc
shrl
(bad)
repnz
in
cmpsl
push
sub
(bad)
or
inc
cmp
push
cmp
iret
cmp
iret
mov
add
sbb
xor
shlb
cmp
mov
xchg
and
jno
mov
shll
stc
xor
pop
jp
sub
mull
ljmp
lods
lods
jb
sub
outsl
xchg
push
subl
mov
(bad)
shl
repnz
sub
outsl
mov
xchg
jmp
inc
jb
sub
popf
lret
mov
sub
and
add
sub
sub
pushw
sub
mov
pushf
xchg
adc
je
lret
mov
sub
cmp
sub
lret
test
aam
cmp
xor
xchg
and
jge
es
sub
cmp
sub
sub
mov
sub
(bad)
xor
sub
or
andl
sub
push
ja
mov
lahf
cmp
xor
mulb
add
outsb
loopne
dec
sub
rolb
ds
jp
aas
sub
sub
sub
arpl
inc
xchg
sub
mov
(bad)
sub
movsb
lods
mov
jb
cmpb
fst
cmp
adc
sub
inc
xor
adc
imul
fiadds
(bad)
fstpl
icebp
sub
jl
sub
pushf
xor
add
jbe
out
sub
mov
mov
sub
notl
sbb
mov
mov
add
adc
(bad)
xlat
imul
mov
and
jo
pop
sbb
sub
and
inc
mov
xchg
jmp
je
negb
sti
shll
sbb
sbb
call
dec
fwait

sbb
jmp
push
stos
mov
adc
jmp
jno
cmp
mov
xor
test
jne
int3
lret
jge
push
das
pop
mov
data16
shll
pop
jge
out
mov
xchg
lret
add
jbe
icebp
das
stos
je
add
shll
aam
xor
and
and
lret
ficoms
addl
and
xchg
cmp
ret
mov
out
pop
and
mov
cmp
stos
je
pusha
adc
(bad)
je
pop
push
mov
cwtl
fildll
mov
jno
out
pop
mov
mov
adc
or
mov
out
or
cmp
jge
mov
mov
push
je
or
push
aad
cmp
pop
xchg
daa
pop
push
and
or
cmp
cs
push
data16
rolb
cmc
dec
adc
sbb
dec
mov
xor
mov
xchg
jge
sbb
pcmpeqb
cmp
pop
cmp
xchg
mov
cmc
fwait

aam
jno
les
mov
sbb
xchg
out
and
shll
mov
fistps
jmp
mov
lcall
arpl
pop
daa
in
std
dec
cwtl
mov
sbb
lret
imul
or
cli
int
dec
mov
adc
and
sahf
pop
in
out
rcl
stc
sub
jb
pusha
out
jg
mov
les
test
test
lahf
and
mov
mov
les
or
mov
inc
stos
pop
adc
pushf
jp
pop
clc
sub
push
push
int
in
and
icebp
pop
pusha
jae
in
add
fdiv
rcr
and
xor
in
or
repnz
sbb
test
cmpsl
push
fs
aas
cmpsl
and
push
xchg
lea
mov
icebp
add
push
popf
xchg
mov
mov
lahf
lahf
pop
and
dec
push
hlt
xchg
sbb
mov
subb
sbb
or
mov
shlb
pop
jle
xchg
(bad)
pop
mov
je
push
ja
mov
xchg
dec
stc
adc
mov
cmp
scas
push
pop
jg
dec
mov
add
cmp
push
add
ja
adc
inc
out
leave
sub
repz
mov
pop
pop
cmpsl
cmpsl
jg
sar
je
inc
xchg
arpl
mov
inc
nop

sub
mov
je
sbb
push
push
pop
fdivl
shll
sub
ja
cmpsb
(bad)
ja
fs
cmp
shll
dec
arpl
cmp
cmp
pop
push
test
push
jmp
cmp
mov
mov
mov
mov
imul
cld
sub
fnstcw
mov
outsl
sbb
ja
test
pusha
push
jns
pop
(bad)
dec
ss
in
lahf
(bad)
je
pop
lretw
rcrb
xor
xchg
out
shll
lcallw
or
pop
push
xor
std
nop

push
out
mov
pop
jne
aaa
xchg
cltd
das
ret
push
add
mov
aaa
push
(bad)
lods
push
mov
push
pop
shr
adc
neg
test
js
cmpsl
cmpsl
dec
rolb
mov
mov
icebp
push
outsb
add
inc
rorb
or
movsl
push
ss
es
cmp
mov
xor
pop
jae
sub
jecxz
mov
dec
or
pop
ds
dec
es
pop
fcomps
stc
sbb
push
int3
je
jo
pop
push
shlb
lahf
add
push
xor
fnstcw
scas
je
dec
movsl
xchg
and
push
mov
(bad)
mov
fisttpl
xor
out
sub
sbb
sti
xor
mov
shl
inc
shlb
rcrb
xor
loope
lock
jmp
and
fiadds
rcrl
aad
aad
aad
(bad)
cwtl
mov
mov
lret
inc
sub
mov
cwtl
in
add
adc
push
idivb
xor
sub
mov
mov
lcall
negl
out
sub
jecxz
dec
cld
mov
dec
push
add
in
sbb
add
mov
or
cmp
imul
rorl
sbb
sbb
jne
push
(bad)
push
pop
dec
pop
movsl
jb
cmp
pop
ret
rol
repz
push
inc
mov
inc
je
(bad)
in
mov
je
nop

aaa
(bad)

ror
(bad)
mov
enter
decb
inc
sbb
mov
orb
addb
jmp
icebp
int3
fmull
push
mov
inc
icebp
cmp
sbb
or
lea
decb
aaa
cmp
in
cmp
pop
xor
push
mov
xchg
cmp
test
jecxz
mov
popa
icebp
inc
adc
divb
jmp
add
lret
je
inc
(bad)
lods
xchg
lock
xor
xorb
(bad)
imulb
mov
inc
push
rorl
or
adc
and
push
test
mov
aaa
or
outsl
aaa
scas
jns
lea
adc
jl
or
adc
dec
xor
inc
or
dec
(bad)
js
fdiv
rcr
and
ret
and
jne
cltd
mov
rcrl
sarl
pop
xchg
xchg
xor
xor
enter
xor
mov
dec
outsb
lods
xchg
es
(bad)

int
enter
xor
add
popl
lret
lret
xor
and
adc
mov
andb
loop
div
inc
nop

push
xor
xor
dec
arpl
cmp
add
aad
(bad)
and
jmp
jae
or
lds
pop
popa
push
add
sub
test
fs
mov
or
mov
jp
sub
pop
dec
jnp
jne
mov
fdivrs
cmp
movsl
xor
lret
rclb
jae
(bad)
pushf
dec
imul
push
pop
mov
(bad)
sahf
push
mov
mov
andb
(bad)
adc
push
out
aam
mov
aaa
lods
ja
xlat
or
outsl
out
inc
push
ja
push
sub
jge
cmp
push
int
push
fwait

cmp
push
inc
cs
xchg
jge
rcll
std
mov
jns
sub
push
add
add
cmp
cli
lret
bound
test
jo
push
and
mov
adc
lock
popa
lds
and
mov
lret
mov
mov
lds
loop
xor
and
sub
jne
sbb
fimull
daa
and
sbb
lds
les
or
sbb
mov
cltd
inc
(bad)
mov
clc
dec
sub
mov
push
or
andb
test
inc
push
xchg
jp
or
das
gs
dec
cmp
fcomps
or
jmp
xorb
rol
(bad)
sbb
rcl
push
frstor
lret
rcrl
sbb
jnp
dec
mov
cmp
repnz
push
add
adc
(bad)
sbb
xor
or
les
das
movsl
arpl
xchg
xchg
add
shr
decb
add
ret
cltd
icebp
mov
test
int
push
out
push
cwtl
inc
stos
in
mov
xor
sub
(bad)
mov
inc
cld
xchg
xor
adc
cmp
xchg
es
jb
mov
jno
stos
mov
dec
ret
or
adc
nop

stos
test
add
mov
push
xor
ja
adc
mov
ret
inc
add
add
adc
adc
xor
jecxz
jnp
in
mov
jns
lock
ffree
test
jmp
jnp
xchg
xor
outsl
sbb
dec
imul
std
aaa
pushf
cmp
sbb
ret
fs
cmpb
arpl
pop
cld
lcall
mov
mov
jmp
jb
jl
inc
jp
fs
(bad)
adc
push
lods
(bad)
sbb
push
ret
mov
xchg
iret
xchg
inc
xchg
push
mov
pushf
cltd
cmp
idivb
pop
std
aaa
pop
dec
stc
cmpsl
into
lret
pop
sti
pop
xchg
mov
sub
mov
inc
popf
and
mov
xchg
stos
xchg
xlat
inc
hlt
pusha
mov
mov
enter
stos
push
arpl
repz
xchg
cwtl
push
and
jne
mov
rclb
mov
repz
movsl
dec
push
dec
jp
mov
xor
es
mov
adc
sahf
clc
in
mov
ja
lods
outsl
shlb
mov
inc
push
enter
icebp
aaa
out
imul
ljmp
jl
inc
stos
sub
ret
mov
iret
push
or
mov
or
clc
out
and
mov
popf
into
stc
loopne
add
ret
jp
xor
xchg
or
add
mov
lret
sahf
or
push
rcrb
rol
sub
dec
(bad)
mov
add
in
mov
stc
pushf
or
and
sar
mov
mov
xchg
pop
and
ret
pop
pop
(bad)
adc
les
mulb
cmp
pusha
and
cwtl
dec
or
xor
aaa
nop

and
out
xor
sbb
idivl
xor
xor
lods
sbb
aaa
add
insl
pop
jecxz
add
fcmovb
cmp
(bad)
fwait

je
je
jne
push
outsb
outsl
cmpsl
dec
rolb
jmp
pop
jge
in
inc
fs
jp
mov
sbb
push
mov
adc
lods
imul
arpl
repnz
inc
pop
lock
add
outsl
sbb
xor
mov
xor
lret
or
fcompl
ret
rclb
dec
lds
cmpsl
jg
mov
imul
fwait

out
xor
in
and
mov
std
xor
cmp
roll
dec
cld
arpl
je
lea
mov
pop
sub
insb
or
fnstenv
push
and
sub
les
stos
fisubs
arpl
or
mov
je
mov
clc
aam
movsl
lret
ret
push
addl
(bad)
adc
mov
pop
cld
dec
xor
arpl
ret
dec
iret
out
imul
addr16
testl
roll
rcrl
sbb
repnz
scas
jns
sub
mov
lods
sar
cmp
sub
xchg
and
cmp
push
arpl
mov
aaa
xchg
and
push
leave
pusha
loop
scas
mov
aam
mov
sbb
inc
mov
fcmovb
and
mov
fdivrl
lret
sbb
out
je
aaa
ficomps
cli
jle
mov
or
sub
cmpsl
cmpsb
cmc
mov
adc
pop
es
ret
shlb
push
mov
and
dec
cmp
fistl
pusha
push
add
pop
mov
jns
loope
xchg
cmp
aad
cmp
imul
shrl
xchg
and
or
nop

fsubs
push
cmpsb
insb
dec
pop
dec
dec
cld
and
sub
xchg
xchg
cmp
pop
je
jp
xchg
rcll
xor
shlb
cmp
jmp
push
fxch
test
bound
push
lret
lock
inc
jnp
jno
cmpsl
cmp
outsb
rorl
add
hlt
mov
dec
aas
sti
lea
popf
lods
mov
(bad)
adc
vpmulhw
arpl
popf
xor
push
mov
mov
mov
js
dec
pop
pop
xor
xchg
mov
adc
fdiv
popa
push
mov
push
les
sbb
imul
jns
test
popf
(bad)
inc
ret
loop
or
and
lret
mov
flds
cmp
pop
je
add
jne
pop
push
mov
or
outsb
cld
(bad)
(bad)
jnp
xchg
mov
add
ja
pop
mov
sbb
scas
notl
cld
std
fcmovnb
dec
dec
jns
cmp
dec
dec
mov
clts
out
notb
addr16
loope
movsl
into
shlb
inc
mov
jg
and
arpl
testb
cmp
fbld
push
jb
push
pusha
xor
outsb
(bad)
negl
pop
jo
jbe
or
jns
subb
stc
push
mov
test
movsl
cmp
movsl
xor
or
fldenv
in
mov
sti
cmp
out
sbb
aaa
xchg
lock
outsl
test
pop
jo
int
cltd
ljmp
data16
scas
cmp
jno
aas
push
lods
xor
fmull
test
dec
sub
pop
popa
pushf
lcall
aas
fisttpl
sbb
sub
mov
arpl
in
test
lods
mov
movsl
mov
mov
dec
mov
push
dec
xchg
mov
pop
jo
adc
in
xor
cmpsl
pop
sarl
lret
or
xchg
or
sub
lret
jecxz
mov
sti
pop
pushf
jge
pop
test
mov
adc
dec
out
inc
dec
or
jae
sbb
xchg
push
adc
mov
mov
push
pop
dec
mov
push
pop
push
inc
push
jnp
out
push
int3
mov
dec
inc
fwait

push
mov
stos
fwait

lock
inc
push
ret
loope
lea
mov
clc
add
mov
aas
in
xchg
shr
adc
push
jg
std
jo
movsl
int
or
inc
mov
inc
(bad)

test
subb
scas
sbb
mov
sub
mov
sub
pop
xchg
and
xor
push
icebp
dec
inc
adc
mov
data16
xor
xchg
je
xchg
mov
lea
data16
shlb
push
fs
out
and
repnz
dec
xor
frstor
cld
push
in
push
mull
movsl
mov
or
mov
lret
xor
pop
ja
cmp
mov
push
mov
jge
js
es
(bad)
dec
shrl
mov
les
call
fsubrl
test
add
sar
arpl
int
imul
add
cld
push
pop
popl
push
mov
cs
mov
cmp
sarl
mov
mov
pop
dec
sbb
or
cmpsb
push
dec
paddw
loop
pop
dec
mov
loop
fistpl
ficomps
pop
icebp
cmp
pop
cmpsb
mov
(bad)

or
xor
xchg
fnsave
scas
xchg
push
je
dec
push
mov
int3
pusha
jp
aam
xor
dec
je
jge
dec
jecxz
stc
sub
(bad)
dec
jmp
jle
imul
pop
jo
xorb
fxtract
mov
ficoml
icebp
lret
je
inc
cmp
sub
sub
adc
popa
lods
clc
and
insb
leave
movsb
add
pop
or
cld
jbe
loope
dec
mov
into
push
test
outsb
add
inc
mov
or
ss
jb
int
mov
inc
cmp
or
arpl
inc
mov
ja
out
adc
mov
inc
add
mov
mov
fs
cmp
aam
push
stos
jnp
jg
xor
or
or
adc
push
outsb
cmp
mov
enter
sbb
out
pop
out
sub
mov
fwait

jno
dec
es
mov
bound
rcrb
push
mov
lret
xchg
(bad)

mov
(bad)
cmpsl
adc
in
dec
or
gs
stos
repnz
and
or
push
sub
test
sbb
call
fsubrl
sbb
outsl
repnz
popa
xchg
daa
jle
stos
in
pushaw
call
addr16
sbb
iret
pop
gs
shlb
pop
(bad)
ja
stos
cmp
repz
es
decl
inc
sti
leave
test
jno
or
and
out
aam
jno
mov
lret
or
inc
jnp
sub
(bad)
movsl
jo
dec
ja
cltd
fidivs
lcall
inc
daa
cmp
or
les
pop
rcll
xchg
mov
mov
(bad)
lods
mov
adc
loopne
out
shll
aad
movsb
lcall
xor
cmp
dec
sub
xchg
mov
push
js
(bad)
mov
stos
insl
mov
rcll
lds
sbb
jne
cld
lds
jno
inc
fldl
dec
inc
sbb
call
jo
shlb
dec
adc
ficoms
addr16
pop
pop
idiv
dec
mov
lea
adcb
cli
lret
jmp
hlt
aam
push
je
lods
add
icebp
cmp
daa
(bad)
adc
jg
jge
popa
xorb
jmp
hlt
inc
and
je
lods
add
icebp
cmp
(bad)
adc
mov
lret
mov
hlt
aam
push
je
jne
add
in
xchg
(bad)
adc
xorb
push
inc
adc
in
loopne
stos
je
add
cs
jbe
mov
jno
out
loopne
add
divb
je
inc
push
data16
sbb
imul
sti
(bad)
cli
and
inc
shlb
out
push
mov
lods
push
icebp
jge
sub
jnp
jne
pop
jae
shr
aas
inc
leave
out
push
add
push
or
addr16
in
in
out
test
lahf
jp
sbb
shrl
pushf
push
mov
stc
insb
jb
std
scas
or
into
fs
ret
shrl
xor
or
and
dec
and
outsl
sub
addr16
das
push
or
mov
mov
(bad)
dec
jmp
inc
arpl
inc
stos
or
sbbl
dec
int
inc
les
ds
lods
in
ror
mov
in
xor
(bad)
(bad)
out
push
lods
cmpsl
pop
orl
or
jp
mov
in
test
out
rorl
inc
pop
popa
push
ja
pop
sbb
dec
jg
in
addr16
orb
dec
sbb
shll
orl
lock
rol
out
cmp
jl
aam
mov
mov
ret
addr16
mov
xchg
mov
add
xchg
or
mov
addr16
dec
pop
daa
hlt
in
jne
lds
data16
enter
insl
es
inc
mov
ss
jbe
mov
mov
(bad)
fsubs
sub
dec
lods
add
(bad)
adc
filds
mov
mov
cmp
insb
xchg
add
jne
inc
mov
adc
inc
xchg
jns
sahf
push
sahf
or
daa
insl
jl
std
jg
je
sbb
gs
add
jo
mov
ret
jecxz
push
mov
or
jne
adc
mov
adc
sbb
mov
jl
push
xor
jl
js
xor
or
push
dec
jmp
push
(bad)
call
mov
dec
lcall
ljmp
adc
adc
jle
lea
aaa
stc
lea
add
mov
mov
test
fwait

push
shlb
pop
cli
xchg
or
xlat
test
dec
arpl
roll
(bad)
mov
outsl
insl
xor
insb
rolb
test
leave
jl
ja
push
sub
push
out
test
es
jle
sub
(bad)
xchg
jae
(bad)
in
push
jnp
xlat
sbb
jecxz
lahf
add
mov
enter
out
ret
push
mov
sub
ljmp
dec
clc
ljmp
lcall
insb
cmp
(bad)
not
cmc
mov
adcl
pop
adc
int
inc
mov
adc
sbb
gs
(bad)

push
lods
jl
and
push
mov
scas
cmp
and
xchg
or
das
sbb
mov
push
(bad)
jecxz
ja
jg
xchg
jno
test
inc
lcall
(bad)
into
in
das
sub
jge
xchg
mov
mov
inc
sub
cmp
rcll
mov
daa
mov
lret
xor
mov
wrmsr
and
add
xor
lods
push
adc
rol
jb
ret
jnp
and
cmpsl
sbb
or
icebp
cmp
jge
push
arpl
inc
orl
popa
into
mov
xchg
popf
xchg
not
mov
rcll
adc
inc
xchg
push
mov
nop

mov
add
mov
sbb
cs
pop
fcom
push
add
arpl
mov
outsl
movsb
dec
int
ljmp
push
cmp
jmp
shll
pop
cmp
push
xchg
dec
lock
je
adc
mov
aaa
cmp
fmull
mov
sbb
mov
ljmp
xlat
or
dec
sbb
add
or
pop
out
jge
push
sbb
jbe
rorl
push
mov
popf
jmp
icebp
pop
scas
mov
addr16
jns
jg
aaa
sahf
mov
and
hlt
enter
push
jg
mov
data16
push
sbbl
mov
and
mov
data16
jp
aaa
mov
lods
test
mov
pushf
jae
dec
mov
mov
mov
push
dec
push
fiadds
adc
cmpb
xchg
aas
sbb
cmpsl
xchg
roll
ret
shll
xor
xorb
dec
dec
nop

mov
and
and
push
std
lds
inc
icebp
mov
sbb
jbe
sahf
subl
rcl
xchg
inc
cmp
sub
sbb
sbb
xor
test
xor
pop
or
ds
je
mov
fwait

cmpsb
inc
cs
bound
xor
inc
aas
pop
out
xor
jo
ret
clc
dec
and
xor
adc
dec
outsl
out
mov
adc
int3
mov
mov
push
stc
xchg
push
jae
sarb
xor
stos
jae
leave
int3
xchg
test
xor
fwait

pop
shll
fbstp
push
mov
add
add
fwait

mov
decb
in
cmpb
lret
add
mov
pusha
inc
in
stos
push
jo
cmp
enter
ret
fsub
jnp
pop
xor
pop
cmp
mov
push
je
movsl
xlat
add
je
pop
adc
lds
mov
mov
cwtl
fstpl
aad
sbb
fstpl
mov
lds
mov
jp
ret
std
movsb
notb
mov
ret
mov
jge
or
adc
(bad)
jecxz
adc
xor
adc
dec
cmp
dec
jge
lods
js
popaw
hlt
mov
jecxz
push
or
insl
xor
mov
in
popf
or
mov
mov
aas
pop
mov
xchg
sbb
jg
or
popf
lahf
xor
test
push
jge
enter
test
xchg
scas
or
push
pop
shll
jne
(bad)

sub
pop
mov
mov
fs
notl
mov
and
mov
icebp
adc
in
sbb
sti
pop
sbb
out
cmp
dec
(bad)
fwait

es
movsl
mov
cmp
mov
rorb
sub
mov
pop
jmp
push
cmpsl
mov
cld
testb
jle
cmp
xchg
and
push
clc
cmp
jle
aas
ss
mov
sbb
mov
sbb
push
dec
mov
lret
stos
js
outsl
popf
pop
inc
rorl
add
(bad)
mov
loopne
bsf
push
mov
daa
stos
inc
jle
mov
inc
ret
sbb
mov
rcll
inc
push
andl
addr16
adc
mov
mov
jne
dec
jno
lods
mov
sbb
or
xor
adc
mov
push
test
outsb
incb
rol
aad
xor
rclb
xorl
pop
aam
enter
xor
push
testl
fwait

add
and
jb
dec
insw
fcoms
push
jp
dec
mov
test
lret
ss
icebp
and
cmp
sbb
mov
mov
pop
push
jae
icebp
mov
jecxz
mov
bound
and
inc
repz
xchg
mov
dec
pop
sub
ret
js
loop
and
fsubl
js
and
(bad)
jg
cmp
and
imul
inc
loopne
push
adc
xor
jb
mov
jg
xchg
xchg
sbb
(bad)
mov
loope
adc
jnp
mov
lods
mov
push
pop
cli
(bad)
mov
xor
(bad)
dec
sub
stos
rolb
sar
mov
push
mov
icebp
ret
and
sub
mov
lret
pop
mov
mov
push
je
sbb
xor
cwtl
inc
pop
pushw
movsl
mov
inc
jb
insl
mov
pusha
xor
cmp
sbbb
in
inc
ret
lret
jle
jg
aad
shrl
or
mov
popf
dec
adc
movsl
cmpsl
(bad)
out
jae
mov
test
cmp
mov
pop
adc
jge
arpl
popf
leave
es
(bad)
mov
shlb
pop
mov
arpl
mov
arpl
je
add
pop
fstl
mov
in
and
icebp
testb
pusha
mov
pop
jnp
add
xchg
add
mov
mov
push
subb
icebp
cmp
add
nop

mov
pop
sbb
idivl
jb
lret
mov
xor
mov
mov
and
sub
fldlg2
sarl
xchg
cld
sahf
loope
enter
jb
sub
jmp
or
sub
leave
pop
adc
inc
sbb
inc
mov
jmp
pop
ret
testb
and
lods
xchg
pop
cmp
loop
mov
pop
mov
int3
cld
rorl
pop
xor
icebp
cmp
push
cmpsb
xor
xorb
jge
inc
or
repnz
mov
jp
xor
test
cmp
adc
dec
inc
scas
(bad)
jmp
cmp
(bad)
push
xchg
push
mov
push
cmc
call
cs
inc
cltd
pop
mov
pop
xchg
and
je
into
xchg
mov
test
cmp
je
fisttpl
sbb
pop
stos
je
sbb
push
cltd
das
mov
(bad)
cmp
sub
and
jns
sbb
lods
mov
test
aaa
mov
mov
je
aaa
cmpsb
mov
popa
mov
mov
add
cmp
nop

test
xor
dec
sbb
int3
mov
jns
sbb
mov
mov
lock
mov
dec
lret
or
hlt
mov
mov
mov
jbe
cmp
push
pop
push
dec
mov
cmp
incb
push
out
pop
cmp
xchg
push
outsb
stos
outsb
mov
cltd
cmp
sub
dec
push
shrl
bound
pop
push
and
lret
stc
pop
cs
dec
cmp
and
push
movsl
(bad)
cwtl
(bad)
lock
lcall
cmp
icebp
xor
or
inc
adc
imul
enter
add
nop

lret
push
sub
sbb
repz
test
je
dec
es
fucomi
icebp
das
pusha
addl
mov
jbe
xor
inc
mov
or
icebp
cmp
(bad)
iret
mov
mov
mov
push
mov
jge
hlt
sub
inc
sbb
ret
(bad)
xlat
insb
nop

clc
hlt
mov
lea
arpl
rorb
inc
cmp
insb
cmp
iret
cmp
iret
mov
adc
(bad)
cmpsl
shll
lret
fistpll
xchg
hlt
cld
xchg
mov
shll
ss
pop
jl
out
sub
mull
ljmp
stos
je
mov
inc
outsl
xchg
push
andl
mov
call
outsl
mov
in
xor
iret
into
mov
fbld
jns
hlt
roll
ljmp
pushw
hlt
mov
lcall
cmp
mov
sbb
mov
cmp
test
xchg
cmp
xchg
and
jge
es
nop

dec
aaa
mov
cmp
cmpl
inc
mov
add
cmp
arpl
aam
clc
fidivrs
xor
call
cltd
aas
(bad)
or
add
icebp
cmp
push
jns
sbb
add
sbb
nop

jl
cmp
mov
cmp
push
mov
fdivrs
outsl
inc
cmpsb
pop
add
dec
pop
leave
movsb
lods
mov
shrl
js
fst
cmp
adc
sub
xor
mov
xchg
jb
mov
mov
mov
cmp
adc
into
popa
mov
(bad)
ret
lret
pop
mov
in
mov
sub
scas
pusha
push
test
insb
imul
loopne
xchg
pushf
stos
jnp
push
mov
or
out
adc
iret
aad
xchg
lock
cmpsl
push
das
scas
mov
adc
(bad)
aam
ret
ja
leave
push
mov
outsl
daa
iret
pushw
sub
pop
mov
pop
pop
scas
dec
cli
popf
or
repnz
ja
xor
loopne
dec
dec
xchg
xchg
mov
adc
jmp
jno
cmp
mov
xor
test
jne
int3
lret
sbb
mov
sub
dec
(bad)
mov
test
xor
cmpb
lret
mov
shlb
pusha
je
popf
data16
push
mov
shrl
mov
mov
mov
adc
and
mov
mov
push
push
cmp
inc
jecxz
dec
movsb
sub
adc
imul
in
hlt
push
mov
mov
cwtl
shll
xor
mov
add
lret
lret
xor
pop
adc
les
cmp
dec
jl
jnp
push
(bad)
xor
xchg
cmp
out
pop
mov
or
xchg
out
das
sbb
push
(bad)
cwtl
test
pop
jecxz
pop
jge
mov
lret
les
xchg
sbb
mov
mov
xchg
add
in
inc
mov
jg
mov
jo
data16
cmp
cmp
gs
mov
lret
push
mov
mov
fwait

je
sub
lahf
push
sbbl
sub
add
xchg
jp
pushf
lcall
(bad)
scas
push
cmp
fimuls
pop
es
xor
jae
rcrb
lret
lock
lods
sbb
aaa
jbe
cmp
ja
lret
jno
lock
push
fwait

shrl
sub
(bad)
pop
in
pop
sti
mov
pop
fistpl
mov
data16
in
push
or
pop
(bad)
insl
icebp
stc
dec
outsl
popa
jb
ret
test
or
and
(bad)
cmp
or
pop
js
jmp
xor
add
pop
or
inc
addr16
dec
int
lret
pop
push
dec
ja
(bad)
daa
aad
popf
repnz
push
xchg
mov
xchg
jne
cltd
push
je
cmc
sahf
xchg
les
ret
aaa
push
xor
jnp
hlt
add
sahf
loope
(bad)
aaa
pop
out
pop
xchg
pop
cmpsl
les
fs
xor
xchg
aas
(bad)
fstps
inc
pop
sti
fs
gs
int3
in
stos
mov
test
pushf
lret
mov
aas
lcall
(bad)
movsl
mov
hlt
repz
jo
jno,pn
inc
lods
add
jg
std
imul
xor
cmp
pop
xchg
icebp
xchg
pop
lock
inc
mov
insb
test
push
(bad)
(bad)
icebp
(bad)
sub
(bad)
lea
mov
and
xchg
je
mov
repnz
mov
mov
fildll
jo
or
outsl
xchg
adc
pop
jge
cld
stos
mov
pop
lret
mov
hlt
mov
mov
pop
add
(bad)
cmp
or
iret
pop
mov
xor
inc
ds
xor
mov
sbb
cmpb
pop
testl
sbb
add
lret
xor
mov
push
mov
add
test
mov
inc
dec
lahf
out
stos
add
shrl
adc
add
xchg
push
cmp
push
data16
or
shll
inc
loop
data16
cmp
fistps
sbb
cmc
dec
inc
push
testb
sub
and
cs
imul
inc
cmp
mov
mov
aam
les
lods
cwtl
inc
cmp
and
test
dec
sbb
das
out
in
jg
popf
stos
aam
addr16
push
jae,pt
sub
fs
cwtl
or
call
in
mov
das
push
cmp
test
lock
(bad)
push
ljmp
add
clc
pop
pop
lcall
and
pusha
aas
pop
inc
push
pop
inc
mov
fs
(bad)
and
cmp
pop
xor
in
sub
pop
mov
xchg
ret
push
xchg
shll
outsb
outsb
fs
dec
sbb
sub
pop
pop
and
xor
add
mov
ss
aad
cmp
into
insl
add
mov
leave
mov
push
(bad)
jl
shll
inc
in
push
popf
outsl
jns
sbb
das
add
pop
outsl
bound
cwtl
push
mov
lret
rolb
test
mov
or
(bad)
or
ja
or
or
xchg
xchg
ud2
sub
aas
arpl
adc
addr16
jecxz
shll
xchg
jmp
cld
jnp
cmp
inc
sahf
fldcw
xor
pop
les
mov
ljmp
push
mov
nop

lea
adc
ljmp
ja
hlt
scas
inc
aad
mov
(bad)
inc
or
lret
mov
hlt
cmp
xor
jb
rolb
sahf
dec
sub
adc
and
mov
(bad)
std
mov
pop
int3
mull
cmp
pop
and
nop

add
mov
fnsave
aam
(bad)
fs
call
stos
sbb
lcall
in
inc
xor
sbb
pop
out
cltd
or
xorl
inc
cwtl
shrl
adc
(bad)
aas
fs
jno
cmp
pop
lret
notl
dec
(bad)
mov
xor
jmp
sbb
push
xlat
mov
push
fbld
push
aaa
lea
ja
sbb
pop
xor
das
orb
mov
outsl
pcmpgtb
dec
add
sbb
test
xchg
lahf
insl
mov
in
xchg
fwait

lods
stos
sbb
nop

inc
pushf
pop
dec
push
adc
adcl
cs
add
push
rcrl
sub
hlt
aaa
push
or
jmp
jmp
mov
gs
aaa
(bad)
or
ret
sbb
loop
fdivrs
je
test
imul
je
sbb
pop
clc
fs
adc
mov
popa
cmp
xchg
add
int3
out
mov
xor
pusha
lods
or
push
test
sbb
pop
dec
mov
inc
and
push
push
adc
data16
scas
xchg
dec
(bad)
push
inc
aaa
outsb
xor
arpl
push
das
std
out
mov
shll
pop
push
add
fwait

fs
movsl
xchg
push
shrl
addl
sbb
add
scas
(bad)
pop
(bad)
int3
inc
xor
ret
into
(bad)
cmp
and
hlt
out
jno
ror
pop
lret
popa
rorb
push
cli
mov
outsb
add
jge
push
mov
insb
xchg
push
inc
inc
push
insl
sar
ja
test
sahf
mov
push
push
out
movsl
sbb
movd
xchg
rcrb
or
fwait

mov
je
and
mov
mov
fidivrs
xor
push
mov
lock
repz
sti
sbb
inc
dec
popa
out
pop
mov
movsb
(bad)
clc
out
fidivs
push
data16
jno
jb
lcall
dec
mov
mov
or
pop
push
dec
pop
or
decb
jb
adc
cmp
push
lret
mov
dec
mov
xchg
or
or
popf
inc
imul
stos
test
jo
push
fisubl
mov
sub
push
jb
or
add
xor
adc
aaa
dec
out
into
outsb
imul
sbb
push
mov
(bad)
movsb
test
imul
cmp
or
pop
add
xchg
and
push
loope
xor
in
popl
scas
ret
mov
imul
mov
hlt
rclb
pop
js
xlat
mov
inc
cmp
or
jl
fisubrs
and
xor
dec
xchg
add
bound
dec
push
je
hlt
sub
mov
pop
(bad)
clc
pop
or
push
jns
shrl
push
mov
insl
and
add
inc
je
les
inc
push
push
addr16
sub
adc
fs
test
scas
pop
mov
lea
int
sbbb
sbb
mov
shrl
scas
mov
test
bound
push
std
ret
mov
jo
and
inc
jb
lcall
shll
call
push
clc
dec
scas
mov
xor
mov
insl
shrb
mov
insl
rolb
inc
jnp
or
xlat
jae
and
sbb
fcompl
lds
dec
ret
and
lahf
lret
fidivl
push
clc
sbb
je
(bad)

or
outsl
add
out
jno
mov
pushf
ret
cmp
stc
jge
fisubrs
ja
jmp
andl
lret
push
sbb
sub
xchg
add
insb
push
ret
and
rclb
or
stos
xorl
sbb
decb
and
rcrb
in
or
inc
dec
cld
pop
jb
mov
inc
clc
aad
push
mov
add
popf
cmpsl
adc
xor
cmc
mov
pop
mov
or
js
out
pop
cltd
rcrb
aaa
add
loop
(bad)
lret
pop
push
xor
mov
push
adc
test
adc
xor
adc
stos
jle
data16
cmpsl
out
cltd
fisttps
icebp
rclb
mov
outsl
sub
insb
(bad)
pushf
dec
add
stc
and
push
add
outsl
lods
int3
hlt
test
xor
shr
mov
mov
loope
push
stc
movb
rcrl
outsb
rorb
nop

aas
decl
pop
lcall
xchg
lock
or
cltd
andl
and
and
add
sub
mov
and
dec
cmp
test
cmp
ss
xchg
jns
negl
pushf
cmp
mov
lahf
std
roll
gs
(bad)
and
int
xchg
cmp
pushw
cltd
lahf
and
cmp
test
out
popf
and
clc
icebp
int3
js
inc
sti
out
enter
sbb
lods
xchg
ret
sub
mov
xchg
cmc
inc
push
fistps
stos
jb
sbb
push
sti
int
cli
data16
mov
jno
in
dec
(bad)
(bad)
shr
cld
and
sbbl
in
lret
xor
(bad)
ja
adc
xchg
jp
cmpl
add
sahf
xor
xchg
int
push
test
test
pop
add
mov
jbe
push
mov
mov
add
cmp
test
adc
mov
and
ss
popa
pop
pop
sub
mov
jae
test
dec
cwtl
imul
cmp
je
cmp
sub
inc
pop
(bad)
mov
jp
cmp
or
cld
arpl
jg
in
add
mov
or
hlt
cwtl
dec
adc
(bad)
cld
mov
push
movsl
push
xchg
inc
pop
divps
jge
mov
in
jp
pop
mov
icebp
aas
ljmp
js
sbb
faddl
js
pop
mov
mov
inc
popa
or
pop
imul
ljmp
pop
movsl
dec
(bad)
iret
pusha
mov
ljmp
in
mov
shl
in
inc
jo
mov
insb
mov
and
lock
and
or
xor
aam
ljmp
mov
sbb
jmp
pop
sbb
xlat
imul
xor
add
mov
sbb
add
xor
mov
dec
sbbb
js
dec
aam
jge
and
loope
int
stos
push
loopne
adc
aas
fists
addr16
out
fwait

aad
(bad)
lods
out
xor
jb
sbb
inc
dec
dec
xchg
push
or
leave
xchg
cmpsl
loope
fstps
outsl
or
xlat
inc
push
cltd
inc
lcall
in
xor
dec
dec
sub
push
mov
and
lahf
push
xchg
mov
mov
lahf
in
(bad)
adc
xor
mov
(bad)
jne
xor
in
or
add
imul
mov
int
mov
test
ret
and
add
mov
dec
cmp
add
test
(bad)
jb
out
push
mov
(bad)
jle
movsl
lds
(bad)
pop
or
xchg
push
mov
mov
push
mov
loopne
mov
sub
adc
das
xchg
pop
and
cmp
xor
xchg
inc
push
movsb
pop
mov
adc
and
mov
jle
xor
daa
roll
mov
shrb
cltd
gs
das
dec
xlat
jg
ret
test
xchg
shlb
pop
jmp
ret
dec
sbb
push
(bad)
xchg
pop
movsb
lret
dec
orl
cmp
outsb
and
js
mov
cld
push
je
imul
cmc
lahf
addl
jl
sbb
adc
popa
lods
and
jmp
xor
shll
sub
add
ret
inc
sub
jge
js
pusha
push
stos
mov
and
adc
pop
stos
mov
mov
pop
or
sarl
adc
sub
pop
clc
arpl
sub
out
push
loope
mov
shrb
insb
pop
scas
xor
jmp
fsts
inc
test
mov
jno
inc
insl
sbb
scas
push
int
and
or
std
mov
inc
lods
fldpi
and
imull
lea
jae
aaa
mov
push
(bad)
xor
flds
xchg
ret
rorb
ret
sbb
cmp
pop
aam
aad
rolb
lods
xor
in
cmc
cwtl
inc
(bad)
sub
sbb
jne
out
fwait

push
jns
and
adc
jb
lahf
cmp
mov
lods
in
inc
jl
mov
pop
idivb
xchg
je
xchg
sub
mov
in
pop
adc
cmp
inc
sub
push
test
lock
data16
push
mov
lret
mov
push
sub
push
mov
mov
or
adc
xchg
pop
mov
lahf
dec
cmp
lock
push
sbb
jne
ret
stc
sbb
jno
rcll
nop

mov
mov
cmp
sti
push
xchg
pop
add
xchg
shlb
jle
fsubl
sarl
aas
and
xchg
sub
mov
push
and
jmp
repz
aam
mulb
(bad)
jle
xor
lods
mov
and
xlat
jp
xor
push
dec
sbb
xor
adc
aam
ret
shr
inc
(bad)
enter
push
insl
fnstenv
or
adc
mov
aaa
fwait

sub
in
or
ret
test
pop
or
insl
xchg
mov
faddl
repnz
mov
fsubl
int3
sbb
je
pop
pushw
or
int3
pop
sahf
lock
fs
cmpl
pop
mov
addl
clc
inc
pop
out
and
repz
and
pop
mov
std
mov
cmp
mov
sub
add
mov
icebp
hlt
out
es
loop
sub
mov
sbbb
xor
push
out
pop
dec
in
(bad)
pop
or
pop
mov
dec
pop
icebp
lods
push
fs
insb
jnp
push
es
sub
mov
fnstcw
xor
sbb
or
je
das
push
push
out
adc
enter
lahf
stos
xor
dec
sar
stos
pop
or
mov
xor
repz
pop
pop
jmp
and
xchg
(bad)
ds
arpl
sbb
rorl
mov
imul
aam
and
out
ror
mov
ret
cmp
jg
repnz
adc
enter
(bad)
inc
pop
dec
insl
sub
pushf
xchg
push
mov
push
or
orl
in
add
gs
lret
and
cld
rcrb
adc
arpl
std
add
dec
mov
pop
xlat
fmul
ljmp
cmp
mov
push
inc
or
je
push
lahf
xor
scas
lret
ret
mov
jge
pusha
jl
shl
rsm
je
(bad)
cmp
inc
xor
es
in
arpl
xor
imul
jne
jo
sbb
xor
bound
pop
cld
adc
ret
je
sbb
mov
mov
je
arpl
ficoms
sub
ja
push
xchg
into
scas
fs
inc
add
lods
push
cmp
pop
mov
adc
imul
pop
inc
push
push
xorb
adc
es
movsb
test
sbb
aaa
xor
in
addb
(bad)
adc
aas
(bad)
mov
lods
lret
rol
push
jo
mov
xor
xlat
cli
(bad)
into
aam
jo
cmp
aas
faddp
lret
mov
lds
in
push
dec
addl
or
int
pop
sub
dec
jns
add
push
js
pop
fbstp
mov
inc
loope
xchg
xchg
cmp
test
(bad)
out
push
cmpsl
lret
lret
push
fidivs
mov
mov
loop
clc
or
aaa
fisttpl
(bad)
dec
sbb
mov
jp
pop
loop
cltd
lds
adc
cltd
(bad)
sub
(bad)
pop
fistps
hlt
fcmovnb
popa
outsl
inc
xor
sub
xchg
cmc
cmc
je
mov
adc
rorb
cmp
cmp
hlt
mov
(bad)
jmp
movsl
addl
ja
mov
pop
and
out
or
movsb
pop
sub
sbb
lcall
xchg
inc
int3
cmp
cmp
xor
sbb
push
jmp
test
(bad)
loopne
outsl
mov
adc
mov
repnz
lcall
sub
dec
fcmove
mov
sbb
pop
nop

lds
test
shll
xor
(bad)

adc
insb
inc
or
push
push
pop
rorl
mov
dec
(bad)
xlat
stos
jae
dec
or
xor
pusha
into
jmp
jge
lret
adc
stos
dec
mov
(bad)
lcall
push
pop
or
aaa
sbb
and
aaa
sbb
movsb
push
push
ds
ljmp
outsl
jns
out
push
lods
sbb
jno
mov
sahf
int3
lea
lock
push
loopne
xor
or
hlt
popf
push
xor
popf
dec
ljmp
cmc
fsub
sbb
pop
ret
inc
scas
dec
add
sub
push
mov
mov
cs
xor
xchg
icebp
xor
movsl
xor
cmp
movsb
jmp
cli
je
arpl
sti
inc
xchg
mov
push
sub
ja
shl
dec
call
fstpt
rcrl
xchg
cmpl
or
push
lret
out
test
xchg
ret
lods
jge
imul
or
sbb
arpl
leave
cmp
(bad)
jge
jae
pop
and
dec
push
cmp
push
insb
sar
jb
mov
inc
sub
xchg
daa
cmp
sbb
outsl
push
xchg
mov
cmp
and
stos
jge
cld
mov
sbb
jnp
mov
dec
icebp
inc
ret
das
pop
mov
pop
hlt
(bad)
or
xor
lret
dec
or
(bad)
lahf
bound
je
jbe
mull
mov
xlat
mov
push
dec
je
or
(bad)
mov
sbb
xchg
inc
sub
xchg
mov
xchg
jbe
sub
mov
cs
mov
sub
je
pop
in
cmp
lcall
add
sub
ret
lret
test
xor
lret
mov
pop
or
fists
pop
aaa
pop
js
mov
push
inc
cmp
lret
or
adc
movb
and
cmc
sbb
xor
insb
js
adc
iret
push
iret
pop
mov
jge
data16
or
lret
or
push
les
aam
(bad)
test
cmp
sbb
dec
xor
testb
lret
jb
call
lds
notb
add
test
movsl
pop
xchg
dec
orl
fimull
sti
push
mov
adc
movsb
imul
pusha
lret
mov
aas
mov
lcall
xor
mov
dec
hlt
stc
adc
scas
arpl
mov
mov
sbb
push
es
and
stc
jns
mov
(bad)
sbb
or
sarl
add
dec
and
insw
bound
push
out
jns
pop
lret
pop
cmc
test
fs
xlat
xor
iret
(bad)

pop
test
gs
and
xlat
fsubl
inc
pop
pop
sahf
lret
cmp
fbstp
bswap
sbb
shr
pop
or
add
into
and
mov
dec
iret
jl
lock
or
sbb
xor
fistpl
popf
sbb
pop
pop
lock
dec
fsubrl
mov
lret
notb
and
push
test
sbb
push
dec
arpl
inc
jbe
das
data16
jmp
int
mov
or
inc
shll
iret
push
sub
and
fucomip
daa
mov
dec
mov
arpl
mov
ret
ljmp
pop
sbb
fsub
jmp
cmp
fwait

push
fdivp
mov
cld
push
pop
jg
enter
(bad)
sarb
jbe
xchg
pop
xchg
mov
in
dec
(bad)
mov
inc
mov
jns
mov
mov
aam
inc
push
mov
insl
mov
xchg
and
lcall
aad
cmp
pushf
push
cmp
mov
inc
mov
push
in
sub
les
sub
xor
mov
out
lea
or
xchg
cmp
pop
(bad)
adc
mov
mov
imul
out
jae
cld
daa
dec
jns
adc
push
and
add
mov
jne
(bad)
shll
es
icebp
or
test
xchg
adc
or
xor
cmpsb
imul
aas
call
mov
mov
sub
push
je
lcall
outsb
arpl
lods
xchg
pop
dec
fisubl
and
aam
push
fsubrs
std
add
enter
dec
insl
sbb
xchg
inc
pop
pop
loop
lret
(bad)
movsl
sarl
and
jb
jl
imul
test
inc
xchg
aaa
sbbb
cmc
pushaw
repz
outsb
jge
push
xchg
push
push
mov
mov
jb
je
cmovs
xchg
mov
mov
mov
push
icebp
cmp
std
push
sub
inc
movsb
jl
xor
pop
push
mov
add
aas
jge
or
das
popa
repnz
es
dec
pop
pop
inc
jnp
cld
mov
pop
cmp
imul
add
pop
mov
lods
jbe
pop
jge
mov
push
inc
lods
sbb
insb
int3
ja
push
mov
loop
das
test
pop
push
mov
jne
cmp
mov
test
std
aaa
inc
jmp
imul
shll
outsl
push
push
mov
fwait

pop
dec
sbb
push
xor
scas
lods
mov
(bad)
insl
push
shlb
loope
movsl
mull
xor
fsts
sbb
int3
pop
xchg
mov
xor
loop
imul
enter
ret
inc
fldl
out
pop
sbb
lret
in
mov
mov
inc
pusha
add
icebp
push
int
rcll
mov
pop
daa
mov
xor
jb
sub
cmp
out
out
add
xchg
je
and
cmc
aad
cmpsl
mov
std
ljmp
leave
stos
mov
(bad)
xor
sub
or
mov
testl
les
push
xchg
(bad)
push
push
mov
push
data16
pop
and
fnstsw
cld
aam
aad
fmul
(bad)
ja
xor
mov
push
rcrl
out
cmpsl
test
testb
addr16
pmuludq
sbb
jg
dec
inc
xchg
adc
into
push
shll
push
mov
or
jge
add
shrl
pusha
add
jne
(bad)
lods
loop
pop
repnz
xor
repnz
notl
or
mov
add
lret
loop
dec
mov
or
mov
jae
fdiv
sbb
pop
xchg
aaa
int3
sub
and
test
gs
inc
and
xchg
cmc
and
cmp
sub
leave
sub
(bad)

and
push
rclb
mov
xchg
stos
adc
mov
cmp
dec
hlt
or
ds
ljmp
nop

and
ss
pusha
pop
pop
push
cmp
pop
fcmovb
cld
leave
sub
(bad)
pop
in
es
sub
dec
push
test
jge
ds
jne
or
cwtl
insl
ss
test
lods
stos
xchg
test
outsl
xchg
test
mov
sbb
cld
or
mov
int3
and
insb
push
stos
out
js
sub
test
int
xchg
xor
sbb
out
jae
pop
xchg
mov
xor
(bad)
ljmp
jo
mov
in
nop

add
xor
sbb
popa
fwait

push
cmp
out
push
data16
(bad)
jb
inc
testb
adc
arpl
ljmp
pop
dec
clc
add
pop
dec
inc
ret
and
lods
shrl
int3
xchg
pop
mov
mov
fdivs
lcall
or
cli
mov
and
into
fcompl
push
inc
mov
push
jb
iret
fildll
adc
push
xchg
jo
daa
out
mov
enter
mov
lods
shrb
and
aam
in
dec
int
adc
out
sub
mov
popf
(bad)
mov
inc
repz
in
je
push
cmp
push
jae
sbb
leave
mov
cs
mov
mov
cld
and
cli
push
mov
aad
and
cltd
sub
frstor
xor
bound
jns
das
xor
sbb
push
cmp
pop
movsb
and
int
cmpb
lock
je
scas
push
jg
or
scas
addl
in
add
dec
fnstsw
xor
sub
addr16
inc
add
sub
cmpsb
sbb
jge
add
or
imulb
push
rcrl
xor
lret
jp
ret
in
fdivrs
bound
adc
shlb
mov
ja
pop
insb
mov
and
mov
loopne
adc
sub
ljmp
imul
iret
outsl
sti
adc
dec
adc
inc
mov
lods
cmp
push
jge
adc
lret
xor
cmp
jp
imulb
imul
mov
hlt
lcall
push
xchg
aaa
mov
mov
mov
mov
adc
xlat
fldcw
adc
xor
fidivs
xchg
mov
lods
test
sti
pop
(bad)
mov
fcmovnbe
sahf
cmp
xlat
scas
or
add
(bad)
mov
pop
jle
je
out
inc
adc
dec
jmp
jge
push
lock
sbb
fsubp
not
(bad)
(bad)
jo
dec
std
es
mov
ret
mov
je
mov
inc
ljmp
pop
test
movsl
insb
imul
test
mov
insl
add
pusha
xchg
fmull
loop
adc
into
ja
and
clc
add
cs
inc
rorb
or
inc
mov
dec
xlat
pop
je
sub
xorb
out
cltd
and
push
xor
xchg
push
cwtl
rcll
and
inc
mov
js
jae
push
push
jnp
(bad)
fisttps
inc
xlat
sti
bound
popf
pop
daa
adc
or
push
push
sti
xchg
dec
or
sub
aam
shrb
cltd
jns
insl
aaa
lods
adc
pop
sbb
flds
lea
stc
je
pop
sbb
dec
sub
pop
add
sbb
mov
sbb
decl
inc
adc
div
je
in
aaa
cwtl
dec
loope
xchg
in
in
push
andb
jmp
pop
cli
rclb
lods
add
cmpsl
dec
inc
pop
stc
adc
aam
add
mov
outsl
mov
add
bound
nop

call
jne
das
es
or
xor
jl
mov
into
add
push
or
lods
add
pop
in
cmp
ret
hlt
jae
(bad)
ret
(bad)
push
xchg
cltd
adc
shll
jae
lods
enter
jae
mov
fistpll
lds
pop
test
pop
fisttpl
push
nop

and
in
mov
push
cmpsb
test
mov
lea
push
(bad)
sub
and
repnz
inc
aad
stos
and
fsubl
mov
mov
xor
cltd
aad
xor
pop
imull
sbb
pop
addr16
and
inc
and
xor
leave
js
out
adcb
test
fstl
or
sub
pusha
add
jge
shll
jns
test
mov
xchg
std
adc
rorl
in
es
push
xor
or
inc
add
push
and
stos
mov
aam
icebp
imul
adc
das
jns
sbb
es
mov
imul
dec
lcall
or
xor
xchg
cmp
in
push
add
test
pop
aam
lret
mov
pop
loope
mov
push
add
andb
out
test
cmp
rolb
out
pop
pushf
cltd
push
mov
and
loop
rorl
jne
mov
stc
fndisi(8087
hlt
sub
es
add
psrad
test
inc
mov
or
dec
cld
mov
adc
int
ja
lret
int
and
int3
push
shrl
mov
test
fnstenv
inc
and
rclb
xchg
movsb
pop
movsl
dec
(bad)
mov
hlt
mov
jae
pop
and
shll
cmp
pop
inc
lea
adc
lret
test
lcall
leave
or
dec
xlat
dec
(bad)
inc
jmp
and
test
testb
dec
inc
rcrl
lds
lods
xor
cli
lock
xor
(bad)
mull
push
and
adc
into
sub
cmpsl
jl
ljmp
into
fidivl
mov
(bad)
pop
dec
popf
inc
mov
cmp
fsubrl
inc
pop
pop
pop
jl
pop
icebp
ror
cmc
inc
add
cmp
cmp
pop
mov
cmp
movsl
insb
jae
test
shl
lea
je
inc
and
hlt
inc
les
xchg
push
and
push
push
jnp
out
cmp
popa
mov
pop
mov
fistl
mov
jl
or
fs
hlt
and
cmp
insl
push
mov
sbb
mov
push
xorb
add
pop
vpaddsw
(bad)
mov
pop
fs
push
scas
int
and
inc
cmp
clc
mov
cli
int3
jo
mov
mov
mov
mov
cli
scas
lret
hlt
in
sbb
push
inc
loop
jge
adc
sub
mov
sbb
stos
fwait

arpl
pop
mov
hlt
pop
xor
cs
in
test
out
mov
(bad)
lret
rcl
gs
mov
incl
sbb
or
(bad)
and
dec
mov
test
sub
(bad)
and
and
cwtl
fisttpll
mov
push
bound
(bad)
add
mov
psllw
gs
adc
pop
xchg
aad
sub
jno
aaa
push
mov
mov
cmp
mov
and
sbb
adc
gs
int3
jmp
or
xor
out
pop
dec
push
pop
or
or
in
adc
test
fstl
aas
mov
pushf
addr16
(bad)
dec
mov
insl
mov
lods
mov
push
mov
out
dec
fxch
sbb
add
cmpsb
lods
pop
lods
es
jb
lahf
stos
push
mov
mov
or
icebp
adc
or
mov
mov
inc
jnp
pushw
das
insl
scas
je
js
inc
or
inc
orb
sub
xor
scas
sti
pop
xchg
fwait

or
(bad)
sti
sub
sub
outsl
jl
das
imul
(bad)
in
leave
out
add
mov
lods
movsb
jnp
or
push
jg
cmp
test
je
adc
stos
movsb
inc
mov
mov
das
mov
loopne
xchg
push
ljmp
mov
xor
rorl
sub
sub
or
xchg
push
sbb
je
les
mov
push
es
es
adc
hlt
add
or
stc
and
xlat
fmull
insl
xor
cld
cmp
call
sub
pop
stos
ja
les
gs
push
call
in
and
push
out
shrb
mov
jne
jge
jl
test
shl
dec
dec
and
movsb
pop
mov
test
mov
or
push
es
(bad)
and
xchg
dec
scas
hlt
repnz
jbe
aas
lock
std
mov
es
push
dec
bound
popa
mov
call
ret
push
and
notb
dec
cmp
sub
leave
pop
xchg
lods
dec
nop

add
mov
insl
jl
mov
es
xchg
push
xlat
imul
aas
pop
(bad)
cld
sti
mov
fs
shlb
lcall
adc
iret
(bad)
push
insl
jno
xchg
inc
dec
dec
xchg
jge
movsl
xor
fcoml
jecxz
push
mov
inc
cltd
dec
mov
mov
outsb
enter
or
rcrb
out
sbb
(bad)
rcrb
or
push
or
inc
sahf
sub
into
mov
imul
lods
outsl
pop
mov
mov
cmpsb
push
bound
sub
out
cmc
std
pushf
shr
jg
mov
insl
dec
test
lcall
push
pop
hlt
outsb
xchg
pop
adc
ret
shl
push
lret
cmpb
xchg
sbb
movsl
xchg
rcr
lret
shll
and
imul
sahf
mov
outsl
push
and
push
sub
hlt
orb
imul
jo
leave
movsl
dec
stos
push
hlt
jb
cld
push
int
pop
lcall
ljmp
push
push
mov
popf
dec
jle
lahf
pop
push
sub
ret
sbbb
pop
pop
xchg
dec
lret
repz
mov
jl
mov
stc
dec
xorl
inc
(bad)
or
iret
(bad)
pusha
and
cmp
repz
nop

enter
mov
mov
fisubs
dec
ss
in
pop
push
(bad)
out
insw
adc
push
sub
div
add
fs
mov
into
mov
(bad)
lret
jo
lock
dec
push
ja
mov
pop
sbb
xchg
push
int
mov
out
movsl
xor
inc
pop
inc
dec
(bad)
dec
pop
and
outsl
xchg
scas
inc
pop
add
and
mov
inc
xchg
xor
inc
scas
mov
mov
dec
cmp
stos
push
xchg
jno
lods
out
ret
jb
and
push
loop
xchg
pop
dec
sub
out
adc
arpl
push
movsb
add
nop

bound
js
test
lret
mov
les
mov
pusha
call
jbe
icebp
pop
dec
psrlw
mov
pop
cmc
adc
xchg
xchg
(bad)
iret
negl
in
xor
(bad)
inc
imul
push
push
jo
loop
pop
insl
das
pop
mov
cmpsb
icebp
adc
mov
aad
sbb
xor
or
ret
adc
es
dec
pusha
push
push
loopne
adcl
hlt
roll
xchg
fs
cmp
mov
(bad)
shl
and
pop
imul
add
rcr
fiaddl
inc
dec
jle
push
jb
pop
mov
test
inc
dec
into
fisttps
jp
add
push
push
js
lods
sbb
jmp
or
fldl
(bad)
pop
aad
in
std
adc
push
or
imul
sub
sbb
iret
push
leave
lahf
rdmsr
sub
add
push
inc
enter
push
jp
or
mov
out
add
and
jle
sub
sbb
enter
pop
ja
aaa
cmp
cmpsl
dec
lods
lcall
sbb
ja
sub
sti
jge
mov
push
sbb
mov
mov
xor
jne
outsl
pop
mov
jp
jge
inc
mov
iret
out
es
lret
movsl
jmp
jbe
std
mov
out
adc
or
xor
adc
mov
sub
les
xchg
sub
loop
sub
pop
arpl
jge
push
aaa
(bad)
lea
cltd
std
lock
(bad)
jo
data16
cmpb
(bad)
out
add
xor
ljmp
pop
mov
jbe
xchg
push
test
dec
dec
mov
add
dec
inc
scas
lea
sub
dec
cmp
movsl
lret
adc
mov
mov
sub
inc
fldl
int3
mov
cmpsb
lret
js
and
jno
ss
cmp
insl
jno
sbb
aam
pop
or
sub
mov
dec
int3
sbb
xchg
push
xchg
lds
adc
aad
mov
dec
mov
add
mov
stos
sub
das
stos
lahf
sub
int3
insb
test
cmp
pop
out
clc
mov
xchg
mov
das
icebp
push
das
jno,pt
nop
outsl
in
xchg
cmp
mov
aad
mov
insl
popa
mov
ret
imul
add
pushf
or
adc
cli
mov
fnstsw
xor
cmp
pop
fdiv
or
adc
mov
xchg
mov
sbb
mov
arpl
or
jns
inc
xor
fisubrs
xchg
jns
lret
pop
fdiv
shl
cmc
mov
add
into
mov
lret
in
cli
add
fidivl
faddp
inc
add
in
push
xchg
loop
in
mov
test
and
ja
sub
hlt
fmull
outsl
daa
adc
in
xor
rcrb
out
dec
iret
inc
sbb
into
or
jo
sub
(bad)
inc
mov
sub
fnstenv
lods
es
sub
sbb
push
movsl
cmp
lods
pop
aaa
pop
sbb
iretw
xchg
pushl
sub
cmpsl
test
sbb
scas
adc
imul
fldcw
sub
mull
mov
nop

sbb
imul
out
scas
pop
pop
fistl
shll
loopne
repz
arpl
fs
jbe
test
loopne
stos
mov
lcall
int
jle
mov
inc
sub
sbb
xor
jno
rcrl
pop
jmp
mov
mov
popl
fnsave
xor
addr16
adc
push
jge
test
adc
lcall
xor
lret
sbb
push
add
iret
stc
sub
adc
push
xor
push
mov
push
arpl
pop
push
cltd
mov
mov
mov
mov
pop
test
fistps
dec
movsb
loop
(bad)
test
mov
sub
(bad)
lods
adc
push
adc
mov
inc
test
xor
(bad)
repz
stc
add
je
xlat
inc
cmpsl
scas
fs
ds
xor
xor
jg
int
xor
sbb
mov
jns
stc
mov
sbb
inc
jo
push
cmc
mov
jmp
lret
or
(bad)
mov
jne
jl
ja
fwait

jo
aad
insb
xor
aaa
imul
or
inc
shll
cmp
add
in
sbb
xchg
mov
cmpsl
lcall
inc
or
jno
addr16
adc
and
inc
popa
adc
imul
ja
sub
mov
insb
jecxz
inc
mov
mov
out
xor
mov
ffreep
shr
iret
jbe
adc
xor
outsl
lods
sti
out
in
js
nop

in
adcb
jae
inc
test
mov
xchg
in
dec
mov
xor
add
dec
inc
scas
(bad)
pop
xchg
mov
icebp
jo
loop
push
loop
fwait

out
jno
das
and
loopne
xor
les
inc
xchg
arpl
jmp
jecxz
mov
popf
inc
insb
inc
push
roll
lods
xor
sahf
mov
test
jnp
test
aaa
js
mov
or
sbb
pop
lret
(bad)
inc
jo
sub
inc
and
mov
call
push
inc
and
xor
lret
jge
xor
loopne
aam
lret
jmp
sbb
sub
xlat
adc
xor
pop
sub
jb
dec
icebp
aam
fstpl
lret
push
dec
arpl
cmp
xchg
push
push
add
(bad)
push
push
pop
push
push
incl
sbb
sti
adc
pushf
mov
xchg
movsl
mov
pop
lret
stc
lea
inc
(bad)
scas
push
sbb
mov
aaa
movsl
adc
stc
inc
(bad)
(bad)
nop

out
inc
and
mov
sbb
mov
jmp
imul
pop
cmpsl
test
call
(bad)
test
mov
cmp
and
jno
xchg
test
xchg
xchg
adc
cmp
xor
pop
dec
aaa
push
cltd
inc
mov
push
lret
and
mov
movsb
xchg
test
jae
and
insl
mov
lock
insb
push
add
xchg
xor
or
dec
pop
push
xor
test
addr16
outsl
in
mov
push
or
in
pop
test
jnp
jnp
shll
push
sbb
jbe
(bad)
ret
xlat
mov
and
aam
mov
lret
repnz
push
add
sub
(bad)
push
dec
pop
jbe
add
(bad)

lods
cltd
inc
and
xchg
add
mov
or
sarb
pusha
mov
shlb
outsb
adc
lock
push
test
push
hlt
repnz
sub
nop

xor
js
dec
pushw
sbb
dec
pop
ror
lcall
xor
sub
mov
xchg
push
inc
addb
repz
sub
inc
ja
insl
lcall
add
xchg
nop

xor
outsb
ret
xor
add
jo
mov
mov
jge
hlt
lret
push
cmp
or
mov
stos
pop
iret
inc
pusha
push
cmp
lret
stos
dec
cs
or
mov
ret
mov
andl
xchg
fistpll
adc
cmp
and
lret
cwtl
jge
or
out
(bad)
or
add
xor
push
cwtl
adc
es
loop
fbstp
fs
add
mov
test
out
call
test
mov
aaa
jno
push
xor
mov
pop
dec
sub
push
lcall
in
jns
mov
shrb
jne
cmp
shll
mov
sbb
stos
inc
addb
adc
mov
movb
test
cmpsl
sti
adc
mov
sbb
xchg
mov
mov
lret
sub
add
inc
pusha
fwait

add
je
push
repnz
and
adc
jns
lock
lds
jae
push
pop
pop
icebp
dec
in
ficomps
cmc
insl
or
mov
cmp
pushf
sar
icebp
mov
mov
je
jle
ret
add
icebp
test
lods
lods
loope
pop
inc
fistl
dec
sbb
ret
push
mov
dec
mov
cwtl
shr
imul
mov
arpl
push
rcr
cmc
cmp
mov
and
cmp
stos
aaa
jne
inc
scas
dec
jp
pop
mov
stos
or
test
push
aam
shrl
decb
cmc
test
sub
or
mov
mov
outsb
loop
sbb
movsb
icebp
inc
scas
inc
jno
inc
dec
adc
jno
lret
xchg
cwtl
in
js
inc
push
mov
and
cmp
adc
test
push
lret
out
xchg
ja
xchg
cmp
out
mov
stos
jb
push
loope
pop
or
mov
iret
add
test
push
xor
add
inc
js
pop
repnz
add
lcall
jg
ficompl
mov
popf
xor
shl
iret
popl
mov
sbb
iret
aam
pop
cmp
push
mov
sub
test
in
sbb
inc
shrb
test
lret
je
lcall
mov
jp
xor
inc
inc
dec
pop
lret
cmp
jecxz
cmp
xchg
pop
test
jno
ficoml
xor
cmpsl
inc
dec
mov
xchg
push
adc
or
adc
or
mov
jb
in
inc
addl
and
adc
test
pop
aaa
mov
sub
sub
in
sbb
or
rcrb
shrb
jmp
mov
scas
inc
call
mov
mov
cltd
and
and
add
jb
icebp
jmp
(bad)
and
aaa
adc
nop

mov
jno
ljmp
mov
adc
push
mov
xchg
mov
dec
or
jmp
test
nop

push
or
jne
xor
dec
lahf
mov
iret
cmp
xchg
outsb
pop
out
lods
movb
lret
xor
xor
and
xchg
test
mov
out
mov
iret
mov
inc
mov
rcrl
dec
xchg
mov
popf
(bad)
(bad)
sub
mov
or
call
lret
roll
(bad)
pop
mov
jae
dec
dec
inc
push
sbb
divps
or
jle
jmp
lds
and
popa
dec
xchg
mov
stos
(bad)
sub
mov
mov
stos
inc
arpl
xchg
andb
test
mov
mov
(bad)
sub
iret
jg
push
sub
and
ljmp
sub
xlat
adc
cmp
or
xor
or
adc
enter
es
push
xorb
sub
push
je
adc
push
adc
pop
loopne
xlat
mov
and
jo
andb
and
lret
xor
adc
jns
mov
adc
add
dec
popf
cmp
mov
ror
inc
xchg
lods
or
mov
cmp
mov
daa
mov
pop
int3
mov
test
pop
adc
fnstenv
dec
sub
jle
xor
inc
jno
and
add
push
rcl
popf
inc
repz
sub
sahf
(bad)
dec
and
cs
push
xor
push
inc
pop
in
cwtl
hlt
in
dec
push
mov
xchg
pop
xor
jae
inc
pop
xor
pushf
rol
lock
pop
test
jb
push
xor
fnop
(bad)
cltd
movsl
test
js
cmpsl
mov
sbb
(bad)
lret
je
inc
(bad)
lods
xchg
lock
cltd
dec
inc
or
add
jae
imulb
movsl
call
sbb
addr16
lods
mov
xchg
or
xor
lcall
test
pop
push
cmp
mov
repz
clc
or
rorb
sub
mov
cs
pop
sbb
rcrl
adc
roll
dec
lahf
or
mov
leave
fcmove
mov
jmp
inc
ja
repz
jno
pop
outsl
xlat
inc
fisubrl
dec
or
lret
test
mov
adc
mov
push
cwtl
xchg
(bad)

push
and
(bad)
mov
jnp
arpl
and
testb
icebp
ds
movsb
data16
dec
mov
push
dec
jae
shll
lret
aad
outsl
mov
adc
je
lods
xor
add
popf
aaa
mov
xchg
aas
es
xor
(bad)
lods
into
pop
xchg
pop
jmp
subb
push
and
and
insl
fmuls
mov
or
fiadds
lahf
fstps
loopne
into
inc
adc
outsl
xor
adc
in
xchg
lahf
out
sarl
jo
ss
jp
fidivl
sbb
jmp
(bad)
fisttps
lock
adc
andl
(bad)
adc
ficoms
sbb
js
push
int
pop
es
pop
sbb
push
inc
pop
mov
dec
lods
cli
fs
xchg
pop
int
sub
loope
ror
xchg
icebp
push
dec
lods
jo
cmpl
roll
mov
fistps
jg
(bad)
(bad)
mov
sub
cmp
push
out
pop
dec
in
adc
(bad)
or
adc
rcrb
mov
xchg
cwtl
mov
faddl
scas
hlt
jmp
adc
mov
out
inc
pusha
add
cmp
lock
popa
inc
sub
sarb
add
movsb
pop
rol
jge
pop
push
imul
sub
shll
in
mov
dec
loopne
dec
mov
jge
stc
jo
es
xor
pop
mov
ja
fnsave
push
out
inc
sarl
lods
imul
out
out
mov
jo
aam
mov
mov
ds
pop
lea
scas
out
xchg
sahf
je
test
clc
pop
rcrb
jmp
pop
sbb
sbb
pop
sub
out
adc
dec
int3
dec
push
mov
movsb
xchg
and
lods
add
inc
adc
mull
jg
mov
sbb
mov
cmp
mov
adc
xchg
jp
sub
or
out
test
(bad)
scas
rclb
stos
mov
sbb
and
mov
dec
lret
sub
and
dec
enter
rclb
shl
stos
adc
mov
sti
pop
and
fldenv
es
add
sbb
(bad)
push
ret
push
je
pop
es
leave
test
into
pop
shl
add
adc
sahf
mov
shl
push
(bad)
xchg
cmpsb
dec
cli
mov
adc
xchg
in
sub
xchg
jp
lret
adc
mov
dec
mov
add
adc
and
pop
aaa
adc
adc
dec
jnp
rorb
inc
mov
test
mov
mov
dec
adc
mov
aaa
or
rorb
mov
(bad)
pop
(bad)
fbld
mov
fwait

mov
seta
aaa
jae
adc
dec
mov
sub
or
mov
or
pop
or
or
dec
xor
add
jo
js
cs
or
inc
mov
dec
xchg
xor
aas
lock
fwait

cld
fmull
test
push
mov
cmp
lret
pop
ffreep
(bad)
imul
xor
push
mov
in
xor
popa
mov
mov
fldl
out
ja
jo
repz
jnp
fs
test
insb
out
lret
or
loopne
inc
es
jmp
pop
mov
cmp
adc
insb
inc
adc
les
jg
pop
cwtl
data16
add
jo
leave
add
fmull
mov
pusha
shll
lods
loop
inc
pop
pop
pop
pop
imul
out
mov
cmp
aas
dec
pusha
js
test
mov
mull
pop
in
testb
jge
fwait

in
mov
out
ret
lods
xor
adc
fistl
mov
lret
je
in
je
aad
sbb
cmpsl
sub
mov
jmp
push
dec
dec
ja
mov
and
push
ds
sbb
mov
(bad)
aaa
cli
mov
jae
cwtl
inc
pop
jno
ss
adc
es
xchg
lret
xchg
fs
mov
sub
push
sti
mov
ret
xchg
fwait

aaa
sbb
dec
xchg
pop
xchg
int3
jno
mov
(bad)
jne
movsl
lret
jno
sbb
xchg
cmp
les
fstpt
outsl
xchg
aad
scas
lret
(bad)
fdivr
mov
leave
jo
(bad)
imulb
(bad)
daa
inc
out
fadds
stos
sbb
sbb
xor
ja
rorl
add
sahf
lea
lret
(bad)
jb
aad
inc
cmovb
stos
xchg
xchg
dec
xchg
fwait

ja
mov
pusha
in
push
push
icebp
or
sub
test
mov
daa
sub
push
jbe
leave
popf
adc
inc
ds
xor
lret
stc
fwait

je
test
lret
das
jl
xchg
mov
jmp
push
les
aas
mov
jne
inc
pop
adc
sti
mov
cwtl
mov
mov
mov
lret
cwtl
js
fdivrs
xchg
icebp
mov
lock
popf
xor
jae
(bad)
sbb
nop

popl
lea
push
mov
mov
or
faddp
or
movsl
mov
xchg
jo
aas
sub
cmp
enter
sbb
ss
cs
stc
into
stos
mov
cli
shr
add
pop
repnz
push
clc
inc
je
lods
xor
in
aaa
arpl
xlat
push
or
mov
push
cmpsb
cmp
or
pop
sti
int
or
mov
add
pop
xor
in
test
xor
sub
mov
movsb
sub
mov
lods
inc
test
adc
lods
rclb
xor
insl
inc
sbb
cmp
in
jp
in
add
pop
sbb
in
xor
dec
jmp
pop
mov
stos
mov
inc
cmp
dec
cmpsb
cltd
rol
addr16
push
inc
cli
out
sahf
icebp
cltd
sbb
enter
mov
pop
xchg
push
mov
xchg
jmp
negb
inc
popa
cmpsb
jl
clc
dec
ds
cld
inc
add
inc
jp
(bad)
push
fbstp
jecxz
cmp
push
in
sub
mov
pop
fdivr
xchg
loopne
mov
scas
push
pop
mov
or
ss
lret
xor
fisttps
iret
sub
dec
add
iret
cmpsl
sub
mov
imul
adc
loope
fstps
cmpsl
fstps
mov
lret
jns
scas
push
(bad)
adc
add
xor
sbb
ja
xchg
repz
loop
dec
jp
testb
xor
cli
test
cmp
arpl
mov
sbb
adc
ret
dec
pop
mov
je
or
fs
xor
cmp
sbb
sbb
xchg
mov
sbb
iret
cwtl
stc
roll
out
push
pop
xor
mov
jp
mov
call
ja
push
cmp
pusha
and
sub
cmc
lock
dec
jmp
push
dec
mov
or
fwait

test
jle
or
push
mov
loop
stos
mov
or
(bad)
pop
mov
out
or
shlb
and
cltd
ja
lods
xchg
ret
hlt
mov
dec
lret
pop
mov
mov
ljmp
mov
(bad)
push
mov
call
(bad)
jle
jl
jmp
in
ja
pop
lock
iret
loopne
pusha
mov
sbb
cmp
push
mov
cltd
push
aad
mov
rolb
add
sbb
mov
ret
gs
and
clc
aaa
xor
push
adc
sbb
lods
xchg
outsl
xorb
jge
push
adc
les
push
mov
ljmp
das
(bad)
pusha
es
sti
pop
je
jnp
and
lods
inc
shll
lret
xor
inc
dec
inc
out
pop
pop
dec
push
int3
popf
jo
je
shll
mov
adc
jae
jmp
int3
pusha
je
pushf
inc
xor
negl
in
es
sahf
adc
fcmovu
sbb
mov
into
pop
push
insl
jl
adc
gs
test
and
into
lock
lret
mov
mov
jae
add
xchg
mov
loopne
(bad)
dec
mov
fistps
mov
jmp
dec
incb
add
int
fs
pop
outsl
sbb
in
jo
inc
inc
sbb
jp
movsl
push
push
mov
ret
mov
adc
push
inc
xor
and
movsl
cltd
lds
cmp
jmp
xor
cmp
(bad)
mov
mov
popf
mov
into
lds
inc
and
inc
pop
lret
xlat
outsb
ret
inc
dec
mov
adc
scas
add
mov
stos
(bad)
ficoml
imul
mov
icebp
xlat
icebp
je
or
movl
inc
popf
out
mov
es
add
test
(bad)
or
cmp
aad
push
out
add
xchg
enter
lods
dec
(bad)
and
ss
mov
jecxz
adc
clc
sbb
je
shrb
mov
sub
lods
sahf
push
lret
aas
and
push
rcrb
or
push
(bad)
push
andb
mov
movsl
and
pop
aad
sbbb
dec
or
sbb
mov
mov
lock
push
mov
push
test
out
and
cmpsb
add
aaa
push
cltd
push
mov
mov
jge
divl
jne
ss
out
test
jecxz
fisubrl
mov
icebp
pop
and
insl
xor
xor
lret
jo
pusha
mov
xor
mov
sbb
ljmp
jl
imul
movsb
sbb
cwtl
inc
jo
jno
pusha
int3
xor
stos
pop
sub
cwtl
or
lret
push
aas
inc
mov
jne
sub
push
hlt
mov
push
je
das
cmpsb
sub
leave
mov
dec
clc
lds
pop
test
shlb
pop
aas
adc
jmp
cwtl
xchg
xor
(bad)
xor
push
mov
mov
jl
xchg
push
pop
idivb
lea
les
cmp
mov
dec
fbstp
daa
in
in
shlb
clc
aam
xchg
loop
(bad)
in
vprotw
in
dec
sub
pop
ror
data16
ljmp
xor
lods
lock
jecxz
push
je
aas
adc
data16
loope
fs
cld
push
arpl
xchg
and
inc
fiadds
or
mov
cmp
fsubrl
les
lcall
add
add
sti
and
pop
mov
daa
mov
lods
mov
dec
mov
xor
pop
(bad)
stos
or
add
or
out
pop
or
test
clc
sbb
clc
xchg
xchg
loopne
sbb
lretw
jbe
sbb
dec
les
cmpsb
rorl
int
push
fwait

or
pop
in
push
aad
inc
inc
fs
dec
fbstp
daa
xor
sahf
jae
adc
mov
xor
mov
es
data16
xor
(bad)
je
mov
sbb
xchg
or
cmp
add
ja
enter
and
dec
sarb
mov
movq
xchg
add
sbbb
int
adc
int3
in
clc
xor
xorb
jecxz
test
sub
add
cmp
or
mov
jo
roll
addr16
sbb
jmp
sbb
mov
lret
je
loop
(bad)
ficomps
les
lahf
mov
xor
pop
add
mov
cmpsl
jnp
xor
mov
xor
mov
stos
push
dec
mov
xor
lcall
sub
or
pusha
rcll
xor
mov
ret
xor
hlt
mov
mov
scas
testb
cmpsb
mov
pop
jecxz
mov
lret
pop
mov
jne
push
call
das
out
mov
push
sbb
femms
push
insl
xchg
lock
leave
iret
adc
pop
adc
jo
(bad)
mov
(bad)
adc
ja
adc
mov
jo
pop
dec
adc
push
cmp
loop
rolb
fiadds
daa
mov
xor
jae
xlat
aad
in
stos
je
(bad)
fsubl
mov
pushl
mov
or
fwait

sub
pop
inc
cld
lods
imull
negb
stos
pushf
jae
mov
jae
cmpsb
es
xor
cwtl
cwtl
and
mov
es
pop
sahf
dec
fcoml
testl
fildll
sub
mov
xchg
cmp
add
test
inc
(bad)
sub
in
cmp
jl
dec
addl
push
dec
inc
inc
test
loop
aam
inc
jbe
jge
insl
ret
into
fbstp
ja
xchg
popf
lret
les
(bad)
(bad)
sbb
or
mov
xchg
sbb
pop
ja
adc
cs
scas
jns
push
(bad)
iret
jmp
cmp
stos
imul
push
adc
push
aad
int
cmpsb
or
adc
mov
push
sub
mov
mov
(bad)
jno
xchg
mov
jl
mov
push
xchg
xor
je
add
sub
dec
lock
xor
addb
cmp
scas
stos
data16
int3
lea
mov
out
push
shll
std
adc
push
pop
inc
xorl
sbb
xchg
jb
mov
inc
sub
pop
sbbb
mov
aaa
pop
sti
fwait

dec
in
dec
es
hlt
jmp
lret
cmp
dec
inc
sub
mov
test
dec
fmul
lds
pop
sbb
enter
lods
cmp
mov
xchg
adc
es
xor
cld
(bad)
sbb
test
sbb
rorl
inc
mov
and
jbe
mov
fcmovb
jecxz
daa
xor
lret
mov
mov
inc
fs
in
mov
arpl
sbb
jge
lcall
cmp
fwait

(bad)
imull
mull
lcallw
imul
jbe
adc
add
hlt
sub
add
inc
or
aas
xlat
jb
xor
xor
out
adc
push
lods
(bad)
out
xorb
inc
sbb
je
rcll
arpl
sbb
lret
pop
xor
sbb
shlb
pop
mov
adc
jl
and
mov
pop
in
jmp
cmp
test
lea
shr
popa
and
fwait

mov
jmp
je
push
lcall
repnz
adcl
xor
mov
adc
adc
(bad)
ljmp
pusha
loop
mov
or
xchg
in
stos
cmp
inc
aam
out
jne
ret
pop
loope
or
pop
test
test
pushl
or
sub
mov
out
push
inc
mov
ret
push
mov
push
test
scas
aaa
xchg
and
test
inc
stos
push
cltd
mov
bound
push
pop
cmc
outsl
sub
mov
sub
movsb
(bad)
(bad)
lahf
jmp
xchg
add
xorb
aaa
bound
cmp
std
adc
gs
sub
aas
dec
sbb
ret
pop
adc
sub
cmp
arpl
jb
sub
fsts
mov
and
xor
pop
icebp
fs
pop
sub
rcl
hlt
jo
fld
(bad)
mov
cmp
mov
push
pop
lea
cmp
es
enter
(bad)
and
cltd
in
lret
adc
es
lret
cmp
pop
addb
shl
mov
ljmp
mov
test
adc
int
imul
je
daa
add
stos
call
lret
mov
fwait

in
push
mov
clc
mov
scas
mov
inc
dec
rcll
cmp
jmp
je
xor
sub
and
(bad)
movsl
mov
nop

das
repz
loop
testl
xlat
dec
jl
lock
or
inc
sbbl
mov
add
cmp
mov
inc
ljmp
xchg
out
test
xchg
xchg
orl
or
sub
imull
inc
iret
or
call
lret
daa
pop
or
repnz
(bad)
jb
push
push
call
out
mov
out
inc
dec
mov
sbb
addr16
nop

add
pop
out
sub
lock
js
insb
dec
sub
xchg
aad
enter
jbe
movsl
or
out
test
mov
cmp
sbb
jns
or
push
xchg
clc
mov
std
push
cmp
mov
dec
and
mov
stos
push
mov
ja
int
dec
cmp
pop
pop
ret
aas
bound
sub
adc
dec
notb
push
xor
mov
shrb
pop
(bad)
shrl
test
lahf
mov
jecxz
pop
fs
cmp
sbb
movsb
out
enter
lock
cltd
inc
(bad)
popf
lds
shrl
ror
push
pop
push
adc
push
xchg
neg
sub
sarl
aas
cmp
outsb
xchg
test
lods
jno
jl
ljmp
jmp
xor
add
jne
inc
and
shrb
cmp
lock
sbb
sub
icebp
or
outsw
rorb
gs
cmp
fs
sbb
push
psllq
or
cli
repnz
bound
or
push
cmp
inc
fiaddl
sub
(bad)
mov
sbb
pushf
jno
sahf
pop
dec
scas
or
int3
hlt
aad
push
cwtl
or
push
push
test
adc
sbb
shrb
add
mov
mov
ja
scas
push
outsl
mov
xchg
jbe
push
das
add
lds
out
arpl
mov
arpl
cmpsl
(bad)
sahf
adc
loop
(bad)

pushl
add
test
inc
pushf
(bad)
icebp
in
js
jp
and
adc
lods
cmp
insb
and
pusha
xor
and
test
fwait

out
mov
ljmp
cmp
lods
icebp
aaa
push
add
inc
sub
div
cmc
repz
movsl
jnp
mov
stc
add
mov
xor
lock
mov
mov
mov
mov
dec
cmc
fwait

inc
push
inc
push
imul
mov
daa
cmp
xchg
fistps
enter
lock
lcall
test
xor
test
sub
xchg
sbb
add
fisubl
adcl
nop

fimull
lret
jbe
fcomps
sub
call
aad
iret
in
xchg
int3
pop
fwait

dec
mov
sub
test
addr16
mov
out
test
jge
in
fisttpl
mov
xlat
mov
movb
test
add
lods
cmp
and
gs
cmp
je
lret
mov
pop
and
sbb
mov
xchg
andl
xor
aam
aaa
clc
xchg
pop
inc
in
add
push
sub
add
cmpsb
mov
lds
je
repz
fdivr
sub
notl
sub
xor
jne
std
dec
insb
dec
jnp
inc
std
cwtl
scas
and
gs
mov
out
std
push
sub
(bad)
fsubrs
leave
fstps
mov
and
cmpsl
xchg
push
pop
popf
test
ds
adc
aad
push
xor
stos
cmp
stos
add
push
insb
imull
jbe
cmp
das
push
cmp
popa
or
adc
jg
mov
adc
push
inc
pop
sbbl
inc
mov
or
aaa
jp
shl
dec
jb
pop
outsl
mov
jo
cmp
sbbb
push
sub
repnz
lds
test
pushl
lahf
xchg
stos
(bad)
sbb
jne
pop
ja
aas
nop

repnz
sub
lcall
sub
pop
pop
or
xchg
add
in
jns
or
movb
push
xlat
shll
adc
mov
(bad)
shr
into
mov
cmpsl
out
push
fnstenv
sub
push
sub
bound
dec
test
loopne
inc
and
aad
shrl
shll
adc
sub
push
es
mov
xchg
push
aaa
push
data16
(bad)
stc
cmp
sar
fs
jae
fisubl
pop
jae
mov
dec
adc
mov
data16
pop
stc
(bad)
icebp
xchg
pop
cmp
(bad)
ljmp
popl
les
xchg
xor
inc
rcrl
mov
push
cmp
notl
out
jae
aam
ja
push
cmp
rorl
aaa
mov
addr16
or
repz
cmp
jno
sub
mov
icebp
pop
add
sub
stos
and
xchg
aam
pop
push
out
lods
mov
or
dec
pop
inc
orb
xlat
decb
stos
sti
jl
fldenv
nop

jns
iret
out
data16
neg
inc
xor
jp
rcll
push
xchg
xor
dec
shrb
inc
pop
and
adc
jbe
sub
clc
dec
or
adc
lret
sahf
roll
cmpsl
xchg
push
aas
and
cmp
mov
(bad)

add
xchg
add
dec
xor
sub
shll
rorl
mov
clc
out
in
dec
test
in
sub
xor
shlb
and
in
out
outsb
push
xor
mov
dec
sbb
mov
sbb
out
iret
ret
push
lock
mov
mov
mov
test
push
cmp
imull
nop

aaa
mov
jmp
inc
dec
cmp
roll
(bad)
outsl
mov
std
add
stos
pshufw
xchg
popa
(bad)
xlat
sbb
mov
mov
mov
mov
mov
cmc
adc
into
nop

add
adc
pop
mov
mov
jb
xor
push
or
mov
lret
rcll
loope
in
pop
lahf
icebp
lret
pushf
cmp
dec
jmp
ss
sub
out
inc
push
xchg
out
je
mov
dec
(bad)
xor
mov
lret
pop
sub
lods
bound
mov
sub
xor
ror
or
and
les
out
inc
in
ss
idivl
sahf
xchg
xchg
out
pop
test
pop
mov
or
mov
test
test
add
inc
and
jo
or
in
dec
sti
mov
adc
push
test
mull
jno
mov
andl
dec
xlat
mov
pop
sahf
cmp
test
fs
jb
in
jmp
in
stos
xchg
sbb
je
jns
or
push
dec
fbstp
lcall
adc
aad
jne
cwtl
lock
cs
adc
arpl
fs
gs
leave
push
fdivs
and
mov
dec
xchg
shll
icebp
jle
xor
fs
jmp
jnp
test
in
inc
jle
push
lret
jne
cmp
push
sbb
or
lods
aaa
pop
inc
repnz
xor
lea
mov
mov
imul
cltd
lds
shll
rclb
sub
mov
movsl
jae
sbb
pusha
pop
test
rorb
adc
in
mov
mov
xchg
or
xorb
dec
dec
pop
and
or
test
jb
dec
rclb
cmp
jno
aaa
pop
xor
cmp
dec
jae
xchg
and
xchg
divb
or
sbb
movsl
push
movl
hlt
or
nop

and
lods
out
mov
shl
xor
stc
inc
hlt
inc
add
push
shrb
cli
lea
cs
dec
jae
lock
lods
jecxz
mov
adc
scas
and
nop

push
in
ja
aaa
jmp
mov
loop
(bad)
aad
mov
jp
js
inc
lock
push
aam
addb
sbbb
jae
hlt
mov
cmpsb
lds
jbe
xchg
nop

mov
ficoml
(bad)
push
in
xor
push
sub
(bad)
data16
lret
xor
je
cwtl
repz
xchg
shll
stos
or
sbb
or
push
popf
dec
push
cmp
lret
cmp
sub
push
and
xchg
rolb
jg
inc
add
sbbb
mov
push
inc
mov
jbe
pop
movsl
mov
ret
fists
lret
insb
shl
jmp
mov
filds
cmpsb
in
fnstsw
in
mov
or
(bad)
fisubrl
inc
push
fs
mov
(bad)
bound
sar
shrl
inc
in
in
scas
fwait

test
push
push
push
test
inc
mov
cld
pop
cmp
pop
popa
popa
pop
adc
cmpsl
std
fisubrl
mov
repnz
lods
(bad)
incl
xchg
leave
mov
add
sub
pop
lea
sbb
daa
pop
xchg
xorl
iret
(bad)
ja
mov
sbb
movsl
adc
jbe
add
les
ja
add
push
push
les
push
insb
jbe
and
or
jb
call
fiaddl
inc
pop
popf
rcl
adc
xor
or
cmpsl
mov
xchg
cmpsl
sahf
push
xor
add
insl
push
push
xchg
add
fldl
cmpsl
loop
pop
(bad)
out
popf
xchg
ret
xchg
or
addr16
cltd
and
roll
and
sbb
shlb
xchg
jmp
sbb
call
sbbb
mov
push
jb
pop
cmp
jl
inc
pop
pop
and
inc
jno
jg
xchg
shl
shl
push
fs
int
cld
cmp
mov
xchg
or
shl
jo
idivb
test
push
aaa
ja
fs
add
dec
mov
test
(bad)
int
loop
incb
adc
or
push
stos
sub
or
test
mov
sbb
adc
push
aaa
mov
ret
fbstp
sub
pushf
dec
dec
or
ret
fmulp
mov
incl
gs
or
pop
xor
mov
aaa
sub
lret
sub
mov
xor
adc
fwait

cmp
add
pop
or
xor
je
push
fstpl
xor
push
xchg
jmp
test
adc
aas
or
outsb
xchg
push
jnp
cli
lock
enter
lahf
sbb
lcall
roll
xor
sbb
pop
sub
pop
pop
stc
je
daa
or
cwtl
jne
cltd
outsl
sbb
or
scas
aam
je
pop
xchg
cli
scas
arpl
mov
lret
adc
pop
(bad)
pushf
mov
movsb
int
in
out
fnstenv
pop
xchg
imul
mov
pop
jmp
lea
push
popa
bound
add
lret
or
insl
aaa
(bad)
icebp
sbb
icebp
lret
xor
decb
pop
imul
xor
xlat
xor
xor
mov
out
in
lret
jne
out
andb
mov
jp
ret
cwtl
or
outsl
cmc
lcall
shll
pop
icebp
mov
fld
stc
cmp
das
adc
jbe
mov
mov
add
sbb
lcall
movsb
imul
mov
fmull
(bad)
fnstsw
cmc
inc
in
mov
sbb
popf
xor
inc
call
mov
rorl
je
mov
aaa
dec
test
out
aad
inc
and
mov
adc
jp
xlat
iret
(bad)

sar
inc
xor
cwtl
push
push
(bad)
aaa
adc
(bad)
loopne
clc
adc
icebp
das
daa
xor
stc
jmp
int3
outsb
movsb
pop
movsb
adc
je
cmc
negb
loope
popa
lahf
jg
cmp
std
push
das
scas
sub
and
sbb
push
mov
rcrb
dec
jno
mov
pusha
insb
inc
dec
aad
inc
lahf
mov
pop
(bad)
adc
or
out
sub
xor
fcomi
sarl
rclb
cs
jecxz
push
into
push
pop
not
push
mov
mov
or
mov
xchg
es
jo
stos
push
(bad)
lahf
gs
sub
xor
sub
pop
cs
rcl
pop
adc
add
pop
jl
lret
sub
and
mov
push
jae
cmpb
fidivs
stos
cmpl
in
je
xchg
xchg
lcall
xor
or
lods
in
adc
or
enter
loop
imul
dec
add
cmp
fstps
mov
push
pop
(bad)
stos
push
imul
lds
push
or
pop
shll
inc
xor
adc
and
push
test
adc
mov
cmp
cmc
scas
pusha
dec
push
imul
push
test
cmp
sahf
xchg
adc
(bad)
mov
jno
xlat
mov
imul
pop
xchg
repz
sarl
sar
cmp
movsl
mov
in
xor
movsb
daa
push
inc
push
rcl
inc
stos
test
scas
cmp
mov
sbb
add
pop
cwtl
pop
icebp
rorl
hlt
sarl
push
and
and
jae
xchg
xchg
push
ret
cld
jg
jb
iret
test
dec
out
mov
fisubrl
popa
sub
push
dec
leave
dec
lds
sub
popa
icebp
std
test
in
out
jp
rorb
mov
dec
call
pop
sub
cs
jo
mov
shrb
data16
sbb
jp
icebp
lods
mov
cmp
enter
js
sub
sub
stos
out
popa
push
push
mov
mov
mov
or
int3
sbb
cwtl
std
xor
lods
lock
stos
insl
inc
sahf
mov
sbb
adc
fucomi
inc
pop
hlt
push
in
mov
or
js
scas
hlt
les
inc
insb
inc
lcall
stos
icebp
mov
and
lret
push
sbb
xchg
inc
nop

fwait

and
pop
mulb
inc
test
pop
pop
lret
xlat
mov
jmp
pop
imul
cli
les
popa
test
ljmp
pusha
addl
rcl
xchg
mov
or
je
inc
and
cmp
or
test
rcll
adc
inc
jne
cmp
adc
(bad)
or
loopne
in
adc
stos
cltd
icebp
in
sti
push
fidivrs
push
je
mov
cmp
pop
jno
dec
inc
sarl
fsubl
pop
xor
fwait

cmp
pusha
shrl
loope
sub
jno
add
mov
shrb
cli
out
and
stos
cmp
xor
jge
(bad)
push
(bad)
je
ret
(bad)
in
rcr
or
pop
gs
test
pushf
sub
ds
inc
ljmp
icebp
fdivr
sti
or
or
loope
mov
call
or
add
push
lods
in
cmp
adc
adc
rolb
pop
cltd
mov
dec
mov
std
or
adcl
dec
jo
insb
xchg
mov
pop
push
sbb
(bad)
mov
lret
fs
lret
or
inc
mov
(bad)
ret
mov
xor
std
mov
enter
and
xchg
mov
mov
nop

pushf
push
dec
shl
xlat
and
hlt
cmp
loopne
push
cmc
add
or
subb
or
push
or
adc
das
or
shll
mov
in
sbb
xor
ljmp
cmpsl
cli
lret
adc
jno
xor
in
mov
es
push
ret
test
(bad)
or
push
test
pop
inc
in
sbb
(bad)
adc
fwait

inc
(bad)
cmc
sahf
je
out
sbb
jno
mov
(bad)
jbe
jb
mov
mov
sub
fcmovne
mov
lret
push
add
push
xor
ret
push
xor
add
imul
rcrb
loop
sub
jle
mov
mov
add
rcrb
pop
adc
(bad)
mulb
or
dec
push
mov
insl
pop
cmp
sub
cmpsl
push
les
sbb
pop
jbe
and
test
js
mov
adc
add
decb
push
fwait

inc
mov
test
pushf
prefetch
cmpsb
mov
cmpsl
sub
push
mov
imull
es
xor
lahf
lahf
add
out
(bad)
fidivl
mov
xchg
and
adc
pop
push
push
mov
lret
rorl
mov
pushf
rcrl
jecxz
popf
jg
fimull
rorl
dec
dec
bound
mov
jb
sbb
push
ljmp
out
xchg
sbb
lds
adc
xlat
clc
addb
cld
arpl
jmp
cmpl
add
in
inc
ret
aaa
mov
shlb
leave
add
cmp
dec
cmp
rorb
idivb
cmp
jno
fldenv
jmp
clc
dec
dec
mov
loopne
fucomp
pop
mov
jae
mov
fcmovnu
xchg
pop
mov
jge
js
push
lcall
inc
lea
push
fs
push
pop
mov
and
add
insl
mov
mov
out
or
(bad)
xchg
mov
mov
dec
orb
(bad)
cmp
ljmp
ja
cmp
or
mov
je
xlat
xchg
xchg
iret
movsl
out
jg
popf
nop

test
int
push
pop
ja
fidivrs
test
jmp
adc
fimuls
pop
rcrb
pop
jbe
dec
int3
sahf
pop
and
mov
dec
jo
xchg
ret
mov
mov
inc
pop
pop
stos
xchg
es
mov
and
sbb
mov
out
rorb
testb
sbb
sbb
mov
sbb
mov
mov
fidivl
inc
or
mov
dec
aaa
mov
es
fwait

pop
repnz
test
sbb
lea
jno
push
jmp
inc
imulb
or
pop
xchg
pop
cmp
enter
es
add
jp
jle
mov
jge
popf
jne
ja
lds
sar
cwtl
jbe
push
push
aam
lods
xor
pop
iret
mov
mov
and
sbb
mov
jecxz
(bad)

cmc
mov
pop
mov
sbb
fsub
mov
gs
push
repnz
data16
mov
(bad)
pop
xchg
or
mov
mov
lds
xchg
int3
mov
adc
rcl
xor
(bad)
push
push
or
add
push
xchg
and
das
push
(bad)
idivb
pop
shll
scas
bound
mov
roll
inc
lock
sub
sub
jnp
pop
movsb
dec
(bad)
fwait

xchg
push
mov
jne
(bad)
dec
cmp
je
dec
andl
rcr
rolb
pushf
or
dec
ds
push
mov
cmc
aad
movl
fwait

xchg
lahf
into
test
dec
pop
sarl
or
push
test
aaa
push
mov
xor
ret
and
vprotq
negb
or
jo
das
inc
in
mov
insb
lds
mov
mov
rclb
shrb
scas
std
outsb
test
jl
jbe
pop
jge
jnp
mov
cmpl
(bad)
fwait

pop
xchg
popa
jo
xchg
inc
dec
(bad)
in
push
cmc
mov
mov
mov
add
or
push
or
fwait

lods
push
data16
lds
cmp
xchg
cs
and
jb
adc
je
inc
inc
mov
inc
sub
ror
mov
sub
xor
mov
jns
sbb
loopne
push
shl
sbb
mov
mov
lcall
ja
fwait

sbb
and
into
scas
adc
mov
cs
push
fdiv
rorl
mov
sti
pop
xor
sbb
fs
adc
outsl
jecxz
sti
inc
in
mov
enter
sbb
aad
adc
cmp
and
push
outsl
cltd
rclb
push
outsl
mov
movsb
ja
mov
mov
mov
cmp
push
sarb
xor
xchg
dec
imul
mov
jae
jnp
testb
je
push
lea
sbb
add
mov
jp
mov
bound
idivl
stos
push
add
mov
mov
mov
lret
dec
in
adc
fcomps
jmp
cmp
dec
out
dec
mov
xor
mov
jnp
mov
imul
xor
push
scas
xor
mov
je
jp
test
and
pop
insb
xor
outsl
xchg
dec
add
(bad)
push
scas
xor
or
dec
xor
push
mov
or
and
fs
bound
lods
loopnew
adc
mov
pusha
sbb
push
cmp
mov
jl
pop
sahf
cmc
and
out
(bad)
idivb
jno
call
les
test
push
push
negb
fcoms
cltd
lea
pop
fimuls
test
pop
pop
pop
stos
add
xorb
movsl
sbb
push
pop
xchg
jmp
mov
(bad)
pop
mov
cmp
sub
xlat
push
jecxz
iret
cmp
xor
cmp
das
(bad)
jo
add
inc
and
imul
cmp
push
jb
addr16
hlt
mov
jge
dec
(bad)
iret
jno
mov
xor
pop
pusha
dec
dec
ljmp
repz
push
jbe
test
movsb
sub
popf
in
pushf
sarb
(bad)
push
and
cmp
xchg
les
addl
push
popa
and
pop
add
repnz
add
sub
decb
orb
and
les
int3
xor
stos
push
jno
push
adc
mov
jnp
imul
std
inc
xor
mov
rcr
mov
(bad)
je
fwait

xor
add
cmp
jae
jge
in
mov
test
jge
clc
dec
cltd
pop
lahf
sub
jmp
insb
fdivl
adc
mov
push
stos
in
scas
dec
das
(bad)
movsl
or
aas
inc
into
inc
(bad)
xor
jle
jecxz
sub
sub
out
stos
adc
dec
jb
mov
loopne
stos
cmp
mov
mov
jnp
lcall
xor
daa
sbb
shl
stos
mov
lret
shll
xorl
jo
jge
pop
(bad)
(bad)
dec
sub
or
push
pop
leave
mov
sahf
sbb
hlt
je
jno
cltd
gs
or
add
inc
lret
test
pop
shl
dec
xor
mov
ret
dec
mov
mov
stos
sub
(bad)
aad
imul
dec
xchg
aas
sub
ss
repnz
rorb
rclb
das
addr16
adc
xor
inc
mov
in
lret
push
jnp
and
jmp
jb
lret
push
xchg
fimuls
jnp
outsl
inc
data16
push
jno
push
mov
sti
jo
jge
mov
rcrb
adc
mov
xchg
adc
xchg
lods
add
pop
mov
(bad)
mov
pop
arpl
xchg
or
pop
xorl
lock
cmc
inc
pop
es
xchg
fcmovb
adc
lock
aam
lret
fcmovnb
push
leave
rcll
int3
or
lea
es
stc
shl
aam
pop
(bad)
aaa
lods
fists
pop
in
icebp
mov
and
inc
int3
out
push
imul
test
(bad)
popf
out
dec
test
data16
aam
sub
xor
mov
xchg
popa
stos
arpl
lods
push
xor
aad
shlb
add
add
hlt
mov
jg
mov
cmc
and
out
xchg
mov
add
shlb
inc
in
nop

lret
cvtdq2ps
test
dec
add
outsl
cmp
inc
mov
ficoms
xor
pop
xor
xchg
mov
xlat
push
out
jge
out
or
sahf
mov
xor
xor
pop
scas
arpl
sbb
mov
pop
fldenv
xchg
lock
bound
fldl
(bad)
shl
inc
or
ror
clc
or
out
rolb
(bad)
mov
and
add
dec
mov
repnz
dec
mov
sarl
gs
into
scas
fmuls
lret
fs
mov
je
shlb
add
notb
bound
and
adc
sbb
popf
sub
out
ds
notl
adc
imul
push
sub
inc
(bad)
int3
sub
cmp
xor
scas
xchg
cmp
aad
push
ja
push
sub
rcl
and
pop
mov
jbe
sarl
cmp
(bad)
xchg
daa
and
out
popf
mov
(bad)
fsubs
rorl
sub
jge
gs
and
xor
dec
fwait

jne
(bad)
sub
ds
cmp
je
or
loopne
gs
sbb
fcomps
movsb
jge
pop
or
shrl
or
sub
xor
data16
out
push
push
ja
adc
test
pop
divb
gs
dec
outsl
adc
shlb
push
lock
ss
inc
inc
jno
test
mov
mov
loope
scas
sub
pop
mov
lret
and
mov
aad
stos
cmp
pop
adc
and
sahf
idivb
mov
lods
and
sub
xchg
(bad)
lock
je
jl
cwtl
popf
frstor
ja
xor
ds
cs
or
arpl
jecxz
ret
into
or
jbe
in
mov
mov
hlt
in
je
and
mov
insl
in
arpl
fiaddl
sbb
xlat
adc
repz
lret
lahf
loop
add
add
insb
xor
mull
push
mov
aaa
cmpsb
in
mov
mov
in
out
inc
pop
and
je
xor
lea
fdivs
mov
insl
mov
xor
fs
aad
aaa
add
and
dec
int
popf
outsb
xor
popa
lahf
jg
ss
sub
mov
stos
fisubrl
jno
cwtl
mov
cmp
ja
or
cmpb
jp
movsb
cld
push
mov
mov
push
negl
add
ret
xor
cwtl
arpl
sbb
cmp
jg,pt
(bad)
scas
shr
scas
jnp
sub
repz
push
js
jnp
sar
and
sbb
bound
pop
pop
das
xor
cmc
stc
push
into
mov
jp
lea
ret
jmp
inc
sarb
mov
sarl
add
outsl
sub
popa
rcrb
je
pop
inc
add
int
or
fdiv
jb
popf
pop
push
xorb
enter
dec
iret
enter
jne
mov
fisubl
push
push
xor
div
sahf
(bad)
xor
ljmp
jge
inc
inc
xchg
ret
jo
fcmovu
xchg
pusha
mov
dec
das
xor
fbstp
loop
imul
push
stos
and
lods
aad
push
push
arpl
fistps
arpl
sbb
loopne
mov
inc
lret
or
test
xorb
mov
push
rclb
or
out
mov
mov
dec
push
lock
mov
jb
lods
(bad)
movsl
jns
add
jo
xchg
add
lods
call
xor
sub
lret
mov
mov
xorl
xchg
mov
bound
sub
add
mov
mov
or
xor
loope
cmp
notl
dec
xchg
cmp
xor
js
fisttps
lahf
push
mov
mov
lret
and
inc
pushl
xchg
push
(bad)
push
ja
or
pop
stos
test
movsl
lock
int
into
data16
sub
or
add
and
lret
push
data16
sbb
dec
in
and
add
aam
pusha
xchg
and
push
gs
jnp
push
cmp
(bad)
xor
rolb
dec
cmp
jae
jo
push
jg
mov
jecxz
lahf
notb
mov
or
imul
ja
mov
adc
adc
xchg
cmpsb
mov
test
mov
lahf
aad
sbb
cmpsb
pcmpeqb
pop
std
pop
mov
into
sbb
cmpsb
scas
test
iret
mov
cmpsb
aaa
cmpsb
mov
pop
push
add
and
mov
pushf
or
in
cmpsb
jp
lret
mov
jbe
or
sahf
into
push
inc
(bad)
divb
push
xchg
out
sbb
call
lret
lahf
insl
inc
loopne
pushf
mov
aaa
xchg
xchg
xchg
mov
push
lds
mov
sbb
test
adc
rclb
movsl
and
ja
fwait

sub
jo
lcall
sbb
mov
je
add
(bad)
xor
or
frstor
jno
aad
in
sbb
lea
xor
add
aaa
arpl
jp
push
cwtl
int3
xchg
aaa
scas
pop
fxtract
xchg
ljmp
or
inc
fnstsw
negb
pop
addl
sub
lcall
and
aas
(bad)
mov
sub
adc
mov
or
cmpsl
ljmp
push
test
jb
mov
add
push
andl
aaa
push
sbb
mov
outsl
jl
(bad)
daa
je
xchg
xor
mov
ja
and
jbe
or
mov
sub
inc
xchg
adc
jo
dec
out
xchg
push
mov
sbb
ret
mov
in
pop
out
mov
xor
outsl
out
mov
sbb
repz
sbb
push
jnp
addr16
push
xchg
inc
mov
adc
add
and
cmp
pop
imul
mov
pop
jge
mov
testb
je
dec
loope
loop
and
imul
dec
inc
pop
jbe
push
jecxz
inc
cmp
loopne
push
jg
ret
adc
loope
xchg
pop
mov
or
sub
je
sub
dec
mov
je
xor
jb
add
scas
std
push
bound
mov
jmp
les
xchg
cmpsl
data16
das
lds
pop
(bad)
xor
mov
icebp
in
fistps
out
std
jnp
cltd
sbb
loopne
pop
pop
subb
pop
pop
jno
ja
pop
xor
adc
dec
xchg
lret
push
cmp
roll
ret
xchg
test
xor
mov
xlat
dec
enter
(bad)
fcoms
aas
inc
test
xchg
inc
pop
inc
jns
test
ss
cmp
lock
sahf
mov
das
inc
cld
sbbl
int3
and
mov
mov
(bad)
js
in
mov
add
in
mov
loopne
sub
test
xchg
cmc
cmp
inc
loope
test
fs
and
cmpsb
mov
dec
aad
push
dec
xlat
add
imul
pop
les
jg
(bad)
lock
mov
repnz
xchg
cmpsb
add
out
in
cli
popa
scas
or
int3
loopne
fildl
dec
sbb
dec
dec
sub
adc
outsb
or
aam
mov
xchg
push
sbb
loopne
iret
lds
rcll
nop

mov
int3
cmc
fwait

loopne
(bad)
jo
fwait

pop
je
add
lock
ja
testb
lahf
xchg
imul
pop
out
lock
push
cltd
inc
test
sub
loopne
faddl
jbe
pop
pop
xor
xchg
enter
xor
sbb
push
xor
bound
dec
pop
repnz
adc
int
cmpsb
inc
outsl
and
mov
pop
inc
daa
aaa
pop
stc
push
xchg
repnz
dec
rcll
enter
dec
outsb
mov
cltd
cmpl
mov
outsl
outsl
lahf
out
sbb
xchg
sub
aas
rcll
mov
xor
lds
add
lret
cmc
xor
std
and
push
lret
push
xchg
adc
divb
das
dec
test
or
adc
mov
dec
lea
scas
mov
data16
sahf
sub
or
and
pop
and
xchg
or
ficompl
sarb
dec
xchg
dec
mov
inc
adc
mov
sti
ret
push
and
adcl
loop
adc
fnstsw
in
mov
mov
sbb
fs
pop
dec
inc
lret
jno
test
ror
stos
test
dec
sbb
cmp
and
fs
push
push
xchg
dec
xor
mov
ljmp
mov
or
and
pushf
(bad)
lods
xchg
and
out
ljmp
add
ficomps
sti
daa
call
or
push
jmp
adc
mov
andl
cmp
mov
sub
xor
xor
xor
or
push
cmp
and
jle
sbb
jb
push
push
pop
shlb
cmc
xor
add
stos
ja
dec
sub
insb
jo
xchg
test
ret
sub
stc
insl
lea
aad
and
sbb
pop
adc
in
xorb
lret
pop
sub
xchg
idivb
sti
push
aad
arpl
(bad)
ret
jmp
and
sbb
xchg
push
das
(bad)
mov
jl
xchg
push
mov
bound
pop
push
das
ret
mov
push
pop
cmpsb
adc
clc
push
adc
push
jo
mov
mov
imul
pop
sbb
xor
pop
iret
in
jb
cltd
adc
das
(bad)
aad
scas
pop
popf
lcall
dec
mov
pusha
ficompl
sbb
(bad)
out
xchg
mov
and
inc
or
imul
push
test
pop
inc
loop
scas
jle
and
pushf
(bad)
leave
mov
in
push
mov
mov
mov
inc
dec
and
push
fiadds
ja
ja
mov
lret
jg
addr16
enter
sub
stc
stos
sub
fs
cmp
mov
xchg
mov
subb
push
sub
shlb
lret
ja
xchg
stos
rcll
lds
dec
xchg
dec
scas
popf
jl
popl
out
int
or
ljmp
sbb
and
sbb
and
clc
(bad)
js
xchg
mov
jne
cltd
stos
(bad)
lods
clc
jp
out
in
cmc
sbb
xorb
jns
xor
xor
cmp
es
cld
sub
fcomi
fs
xchg
scas
or
adc
and
cli
stos
lea
iret
(bad)
cmp
push
add
rolb
(bad)
popf
dec
cmc
adc
mov
test
mov
fwait

and
xchg
cld
test
loopew
rorl
dec
gs
push
pushl
push
arpl
pop
mov
rorl
sub
je
cltd
inc
jge
dec
adc
mov
and
inc
popf
mov
push
and
xchg
imul
js
jl
addr16
fcoml
out
pop
dec
(bad)
mov
mov
pop
int
in
out
pushf
insl
mov
pop
xor
in
addr16
lods
or
nop

lcall
stos
push
mov
dec
sbb
xchg
sub
test
daa
movsl
xchg
push
inc
fidivrs
arpl
adc
jl
cmp
pop
and
mov
sbb
cwtl
int3
cmp
fisttps
mov
sbb
add
jl
jnp
test
dec
push
jmp
mov
add
add
pushf
sbb
aad
scas
cmp
push
sbb
inc
adc
pop
cmc
add
cwtl
inc
gs
mov
lcall
inc
xlat
in
jae
sub
xor
jno
jg
idiv
shll
repnz
test
dec
xchg
xor
and
(bad)
jg
ret
or
outsl
aaa
xchg
popa
in
in
push
imul
pop
inc
sarl
pop
pop
out
push
push
xor
insb
call
xchg
add
cmp
es
xchg
xor
mov
stos
fdivl
addr16
je
pusha
fnsave
jnp
pop
add
iret
xchg
mov
sbb
repnz
xor
loop
loope
das
push
push
mov
inc
or
loopne
or
pop
loop
push
sbb
mov
mov
mov
cmpb
cmp
popw
pop
mov
and
inc
xchg
stc
scas
cmpsb
inc
add
jae
xor
mov
cld
sbb
out
inc
imul
fbld
ja
dec
ret
loope
fstpl
push
pop
out
sub
or
pop
dec
ja
xchg
xor
dec
into
das
pop
repnz
loop
rcrl
mov
adc
ret
and
and
sbbl
mov
test
(bad)
sub
xor
into
adc
xchg
arpl
xor
mov
xor
ret
jns
notl
sub
mov
lea
jge
test
mov
stos
xchg
add
mov
jne
es
fwait

and
push
cwtl
cmpsl
push
add
mov
stc
gs
push
je
pop
pop
aam
xor
adc
lcall
loope
pop
xchg
or
aad
cmp
in
bound
xchg
fdivrl
lock
out
push
shrl
lods
dec
fidivl
mov
mov
shrl
sbbb
je
dec
add
sbb
push
fnstenv
arpl
push
(bad)
cmp
das
scas
inc
fldt
mov
dec
pop
adc
push
mov
loop
loopne
jae
aas
icebp
xchg
push
sbb
push
notl
ret
jbe
ret
jle
inc
mov
in
(bad)
out
in
jno
xor
sbb
mov
sbb
push
cs
dec
je
cmc
mov
sub
sub
pop
inc
mov
fildl
aaa
or
or
test
lret
lcall
push
dec
bound
outsb
pushf
dec
mov
je
dec
decl
jnp
sarb
icebp
aam
shl
adc
dec
inc
jg
mov
xchg
jmp
lret
dec
cmpl
pop
(bad)
test
xchg
cltd
cmc
ss
mov
sbb
imul
loop
shl
add
adc
ljmp
loope
sbb
lea
enter
push
cmp
xor
push
cmp
es
mov
rol
or
xchg
cltd
inc
test
cwtl
and
push
jo
sbb
push
or
push
pushf
mov
movsb
pop
out
adc
loop
and
and
adc
or
xor
outsl
lret
(bad)
idivl
pop
mov
jne
out
cmpsb
inc
mov
xor
sub
inc
jo
mov
mov
out
(bad)
jb
orl
icebp
pop
dec
jbe
mov
push
arpl
clc
fnsave
sbb
pop
xchg
js
cmp
or
cmp
movsb
(bad)
xchg
fwait

call
pminub
scas
movsl
enter
rcrl
add
pop
lds
sti
(bad)
jmp
div
mov
sbb
and
test
mov
adc
xor
paddd
cmp
lahf
ljmp
jecxz
lods
push
xor
jg
sub
adc
mov
out
outsb
ja
add
sbb
ja
inc
cltd
adc
loopne
(bad)
lcall
pop
jge
xchg
sbb
pop
dec
lcall
xor
(bad)
out
iret
inc
inc
dec
test
cli
lods
aas
add
or
cmp
push
mov
std
shl
and
xor
inc
and
mov
pop
pop
sbb
sub
mov
sub
ljmp
lcall
mov
in
xlat
inc
rcrb
enter
sbb
(bad)
ja
add
inc
cmc
lret
inc
lret
cmp
jecxz
add
repnz
and
dec
mov
mov
mov
jno
dec
or
je
or
dec
mov
mov
and
es
xor
daa
(bad)
mov
les
pop
rol
xchg
in
call
fwait

mov
add
hlt
pop
or
loope
xor
mov
or
orl
and
pop
sbbl
cli
push
cltd
jne
inc
in
mov
ds
ja
sub
sbbl
adc
lds
adc
je
mov
jo
bound
xor
xlat
adc
enter
rorb
out
mov
jl
ret
jns
pusha
in
les
fwait

gs
(bad)
repnz
(bad)
rolb
mov
cmpsl
data16
and
loope
xor
(bad)
adc
popa
and
scas
sbb
mov
pop
clc
add
bswap
pop
push
xchg
cmpsl
cltd
dec
es
cmc
fs
jl
out
inc
or
icebp
jge
arpl
and
into
push
int
ret
pop
push
mov
or
push
in
sbb
push
mov
and
mov
test
jno
test
mov
inc
push
loop
mov
push
jmp
pusha
mov
sbb
(bad)
xchg
xor
xor
adc
cmpb
ficompl
dec
pop
sub
in
lock
or
movsb
jno
jo
in
lret
out
lcall
loopne
mov
xor
cwtl
mov
fisubrl
jg
pop
and
inc
sbb
loopne
mov
arpl
je
pop
add
scas
inc
aas
jo
push
jge
shll
into
and
jmp
sbb
push
pop
mov
test
pop
out
add
rcrl
adc
cltd
or
cwtl
inc
sbb
loop
inc
sub
push
(bad)
(bad)
rorb
(bad)
cmpsl
push
mov
repnz
dec
fcoml
out
or
insb
mov
neg
scas
xchg
and
cwtl
cmpsl
pusha
cmc
xorl
mov
xchg
(bad)
jo
cmp
jno
daa
mov
pop
idivb
xor
sbb
mov
and
push
jo
mov
jge
(bad)
(bad)
ja
push
add
adc
popf
push
pop
xchg
test
xchg
lcall
es
addr16
inc
adc
lret
push
inc
inc
insl
(bad)
adc
out
divb
cmp
data16
jb
jbe
xchg
orb
add
xchg
mov
push
pop
(bad)
sarb
cmp
lods
xchg
stos
sbb
push
repnz
test
dec
scas
push
jno
sub
adc
fs
cmc
and
fyl2xp1
xor
(bad)
jge
jne
and
loop
mov
xchg
mov
ror
add
sahf
sbb
adc
lret
sbb
hlt
movsl
xchg
mov
stos
lods
inc
cmp
(bad)
push
scas
shrl
push
push
out
cmp
inc
mov
pop
cltd
inc
test
xorb
or
imul
movsl
and
js
(bad)
jge
inc
fs
in
sbb
push
ret
adc
mov
pop
push
add
ja
sti
mov
dec
add
pop
loope
rcll
add
dec
in
test
xor
arpl
xchg
or
dec
ret
lret
pop
hlt
mov
les
and
dec
push
mov
jno
fsubr
iret
mov
and
out
out
xchg
adc
and
push
sub
(bad)
mov
divl
test
xor
push
xor
push
dec
mov
push
fwait

adc
sbb
xor
nop

cmp
dec
pop
repz
daa
xor
pop
push
cwtl
push
add
loop
jns
adc
adc
scas
jae
fidivrl
in
jmp
test
clc
cmpsb
mov
or
dec
xor
les
call
jnp
arpl
sbb
cmp
pop
or
shll
pop
lea
pop
pop
xor
std
jbe
ret
push
jno
jl
mov
pushf
fisubrl
inc
sbb
or
mov
clc
(bad)
clc
mov
sbb
push
aam
adc
fldenv
jbe
jae
pusha
push
adc
rcrl
ja
loopne
xchg
sahf
xchg
popf
andl
loopne
(bad)
fwait

pusha
jle
inc
(bad)
and
sbb
mov
pop
fisubl
inc
out
test
xchg
jle
dec
movsb
fwait

inc
aam
shlb
outsl
sarb
lahf
in
loop
imul
rcll
xchg
xor
add
push
cmpsl
loop
rclb
pop
and
shll
xchg
es
jae
aaa
push
lcall
jle
jge
ljmp
dec
push
sub
out
cmpsb
inc
cltd
sbb
xor
repnz
jno
(bad)
sbb
cli
call
dec
or
lock
adc
cmp
stos
xor
push
mov
adc
sbb
xchg
es
push
cwtl
jno
inc
xor
sbb
jno
test
pop
jmp
arpl
(bad)
or
mov
addr16
cltd
sbb
mov
sbb
dec
hlt
leave
out
push
cli
mov
xchg
test
loop
cmc
adc
popl
pop
fadd
jl
dec
stos
iret
nop

lods
mov
enter
dec
pop
sbb
mov
stos
jae
xchg
mov
repz
ret
xor
ret
mov
popf
rorb
mov
test
enter
xor
push
test
rolb
mov
xchg
repz
dec
pop
sbb
loopne
int3
out
add
sub
xchg
cs
fimuls
mov
sbb
popf
mov
and
hlt
inc
jb
push
cs
jbe
negb
push
loopne
inc
sbbb
pusha
cmp
movsb
jno
mov
(bad)

rcl
jle
ror
push
inc
sbb
or
sarb
or
(bad)
rclb
iret
push
sub
ret
(bad)
cmp
xchg
dec
add
repnz
mov
stc
adc
xor
call
pop
daa
cmpsl
inc
imul
pop
mov
jno
inc
mov
inc
cli
and
aaa
imul
mov
mov
jle
fincstp
sub
dec
je
popa
cmpsl
addr16
inc
rcl
pop
mov
add
or
sub
adc
aaa
popf
add
and
scas
addb
mov
mov
push
test
mov
or
mov
adc
cmp
xchg
jnp
negb
js
jno
add
sub
and
mov
pop
shll
(bad)
sbb
adc
(bad)
imul
insb
xor
cmpsl
imul
pop
sub
and
rorl
mov
test
imul
push
fs
xor
xor
scas
push
(bad)
scas
mov
xor
ret
ja
jno
or
gs
aas
outsl
pop
cmp
adc
pop
lock
pop
imul
pop
lock
mov
mov
mov
loop
inc
int3
ror
cmp
stc
mov
mov
inc
in
add
int
push
jnp
mov
add
fs
(bad)
cmp
lods
lret
xlat
jno
shll
insb
xor
arpl
js
testb
imul
xchg
or
pop
fmull
outsb
jge
and
scas
mov
lret
inc
inc
push
(bad)
pop
and
xchg
hlt
push
daa
outsb
repnz
shl
sbb
jb
cmp
mov
lret
pushf
icebp
fmuls
insb
lds
xorb
and
dec
jle
cmpsl
mov
add
cmpsl
or
mov
sbb
cmp
jge
xor
in
scas
lret
jae
jp
bound
sbb
stos
add
mov
sbb
dec
cmc
xor
jle
les
popf
outsb
jne
stos
in
mov
les
scas
scas
(bad)
adc
xor
inc
fistps
inc
xor
push
cmc
je
and
arpl
pop
lret
nop

je
inc
aad
xchg
sahf
cli
or
cmp
cmp
daa
movsl
dec
mov
inc
and
(bad)
mov
jne
ret
or
out
cmc
in
sahf
fwait

(bad)
fsts
xor
dec
jnp
inc
xor
xchg
pop
adc
(bad)
hlt
jmp
scas
cmc
add
out
test
sbb
fildl
xchg
clc
mov
(bad)
(bad)
out
xchg
outsl
jae
movsb
jno
rcrb
into
or
add
xchg
(bad)
dec
pop
pop
sbb
(bad)
fwait

mov
fsubp
out
pop
shl
(bad)
or
pop
or
push
mov
add
inc
adc
and
add
push
xor
fucomi
rcrl
inc
test
dec
hlt
cwtl
add
icebp
push
xor
loop
mov
mov
out
or
inc
add
jno
pop
xchg
cmp
vshufps
or
mov
pop
rclb
adc
push
cmpsl
pop
shll
xor
push
mov
pop
stos
je
test
test
or
fwait

push
push
in
sub
or
xor
cmp
fisttps
outsb
stos
lret
sub
je
or
jge
jno
cld
arpl
test
ljmp
(bad)
pop
xor
dec
andl
add
iret
cltd
cmpsb
inc
cmpsl
jg
xchg
lock
ret
sub
xchg
add
pop
cmp
lcall
add
push
je
addr16
icebp
cmp
adc
mov
mov
testb
popa
repnz
mov
test
stos
rcl
cmp
data16
push
mov
or
es
jbe
mov
lret
pop
mov
add
data16
daa
data16
inc
push
mov
rcrl
es
cmp
mov
lret
pop
mov
add
data16
data16
xchg
push
mov
jl
es
sahf
pop
mov
lret
pop
mov
push
xchg
push
cmp
je
das
and
or
es
sub
ret
lret
pop
mov
and
push
xchg
data16
push
ja
pop
shlb
ret
lret
pop
mov
or
inc
xchg
data16
aam
mov
imul
sbbb
pop
mov
or
lds
mov
subps
pop
outsl
pop
mov
lret
pop
mov
enter
mov
cmp
mov
iret
mov
mov
jecxz
push
out
or
hlt
mov
jecxz
stos
jecxz
cmp
inc
mov
jmp
lds
mov
lret
pop
mov
adcb
movsl
push
data16
push
daa
mov
lret
shlb
jno
mov
lret
pop
mov
adcb
inc
push
data16
and
pop
jge
push
xorb
aam
hlt
push
fs
je
jno
add
and
insl
pop
jge
mov
mov
hlt
mov
jecxz
stos
insl
addl
mov
mov
mov
push
lret
jns
hlt
push
xchg
push
je
jg
sbb
icebp
sub
fsin
pop
mov
pop
(bad)
xor
cmpb
ret
lret
xorl
stos
push
pusha
icebp
adc
cmpsb
jbe
mov
xchg
outsl
jge
fstp
jecxz
dec
shrl
xchg
push
test
rcrl
add
pop
fdivrp
xchg
sahf
jae
cwtl
test
dec
mov
mov
fcmovb
inc
jg
or
mov
pop
lret
xchg
psrad
stos
mov
xchg
push
(bad)

shlb
pop
fwait

pop
clc
lret
out
dec
imul
add
sahf
stos
jno
stc
lcall
cmp
jo
push
iret
xchg
jl
dec
movsb
test
imul
imul
mov
xchg
dec
or
mov
lds
out
sbb
and
stos
cltd
shr
and
mov
popf
ret
push
pop
or
jmp
pop
lahf
and
ret
mov
out
pop
movsl
push
xchg
scas
push
movsl
inc
inc
stos
fcoms
nop

insb
aam
push
mov
add
es
sbb
jno
push
je
mov
inc
cmp
and
xor
scas
inc
addl
jae
dec
addr16
jmp
inc
dec
pop
mulb
std
insl
icebp
mov
cwtl
cmc
and
in
cmp
hlt
mov
push
pop
mov
pop
lods
popa
xchg
es
mull
loope
add
and
mov
lahf
int
pop
lret
push
fadds
dec
adc
jle
aaa
jmp
add
popa
mov
inc
mov
fistl
pop
inc
xchg
dec
jge
pop
mov
lods
xor
cmp
dec
add
adc
rolb
inc
shrl
dec
sub
inc
jmp
dec
(bad)
mov
pushf
lock
rorb
pop
push
mov
push
mov
imul
pop
(bad)
js
mov
jp
in
shl
mov
mov
jae
mov
lret
testl
pop
jge
push
fnstsw
hlt
and
mov
jae
xor
cmp
jbe
aam
das
add
mov
mov
leave
out
jl
fisubrs
stc
jnp
cmp
inc
push
jb
adc
fnstenv
fdivrs
pop
in
stc
fcoms
xor
mov
and
cs
dec
in
xchg
xchg
add
(bad)
adc
cmp
pusha
push
dec
inc
sub
lods
jecxz
mov
lea
mov
pop
dec
xchg
mov
cmp
xchg
mov
jns
out
lds
es
mov
push
mov
pop
pop
jle
jae
outsb
add
nop

mov
(bad)
int
add
ret
pop
lret
fcoml
stc
aaa
cli
adc
neg
dec
cmp
enter
mov
daa
or
ret
(bad)
pop
push
mov
mov
jb
cld
lds
mov
xchg
push
lcall
add
adc
aaa
addr16
icebp
sub
fistpl
lods
insl
fnstsw
in
pop
loopne
add
lods
insb
mov
test
jecxz
stos
jb
stos
test
stos
stos
icebp
cmp
and
insb
mov
push
das
mov
mov
xor
adc
je
movsb
ljmp
(bad)
mov
(bad)
mov
movsb
cld
outsl
and
dec
into
lods
test
gs
leave
dec
ret
in
pop
ret
leave
mov
jge
xor
dec
cli
lret
pop
loop
sbbb
outsl
outsb
pop
jge
aam
mov
xchg
lret
fidivs
ret
stos
adc
push
mov
(bad)
sub
cmp
mov
out
add
jg
shrl
push
dec
cwtl
call
xchg
pop
add
lret
imul
mov
adc
pop
insb
jne
shll
cmp
xor
pop
inc
add
mov
fnsave
sbbb
movsl
dec
jne
mov
xchg
and
cmp
aaa
outsl
mov
inc
scas
mov
insb
mulb
lock
popf
mov
pop
jge
xor
push
out
cmpsb
push
stos
mov
pop
adcb
mov
lods
aad
inc
sub
push
cmp
or
roll
outsb
cli
lds
les
cmp
cld
jl
mov
popa
mov
hlt
loope
sub
add
lret
adc
mov
and
(bad)
lods
shlb
and
aas
xchg
add
push
insl
mov
sub
cmp
adc
divb
(bad)
cmc
mov
jge
ret
xor
in
cmp
je
je
add
aaa
pop
adc
mov
cmpsb
jae
test
insl
dec
lea
mov
fdiv
and
aam
sub
lcall
mov
xor
std
add
mov
lds
comiss
mov
mov
fmull
sub
push
adc
nop

popf
fsin
adc
fisubrs
push
jp
mov
lea
inc
arpl
je
stos
jo
sarl
rcr
js
and
inc
mov
ss
mov
ss
pop
lret
xchg
cwtl
dec
adcb
or
pop
pop
jbe
(bad)
jnp
mov
in
ret
sub
adc
data16
adc
jne
(bad)
sub
adc
xchg
pop
push
pop
aas
orl
and
stos
sbbl
rclb
hlt
jns
add
out
clc
jge
or
in
push
pop
fstps
das
and
push
pop
jbe
mov
mov
mov
mov
push
(bad)
adc
inc
ret
jmp
icebp
sbb
mov
(bad)
push
iret
out
or
jb
push
out
pop
inc
in
lret
xor
inc
push
sbbb
subb
add
ret
roll
sbb
xor
lods
jl
pop
shll
jae
cltd
jbe
pop
sti
or
ja
adc
arpl
int3
shr
sahf
jmp
test
dec
sbb
mov
rep
push
(bad)
jg
jne
xor
jp
(bad)
mov
lret
enter
je
cmpl
dec
das
mov
adc
mov
sbb
ret
lret
jge
sti
jbe
push
stos
xchg
inc
sbb
sub
cmp
lret
cwtl
sbb
pop
xor
adcb
xchg
push
repz
xor
movsl
or
xchg
push
push
jns
pusha
mov
or
test
xchg
scas
adc
mov
mov
test
adc
test
std
cmpsb
cmp
stos
(bad)
out
stos
xorb
(bad)
push
hlt
mov
dec
adc
mov
stos
or
pop
jno
mov
lret
pop
mov
adc
mov
icebp
cmp
or
cli
mov
mov
add
pop
hlt
mov
ljmp
or
imul
mov
push
lea
xchg
sbb
mov
int3
imul
mov
mov
xchg
outsl
xor
shl
mov
xor
stos
test
aas
xchg
repnz
dec
sahf
lret
subl
shll
imul
jbe
push
je
sti
xchg
add
enter
arpl
jbe
xchg
or
es
ret
cltd
mov
fsubs
loop
popf
mov
std
negb
rorl
in
dec
push
mov
adc
pop
jmp
pushl
shll
aaa
cmp
jne
shll
mov
mov
xorb
ljmp
pop
dec
ficompl
std
and
roll
jns
add
(bad)
filds
insl
dec
push
jg
cmp
push
push
jmp
dec
mov
rclb
icebp
into
dec
push
add
lret
imul
outsb
cmp
cwtl
lds
xor
add
mov
jo
call
and
xchg
adc
lahf
movl
imul
in
mov
push
push
adc
sub
je
pusha
jle
inc
lret
popf
and
and
mov
xor
mov
mov
sbb
mov
sub
cmp
push
jge
mov
push
imul
mov
test
(bad)
aaa
in
lret
(bad)
outsb
es
jmp
add
cltd
push
cmc
and
das
mov
ja
xchg
je
or
shlb
leave
mov
pop
ss
jl
inc
(bad)
mov
push
and
int
dec
and
shll
jb
xchg
mov
mov
lret
dec
cmp
cwtl
inc
push
(bad)
push
cmpb
add
adc
push
rcrl
out
dec
outsb
pop
rorl
dec
fnsave
cmp
push
out
push
jns
pop
or
mulb
and
loope
or
pop
mov
mov
mov
cmp
mov
(bad)
jge
push
jnp
jns
mov
(bad)

scas
imul
xchg
push
inc
inc
cwtl
je
fcmovnu
lcall
mov
loop
mov
shlb
data16
and
fcoms
inc
pop
mov
mov
enter
sbb
or
in
dec
je
js
ret
mov
sub
jge
mov
xor
shlb
and
push
shl
out
repz
pop
idivl
dec
(bad)
cmc
mov
push
out
stos
rcrl
shrb
shll
popa
inc
cmpsl
lods
mov
aaa
add
stos
xchg
je
dec
(bad)

test
sti
loopne
or
add
xchg
(bad)
mul
jecxz
sbb
and
repz
push
mov
cwtl
jmp
lret
xor
add
sub
cmp
mov
es
jne
rcrl
or
mov
inc
adc
mov
mov
aaa
stos
jo
and
jnp
mov
sbb
jns
push
mov
fdivl
adc
ret
dec
mov
mov
into
pop
stos
xchg
mov
lds
aam
add
mov
ret
pop
in
mov
cmp
jmp
rcll
ret
inc
(bad)
(bad)
imul
push
push
cmp
jge
fdivl
stos
lcall
aas
(bad)
adc
mov
inc
mov
out
jae
mov
hlt
ljmp
or
sub
mov
xor
daa
adc
mov
rol
mov
dec
mov
add
or
loop
mov
aam
jnp
das
push
test
lret
scas
sub
ret
mov
add
fdivrs
and
pop
les
test
push
or
iret
dec
inc
call
xchg
xor
jl
dec
cmp
cmp
inc
lea
shll
sbb
and
or
dec
test
aaa
jp
mov
es
rorl
mov
pushf
andb
ret
jge
and
ret
jge
mov
sbb
je
xchg
sub
mov
sub
or
mov
inc
add
jl
mov
jbe
mov
push
cmp
sbb
enter
mov
js,pn
aaa
mov
ret
sbb
out
clc
inc
(bad)
xor
jg,pt
pop
out
add
(bad)
fwait

mov
(bad)
cmp
mov
pop
mov
das
daa
icebp
hlt
int
pop
mov
mov
sub
jge
shlb
xor
jmp
lock
push
lods
push
jb
outsb
xchg
fidivrs
out
test
aam
xor
clc
clc
stos
add
ss
sbb
jb
sbb
cmpsl
and
push
(bad)
mov
sub
xorb
mov
pop
imul
jo
xchg
adc
push
fsubl
ds
push
imul
adc
int3
mov
dec
sub
out
scas
cltd
shll
mov
stos
je
adc
test
and
fwait

jge
mov
pop
push
out
pop
(bad)
(bad)
repz
je
je
cli
ljmp
popa
dec
push
sbb
mov
adc
mov
mov
mov
test
add
lds
jl
jmp
ret
arpl
xchg
push
lock
data16
mov
xchg
and
adcb
repz
mov
je
loope
leave
fwait

cmp
mov
sti
or
push
jb
in
lret
popa
lods
hlt
jg
and
aad
add
mov
adc
js
es
rorb
cld
jg
ret
lret
xorb
std
cpuid
or
mov
cmpsb
test
bound
xor
in
jge
lret
mov
je
mov
xchg
pusha
pop
into
mov
insl
sbb
xchg
xchg
call
pop
mov
bound
mov
pop
xchg
je
add
fmuls
aas
repnz
lret
pop
push
mov
stos
mov
sbb
and
andl
out
flds
je
je
fisubrs
mov
and
cmc
les
cmp
adc
lahf
sbb
sbb
(bad)
(bad)
mov
fisttpll
cmp
lret
fistps
jb
jb
jecxz
adc
pop
addr16
mov
orl
nop

arpl
stos
pop
push
cmp
push
push
rolb
sub
imul
pop
imul
ret
adc
xchg
enter
push
clc
mov
fistpll
inc
mov
adc
push
scas
hlt
push
adc
push
sahf
mov
adc
inc
xorb
out
mov
mov
mul
lods
insl
add
aas
xchg
(bad)
adc
(bad)
xorb
pushl
dec
lods
pop
add
xor
inc
and
adc
dec
xorb
or
dec
lods
xchg
add
dec
sbb
cmpsb
(bad)
adc
mov
mov
mov
addr16
lds
push
movsl
sarl
and
(bad)
adc
add
pop
daa
add
sub
or
les
(bad)
and
inc
xchg
xor
pop
out
es
lret
hlt
mov
lods
(bad)
roll
add
aaa
(bad)
pop
mov
jbe
and
pop
push
insb
sbb
adcb
out
inc
test
jbe
out
jge
sub
mov
mov
dec
daa
mov
call
push
pop
fs
jle
cmc
mov
shll
out
mov
inc
cli
push
push
push
rorl
pusha
mov
jge
in
test
int3
mov
loop
mov
mov
fsubr
je
sbbl
push
insl
test
shl
shlb
xor
shlb
fisubs
dec
lods
mov
cmp
test
push
inc
mov
cs
mov
dec
ficomps
xchg
inc
paddsw
mov
fldl
jae
je
and
mov
ljmp
mov
pop
int
xchg
and
push
mov
jnp
sbb
fwait

jmp
push
sub
cmp
in
xlat
ds
ja
arpl
cli
xchg
adcb
sub
(bad)
repz
popa
aas
addl
adc
pusha
mov
dec
push
sti
test
sub
push
lock
out
jl
cmp
push
out
dec
add
in
mov
(bad)

sub
xor
dec
push
decl
int
fs
and
mov
(bad)
cld
popf
jo
imul
faddp
lcall
mov
dec
push
sub
test
je
cmpsl
inc
sub
dec
in
and
outsb
rcrb
std
fcmove
pop
movsl
in
enter
out
mov
xor
(bad)
fiadds
arpl
push
push
cmp
mov
xchg
pushf
(bad)
or
outsb
xor
es
pop
jl
sub
pop
clc
aas
hlt
mov
xchg
sbb
mov
outsb
push
cmp
std
gs
lcall
mov
and
inc
push
mov
push
add
cmpsl
into
sub
mov
pop
cltd
imul
movsl
mov
mov
cmc
dec
out
add
les
stos
icebp
push
add
les
movsb
dec
icebp
les
inc
cmp
sbb
lahf
push
sbb
mov
aaa
mov
mov
stos
shll
call
mov
ficoms
mov
adc
push
sbb
push
add
(bad)
repz
ret
push
aas
scas
mov
mov
movsb
je
test
(bad)
negb
loop
loope
es
push
add
lret
pop
sub
mov
xor
sub
andb
sub
or
sbbb
(bad)
adc
jno
pop
leave
stos
je
inc
daa
cmp
pop
sarb
test
dec
lcall
add
push
pop
arpl
or
test
push
rcll
add
fsubrs
jle
push
es
insl
mov
jl
ja
push
popa
push
out
pop
mov
je
je
aam
loop
notb
xor
lods
sbb
fnstenv
push
inc
lcall
int
not
push
mov
and
sbb
flds
add
push
xor
sbb
inc
adc
and
pushf
and
push
stos
test
push
xor
out
push
cwtl
mov
push
lret
ds
pop
jns
cmc
push
or
icebp
cmp
aam
mov
or
popa
pop
shll
sub
pop
jb
sub
add
loope
shlb
mov
adcb
ret
idivl
sbb
cwtl
push
add
jecxz
adc
mov
mov
adc
mov
adc
mov
mov
adc
enter
jmp
jmp
pop
dec
out
mov
mov
pop
xchg
in
pop
test
sti
mov
jge
pop
bnd
popf
lret
sbb
js
fsts
stos
gs
sti
push
pop
mov
mov
adc
xchg
in
iret
(bad)
inc
mov
adc
shlb
inc
cmp
push
or
shr
out
dec
aad
jecxz
repz
xlat
pop
(bad)
mov
mov
test
xlat
mov
push
cs
and
xor
shlb
fdiv
lea
aam
sbb
(bad)
xlat
adc
mov
scas
fcoms
shrl
sub
adc
add
test
(bad)
adc
jmp
mov
(bad)
xchg
fsubrl
jmp
mov
call
adc
out
out
add
icebp
es
repz
pop
mov
js
push
add
pop
cli
shll
pop
in
xchg
xor
movsl
mov
jmp
rcr
push
inc
adcb
adc
ror
sub
adcb
jne
bound
lods
jne
arpl
shll
push
mov
stos
push
sub
hlt
cmp
dec
das
and
test
and
cmpsb
xorb
pop
lds
test
push
fldt
int
flds
sbb
inc
repnz
mov
pop
clc
xor
daa
fsubr
cmp
sbb
pop
jne
mov
aaa
cmp
and
ret
sub
inc
int3
icebp
jecxz
cmp
adc
cs
ja
movsl
in
cld
push
repnz
stos
ja
push
inc
or
out
cs
xchg
and
xor
pop
pop
add
xor
mov
cmp
js
mov
inc
lcall
test
(bad)
mov
insb
jecxz
jl
xchg
push
dec
popa
and
mov
mov
das
(bad)

push
(bad)
dec
xor
daa
mov
inc
mov
jge
inc
or
push
inc
push
sub
mov
mov
jb
in
(bad)
lods
(bad)
jg
dec
push
dec
xlat
cltd
add
mov
cld
mov
aam
inc
push
stos
mov
xlat
aaa
cmp
push
xor
push
pop
lock
jl
js
stos
leave
nop

lret
call
lret
arpl
shl
cmp
(bad)
rol
es
xchg
xor
cli
mov
int
loopne
pop
int
adc
push
subl
sbb
push
ss
in
pop
cmc
pop
mulps
in
mov
je
xchg
jle
test
(bad)
push
idivl
add
outsb
jl
jl
mov
out
mov
hlt
divl
push
inc
outsl
je
mov
dec
pushf
popa
push
jge
mov
sbb
push
mov
hlt
pop
std
sti
dec
cmpsl
ljmp
mov
dec
pop
cmpsb
aaa
dec
dec
int3
mov
mov
pusha
mov
je
shr
cmpsb
push
rcll
pop
nop

dec
loopne
shrl
lcall
cmp
push
sub
(bad)
xchg
shlb
xchg
xor
adc
out
sbb
aas
test
fimuls
or
push
outsl
push
dec
fnsave
int
and
fs
mov
cmp
out
jns
idivl
popa
xor
inc
mov
xorb
icebp
rorl
je
jmp
push
data16
rcll
std
pusha
ljmp
outsl
js
hlt
loopne
fists
mov
lret
into
cmp
lahf
ja
cmc
fldt
lods
push
mov
or
sbb
mov
data16
and
mov
dec
sub
jb
mov
cld
cltd
adc
shlb
cmp
fistpl
adc
test
push
mov
mov
test
ss
mov
popf
mov
icebp
jecxz
ja
mov
push
fsubr
ret
lret
stos
lret
out
fistps
ss
loop
out
orb
adc
push
and
js
push
mov
out
pop
out
mov
mov
sub
mov
pushf
aad
lea
push
out
dec
lods
nop

dec
not
or
movsl
rcll
mov
lar
push
ja
inc
clc
cmp
cmp
xchg
push
mull
inc
adc
imull
mov
and
(bad)
lock
lret
imul
mov
or
mov
push
pop
mov
pop
cmp
push
lods
push
xchg
push
popa
sub
cmp
cmp
data16
cmp
es
jge
ds
adc
stc
mov
mov
and
adc
sbb
sbb
jmp
cmp
inc
out
pop
mov
std
in
mov
stc
push
push
insb
jns
in
je
push
xchg
(bad)
push
bound
push
xchg
xchg
ficoms
push
mov
data16
repz
insl
fnstenv
and
push
iret
inc
int
adc
fdiv
cmp
or
pusha
faddp
(bad)
out
sbb
shl
inc
and
mov
aad
(bad)
sarb
mov
dec
sub
mov
pop
loope
test
nop

hlt
jbe
movsl
adc
je
add
mov
ret
mov
test
movl
hlt
mov
cld
mov
push
rorl
ret
divb
cld
addr16
test
adc
stos
adc
add
xor
add
loop
xor
push
test
lret
ret
out
or
nop

adc
jb
inc
das
add
(bad)
adc
and
dec
adc
mov
cli
sbb
sub
mov
hlt
(bad)
cmp
fmuls
or
inc
sub
push
mov
arpl
push
(bad)
idivl
popf
dec
or
jp
inc
data16
andb
push
inc
xchg
sbb
mov
pop
jo
movsb
or
(bad)
adc
pop
xorb
cli
mov
mov
rolb
mov
lahf
(bad)
loop
jno
push
mov
mov
hlt
mov
add
shlb
mov
dec
pop
js
xorb
shrb
imul
and
add
sub
sbb
insl
mov
mov
pop
xchg
dec
sbb
(bad)
push
cmpl
xchg
test
(bad)
adc
cmp
and
imul
je
je
rolb
bound
jnp
push
mov
push
out
imul
loope
jo
lock
ja
lods
cmpsl
es
lret
lcall
and
fs
hlt
mov
xor
add
push
mov
addb
pop
xchg
fsubrs
xchg
shrb
inc
popa
movsl
cmp
enter
test
test
push
cmp
and
ficoml
icebp
cmp
les
lret
test
loope
mov
or
cmp
daa
popa
xchg
jl
xchg
out
popa
inc
sbb
jno
sbb
cmp
stos
fisubl
icebp
cmp
(bad)

aas
imul
bound
push
pop
into
loopne
popa
dec
popa
pop
mov
je
jmp
jg
test
jae
jge
cmp
(bad)
popl
xchg
adc
adc
fisttps
ror
pop
sub
adc
cli
dec
mov
mov
adc
push
mov
mov
clc
pusha
outsb
pop
mov
pop
and
push
shlb
arpl
out
or
push
cmpsb
add
int3
hlt
sbb
int
xorb
push
jp
and
repnz
shll
scas
sub
icebp
or
mov
lret
xor
pop
stos
testb
pop
and
ds
jl
add
xchg
out
and
nop

stos
and
test
cmpsl
ret
shlb
cmp
jp
subl
pushf
test
movb
lcall
sbb
outsb
mov
(bad)
test
mov
cwtl
fwait

stos
xor
xchg
mov
adc
adc
subl
fwait

cli
pop
xchg
test
pusha
jbe
xchg
ud2
jns
xorl
fwait

neg
icebp
sbb
outsb
ljmp
jg
fcmovnbe
or
and
sarl
pusha
imul
mov
xchg
ret
loopne
inc
fcomp
jb
cmp
mov
inc
push
test
jle
outsb
inc
push
sbb
(bad)
mov
cmpsl
out
or
(bad)
pop
mov
push
out
nop

push
mov
mov
mov
pop
xchg
(bad)

fsubrl
inc
or
ret
or
jae
xchg
test
movlps
iret
xor
cmp
sub
repz
(bad)
icebp
push
and
stc
fists
call
arpl
inc
inc
sub
xorb
push
pusha
andl
and
inc
mov
mov
loop
mov
xor
int
ret
push
stos
arpl
sbbl
xchg
xor
fnstcw
dec
in
jno
mov
adc
or
negl
inc
inc
lahf
adc
fs
imul
or
std
xchg
jae
stos
xchg
adc
push
pop
mov
mov
je
adc
push
lds
pop
sub
cli
mov
xor
popa
adc
push
iret
inc
out
xchg
push
pop
int3
and
and
sub
mov
xor
ret
cltd
fsubs
loopne
adc
sbb
pop
shll
xor
mov
xchg
cwtl
adc
idivb
stos
je
stos
adc
insb
cmpsb
repnz
mulb
lcall
sahf
lea
loopne
popf
ss
je
adc
cmc
(bad)
aas
pop
(bad)
testb
pop
dec
fwait

mov
icebp
inc
cs
data16
clc
popf
push
jnp
lret
mov
mov
adc
xchg
push
shl
es
js
jae
pop
sbb
xchg
call
shlb
notb
les
mov
(bad)

(bad)
push
mov
mov
imul
xchg
or
cmp
je
movsl
inc
es
sbb
push
fildll
push
xchg
mov
loope
mov
mov
or
test
hlt
xlat
xor
popf
inc
sub
add
lods
pushl
insl
mov
imul
adc
add
(bad)
dec
jp
hlt
mov
dec
lock
(bad)
and
ficoml
cwtl
mov
pcmpeqb
in
mov
test
push
mov
js
inc
and
push
jmp
xchg
lods
xor
mov
and
push
or
mov
repz
mov
mov
inc
loop
mov
fimuls
loop
pop
sbb
jns
xor
shrb
out
test
sbb
lock
sarb
(bad)
mov
and
push
imulb
lcall
dec
lea
xchg
mov
lods
cli
(bad)
aaa
inc
cmc
sti
mov
imul
ret
mov
mov
repz
dec
push
and
push
sti
(bad)
sub
lock
nop

aad
sub
jnp
or
or
out
(bad)
push
and
je
stc
cmp
or
mov
mov
and
dec
dec
(bad)
in
lret
test
pusha
mov
popf
dec
dec
popf
mov
sti
cmc
(bad)
mov
cmpsl
lcall
ret
cmp
hlt
ljmp
add
lods
pop
inc
pop
mov
mov
das
push
xchg
repz
into
mov
call
add
lods
sub
mov
jno
in
pop
or
xor
jno
pusha
dec
jb
stos
into
mov
pop
das
into
push
in
test
lods
add
jno
in
xor
add
ljmp
ret
pop
mov
dec
and
cmp
or
arpl
mov
movsb
pop
inc
mov
iret
(bad)
adc
aas
pop
and
and
pop
cmpsl
push
mov
cmp
xor
sbb
push
sub
jecxz
mov
mov
push
jo
mov
dec
cwtl
outsl
dec
pop
cmp
mov
ret
sub
mov
sbb
and
mov
shll
mov
push
lock
xor
sub
(bad)
cmc
pop
aam
sub
xor
lea
(bad)
mov
in
cmpsb
dec
pop
shll
or
mov
sbb
movsl
out
das
fdiv
cmpsl
add
lcall
adc
icebp
shlb
mov
xchg
sbb
push
pop
and
adc
pop
hlt
rcr
mov
sub
mov
mov
leave
jp
pop
mov
cmpsb
push
stos
notb
push
or
xchg
cmp
pop
pop
nop

rclb
sarl
sar
out
repz
and
and
inc
je
movsb
divl
cs
sub
or
into
adc
and
jo
sub
insl
pop
pop
push
int3
outsl
daa
or
int3
imul
(bad)
(bad)
push
dec
icebp
mov
mov
add
in
mov
xchg
test
cmp
dec
push
(bad)
jp
movsl
int3
inc
cwtl
popf
stos
outsl
pop
cmp
pushf
and
shll
clc
jo
sbb
(bad)

sub
push
les
into
mov
inc
cmpsb
dec
mov
pop
subb
out
push
ljmp
test
data16
clc
mov
or
adc
xchg
dec
jbe
shlb
push
sbb
xchg
cmp
std
cmc
lock
add
and
mov
mov
pop
cmc
lcall
fldt
cmp
xchg
inc
add
or
cmp
mov
adc
leave
pop
mov
jge
push
adc
negw
mov
and
sub
cmpsb
movsl
lret
leave
xor
aam
cmp
into
enter
dec
aam
lods
mov
add
sub
sub
daa
icebp
cmp
popf
cbtw
call
mov
adc
inc
cmp
iret
inc
mov
mov
push
pop
mov
pusha
test
add
sub
add
mov
xor
jae
out
add
into
dec
shlb
mov
pop
mov
lret
cmc
(bad)
mov
xor
xlat
lcall
out
pop
cltd
cmp
xchg
sbb
and
in
mov
dec
add
iret
fs
outsl
repnz
jecxz
stc
mov
bound
add
push
loope
dec
sbb
and
movsb
xor
lret
sub
cmp
insb
and
aaa
xchg
cmp
mov
sbb
ret
sbb
cmpsb
mov
fwait

add
cmc
out
push
and
adc
shrl
lret
test
jecxz
jb
nop

stc
inc
into
addr16
cmp
adc
mov
jp
dec
sbb
and
out
icebp
push
sbb
mov
cmp
xchg
in
push
jae
hlt
fiadds
int
and
sarb
ljmp
adc
or
push
push
xchg
cmp
stos
mov
and
imul
mov
jp
repz
sbb
(bad)
(bad)
mov
jle
adc
jl
fildl
leave
jecxz
adc
adc
(bad)
or
cmp
sub
push
fists
cmpsl
mov
das
icebp
out
(bad)
mov
jge
xchg
lods
adc
out
push
mov
xchg
push
mov
push
das
stos
ljmp
pop
cmc
decb
fsts
aaa
aam
pop
mov
pop
or
push
jmp
js
inc
add
into
push
leave
test
aaa
sub
or
xchg
sbb
dec
(bad)
imull
rorb
lock
lcall
xor
adc
xchg
adc
iret
or
and
cmp
pop
xor
mov
pop
jnp
shrb
js
in
jl
mov
sub
add
inc
ja
shl
lods
stos
(bad)
aaa
imul
inc
xchg
sti
jo
pop
xorb
fs
pop
cmp
lahf
push
pop
mov
pop
mov
sub
mov
or
pushw
rcrb
sub
push
lcall
xchg
out
rcll
jg
sarb
mov
xor
(bad)
out
dec
adc
mov
out
cmp
lahf
adc
xchg
mov
and
je,pn
pop
mov
shl
cli
decl
push
xorb
pop
test
pop
shlb
mov
jno
fbstp
push
(bad)
(bad)
xor
jge
mov
iret
push
jge
dec
lret
rcll
cs
outsb
pop
sub
sar
xlat
and
aaa
and
or
outsl
pop
mov
in
arpl
stos
je
sub
out
hlt
filds
(bad)
repnz
push
mov
out
data16
lret
mov
stos
data16
pop
cmpsl
shlb
in
imul
imul
xor
icebp
xchg
xchg
outsb
ror
mov
xchg
push
test
rclb
hlt
ljmp
inc
mov
(bad)
mov
sar
je
push
push
out
push
aad
sbb
pop
xchg
repnz
orb
movsl
pop
out
mov
fdivs
mov
je
into
icebp
or
mov
push
mov
adcb
shll
loope
push
push
ja
jge
mov
es
mov
iret
xlat
outsl
data16
stos
jno
add
pop
mov
dec
or
adc
and
ret
mov
out
ret
adc
push
lea
add
ret
pushf
jle
xorl
lock
jge
pop
hlt
shll
je
xor
insb
dec
lret
cmpsb
mov
jmp
sahf
out
push
scas
ficoms
cmp
cld
jle
dec
mov
imul
fwait

bnd
dec
aas
mulb
inc
iret
pop
jmp
loop
mov
call
sbb
popa
mov
cmpsl
imul
out
out
out
inc
lret
and
cmp
in
and
pushw
jge
dec
das
cmp
push
lcall
push
mov
adc
push
jge
ljmp
sarl
lods
mov
aaa
mov
inc
or
jne
les
data16
loop
cmp
and
jg
nop

data16
roll
je
dec
mov
xorb
push
dec
push
fwait

es
sbb
ret
iret
jle
mov
dec
jno
add
(bad)
pop
mov
push
dec
add
daa
add
(bad)
mov
jnp
aad
ljmp
mov
pop
xchg
mov
sbb
lahf
icebp
jge
xchg
test
out
pop
sub
inc
adc
mov
and
(bad)
jo
adc
ficompl
push
out
add
push
inc
rcl
or
inc
jp
insl
insb
cmpsl
dec
popa
fs
fndisi(8087
fdivrl
mov
je
and
xchg
stos
out
enter
mov
int3
movsl
sbb
jbe
and
lods
fmull
std
lds
inc
jle
jae
loopne
loop
mov
popa
test
jb
test
xor
loope
bound
xchg
aas
and
ror
xchg
dec
and
and
test
mov
inc
mov
pushf
push
lds
pop
jo
jnp
das
dec
or
inc
adc
enter
inc
or
jne
ret
loop
mov
clc
test
ret
and
outsl
call
stc
es
inc
(bad)
xor
aaa
arpl
aaa
and
test
outsb
scas
fdivs
out
leave
lahf
mov
aam
(bad)
mov
icebp
cmp
mov
adc
mov
and
push
hlt
mov
mov
mov
sbb
adc
cld
inc
loope
in
fcoms
ss
cmp
rclb
data16
fisttps
(bad)
cmc
fisttps
lea
xchg
mov
or
adc
pusha
popa
push
sub
cmpsb
mov
or
cmp
dec
stc
mov
inc
movsb
jb
inc
jp
(bad)
aaa
fst
xor
mov
les
push
std
mov
shlb
mov
sbbb
movsl
data16
xchg
out
pop
adc
or
call
shrl
pop
sbb
les
or
add
adc
lret
out
sbb
insb
sub
mov
mov
xchg
xchg
adc
cmpsb
hlt
(bad)
repnz
mov
jne
insl
lods
jg
fists
loope
fcmovne
lahf
scas
pop
das
sahf
insl
cmp
mov
cld
sub
xchg
cld
cwtl
add
sti
jno
loopne,pn
or
and
into
imul
mull
testb
cmp
(bad)
jno
movsb
aam
enter
xor
sub
jne
and
inc
cmp
outsl
cmpsl
sub
xchg
add
lret
stc
mov
test
lahf
hlt
mov
mov
stos
aam
and
add
adc
and
aas
and
movsb
push
xchg
movswl
cmpsl
mov
aad
data16
iret
out
mov
je
mov
and
(bad)
mov
lret
or
add
pop
cs
(bad)
test
xchg
pop
mov
(bad)
into
daa
push
adc
add
and
ss
dec
sbb
in
in
sbb
sbb
mov
callw
into
jno
lods
pop
inc
imul
pop
stos
xor
cmc
cmp
cmp
cmpsb
(bad)
(bad)
push
sbb
enter
and
ffreep
loop
and
(bad)
mov
push
sahf
push
cmp
xor
dec
(bad)
mov
add
xchg
inc
cwtl
pop
lods
pop
fs
xor
jno
cs
aam
enter
xor
movsl
(bad)
aas
and
mov
fwait

mov
dec
inc
test
push
inc
out
cmpsl
or
and
xorl
push
repnz
test
mov
rcrl
push
loopne
sbb
pushf
mov
jnp
mov
and
je
add
shrl
jae
cli
mov
faddl
xor
push
mov
mov
aad
ss
or
and
(bad)
cmp
lods
jp
add
in
ret
je,pn
lock
pandn
mov
daa
cmp
xor
pushf
sub
fiaddl
xchg
ds
pop
data16
in
in
lods
add
cmp
inc
in
call
ljmp
jne
les
shlb
sub
ja
adc
decb
adc
test
aaa
pop
jae
lock
aam
enter
jmp
cmpsl
(bad)
je
cmp
and
addb
mov
addr16
inc
push
xor
cld
push
or
loope
jae
icebp
or
cmp
sbb
adc
stc
add
or
mov
mov
fidivs
cmc
or
sub
inc
push
aas
sbb
jp
jb
mov
sti
mov
dec
dec
cmpsl
mov
sbb
push
mov
mov
pop
stos
sti
cmc
sub
mov
sub
push
stc
dec
mov
and
xchg
fcmovb
frstor
pop
mov
add
push
clc
mov
imul
test
mov
xorl
(bad)
aam
enter
xor
aad
lahf
and
mov
fwait

xor
inc
sbb
push
pop
ss
in
jecxz
test
sub
mov
stos
enter
mov
xor
xorb
xchg
cmp
fwait

ds
mov
cs
js
arpl
roll
clc
pop
cmp
movsb
jp
add
in
imull
add
rdtsc
test
xchg
xor
daa
pop
inc
dec
push
jae
pop
pushf
xor
push
loop
fidivl
xchg
lcall
(bad)
jmp
mov
or
xor
push
ja
pushf
sbb
out
test
hlt
mov
(bad)
mov
(bad)
sti
inc
sbb
xchg
adc
add
cmpsb
jne
out
sbb
pushf
xchg
sub
repz
mul
pop
fistpl
lahf
mov
je
insl
cmp
std
pop
stc
(bad)
mov
addr16
xchg
mov
cmpsb
xor
jno
cs
fmul
jmp
and
mov
fwait

jmp
les
outsb
or
sbb
push
fcoms
mov
push
mov
test
lret
xchg
cld
je
fisubs
push
sub
push
das
xchg
adc
add
jae
cli
loope
cmc
xor
cmpsb
lods
mov
icebp
adc
adc
mov
js
stos
insl
cmc
cmp
lret
push
stc
(bad)
ss
cmpsl
sub
mov
add
fs
icebp
lods
out
bsr
call
in
xor
int3
mov
sbb
(bad)
cmc
pop
repnz
pushl
mov
clc
adc
mov
push
ds
xchg
sbb
std
stos
in
sbb
les
filds
outsb
faddl
sbb
or
fcoml
test
(bad)
xchg
xchg
cmpsb
shll
cmp
xchg
pop
adc
and
fisttps
sub
stos
pop
andl
loop
and
push
inc
and
push
icebp
sbb
lock
sahf
js
stos
adc
fisttpl
inc
mov
lret
inc
jp
mov
lret
mov
xchg
rdpmc
test
aad
out
sbb
add
cmc
inc
lods
xor
adc
ret
sbb
push
inc
mov
cmpsl
inc
pop
sub
lret
scas
dec
imul
push
cmp
arpl
sub
jb
jne
or
div
test
in
pop
decb
inc
mov
sbb
(bad)
loopne
mov
pop
inc
xor
je
push
xor
push
jne
out
sbb
sub
movnti
movl
inc
xchg
cmp
adc
mov
mov
sbb
push
sub
scas
ret
mov
cmc
push
das
loope
fistpl
sahf
mov
pop
outsl
(bad)
or
xchg
loopne
xchg
lods
mov
adcb
daa
fcmovnbe
lahf
lcall
into
lcall
push
lret
notb
es
fs
xor
jno
cs
add
xchg
xor
dec
and
pusha
dec
pop
test
andl
add
mov
es
fdivs
in
loope
jae
icebp
daa
xchg
mov
mov
imul
mov
push
lret
ret
or
push
hlt
mov
mov
fnsave
push
adc
cli
pushf
add
das
mov
mulb
testb
jnp
mull
xchg
(bad)
sahf
leave
loop
and
clc
push
mov
mov
jbe
andb
sub
and
stos
jbe
jno
jecxz
cmpsb
lret
test
add
fldt
movsb
loopne
pmaxub
jl
pop
les
fiadds
xor
adc
ret
mov
roll
xchg
sub
pop
mov
or
rorb
dec
xchg
aam
push
cmp
cmp
out
dec
xor
lods
fadds
jb
jne
or
push
adc
icebp
not
test
adc
xor
sbb
mov
pop
lahf
xor
(bad)
sub
xor
sbb
les
sub
(bad)
loopne
ud0
adc
mov
and
cmp
xlat
sbb
les
dec
mov
loope
(bad)
loope
fistl
fstps
pop
sahf
dec
cmp
(bad)
dec
or
sub
xchg
jg
shrl
cmc
loope
fistl
lahf
sbbl
sahf
jb
jno
out
sbb
jo
pop
push
hlt
testb
pop
xor
jno
cs
aam
enter
xor
cwtl
mull
lea
testb
inc
push
outsb
mov
das
sbb
or
mov
pusha
and
mov
fwait

sub
mov
outsb
push
cmpsl
fcomp
jmp
push
ss
test
mov
shrl
push
xrelease
bound
test
pop
mov
mov
push
mov
cs
das
xor
sub
mov
lret
jmp
ficoml
jmp
fisubrl
or
push
sub
hlt
jle
pop
or
mov
test
pop
or
decl
mov
sub
jno
out
sub
pop
fisttpl
xor
mov
out
add
push
sub
xchg
lcall
fidivrl
adc
negb
pop
inc
push
test
pop
ret
fstl
sub
gs
add
and
fucom
mov
sub
pop
pop
add
mov
outsl
out
add
or
push
loopne
mov
sub
fcmovnb
inc
mov
out
scas
(bad)
pop
pop
pop
sahf
sub
sub
int
dec
icebp
sub
sub
inc
arpl
inc
rcrb
push
data16
fmuls
in
sub
xlat
in
scas
outsl
stc
sub
push
xchg
mov
sub
adc
push
mov
(bad)
hlt
add
lret
sub
mov
scas
sbb
repnz
movsl
push
je
insl
mov
mov
mov
lds
mov
enter
inc
(bad)
leave
or
sub
fidivrl
dec
sub
cltd
icebp
(bad)
sub
xchg
hlt
mov
jle
sub
mov
jl
add
jmp
inc
cs
(bad)
pusha
inc
push
sub
xor
mov
mov
cmp
sub
mov
in
rcr
xchg
mov
pop
sub
fstpl
jmp
sub
xchg
cmp
xor
xchg
lods
xchg
inc
xor
int
sub
or
mov
mov
hlt
ja
adc
xor
loopne
push
sub
sbb
push
mov
ror
mov
sub
loopne
or
ss
sbb
stos
gs
pop
test
sub
subl
daa
push
and
push
xor
adc
inc
sub
data16
xchg
aad
lods
sub
or
jp
sub
fs
scas
sub
(bad)
popf
inc
mov
mov
sub
xor
and
xchg
add
xor
sub
outsb
mov
lds
pop
mov
or
sub
inc
sub
cmp
(bad)
push
pop
xor
stos
dec
mov
xor
(bad)
fsubs
aam
es
or
xor
sub
(bad)
and
push
mov
int
push
jp
add
in
out
sub
adc
sub
(bad)
js
stos
sub
repz
jne
das
or
mov
jae
cmpsl
out
or
sub
dec
mov
or
xchg
daa
mov
or
sub
or
pop
je
inc
mov
clc
fnsave
xor
lret
xchg
in
push
dec
push
jmp
sub
push
loop
fisubrl
xor
pop
out
inc
sub
insl
in
sub
mov
sub
xor
test
fildll
mov
fs
jmp
sub
or
inc
sub
sub
stos
ret
sub
out
mov
ret
pop
gs
push
inc
sub
cmp
push
cmp
call
(bad)
push
or
pop
push
xchg
lock
lods
jne
push
fs
xor
sub
xor
xor
repnz
lock
pop
outsb
push
inc
mov
adc
sub
filds
out
sub
nop

(bad)
arpl
sub
mov
popf
clc
stos
dec
inc
sub
in
aad
sub
and
sahf
jecxz
test
sub
data16
outsl
and
cmp
sbb
flds
lods
push
out
pop
iret
hlt
mov
in
mov
jo
mov
pop
cs
inc
inc
cmp
(bad)
mov
mov
dec
ret
xchg
sub
adc
fidivl
or
popf
cmp
dec
or
stc
sub
inc
cmp
inc
cli
sub
inc
subl
int
dec
rol
sbb
push
clc
mov
imul
nop

or
sub
filds
fidivl
xchg
sub
ret
lret
sub
jb
sub
out
(bad)
lcall
sbb
mov
xor
ret
and
cs
sub
sub
pop
aas
sub
subl
xorl
jno
adc
jno
dec
adc
je
add
sub
(bad)
and
xor
xorb
sbb
sub
push
jb
sub
sub
and
cmp
iret
sub
fcoml
sub
mov
stc
sub
movl
leave
pop
sub
(bad)
mov
mov
sub
xchg
inc
jmp
pop
push
in
fcoml
inc
aam
ret
cmp
push
add
mov
and
sub
fldt
sub
(bad)
cld
(bad)
sub
aas
cld
aad
cmp
orb
shlb
mov
xchg
cmp
add
sub
in
push
repnz
fidivrl
sub
mov
std
rcl
scas
adc
cld
sub
push
push
rorb
loop
pushf
outsl
cmp
jns
jb
mov
sub
mov
sub
outsb
xchg
sub
inc
push
jae
popf
fs
dec
sub
xlat
adc
sub
jp
int
sub
aas
jns
sub
outsl
sbb
sahf
sub
lahf
ljmp
rcrl
xchg
sub
pop
mov
sub
cmpsl
inc
and
mov
shlb
mov
in
sub
cmc
arpl
sub
icebp
andb
sub
jge
movsl
jno
rol
mov
jge
nop

push
insl
push
and
mov
sub
ret
repnz
fnstenv
ja
sub
mov
jl
push
fwait

or
sbb
(bad)
out
or
push
sbb
push
imul
stos
pop
rol
sahf
mov
aas
std
test
and
sahf
stos
cmp
sub
dec
decb
lret
add
mov
popl
mov
adc
cmp
sub
imul
(bad)
mov
or
nop

or
add
mov
add
movsl
sub
and
ror
repnz
add
and
sub
cltd
out
xor
inc
push
xchg
test
sub
mov
and
(bad)
sub
sub
inc
xor
cmp
pop
cltd
and
sub
xchg
pop
adc
jne
push
pop
sub
or
fbld
sub
aaa
(bad)
cmp
mov
adc
sub
aaa
xor
xlat
aad
sub
in
ja
jo
dec
fwait

sub
sbb
jo
ret
push
sub
cltd
outsb
sbb
sub
pop
xor
shlb
pop
sub
or
mov
scas
fsubrl
sbb
shrl
aam
jl
imull
inc
lea
cmp
sub
and
add
sub
and
mov
sub
fnsave
adc
imull
or
out
and
aam
in
jne
mov
iret
div
pop
sbb
sub
mov
xchg
mov
sub
push
xor
cltd
add
fists
xchg
xchg
inc
sbb
in
and
or
xchg
ror
xor
sub
xor
test
sub
push
lods
sub
insl
ja
int3
xchg
ja
sub
inc
xlat
push
pop
sub
push
sti
ljmp
(bad)
out
push
jecxz
sub
adc
bound
cmp
test
lods
imul
aam
fs
loop
sub
or
cmp
into
mov
scas
call
sub
repz
movsb
sti
pop
setno
dec
xor
mov
cmc
inc
sub
mov
mov
mov
cmp
sub
cmp
add
test
je
cmp
out
sbb
adc
sub
fsts
arpl
daa
mov
sub
lahf
push
outsb
sub
add
sub
add
dec
enter
loopne
mov
push
ret
sub
daa
sub
sub
fiadds
mov
je
popa
dec
idivb
std
mov
mov
outsl
jo
adc
or
stc
sub
test
mov
sub
push
and
iret
imul
rclb
in
dec
xchg
sti
sub
aam
sub
jne
pop
push
sub
aaa
jle
push
dec
pop
jno
in
add
cltd
mov
(bad)
ret
add
mov
clc
mov
add
testb
xor
push
test
fldz
xchg
inc
jne
xor
sub
jecxz
jl
mov
ss
sub
stos
iret
push
sub
adc
mov
inc
fyl2x
adc
xor
sub
ja
jne
adc
clc
dec
iret
xor
sub
and
mov
scas
mov
shrb
jecxz
scas
int
es
push
push
ret
xlat
push
jecxz
dec
rcr
push
sub
xchg
lock
sub
loopne
sub
and
stc
inc
sub
xchg
and
jae
lods
dec
sub
pop
xchg
pop
aad
stos
pop
push
fsubrl
dec
das
pusha
fsubrs
dec
or
insl
in
clc
sub
in
adc
push
sub
xchg
xor
int3
mov
push
sub
xlat
and
sub
aam
fisubrs
sub
push
lds
or
xchg
dec
stos
popf
jl
sub
pop
add
pop
push
shrl
out
sub
inc
sbb
cltd
mov
ret
lcall
fwait

pusha
and
sub
xor
jge
jno
fdivrs
sub
daa
xor
in
aaa
mov
pop
jno
popa
cli
shrb
sub
mov
xchg
jns
cmp
scas
cs
and
std
aas
adc
mov
sub
push
dec
out
sub
jo
mov
adc
sub
div
xor
jb
into
stc
push
inc
dec
sub
ret
sub
push
jnp
jo
sub
dec
or
mov
push
(bad)
or
sub
sub
gs
sbb
push
andb
jo
jp
xor
call
sub
mov
cmpsb
test
orl
aam
cltd
in
mov
sbb
cmp
cmp
jae
lods
cmp
imull
pusha
cmpsl
loop
sub
mov
mov
push
mov
fcoml
(bad)
in
pop
adc
outsb
jns
xchg
add
cmpsl
lods
pusha
ja
add
fwait

js
xchg
das
fsubrs
dec
and
inc
pop
idiv
sub
out
add
sub
add
cld
mov
sub
adc
ja
jg
js
and
clc
outsl
sub
and
arpl
sub
jae
rol
sub
adc
adc
sub
repz
inc
sub
dec
mov
sub
pop
push
rcl
sub
xchg
frndint
fistps
cli
jns
popa
int3
loop
sub
arpl
test
xor
pop
rolb
cltd
pop
cli
sub
aaa
mov
insl
cmp
fildll
bound
dec
sub
jb
ds
and
lds
nop

inc
add
mov
or
scas
jmp
dec
dec
sub
ret
inc
iret
adc
subl
dec
(bad)
or
sub
push
xchg
push
xor
xchg
mov
int
sub
test
mov
pop
mov
sub
jl
jle
sub
fwait

xchg
repz
or
xchg
pop
mov
and
loop
lods
mov
sub
daa
push
mov
and
loop
xor
enter
repz
outsl
fwait

lea
jo
jne
out
sub
lret
pushf
pop
mov
sub
rorb
jmp
sbb
outsl
int3
jg
std
test
enter
push
shll
pop
sbb
jle
stc
mov
sub
stc
xor
mov
fidivl
mov
sub
mov
repz
mov
mov
jnp
push
sub
repz
adc
mov
(bad)
mov
mov
push
ss
sub
and
mov
sub
xor
mov
add
jmp
sub
cmc
in
and
jmp
das
repnz
std
das
xor
mov
xor
repz
and
sub
sub
mov
in
sub
push
mov
mov
or
jnp
sub
sub
jl
cs
stos
and
mov
mov
jp
les
sub
mov
loop
or
sti
and
jge
mov
out
sub
sub
sub
sub
icebp
xchg
and
or
sub
lcall
cmc
fisubrs
cld
shll
sub
aam
aam
aam
sub
sub
sub
sub
sub
sub
sub
sub
aam
aam
aam
aam
aam
aam
aam
aam
and
sub
sub
sub
sub
xor
std
call
out
inc
push
sahf
push
sub
mov
push
push
sub
in
(bad)
mov
cmpsb
dec
cmpsb
sahf
cmpsb
xchg
fnsave
imul
lock
into
jl
add
sub
mov
aaa
mov
mov
sub
in
in
in
in
push
jecxz
jecxz
jecxz
jecxz
fsubrl
or
xlat
mov
sub
jl
jl
in
jp
jp
jp
stc
sub
insb
nop

sub
xor
pop
ret
sbb
les
les
pushf
sub
jmp
sub
lcall
cltd
cli
cltd
lahf
cltd
ja
out
mov
push
shrb
push
push
jle
xor
fwait

mov
test
xor
into
mov
test
mov
mov
sti
sub
mov
jecxz
test
test
test
sub
or
or
xor
pop
mov
cmpsl
dec
mov
mov
push
jp
sub
dec
ljmp
sub
mov
jae
pop
stc
nop

sub
les
les
clc
imul
cltd
lahf
dec
sub
out
stc
out
and
(bad)
push
stc
sub
dec
push
sbb
ss
enter
sub
es
mov
sub
mov
mov
and
stc
in
in
sub
orl
sub
cmpsl
movsl
cmpsl
shrl
arpl
stos
sub
jl
jl
sub
stc
sbb
imul
outsl
iret
outsl
pop
sub
imul
outsl
cltd
xchg
cltd
lahf
and
inc
out
sbb
sbb
aam
call
mov
mov
out
out
sub
lret
push
cmp
mov
outsb
mov
xor
xor
or
mov
jecxz
jecxz
jecxz
jecxz
sub
mov
jp
jp
jp
stc
xor
push
decl
jno
push
pushf
inc
pushf
popf
sub
outsl
sub
imul
lods
sub
jge
out
push
push
dec
sub
test
add
push
mov
cmpsb
pop
cmpsb
lret
cmpsb
insl
cmpsb
(bad)
sub
fnstenv
mov
js
mov
sub
ss
sub
mov
sbb
lods
into
inc
sub
enter
sub
fwait

into
xchg
aas
mov
cmpsl
sub
jecxz
sub
in
in
sub
ret
jecxz
jecxz
sub
scas
dec
scas
jns
test
test
test
or
or
aaa
sub
cmpsl
inc
cmpsl
into
sub
xor
mov
mov
sarl
and
pop
or
jp
jp
pushf
lods
sub
outsl
xlat
outsl
push
push
sbb
outsl
xchg
outsl
mov
lahf
cltd
mov
jg
sub
mov
or
sub
xchg
push
cltd
mov
cmpsb
daa
cmpsb
dec
cmpsb
sub
push
mov
and
pop
mov
xchg
sub
stos
xor
xor
fidivl
(bad)
enter
enter
mov
mov
inc
enter
mov
mov
push
mov
mov
sub
lret
test
test
and
sahf
or
out
ja
stos
jmp
cmpsl
and
sbb
cmpsl
adc
mov
ja
sub
mov
mov
xchg
mov
mov
sub
mov
jp
movsb
(bad)
cld
jmp
and
mov
sbb
dec
ret
les
or
jl
cmp
jmp
aaa
cltd
lahf
das
cwtl
lods
sub
out
mov
repz
sub
addr16
sbb
mov
or
aad
sub
xor
xor
adc
push
ss
cmp
mov
cmp
popa
mov
sub
and
or
or
cmpsb
mov
sar
dec
lcall
and
mov
pop
in
xor
out
sub
push
notb
push
jnp
cmp
dec
into
fxch
out
in
lret
sub
idivl
cltd
in
in
in
ss
jecxz
insl
mov
in
dec
test
test
or
or
or
insb
das
mov
mov
pop
sub
scas
jl
pushl
sub
das
stc
data16
sub
les
(bad)
out
adc
sub
pop
ret
sub
push
pushf
imul
lcall
imul
mov
or
or
ds
or
out
adc
ja
adc
call
gs
adc
and
push
adc
push
sub
cmpsb
in
sub
mov
cmpsb
xchg
(bad)
xor
xor
sub
ss
hlt
cmp
mov
in
int
pop
repnz
dec
xor
das
xor
insb
or
adc
(bad)
into
jle
aaa
sub
into
add
cwtl
into
aaa
into
xor
or
into
pop
into
and
mov
adc
addr16
mov
mov
mov
shrl
sbb
fdivrl
sbb
sbb
sub
int
repnz
jecxz
sub
sbb
jo
jecxz
jecxz
sub
scas
imull
test
test
test
insb
or
test
test
dec
arpl
sub
sub
or
mov
imull
or
xor
xor
or
dec
dec
sub
or
mov
adc
mov
mov
scas
mov
cmpsl
pop
cmpsl
lret
cmpsl
and
mov
shll
jb
enter
mov
(bad)
mov
mov
pusha
sub
stc
push
stc
add
test
decl
adc
das
(bad)
ds
lods
stc
pop
stc
inc
stc
addr16
les
les
sub
mov
out
ret
pusha
sub
les
(bad)
cmp
push
lahf
cltd
and
dec
pop
scas
xchg
scas
lods
stc
or
mov
pop
lods
xchg
push
dec
mov
or
mov
mov
xor
sub
jl
jl
jl
ljmp
icebp
ret
sub
sub
lcall
imul
cltd
push
lahf
xchg
lret
daa
sub
adc
pushf
push
mov
adc
mov
lods
cmp
int
sub
mov
mov
lea
inc
lret
inc
inc
int
and
add
in
in
cmpsb
dec
mov
in
in
in
jmp
test
lea
or
mov
jp
jp
jp
ljmp
jl
cmp
stc
ljmp
mov
ljmp
jg
sar
sub
pop
jmp
cmp
and
jp
or
mov
xor
sub
les
rcrb
pushf
cli
pushf
and
mov
cmp
push
cmp
out
clc
out
xlat
lret
pusha
jns
mov
inc
push
mov
push
addr16
int
in
iret
mov
xor
xor
xor
(bad)
pusha
sub
sub
loopne
xor
dec
cmp
mov
push
mov
dec
mov
in
sub
inc
mov
cmpsl
dec
mov
xchg
mov
mov
lock
mov
aam
jl
jl
jl
lret
test
(bad)
sti
or
sub
stos
ret
stos
ret
lcall
pushf
lods
in
outsl
and
outsl
inc
lret
xchg
sub
sub
scas
call
out
std
out
lods
out
lods
jne
inc
call
cmp
ljmp
jne
pop
push
sub
in
sub
cmc
cmpsb
in
cmpsb
sub
and
sub
jle
push
xor
call
mov
dec
xor
mov
ss
ss
pop
xor
xor
inc
lret
xchg
call
into
or
enter
test
and
push
fmul
sub
dec
xor
jecxz
mov
xchg
ljmp
je
stos
in
scas
jne
and
push
inc
scas
add
das
idivb
mov
cmpsl
cmp
loopne
mov
jbe
or
sbb
jl
cli
jp
jp
mov
mov
add
jns
jp
xchg
mov
mov
and
mov
cmpsb
stos
cmpsb
sub
cmpsl
cmp
lods
ljmp
jnp
mov
mov
out
int3
out
mov
jge
add
mov
sub
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
aam
sub
sub
sub
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
aam
sub
sub
sub
sub
sub
sub
sub
sub
and
and
and
sub
sub
inc
call
and
jb
sar
movsl
mov
add
pop
stos
(bad)

stc
insl
cmp
clc
call
bound
iret
sub
outsb
push
insl
lods
mov
mov
sbb
bound
sub
sub
xlat
or
fs
cmovne
bound
or
xchg
xchg
add
jo
mov
and
and
cs
mov
xor
cwtl
sahf
sub
mov
cltd
dec
test
mov
bound
fidivrs
and
lea
push
ljmp
inc
lahf
mov
jge
mov
xor
popf
mov
cltd
xchg
sub
outsb
nop

jmp
sub
push
int3
fisubrs
shll
fildll
popf
sub
nop

and
fsubrs
sub
mull
cmp
jmp
add
xchg
sub
rcrl
push
out
pop
cmp
pop
sub
sub
cmp
sub
adc
add
and
cmp
or
ja
xchg
imul
rclb
adc
adcl
bound
dec
mov
int
jge
jle
or
test
ds
bound
sub
adc
xchg
add
nop

cmc
push
jnp
mov
mov
in
fisubrl
dec
nop

add
xchg
test
shrl
rcll
js
lahf
and
or
pop
insl
sub
sub
ss
cltd
xlat
sub
pop
sub
adc
sti
or
decb
imull
bound
outsb
insb
mov
imulb
sub
cltd
mov
fwait

sub
insl
mov
dec
xchg
cltd
xlat
inc
(bad)
ljmp
jne
cmp
pop
out
and
sub
unpcklps
jb
mov
xlat
mov
sub
adc
mov
mov
sub
ds
gs
cmp
pop
xchg
sbb
jg
jge
push
fistpll
sub
cmp
mov
jne
lcall
push
outsb
ret
sub
int3
add
mov
lret
aaa
mov
lea
sub
sub
fs
xor
jmp
adc
xor
or
leave
jg
ss
push
or
fistps
mov
lahf
popa
dec
imul
(bad)
std
adc
outsl
sub
sub
fs
jne
push
adc
mov
sub
sub
push
xchg
adc
fmuls
scas
loop
xchg
lahf
shrl
imul
add
or
and
mov
and
sub
sub
popf
ds
jns
push
lret
cmp
xchg
addr16
es
jnp
add
mov
fidivrs
sbb
fs
fistpll
mov
sub
cmp
out
sub
test
in
packuswb
sbb
loop
fidivs
and
cltd
insl
aaa
mov
leave
repz
mov
gs
add
or
mov
and
push
movsl
add
add
sub
xchg
sub
add
xchg
out
fcom
add
mov
popf
xor
xchg
sub
mov
(bad)
imulb
roll
cltd
mov
mov
jle
cltd
loop
sub
ljmp
jmp
pop
sbb
insb
in
(bad)
arpl
sub
push
bound
sub
wbinvd
lahf
sub
mov
xchg
addr16
(bad)
stos
cltd
xlat
cmp
bound
xchg
insl
mov
push
add
mov
xchg
add
adc
dec
fs
stc
lods
mov
cld
lahf
sub
xlat
bound
xor
mov
fs
sub
xchg
daa
shrb
bound
dec
cltd
fs
sub
or
sub
aas
and
add
aas
test
cmp
push
adc
push
cmc
and
in
mov
mov
xor
sub
test
sbb
repz
mov
and
cltd
sub
push
fdiv
ss
imul
out
insl
shl
xlat
cmp
test
lods
and
out
fsubrs
nop

cltd
out
cltd
lahf
fsubrs
test
iret
wbinvd
shrd
xlat
cltd
cmp
inc
mov
shrl
lods
cltd
ds
or
mov
pop
sub
xchg
dec
cmp
dec
cmp
jmp
aaa
repz
xor
jmp
fisubrl
out
in
push
jmp
int3
in
push
xor
iret
leave
add
cmp
mov
call
lret
out
sub
scas
es
sub
loope
out
jmp
mov
sub
out
sub
ljmp
cltd
sub
in
mov
sbb
add
cltd
and
das
in
shr
das
lret
jle
das
call
push
sub
sub
imul
std
jecxz
imul
sub
test
loop
lods
mov
mov
cmp
mov
mov
and
ja
sub
cmp
sub
and
fnstcw
rclb
sub
sub
mov
cwtl
ss
mov
lahf
fldpi
sub
outsl
outsl
ds
vpmacsdqh
add
sub
in
sub
insb
mov
and
(bad)
xor
daa
jmp
inc
lret
sub
cmc
jnp
xor
dec
rsm
and
inc
lret
sub
mov
or
and
jl
das
daa
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
bound
xlat
js,pt
out
pop
xchg
sub
clc
nop

add
mov
std
inc
push
dec
cs
push
outsb
sub
repz
mov
push
das
sbb
clc
jnp
(bad)
test
xchg
pop
jae
dec
sub
xlat
push
jae
xlat
incb
jp
lret
jo
xchg
rorb
out
lods
sub
lods
mov
nop

mov
xlat
cmp
cmp
dec
sub
das
sub
cltd
mov
loopne
insl
fsubrs
sar
insl
or
sbb
mov
or
out
and
lock
orb
jno
mov
addr16
popa
jmp
cmp
das
(bad)
xor
push
fs
insl
cmc
jle
stos
je
mov
and
loop
popa
lock
insl
push
cltd
das
mov
lods
sub
nop

mulb
aaa
mov
jne
and
nop
or
sub
pop
sub
mov
push
inc
sbbl
test
cmp
cmp
clc
pop
imul
xlat
repz
cmc
stos
js
xlat
(bad)
xor
clc
imul
clc
xor
sub
and
push
xor
mov
cmp
dec
or
loop
xchg
ljmp
es
std
cmp
lahf
jnp
nop

std
push
push
or
and
and
imul
adc
pop
icebp
int
sub
mov
cmp
or
push
sbb
cmp
in
sub
scas
outsl
cmp
xchg
add
movsl
or
stos
cmc
in
xlat
xlat
or
jno
and
and
pop
mov
sub
adc
lret
dec
not
insl
sub
outsl
lret
sub
xor
std
push
adc
es
cmp
and
and
sub
xchg
out
bound
int
sti
cmpsl
inc
aas
insl
and
or
mov
or
add
scas
mov
nop
and
daa
mov
push
gs
xlat
pop
js
pop
sub
pop
js
lret
pop
sub
sub
iret
sbb
inc
mov
pop
and
jle
jmp
loop
nopl
or
cltd
push
fs
outsb
mov
mov
in
mov
push
ljmp
xor
das
sbb
xor
test
clc
popa
or
mov
sub
cmc
sbb
or
fs
add
scas
sub
push
or
and
or
insl
outsb
test
mov
shlb
mov
sbb
jg
jnp
jge
fsubrs
adc
js
or
cmc
sub
popa
and
dec
nopl
or
cli
sbb
bound
mov
sub
adc
das
scas
ss
lods
sub
cli
popa
and
(bad)
cmp
int
stc
and
das
nop

add
and
in
sub
ljmp
mov
pop
xchg
sub
in
sbb
imul
mov
adc
clc
sbb
das
les
mov
push
or
int3
sub
mov
cmp
jp
or
cmp
sti
int
scas
or
sub
and
cli
nop

pmulhuw
push
sbb
lahf
mov
and
cmc
mov
dec
aaa
jl
adc
push
or
mov
cmc
outsb
mov
jnp
std
pop
xor
imulb
sbb
js
nop

cmp
dec
jmp
js
call
xor
pop
pop
jmp
mov
daa
mov
sbb
stos
push
sbb
std
cmp
cltd
sub
adc
sbb
jmp
sbb
cmp
sub
loop
fs
(bad)
and
mov
int
daa
sbb
push
aas
int3
jle
and
cmp
(bad)
orb
outsb
jg
lahf
outsb
insl
repz
nop

outsb
sub
mov
in
mov
mov
cmp
or
inc
cld
adc
mov
je
push
jbe
sub
add
stos
cltd
and
aas
xchg
mov
push
mov
sub
and
stos
mov
in
das
das
jl
cmp
push
repz
and
sbb
in
ss
sbb
aam
mov
inc
mov
outsl
sub
jo
lcall
clc
lret
xchg
fisubrs
and
lods
jmp
cmp
xchg
xlat
dec
clc
lret
orb
and
das
cltd
cmp
nopl
add
sub
bound
dec
cmp
jle
fcom
sub
mov
(bad)
push
push
lcall
or
sti
push
push
mov
add
sbb
cmp
sbb
test
or
and
add
pop
and
and
dec
daa
lea
out
cmc
outsb
cmpb
pop
fwait

rorb
jns
cltd
push
outsb
shll
imul
push
lret
popf
xchg
mov
jge
pop
mov
pusha
mov
fisubrs
push
popa
and
adc
aas
bound
cltd
push
out
sub
cmp
cmp
add
sbb
or
nop

push
pop
mov
and
xchg
mov
jbe
ds
jle
nopl
mov
adc
sbb
jnp
push
outsl
cmpsl
popf
daa
cmp
push
lret
cmc
xor
out
jnp
jmp
test
js
push
test
sub
adc
fwait

sbb
popf
wbinvd
sub
insl
or
add
sub
rol
sub
sbb
cs
cmp
shll
jle
add
pop
outsb
cmp
jle
cmp
imul
testl
push
jmp
fimuls
sub
jle
fs
fwait

out
out
mov
aas
xchg
int3
iret
in
push
sbb
cs
(bad)
sbb
outsb
pop
nop
ss
fisubrs
in
sub
dec
or
xchg
(bad)

cmp
or
nop

fs
dec
fbstp
and
imul
imul
and
push
jno
jns
dec
xlat
mov
push
lret
sub
push
and
or
ret
jnp
cs
lret
mov
add
cmp
jns
add
pop
repz
mov
xchg
lahf
or
and
jnp
mov
nop

fs
rcll
cltd
roll
sub
xchg
repz
iret
xlat
fisttps
sub
(bad)
pop
add
sub
lret
jmp
(bad)
insl
cmpsb
or
daa
pusha
imul
push
pop
scas
cltd
push
jmp
mov
xlat
lods
push
or
mov
int
dec
aaa
sub
pop
or
mov
sub
fistpll
lea
sti
inc
outsb
sbb
or
push
fldt
push
dec
js
aaa
mov
cmp
cmp
std
push
das
add
repz
outsb
and
lahf
sbb
xchg
inc
push
mov
and
lret
or
iret
jle
stc
mov
dec
or
lcall
sub
or
int
std
sub
xor
mov
or
sbb
sarb
jge
fsubrl
insl
add
sub
and
push
adc
punpckldq
and
and
dec
mov
xlat
mov
not
cvtps2pi
(bad)

outsb
lahf
sub
push
cmpsb
jle
cltd
fs
sub
leave
js
insb
sub
jp
aaa
push
insb
lret
sub
sub
loop
sub
sub
wbinvd
sub
add
sub
inc
sub
fs
mov
cs
sub
(bad)
push
js,pt
sub
sbb
cmc
jle
push
test
cltd
lahf
sub
fs
insb
or
sub
or
outsb
dec
jle
or
sub
push
pop
push
mov
jl
xchg
mov
push
shll
xor
push
cmc
sub
test
punpckhbw
sub
sbb
das
jmp
pop
out
and
daa
test
daa
mov
inc
jmp
stos
data16
dec
or
lahf
lods
and
pop
shrl
jl
stos
movsl
stos
cmp
outsl
mov
in
push
sbb
lock
addr16
stos
and
or
pop
int3
add
push
mov
add
mov
and
popa
push
sub
mov
(bad)
loop
add
leave
sub
push
dec
or
adc
sub
repz
mov
das
je
or
push
orl
add
mov
add
dec
and
sub
ja
lds
sub
push
xchg
add
les
cmc
mov
(bad)
mov
sub
ja
adc
lods
add
sub
pop
arpl
or
xchg
cld
and
xchg
adc
lahf
mov
scas
pop
bound
ds
push
in
imul
cmp
push
lahf
cltd
call
push
imul
int
rcll
lods
bound
imul
test
and
sbb
xchg
mov
outsb
and
pusha
jge
(bad)
jmp
dec
nop

loopne
clc
lods
dec
lods
mov
fisubrs
clc
outsb
sub
sub
outsb
add
das
enter
push
xlat
nop

js
inc
mov
cmp
aaa
xor
stos
adc
nop

outsb
or
cld
lods
or
sbb
in
std
cmp
sub
sub
les
push
add
sub
adc
sub
nop

outsb
clc
mov
bound
lock
in
das
sub
cltd
xlat
cwtl
js
call
(bad)
xor
sub
adc
lock
in
jae
pop
xchg
stos
aaa
(bad)
insb
cmp
scas
sbb
lods
sub
xor
in
or
cli
adc
daa
sub
std
cmp
mov
stos
xor
insl
nop

cmp
ljmp
out
sub
sub
nopl
cmp
lods
das
addr16
jle
and
sarl
call
pushf
imul
imul
ja
imul
addr16
cmp
xlat
pop
js
ds
popf
mov
je
mov
mov
sub
fidivrs
or
outsb
adc
je
sub
xor
push
push
jno
push
dec
or
jae
sar
dec
add
ljmp
mov
imul
insl
sub
mov
inc
insl
sbb
or
sbb
jle
push
mov
and
jge
stos
push
dec
pop
mov
stos
mov
das
sub
ds
fstps
stos
cmp
dec
mov
push
outsb
cmpsl
fs
mov
pop
adc
and
imul
out
mov
es
fs
push
jne
insb
xor
rolb
pop
leave
es
and
cmp
and
mov
sub
hlt
lea
sub
clc
test
test
lods
xlat
out
(bad)
mov
mov
or
popa
push
mov
xchg
dec
push
mov
into
sub
push
sub
ret
jo
push
(bad)
in
cmp
ret
xchg
add
daa
mov
sub
lahf
lahf
sub
lods
nop

jl
stos
repz
sub
dec
and
out
in
das
sub
ds
xor
push
or
and
cmp
and
and
sub
sub
call
punpckhwd
and
or
adcb
das
mov
mov
xor
int
iret
cmp
outsb
scas
pop
push
mov
(bad)
push
scas
cwtl
push
inc
inc
mov
lret
cmp
or
push
xor
sub
pop
push
jne,pt
cmp
cmp
cmp
cmp
dec
das
cs
push
test
iret
sub
lret
bound
adc
test
rcrb
cs
cmp
mov
jge
pop
jmp
sub
mov
sarb
jg
ret
in
stos
nop

sub
in
sbb
or
sbb
outsb
xchg
repz
outsb
jnp
pop
sub
sbb
inc
xchg
imul
js
data16
popf
sub
stos
push
dec
or
icebp
(bad)
nop

mov
sbb
cld
aas
adc
js
fsts
lea
orb
or
cltd
mov
cltd
cmp
scas
insl
xlat
in
push
dec
and
sub
jl
adc
sbb
mov
adc
outsb
scas
nop
pop
sub
cmp
ds
xchg
lcall
in
adc
cltd
js
test
sub
rcll
jle
adc
bound
pop
es
mov
fisubl
mov
and
pop
and
and
lock
mov
push
push
mov
fcomi
or
or
orb
push
sub
mov
push
xor
imul
fwait

or
adc
fsubrs
pop
or
insl
sbb
fdivl
and
or
insl
sub
xchg
int3
fs
scas
and
pop
jge
push
push
mov
nop

lret
mov
lcall
sub
sub
dec
jnp
sbb
(bad)
fldt
cmp
(bad)
pushf
fldt
mov
mov
xchg
insl
jnp
(bad)
out
jnp
xchg
push
cmp
cli
or
xchg
sti
cmpsb
jno
push
and
(bad)
(bad)
sarl
or
adc
sub
fs
jp
lahf
in
or
xor
out
imul
lahf
cltd
jmp
nop

icebp
mov
(bad)
mov
push
fisubrs
and
or
fldcw
xchg
xlat
inc
or
mov
xor
fwait

mov
pushf
pop
nop

ds
fbld
mov
fsubl
and
imul
data16
bound
sub
and
jp
jnp
bound
add
outsb
outsb
lret
sub
jl
mov
fs
and
int
sub
ja
lahf
jno
pop
mov
icebp
lret
es
xlat
cld
jge
das
xlat
jnp
int3
stos
sbb
sub
jmp
pop
imul
and
push
mov
xor
or
ss
popf
movsb
xor
daa
fists
outsl
fists
or
jmp
or
adc
lahf
sub
(bad)
imulb
and
jl
add
push
call
imul
and
(bad)
cld
nop

mov
outsb
add
fs
sub
gs
imul
icebp
xchg
roll
xor
sub
loop
(bad)
cmp
and
lods
outsb
jae
push
and
lret
cmp
sbb
and
xchg
loopne
or
bound
int
(bad)
sti
add
call
sbb
cmp
outsb
mov
pop
sbb
or
les
das
xchg
insl
add
arpl
adc
stos
mov
js
adc
mov
or
(bad)
push
pop
sub
sbb
jnp
inc
cltd
ficoml
sbb
fs
sub
out
cmp
inc
scas
sub
sub
cmp
sub
orb
sub
sub
int
je
sub
js
xchg
mov
sub
ror
jle
mov
out
pop
sub
mov
and
pop
repz
iret
pop
and
cmp
sub
dec
sub
pop
lods
sub
popa
out
in
sub
outsb
in
push
je
and
test
mov
fstpl
sub
lret
cli
imul
popa
and
es
sub
sbb
sub
ds
or
es
(bad)
and
outsb
addr16
xor
pop
and
leave
sub
dec
or
cmpsb
push
das
dec
lahf
fldcw
and
out
jge
pop
popa
lock
(bad)
lods
sub
pop
je
subb
xor
push
cmp
and
sub
pop
cltd
mov
jle
aas
sbb
jns
scas
cld
sub
cmp
sbb
jp
or
push
sub
mov
sub
repz
movsb
lret
sub
sbb
or
add
lock
(bad)
sbb
sub
mov
(bad)
mov
mov
pushf
inc
bound
mov
outsl
sub
dec
and
mov
test
cltd
mov
jae
pop
mov
mov
mov
sbb
push
notb
xor
and
pop
inc
push
cmp
fimull
xor
cmp
and
popf
and
cmp
mov
nopl
sbb
xor
push
mov
sub
and
lods
sub
dec
icebp
dec
or
dec
or
ss
sbb
mov
insl
xchg
push
leave
cltd
loop
fsubl
pop
nop

sbb
outsl
xor
and
xor
cmpsb
pop
and
pop
daa
xchg
sahf
test
js
lcall
mov
repz
sub
jle
(bad)
lock
and
fs
mov
mov
sub
mov
icebp
xlat
clc
ss
pop
clc
mov
xchg
push
xchg
lahf
in
jnp
adc
mov
mov
addr16
cmp
loop
fisubrs
mov
sub
sub
cmp
mov
(bad)
xor
imul
sub
sub
fs
sub
push
mov
cmp
or
fs
sub
push
imulb
cmp
comiss
lock
mulb
sub
outsb
fisubrs
sub
sbb
push
popa
popa
lahf
cltd
fisubrs
sub
nopl
and
sbb
sub
cmp
push
xchg
cltd
sub
nopl
dec
inc
sub
lods
pop
outsb
push
sub
sub
stos
sub
sub
leave
js
lods
sub
sub
in
stos
outsb
imul
or
and
sub
gs
pop
test
push
mov
or
or
dec
stos
es
mov
lods
das
xor
sub
push
sbb
sub
in
sub
xchg
int3
bound
push
in
mov
mov
imul
or
jae
lods
inc
imul
shrb
stos
push
jmp
mov
hlt
stos
xor
call
imul
sub
dec
js
jmp
and
sub
sub
and
push
aam
jmp
daa
in
sub
sub
jmp
lods
xor
push
nop

(bad)
test
cmp
push
and
fs
xchg
add
and
sub
pusha
push
imul
xlat
js,pt
pop
call
in
sub
mov
aas
les
cmc
imul
in
add
sub
add
and
fs
or
mov
outsb
ret
fs
loop
xlat
mov
add
add
xlat
add
and
pusha
sub
ss
mov
lret
xlat
and
jnp
adc
xchg
dec
sub
xor
outsb
mov
push
xchg
bound
nopl
adcb
sub
ljmp
mov
sub
add
daa
int3
stos
bound
push
push
sbb
mov
cltd
rorl
insl
and
sub
stos
jp
sub
out
cmp
push
jnp
and
xchg
in
bound
or
loop
in
and
push
imul
add
jns
pusha
test
and
outsl
nop

sub
pop
and
bound
sub
aam
jmp
dec
sub
push
popa
xchg
mov
imul
xchg
daa
mov
outsb
lret
outsb
cmp
sub
push
(bad)
cld
jmp
fs
jmp
lret
and
imul
mov
pop
lret
lret
lea
into
outsl
dec
ss
sub
sub
loope
cmp
dec
add
js
push
pusha
iret
dec
or
push
sub
iret
and
xor
and
and
sub
and
jp
jl
mov
sbb
dec
or
int3
dec
push
stos
and
jg
inc
or
jo
sub
aaa
push
inc
das
int3
ds
call
dec
insl
outsb
popf
cltd
push
dec
xor
nop

sub
negl
jle
sub
push
sar
mov
push
es
mov
add
adc
outsb
and
out
ja
stos
sub
mov
mov
push
sbb
mov
mov
mull
xor
sub
pop
bound
pushf
jmp
pop
mov
punpckhbw
dec
and
cmp
cmp
sub
(bad)
fimuls
adc
inc
mov
xchg
xchg
mov
into
sub
ret
mov
sub
cs
sub
outsb
and
lret
sub
mov
outsb
ljmp
fistpll
push
sub
(bad)
cmc
popa
push
xchg
mov
mov
popa
and
aam
sub
loop
or
popa
push
dec
sarl
cmp
or
fwait

shl
mov
fisubrs
fs
lahf
jmp
ret
paddsb
and
cmp
stos
add
in
dec
sti
inc
jge
xor
mov
mov
daa
jp
add
lahf
sarl
sub
rsqrtps
test
adc
dec
push
lea
xlat
lahf
outsb
pop
fs
mov
pop
imul
lea
cmp
dec
fs
xchg
xor
sub
mov
dec
sub
sarl
scas
sbb
jle
lret
sub
mov
test
dec
repz
push
cmp
push
or
outsb
ja
cs
lahf
lds
or
enter
push
jnp
insl
das
sbb
xlat
cmp
fs
in
add
push
aaa
lods
sub
loop
or
das
sub
cmp
push
jecxz
jmp
int
mov
nop

(bad)
repnz
mov
jnp
fs
xlat
xlat
ret
call
lret
dec
mov
negb
imul
mov
loop
les
and
jmp
push
ss
iret
ss
xchg
insl
fstps
imul
lods
xor
notb
sub
shrb
inc
das
dec
lahf
das
mov
mov
nop

cwtl
adc
rcrb
push
fildll
mov
cmpsl
scas
sub
imul
add
sub
cltd
lahf
in
nop

sbb
adc
cmp
sbb
(bad)
sti
sub
push
in
cld
pop
inc
inc
int3
push
and
loop
mov
cld
jge
cmp
dec
sub
std
cmp
out
xchg
xchg
adc
mov
std
jg
and
lods
rep
cmp
popa
lock
lods
sub
sub
jp
mov
es
and
cmp
sbb
push
daa
and
lret
pop
ds
lcall
mov
fldt
insl
aas
push
lahf
mov
or
sub
mov
shlb
sub
and
sub
out
push
aas
adc
sub
mov
bound
repz
mov
push
jle
push
test
jp
clc
mov
daa
sbb
lea
repz
ja
cmp
out
das
addr16
or
push
(bad)
jp
cs
js
xchg
push
das
dec
cmp
and
cmp
mov
add
lods
xchg
jmp
lret
dec
outsb
mov
push
mov
test
fsubrs
jmp
stos
push
ja
sub
insl
jmp
mov
dec
mov
das
push
adc
int
push
insb
mov
sub
mov
cmp
adc
xlat
or
call
jle
push
xor
daa
pop
pop
stos
mov
rorl
or
out
daa
and
sub
push
push
sub
push
mov
clc
cmpsb
xlat
ret
cmpsl
fs
adc
and
arpl
and
pusha
lahf
daa
push
or
stc
cs
das
jbe
cmp
push
nop

aas
jno
cmp
mov
je
add
cmp
ss
ret
mov
adc
imul
icebp
pop
sub
sub
das
lahf
test
jp
pop
xor
jp
adc
addr16
cmp
adc
and
aas
dec
sub
jp
mov
xchg
scas
sub
fildll
xchg
fnsave
xchg
sub
sub
cmp
sub
and
mov
mov
push
or
cmp
arpl
lret
sub
fdivrl
cmpsl
mov
into
or
cmp
aas
sub
js
daa
cltd
lods
mov
addr16
std
push
(bad)
lret
jg
sbb
sbb
mov
daa
scas
pushf
sub
adc
push
jge
mov
jae
sub
cmp
add
jno
or
or
push
xchg
lods
or
fisubrl
sub
lahf
cltd
sub
mov
lret
push
repnz
sub
sub
stos
jnp
cmpsl
scas
je
dec
jl
pop
data16
mov
inc
pop
lret
and
sub
pop
jg
scas
sub
sbb
sub
mov
aas
das
pop
addr16
repnz
sub
insb
pushw
in
and
sub
xchg
add
lret
xchg
mov
xor
pop
sub
negb
mov
sub
sbb
popf
xor
inc
std
xchg
cmp
adc
ljmp
ss
jno
loope
pusha
imul
push
fwait

sbb
sub
jmp
cs
add
mov
cld
movsb
popa
and
jp
aaa
cmp
ficompl
pop
jp
inc
ret
mov
sbb
dec
jle
mov
sub
aas
dec
insb
xchg
mov
enter
or
std
jo
pop
adc
data16
sub
dec
and
and
push
or
mov
aas
popf
sub
pop
repz
cmpsb
fwait

push
test
mov
repz
(bad)
fwait

sub
mov
jge
lahf
outsb
xchg
sbb
mov
sub
xlat
mov
push
push
push
cmp
std
inc
cmp
insl
or
xchg
or
jmp
push
bound
imul
mov
dec
jle
sbb
std
add
and
mov
daa
loop
nopl
and
pop
daa
ficomps
repz
rcll
mov
sub
or
insl
mov
push
(bad)
outsl
loop
sub
push
js
cmp
aam
dec
or
sub
sahf
shlb
lcall
push
sarl
push
stc
xor
or
pop
sub
daa
xor
outsl
scas
mov
xor
cmp
xchg
push
imul
mov
sub
js
nop

jl
sbb
call
cltd
sub
jbe
mov
xchg
and
xchg
addr16
mov
sbb
mov
bound
jo
pop
jns
mov
sub
mov
outsl
ret
std
mov
sti
rcll
rol
fisubrs
lahf
call
outsb
mov
fs
(bad)
std
popf
sub
wbinvd
jo
aam
movsl
sub
(bad)
lock
cmovge
push
repz
or
in
cs
sub
insl
fidivs
fdivrs
(bad)
fs
adc
data16
cmp
cmp
xchg
and
popa
push
sub
ss
mov
fmuls
scas
or
mov
outsl
sub
lods
bound
sub
bound
jle
adc
push
lahf
outsb
stos
or
sub
sbb
add
mov
daa
xchg
push
and
sub
cmc
jle
cmp
lds
jp
(bad)

out
xlat
repz
push
and
xchg
push
movsl
xor
jmp
outsb
movsw
int3
add
mov
bound
push
js
cltd
lahf
dec
ss
sub
jmp
mov
or
lods
punpckhbw
mov
push
sub
stos
sbb
bound
xchg
or
les
lods
insb
xor
sbb
insb
sub
(bad)
cltd
and
mov
sub
stos
sub
or
sub
test
sub
sub
aas
fs
movsl
sub
lahf
sub
xlat
dec
js
call
outsl
add
or
nop

lods
and
lods
dec
or
lods
aas
bound
xchg
push
imul
and
sbb
jg
and
imul
sti
inc
in
mov
bound
push
out
sub
dec
mov
xor
and
fs
in
xor
bound
add
sub
imul
dec
scas
and
sub
and
cmp
inc
sub
xor
gs
fisubrs
jnp
fsubrs
add
pop
out
adc
imul
lea
xor
cltd
push
ss
stos
arpl
icebp
add
(bad)
daa
into
notl
imul
js
pop
nopl
adc
out
jp
sbb
bound
xor
in
mov
insl
or
jmp
pusha
sub
push
cmp
(bad)
enter
cmp
jnp
jmp
and
in
mov
push
aam
mov
out
insb
add
push
inc
lret
cltd
dec
leave
test
addr16
cmp
out
sub
gs
cltd
mov
in
sub
sub
push
mov
and
sub
stos
jno
bound
sub
imul
ss
xchg
andl
dec
bound
and
cmpsb
sub
xchg
decb
or
lods
sub
sub
and
lods
and
and
push
xor
push
mov
lahf
cmp
xor
push
and
aas
or
lock
sbb
imul
add
and
mov
dec
xor
xlat
xor
mov
mov
leave
jo
or
dec
lret
or
cs
sub
pop
lods
sub
outsb
add
insl
inc
bound
sub
lahf
stos
and
push
sub
ds
push
jmp
mov
add
repz
enter
lahf
push
imul
mov
stos
mov
int3
sub
push
(bad)
lret
or
and
in
insl
dec
sub
dec
sub
int3
bswap
dec
int3
lods
inc
imul
stos
movsl
call
lods
pop
ds
push
sub
push
enter
mov
sub
dec
outsb
(bad)
xor
fsubrs
add
andb
sbb
test
popa
and
sbb
xchg
or
bts
xchg
nop

jge
xchg
fwait

int3
or
ds
dec
xor
bound
sbb
pop
adc
xor
sub
and
lods
sub
lds
lods
lea
sub
(bad)
pcmpeqw
test
push
push
inc
mov
mov
mov
insl
and
insl
ss
xchg
mov
stos
das
jno
or
mov
sub
mov
sub
add
pop
fbld
lods
sub
push
lea
rcl
fs
or
dec
and
stc
mov
push
inc
dec
push
(bad)

add
and
inc
sbb
jae
sub
and
in
sub
out
leave
es
lret
dec
rcrl
arpl
aaa
or
in
dec
mov
adc
sbb
mov
sub
ret
js,pt
data16
add
push
sbb
movsb
or
mov
xor
dec
mov
xor
pusha
movsb
leave
sub
dec
jmp
push
mov
push
lea
bound
xchg
movsl
cltd
lret
sub
(bad)

scas
repz
sub
stos
sub
add
jo
mov
and
mov
cli
cltd
cmp
setbe
insl
ret
mov
push
dec
cmp
jo
outsl
lret
int3
test
xchg
sub
ret
xchg
test
scas
sub
jle
dec
es
push
shl
lahf
cltd
movsl
cltd
mov
add
mov
das
push
cmp
in
das
(bad)
js
sbb
int3
push
loop
mov
add
sub
(bad)
das
bound
bound
jle
xor
insb
mov
mov
xor
sub
pop
fstpt
jmp
xchg
and
dec
mov
outsb
mov
or
cmp
clc
and
cli
sub
jmp
jle
cmp
sbb
enter
fisubrs
pop
js
in
dec
lea
cmc
outsb
pop
sti
sub
imul
cmp
clc
stos
enter
sub
imul
fs
mov
push
pop
jl
lock
sub
sti
into
sub
adc
cltd
lahf
or
mov
mov
pop
aas
jmp
out
sbb
stos
push
cltd
dec
jno,pt
lahf
mov
jbe
cmpsl
fisubrs
mov
cmpsl
imul
imul
push
mov
pop
sub
aaa
sti
push
lahf
xor
seto
insb
movsl
and
outsb
stos
mov
mov
sub
in
mul
addl
fwait

push
outsl
mov
sbb
lcall
jge
add
aad
cmp
out
mov
mov
xor
aam
std
inc
int
mov
mov
pop
fsubrs
mov
sbb
mov
sub
sbb
sub
les
insl
xor
rcrl
nopl
sub
xor
fldcw
lods
(bad)
cld
dec
js
pop
lcall
insl
and
fsubl
(bad)
mov
aas
mov
inc
xchg
icebp
or
fwait

ds
push
das
mov
dec
dec
loopne
add
cmp
add
cmp
imul
cmp
sti
aas
cltd
mov
pusha
in
cmp
xchg
cli
cmp
pop
adc
fidivrs
fsubl
sbb
lea
and
dec
xor
jb
adc
xchg
dec
xor
xchg
cli
mov
xchg
or
xadd
pop
push
dec
aaa
mov
insb
sub
adc
push
or
sub
cltd
jno
popf
test
mov
pop
fstps
or
sub
lahf
(bad)
mov
popf
sub
inc
push
sub
das
cs
jae
or
cld
sub
push
(bad)
scas
sub
inc
sbb
sub
dec
adc
and
imul
or
inc
in
mov
pop
sub
mov
xchg
or
sub
mov
cltd
jno
dec
stos
mov
sti
ds
and
and
cmp
daa
je
mov
push
testl
popa
mov
cmpl
pop
inc
or
mov
lods
and
cli
or
test
inc
lods
mov
jge
in
mov
add
mov
adc
mov
dec
(bad)
mov
mov
or
or
sbb
out
sbb
or
loop
fwait

jb
pusha
adc
(bad)
out
rcr
inc
or
add
dec
mov
das
pop
lahf
sub
leave
cmpsl
sbb
js
mov
cltd
adc
pop
rcr
test
sub
pop
test
shrl
xchg
sti
inc
call
pop
sub
xchg
jbe
xchg
sub
jo
push
and
pop
mov
mov
add
push
cmc
mov
and
outsb
pop
add
nop

ljmp
and
ret
or
dec
jle
xor
mov
dec
sub
mov
jo
xchg
pop
sbb
sti
insb
mov
adc
adc
(bad)
adc
insl
imul
call
popa
xchg
sbb
or
lahf
cmp
rcr
pop
std
jbe
dec
and
packuswb
inc
insb
or
sbb
js
cld
jnp
jbe
or
inc
pop
outsl
addr16
sub
out
dec
mov
adc
js
dec
movsb
inc
cmpsb
loop
cltd
push
adcb
wbinvd
and
icebp
ds
out
adc
sbb
sahf
mov
fwait

xor
add
add
pop
sub
movhlps
out
ja
(bad)
jge
push
fstpt
push
(bad)
cs
add
fsubrl
imul
loopne
std
or
rcrl
inc
outsl
call
mov
sub
push
mov
test
and
xchg
adcb
call
jae
lods
ljmp
inc
ss
sub
pop
mov
or
and
push
rcrb
lea
adc
or
insl
add
cltd
jl
out
sub
xchg
sub
out
push
outsb
test
cltd
lahf
sub
lahf
bound
lahf
outsb
sub
ja
nop

adc
sub
sub
add
jo
sub
nop

and
nop

popa
push
mov
and
or
bound
shl
imull
loop
or
jo
cld
push
lahf
sub
mov
outsb
pop
push
aad
or
or
xchg
popa
cmp
sub
jns
sub
pop
sbb
xor
and
and
push
bound
das
cmpsl
movaps
cltd
jno
scas
adc
mov
jbe
push
movsb
lea
jbe
push
lods
add
stos
fimuls
test
lock
sub
shlb
sub
xchg
cld
mov
push
sub
(bad)
xor
repz
cltd
and
and
mov
cs
or
push
scas
test
bound
mov
cmp
cmp
stos
add
push
jg
mov
es
cs
sub
sub
cltd
outsb
push
or
jb
or
wbinvd
and
sub
fldt
stos
aas
adcb
dec
lods
sub
subb
pop
push
outsl
jge
insb
push
fs
das
js
lods
sub
sti
fsubrs
sub
push
das
and
sub
cmp
call
int3
xlat
imul
jge
xlat
dec
lods
orl
xchg
inc
sub
je
outsb
shrb
outsb
push
fs
mov
subb
sub
mov
cltd
shl
insl
fidivs
jbe
out
stos
xor
sub
pop
mov
fistpll
cltd
push
test
daa
cltd
push
imul
and
(bad)
sub
subb
enter
outsb
adc
push
mov
jle
fs
sub
js
bound
cmp
or
sub
fs
enter
pop
scas
cmp
mov
push
sub
in
bound
jle
gs
cs
popa
pop
in
xor
out
arpl
scas
and
insl
and
shlb
js
lahf
cltd
stos
or
xor
mov
lods
(bad)
call
or
test
sub
loopne
mov
ds
ds
es
pop
sub
outsb
sub
ss
sub
ljmp
outsb
sbb
and
push
int
lahf
cltd
xchg
sub
negb
and
sbb
mov
bound
jb
and
xlat
sub
insl
pop
out
push
mov
es
and
jo
je
adc
add
fs
test
sub
fisubrs
jl
outsl
repz
dec
sub
mov
cltd
setbe
bound
fs
cltd
mov
sub
dec
cmp
iret
imul
push
repz
sub
int
loope
int3
sub
rcrl
or
adcb
push
and
cmp
cmpsb
sub
cmp
adc
push
lods
insb
das
loop,pn
fs
push
pop
shrb
push
or
ja
jnp
ja
(bad)
or
push
and
mov
push
wbinvd
in
and
sbb
lret
inc
mov
subl
push
push
into
scas
cmp
aam
outsl
lods
add
or
sbb
insl
fisttpl
call
or
push
jbe
sub
xor
mov
imul
dec
in
dec
xchg
repz
and
jae
pop
je
pop
push
add
xor
mov
sub
sub
sbb
aas
out
movsb
xor
cmp
loopne
adc
outsb
mov
push
sub
imul
cmp
mov
push
mov
adc
lret
imul
push
dec
sub
and
mov
lea
imul
and
outsl
dec
cltd
scas
push
or
push
mov
or
mov
dec
outsl
adc
push
inc
imul
das
loop,pn
xchg
insl
xor
and
imul
sub
xchg
or
dec
push
outsl
jmp
and
adc
out
push
pusha
in
aas
in
mov
call
int3
insl
add
sub
sub
push
lea
mov
inc
sub
sti
push
ss
add
inc
or
shrb
xor
cmp
sbb
in
in
popf
outsb
ficoml
jae
xor
int3
cmp
jmp
shrl
bound
unpcklps
das
jl
mov
push
(bad)
lods
sub
int3
or
les
sbb
lods
and
iret
lret
and
lret
shld
ret
sbb
jg
mov
cs
or
in
stos
leave
sub
fwait

insl
fs
xor
mov
int
jbe
cmp
cltd
jno
fstpl
lret
push
imul
sti
cmp
lods
and
pop
fldt
sti
xchg
and
dec
lcall
dec
add
aas
and
insl
clc
out
cmp
cmp
dec
pop
push
negl
xor
mov
sub
add
ss
cmpsl
fs
add
outsb
or
ret
fs
or
bts
xchg
stos
jge
xchg
fwait

int3
dec
pusha
push
out
adc
xor
jmp
fidivrs
sub
mov
rorl
add
pop
rcl
cmp
das
xlat
push
(bad)
sbb
imul
sbb
cld
ds
(bad)
cld
and
mov
lret
fs
scas
mov
sbb
push
jl
sub
xor
bound
das
inc
push
in
das
sub
das
js
and
insb
das
into
cli
and
das
jne
xor
sub
daa
adc
fsubl
jb
xlat
adc
sub
and
and
stos
popa
push
cmp
cmovbe
fsts
adc
adc
pop
cs
sub
sub
inc
int
scas
pop
insb
and
outsb
add
sub
loop
bound
pop
or
fidivrs
and
sub
mov
push
addb
cs
push
lea
fsubrl
mov
sub
mov
data16
cmp
sbb
pop
sub
mov
jle
pop
sub
(bad)
sbb
fldt
sahf
sub
das
sub
sub
sub
or
cmc
lahf
push
sbb
outsb
add
fldenv
sbb
cmp
pop
sub
adc
cmp
cltd
push
xchg
push
fs
mov
int
mov
jle
sub
mov
fmuls
mov
adc
sub
sbb
jnp
sub
in
loopne
mov
std
jp
lret
lods
lret
dec
ljmp
dec
popa
and
dec
or
pop
leave
adc
sub
xor
dec
cmp
or
push
sub
sub
stos
sbb
mov
sbb
sub
js
nop

movsl
das
jmp
gs
xchg
push
ljmp
or
loope
jnp
popa
and
xor
ljmp
out
cmp
push
jmp
lea
mov
int
ret
jp
fidivrs
add
adc
jecxz
sub
aam
dec
shrb
(bad)
das
sbb
in
push
fildll
pop
aam
aam
cmp
daa
fldt
mov
sub
push
mov
fldcw
cmc
shrb
shrb
inc
cmp
sub
in
sub
das
fldl
das
jle
lahf
fldcw
mov
das
shrb
cmp
sbb
frstor
cwtl
(bad)
das
mov
sub
xchg
addr16
aam
dec
aam
inc
mov
shrl
add
das
repz
fldcw
pop
(bad)
sub
sub
sub
shrl
jns
lret
sub
cmp
das
adc
das
shrb
cmp
aam
and
sub
mov
ret
sbb
das
in
cmp
cs
das
mov
cs
(bad)
add
rcr
mov
das
popa
and
aam
rcr
or
sub
mov
fwait

inc
cmp
nop

jge
in
icebp
loopne
ljmp
ret
cltd
jno
pop
(bad)

xchg
and
dec
sub
mov
cs
and
das
jnp
sub
jge
addr16
int3
dec
sub
mov
fnstenv
in
xchg
sub
sti
cltd
lahf
bound
mov
sarl
jle
out
bound
cltd
sub
sti
fsubrs
and
js
out
mov
cmc
jle
nopl
out
sub
js
lahf
cltd
sub
sub
lahf
fsubrs
lret
push
mov
cmp
outsb
xor
fsubrs
and
and
sub
inc
xchg
sub
cmpsl
cmp
lds
outsb
sub
jbe
inc
lahf
sub
js
cmp
fisubrs
pop
push
mov
das
popa
bound
adc
sub
repz
jl
sub
rcl
test
xchg
leave
mov
or
push
sub
out
bound
cltd
sub
xchg
cs
stos
das
and
popa
ljmp
sbb
imul
stos
out
fs
add
outsb
fs
xchg
cmp
stos
gs
push
sub
(bad)
xor
lahf
adc
sahf
(bad)
stos
and
sub
and
fs
insl
fs
sub
push
or
stos
and
stos
sub
inc
fs
sub
xor
pop
stos
and
jle
or
insl
lods
mov
clc
or
loopne
insl
call
cmp
mov
popf
sub
add
or
sub
lahf
xor
push
sub
pop
xlat
xchg
xchg
daa
addr16
cmp
cltd
lods
sub
bound
jl
dec
jle
cltd
mov
lahf
cltd
nop
sarb
mov
sub
and
stos
cs
push
mov
jge
sub
jg
in
ds
jmp
cltd
sbb
daa
cltd
mov
jb
mov
lods
xor
cltd
xlat
mov
lods
outsl
or
js
lods
and
push
cmp
insl
aas
lahf
sub
nop

popa
and
xor
pop
fidivrs
aas
push
sub
push
lods
or
ss
cmc
outsb
mov
jle
je
imul
jle
lret
mov
imul
popa
push
and
imul
sub
outsb
sub
sbb
push
mov
arpl
xchg
or
adc
or
mov
sub
popa
jmp
call
push
imul
daa
or
ja
and
xorl
sub
jmp
sub
xor
and
and
push
adc
and
cli
and
and
and
test
icebp
sub
mov
cltd
lahf
mov
std
lods
mov
sbb
mov
ljmp
lret
pushaw
in
lods
pusha
lea
bound
push
jmp
leave
and
cmp
jbe
insb
inc
lahf
sub
nop

xlat
xchg
jge
outsl
cs
daa
sub
push
cmp
cmp
adc
sar
mov
outsl
sbb
sub
cs
sub
push
into
sub
(bad)
cs
xor
mov
cmp
wrmsr
setg
dec
or
fs
scas
sub
jo
or
jno
or
outsb
sub
push
cmp
sub
adc
stos
sub
sub
push
sub
nop

and
push
dec
lods
adc
and
sub
xchg
(bad)
call
or
pop
call
sbb
das
jle
outsb
xchg
sub
insl
mov
imul
mov
xor
lods
imul
sub
push
or
or
cmpsl
xchg
pop
push
cmp
sbb
add
push
sub
loopne
stos
stos
std
inc
mov
xchg
mov
or
js
icebp
and
adc
or
cs
es
dec
xlat
xor
jle
imul
cmp
sub
sub
mov
adc
mov
mov
fsubl
iret
fsubrs
sub
xchg
unpcklps
icebp
sub
repz
pop
fcom
and
mov
jmp
dec
popa
sub
in
bound
stos
sub
and
unpcklps
loop,pn
fidivs
nop

bound
dec
xor
wbinvd
adc
xchg
mov
testb
sub
xor
sti
sub
sbb
jle
mov
popa
and
jne
or
mov
cld
pop
cmp
int3
sub
movsb
sub
loop
mov
es
xchg
and
pop
insb
and
sub
lret
daa
movsl
int
adc
sub
icebp
and
or
pop
push
and
sti
sub
cmp
push
jmp
repz
lods
and
out
sub
sbb
es
push
outsb
out
pop
lahf
outsb
sbb
int
cmpsl
pusha
iret
dec
out
lret
sti
lahf
in
sub
mov
push
decb
lahf
scas
push
ret
mov
fsts
inc
push
les
sub
mov
jg
pushf
lret
ds
push
pop
dec
dec
cmp
push
sub
aas
popa
in
gs
jmp
sbb
sub
fildll
sub
cmp
mov
or
or
pop
push
and
xchg
add
pop
sbb
outsb
push
fwait

and
mov
pop
push
lret
or
(bad)
fsubrl
sbb
aas
fs
inc
jmp
xchg
or
sahf
dec
repnz
popf
lret
cmp
cmp
iret
sub
sub
pop
in
sub
daa
mov
pop
sub
das
xchg
in
sub
add
and
jae
push
dec
shlb
int
cmp
ss
pop
sub
cs
fldcw
imul
push
push
mov
lods
cld
jnp
mov
movsl
cmp
cltd
push
mov
xchg
nopl
xlat
daa
int3
push
insl
stos
or
std
mov
test
call
push
xchg
add
ror
xchg
rorb
imul
nopl
das
aam
or
sbb
stc
das
imul
mov
and
mov
(bad)
and
xor
push
popa
mov
int3
insb
sub
push
push
sub
ss
push
xchg
bound
sub
in
push
imulb
cli
jl
pop
push
dec
add
pop
fimull
das
mov
(bad)
das
pop
fists
jle
or
jns
jne
lods
push
push
iret
test
lods
push
fmuls
dec
pusha
sub
aad
sub
pop
mov
sub
fisttpll
dec
mov
jg
aas
mov
cltd
lods
popa
cld
fldt
push
cltd
loop
aas
das
scas
lea
sub
sbb
stos
nop

mov
lret
enter
cmp
sbb
adc
lods
sbb
addr16
or
sbb
addr16
and
icebp
push
jp
cltd
dec
sbb
sub
cmp
and
mov
adc
mov
daa
mov
and
daa
cmp
mov
xor
and
(bad)
xor
dec
sub
imul
enter
push
push
outsb
dec
xor
lea
or
mov
mov
push
(bad)
mov
or
int3
daa
jle
int3
sub
loop
daa
jle
popa
mov
nop

xchg
ljmp
ficoms
ljmp
sub
and
lahf
outsl
lahf
in
sub
in
jmp
xor
xchg
or
or
fdivs
fs
pop
cmc
fcmovu
sub
bound
inc
lret
jmp
jnp
mov
mov
push
call
fisubrs
fwait

mov
jp
jle
fs
imul
movsl
cmp
xchg
xor
cmp
xlat
jnp
or
sub
(bad)
call
push
in
nop

dec
inc
inc
lods
xchg
jle
popa
icebp
in
das
das
(bad)
idiv
fs
fwait

outsb
imul
xchg
sub
scas
ja
rcrl
pusha
(bad)
in
cmc
stos
xchg
jmp
fs
adc
lret
pusha
sahf
push
shr
and
imul
push
mov
add
iret
mov
imul
pop
gs
rorl
stos
xchg
bt
outsb
sbbb
mov
jl
(bad)
insl
icebp
bound
and
sub
imul
stos
fildll
mov
je
stos
js
lock
lahf
outsb
iret
outsb
pop
dec
mov
mov
jnp
pause
pinsrw
sub
cmp
mov
and
insl
nop

jnp
or
int3
mov
and
enter
fs
xchg
push
cmp
notl
xor
and
adc
pop
mov
(bad)

outsb
shrl
add
pop
and
out
out
loopne
subb
jp
cltd
and
rep
in
lahf
das
mov
and
pop
outsl
in
push
pop
add
arpl
movsb
dec
in
bound
add
cwtl
int3
fistl
jb
cmp
repz
sub
addr16
add
inc
das
inc
das
iret
pop
dec
das
nop

std
or
mov
pop
dec
sbb
jl
gs
push
stos
in
adc
sub
and
negb
cld
mov
jb
cmp
icebp
mov
push
jb
sub
cs
xor
out
sbb
lret
push
dec
sub
xor
and
sbbl
add
sub
dec
sub
out
nop
dec
sub
test
sub
xor
jmp
dec
sub
call
(bad)
xchg
dec
xchg
out
sti
inc
sub
js
icebp
cmp
push
cltd
push
ss
fs
insb
sub
sub
mov
xlat
sub
jle
addr16
lahf
(bad)

call
mov
jle
sub
or
push
cltd
icebp
push
sub
bound
xchg
unpcklps
or
loop
unpcklps
push
pop
(bad)
xlat
xchg
js
cmpsl
mull
fs
lahf
sub
jl
sub
addr16
mov
or
adc
nop

setbe
or
xchg
fidivs
(bad)
xchg
fisubrs
dec
dec
sub
mov
or
sbb
ja
cltd
notb
sub
sub
and
adc
sbb
sub
das
pop
and
in
daa
push
add
mov
popa
and
adc
jmp
mul
sub
dec
bound
or
mov
jge
xchg
testl
lret
push
sub
sbb
add
imul
xor
lods
popf
xor
stos
cmc
mov
sub
nop
lods
scas
xlat
xlat
iret
cmp
das
out
cmp
(bad)
cmp
int
sub
stos
bound
js
imul
int3
cmc
jle
push
pop
or
wbinvd
outsb
insl
das
bound
and
sub
lret
xlat
and
jnp
sub
popa
push
mov
bound
fwait

std
repz
lods
jnp
ljmp
jb
push
add
pop
or
ds
punpckldq
push
push
bound
xlat
mov
xchg
bound
or
mov
mov
stos
and
stos
sub
xor
sub
sub
imul
pushf
jmp
xor
bound
sub
lcall
or
adc
dec
outsb
and
bound
(bad)
(bad)
js
sub
js
jno
sub
bound
das
bound
xor
js
bound
and
sbb
adc
wbinvd
out
jnp
loopne
xchg
out
(bad)
xchg
pop
push
sbb
(bad)
push
fwait

sub
fsub
wbinvd
cmp
xchg
pop
and
inc
cmp
sub
add
ss
inc
sub
imul
and
xchg
cltd
rcrb
pushf
stos
mov
xchg
call
adc
sub
bound
test
imul
sub
pop
sbbl
cmp
lret
cmp
loope
cmp
lods
adc
popa
and
push
xchg
insl
inc
bound
push
sub
insl
ds
lahf
lahf
rcll
jle
jmp
jmp
cmp
imul
outsb
mov
insl
xchg
cmp
push
(bad)
sub
jne
outsb
pop
sub
add
arpl
test
outsb
imul
stos
ljmp
test
imulb
lahf
outsb
cs
or
or
lock
sub
sub
lret
xchg
add
mov
xchg
add
cs
push
bound
insb
and
pop
out
jns
push
xor
pop
imul
xor
and
or
cmc
outsb
ja
sub
cmp
imul
insb
sbb
lods
fsubl
mov
jge
and
pusha
fsubrs
outsb
mov
cmp
pop
imul
cltd
dec
or
add
sub
dec
or
imul
aaa
or
sbb
dec
das
lods
sbb
push
mov
sbb
out
dec
das
jle
xor
sub
push
stos
dec
das
jae
mov
mov
mov
mov
cmp
cmp
bswap
cmp
nop

popa
and
lods
xor
(bad)
xor
nop

pop
int3
es
jmp
sub
cltd
sub
lds
popa
and
lahf
fdivrs
or
adc
and
mov
and
xchg
cld
mov
fmuls
shl
sub
or
test
outsl
fisubrs
test
xchg
nop

sti
mov
loop
mov
and
xor
dec
out
mov
sub
(bad)
or
dec
jle
xchg
dec
mov
outsb
xchg
fs
data16
push
shlb
nopl
das
add
mov
imul
cltd
shl
in
xor
sbb
int3
sub
jno
or
cmp
scas
pop
pop
test
mov
pop
and
push
push
and
push
mov
dec
js
bound
insl
or
mov
cmp
and
cmp
and
jmp
dec
sub
out
pop
xchg
cmp
mov
daa
lahf
mov
mov
or
sbb
insl
xor
mov
add
ss
js
sub
movaps
sub
insl
sub
fs
aaa
(bad)
sbb
push
push
repz
lahf
mov
outsb
sub
mov
sbb
lahf
rcrl
orl
cmpsl
lret
and
jmp
stos
or
popa
and
enter
push
xchg
jmp
lret
sbb
mov
push
int
push
sar
sub
mov
(bad)
mov
loop
mov
(bad)
test
mov
das
mov
cmp
outsb
imul
outsb
arpl
fsubrs
xchg
fsubr
push
das
mov
mov
iret
add
xchg
rcll
jnp
outsl
lods
sub
(bad)
ss
insl
sub
bound
or
movsb
dec
aad
in
or
sar
rorb
sbb
std
push
dec
sub
xor
xchg
mov
in
pop
push
jl
ljmp
int3
insb
lcall
sub
lds
pop
sub
(bad)
pop
sub
nop

xchg
mov
pop
add
imul
xor
push
lea
sub
cs
inc
ljmp
imul
sbb
nop

jb
sbb
fs
scas
adc
or
sbb
fmuls
stos
fimuls
pop
cmp
sbb
in
popf
push
push
sub
xchg
std
addr16
aaa
lahf
outsb
dec
jle
pop
jnp
gs
cltd
(bad)
sub
and
push
or
insb
jl
shlb
add
sarl
sub
wbinvd
ss
imul
jo
mov
mov
bound
jo
ljmp
(bad)
sbb
dec
dec
jecxz
pop
dec
fstpt
testl
pusha
push
pop
sub
pop
sub
pop
jns
js
xor
jmp
or
xchg
cmp
fisttpll
pop
mov
pop
and
fisttpll
jns
fimull
inc
dec
(bad)
mov
jge
sub
stos
sub
loop
add
inc
push
add
clc
test
sub
adc
xchg
sbb
and
sti
or
imul
lea
sub
shrl
(bad)
sub
(bad)
in
(bad)
push
jnp
pop
aaa
sub
bound
sub
pmulhuw
push
lahf
push
sub
or
or
mov
and
dec
sub
call
inc
lahf
daa
mov
xorl
and
sub
and
sub
lods
pop
es
in
mov
mov
sub
and
(bad)
gs
(bad)
sub
inc
sbb
xor
push
enter
mov
pop
add
stos
cmp
jo
xlat
mov
sbb
cwtd
lahf
sub
std
sub
fimull
pop
les
and
imul
push
jbe
sbb
push
push
mov
test
cmpsl
xor
test
jno
pop
repz
lock
stos
or
sbb
aas
frstor
sbb
sub
mov
clc
mov
ss
add
or
xchg
dec
cltd
sbb
sbb
xor
nop

dec
mov
cs
and
dec
and
popf
sub
mov
push
int
(bad)
dec
sub
sub
mov
mov
lcall
movsl
pop
mov
sub
jmp
cwtl
mov
(bad)
adc
and
sub
push
pop
and
lret
or
lods
outsl
mov
fimull
xchg
xor
or
enter
int3
es
sub
sub
jo
dec
sub
loopne
sub
sub
sbb
xor
pop
orb
sbb
and
repz
out
pop
addr16
and
rorb
sub
stos
jge
or
gs
popf
das
sbb
mov
stos
and
insb
xchg
fisubs
fildll
xor
sub
(bad)
sub
xlat
sub
shrb
pop
clc
shrb
cli
mov
xchg
sub
add
popa
sbb
ljmp
mov
push
sub
add
sub
das
sub
mov
in
mov
addr16
or
repz
nop

adc
daa
pop
sbb
or
sub
sarl
imul
cmc
adc
push
xchg
scas
sbb
xor
fnstsw
dec
xchg
xor
stc
jns
and
or
sub
(bad)
insl
push
dec
je
jae
sti
mov
cmpsl
cmp
sub
and
mov
insl
addr16
add
xlat
sub
imul
insl
or
loop
js
imul
bound
sar
dec
js
(bad)
sub
popa
and
addr16
jae
addr16
das
xchg
mov
add
in
addr16
cmp
or
sub
sbb
addr16
or
add
stc
xchg
imul
std
push
xchg
pushf
dec
sub
sbb
std
xor
loop
xor
push
cli
sbb
cmp
pop
or
xor
dec
frstor
sub
test
sub
das
mov
outsb
dec
in
push
xor
add
dec
sub
(bad)
das
push
mov
mov
repz
and
test
adc
ljmp
cmp
(bad)
leave
and
mov
cmp
push
and
fstpt
in
xchg
sub
jl
jge
mov
nop

icebp
jle
outsb
cmp
js
bound
jle
fs
adc
ret
sub
xchg
xchg
push
inc
cltd
lahf
std
mov
imul
out
and
clc
ss
lock
and
fbld
addr16
lahf
sub
or
xchg
or
bound
stos
(bad)
sub
cmp
adc
nop

das
inc
(bad)

lret
and
fs
xchg
dec
fs
sub
cmp
xchg
add
or
push
cvtps2pi
(bad)
pop
cltd
lahf
bound
sub
je
bound
fs
js,pt
or
daa
iret
das
xor
outsb
inc
or
lock
pop
rorl
push
sub
mov
cltd
sub
sub
sub
sub
sub
push
push
mov
cmp
sub
repz
div
dec
nop

jno
sub
rolw
inc
cmc
ja
mov
lods
aaa
(bad)
adc
dec
mov
stos
pop
cs
add
cmp
push
int3
add
pop
fs
xor
fwait

scas
mov
or
adc
cmc
or
test
das
ja
sub
xor
or
(bad)

xor
insl
xchg
push
sub
out
jl
in
xchg
pop
sub
rorb
sub
loope
sub
mov
lahf
mov
push
sub
jl
sub
jmp
das
sbb
outsl
and
sbb
jg
lahf
imul
jg
insb
or
xchg
add
or
sti
scas
inc
int
xor
wrmsr
ret
das
or
sub
clc
jl
aas
mov
scas
jmp
prefetch
imulb
cltd
lahf
in
inc
pop
adc
in
ds
sub
imul
lods
sub
inc
in
and
repz
les
push
cwtl
sub
mov
jmp
icebp
iret
sub
movaps
fsubrl
and
imul
imul
(bad)
std
push
add
or
fs
movsl
lods
outsb
and
xlat
jmp
pop
or
add
sbb
pop
inc
xchg
sub
lods
lods
pop
or
int3
lods
pop
xor
lock
pop
adc
push
cltd
insl
mov
or
add
cltd
sub
int3
popa
push
jmp
or
pop
sbb
sub
js
icebp
push
jnp
push
push
jmp
sub
sub
stos
arpl
sub
ljmp
lods
mov
mov
stos
cmp
stos
jmp
nopl
and
mov
loopne
xchg
dec
xchg
out
(bad)
xchg
pop
mov
mov
jo
adc
cltd
push
(bad)
push
fs
das
sbb
sub
mov
lcall
imul
cmp
dec
sub
clc
mul
subl
adc
mov
in
popa
fs
sub
loop
cmp
int
dec
jmp
sub
testb
sub
cmp
fisubrs
inc
sub
outsl
shrl
adc
imul
imul
or
sub
jno
sub
dec
sub
add
and
sub
movaps
jnp
push
jbe
mov
dec
sub
sbb
sub
sub
dec
sub
movsb
int3
xor
mov
or
test
sub
stos
das
and
jne
je
and
and
data16
nop

cmp
mov
lds
fs
mov
and
sub
mov
out
adc
push
jge
push
imul
mov
fsubrs
push
or
outsb
lea
xchg
fisubrs
nop

add
mov
xchg
es
cmp
lds
insl
test
or
or
sub
mov
pop
lahf
scas
pop
cmpsl
scas
mov
stos
sub
sub
scas
ret
or
and
es
lret
dec
mov
xchg
pop
wbinvd
pop
add
mov
sbb
js
lret
cltd
xlat
cwtl
int
mov
jmp
aaa
cmp
fisubrs
xchg
push
cmp
imul
push
mov
push
adc
cmc
outsb
sbbb
leave
lahf
stos
cs
lods
and
pop
insl
in
jge
sbb
das
dec
inc
or
push
subb
push
dec
lret
cltd
lea
pop
mov
gs
sub
cmp
and
mov
call
jp
push
pop
subb
(bad)
js
push
jmp
das
pop
dec
jle,pn
orl
and
or
or
jmp
cmpsb
mov
dec
pop
mov
or
ret
sbb
and
insb
mov
xchg
jbe
dec
mov
jo
daa
shrb
fmull
adc
push
pop
dec
test
push
sub
lds
or
lret
into
scas
stc
jnp
pop
test
push
ret
or
xchg
cld
mov
mov
inc
cli
mov
stos
jbe
bound
sbb
and
xor
(bad)
adc
xchg
test
mov
or
or
pusha
dec
inc
mov
jbe
imul
lock
sub
nopl
push
pop
imul
lock
sub
fnstsw
test
pushf
and
ss
xchg
cltd
add
add
aas
insl
cmp
and
dec
dec
add
inc
add
sarl
or
minps
mov
cmc
or
or
pushf
lods
mov
ss
add
mov
pop
es
dec
fisttpll
das
cld
int3
mov
repz
sbb
jge
sub
mov
nop

movsl
insb
push
or
incl
ficomps
pop
cmp
(bad)

shrl
jge
cli
sub
les
data16
pusha
mov
stc
sub
dec
lds
sub
and
push
jp
xlat
or
fs
or
nop

cmp
inc
insb
sub
cmp
or
sub
js
in
or
sub
es
lods
rcll
adc
(bad)
push
push
enter
das
jbe
mov
aaa
mov
outsb
and
pushf
sub
sub
jge
mov
dec
sub
lods
movsl
or
out
pop
sub
mov
dec
rolb
nop

lret
cmc
mov
and
jp
out
mov
(bad)
dec
pop
push
hlt
lods
sub
ret
daa
int3
mov
aam
xor
and
jnp
adc
insl
pop
cltd
lahf
mov
jl
daa
movsb
mov
shll
mov
push
fsubrs
mov
add
mov
sbb
imul
in
cltd
fsubrs
or
mov
fsubrs
or
bound
test
jl
cmc
sbb
mov
in
lahf
cltd
shll
(bad)
and
mov
jns
or
push
inc
jmp
repz
sub
xor
in
sub
sub
fwait

xor
sbb
sbb
sub
sub
add
fmuls
adc
sub
pop
add
xchg
sbb
dec
scas
sub
call
xchg
int
mov
cs
aas
adcb
fs
mov
aaa
pop
add
xor
sub
mov
mov
and
push
pusha
in
pop
push
addr16
sub
sub
popf
sub
fmuls
and
mov
outsb
sub
add
jle
add
dec
pop
lret
mov
jmp
cltd
dec
in
jno
bound
mov
stos
mov
xorl
sub
iret
fmuls
mov
cmp
add
inc
std
dec
or
push
jbe
popf
addr16
jae
fnstcw
sbb
repz
stos
push
je
sub
aas
test
dec
fwait

cmp
adc
or
int3
cli
ds
mov
das
lret
sub
sub
insl
movsb
push
aaa
xor
and
sub
insb
scas
sub
fsubrs
inc
(bad)
imul
or
fsubl
jp
xchg
dec
xor
cmp
cmp
clc
cltd
cmp
bound
mov
popf
push
jnp
in
or
stos
popa
in
mov
mov
lods
cltd
jp
mov
outsb
dec
jle
or
mov
inc
loopne
sub
add
add
xor
jbe
ficompl
ss
int
cs
sub
jge
and
xlat
jge
push
add
xor
xor
push
ljmp
sub
xlat
xchg
movsl
mov
repz
adc
(bad)
out
sub
ljmp
js
cltd
fstpl
adc
fs
jmp
ss
xchg
addr16
push
mov
out
sbb
xchg
xchg
cli
dec
sub
or
dec
or
push
mov
push
mov
mov
push
popa
add
sub
sbb
fadds
jnp
sub
mov
or
das
mov
outsl
popa
cmp
mov
loop
das
icebp
or
pshufw
cli
std
pushf
adcb
sub
repz
bound
leave
out
mov
xchg
xor
add
sub
test
cltd
lahf
or
lahf
sub
loop
repz
and
mov
sub
sub
lahf
cltd
syscall
pop
outsl
mov
sbb
lahf
xor
sub
fs
sub
packssdw
sub
and
cmp
out
bound
jle
fs
fs
fs
insb
in
xchg
cmp
bound
xchg
inc
(bad)
ss
gs
lahf
cltd
popa
and
push
sub
mov
sub
adc
and
sub
sbb
js
xor
jle
pop
sub
popl
repz
imull
mov
mov
bound
cltd
sub
outsb
scas
fs
in
xchg
push
rorl
wbinvd
sub
gs
arpl
lahf
outsb
lods
add
and
repz
mov
sub
jle
js
sbb
and
aas
nop

mov
sbb
lods
and
push
in
and
sub
sub
cmp
xlat
cmp
jle
add
fsubrs
stos
bound
fisubrs
cmp
xchg
stos
js
push
mov
dec
or
or
or
sub
fs
aas
sub
stos
cmp
cmc
mov
test
stos
cmp
pop
mov
sub
aas
sbb
lods
in
mov
push
(bad)
gs
and
lods
and
jle
or
mov
inc
jmp
add
out
out
outsb
outsb
stos
imul
scas
cmp
adc
pop
sub
cmp
pop
sub
nop

and
in
sbb
jmp
dec
insb
and
xlat
sub
lahf
outsb
xchg
fs
sbb
push
outsl
inc
sub
std
gs
cltd
lods
push
cmp
out
pop
push
shll
cmp
push
outsb
adcb
test
mov
shrl
dec
js
xor
mov
das
outsb
insb
subl
add
sbbb
xchg
cmpsb
cmp
push
xlat
imul
xchg
lods
and
lea
mov
and
outsl
ss
es
push
imul
es
test
xor
sub
lods
test
lods
subl
ss
stmxcsr
cmpsb
push
insl
outsl
add
push
test
imul
in
test
and
cmp
je
lods
cmp
cltd
xchg
je
(bad)
xchg
cltd
and
sub
test
stos
adc
movsb
jmp
push
arpl
add
push
jge
mov
(bad)

sub
sub
dec
lahf
sub
mov
scas
inc
mov
icebp
push
or
lds
mov
mov
stos
es
adc
pop
xchg
mov
loop
dec
cmp
xchg
rorb
nopl
in
sbb
and
pop
enter
sbb
adc
and
sti
xchg
or
sub
out
fsubrs
jns
popf
cmp
nop

sti
int3
aaa
les
fcompl
mov
xchg
jo
imul
dec
loope
sub
push
les
push
dec
sub
sub
pop
mov
push
stos
or
out
scas
jmp
inc
fldt
shlb
jbe
dec
das
fs
outsb
push
sub
mov
xlat
aaa
das
jmp
xor
ss
push
cmc
rcll
sbb
clc
ss
imul
xchg
or
mov
test
sub
mov
sub
sub
pop
int
lea
dec
xlat
and
jle
or
and
imul
cmp
insl
push
mov
bound
xchg
jp
cmc
sub
xchg
shll
lea
shrl
sub
rorb
sub
les
sub
sbb
ror
cltd
mov
sub
int3
fisubrs
jge
in
outsb
jnp
fsubrs
lds
adc
(bad)
std
ljmp
in
stos
mov
mov
dec
cs
scas
push
mov
mov
ret
es
cli
daa
imul
imul
mov
push
cmp
mov
lods
pop
xor
enter
das
jmp
pop
fwait

ret
cli
sub
sub
es
jne
sub
dec
sub
fs
cs
or
cs
and
call
in
nopl
push
lret
cmp
sub
xchg
pop
or
or
stos
in
cmp
nop

lret
lds
and
rorb
dec
pop
cmp
aas
jmp
sub
in
xchg
(bad)
fs
inc
lods
inc
sub
insb
leave
mov
pop
xchg
stos
and
das
std
push
cs
popa
and
adc
pop
rcrl
or
pop
cltd
xlat
pop
js
inc
movsl
je
scas
sub
jle
inc
clc
ss
sub
sub
jp
lods
and
movsl
arpl
xor
sub
stos
cltd
out
jle
lahf
outsb
adc
int3
cltd
lods
xchg
or
cltd
inc
sub
jo
sub
insb
sub
cmp
mov
or
mov
and
mov
dec
and
jle
ss
cmp
mov
imul
pop
xchg
jle
cmp
inc
push
push
inc
cmp
das
and
cmp
in
sbb
nop

movsl
pop
sub
lcall
in
sub
lret
sub
das
outsb
mov
cs
daa
test
push
cmpb
test
jg
popf
inc
jl
sub
fs
sub
es
mov
cltd
aas
pop
adc
sub
sbbl
dec
sub
sub
push
sbb
bound
pop
sub
pop
sub
push
sbb
push
pop
sub
sub
das
and
fldenv
(bad)
cmp
test
or
outsl
inc
adc
pop
pop
mov
testl
aam
pop
das
cmp
dec
addr16
pop
mov
and
lds
sbb
mov
sub
nopl
sbb
out
cs
popa
push
das
or
push
test
cltd
(bad)
sbb
lods
add
xchg
dec
xchg
out
insl
add
lahf
outsb
pusha
mov
int
and
pop
dec
cmp
sub
xchg
push
sub
add
adc
cmp
cmp
fidivl
bound
sbb
daa
(bad)
aas
lods
sbb
dec
sti
sbb
scas
push
sbbl
xor
pop
jns
dec
mov
or
(bad)
and
and
push
sbb
pop
clc
movq
gs
popf
xor
lahf
sti
push
out
push
sbb
or
inc
push
dec
das
push
push
cmp
lahf
sub
sub
mov
jo
xor
cmp
and
stos
and
mov
or
xchg
insl
cltd
push
sbb
mov
sahf
jle
scas
push
cmpsl
aas
sub
lods
xor
cltd
insl
dec
xor
pop
push
mov
and
imul
sbb
nop

cmp
push
stos
fs
out
xor
fsubl
in
sbb
dec
cmpsb
test
js
add
int
insl
sub
clc
sub
cmovl
sub
shrl
fldcw
sub
or
and
das
jp
repz
sub
lea
(bad)
outsl
sub
jnp
pop
in
cmpsb
aaa
jle
cwtl
or
xchg
aas
clc
pop
mov
inc
dec
psubb
fwait

mov
sbbb
and
jmp
lea
pop
jb
dec
sub
rcll
or
jge
mov
or
outsb
inc
jns
add
add
punpcklwd
std
orl
sahf
or
ss
pop
add
sub
cmp
xchg
push
or
sub
pop
dec
sub
outsl
in
sbb
test
mov
imul
movsl
outsl
adc
sub
jmp
popa
cmp
fisttpl
scas
imul
push
test
adc
mov
jge
lret
sub
(bad)
fsubrs
outsl
mov
out
outsl
push
fisubrs
cltd
sub
(bad)
ret
enter
and
sbb
sub
outsl
scas
cmp
mov
ror
outsl
cld
sti
sub
gs
imul
jge
stc
push
xchg
movsl
cmp
mov
mov
ret
or
mov
mov
js
mov
imul
mov
pop
push
hlt
mov
cmp
cmp
lret
in
daa
push
jge
ret
sub
push
cmp
loop
lcall
sti
or
pcmpgtw
std
jae
cmp
and
jl
dec
sub
and
jns
lret
and
outsb
xchg
cwtl
cmp
pop
rcrb
xor
cwtl
cltd
sub
(bad)
xchg
jb
test
(bad)
mov
mov
sub
lods
cwtl
mov
sarb
jb
fists
mov
add
cmp
xor
pop
jbe
cmp
mov
loope
ret
jo
pusha
jmp
sub
lods
mov
testb
jns
mov
std
mov
insl
mov
and
sti
push
fisubrl
dec
sbb
sarb
mov
sub
mov
mov
fbstp
pushf
lret
jge
cmp
lahf
xchg
lahf
mov
lahf
or
sub
cltd
lahf
sub
lcall
in
bound
ds
push
cmp
adc
daa
sub
outsb
leave
mov
adc
sub
in
sub
adc
sub
sub
sub
in
sub
les
xor
daa
pop
sub
inc
(bad)
bswap
(bad)
sub
sub
and
mov
mov
xlat
js,pt
out
xlat
mov
lret
sub
xchg
dec
xchg
out
sub
(bad)
push
pushw
outsb
mov
dec
adc
sub
sub
bound
lods
lahf
clc
ss
xor
xchg
stos
daa
shrb
jmp
xlat
lods
push
sbb
sub
add
in
mov
pop
loopne
adc
adc
sub
ss
mov
sub
jle
xchg
sub
and
sub
jmp
pop
cli
stos
xor
lods
mov
fs
sub
cmc
xlat
pop
js
cld
stos
outsb
test
sbb
cmpsl
aaa
sub
sub
outsl
or
jns
daa
ja
arpl
mov
mov
mov
jp
and
cmp
outsb
push
sub
mov
insb
sub
add
and
test
lock
clc
das
sbb
outsb
cmp
sub
mov
jl
push
stos
push
xchg
push
nop

and
xchg
cmp
jp
int3
lods
addr16
ss
fs
cwtl
js
nop

outsb
cmp
sub
movsb
mov
jg
in
daa
arpl
lods
cmpsb
jle
jge
lods
jle
push
adc
shrd
adc
or
fisubrl
popa
jmp
cmpsb
daa
mov
test
aas
mov
add
in
sub
pop
xchg
daa
mov
in
punpckhbw
in
jns
out
nop

cmp
jmp
imul
and
dec
js
sbb
les
fs
stos
popa
stos
imul
jmp
lret
cltd
xchg
sbb
aaa
cltd
push
push
(bad)
fs
shrl
outsb
add
cmp
rep
imul
sub
dec
js
in
clc
xor
in
bound
push
fnstcw
scas
add
push
daa
jmp
jnp
sub
cs
pop
sub
xor
and
fs
sub
ss
ljmp
xchg
lret
inc
jmp
das
mov
fs
je
stos
jne,pt
xor
repz
jp
jle
outsb
adc
pop
out
insl
cmp
test
inc
out
inc
pop
fs
inc
xchg
imul
mov
mov
jl
add
insl
cs
and
sub
push
sub
mov
lods
jge
leave
js
int3
sub
cmp
sub
sub
and
das
pop
stos
dec
fs
ja
dec
pop
or
call
pause
movsl
or
das
stos
dec
rorb
sbb
sub
cmp
dec
addr16
sub
pop
aad
int
mov
lret
or
les
or
mov
mov
push
movsl
inc
or
mov
xlat
out
(bad)
das
xchg
lret
bound
insb
adc
pop
cltd
push
shlb
xor
cmp
dec
insl
xor
sbb
sub
inc
or
notl
and
pop
test
scas
xor
ljmp
xor
or
xor
cmpsb
mov
push
dec
sub
mov
rcll
jmp
lret
lods
sbb
sub
outsb
ljmp
pop
and
pushw
in
cltd
lahf
sub
dec
mov
cs
mov
push
repz
das
and
mov
mov
wbinvd
enter
insl
sub
leave
push
lods
push
or
jle
dec
imul
lods
add
ret
lea
ss
sbb
jns
jns
bound
call
das
filds
test
mov
cmp
dec
jne
(bad)
sub
lahf
mov
and
xchg
int3
cltd
jno
dec
sub
lret
nop

pop
int3
sub
int3
pushf
xchg
addr16
fmuls
lods
sub
xchg
mov
ficoms
das
sub
adc
call
or
shlb
cltd
adc
fs
nop

mov
sub
mov
out
outsb
aam
cmc
outsb
lret
repz
mov
sub
nop

leave
repz
repz
stos
shr
inc
ljmp
push
shll
scas
repz
outsb
aam
cmc
xlat
aam
cmc
stos
push
xlat
adc
test
cmc
ss
repz
outsb
inc
test
dec
sub
lret
cs
sub
repz
nop

mov
in
stos
test
gs
outsb
stos
xchg
xor
and
sub
xlat
lods
(bad)
push
testl
outsb
lret
ss
dec
clc
ss
rorb
dec
sub
and
call
repz
daa
lahf
fs
sub
bound
andb
mov
scas
pop
lea
and
sub
repz
or
out
repz
mov
(bad)
xor
mov
cltd
lahf
insl
add
gs
or
xchg
xchg
ljmp
jno
pop
sub
ljmp
xchg
lea
xchg
mov
lea
adc
sub
nop

outsb
pop
cld
sarl
aas
xlat
cmc
enter
sub
and
in
ror
nop

push
sub
stos
and
movsl
in
scas
addr16
adc
adc
cs
xlat
ret
outsb
cmpb
mov
push
mov
sbb
int
push
sub
test
repz
mov
or
js
mov
cmc
iret
shll
sub
pop
sub
ljmp
cmp
arpl
cmp
sub
sub
and
cld
cs
pushf
sub
add
pop
daa
int
scas
daa
jo
sub
nop

das
xor
pop
sub
shr
push
sub
mov
mov
cmp
xchg
mov
dec
sub
ret
jmp
outsb
and
mov
pop
in
sub
or
sub
cmp
mov
pushl
dec
sub
nop

ljmp
clc
int3
and
das
mov
pop
sub
and
sub
sub
sbb
ds
mov
mov
mov
in
sub
repz
xor
cltd
mov
sub
outsb
arpl
fsubrs
or
fisubrs
nop

xor
xchg
mov
push
das
sub
mov
imul
jb
xchg
out
cmc
sub
xchg
movsb
mov
imul
dec
lods
in
insl
nop

mov
sub
jnp
pusha
xchg
stos
and
xchg
mov
inc
push
clc
jnp
xor
adc
inc
mov
push
sub
enter
int
fistl
cmc
popa
sub
jle
xor
cld
cltd
jge
or
js
insl
paddw
mov
test
std
and
cltd
sbb
xlat
inc
js
or
lods
dec
pop
jp
popa
cmp
stos
inc
xchg
aas
inc
or
cmc
outsb
nop

jle
lret
jbe
enter
sub
mov
std
repz
sarb
xchg
js
sub
add
repz
xchg
jnp
fsubrl
cmp
dec
out
shrb
push
ja
and
mov
and
fnstsw
adc
das
mov
repz
and
mov
fcomps
xchg
cld
or
xchg
sub
jo
pop
fs
inc
aam
push
sub
call
xchg
mov
pop
push
das
arpl
lahf
mov
sub
adc
mov
nop

mov
adc
(bad)
in
mov
jnp
mov
push
cli
push
mov
lods
sub
xchg
xchg
push
int3
stos
(bad)
sub
imul
sbb
std
add
or
mov
jno
(bad)
inc
mov
subb
jo
push
jmp
outsb
mov
je
outsb
stos
fildll
cmp
jmp
push
mov
push
fidivl
xor
mov
jge
add
dec
jmp
iret
in
insl
cmp
mov
cmp
add
jno
cmc
outsb
xchg
cltd
mov
cmp
cs
and
push
dec
daa
popa
push
mov
and
nop

cli
popa
fisubrs
pop
in
icebp
aas
push
cmp
test
sti
jno
std
scas
cli
cmp
lahf
and
cmp
or
lret
mov
js
add
sahf
push
adc
in
xchg
cmp
insl
nop

jp
lahf
bound
das
lahf
ja
es
mov
and
sub
outsb
xchg
fidivrs
sti
sub
mov
dec
sub
and
cli
out
stos
out
cs
test
sub
imul
cmpl
inc
jl
cmp
popf
push
aaa
mov
lods
test
sbb
or
or
addr16
xor
punpckhwd
xchg
(bad)
sub
sub
in
and
js
lcall
movsl
(bad)
fldt
in
sub
js,pn
lcall
sub
data16
or
sub
imull
sub
sub
sahf
lahf
cmp
or
cltd
jno
aad
mov
and
sub
call
mov
lret
and
jb
push
stos
cmp
ds
cli
sbb
adcb
(bad)
cmp
cmp
in
jno,pn
fdivl
jno
shrb
mov
aas
aas
push
sub
cs
or
aas
sbb
sub
popf
test
sub
sub
sub
mov
sub
popf
fsubrs
and
cwtl
bound
sub
pop
xor
das
bound
test
fs
mov
pop
pop
jmp
or
mov
pop
mov
pushl
lea
icebp
or
fs
and
das
sub
test
xlat
inc
das
cmp
sub
push
lret
cs
bound
mov
mov
fcomp
xchg
xchg
das
push
std
mov
cltd
divl
or
loopne
ljmp
in
and
push
sub
or
js
lahf
sahf
lods
cmp
orl
sbb
stos
iret
xchg
leave
cmp
sub
ljmp
test
adc
jnp
lret
lea
bound
rorb
lods
cmp
push
lds
or
repnz
hlt
call
cltd
mov
mov
cld
sub
add
lret
inc
in
pop
or
sub
pusha
push
and
cmp
paddw
mov
xchg
push
arpl
and
sub
(bad)

fs
and
mov
jle
sub
wbinvd
notb
nop

(bad)
std
push
pop
sub
sbb
sbb
lahf
cltd
sub
xlat
xor
ror
jle
sub
mov
and
stos
sub
pop
js
das
sub
jle
nop

sub
mov
test
lods
cltd
sub
pop
js
insb
sub
push
and
cmp
js
sub
and
jle
sub
or
xor
jle
sahf
das
cmp
jle
sub
pop
js
sbb
sub
js
das
sub
jle
movsb
cs
adc
sub
leave
js
sub
sub
js
cs
pop
jle
adc
das
dec
jle
sub
sub
test
inc
cli
lods
sub
cmp
and
sub
jle
fs
stos
jle
dec
jle
aaa
cmc
sub
aas
xlat
js,pt
sub
shll
jle
sub
mov
fs
rcrl
stos
sub
cmc
sub
bound
mov
add
(bad)
stos
xlat
repz
or
adc
mov
lahf
outsb
scas
pop
lahf
outsb
test
icebp
push
and
mov
stos
and
scas
test
lcall
jns
sub
nop

popa
sub
add
lods
and
mov
sub
(bad)
scas
ja
imul
inc
add
sub
lods
and
daa
mov
pop
or
mov
jle
push
push
cmp
cs
ljmp
cltd
sub
insl
cmc
jle
test
or
sbb
xchg
popa
dec
push
stos
scas
stos
insb
cmp
stos
push
mov
sub
or
jle
popa
and
sub
cli
jno
cmp
push
outsl
jmp
sub
js
add
sbb
push
sbb
mov
adc
sub
popa
lahf
arpl
xlat
out
or
stos
imul
pop
mov
dec
jae
bound
inc
repz
inc
adc
sbb
adc
(bad)
ljmp
dec
jle
stos
sub
cs
mov
xchg
imul
aad
stos
pusha
imul
outsb
jno
popa
and
jmp
loop
push
lret
push
jnp
cmp
mov
push
bound
nopl
jmp
mov
jp
xor
cmc
outsb
imul
fs
mov
popa
sub
outsb
cmp
mov
fs
ret
lods
xor
cmp
ds
mov
int3
sub
mov
mov
cs
inc
clc
lea
push
pusha
or
pop
leave
dec
daa
cmp
and
push
popf
scas
hlt
int3
sub
lret
xchg
sub
jnp
mov
sub
mov
imul
dec
sub
xor
and
test
fsubrs
push
roll
nopl
jmp
setbe
shrl
mov
fs
and
aam
xor
ds
or
stos
daa
jmp
and
xchg
push
sbb
add
jbe
push
mov
aas
or
sbb
or
push
mov
bound
push
mov
jno
or
jae
das
enter
pop
nopl
scas
or
and
pop
sub
dec
cs
dec
sub
fisttpll
adc
mov
lahf
cltd
or
or
or
dec
or
into
sub
lods
push
addb
add
and
push
aas
jbe
movaps
add
sub
cli
stc
out
push
insb
lods
and
mov
js
and
dec
es
and
lret
add
shrb
jle
cmp
sub
push
daa
sub
jle
mov
mov
inc
js
xlat
jnp
xor
cmc
stos
sub
int
stc
jge
imulb
xor
orb
mov
or
inc
sub
orl
adc
imul
mov
ljmp
push
or
and
setg
pop
out
int3
inc
jl
bound
ljmp
dec
sub
push
cmp
(bad)
jg
scas
int3
pop
xor
and
or
dec
push
sbbb
and
push
(bad)
mov
cmp
lods
sub
(bad)
bound
cmp
jge
push
pop
int
in
imul
dec
movsb
lret
stos
fsubrs
lret
inc
or
jnp
fsubrs
add
(bad)
cmp
mov
dec
cmp
dec
cmp
imulb
jg
cmp
dec
xor
sti
fwait

aas
enter
inc
sub
lahf
outsb
pop
sub
mov
cmc
sub
push
mov
jle
mov
mov
xchg
push
jle
fs
je
sub
aas
ret
xor
aaa
in
xor
ljmp
push
cltd
in
(bad)
stc
mov
jl
cmp
outsl
in
lea
xor
testl
sbb
mov
dec
jmp
cs
fidivrs
or
dec
in
xchg
cltd
shll
aam
sub
ljmp
push
fidivrs
cwtl
cmp
xor
in
dec
ss
add
mov
cltd
cmpsl
xor
mov
test
das
cmp
loop
lret
repz
int3
sub
xlat
and
popa
mov
popf
sub
(bad)
sbb
repz
sub
xor
cmc
imul
cmp
std
sbb
mov
stos
sub
mov
daa
jge
lods
push
adc
sar
insl
dec
and
sub
mov
in
sbb
sbb
cwtl
imul
in
sbb
push
dec
mov
mov
and
mov
jge
or
sub
mov
xor
sub
sub
outsl
pop
mov
jmp
cmpsl
or
mov
aas
(bad)
and
sub
add
push
notb
mov
bound
inc
sbb
sub
mov
out
xchg
pop
imul
cmp
int
pop
sub
js
imul
sti
enter
or
or
or
(bad)
sbb
fldt
cmp
sub
sub
gs
(bad)
or
fcom
jnp
inc
xchg
xor
xchg
xchg
push
push
and
sub
fidivrs
outsb
fisttpll
inc
sub
cmp
jmp
cld
pop
and
add
lahf
jle
aas
lahf
outsb
or
lret
cmp
fsubrl
fsts
dec
sub
mov
push
pop
inc
fdivrl
js
jb
sbb
mov
je
mov
inc
rcrl
rclb
jge
sbb
(bad)
(bad)
int
push
cmp
mov
mov
(bad)
std
mov
aaa
pcmpeqd
clc
pop
sub
pop
sub
movsl
sub
andb
or
mov
ljmp
and
sbb
scas
unpcklps
in
mulb
mov
cli
jp
sbb
loop
sub
std
xlat
cltd
or
icebp
xlat
mov
push
lods
pop
shlb
frstor
add
lret
sbb
(bad)
mov
and
adcl
or
add
and
and
and
and
adc
push
bound
enter
inc
sbbb
cltd
fnsave
push
xchg
sub
dec
xor
shrl
pop
movsl
popf
das
mov
sbb
enter
mov
pop
mov
ret
sbbb
das
outsb
adc
sub
(bad)
sub
pop
rolb
rolb
push
arpl
add
jp
push
add
stc
fadds
sbb
push
pop
pop
filds
mov
(bad)
pop
roll
sarb
sub
sarb
idiv
fisubrs
cmp
cmp
cmp
lret
faddl
pop
jnp
dec
nop

loopne
cmp
inc
out
test
push
dec
cmp
out
inc
sbb
mov
bound
popf
cmp
popa
int
jmp
sub
daa
mov
fs
outsb
push
inc
push
sarb
and
push
xchg
stos
add
in
dec
cs
sub
sub
sbb
push
jmp
sub
push
cmp
cmp
mov
add
cmp
popa
or
lret
nop

and
sbb
fwait

xor
mov
adc
fldt
xlat
xlat
jl
loope
cmp
outsb
or
sbb
jp
dec
sub
mov
push
das
mov
sub
ss
xlat
fldenv
xchg
imull
mov
fsubrl
xorb
sub
in
sub
test
and
mov
repz
cltd
xlat
xchg
fstpl
outsl
aam
xlat
daa
jae
mov
and
and
fildl
das
shll
fldcw
shlb
adc
sub
and
xchg
sub
testl
cltd
xlat
xchg
lahf
ds
bound
jle
fs
fs
fs
insb
in
add
fs
add
inc
sub
fs
push
sub
notb
mov
cltd
xchg
sub
lahf
lahf
outsb
adc
xor
push
sbb
cmp
push
in
popa
bound
js
(bad)
das
mov
and
sub
lahf
cltd
mov
orl
or
and
inc
mov
dec
sub
outsb
mov
xchg
in
inc
cmc
jle
ss
cltd
sub
outsb
lahf
jle
stos
(bad)
cli
jmp
in
movsl
sub
cmc
jle
das
mov
cltd
lods
roll
call
sub
add
push
cmpsb
sub
stos
and
sbb
sub
push
or
aas
scas
pusha
xlat
xchg
stos
insl
and
sub
insl
sub
movsb
add
decl
cmp
push
popa
cmp
mov
outsb
dec
sub
jne
(bad)

aas
(bad)
dec
sub
jo
movsl
mov
pop
sub
stos
and
cmc
rcrl
sub
push
mov
pop
das
and
cmp
cs
mov
(bad)
bound
push
wbinvd
outsb
addr16
lods
sbb
stos
sbb
outsb
sub
cmp
js
lahf
mov
push
jle
jmp
rcrl
cmpsb
in
adc
aaa
lock
push
cmp
ss
insl
ss
aaa
jp
in
or
and
cmp
stos
inc
dec
lods
inc
lahf
outsb
pop
arpl
sahf
test
dec
jge
jmp
test
push
cs
pop
inc
wbinvd
ljmp
jl
aas
sbb
cmp
inc
or
xchg
push
popa
inc
jmp
int3
sub
lods
inc
mov
xor
cmp
adc
xchg
imul
sub
aas
insb
jp
rsqrtps
xor
insb
pop
mov
ljmp
sbb
jecxz
fs
in
xchg
nop

push
lcall
sub
lods
adc
stos
adc
mov
imul
push
mov
insl
jo
and
mov
cmpb
and
push
lret
push
dec
lods
xchg
bound
cs
mul
fs
aaa
in
adcb
subb
push
and
sub
scas
push
stos
cmpsb
insl
lods
cmp
in
push
inc
imul
fnstsw
sub
sbb
int3
imul
sub
push
or
lea
inc
rorb
ffree
or
insl
jb
or
sbb
fimull
ds
push
pop
xchg
sub
or
das
or
ret
or
das
nop

outsl
sub
lea
or
or
mov
pushf
lods
dec
in
lods
stos
sub
mov
push
dec
mov
or
xor
int3
ss
fs
jmp
not
sub
mov
popa
cmp
iret
lea
sub
aam
and
push
jbe
dec
push
fs
push
and
scas
sub
lret
and
pop
push
push
inc
dec
sub
bound
cmp
imul
ljmp
sub
and
nop

popa
push
mov
and
sub
loop
testl
loop
or
xchg
cld
cmpsl
insb
and
mov
iret
(bad)
ljmp
cs
sub
xchg
mov
sub
ds
push
mov
adcb
pusha
and
inc
sub
or
cmpsl
mov
xor
and
insb
add
gs
xor
push
push
sbb
xchg
mov
jmp
jmp
xchg
inc
rorb
subb
push
dec
cmp
sbb
stos
cs
sub
push
in
outsb
push
xchg
mov
sub
jl
stos
jnp
xchg
mov
cmp
add
in
insl
in
insb
cmp
in
jp
sub
jno
fs
cmpsb
xor
sbb
cmc
outsb
subb
push
outsl
out
(bad)
in
sub
outsb
gs
xor
lea
fsubrs
sbbl
sbb
es
cmp
cmp
nop

dec
nop

and
or
cmp
cltd
test
fs
cmp
in
and
inc
jns
insb
pop
xchg
mov
bound
sub
cmovbe
and
sub
clc
outsb
and
cmp
dec
cmp
dec
cmp
lods
cs
jo
in
jbe
cmp
ds
(bad)
pop
outsb
sarb
sbb
ret
xor
mov
xor
push
or
dec
shlb
mov
aam
fldt
aad
sub
ds
xor
dec
daa
rcrb
inc
shrb
(bad)
add
js,pn
or
sub
sub
sbb
mov
push
dec
sub
insb
pop
or
sti
inc
xchg
mov
jne
and
popf
mov
xchg
and
sub
jno
addr16
and
pop
insl
fstps
dec
daa
daa
fstpl
fistpl
iret
nop

cli
cltd
sub
setbe
or
mov
jbe
xlat
fdivrs
or
dec
stos
pushf
adc
sbb
bound
into
fs
adc
repz
sub
add
das
mov
sub
or
adc
lea
lahf
jle
jmp
cmp
mov
jne
aaa
aaa
jle
jmp
outsb
xchg
xor
push
and
ss
xor
lods
cltd
push
mov
xor
push
or
ljmp
lcall
push
outsb
sub
mov
lret
and
mov
fisubrl
nop

pop
and
int3
sbb
insl
sbb
ss
push
cmp
out
in
je
xlat
cltd
mov
fisubrs
clc
ss
adc
push
out
pop
and
push
mov
dec
push
sub
insb
sub
cmp
fldcw
sub
fisttpl
imul
or
xor
sti
inc
or
push
pop
dec
fildl
test
fmul
sbb
cs
and
or
inc
cli
scas
jnp
aaa
pop
setne
scas
lock
xor
cmp
imul
fmull
insb
cmp
mov
jmp
dec
sub
push
mov
outsl
jl
std
inc
add
cmp
pop
and
lahf
jmp
outsb
lods
cltd
daa
ja
and
push
push
sarl
dec
sub
sbb
ds
and
mov
call
fsubl
mov
jge
or
or
imul
in
mov
mov
push
(bad)

sti
fimuls
pop
push
fadds
mov
add
and
imul
xchg
in
or
cli
xchg
push
push
cwtl
stos
pop
fs
jno
sub
jbe
cmp
mov
cmp
out
das
clc
mov
cmp
push
sub
sub
mov
mov
xchg
push
mov
pop
(bad)
mov
cmp
pushl
dec
cmp
mov
and
push
test
repz
outsb
scas
imulb
mov
ljmp
and
lahf
imul
xor
movsb
mov
jp
push
popf
scas
dec
mov
ds
cmp
jg
or
cmp
push
xor
insb
pusha
call
outsl
syscall
popf
sbb
push
lcall
out
sub
in
std
cltd
mov
insl
lods
add
js
sub
das
jecxz
sub
dec
sub
sub
and
call
das
jl
sub
call
mov
dec
iret
add
sbb
sub
xor
mov
popa
and
jne
cmc
jl
jge
call
mov
fisubrs
cli
cltd
lahf
xor
daa
mov
xchg
mov
mov
cltd
and
(bad)
xlat
mov
adc
lret
repz
repz
xlat
and
xchg
shrb
pop
sub
sub
daa
int3
cmp
ljmp
rorl
sbb
sarl
outsb
lahf
call
xlat
imul
inc
fsubrs
stos
das
aas
sub
add
fildll
mov
xchg
adc
cmp
mov
or
xchg
or
fistpll
rcr
mov
push
sub
outsb
or
sub
out
aam
sbb
xor
push
fnstsw
cmp
add
sub
(bad)
sub
adc
sbbl
insb
jns
outsb
addr16
xchg
xor
sub
sub
and
outsb
cli
inc
popf
xchg
lret
das
fistps
sub
cmp
lahf
cltd
lahf
bound
adc
das
sub
inc
shl
addr16
mov
sub
(bad)
nop

mov
jp
mov
xor
adc
addr16
fs
popa
and
out
psrld
sub
xlat
ds
bound
sub
stos
addr16
push
mov
push
pop
bound
jo
push
movsb
adc
or
xchg
lret
jmp
sub
push
sbbl
push
gs
mov
out
fs
shll
nop

mov
and
bound
std
mov
orb
or
bound
(bad)
std
inc
lret
cltd
lahf
clc
ss
mov
fs
cmp
xor
js
in
nopl
or
mov
jle
nopl
stos
and
sub
fwait

das
bound
pop
mov
pop
lods
sub
cmp
and
sub
inc
sub
xor
insb
test
js
sub
(bad)
lods
cmp
push
mov
sub
stos
imul
jmp
cmp
pop
lahf
cmp
sub
outsb
mov
aas
sub
sub
lahf
bound
add
xor
push
sub
lret
mov
scas
push
lods
pop
bound
ss
out
lahf
cltd
xchg
add
scas
xlat
dec
js
call
punpckldq
push
lods
adc
jmp
cmp
sub
test
js
mov
rep
test
or
push
jne
stos
and
stos
aas
ljmp
adc
sub
out
push
sub
push
xchg
or
add
mov
add
lahf
rcrl
mov
dec
jmp
das
push
pusha
or
nop

das
push
roll
in
outsb
fs
or
lock
xchg
loop
cltd
push
push
cmp
fidivrs
jle
sub
and
push
fstpl
sub
(bad)
lock
and
fsubl
stos
mov
adc
xor
xchg
insl
popa
popa
cmp
inc
sub
in
lea
jae
push
lret
(bad)
xlat
inc
popa
and
gs
cmc
pop
lods
jmp
outsb
and
and
mov
sub
outsb
imul
cmp
inc
jno
or
adc
cmpb
dec
lahf
outsb
in
bound
or
cmp
nop

icebp
mov
mov
dec
sub
lods
xor
or
sub
pop
enter
insl
das
(bad)
insl
in
push
sub
bound
cmp
sub
nop
por
addr16
stos
sub
mov
das
outsb
pop
sub
push
and
sub
push
sub
lahf
stos
adc
mov
xchg
sub
in
xor
or
outsb
cmc
jle
aaa
jp
in
push
leave
sub
js
sbb
outsl
repz
xor
or
imul
push
int3
add
push
fs
jmp
iret
sub
nopl
cmp
insl
in
or
or
lret
jge
push
xchg
out
nop

clc
nop

add
mov
outsb
push
cltd
push
das
daa
lods
jb
repz
sbb
subl
mov
int
or
mov
insl
shll
int3
or
add
orl
gs
xchg
ss
mov
imul
sub
orb
sbb
mov
xchg
sti
popa
lret
outsb
adc
addr16
and
sti
mov
cld
int3
sarl
or
shl
sub
push
cs
adcb
repz
pcmpgtw
rorl
sub
mov
push
(bad)
nop

rorl
push
jge
stos
cmp
ljmp
xchg
aam
scas
gs
arpl
bound
jle
call
add
or
push
das
xchg
int3
into
inc
lahf
outsb
pusha
ss
and
stos
daa
jp
add
aaa
inc
push
xchg
or
insl
add
call
cmp
outsl
inc
imul
(bad)
mov
cmp
outsl
cmp
and
outsb
and
adc
or
js
dec
adc
in
and
cld
lods
dec
or
test
int3
addr16
jns
mov
inc
push
mov
test
lea
in
and
popa
sub
mov
insb
scas
cmc
pusha
dec
or
pop
repnz
mov
divl
aas
sub
jb
sub
inc
aam
cmpsl
or
ljmp
in
and
mov
sahf
xorb
leave
nop

jg
das
lret
dec
xor
das
mov
das
imul
or
sub
xor
imul
rclb
nop

push
es
sub
nop

inc
xchg
adcb
out
sbb
(bad)
lret
dec
gs
mov
mov
int
lret
inc
and
or
sub
fsubr
push
mov
cmp
lea
test
jne
xor
adc
popf
adc
test
mov
add
sub
imul
das
ss
dec
or
in
push
and
push
lret
cs
push
xor
fidivrl
repnz
fbld
adc
mov
mov
jb
push
mov
pop
xor
sub
xor
push
mov
sbb
pop
or
sbb
fisubl
outsl
insb
cmp
insl
out
nop

outsb
add
push
fwait

(bad)
xlat
insl
or
push
jbe
or
popa
jecxz
sub
sub
sti
bound
push
lret
push
(bad)
cltd
lahf
fistl
mov
lret
and
jo
jg
shrl
std
inc
mov
int
inc
outsb
enter
pop
bound
std
cmp
bound
jp
cwtl
cld
jno
(bad)
sub
or
sbb
repz
insb
or
test
or
cs
xchg
cmp
sub
or
xchg
psllw
pop
inc
and
ja
ds
cmp
cmp
test
and
pop
wrmsr
sub
in
jg
dec
addr16
test
or
sub
or
es
or
jp
dec
popf
mov
scas
jmp
je
sub
pop
rolb
das
push
popa
das
mov
or
outsb
and
int3
repz
jnp
lahf
push
std
mov
fs
fisubrs
in
xlat
dec
dec
sub
lret
sarb
jbe
cmp
cmp
sub
fistpll
mov
mov
aad
xor
cmp
cmp
jno
sahf
ds
cmp
test
mov
mov
cmp
daa
sbb
fs
sub
gs
sbb
mov
mov
xchg
je
jne
cmp
bound
xchg
xlat
(bad)
cmc
shrl
jle
pop
mov
fnstenv
or
mov
sub
(bad)
and
sub
das
or
fidivs
int
int3
mov
xchg
js
fimuls
dec
cs
je
cli
sbb
std
or
pusha
cltd
lahf
xor
int
loopne
sub
cltd
mov
wbinvd
fidivs
add
mov
mov
bound
ljmp
ja
in
push
mov
adc
lods
pop
push
sub
sub
sub
dec
es
sbb
dec
out
xor
mov
in
clc
jl
dec
aad
outsb
bound
into
repz
jbe
repz
bound
sub
sub
or
mov
and
and
outsb
in
cmp
je
push
sub
cmp
daa
xlat
sub
xor
call
sub
mov
cmp
mov
js
js
mov
mov
ret
in
popf
sub
and
stos
sub
mov
bound
shl
unpckhps
stos
ss
das
mov
mov
push
add
mov
movsb
das
movsl
das
outsb
dec
imul
les
cs
jo
or
test
sub
es
cmp
mov
stc
(bad)
(bad)
sub
comiss
sub
mov
or
imul
fisubrs
arpl
fsubrs
rcr
sub
mov
cwtl
stos
sarl
lret
out
xchg
aaa
ret
add
fstpl
popa
push
dec
shrl
gs
push
std
sbb
mov
xor
inc
in
sub
rorl
lahf
jmp
daa
popa
cltd
jno
iret
(bad)
gs
addr16
sbb
sbb
call
xchg
inc
mov
mov
or
and
jge
sub
xlat
dec
popa
sub
cmc
outsb
or
lahf
pop
sbb
lahf
stos
pop
sbb
cmp
insl
xchg
add
and
popa
lock
fisubl
lahf
cltd
mov
mov
sbb
sub
sti
subl
lea
mov
stos
sub
mov
fwait

sub
ja
fisubrl
or
sub
sub
xchg
xor
cmp
jle
lods
adc
cs
ss
xchg
lods
lods
mov
cltd
js
nop

rorl
lahf
mov
dec
es
pushf
sub
leave
xchg
ljmp
cmp
and
sub
sub
sub
cmc
jle
xchg
xor
int3
pop
sub
bound
pop
lcall
in
lock
pop
fs
popf
or
popf
stos
push
xchg
dec
mov
sbb
cltd
xchg
and
mov
push
xchg
push
outsb
sub
outsb
lahf
jle
sub
stos
cmp
mov
sub
jle
and
push
mov
ljmp
sub
pop
daa
or
cmp
cmp
(bad)
sub
(bad)
xor
js
nop

add
in
ss
xlat
sub
jle
repz
rclb
pop
out
pop
add
jns
sub
stc
in
sub
jle
sub
jmp
cmp
es
ss
(bad)
xor
js
clc
outsb
or
xor
sub
nop

ss
sub
sub
pop
ljmp
nop

ss
insl
shll
sub
cli
sub
imul
stos
sbb
sub
mov
sub
mov
repz
fs
dec
lahf
(bad)
push
insb
lret
ficoms
test
imul
insl
cmc
outsl
inc
sub
adc
mov
js
cmc
outsb
stos
stos
adc
cmpsl
cmp
add
lahf
cvtpi2ps
or
lods
sub
add
or
nop

rorl
cmpsl
mov
lods
adc
sub
sub
movsb
repz
je
stos
sbb
and
(bad)
jle
mov
addr16
lahf
lahf
sub
lahf
nop

dec
cs
sub
stc
and
cltd
lahf
adc
sub
sub
sub
jmp
sub
scas
out
popa
test
sub
inc
gs
leave
ja
lret
xor
xchg
stos
add
inc
movsl
lods
mov
stos
stos
js
push
ljmp
stos
lret
push
sub
pop
data16
sub
jbe
mov
das
out
sub
scas
xor
pusha
in
add
out
nop

cmpsl
repz
jle
stos
xor
or
xor
test
jmp
test
xchg
xor
mov
clc
stos
mov
das
mov
sub
xchg
push
repz
mov
or
dec
pusha
or
lret
addr16
js
notb
wbinvd
cltd
int
in
cltd
lea
sub
nop

bound
cmp
adc
sub
add
inc
xchg
mov
mov
cmp
or
xlat
jmp
lahf
jle
push
jne
mov
popa
lock
pusha
jmp
xchg
adc
ljmp
fs
sub
sub
xchg
mov
lods
xchg
push
sbb
sub
jmp
jnp
daa
sub
xor
cmc
outsb
sub
(bad)
lock
dec
mov
in
adc
mov
packuswb
cltd
mov
mov
daa
mov
or
insb
mov
rorl
daa
or
dec
movaps
outsb
cmp
or
(bad)
clc
ss
cmp
cltd
lea
mov
xor
sub
xor
dec
cmp
and
sub
pop
and
push
es
or
jge
inc
and
subl
push
es
jo
sub
inc
and
es
ficoms
movsl
nop

outsb
outsl
mov
xlat
xlat
in
push
mov
imul
and
jecxz
and
in
mov
push
jae
lahf
cltd
mov
xor
dec
outsb
sti
insb
insb
insl
add
(bad)
leave
bound
mov
lahf
stos
jae
sub
xchg
out
decb
nop

add
push
dec
inc
xchg
popa
sub
popa
push
aas
andl
dec
adc
sub
in
xchg
call
push
cltd
push
fs
das
fs
arpl
lret
ror
push
ss
aas
adc
lret
mov
wbinvd
outsl
das
mov
lods
add
ss
push
cmc
adc
xchg
outsl
ljmp
sub
cmc
mov
loop
adc
and
or
push
sub
xor
test
mov
dec
dec
mov
push
int
push
outsb
sub
lret
and
clc
outsb
fisubl
stos
push
in
dec
aaa
or
fsubr
icebp
imul
xor
dec
or
xor
dec
lods
sbb
dec
sub
push
imul
outsb
xor
ljmp
sub
cs
clc
ss
dec
dec
jg
pop
push
dec
fildll
std
and
pushf
sub
sbb
cmc
cmp
(bad)
in
sub
insl
or
push
cmp
rcr
test
outsb
xor
pop
sub
cs
adc
cmc
outsb
cs
xor
cmp
out
(bad)
sti
(bad)
pop
or
jmp
outsb
lods
(bad)
push
sub
lods
xor
movsb
pop
sub
lret
sub
or
dec
and
and
cmp
push
shll
sbb
jae
outsb
iret
or
sub
fimuls
and
test
sub
or
jmp
sub
out
sub
std
cmp
cmp
repnz
(bad)
cmp
sti
inc
cmp
cs
xor
stos
xchg
or
lods
das
int3
lret
xor
sbb
dec
xor
testb
fiadds
jae
je
or
or
pop
inc
mov
cmp
and
stc
sub
push
je
je
je
je
fists
int
bound
cmove
lock
or
or
imul
insb
js
xor
aaa
ret
sub
outsb
shrb
adc
lea
cmp
mov
mov
mov
cmp
aas
das
insb
mov
sub
mov
out
sub
sub
xor
ljmp
push
cs
ss
lods
das
pop
insb
scas
das
data16
push
mov
ljmp
dec
sub
lahf
arpl
popf
add
cmp
xchg
lock
ds
cmp
sub
call
or
out
das
or
sub
sub
sub
clts
jmp
or
mov
and
or
xor
into
arpl
lret
jo
xor
lcall
fcoml
adc
bound
or
sub
iret
cmp
or
sub
or
sub
dec
sbb
sbb
or
lea
ret
pop
sub
popf
or
push
cmp
lret
and
cld
paddusw
cltd
or
cmp
das
mov
mov
xlat
xchg
repz
pop
or
cmp
add
jmp
or
sbb
testl
arpl
test
mov
cmp
stc
sub
gs
cmp
(bad)
aad
outsl
(bad)
iret
das
insl
(bad)
fnstcw
sbb
fdivrs
cmp
sbb
addr16
pop
pop
sub
outsb
fs
or
ror
inc
in
mov
in
in
in
in
in
pop
loop
push
mov
rorb
aam
push
or
ds
cmp
rorl
xor
or
fisubs
lods
cmc
ss
daa
(bad)
or
dec
mov
sub
pop
das
test
sbb
sub
xchg
fmuls
jnp
outsl
shrb
pop
lahf
sub
pcmpgtb
das
das
or
repnz
sub
cmp
push
lahf
lods
add
sub
pop
ljmp
sub
in
push
call
sub
push
scas
xchg
push
sub
sub
sub
push
xchg
push
in
jno
out
sub
sbb
popf
sbb
in
pusha
and
sub
or
sub
sub
add
xchg
sub
je
cmp
jge
cmp
cmp
bound
push
xchg
cld
cld
mov
cli
and
or
cld
jo
sub
addr16
xor
sub
jecxz
sub
outsb
cmp
or
sub
sub
outsb
std
stos
cmp
push
stos
and
xor
jl
sub
push
sub
mov
sub
jecxz
stos
sub
nop

nop

sub
xchg
mov
es
cmp
sub
xchg
(bad)
fs
inc
call
repz
xchg
sub
popa
fmull
imul
bound
mov
adc
xlat
js,pt
(bad)

cmpsb
(bad)
dec
jle
sub
test
sub
lahf
cmp
xchg
imul
mov
jl
lods
pop
xor
int
fisubrs
mov
fs
sub
fimuls
insb
addr16
and
lahf
lahf
outsb
pop
sub
repz
lods
sub
call
subb
push
or
mov
adc
cs
cltd
sub
cmc
and
mov
sub
daa
outsl
or
sub
sub
sub
daa
or
in
das
outsb
insb
cmp
insl
lret
and
shrb
sub
sarl
mov
aas
call
xlat
cmp
sbb
sub
add
imul
push
fs
xchg
nop

cmp
bound
jno
mov
or
mov
cld
repz
ljmp
or
das
ljmp
add
cmpsl
or
or
outsl
insl
das
push
xchg
push
cmovne
in
jno
xlat
out
add
aam
fs
stos
adc
add
jmp
push
mov
mov
nop

sub
out
pop
fs
call
int3
clc
pop
xchg
dec
sub
pop
xchg
xchg
push
sub
lahf
outsb
mov
push
aaa
mov
sub
fs
ss
ss
jmp
jnp
jmp
stos
jno
imul
nopl
nop

in
or
pop
and
cmp
sub
dec
cltd
cmp
in
scas
and
insl
and
call
and
ss
mov
test
lods
mov
xor
push
insl
(bad)
push
sub
push
hlt
ljmp
call
pop
mov
out
cmp
cmpsb
nopl
bound
push
outsb
std
fisubrs
inc
nopl
mov
scas
sub
mov
and
sub
das
push
nopl
or
imul
sbb
add
sub
or
in
imul
into
add
and
mov
loopne
push
push
(bad)
sub
sbb
lahf
sub
push
fildll
wbinvd
les
jge
cmp
cmp
push
xor
lods
ljmp
jne
xor
jp
ss
and
sbb
mov
mov
sub
sub
fwait

or
sub
push
and
inc
and
fs
mov
sub
cmp
cmp
sbb
add
mov
and
les
dec
push
and
push
iret
cmp
cs
enter
mov
mov
cmp
lret
sub
dec
sbb
and
shll
stos
or
daa
or
sub
lret
outsb
cmp
jb
fs
stos
or
stos
and
and
pop
mov
dec
and
dec
and
and
pop
dec
and
dec
das
repz
push
or
push
lahf
outsb
std
mov
and
jmp
jmp
xor
or
push
cmc
outsb
cmp
push
loope
sub
clc
pop
bound
push
push
dec
and
lahf
outsb
imul
or
mov
cmp
pusha
icebp
call
add
dec
sub
xor
out
jo
insl
mov
pop
fldcw
sub
mov
jbe
aam
mov
push
out
sub
jnp
sub
lock
and
andl
sub
in
fs
outsl
bound
push
sub
cmp
xor
mov
jg
adc
lea
or
outsb
int3
xchg
mov
outsb
data16
mov
insb
sub
mov
clc
ja
ficoms
mov
cmc
rcrl
jle
fisubrs
clc
outsb
rolb
or
xchg
or
int
(bad)
dec
lahf
outsb
ljmp
push
das
gs
cmp
inc
push
fsubrs
and
and
dec
add
scas
add
sbb
or
ret
mov
and
sub
subb
mov
lods
and
add
and
xchg
dec
sub
in
and
mov
dec
daa
(bad)
and
lret
xchg
cmp
cltd
fimuls
push
pusha
and
push
fstpl
xchg
jb
jge
std
jg
or
and
or
in
and
jge
jg
pop
xor
bound
push
int
mov
cs
vpunpcklwd
sub
lret
inc
lret
sub
fs
mov
push
insl
icebp
sub
mov
lea
cmp
sti
das
push
xor
std
das
lahf
outsb
arpl
lahf
outsb
and
or
ljmp
sub
in
push
jle
or
xor
jo
or
ljmp
dec
sub
and
sub
or
or
mov
pop
sbb
sub
sub
outsb
jl
mov
push
daa
mov
cmp
fs
sub
add
mov
or
lret
push
push
pop
and
and
jmp
cld
in
mov
sbb
clc
daa
ret
sub
push
adc
add
fsubrl
push
and
sub
xchg
xchg
jge
mov
pop
xor
cmp
cmp
(bad)
push
into
cmp
jp
pop
sub
(bad)
cmp
imul
aas
dec
stos
or
dec
xor
and
sub
insl
xor
cmp
stos
cmp
cmp
mov
adc
mov
mov
sub
mov
test
and
xchg
cmpsb
sti
and
sub
ret
mov
leave
(bad)
wbinvd
xchg
xor
dec
int3
dec
xlat
ss
dec
sub
and
and
push
dec
jnp
in
mov
cmp
mov
imul
cltd
inc
test
sub
outsb
nop

mov
sub
push
sub
fsubr
rorl
sub
push
xchg
insb
sub
and
(bad)
mov
popf
xor
dec
das
in
divb
outsl
xchg
scas
cmp
cs
mov
cmp
cmpsl
insl
mov
(bad)

fstpt
lret
cmp
adc
daa
mov
daa
mov
sub
scas
cmp
mov
cmp
cmpsl
jg
push
sub
sub
xchg
add
and
dec
outsb
mov
push
or
shl
out
push
shl
in
insl
fsubs
cmp
sti
sub
pop
fisubs
gs
cltd
popf
cmp
lods
jge
mov
sub
outsb
mov
nop

mov
sub
lods
push
sub
mov
ljmp
and
xlat
jo
das
mov
popa
aam
jg
iret
daa
lret
cmp
push
sbb
add
xor
insb
add
inc
jg
fsubr
push
xchg
(bad)
or
xor
jmp
sbb
cli
fdivrs
clc
outsb
lods
sub
mov
cmc
sub
jnp
cmc
outsb
mov
xchg
push
and
sub
(bad)
lds
or
leave
jne
jne
dec
mov
jmp
mov
jne
fdivrs
cmp
int3
test
lret
inc
fisubrs
loope
daa
jnp
pop
xor
sub
pop
sub
and
sbb
das
test
or
jl
add
lcall
aas
mov
int3
cmp
push
mov
es
sub
out
sub
or
jp
cmp
ljmp
cmc
sub
addr16
outsb
scas
fs
aam
xor
das
(bad)
stos
and
and
and
mov
jb
sarl
cli
popf
sbb
punpckhdq
rcrl
or
mov
pop
iret
adc
mov
xor
xor
movsl
lea
inc
cmp
sbb
aas
cmp
sub
insl
cmp
mov
sarl
dec
xor
push
je
pop
(bad)
pop
je
sub
stos
nop

push
dec
or
ljmp
cmp
sub
ja
cmp
imul
xor
sti
add
nop

jnp
sub
or
cmc
lret
aad
fsubrl
imul
shrb
in
dec
and
or
test
popa
push
xchg
out
rclb
ficoml
pop
lret
sub
gs
and
xor
sbb
push
mov
jmp
push
jp
and
mov
fwait

inc
ds
push
jns
mov
sbb
and
ds
sub
js,pt
(bad)

lret
and
xlat
sub
in
fisubrs
lahf
mov
loopne
mov
outsb
adc
push
in
fsubrs
cltd
push
sbb
outsb
lods
fs
push
sub
mov
push
mov
addr16
sub
fimuls
lods
lahf
sub
nop

fcoms
das
loopne
adc
adc
jno
insl
fidivrs
addr16
sub
fisubrs
xchg
rcr
jno
shlb
jg
sub
sub
or
or
cmp
sub
adc
ja
lods
sub
dec
sub
or
int3
popa
xchg
dec
sub
or
xchg
nop

or
std
xchg
setns
sub
push
mov
popa
jmp
das
inc
sub
sbbl
and
fs
sub
scas
(bad)
xlat
scas
jp
popa
jns
stos
jp
aam
jp
sub
mov
popa
and
and
fisubrs
mov
bound
popa
push
fsubrs
pop
stos
das
mov
push
sub
cmp
aas
mov
and
lods
pop
sub
mov
and
mov
daa
and
stos
and
ljmp
in
mov
es
cmp
fdivrp
mov
mov
jp
and
shrl
sub
addr16
out
sub
mov
sub
and
sub
xchg
mov
stos
cs
ljmp
cmp
sub
mov
sub
fisubrs
xchg
jmp
or
xor
stos
inc
mov
insl
xor
jnp
sub
sub
fs
fs
xchg
bound
sub
ss
das
or
xor
jle
sub
adc
jmp
das
mov
mov
xchg
mov
push
into
popa
and
sub
arpl
sub
push
xchg
xchg
and
push
call
jg
sub
es
cltd
mov
in
mov
sbb
add
cmp
jns
das
mov
fs
icebp
xor
in
or
roll
and
or
jmp
cmp
mov
xchg
scas
push
sbb
jbe
sub
mov
stos
lods
test
fidivs
in
aas
out
popa
dec
xchg
test
push
fs
test
adc
sub
dec
sub
jp
sub
push
int
ljmp
lret
jp
push
(bad)
sbb
push
jmp
mov
sbb
das
addr16
outsl
bound
sub
jecxz
mov
gs
sub
dec
add
aad
sub
add
jns
or
lods
sub
or
xor
mov
inc
push
addb
inc
mov
cmp
es
xlat
dec
cmp
and
(bad)

bt
sub
sub
arpl
inc
scas
cmp
cmp
cmp
sub
bound
mov
int3
mov
mov
mov
sub
sub
inc
in
fs
ss
sbb
sahf
lahf
cltd
lret
mov
insb
in
gs
lods
dec
js
in
popa
sub
int
mov
and
sub
push
sub
add
or
lahf
lods
das
dec
rorb
mov
mov
dec
and
nopl
lahf
insl
lahf
push
lret
sub
adc
push
jb
das
or
and
pop
push
scas
das
cmc
icebp
mov
call
test
sub
sub
and
movsl
mov
mov
stos
and
and
lret
and
sbb
inc
lahf
addr16
ss
outsb
inc
outsb
orb
pop
cmp
sub
mov
adc
mov
jmp
imul
pop
sbb
dec
imul
outsb
test
adc
js
insb
js
nopl
sub
daa
sbb
push
imul
ljmp
imul
xchg
mov
fs
adc
sub
outsb
sub
daa
(bad)
lret
xlat
imul
ss
sbb
imul
sub
push
or
leave
xor
lret
bound
and
ret
aaa
outsb
mov
mov
xor
test
js
nop

jb
or
cltd
int3
sub
imul
xchg
adc
adc
call
sub
jnp
sbb
cmp
mov
cmp
sbb
ret
and
std
inc
sbb
movd
mov
andb
cmp
lret
push
fs
xchg
ljmp
fs
aaa
xchg
dec
adc
dec
jle
out
push
ret
xchg
repz
out
repz
into
and
(bad)
sub
mov
cmc
fs
sbb
and
jbe
fwait

daa
jmp
pop
jl
sub
fwait

or
bound
cmpsl
js
cmp
outsb
std
cmp
sbb
fs
test
in
sub
dec
jle
sbb
dec
xlat
mov
cld
sub
aaa
mov
imul
push
lahf
mov
and
push
inc
jge
push
fbld
scas
push
insl
xchg
test
aaa
xchg
xchg
insl
xchg
jmp
cmp
mov
xchg
nop

cmp
add
lahf
mov
fmull
pushw
sub
jg
lods
and
cmpsl
movsb
stos
cmp
dec
sbb
repz
popf
es
xor
in
es
sti
sub
jle
cs
cmp
push
scas
mov
sub
push
xchg
mov
stos
cs
push
fwait

cs
movsb
stos
xor
das
stos
push
outsb
mov
das
sub
and
loopne
stc
popa
lods
and
jnp
mov
inc
outsb
mov
jp
sub
xchg
int3
cmp
sub
sarl
mov
jb
outsb
fsubr
cmp
cs
movsb
dec
sbb
into
pop
cmp
push
add
push
ret
lret
sub
scas
sbb
mull
stc
push
cmp
sub
cmp
push
fistpl
test
cmp
fdivrl
xor
mov
mov
dec
xor
push
xchg
outsl
das
add
sub
js
xor
push
call
popa
cmp
lods
lret
das
mov
cmc
jg
cmp
push
lods
pop
sub
push
jg
dec
in
cmp
lss
pop
push
imul
or
xchg
add
sbb
ret
jg
push
cltd
cltd
lahf
mov
sbb
mov
and
sbb
sbb
dec
mov
pop
pusha
stos
sub
insb
or
sub
jmp
push
movsb
in
sub
sbb
xor
and
push
mov
cltd
es
aas
xor
je
scas
cmp
mov
cmp
or
js
sub
repz
and
or
push
cmpxchg
sub
and
mov
and
and
mov
add
mov
and
push
xchg
xor
xchg
push
cmp
arpl
in
sub
sub
jb
dec
subl
(bad)
mov
sub
or
push
fidivl
push
pop
push
fimull
test
adc
movaps
stc
adc
or
dec
cmpsl
fwait

lods
cmpsb
mov
sub
fnstsw
lds
sbb
mov
stos
or
adc
jb
inc
cs
ss
insl
nop

pop
das
aam
btl
adc
xlat
xchg
mov
fwait

pop
aas
ljmp
rorl
imul
sarb
in
dec
xchg
and
inc
lahf
outsb
mov
sub
fwait

nop

pop
pop
cmp
sub
out
pop
fs
nop

outsb
or
clc
mov
dec
aaa
dec
add
lahf
adc
xchg
(bad)
cli
sub
nop

or
sub
pushf
xchg
inc
shll
addr16
mov
and
adc
cmp
mov
or
lods
xor
cmp
push
loope
mov
push
add
pop
push
push
fs
gs
test
sub
test
cmp
enter
insl
mov
sbb
leave
sub
das
icebp
inc
cmp
jp
sub
add
xchg
inc
mov
fnsave
stos
or
and
xchg
push
inc
sub
push
jb
sbb
insb
jmp
mov
and
testl
nop

or
xchg
std
xor
mov
mov
push
stos
shrl
push
fstpt
pop
dec
or
cmp
dec
aam
or
mov
and
and
xorl
cmpsl
xor
and
sub
xchg
adc
xchg
jno
bound
mov
(bad)
cmp
mov
fsubl
rorb
xor
and
popa
dec
sub
sbb
jecxz
popa
and
cs
or
bound
bound
nopl
sub
sub
fcoml
sub
sbb
xlat
mov
push
mov
sub
es
add
popa
mov
ficompl
pop
sub
push
and
insl
popf
sub
pop
mov
daa
insb
fldl
xchg
jnp
push
dec
xlat
fs
clc
pop
outsl
add
cltd
popf
arpl
pop
cmp
cmp
pop
shll
pcmpgtd
mov
cmp
sub
cmpsb
in
xlat
sub
mov
lahf
shrl
pop
xor
xlat
sub
imul
nopl
lret
cmpsb
mov
push
cmc
outsb
and
sub
lds
push
daa
ja
insb
stos
cmp
xor
xlat
sub
xchg
xor
cmp
lret
fsubr
lahf
adc
push
cltd
lahf
cltd
popa
sub
cmp
jge
cltd
outsb
cmp
stos
sub
cmp
cltd
imul
cs
push
wbinvd
repz
sub
sub
and
outsb
cmp
cmp
cmp
js
sub
adc
in
push
cmp
or
or
movsl
call
sub
sbb
das
add
push
outsb
lods
(bad)
lock
popa
and
outsb
sub
jle
xchg
sub
jae
shrl
imul
out
bound
lahf
shll
jle
fs
bound
bound
push
jae
jno
push
xor
imulb
jl
jle
sub
scas
adc
loopne
adcl
xchg
imul
push
jge
out
lahf
cltd
adc
sub
cld
mov
cmp
cmpsl
cli
call
aas
mov
jge
push
lret
lods
popa
and
popa
nop
sub
or
shrb
ja
clc
sub
cmpsb
test
xchg
xchg
sub
or
or
addr16
sub
jle
fs
fs
sub
push
xchg
sub
xchg
es
sub
xchg
mull
lahf
cltd
testl
and
sub
sub
jmp
sub
xchg
dec
fs
fs
inc
sbb
push
(bad)
xor
push
stos
out
cltd
mov
stos
mov
mov
and
cltd
repz
mov
nopl
cmpsb
lods
das
addr16
push
rep
mov
rorl
scas
or
xor
xor
sahf
sub
stos
mov
cmp
stos
cmp
mov
sub
shrb
mov
lock
and
ds
cmp
cmp
mov
sub
xlat
pop
js
sub
cmp
punpckldq
mov
insl
and
bound
lods
lret
imul
jg
jmp
stos
jle
push
mov
sub
and
stos
sub
call
lock
in
mov
jae
push
inc
sub
imul
xor
and
das
inc
insl
and
outsl
xor
xor
nop

mov
in
and
and
shlb
cmp
lods
test
push
or
insl
lock
mov
stos
and
in
bound
insl
cmp
das
sbb
imul
cs
sub
lock
cmc
outsb
sub
mov
cmc
cmpsl
sub
pop
pop
insl
sub
xchg
jmp
jl
cmc
loopne
sub
ret
mov
jg
(bad)
pop
stos
ljmp
insl
jnp
mov
sub
nop
in
cs
out
sub
nopl
lods
cwtl
xchg
push
cs
outsb
dec
sbb
dec
pop
sub
xchg
sub
sub
shld
sbb
jl
stos
mov
and
cltd
sub
in
or
cs
das
stos
push
inc
mov
push
mov
add
add
lret
sub
cmp
cmp
popf
ljmp
insb
es
les
lock
mov
sbb
lret
in
xchg
sub
int
iret
add
cmpsl
jnp
and
aas
sti
das
and
sub
jns
and
or
lret
and
sbb
insb
js
lods
cmp
movsl
push
imul
js
dec
mov
mov
negb
mov
jnp
push
daa
jge
in
jnp
sub
mov
adc
xor
scas
imul
add
test
test
add
pop
test
sub
dec
xor
in
mov
or
inc
or
or
mov
mov
or
leave
lret
sub
push
jmp
cs
insb
mov
lret
push
mov
and
xchg
int3
bound
fs
in
out
push
mov
adc
das
insb
ljmp
enter
inc
shlb
call
sbb
addr16
xchg
stos
sub
lret
fs
adc
out
das
clc
insl
cs
ss
cltd
push
data16
push
bound
jmp
push
xchg
imul
stos
sub
fs
push
or
dec
fs
and
dec
and
dec
cmp
mov
fs
int
imul
shll
arpl
push
mov
sub
jmp
add
push
xor
cmp
insl
cwtl
xchg
inc
push
jge
call
jg
das
cvtpi2ps
push
push
outsb
scas
scas
mov
sub
mov
and
or
sub
lret
sub
je
in
outsb
aas
out
cld
call
push
sahf
sub
sarl
test
pop
sbb
imul
sub
outsb
sub
popa
cmc
sbb
xorl
out
stos
bswap
pop
sub
mov
push
push
push
sub
aaa
or
xor
push
orl
or
push
dec
sub
cmp
jp
stc
dec
test
das
sub
mov
popa
call
push
add
lret
cmp
sbb
mov
int
mov
xor
push
call
inc
push
(bad)
mov
iret
arpl
lahf
push
lea
negb
sub
shrd
dec
sub
adc
int3
mov
les
pushf
ucomiss
add
ds
dec
jle,pt
and
jno
sub
clc
mov
mov
add
push
lock
dec
(bad)
leave
mov
sub
push
out
mov
pop
stos
sahf
sub
add
int
es
and
pop
pop
int
add
cmp
ss
cmp
sbb
sbb
push
mov
dec
jp
push
fs
mov
sbb
or
sbb
sub
pop
jmp
xchg
jnp,pt
or
push
add
stos
mov
sbb
dec
js
pop
sub
imul
mov
cmp
sti
and
das
dec
or
out
or
sbb
sub
aas
enter
mov
and
sbb
cmp
outsb
mov
js
std
push
or
push
xor
jb
xor
add
stos
int
bound
nopl
scas
sub
mov
lret
js
mov
fidivrl
fnsave
jmp
les
mov
jp
xor
cmp
xlat
das
push
xchg
insl
and
popa
sub
adc
(bad)
cld
insb
imul
hlt
jge
cld
push
push
adc
or
or
and
fstpt
rol
das
or
and
push
movsb
stc
pop
sub
call
xlat
xlat
push
sub
movl
mov
or
adc
js
sub
call
mov
sub
sub
sub
and
fwait

sub
push
add
ficompl
imul
and
xor
mov
xor
imul
jmp
pop
xor
int
xlat
xchg
or
das
xchg
jge
nop

sti
popa
(bad)
bound
or
daa
rorb
rcrl
cmp
sub
cmp
push
push
cmp
aas
addr16
out
or
call
cld
es
lahf
cmp
mov
sub
or
fstps
and
jne
mov
cs
into
sub
es
push
dec
or
in
push
(bad)
sti
das
imul
mov
outsb
cli
fwait

sbb
push
aam
sub
std
cld
(bad)
mov
adc
mov
adc
adc
cmp
fdivl
fcomps
sub
or
out
cmp
outsb
aam
(bad)
sub
clc
sub
(bad)
cld
sub
je
sub
int3
cmc
fs
gs
mov
sub
or
or
imul
adc
sub
add
loopne
xlat
and
(bad)
insl
sub
(bad)
jge
and
icebp
sub
adc
cmp
inc
clc
nop

lea
call
rcrb
sub
mov
jge
sub
xchg
inc
ljmp
sub
pop
sub
lea
sbb
aas
add
ror
and
fs
and
sbb
or
lahf
sbb
mov
and
and
cli
fs
outsl
and
dec
sub
mov
bound
jnp
std
fwait

push
in
sub
aas
jnp
sub
or
lods
adc
fs
fwait

or
jnp
dec
pop
cmp
add
fsubrs
cltd
fldl
or
sub
cltd
mov
jmp
sbb
sub
nop

outsb
pop
push
sub
insl
xchg
jmp
imul
push
int3
insb
std
das
cmp
push
(bad)
jge
sbb
add
xchg
mov
pop
test
pop
and
inc
in
pop
jno
push
stos
mov
sub
cmp
pop
jno
mov
sub
setbe
ljmp
pop
sub
and
popf
xor
lret
sub
cltd
shll
xlat
sub
jmp
iret
push
push
cwtl
mov
js
popf
or
stos
bound
jnp
xlat
push
sbb
cmp
sub
iret
repz
imul
arpl
jecxz
sub
sub
lods
jmp
push
mov
call
das
fistpl
lret
das
outsb
pop
jnp
outsb
cltd
push
dec
sub
stos
das
pop
lret
mov
cmp
in
cmp
push
or
or
sub
cmp
xor
pop
in
fisubs
cmp
sbb
lahf
mov
xor
push
jge
out
fsubrs
cmp
sti
pop
dec
lea
bound
mov
mov
(bad)
xor
adc
(bad)
mov
jge
je
adc
pop
mov
out
or
or
sbb
cltd
lahf
lock
and
call
sub
jnp
outsb
aam
or
sub
imul
cmp
sub
outsb
shll
push
arpl
and
sub
jle
xlat
and
sub
add
inc
jmp
outsb
sub
lret
mov
fs
or
punpckldq
and
jbe
and
cli
lret
lock
in
bound
jle
out
bound
jle
sub
outsb
adc
push
test
jl
inc
sub
or
sub
sub
daa
int3
cs
sub
xor
or
xchg
aas
sub
shr
sub
inc
sub
fs
imul
xchg
push
sub
mov
or
or
in
outsb
jae
push
mov
cmc
stos
adc
jle
rcl
lods
cs
ret
(bad)
and
cs
lods
gs
lods
mov
stos
jo
sub
xor
xchg
fwait

mov
mov
popf
imul
fs
ds
and
stos
sub
xor
mov
sub
pop
stos
push
mov
popa
stos
adc
jp
repz
rclb
and
and
and
cmp
stos
mov
std
and
cltd
push
and
sahf
sub
sbb
das
aaa
push
shr
sub
outsb
in
push
(bad)
adc
imul
and
outsl
adc
adc
popa
and
out
in
and
outsb
lods
push
adc
ljmp
and
mov
sbb
pop
push
cltd
sub
fs
test
push
xor
sub
mov
imul
stos
and
or
cmp
les
paddsw
in
push
xor
out
dec
imul
call
je
sub
outsl
das
out
xor
sbb
pop
sub
(bad)
sarl
sub
loop
(bad)
xor
ss
push
pop
nopl
push
xchg
add
cmp
lods
and
in
sub
mov
sub
cs
ret
jmp
ljmp
sub
out
xor
in
xor
and
xor
bound
insb
cmp
sub
xchg
je
xchg
sub
js,pt
cmp
(bad)

sub
push
add
insb
or
sub
jmp
sub
lret
gs
xor
sbb
fcomip
int
pop
outsb
add
test
mov
sub
or
or
mov
lods
or
pop
mov
lahf
or
push
sub
xchg
ret
dec
sub
and
int
and
sub
mov
stos
sub
test
or
lret
sub
pusha
aam
fwait

stc
div
bound
scas
into
daa
stos
cmp
sub
sub
mov
sub
cs
sub
insb
add
leave
or
call
ss
mov
add
repz
int
std
les
jo
xor
sbb
fsubrs
sub
add
adc
movb
sub
popf
xchg
push
mov
call
lret
outsb
adc
jmp
lahf
push
(bad)
clts
std
dec
mov
sub
movsb
mov
and
sub
sar
sub
daa
movsb
negb
inc
bound
adc
and
popa
push
xchg
or
test
repz
mov
push
imul
insb
lcall
mov
lret
mov
icebp
outsl
(bad)
mov
dec
dec
adc
xchg
ds
or
leave
pop
iret
or
sub
push
lea
mov
dec
dec
xor
sub
and
insl
pop
in
lahf
cltd
cltd
mov
sub
or
sbb
out
inc
jecxz
sub
les
fmul
sub
into
cs
sbbl
xor
into
cs
lret
out
les
lret
xor
push
add
push
sbb
rclb
sub
cpuid
(bad)
in
lods
sub
mov
int
or
jle
lret
dec
daa
cltd
dec
and
int3
adc
jg
es
and
xchg
xchg
sub
out
in
cmc
mov
lods
sub
outsb
or
sub
dec
ds
in
imul
in
das
xchg
ds
add
das
add
mov
dec
inc
(bad)
leave
xchg
sbb
sub
or
insl
aas
sbb
jp
lods
sub
stos
sub
ljmp
and
lret
stos
sub
lods
mov
dec
insb
sub
jp
gs
xchg
movsb
outsl
jnp
jmp
insl
test
(bad)
in
xor
in
lret
call
dec
mov
popa
imul
addr16
mov
and
rorl
repz
ficomps
aaa
pop
sub
bound
insb
mov
rorl
pop
mov
sub
pusha
ljmp
fisttpll
or
das
fldt
xor
lahf
sub
imulb
and
outsb
sbb
(bad)
push
and
sub
adc
jle
jmp
ss
push
xchg
or
bound
cmp
outsl
sub
outsb
jge
push
jp
mov
bound
lret
push
xchg
jge
movsl
jp
sbb
fldcw
push
push
adc
sub
das
js
push
adc
dec
das
imul
push
fisttps
lock
fs
or
mov
push
ljmp
jmp
and
fwait

sub
push
pop
sub
aaa
jnp
and
daa
rcrb
(bad)
dec
push
call
sub
lcall
or
cwtl
bound
mov
stc
xor
pop
and
push
jle
shl
jmp
adc
daa
sub
sub
daa
outsl
pop
stc
daa
add
in
sbb
cmp
sub
adc
dec
jmp
test
dec
into
xor
imul
fwait

scas
jmp
clc
sub
(bad)
lods
or
pop
adc
stos
shll
fs
rcll
mov
lea
lea
fs
add
insb
adc
sub
mov
or
dec
lahf
push
popf
daa
inc
cltd
dec
daa
in
pop
dec
lcall
sbb
loop
psllw
outsb
mov
jecxz
das
mov
and
sub
test
adc
fistpll
sbb
sub
outsb
sub
lret
and
scas
and
sbb
lret
xchg
test
loop
mov
stos
cmp
xlat
push
in
movsl
lods
dec
cltd
push
mov
pop
mov
and
sub
push
stos
sub
out
fsubrl
push
pop
(bad)
sub
sub
adc
sbbl
xchg
sub
add
mov
js
(bad)
std
inc
push
jge
mov
mov
cltd
mov
sub
xlat
(bad)
and
lods
fldcw
fisubrs
sti
das
sub
lods
shll
dec
or
lret
mov
rcrl
push
mov
fadds
mov
test
and
lea
movsb
std
adc
sub
insl
sub
or
inc
xlat
push
and
and
mov
or
aam
nop

popa
push
mov
push
andb
repz
(bad)
loop
push
rcrb
cltd
pop
and
int3
das
and
and
mov
stos
loope
cmc
jl
mov
aam
mov
dec
fwait

das
xor
sub
scas
fsubrs
(bad)
test
jnp
ja
fbld
fs
fcompl
cmp
pop
cmp
das
clc
mov
pop
ss
jl
mov
jo
and
sub
sub
sub
mov
out
jne
fisubrs
fdivs
popa
and
sub
in
cmp
and
clc
xlat
fwait

cld
mov
shl
xor
stos
cmp
shrb
sub
cmc
shrb
and
cmp
sub
sub
fs
sub
fldt
aam
paddw
cmc
push
or
add
pop
xchg
xchg
push
xor
push
push
and
jl
cmp
cwtl
cmp
or
mov
shrb
sub
fsubrs
outsb
xchg
loopne
jmp
jp
(bad)
or
pop
(bad)
aas
xchg
sarb
nop

xchg
std
mov
mov
sub
hlt
aam
sbb
cmp
pop
sub
sti
and
jno
xchg
rorl
(bad)
cltd
fimuls
arpl
jno
fisttpl
sbb
shrd
add
cmp
and
or
push
insl
cmp
cmp
cmp
cmp
fwait

aaa
cltd
push
xor
clc
popa
cmp
fisttpll
pop
mov
cld
or
cmp
lods
call
cltd
push
sub
push
adc
pop
outsb
ja
xor
mov
xor
sub
out
fldenv
out
lods
jmp
es
outsb
gs
dec
stos
push
cmc
outsb
in
push
outsb
push
es
daa
pop
clc
and
jg
idiv
daa
sub
and
(bad)
daa
imul
sub
or
cld
and
lods
fcomip
daa
stc
daa
fdivl
jmp
pop
xchg
sub
lahf
in
lahf
cltd
sub
add
es
cmc
jl
inc
xor
lahf
outsb
push
xor
xlat
push
and
sub
jno
xlat
test
clc
negb
test
paddw
cmc
push
or
add
fs
mov
gs
sub
repz
outsb
push
bound
or
in
outsb
dec
das
insb
xlat
sub
cmp
sub
outsb
imul
js
sub
cs
mull
cs
sub
testl
jno
repnz
push
out
mov
sub
sub
test
fs
insb
push
sub
sub
and
and
das
sub
inc
in
fs
mov
lahf
or
cmc
scas
sub
negl
popf
popf
wbinvd
ss
lahf
cltd
notb
outsb
ljmp
adc
stos
sbb
cmp
sub
jle
lods
sarl
jle
cltd
push
shl
jle
cltd
mov
stos
cmpps
(bad)
dec
aas
js
lods
and
or
sub
jecxz
mov
lock
and
fs
sub
sub
popa
sub
lods
jo
push
scas
pop
sub
sub
inc
lret
sub
fs
sub
nop
sub
setb
into
aam
adc
ss
sub
aas
mov
cmovp
iret
jle
sub
xlat
pop
js
sub
pop
js
lods
sub
sub
cmp
stos
push
xchg
push
wbinvd
sub
nop

in
lahf
mov
lods
aas
mov
adc
sub
test
and
sub
and
lahf
push
add
fs
outsb
xchg
push
mov
dec
out
sub
jmp
jns
push
lods
bound
cmp
daa
xchg
push
xor
or
sub
popa
lock
push
(bad)
enter
je
stos
shrd
je
repz
and
add
stos
adc
xor
lods
repz
xchg
lods
mov
cmc
popa
and
in
sub
insl
das
(bad)
in
xor
int
test
mov
xor
xor
sub
or
lahf
cmp
push
push
fs
jl
sub
inc
jecxz
cmp
add
(bad)
xor
insl
stos
xlat
cwtl
insl
xor
mov
int
sub
clc
outsb
notb
pop
popa
lock
orb
sbb
push
das
push
sub
adc
imul
adc
xor
pop
outsb
jmp
fs
sbb
mov
sub
arpl
or
sub
push
test
push
xchg
inc
add
lods
popa
nop

outsb
adc
sbb
scas
xor
imul
mov
sub
pop
mov
insl
inc
test
inc
add
jbe
push
mov
lret
ss
imul
lods
push
xor
and
and
jmp
xchg
push
nop

and
gs
adc
iret
divl
insl
das
int
stos
add
fsubrs
cltd
push
dec
sbb
out
js
cmp
sub
pop
jo
sub
cmp
jmp
jae
iret
fmull
jmp
xchg
arpl
in
and
jmp
lea
das
imul
call
sub
int3
add
scas
add
pop
fwait

push
(bad)
inc
dec
sub
stc
rep
outsb
test
push
outsb
sub
wbinvd
xchg
add
mov
sub
or
or
adc
lods
sub
xchg
in
mov
sub
outsl
int3
lret
jge
and
cltd
sub
outsb
push
fs
lret
sub
insb
cmp
lret
or
and
repz
sub
or
call
cwtl
or
sub
shrb
iret
bound
push
out
pop
outsl
sub
testl
sub
push
mov
insl
or
inc
xchg
xor
cmp
lods
addr16
xchg
push
pop
xchg
mov
cmp
in
sub
mov
adc
add
mov
or
sbb
jb
sub
mov
leave
pop
clc
ss
nopl
loopne
mov
cmc
stos
inc
inc
push
cmp
shrb
les
das
mov
inc
push
cwtl
in
or
leave
and
sub
or
adc
sub
mov
neg
dec
add
ss
clc
pop
fs
sub
cmp
fs
mov
mov
mov
or
test
insb
imul
das
lods
in
sub
loopne
or
lods
mov
mov
dec
sub
lods
je,pn
lods
outsb
sub
cmp
and
push
sub
imul
loop
push
popa
cli
outsl
or
sub
in
mov
adcb
jne
cs
test
adc
in
adc
jecxz
sub
stos
aas
or
fdivrs
push
sub
mov
mov
nop

xor
cs
imul
fldenv
daa
push
test
test
leave
or
mov
enter
or
pop
pushf
adcb
sub
clc
xchg
in
jg
cmp
int
dec
xor
(bad)
adc
lret
das
push
sub
add
xor
xor
xchg
(bad)
xchg
mov
je
outsb
sarb
fcoms
push
lahf
jnp
pop
pop
lret
sbb
ficomps
(bad)
xor
fwait

or
pop
cltd
push
jbe
arpl
lret
insl
jmp
cwtl
sub
sub
push
insb
cmp
ljmp
cmc
dec
movsl
nop

fdivrs
in
pop
sub
fwait

push
outsl
insl
sub
aaa
lods
sbb
jne
jae
push
sbb
fsubs
sub
xor
lock
lock
xchg
or
shll
or
sub
call
or
jae
out
jg
ret
gs
adc
test
sub
jmp
fdiv
cltd
das
and
and
or
cmp
mov
adc
leave
pop
xor
imul
cmp
mov
xchg
ret
fs
cmp
cmpsl
jmp
aam
or
sub
insl
(bad)
ljmp
mov
mov
and
and
mov
stc
pop
sub
and
jnp
popf
push
int
ja
sub
ds
sub
sub
enter
adc
mov
das
aad
sub
mov
das
cmp
das
subl
sub
sub
inc
or
and
xchg
fistpll
or
inc
gs
inc
mov
pop
ret
shl
lret
int3
pop
jl
ds
xor
dec
or
sbb
pushf
push
push
lret
push
mov
dec
cmp
scas
sbb
bound
fdivs
push
xor
sub
mov
mov
lahf
mov
icebp
and
sub
addr16
popa
mov
mov
(bad)
fldenv
aaa
cmp
dec
sbb
or
cs
and
cmp
mov
std
sub
sub
sbb
mov
lods
and
fs
test
cmp
mov
inc
testl
test
lods
push
aas
sbb
sub
lea
outsb
and
cmp
sti
mov
push
stos
sub
sub
fwait

sub
fisubrs
sub
cmp
adc
subb
pop
mov
lea
mov
sti
or
or
sub
ss
sub
std
cmp
stos
add
pop
push
mov
pop
pop
jnp
add
inc
cltd
mov
pushf
fldt
shlb
bound
mov
mov
xchg
mov
into
insb
mov
int
push
movsb
imul
cmpsl
aad
(bad)
pop
fildll
(bad)
clc
shrl
xor
sub
shrb
sub
sub
push
and
mov
xchg
ds
lods
xchg
fwait

adc
sbb
pop
mov
mov
jno
add
(bad)
adc
push
xchg
in
mov
cmp
and
lea
push
cwtl
call
subb
jbe
sub
sub
xchg
fdivrs
push
bound
lea
sub
or
add
dec
add
sbb
jge
clc
or
adc
dec
xchg
popf
lea
cmpsl
push
pop
insl
push
imul
shr
and
cmp
jnp
pop
sub
lcall
dec
sub
cs
mov
das
call
nopl
fsubrl
faddl
cmc
jl
fidivrs
lahf
imul
in
sbb
shl
mov
iret
addr16
lahf
dec
cmp
sbb
sub
lock
xchg
js
popa
lahf
cltd
fs
sub
mov
push
imul
lock
in
sub
inc
mov
sbb
inc
(bad)
push
sub
ret
in
sub
ljmp
sbb
setae
and
shlb
fs
mov
push
scas
pxor
sub
xchg
push
(bad)
and
sarl
jle
xlat
cmp
jle
add
sub
movsl
cltd
mov
push
repz
inc
add
mov
sub
or
push
cld
jbe
test
or
sub
movsl
cltd
jmp
aas
xlat
mov
jle
push
xchg
sub
lods
xor
or
jb
mov
jmp
mov
sub
push
ja
lods
and
mov
mov
sbb
wbinvd
cltd
mov
ja
mov
adc
cmp
xor
stos
cs
bswap
lods
(bad)

mov
sub
and
outsb
adc
bound
jle
sub
add
adc
lret
pusha
(bad)
divb
in
mov
jmp
sub
mov
sarl
inc
xchg
ds
sub
add
sbb
pop
or
and
sub
push
mov
scas
movsl
and
and
add
popa
call
loope
sub
in
sub
in
pop
push
jmp
push
push
dec
sub
lods
scas
sub
wbinvd
pop
mov
loope
xor
jmp
or
mov
ljmp
sub
xchg
cs
ljmp
sub
outsl
dec
call
cs
sbb
and
sub
imul
push
and
inc
popf
fs
push
and
ljmp
mov
das
loop
jmp
push
ljmp
cmp
scas
and
outsb
mov
cs
shrb
dec
cmp
or
cwtl
insl
or
(bad)
jp
and
lret
or
cltd
jle
and
test
cmp
in
daa
add
adc
xchg
out
and
in
and
mov
cltd
lahf
pop
ljmp
insl
aas
jo
lcall
es
mov
lods
xor
iret
lods
xor
insl
(bad)
bound
sub
xor
(bad)

jmp
lock
inc
in
adc
(bad)
sbb
and
xor
invd
xor
lods
sub
iret
es
ror
sub
sub
sub
sti
inc
push
test
dec
cmp
mov
pop
fisttpl
loop
or
es
insb
ds
and
arpl
scas
add
leave
js
jbe
jecxz
sbb
loopne
mov
mov
sub
ljmp
out
sub
sub
outsb
jg
or
std
ret
lret
cmp
dec
push
bound
lods
ljmp
sub
repz
push
mov
sub
fs
sub
jmp
sub
sub
stos
das
rep
sub
nop

bound
or
or
sub
push
and
js
dec
xlat
pop
js
mov
sub
sbb
ljmp
icebp
xlat
bound
arpl
out
xor
or
pop
lods
lahf
cltd
outsb
adcb
mov
push
test
inc
push
fbld
lods
sub
push
enter
lods
scas
leave
outsl
xchg
rorl
push
cltd
movsl
outsb
push
jp
sub
lahf
ljmp
mov
(bad)
dec
jle
jmp
subb
and
xor
lods
cmpsl
insl
and
ret
dec
mov
outsl
sub
push
mov
dec
xor
imul
jmp
xor
movsb
stos
aaa
mov
or
outsb
daa
add
lahf
in
and
inc
sub
in
and
or
xor
in
test
cmp
into
sub
test
aas
sub
subl
sbb
sub
or
or
xlat
stc
subl
out
aas
movsb
ljmp
cmp
or
pop
mov
jne
sub
int3
cmp
iret
cmp
cmp
sub
push
lods
dec
dec
cs
lret
and
shl
dec
sahf
outsb
push
hlt
lods
sub
out
and
jle
outsb
dec
or
das
pop
cmpsb
dec
sub
or
xlat
iret
jge
sub
inc
adc
loopne
ret
scas
lret
lahf
mov
sub
lea
les
jo
ljmp
imul
nopl
pop
mov
lods
jge
fwait

jmp
imul
scas
stos
insb
je
sub
ret
shld
push
inc
leave
push
iret
push
test
push
push
inc
and
or
or
int3
xor
push
orl
inc
adc
fwait

sub
inc
imul
cmpsb
punpckhdq
sysenter
sub
sub
adc
sbb
leave
jl
and
and
test
push
scas
sub
or
fisttps
sub
push
in
insl
mov
imul
sub
xor
sub
scas
xchg
in
or
and
sub
or
jmp
fldcw
addr16
and
outsb
nop

mov
insl
cmp
and
jge
xor
mov
sub
lahf
mov
insl
lahf
nop

outsb
mov
lea
fldt
xchg
stc
adc
cmp
mov
fdivs
lods
and
popa
and
cs
lret
lahf
and
sbb
sbb
sub
insl
nop

sub
and
add
dec
mov
lahf
adc
push
sbb
clc
dec
sub
jge
mov
fnstsw
lret
sbb
repz
xchg
fisubrl
stos
cmp
fidivrs
imul
jnp
cmp
daa
in
fwait

sub
stos
popf
dec
push
jnp
sub
sub
push
sbb
xor
fidivrl
fs
stc
inc
int
dec
fdivl
sbb
sbb
popa
fsubrs
push
or
scas
dec
add
sub
cltd
in
bound
lods
pusha
cmp
sti
pop
dec
(bad)
int
push
std
push
cs
(bad)
fldcw
fidivl
outsb
popf
pop
sub
push
jae
cs
mov
mov
cs
sub
ret
in
push
or
sub
lahf
mov
fsubrs
lret
push
das
or
sub
mov
dec
xchg
das
loopne
cmp
(bad)
xor
fsubrs
sbb
dec
sub
outsb
jb
and
sub
cmc
lret
mov
cmp
xchg
jbe
nop
test
adc
dec
sub
sbb
mov
ljmp
or
movsb
push
outsb
dec
jle
aaa
(bad)
cmpl
fs
push
outsb
mov
push
imul
(bad)
bound
popa
or
mov
lods
sub
jmp
ss
jl,pn
daa
cmpsb
int3
mov
fstpt
out
nop

and
sarl
sbb
int
bound
nopl
orb
je
dec
fs
outsb
subb
dec
and
lea
sub
mov
mov
stos
pop
cmp
jnp
and
test
jno
sbb
int
sub
and
bound
adc
jp
in
cmc
fwait

fs
mov
ret
sub
jp
jnp
fldcw
sti
cmpsl
or
sub
sub
sbb
test
fsubl
or
pop
fnstenv
cmp
push
jle
ss
cltd
std
xor
xchg
or
in
or
int
sub
ds
out
cltd
push
or
lods
jns
cltd
js
nop

cmp
orb
cltd
popf
push
fimull
popf
imul
sub
aaa
xchg
push
in
mov
mov
dec
jmp
stos
cmc
lret
push
ss
orb
add
leave
push
nopl
jg
jae
cwtl
lcall
packssdw
fsubrl
sti
sbb
xchg
sub
or
xor
test
cmp
dec
scas
js
in
sbb
lea
dec
movsl
pop
and
pop
push
sti
sub
push
dec
daa
test
jmp
pop
sub
outsb
push
sub
lret
sub
xlat
out
or
fnstenv
inc
pop
sub
pop
and
pop
cwtl
dec
sub
pop
cmpl
mov
sub
jle
int
sub
sub
cmp
fadds
dec
pushf
cmp
loop
sbb
adc
or
dec
(bad)
mov
or
stos
je
push
sbb
fstpt
sbb
prefetchwt1
std
test
xchg
inc
mov
int
vfmadd231sd
nop

jp
outsb
dec
aaa
in
or
fsubrp
fisubrs
ficomps
test
sub
je
sub
(bad)
cs
(bad)
aaa
int
sub
aam
faddl
outsb
mov
outsb
cmpsl
push
or
lcall
scas
sub
sub
sub
jl
adc
dec
sub
jp
sbb
repz
cmp
(bad)
aad
cltd
sbb
pop
out
sub
jne
jp
push
dec
pop
or
negb
dec
pop
adc
sub
rcrl
shlb
outsb
sar
fstpt
scas
rcll
adc
outsb
sub
wbinvd
fs
ss
xchg
popa
insl
or
outsb
ljmp
and
fs
pop
xchg
add
inc
jmp
fs
xchg
or
xlat
sub
xlat
push
xchg
sub
imul
push
jb
xchg
imull
mov
xchg
call
lahf
in
das
mull
dec
sub
adc
(bad)

fs
sub
enter
bound
cltd
fisubrs
push
je
cltd
sub
jnp
lahf
pop
fs
or
lea
aas
sbb
cmp
sub
sbb
cmp
das
test
bound
push
test
and
outsb
inc
stos
sub
add
scas
lods
sub
sub
scas
sub
stos
sub
xor
push
outsb
pop
and
xchg
push
scas
dec
and
jle
add
inc
push
shrl
sub
add
out
fs
push
lods
dec
lods
or
sub
sub
or
imul
push
xor
sbb
cmp
push
lods
and
push
mov
stos
push
dec
js
sub
cmp
mov
push
xor
or
and
sub
or
cmp
insl
and
mov
insb
es
outsb
adc
sub
aas
sub
in
add
mov
sub
stos
sub
push
mov
fsubrs
loope
jnp
insb
insl
jmp
xchg
dec
xchg
out
mov
in
or
sub
lahf
outsb
xchg
nopl
insl
pop
cltd
lahf
mov
mov
xlat
xchg
in
or
xchg
sub
xchg
aaa
mov
in
xor
cmp
xor
outsb
push
imul
jmp
mov
in
and
jmp
cmp
lret
jmp
lahf
outsb
adc
fsubrs
push
cmp
cmp
push
mov
cmp
stos
adc
repz
imul
iret
test
lock
and
outsb
in
sub
js
cmc
outsb
gs
arpl
push
repnz
outsb
and
dec
cmp
cmp
movsb
xchg
sub
jl
std
mov
nop

in
and
jmp
sub
jp
xor
sub
jns
mov
xor
sub
jp
stos
cmp
insl
es
outsb
adc
xlat
sbb
jp
dec
imul
pushw
scas
adc
xor
inc
in
xchg
repz
xor
or
jmp
aad
mov
xor
sub
add
sbb
add
sub
lods
jb
sbb
dec
outsl
mov
mov
sub
dec
test
in
outsb
fsubrp
and
in
push
popa
sub
push
aam
sub
mov
lods
push
mov
xor
int3
or
cs
sub
stos
cs
or
roll
sub
dec
das
push
dec
sub
dec
das
cmpsl
dec
sub
dec
das
(bad)
rorl
or
inc
lods
sub
push
xor
jge
mov
imul
mov
int3
ljmp
jns
pop
push
imul
push
adc
ret
popa
nop
(bad)
and
dec
js
imul
jmp
sub
sub
pop
addr16
sub
lahf
dec
sbb
js
sub
and
fs
cmpsl
(bad)
das
in
insl
fs
inc
or
imul
outsb
aaa
jle
stos
and
push
dec
and
pop
lret
push
or
loop
dec
cs
lret
pusha
addr16
sub
or
movsl
bt
stos
sub
iret
cs
mov
outsb
jo
adc
or
sub
xor
xor
sub
nopl
call
mov
and
cmp
or
jno
cltd
and
mov
fcomi
wbinvd
mov
stos
sub
fisubrs
push
jnp
push
es
iret
orl
sub
lret
sub
cmc
jp
jns
outsb
mov
mov
in
and
aas
push
adc
insl
fwait

scas
dec
or
test
push
mov
out
(bad)
negb
xchg
int
nop

cmp
lret
in
stos
sub
dec
mov
xor
lahf
jle
scas
(bad)
clc
out
adc
fwait

aas
insb
push
pop
aaa
cs
lret
dec
xor
mov
adc
sub
add
add
out
das
lods
or
cmpsb
out
pop
add
or
xor
xor
cmp
dec
push
mov
(bad)
sub
insb
leave
sub
sub
iret
sub
xor
sub
out
leave
sub
iret
sub
pop
sub
pop
sub
sub
mov
sub
mov
cmp
pop
sub
jle
sub
sub
pop
sub
test
sub
sub
pop
sub
pop
sub
ds
sub
sub
pop
sub
push
pop
sub
sub
inc
pop
sub
sub
pop
sub
out
sub
pop
sub
xor
sub
pop
sub
pop
pop
sub
sub
pop
sub
pop
sub
pop
sub
mov
sub
jle
sub
sub
pop
sub
pop
sub
orl
mov
sub
dec
pop
sub
pop
sub
pop
sub
mov
sub
jle
sub
pop
sub
pop
sub
mov
sub
aad
sub
or
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
push
pop
sub
clc
pop
sub
push
and
push
sub
popf
sbb
int3
rcrb
(bad)
pop
sub
clc
pop
sub
sub
fildll
nop

pop
sub
sub
pop
sub
fildll
pop
sub
pop
sub
pop
sub
js
fildll
fildll
sub
fildll
pop
sub
jge
sub
pop
sub
fstpl
xor
mov
mov
or
sub
mov
pop
sub
fildll
fistpll
jp
sub
sub
sahf
pop
sub
pop
sub
add
pop
sub
and
lahf
cltd
in
mov
sub
mov
pop
sub
dec
cltd
and
lahf
jmp
mov
mov
lahf
ss
and
sub
xor
inc
sbb
cmp
xor
mov
cmp
add
lahf
in
sub
lahf
add
sub
pushf
popf
sub
test
cs
cltd
les
out
sub
sub
sbb
pop
and
std
sub
iret
cltd
add
cmc
jns
mov
sub
pop
es
fcomps
aas
jge
mov
aam
fisubs
cmp
xorl
das
sahf
pop
and
pop
es
and
sub
sub
sub
sub
ds
jmp
adc
sub
and
cmp
(bad)
fidivl
mov
xor
fsubrl
xrelease
mov
mov
in
adc
sahf
jmp
lahf
pop
sub
xor
jge
jge
fildll
in
pop
cs
ss
sahf
cwtl
(bad)
(bad)
sbb
xor
das
aaa
xor
cmc
xor
xor
frstor
out
cmp
insl
test
out
sub
mov
inc
mov
mov
xor
fdivl
jmp
enter
xor
xor
jecxz
push
xor
dec
insl
xor
loop
push
daa
sbb
cwtl
cmp
testl
popf
cmc
repz
fldcw
sub
mov
and
sub
push
sub
xchg
das
lahf
sub
push
jmp
int3
sbb
fwait

mov
cmp
sub
int3
mov
sub
mov
das
pop
(bad)
push
jnp
sub
xor
arpl
xor
inc
adc
fwait

loop
inc
sub
lahf
add
into
sub
push
and
fsubrs
das
out
das
sub
sub
sub
das
cmp
sub
sub
cmp
mov
icebp
mov
shrb
in
sub
dec
in
in
push
jp
sub
and
into
jl
jp
enter
xchg
xor
mov
pop
sub
icebp
mov
ss
(bad)
shlb
dec
cmp
out
mov
inc
sub
xor
xor
cmc
xor
mov
push
test
push
mov
adc
test
aaa
inc
sub
cmc
mov
lahf
xrelease
xor
repz
repz
cltd
fidivl
xor
adc
push
scas
jle
xor
and
xor
cltd
sub
int3
cltd
mov
lahf
cmc
stos
sub
cltd
loop
or
lahf
push
lahf
mov
lods
sub
sub
sub
lods
cmp
lahf
sahf
lahf
xor
out
mov
sub
push
mov
lret
xor
out
sahf
jge
push
jmp
cmpsl
test
test
xor
stos
sub
sub
aaa
insl
sub
sub
outsl
das
ljmp
sub
push
outsl
sub
imul
sub
inc
mov
push
imul
jge,pn
imul
and
cmp
pop
lahf
xor
sbb
imul
cs
leave
add
imul
and
xor
jp
xor
sub
in
and
loopne
cmp
out
test
sub
sub
mov
sub
sub
push
xor
and
out
imull
xor
stc
jnp
sbb
in
call
fdivl
in
sahf
stc
in
inc
sub
xor
xor
out
daa
adc
scas
hlt
addb
mov
lods
(bad)
sub
pop
jns
sub
xorb
sub
sbb
push
sub
loopne
and
sub
add
fdivrl
rcr
sub
in
ljmp
sbb
sti
lods
in
sub
jle
out
sub
fstpt
and
fldl
cli
mov
sub
std
push
movsl
test
imul
or
mov
std
cld
pop
push
and
(bad)
sub
mov
add
sub
dec
(bad)
cmp
iret
or
sub
mov
sub
roll
rclb
jns
aaa
push
dec
mov
inc
push
aad
ret
jle
sbb
mov
push
xor
dec
in
adc
inc
call
xor
sub
enter
sub
jecxz
xor
aas
lcall
sarl
sub
dec
popf
bndldx
mov
mov
adc
mov
hlt
sti
jle
mov
or
iret
sub
cs
sub
iret
sub
in
jge
add
xor
and
sub
and
repz
jge
xor
jge
lret
in
adc
lcall
in
ljmp
mov
leave
data16
leave
cs
imul
mov
sub
enter
int
shrl
in
mov
push
jmp
and
arpl
sub
ss
insl
(bad)
les
lahf
mov
xor
cmp
sub
xor
mov
and
jmp
push
aas
and
test
sub
cmp
mov
and
cmp
jecxz
dec
sub
dec
lahf
cltd
cld
clc
dec
cltd
(bad)
js
sub
iret
and
dec
jne
pop
or
or
jo
dec
int
call
sub
lret
and
pop
outsl
loop
or
(bad)
in
lret
sub
add
jge
call
xor
mov
into
sub
lcall
iret
sub
jmp
jge
lahf
jmp
and
sub
mov
xor
std
call
mov
xor
cmp
sub
or
or
int
or
cmp
sub
dec
or
sub
cmp
cmpsb
jle
mov
int
cmpsb
or
and
stos
mov
cltd
mov
lods
lahf
(bad)
and
lahf
(bad)
xor
lods
or
int
sub
sub
iret
xor
sub
aaa
xor
sahf
test
dec
sub
mov
and
jmp
or
xor
push
push
std
ss
mov
cmp
cmp
mov
lret
sub
or
leave
mov
int
mov
fmull
add
sub
int3
std
lahf
bound
or
decb
xchg
cltd
add
sahf
push
int3
das
enter
and
mov
and
or
dec
aas
fimuls
int3
sub
lea
cs
or
int
lahf
or
int
fs
dec
xor
xor
mov
mov
push
pop
sub
pop
cmp
mov
add
jns
cmp
cmp
xor
sbbb
sub
jnp
push
pop
sub
sub
xor
fldcw
out
bnd
mov
(bad)
das
sbb
sbb
mov
or
and
cs
sub
sub
std
sub
cli
dec
mov
pop
dec
inc
pop
and
hlt
sub
sub
push
fwait

mov
sub
jb
pop
clc
cs
das
out
fisttps
(bad)
cli
pop
(bad)
lahf
(bad)
sti
jp,pn
sub
sub
aaa
sbb
aaa
aas
pop
sahf
pop
shrb
(bad)
sbb
mov
pushf
jb,pn
js
cld
test
pop
pop
hlt
sub
jp
cmp
fnstcw
push
repnz
push
mov
xor
pop
cmp
sub
je
adc
sub
sbb
and
xchg
sub
das
mov
pop
es
hlt
or
sub
repz
sub
sbb
sub
pop
sub
sbb
cmp
jge
or
mov
push
or
sbb
xchg
sub
aaa
lcall
cld
sub
mov
sub
sub
sub
push
xor
xor
cmp
cmp
xor
xor
cmp
enter
xor
xor
lcall
sub
fidivl
stc
ss
cli
cmp
aaa
pop
cmp
xor
cmp
faddl
pushf
(bad)
jmp
and
and
fimull
cld
jl
mov
pushf
sub
add
test
pop
faddl
icebp
testl
(bad)
stos
dec
push
sub
xor
sub
cmp
jge
mov
in
pop
push
mov
sub
jmp
push
xrelease
jne
xor
and
jmp
xchg
and
push
jnp
cwtl
jns
lea
jge
jnp
sub
lret
push
mov
sub
das
pop
std
(bad)
ljmp
leave
lahf
lret
pop
cltd
mov
lcall
sub
sahf
cmpsb
pop
jne
mov
cltd
repnz
cwtl
jge
inc
fwait

and
push
popf
sub
pop
sub
sub
stc
add
gs
test
cmp
inc
xor
dec
xor
jecxz
outsb
inc
pop
inc
ss
jmp
or
xor
push
pop
jns
cmp
and
sub
gs
push
jge
adc
cli
cltd
xor
sub
aaa
cmp
fisubrl
cld
sub
std
cs
sub
inc
jge
loope
xor
and
pop
jnp
out
ficompl
inc
xor
cmp
inc
cmp
and
sbb
(bad)
jg
push
sarb
ja
pop
and
mov
or
xchg
pop
cli
lcall
and
and
dec
fstl
push
sub
fildll
and
aad
mov
arpl
sub
sub
sub
sub
sub
mov
mov
imul
push
out
adc
ficoms
repz
mov
ss
mov
(bad)
xchg
sub
xor
out
cltd
sub
sub
ss
and
adc
push
mov
cltd
out
sub
xchg
nop

loopne
jecxz
xchg
and
aam
in
sub
adc
das
out
sub
fsubs
(bad)
(bad)
sub
gs
sub
or
xchg
das
sqrtps
mov
xchg
push
xor
mov
xor
ss
jnp
xor
mov
cwtl
in
and
sub
xor
xor
mov
sub
dec
(bad)
lahf
cltd
or
sub
and
and
sub
in
mov
mov
jmp
pusha
leave
add
xor
jge
jge
mov
push
and
adc
xor
sub
mov
xor
stos
cs
test
sub
lahf
adc
lods
sub
lahf
mov
sub
cmc
lahf
mov
jnp
xchg
cltd
jl
sub
scas
jl,pn
lahf
lret
lahf
sbb
stos
sub
mov
ds
int3
lods
adc
cltd
cltd
scas
and
stos
ldmxcsr
stc
lods
negl
sub
lods
sub
stos
cmp
jp
or
paddb
sub
xchg
sahf
cwtl
xrelease
lods
lahf
cltd
xor
aas
cltd
cmc
insl
jne
push
in
jae
jmp
jp
sub
adc
cltd
push
in
cs
sub
in
das
push
xlat
push
outsl
sub
imul
sub
lahf
in
sub
sub
xrelease
and
loopne
mov
das
test
cmp
ss
(bad)
push
mov
in
insl
int3
mov
push
xor
xor
out
push
jnp
daa
insl
adc
add
in
xor
sub
in
xor
lahf
pop
cmp
mov
ss
sub
insl
movsb
mov
sub
insl
sub
imul
clc
popa
add
in
and
mov
call
shlb
lahf
rcrb
out
dec
jmp
xchg
cmp
jmp
enter
lahf
dec
ljmp
leave
sub
lahf
leave
enter
mov
sub
or
sub
in
daa
sbb
outsl
lahf
push
cwtl
out
sub
cs
cwtl
sub
cltd
(bad)
dec
cmp
(bad)
into
cltd
insl
lahf
mov
mov
addr16
outsl
lahf
addr16
call
xor
and
dec
das
xlat
lods
lahf
push
dec
popa
lahf
push
enter
add
sub
cltd
(bad)
repz
nop

leave
aaa
sub
add
lahf
inc
enter
sbb
mov
lea
sub
int
dec
leave
lahf
dec
and
xchg
dec
dec
stos
push
mov
dec
jmp
imul
stos
dec
nop

dec
cmp
into
mov
mov
adc
cmp
dec
es
das
mov
sahf
out
lahf
and
enter
and
dec
or
nop

dec
cmp
add
jge
int3
lahf
jge
jnp,pt
dec
jnp,pt
or
dec
nop/reserved
adc
and
add
dec
add
sahf
mov
lahf
mov
lahf
mov
int3
sub
mov
cmpl
dec
sub
sub
add
aas
shlb
dec
and
enter
lahf
or
xchg
sub
stos
inc
cltd
add
cmp
inc
cs
out
cmc
mov
sub
mov
and
sub
lahf
js
sub
jle
jmp
sbb
mov
test
lahf
jge
dec
lahf
int3
and
cmp
pop
out
leave
adc
int
sub
pop
cmpsb
lea
aam
imul
push
dec
sub
jno
sub
and
sub
dec
outsb
lret
outsl
lret
push
popa
cmpsb
adc
dec
or
sub
lret
cltd
stos
int3
enter
shll
out
dec
sub
and
sub
sub
cwtl
push
lahf
sub
mov
popa
lods
das
leave
nop

dec
data16
adc
lahf
mov
enter
jno
lahf
shrb
lret
iret
ja
cltd
lahf
dec
dec
sub
ss
inc
das
mov
ror
jns
dec
leave
sbb
sub
sbb
int
outsl
xlat
cltd
imul
icebp
cltd
lahf
mov
dec
sub
dec
cmp
stos
mov
and
dec
sub
lret
fs
cltd
jnp
adc
js
imul
daa
mov
loope
cltd
cmc
dec
sub
push
jmp
or
dec
sub
cltd
lahf
fbstp
lret
sub
inc
dec
pop
sub
dec
add
daa
mov
lahf
cltd
sub
dec
sub
aam
sub
dec
pop
arpl
dec
sbb
int
mov
dec
or
inc
in
push
inc
sub
sub
sbbl
fnstcw
leave
xlat
fnstsw
lahf
shrb
pushf
sub
adc
sub
mov
inc
mov
call
rcrb
add
cmp
sub
lahf
xor
xor
cltd
mov
cltd
xor
pop
sub
pop
mov
xchg
cmp
sub
mov
cltd
sbb
mov
push
out
push
sub
pop
sbb
gs
sub
add
sbb
pop
cmp
sub
roll
sub
shrb
sub
cmp
push
test
xchg
lods
fmuls
sbb
pop
jle
test
sbb
and
xor
lcall
sub
sub
mov
mov
call
sub
dec
call
sub
lahf
dec
ret
mov
lods
adc
mov
stc
pop
outsl
scas
pop
imul
sub
mov
cmp
lahf
cltd
lcall
sub
sbb
sub
push
sub
or
lahf
outsl
scas
push
nop

shll
es
fs
jle
gs
cltd
mov
pushf
xor
sub
xor
sub
add
lahf
cltd
push
adc
sub
adc
mov
ficompl
pop
or
or
aaa
aaa
lahf
cltd
push
xchg
fiadds
sub
outsl
mov
mov
cmp
sub
push
cltd
lahf
push
sbb
sbb
in
mov
sbb
call
xor
ds
sbb
jg
sub
test
adc
pop
pushf
pop
sub
insb
daa
lahf
ret
xchg
cltd
mov
or
sbb
fwait

jp
pop
cmp
sub
sub
sub
adc
sub
push
add
sub
sbb
(bad)
push
loop
cltd
in
xor
cmp
es
data16
cltd
cmpl
jg
outsb
jns
sub
cmpsb
dec
xchg
pop
pop
sbb
fildl
cmpsb
pop
pop
lret
or
lahf
cltd
or
sub
enter
out
imul
adc
adc
sub
xchg
(bad)
sub
mov
cltd
lods
push
fistpll
rorb
and
sub
dec
pop
and
sbb
jnp
lahf
int3
negb
sub
sbb
mov
lret
xchg
mov
movsl
lods
shr
pop
cmp
imul
lahf
out
lahf
mov
sbb
lahf
dec
inc
sbb
sub
call
movsb
(bad)
out
fldt
shrl
mov
inc
xchg
pop
mov
cltd
mov
cltd
lahf
imul
jl
or
sbb
aaa
rcrb
frstor
sbb
sub
sub
xchg
jl
int
mov
sbb
sbb
js
fstpt
push
fldl
movsb
pop
addr16
(bad)
pop
push
addr16
jno
(bad)
pop
inc
call
sub
pop
mov
xor
frstor
lahf
enter
sub
popa
pop
mov
dec
pop
addr16
adc
inc
pop
sbb
or
dec
adc
mov
dec
cwtl
sub
mov
call
fnstenv
popf
mov
popf
mov
sbb
or
sub
add
daa
and
int3
mov
sbb
sub
(bad)
into
ja
lea
call
sahf
or
fwait

or
lcall
mov
sub
popf
jge
stos
mov
xor
shrb
out
lahf
sbb
fldt
(bad)
out
xlat
sub
sbb
int
loop
sbbl
lahf
mov
loope
mov
or
pop
adc
push
cmpsb
sbb
cmpsb
lahf
and
stc
popf
and
fwait

daa
push
lahf
and
fldt
pop
(bad)
sbb
mov
fcoms
mull
pop
sub
push
cltd
pop
ret
sahf
adc
xchg
sbb
sbb
mov
sub
xchg
mov
cltd
aaa
sub
sub
or
aam
lahf
in
sub
sub
mov
lahf
cltd
lahf
push
mov
popf
lahf
cltd
pop
and
add
xchg
aaa
sub
cltd
pop
cltd
lahf
jg
sub
or
outsl
imul
cs
into
sub
lahf
push
cmc
shlb
mov
pop
sahf
lret
dec
sub
add
inc
lahf
add
sub
mov
sub
push
add
lahf
cmp
xlat
jp,pn
daa
cmp
mov
inc
cltd
mov
iret
sub
stos
leave
nop

adc
add
lahf
fmuls
lahf
nop

enter
adc
addr16
int
lods
adc
lahf
cltd
dec
lods
or
addr16
call
and
sbb
cltd
sbb
and
jp
and
cltd
ss
mov
test
cltd
add
xor
lret
scas
mov
les
pusha
xchg
mov
popa
xor
cwtl
rcrb
cltd
jnp
xor
scas
pop
mov
jns
lea
jns
test
stos
scas
jns
dec
gs
mov
cltd
lods
xor
stos
cltd
mov
fs
mov
cltd
cld
mov
cwtl
out
scas
(bad)
lods
cs
stos
sub
lods
sub
bound
dec
dec
mov
sub
lahf
dec
enter
dec
mov
call
mov
cmp
cmp
pop
cltd
lahf
sahf
pop
out
in
cmp
das
mov
iret
into
jb
iret
cmp
jmp
mov
mov
inc
lahf
out
jmp
cltd
sub
inc
popa
sahf
popa
cltd
popa
repz
nop

mov
imul
lahf
cltd
cltd
(bad)
sub
ljmp
in
sub
push
push
loop
and
sub
and
imul
inc
lret
call
loope
psubsw
add
sub
mov
add
inc
sub
sub
jbe
sbb
jo
lahf
movsb
nop

mov
sbb
out
lahf
mov
mov
mov
sbb
xor
add
pop
in
sub
cltd
and
mov
cltd
jmp
lahf
in
inc
add
mov
sbb
xor
lahf
inc
jmp
inc
in
sub
jmp
or
out
mov
out
add
pop
imul
movsb
mov
cltd
adc
cwtl
push
loope
jmp
int3
sub
mov
dec
push
pop
lahf
cmp
stos
jae
fisubrl
sub
lahf
test
fisttps
cltd
and
stos
cmp
jmp
sbb
dec
daa
int3
adc
sbb
mov
das
dec
sub
mov
sub
addl
rcrb
int3
lret
push
mov
int3
and
cli
dec
inc
fs
sub
and
inc
das
mov
rorb
lahf
shrb
into
ss
(bad)
mov
iret
inc
sbb
dec
sub
xor
sub
into
jno
lahf
dec
pop
dec
mov
ja
sbb
and
lahf
mov
mov
dec
dec
ss
sbb
lea
cltd
lahf
fwait

mov
das
cltd
(bad)
sub
int
int
int3
sub
das
dec
sub
push
int3
aas
int3
mov
es
dec
sub
cmp
(bad)
sub
mov
mov
lret
xor
sbb
pop
dec
mov
cmpsl
lods
les
dec
xchg
add
lahf
mov
stos
cltd
lahf
ret
and
and
insb
out
lahf
inc
aas
and
dec
popa
movsb
inc
cs
out
jg
stos
int3
cwtl
dec
outsl
ljmp
lret
mov
int
out
push
sub
dec
dec
inc
dec
mov
leave
jmp
sub
pop
dec
sub
sub
mov
mov
out
or
xchg
aam
leave
pop
leave
cltd
setns
leave
or
sub
mov
sub
aas
and
int
mov
lahf
pop
lahf
orb
int3
sub
inc
fwait

mov
dec
mov
daa
stos
out
(bad)
sub
cltd
xchg
int
out
popa
sbb
lret
pop
lret
mov
fsts
sub
movsb
inc
sub
xchg
xlat
lret
into
or
std
jl
lahf
decb
(bad)
cs
dec
dec
inc
das
dec
stos
lret
mov
dec
or
mov
dec
sub
lods
sahf
inc
das
lret
cltd
lahf
insl
dec
sub
mov
int3
and
dec
push
inc
cs
cmp
enter
lds
fsubrl
daa
mov
jle
cltd
lahf
mov
cs
fwait

inc
push
sub
(bad)
mov
xchg
sub
cmp
xchg
cltd
mov
cs
and
adc
sbb
pop
pop
mov
fstpl
cmp
cltd
jmp
jns
pop
push
stos
jg
jge
dec
nop

mov
cltd
lahf
and
sub
cmp
lahf
fisubrl
mov
sub
(bad)
push
sub
(bad)
into
mov
sbb
inc
sbb
cltd
ds
aas
cltd
mov
cs
rcrb
sbb
xchg
sub
add
adc
mov
mov
mov
xor
inc
lahf
out
mov
cmp
and
cltd
pop
mov
stos
decb
mov
sbb
pop
xor
call
pop
sbb
sbb
pop
dec
cltd
pop
jo
(bad)
inc
sbb
pop
mov
cltd
and
pop
pop
adc
pop
inc
popf
dec
dec
adc
mov
pop
outsl
sbb
sub
fldl
sbb
rcrb
and
outsl
pop
mov
mov
imul
aas
cltd
lahf
cltd
pop
sbb
sbb
out
lahf
push
fwait

aas
out
mov
push
inc
aam
mov
fstpt
sbb
cltd
mov
sub
jge
(bad)
mov
lahf
mov
sbb
push
sub
and
jl
cs
movsb
pop
dec
add
nop

movsb
aaa
fcoms
popf
pop
lahf
cwtl
movsl
inc
push
lahf
inc
sub
lea
mov
mov
aaa
movsb
inc
lret
adc
sbb
mov
xor
adc
sub
sub
push
daa
fcompl
fildll
fistpl
lcall
fsubs
popf
sbb
sub
mov
repz
xchg
pop
cltd
lahf
xchg
sbb
xor
fsubrl
mov
cltd
pop
cltd
pop
sbb
lcall
lldt
mov
or
cwtl
popf
and
fbld
lahf
cltd
push
xor
sub
adc
push
xchg
lahf
push
dec
popf
mov
push
data16
mov
aaa
dec
lahf
cltd
cli
add
sub
pop
stos
cwtl
pop
sub
lahf
rcrl
sub
mov
push
sub
mov
scas
popa
out
sub
(bad)
sahf
out
cltd
mov
pop
mov
pop
and
cwtl
lcall
cmp
sub
jp
pop
sub
inc
sbb
sbb
js
pop
loop
sub
add
pop
or
fwait

adc
aam
cltd
or
(bad)
push
fldt
sub
xor
or
dec
adc
lahf
dec
mov
ret
fwait

pop
pop
insl
cltd
xchg
adc
xchg
scas
popf
xchg
pop
pop
sub
cmp
push
mov
sbb
pop
sahf
arpl
pop
sub
lahf
addr16
insb
ficomps
sub
adc
mov
xchg
sbb
mov
test
pop
scas
pop
sub
and
fwait

aaa
ja
cmp
fstpt
out
lahf
scas
sbb
ljmp
sbb
sbb
add
sub
stc
aam
cmp
sti
mov
out
and
fldenv
pop
orl
lcall
mov
sub
sub
lcall
fchs
nop

cs
sahf
sub
fxch
mov
mov
nop

lods
mov
lcall
mov
add
sub
sub
sahf
test
ficoml
pushf
push
mov
cltd
call
fwait

sub
sub
sbb
sbb
stc
dec
fs
sub
pop
sub
sub
test
popf
sub
adc
sbb
sub
es
sub
pop
sub
sub
sub
pop
sub
xchg
das
pop
xor
sub
cmc
das
adc
das
xor
das
xor
sub
push
das
and
and
mov
mov
(bad)
sub
andl
scas
das
sub
sub
sub
sub
das
sub
sub
das
sub
sub
pop
cs
jle
sub
das
sub
sub
scas
cs
scas
cs
sub
scas
shrl
sub
sub
cs
je
cs
push
scas
push
scas
cs
sub
jle
sub
scas
cs
test
test
scas
loope,pn
sub
mov
test
push
test
js
pop
scas
sub
scas
cs
test
addl
scas
ds
jmp
sub
sub
sub
insb
out
sub
fs
xor
sub
sub
sub
js
sub
jmp
and
sub
out
sub
jmp
lcall
out
sub
jmp
cs
sub
push
shr
jns,pn
out
mov
jmp
addr16
mov
cmp
jmp
push
js
sub
jmp
pop
jmp
sub
clc
jmp
enter
push
jmp
out
out
lret
out
sub
sub
out
sub
js
sub
jmp
leave
jmp
sub
and
out
sub
jmp
cs
dec
leave
sub
iret
sub
fidivrl
sub
leave
sub
iret
sub
leave
sub
jle
sub
iret
sub
iret
jge,pn
iret
sub
iret
sub
jle
sub
iret
das
addr16
sub
iret
sub
iret
sub
xchg
sub
iret
sub
aaa
mov
push
jl
sub
ror
sub
sub
enterw
(bad)
iret
sub
sub
and
cwtl
sub
and
cmc
jnp
sahf
cwtl
or
mov
fs
sbb
cmc
sub
lahf
fsubr
sub
sub
mov
xor
out
sbb
or
dec
das
dec
in
mov
insl
jecxz
and
xor
and
aaa
lret
cwtl
test
mov
clc
jp
sub
sahf
xchg
cmc
xor
xor
mov
fidivl
aad
sub
and
das
dec
dec
sub
cmc
push
and
mov
int3
mov
and
iret
and
out
adc
or
sub
aaa
mov
dec
cmp
ds
scas
dec
sub
imul
xor
cmp
movsb
or
mov
nop

aas
cltd
clc
dec
das
clc
insl
sub
cltd
inc
sub
btr
out
pop
cwtl
or
lret
pop
scas
or
ss
lahf
jne
daa
and
cmc
mov
and
fsubrs
sub
decb
sahf
mov
lahf
sub
xchg
pop
xor
and
xor
and
push
xor
jmp
jmp
sub
cmc
mov
and
push
or
dec
sub
mov
lahf
add
das
out
in
sub
and
xor
inc
dec
sub
mov
sub
cmp
ss
int3
cvtpi2ps
pop
or
mov
mov
(bad)
sub
and
imul
mov
cmpsb
add
sub
mov
insl
sub
dec
xor
lahf
in
sub
push
push
or
das
fmuls
sub
das
pop
lahf
stos
dec
sub
add
mov
xor
sub
dec
xor
jmp
lahf
and
insl
aaa
and
push
cmc
mov
jl
and
das
mov
cmp
lahf
pop
clc
das
scas
and
aas
xor
das
lahf
jmp
or
(bad)
xor
add
das
or
ljmp
xchg
jnp
and
sub
xor
xor
pop
add
movaps
lahf
pop
pop
sub
nop

xor
xor
stos
xor
lahf
test
and
dec
sub
cltd
sub
sub
cmp
lods
es
insl
mov
push
push
push
repz
das
lahf
lods
and
jge
es
lea
jge
out
pushf
sub
xor
sub
or
jp
lahf
inc
fsubrs
push
adc
push
or
jmp
fwait

daa
(bad)
pop
sub
push
aaa
xor
lahf
cmp
pop
sub
sub
jecxz
cli
sub
cmc
cltd
fwait

ds
das
repz
xor
or
mov
xor
mov
xor
push
adc
aaa
adc
std
cmp
aaa
cmp
sbb
mov
mov
cmp
add
(bad)
and
or
scas
clc
sub
sub
jle
insl
daa
dec
es
adc
or
int
cmp
push
lret
adc
movsb
aas
dec
pop
sub
aas
lahf
jg
sub
lea
push
jnp
(bad)
cmp
mov
sub
cmp
sub
mov
sub
repz
leave
push
and
mov
adc
sub
push
or
jmp
cltd
fidivl
cmp
aas
add
or
arpl
push
sti
cmp
xor
adc
mov
mov
push
xor
daa
int3
add
pop
mov
mov
jnp
subl
mov
popf
jb
cmc
xor
lahf
adc
cmp
das
dec
cmp
insl
sahf
jnp
sbb
sub
popa
fsubrp
push
and
mov
push
scas
mov
mov
insl
xor
pop
sbb
mov
mov
sub
cltd
into
cltd
(bad)
pop
fs
sub
(bad)
and
cmpb
push
fstpt
push
and
sub
pop
sbb
(bad)
mov
mov
sbb
insl
repz
or
push
xlat
lahf
jle
and
adc
sbb
cmc
sub
xor
lahf
fwait

dec
cwtl
sub
and
or
lea
add
sbb
inc
lret
lahf
dec
sub
dec
jge
loop
xor
sbb
daa
rcrl
cltd
sub
jge
mov
dec
push
push
jmp
dec
cs
std
jp
daa
in
repz
cmp
jmp
xchg
mov
imul
or
and
xor
xor
es
cmp
jl
jg
xor
in
or
and
mov
adc
fdivr
cmp
sbb
inc
mov
cltd
stos
mov
cmp
cwtl
and
xlat
mov
push
repz
cmp
mov
pop
jno
std
cmp
cltd
ret
clc
or
cmp
lods
int3
jmp
xor
pop
insl
push
cmp
cwtl
insl
mov
cmpsl
sbb
push
aaa
test
lahf
or
ljmp
sahf
sub
sub
cltd
sub
and
cltd
lahf
mov
sub
push
mov
sbb
pop
and
sub
negb
xor
cmp
ljmp
in
or
sub
jns
xor
xor
std
aaa
dec
sub
mov
cld
cmp
push
sbb
dec
mov
sub
fsts
mov
xor
rcrb
cmp
sub
das
sbb
sub
(bad)
sub
sarl
aaa
insl
clc
push
mov
adc
out
push
xor
mov
sbb
mov
and
es
pop
and
xor
mov
cltd
lret
jnp
xor
sbb
popf
sub
pop
sub
(bad)
test
dec
or
aaa
sbb
xchg
jge
cwtl
sub
lahf
inc
xlat
out
xor
sbb
xor
sahf
mov
or
and
push
daa
cmp
cwtl
xchg
xchg
sub
xor
mov
sti
lahf
sub
lahf
popf
lahf
imul
pop
arpl
lahf
pop
sub
fimuls
adc
sub
lahf
mov
jge
cmp
jge
xor
or
int3
mov
mov
sub
sub
cmpsb
mov
lahf
mov
mov
jp
xor
imul
int3
bound
cmp
cmc
sbb
and
(bad)
(bad)
lahf
cltd
sub
insb
shrl
mov
test
jmp
sub
scas
jnp,pn
scas
mov
push
sub
sub
sub
sub
sub
lahf
cltd
dec
rolb
cltd
lahf
jne
pop
out
in
sub
dec
cmp
imul
lahf
test
adc
test
jmp
cltd
mov
sub
adc
lahf
push
jmp
mov
inc
cltd
lahf
dec
jmp
sbb
in
sub
cmp
sub
xor
mov
sbb
lea
iret
sub
dec
sub
lret
dec
sub
dec
sub
js
sub
dec
sub
lahf
cltd
and
sub
sub
sub
lret
dec
sub
ljmp
cmp
lret
sub
sub
sub
aaa
dec
sub
sub
cmp
or
cltd
jbe
aaa
jmp
xchg
sub
lret
sub
dec
xor
int
test
dec
xor
int
stc
fimuls
das
sbb
sub
lret
sub
and
int3
sub
lret
sub
dec
int
popf
jle
lahf
inc
dec
sub
sub
dec
cmp
sub
orb
sub
sub
lret
sub
mov
push
sub
lret
dec
sub
sub
push
dec
sub
cs
lahf
sbb
dec
sub
scas
add
das
dec
xor
int3
sub
ja
and
int3
sub
sub
lret
loope
cltd
lcall
sub
dec
sub
sub
cmc
dec
sub
sub
sub
sub
lret
sub
jle
sub
sub
lret
sub
lahf
movsl
lret
das
nop

int
mov
lret
daa
dec
sub
jge
dec
sub
sub
dec
sub
sub
dec
dec
sub
sub
push
dec
sub
jnp
add
sub
sub
sub
push
mov
push
jecxz
cltd
stos
dec
sub
sub
nop

dec
sub
sub
dec
sub
lret
int3
sub
int3
sub
or
lret
dec
sub
sub
mov
sub
call
mov
lahf
cltd
add
lret
aaa
xchg
int
adc
jmp
jo
cmp
sub
sub
dec
sub
lret
sub
lret
sub
das
int3
sub
dec
sub
lret
dec
sub
aaa
int
daa
inc
dec
sub
dec
sub
dec
dec
sub
int
sub
sahf
dec
sub
and
sub
adc
das
int
int3
sub
lcall
sub
dec
sub
sub
mov
lods
lret
sub
jle
sub
sub
sub
dec
sub
aas
insb
lret
sub
std
push
dec
xor
sub
das
int3
sub
jmp
sub
sub
xchg
int
mov
sub
sub
dec
sub
lret
dec
sub
dec
daa
lret
scas
dec
sub
sub
sub
lret
dec
sub
sub
int
ja
dec
sub
add
pop
and
repz
and
stc
xchg
pop
sub
fwait

sub
cmp
and
cld
idiv
sbb
pop
sub
aas
lahf
nop

pop
sub
push
or
pop
sub
es
sub
sbb
pop
sub
fwait

cs
sub
sbb
sbb
out
pop
sub
sub
sub
sub
cltd
cmp
push
sbb
jbe
sub
sub
sbbb
jecxz
fidivrs
inc
fnstsw
xlat
fwait

sub
sub
mov
and
pop
sub
and
jnp
sub
pop
sub
outsb
mov
scas
pop
es
sub
int3
pop
adc
sub
sbb
pop
sub
adc
sub
pop
sub
lahf
out
add
sub
pop
sub
or
clc
fisubrs
call
sub
mov
sub
mov
add
es
sub
icebp
arpl
cmp
add
sub
lahf
cltd
mov
dec
pop
sub
ja
sub
sbb
pop
sub
pop
pop
sub
sub
xchg
cltd
sub
pop
sub
sub
pop
sub
xor
pop
sub
out
add
and
sbb
cs
sub
ficompl
(bad)
sbb
lds
sbb
test
pop
sub
xor
pop
fstpt
pop
sub
nop

sbb
pop
sub
sub
out
sub
cmp
pop
sub
and
sub
fildl
sub
fwait

sub
sbb
sub
adc
sub
sub
fwait

sub
dec
sbb
pop
sub
out
sub
sbb
sbbl
frstor
xchg
pop
sub
xor
sub
adc
pop
sub
fwait

sub
sub
popf
sub
sbb
jbe
sub
pop
sub
(bad)
sbb
dec
sbb
pop
sub
or
xchg
sbb
sbb
sub
sub
jmp
pop
sub
inc
popf
sub
sbb
sub
(bad)
sbb
push
pop
sub
sbb
lahf
cltd
fistpl
pop
sub
add
sub
lahf
hlt
lahf
cltd
cmpsl
repz
add
pop
sub
xor
sub
fstps
jnp
adc
push
xchg
pop
sub
fldt
pop
sub
lods
popf
sub
sbb
mov
fldt
sub
enter
(bad)
pop
es
pop
sub
pop
cmp
sbb
sub
fwait

sub
sub
sbb
sub
jp
sub
and
sub
or
sbb
mov
pop
sub
lahf
scas
lahf
cltd
lahf
and
sub
sub
sbb
pop
sub
fwait

sub
sbb
pop
sub
and
sbb
sub
or
pop
sub
dec
je
sub
fwait

outsl
jmp
sub
fwait

aas
push
sub
push
popf
sub
dec
pop
sub
and
sub
pop
daa
pop
sub
pop
sub
sub
out
popf
sub
pop
sub
fisubrl
xchg
pop
sub
lahf
sub
mov
and
js
dec
js
sub
pop
sub
mov
mov
mov
sbb
aaa
pop
sub
sub
mov
jno
popf
nopl
sbb
sub
sbb
sub
pop
sub
dec
fdivl
pop
sub
sbb
cmp
sub
or
sub
sub
ja
cmp
pop
sub
push
cwtl
fwait

sub
sbb
sub
jns
fbstp
nop

cltd
sub
adc
lahf
cltd
add
pop
sub
mov
negb
sub
sbb
fldln2
fstpl
dec
pop
cmp
sbb
sub
fwait

sub
sub
sub
clc
sbb
pop
sub
loopne
sub
sbb
pop
sub
popfw
sub
pop
sub
fsts
sub
sahf
sbb
outsb
sahf
cmp
pop
sub
sbb
sub
mov
sub
dec
sahf
daa
jle
sub
sbb
sub
fldt
xchg
pop
sub
sbb
sub
sbb
pop
sub
fwait

sub
sbb
sub
sub
pop
sub
fwait

sub
mov
daa
pop
sub
cltd
pop
sub
push
pop
sub
mov
sub
sbb
js
sub
push
nop

cmp
sub
lahf
push
sub
pop
lahf
cltd
dec
stc
push
mov
xor
sub
xor
sub
xchg
sub
mov
out
in
jae
mov
sub
cmp
and
sub
lea
cltd
lahf
iret
mov
sub
sahf
subb
or
sub
cmp
sub
lahf
and
es
jne
cltd
xchg
sub
sub
sbb
sub
sub
jns
lahf
cltd
popf
pop
inc
mov
shrl
fwait

cwtl
lahf
cltd
mov
sub
call
xor
sub
push
xchg
mov
cs
sub
(bad)
jb
sub
lahf
mov
xor
sub
lods
lods
sub
rep
lods
sub
stos
sub
lods
cs
mov
test
jnp
lods
sub
lods
sub
sub
adc
insb
mov
sub
stos
sub
lods
push
lods
sub
(bad)
lahf
cltd
insb
lods
lods
sub
mov
sub
lods
sub
xchg
lods
sub
sub
lods
jle,pn
cs
jle
lods
je
lods
sub
cmp
sub
fistpl
mov
lock
lods
sub
iret
stos
jle
cmpsb
stos
mov
sub
mov
xchg
lods
push
lods
lods
sub
dec
lods
imulb
xchg
jmp
mov
jmp
cltd
in
jb
sub
sub
or
cmp
mov
sub
(bad)
in
or
ljmp
in
sub
and
and
jnp
in
sub
stos
in
sub
sbb
in
cmp
jmp
mov
sub
ljmp
in
sub
lahf
je
pop
jmp
(bad)
in
sub
sub
dec
jecxz
cltd
lahf
stc
jmp
ljmp
in
sub
jmp
push
in
cs
mov
sbb
es
ljmp
in
sub
jmp
imul
in
and
sub
dec
jmp
jmp
ljmp
in
sub
jmp
cli
in
sub
jb
sub
test
ljmp
das
xchg
xor
sub
in
sub
or
sub
lahf
cltd
fsubrp
sub
sub
jmp
test
xchg
sub
push
sub
sub
adc
das
ljmp
in
sub
jmp
leave
in
sub
cmp
mov
das
sbb
sub
adc
sub
insb
cltd
lahf
pop
ljmp
in
push
cli
in
sub
sub
ljmp
das
push
jmp
out
std
lahf
cltd
inc
int
xchg
push
int
stos
dec
sub
sub
insl
cli
lret
or
js
sub
dec
sub
sub
push
push
adc
dec
lret
das
lret
sub
or
jbe
sub
lret
sub
js
sub
mov
dec
sub
jb
sub
orb
sub
dec
sub
lret
sub
lret
sub
dec
inc
jle
sub
and
xchg
and
sub
dec
sbb
int3
sub
int
dec
sub
sub
adc
int
mov
or
sub
dec
sub
sub
and
int3
sub
dec
sub
sub
xchg
dec
or
lret
dec
sub
orb
sub
sub
lret
sub
sub
and
sub
dec
sub
sub
dec
sub
sub
cmp
int3
sub
sub
imul
out
sub
dec
adc
sub
dec
sub
int3
sub
sub
lret
sub
dec
xor
sub
lret
push
lret
ja
sub
sub
les
sub
sub
stos
je
sub
dec
and
int
(bad)
loopne
sub
inc
push
lret
sub
lret
pop
xchg
xchg
lret
sub
addr16
push
dec
sub
sub
and
sub
lret
int
and
adc
sub
dec
sbb
sub
cs
sub
sub
dec
add
xchg
add
sub
into
js
lret
sub
add
insb
lret
sub
dec
sub
lret
sub
lret
sub
mov
out
add
mov
sub
sub
dec
xchg
nop

int
testb
dec
repnz
jno
into
dec
lret
lret
sub
lret
int
daa
push
int
int
xchg
sbb
sub
pop
dec
sub
push
cltd
lahf
lret
adc
int
mov
lret
sub
and
lret
sub
pop
int
imul
sub
sub
dec
sub
sub
add
cmovnp
pop
lret
cli
dec
sub
lret
dec
sub
xorl
sub
lret
sub
dec
add
sub
dec
xor
int
jnp
dec
sub
xor
sub
inc
int
int3
sub
dec
sub
sub
add
pop
dec
sub
sub
loope
lret
jno
sub
dec
sub
int
sti
or
sub
and
sub
mov
sbb
sub
jmp
sub
sbb
pop
sub
sbb
out
fwait

sahf
daa
pop
sub
sbb
pop
sub
dec
popf
sub
pop
sub
pop
xor
sbb
bound
fldcw
pop
sub
ja
sub
mov
xchg
pop
sub
xor
sub
sub
pop
sub
lahf
mov
das
mov
mov
fwait

cmp
jmp
sub
fwait

sub
sub
sub
mov
sub
sub
cwtl
fsubrl
pop
sub
sbb
sub
push
sbb
xor
popf
sub
pop
sub
push
pop
sub
rcrb
pop
sub
lea
xchg
in
pop
sub
stos
pop
sub
sbb
pop
sub
fwait

sub
sbb
sub
fwait

sub
xchg
sub
and
(bad)
out
pop
sub
sub
sub
inc
popf
sub
sbb
sub
pop
pop
sub
pop
sub
pop
pop
sub
inc
outsl
sbb
jmp
sub
pop
ds
pop
sub
stos
pop
sub
pop
daa
push
pop
sub
add
adc
sbb
sub
sub
fwait

sub
sbb
pop
sub
lahf
js
es
sub
sbbb
sub
pop
sub
fnstenv
sub
sub
sub
mov
pop
sub
and
pop
sub
lahf
stc
sbb
pop
sub
sbb
pop
sub
fwait

sub
sbb
pop
sub
adc
pop
sbb
js
sub
fwait

sub
sub
sub
test
pop
sub
lahf
(bad)
fwait

and
pop
sub
sbb
sub
jnp
cs
sub
test
sub
pusha
pop
sub
fwait

sub
xor
sub
sbb
sub
fstps
mov
inc
pop
sub
fisttpl
sbb
pop
sub
pop
sub
das
xchg
sub
lahf
sub
lret
sub
pop
sub
sbbb
sub
pop
sub
sbb
cmp
and
sbbb
sbb
pop
sub
out
in
fwait

xor
sub
or
pop
sub
cmp
xchg
pop
sub
pop
sub
mov
inc
mov
out
pop
sub
sbb
pop
sub
fwait

inc
pop
sub
bound
sbb
sub
pusha
cltd
sub
sbb
fildl
insb
pop
sub
sbb
push
sub
sbb
sub
sahf
sub
xchg
pop
sub
ja
ljmp
sub
sub
sbb
pop
sub
add
stc
mov
sub
sbb
js
sub
sub
sub
(bad)
mov
pop
sub
sub
pop
sub
fwait

sub
pop
sub
pop
sub
lods
mov
sub
xchg
clc
out
sbb
inc
fwait

xor
sub
add
or
sub
sbb
pop
sub
fwait

sub
out
sub
movsl
cmpsb
fistpl
fwait

sub
sbb
sub
enter
pop
ds
sub
sub
pop
sub
lcall
sbb
sbb
sub
sub
test
push
sub
sub
sub
sbb
sub
orl
nop

pop
sub
mov
sub
lahf
sub
lods
mov
pop
sub
or
pop
sub
fwait

stos
pop
sub
test
push
sbb
pop
sub
pop
sub
cltd
dec
pop
sub
pop
sub
cltd
push
pop
sub
pop
sub
repz
pop
and
sub
xchg
popf
and
mov
fwait

sub
mov
mov
sub
lea
pop
or
sub
sub
fcompl
mov
fists
sbb
pop
sub
fiaddl
clc
mov
stos
pop
add
sbb
sub
fwait

sub
sub
sub
adc
pop
sub
sbb
sbb
sbb
sub
sub
pop
sub
fwait

sub
sbb
sub
sub
sub
sbb
add
cltd
adc
pop
sub
pop
sub
testb
xchg
pop
sub
push
pop
sub
fistpll
lahf
int
sub
stos
sub
sub
sbb
lahf
and
xor
mov
jno
sub
addr16
cs
sub
sub
and
sub
js
and
lea
sub
add
sub
sbb
sub
and
push
dec
mov
mov
sub
lahf
push
stos
das
jmp
lahf
jle
jge
cs
lods
sub
jle
xchg
sub
js
stos
jae,pn
sub
lods
sub
cmp
lret
cltd
js
stos
jle,pn
sub
sahf
lods
sub
sub
aaa
sbbl
sub
jl
lods
pop
ljmp
lret
ljmp
aaa
stc
jle,pn
stc
cs
sub
cs
jmp
cltd
sub
and
sub
cltd
rol
ljmp
movsl
ljmp
into
std
in
mov
call
(bad)
in
sub
ljmp
cltd
lret
ljmp
jecxz
imul
cltd
fs
cld
sub
lahf
xor
push
lahf
out
cmc
lahf
sub
in
sub
sub
imul
in
cs
lahf
scas
clc
in
das
cmc
lahf
cmp
call
add
es
scas
dec
insl
fstps
sub
insl
sub
cmp
sub
(bad)
jmp
in
cs
and
imul
cmp
jmp
sub
jmp
mov
je
sbb
call
sub
loopne
imul
(bad)
sbb
cli
scas
xchg
fs
das
fldenv
outsb
mov
mov
dec
dec
loopne
filds
(bad)
shrw
fdivrp
(bad)
fimull
jmp
clc
repnz
add
mov
dec
sbb
clc
cmp
sub
sub
push
xor
aam
inc
push
(bad)
jmp
push
adc
fldl
add
cmp
out
jbe
adc
sub
push
jns
int3
sub
(bad)
roll
mov
arpl
adc
fsubl
mov
add
loopne
fistps
stos
and
sar
cmp
lds
cmp
lds
sub
sbb
pusha
push
sub
add
add
cli
insb
pop
(bad)
xchg
(bad)
imul
fnstenv
push
call
sub
add
sub
mov
and
fdivrl
sub
ja
adc
sub
imul
sub
(bad)
jb
movsb
cmpl
(bad)
out
test
sub
cmp
movsl
push
sub
sub
or
nop

int
fucomp
sub
mov
pushf
sub
lret
loopne
push
ror
ret
sub
rorl
sub
test
roll
fidivrl
fsubrl
mov
pop
(bad)
cmp
mov
xchg
bound
or
loope
ret
sub
imul
fdivl
dec
sub
rolb
insb
mov
sub
leave
popa
mov
sub
outsl
test
test
jp
outsl
sub
cli
jbe
adc
xor
sub
push
mov
push
aad
mov
in
call
push
sub
pop
dec
mov
sub
dec
mov
cld
data16
sub
outsb
xchg
jae
pop
push
sub
push
ds
xor
cltd
pop
or
sub
inc
push
cmpsl
mov
scas
lock
(bad)
scas
sub
pop
dec
adc
sub
(bad)
push
sub
or
push
xor
outsl
adc
out
fidivl
jnp
sbb
mov
movb
int
stc
ja
(bad)
daa
lahf
sub
xchg
adc
sub
mov
out
aam
outsl
lods
int3
shrb
and
fldt
mov
aaa
dec
mov
mov
aaa
sbb
lds
pop
mov
decb
adc
sub
jno
movsl
lret
cmpl
mov
or
sub
jl
xchg
xchg
sub
int
sbb
mov
jnp
sub
xchg
bound
sub
jecxz
jae
das
fstpl
gs
sub
dec
sbb
(bad)
leave
push
sub
sbb
movsl
int
lret
hlt
and
into
lahf
data16
lods
les
and
or
mov
mov
sub
leave
stos
mov
xor
lods
mov
lds
aaa
fstpl
xchg
pop
jnp
pop
sub
test
and
leave
sti
jg
nop

test
mov
shlb
lret
push
subl
xchg
mov
pop
add
lock
pop
sti
sahf
mov
mov
sub
call
or
mov
mov
popa
fbstp
push
or
fidivrl
subb
mov
mov
scas
or
outsb
outsb
sub
addr16
movsb
push
push
aas
sub
mov
mov
xchg
es
adc
sub
sbb
mov
push
imul
jle
inc
mov
loope
sub
shrb
mov
cli
pop
push
sub
(bad)
fistpl
int3
mov
sub
(bad)
shrl
sub
ret
adc
xchg
sbb
inc
and
ja
pusha
sbb
inc
sub
adc
fidivrs
nop

dec
js
faddl
pop
sub
xchg
pop
xchg
test
or
jg
jle
loope
loope
sub
sub
add
mov
lock
stos
sub
sub
cmp
inc
sub
xor
insb
inc
scas
das
pushf
sub
mov
shl
sub
sub
jae
fldcw
pop
lock
cmp
xchg
roll
sub
mov
jmp
dec
sub
adc
dec
repz
or
pusha
sub
icebp
arpl
out
stos
je
sub
sbb
cmpsl
cmp
sub
xorb
jnp
mov
shrl
adc
pushf
sub
push
jno
fstl
fsubrl
sub
sbb
mov
loopne
sub
pop
mov
int3
aas
pop
testb
(bad)
sub
sahf
mov
dec
sub
rorl
or
dec
sub
push
jno
mov
cmpsb
mov
movsl
outsl
sub
push
jg
push
imul
popf
cld
xchg
loope
pushf
shlb
enter
cmp
int
loopne
sub
sub
sub
fsubrs
repz
jno
cltd
push
enter
ficoml
mov
dec
and
sub
push
pop
(bad)
sti
stos
and
sub
(bad)
push
push
loop
out
inc
push
inc
sub
imul
stos
(bad)
and
xchg
adc
sahf
mov
add
(bad)
sub
jno
dec
popaw
mov
xchg
lods
and
xchg
sub
fisubrl
sub
xchg
imul
movsl
ret
push
mov
(bad)
push
pop
jp
ss
cmp
(bad)
mov
les
outsl
mov
and
push
orb
pushf
adc
sbb
fcoml
sbb
popa
es
push
js
or
lahf
stos
pop
mov
lea
mov
mov
cmpl
xor
mov
bound
sub
inc
lahf
cmp
cmp
sub
mov
sbb
ficompl
xor
dec
xchg
or
aaa
add
inc
add
adcl
mov
cmp
shl
push
gs
ffree
test
adc
icebp
mov
mov
test
fs
adc
sub
xchg
pop
sbb
sub
push
push
push
mov
jge
test
loop
xchg
sub
jge
add
and
lods
add
xchg
jge
cs
and
test
adc
sarb
cmpsl
sbb
and
outsb
loope
sub
into
add
sub
cmpsl
es
cli
sub
sbb
jl
fldl
testl
add
jnp
in
sbb
and
mov
fisubl
mov
sub
orl
cmp
or
or
mov
fsubrs
and
and
mov
aam
addr16
cmp
sub
xchg
push
mov
shrb
mov
insb
inc
sbb
push
add
ret
data16
mov
mov
orb
int
sti
arpl
sub
inc
push
pop
sub
fsubrl
sub
add
jp
sub
sub
xor
jle
and
out
jg
shlb
test
sarl
jb
jns
sub
pop
arpl
jnp
fnstsw
sub
xor
pop
sub
addb
and
xchg
out
aas
add
addb
jbe
push
(bad)
test
mov
loopne
(bad)
out
sbb
filds
leave
and
sti
stc
out
pop
cmp
mov
loop
mov
mov
(bad)
or
xor
xchg
rcll
jne
addb
fxch
mov
sub
rclb
std
sub
lods
andb
cltd
loope
xchg
jo
or
(bad)
sbb
aaa
rorb
sarl
sub
cltd
inc
(bad)
aaa
sbb
jmp
(bad)
adc
fisubrl
jle
xchg
mov
std
adc
in
shr
fcomp
sub
sbb
pop
push
sub
int
jmp
push
fcompl
(bad)
jo
pop
xchg
loop
shrl
in
add
and
xchg
sub
stos
cmpsl
sbb
jno
rcrl
dec
imulb
mov
dec
add
ljmp
aaa
cmp
fistl
shlb
mov
pop
hlt
test
pop
popa
add
add
(bad)
sti
enter
sub
shll
cmovne
cld
sub
mov
lock
sbb
mov
pop
mull
pushf
sbb
sub
test
sub
cmc
sbb
sbb
dec
popa
jg
sub
insb
mov
cmpsb
xchg
inc
gs
xor
out
sub
icebp
add
xchg
rcrb
dec
mov
stos
rcr
in
pushf
gs
sub
dec
inc
sub
add
pop
pop
xor
sub
stos
and
divl
pop
lods
dec
lock
fcoml
fstl
lods
jno
lahf
and
sub
(bad)
mov
pop
out
cmpsb
out
sub
in
mov
mov
mov
cmp
mov
mull
sub
and
push
sub
cmp
in
push
xchg
pop
push
mov
enter
sub
xchg
adc
fildl
xor
out
cmpsl
sub
popa
or
sub
push
add
mov
out
pop
stos
frstor
mov
xchg
and
(bad)
push
sub
mov
inc
sub
lahf
stos
sbb
xorb
fdivl
lret
rcr
movsb
shrb
jno
(bad)
stc
sub
std
subb
sbb
(bad)
sub
cmp
movsl
sbb
push
mov
loope
arpl
ffreep
cli
sub
dec
sbb
sub
jmp
ss
cpuid
jb
sub
sub
sub
es
mov
jne
sub
jl
subl
sub
push
insb
and
mov
xor
sub
outsb
pop
subl
mov
inc
mov
lods
sub
pop
and
sub
sub
into
bound
(bad)
and
popf
add
mov
sub
sub
aam
pop
cltd
fisubl
addb
dec
lea
xchg
notb
mov
mov
jecxz
sub
sub
mov
pop
je
jne
(bad)
outsb
mov
sub
subl
mov
pop
xchg
and
sub
jp
add
movsl
das
jle
cmp
mov
jge
push
or
pushf
mov
adc
mov
inc
adcb
pop
sub
cmpsl
enter
in
or
dec
in
xor
sub
into
je
and
scas
imul
sub
cwtl
sbb
lods
sub
pusha
pop
xor
cmp
sub
cmp
pop
popf
outsb
dec
ljmp
xchg
test
inc
sub
ljmp
mov
nop

rorl
pop
aas
out
sub
pop
fists
add
loopne
mov
xor
sub
inc
push
shlb
fldcw
push
sbb
sub
dec
(bad)
jmp
adc
sub
cld
inc
das
lcall
(bad)
dec
sub
add
dec
enter
sub
movsl
pusha
adc
sub
(bad)
adc
jmp
gs
sub
addr16
sub
fisttps
fimull
sub
int
add
sub
add
(bad)
inc
dec
fwait

subl
mov
aad
sub
inc
ja
xchg
out
test
enter
sub
iret
cmp
repnz
sub
cmpsl
sub
jo
adc
ljmp
xchg
or
subb
sub
adc
mov
test
xor
in
pop
rclb
push
out
movsl
shr
dec
sbb
clc
loop
stos
jno
xchg
mov
dec
mov
test
inc
jae
lock
sbb
scas
jo
add
sbb
pushf
gs
dec
pop
into
int3
mov
push
pushf
cltd
aas
pop
and
subb
add
fcomps
lret
xor
repnz
ss
ret
ss
mov
pop
sbb
cld
fidivrl
std
add
mov
loopne
inc
aaa
out
mov
je
(bad)
loopne
pop
jl
out
push
(bad)
outsb
cmp
add
xchg
and
(bad)
xor
in
cmpsb
lods
mov
ja
and
fistpl
add
mov
fs
cld
xchg
jb
cmp
mov
popa
test
mov
add
add
aas
sbb
in
clc
jbe
sbbb
sbb
cmpsl
inc
lahf
ja
cmp
call
sbb
adc
and
mov
sbb
or
popf
jge
sbb
scas
out
and
sub
push
aam
pop
out
pop
dec
mov
mov
jmp
pinsrw
out
pop
fisubrs
roll
popf
and
(bad)
test
hlt
or
mov
pop
inc
lret
pop
push
mov
dec
out
stos
daa
into
out
add
mov
in
(bad)
mov
int
or
ror
setbe
test
outsl
loop
lds
in
mov
adc
fmul
mov
dec
(bad)
fisubl
stos
push
pop
imulb
fidivs
rcrb
xchg
xchg
adc
lods
popa
sub
inc
sbb
loopne
cmpsl
in
scas
push
fildll
inc
jns
add
out
push
addl
push
xor
out
cmp
(bad)

jns
xchg
scas
xor
mov
push
(bad)
and
ja
pop
sarl
sahf
adc
adc
mov
stos
cmpsb
adc
jnp
sbb
cltd
mov
jmp
ljmp
xchg
add
sub
mov
dec
dec
push
jno
stos
sbb
rcrl
pushf
push
loop
xlat
sub
out
or
outsb
push
push
fdivrl
and
push
mov
faddl
inc
sbb
mov
les
cmp
sub
add
repnz
repz
inc
push
addl
inc
sub
inc
ljmp
(bad)
fidivl
sahf
lock
out
and
dec
pop
inc
xor
(bad)
and
xor
(bad)
adc
mov
out
xchg
int3
lret
repnz
push
incl
xchg
ficoml
enter
dec
subl
faddl
mov
loopne
mov
mov
xchg
shl
ja
adc
(bad)
ror
xchg
outsl
mov
arpl
nop

jb
mov
dec
out
jne
pushf
sbb
jo
shrl
hlt
push
xchg
or
inc
(bad)
mov
sub
pop
jge
mov
mov
(bad)
(bad)
mov
stc
cmp
outsb
and
fldcw
sub
cmp
cs
into
lcall
xchg
push
rcrb
fidivrs
xchg
dec
cld
jp
cmpsb
ja
push
test
sbb
lods
scas
pop
adc
inc
(bad)
hlt
mov
pop
jne
aas
mov
js
sbb
cmp
lret
arpl
ja
ja
or
enter
das
das
cmpsb
push
in
rorb
sub
push
lahf
insb
jle
test
inc
pushl
mov
mov
arpl
xchg
adc
cmp
adc
adc
add
js
push
mov
xchg
push
sub
push
xchg
dec
mov
adc
cmp
div
sbb
and
popa
fs
or
mov
cmp
ljmp
sbb
sbb
push
or
aad
xor
fcomp
mov
rclb
loope
in
test
lcall
pop
or
scas
movsl
pop
pop
push
sarb
push
fldenv
negb
cmpl
sahf
cmp
xchg
mov
sbbb
aas
mov
ljmp
and
xchg
jl
mov
xlat
(bad)
mov
test
jbe
mov
inc
rorb
fists
(bad)
dec
sub
mov
loopne
cld
push
cmpsl
mov
add
(bad)
push
dec
push
sub
xchg
or
fsubrs
sbb
rclb
mov
inc
cmpb
mov
lret
inc
repnz
clc
sbb
cwtl
dec
or
insb
xchg
(bad)
mov
dec
jmp
jle
and
hlt
jbe
mov
jle
in
insl
mov
push
jae
lahf
mov
sbb
scas
mov
andb
jge
fnstcw
sub
pop
jge
shll
js
add
jecxz
mov
ror
pop
push
sbb
or
xlat
mov
es
test
jle
into
mov
cltd
adc
pop
xchg
rorl
dec
pushf
fstl
xchg
cmp
add
xchg
cmc
repnz
cwtl
rcrb
sub
or
push
xlat
insl
cmpsl
int
sbb
xlat
pop
xor
cwtl
mov
xchg
fs
aam
rclb
rcll
or
lahf
push
jle
(bad)
popf
setne
push
movsl
cltd
mov
pop
or
loope
ret
inc
add
cmp
or
xchg
pop
je
adc
jb
xchg
push
jmp
jne
repnz
test
lret
pop
push
lds
mov
jmp
add
insb
push
sbb
clc
repnz
inc
pop
and
fisttps
cwtl
fcompl
sbb
add
xor
sbb
pop
daa
rorl
add
loope
mov
inc
jb
xchg
pop
ret
mov
sub
lock
ja
dec
adcl
(bad)
pop
(bad)
mov
push
lods
push
dec
in
sbb
(bad)
ja
or
sti
addr16
cmpsl
fwait

or
cmp
jecxz
xchg
test
sub
js
push
mov
mov
in
shl
mov
xchg
push
icebp
(bad)
mov
mov
jno
and
rolb
out
(bad)
cmpsl
pop
cmp
sub
mov
inc
fwait

cmp
popa
mov
pushf
mov
cmp
dec
decb
sbb
jle
jge
bnd
subl
or
add
adc
int3
(bad)
xchg
xchg
lahf
ja
movsl
fdivrl
out
lret
pop
loopne
adc
stc
ja
pop
jg
mov
and
cmpsl
dec
or
mov
leave
imul
xor
jle
or
sub
xor
xchg
inc
adc
out
imul
gs
mov
sub
pop
mov
aam
and
shlb
xlat
pop
dec
add
sbb
andb
and
and
out
pop
xchg
add
bound
js
icebp
jno
adcb
xchg
jg
pop
inc
cmp
int
cmp
repnz
rorl
ja
(bad)
cmp
xchg
lods
adc
call
leave
and
std
call
mov
xchg
imull
fsubp
sbb
fidivrl
mov
push
bswap
adc
sbb
scas
jp
lods
xor
push
ror
enter
and
(bad)
push
and
cmp
call
int3
outsl
cltd
jnp
add
pop
mov
xchg
push
adc
add
fisttpl
das
jnp
mov
pop
(bad)
jnp
popf
jne
adc
adc
fimuls
rolb
test
jno
mov
dec
pop
jno
ret
inc
out
adc
call
out
xchg
imul
and
add
mov
lahf
sub
aam
sbb
jecxz
daa
inc
add
xchg
adc
jo
sbb
mov
xchg
add
jae
cmp
push
cld
popf
mov
fisubrs
mov
pop
pop
cmp
mov
into
mov
xor
push
and
add
push
jge
mov
push
xor
xchg
push
pushf
cltd
mov
xor
in
fsub
mov
sbb
or
cmp
push
push
lcall
in
out
xchg
divl
fs
mov
or
xchg
fldcw
sbb
sub
mov
out
popl
cmp
pop
es
mov
sbb
pop
ljmp
inc
mov
into
mov
out
cmc
mov
sub
nop

test
ret
xor
sti
fucomi
outsl
jno
jmp
or
movsl
(bad)
popf
stos
xor
leave
sbb
loop
fisubl
int3
addb
cltd
pusha
mov
cld
push
xor
stos
(bad)
mov
mov
repnz
ja
xchg
repnz
repnz
mov
xchg
pop
xlat
out
fidivrl
mov
mov
pop
pop
xchg
sbb
out
adcb
fs
test
inc
adc
pop
stos
js
jae
enter
lahf
sbb
hlt
pop
push
scas
xor
pop
ret
out
jmp
into
das
enter
mov
mov
push
jmp
push
aas
fs
mov
cmpsb
lcall
cwtl
push
mov
jg
and
inc
xchg
mov
arpl
xchg
hlt
pop
cmc
repnz
in
push
sub
adc
in
daa
rcll
inc
push
add
sarl
fucomip
pop
or
or
adc
fisubrs
ljmp
aam
(bad)
jne
pop
mov
addr16
or
and
sub
imul
out
cmp
mov
sbbb
mov
hlt
push
add
mov
orb
mov
(bad)
imul
or
fsubl
and
fsts
jb
dec
data16
pushf
adc
out
mov
add
cmp
dec
mull
xor
push
stos
cltd
adc
push
lcall
sar
fucomip
jns
sbb
xchg
jnp
push
or
adc
loopne,pn
(bad)
imul
lods
sub
mull
jnp
push
xlat
cltd
adc
fisubl
xchg
xor
xchg
outsl
daa
in
pop
aad
enter
push
shlb
aam
mov
dec
jb
fisubrl
je
lahf
ja
cmp
outsl
cld
sbb
mov
sti
jo
or
xor
mov
fildl
enter
add
cwtl
aad
mov
data16
pop
pop
and
sarb
in
lret
into
mov
fdivl
jl
aad
ret
push
or
jns
frstor
push
add
aad
and
mov
out
movsl
popa
sahf
pop
sti
into
dec
adc
imul
iret
leave
dec
xchg
cmc
out
test
push
mov
in
aad
stc
outsl
adc
cmpsl
mov
or
xchg
xchg
jnp
imul
sti
stos
and
or
scas
loopne
cltd
popf
cmp
aad
sbb
lea
or
mov
push
das
xorl
cmp
sahf
mov
jo
mov
test
xor
out
fmull
or
call
fst
fsubrl
imul
stos
arpl
mov
pop
push
sub
mov
fistl
sahf
xchg
outsl
out
insb
shlb
gs
clc
add
pushf
adc
out
lcall
xchg
outsl
mov
lods
xchg
ret
push
sub
cmp
pop
cs
int3
in
fucomip
pop
rolb
pop
push
clc
xchg
or
sub
jno
movsl
mov
int3
push
inc
fucomip
pop
shlb
mov
clc
bound
ja
mov
movsl
inc
ja
in
jl
cwtl
bound
mov
popf
cmp
fs
xchg
xchg
and
dec
(bad)
into
xor
xchg
xor
push
cs
imul
or
pop
add
data16
lahf
xor
sbb
inc
mov
dec
leave
sarb
aas
pause
pop
pop
xor
mov
imul
xchg
sti
adc
rcrb
pushf
sarb
in
out
mov
loope
add
lcall
mov
sub
arpl
es
adc
xor
sbb
push
in
mov
jae
sbb
and
test
add
inc
add
dec
mov
fimull
mov
add
cmp
mov
aad
mov
or
das
ljmp
sbb
or
push
cwtl
mov
mov
shl
(bad)
testb
ret
imul
push
mov
dec
movsb
adc
and
pop
cmpsb
rcrb
(bad)
sbb
ss
pop
jecxz
sub
mov
lds
jnp
lret
sub
sbb
loopne
add
mov
(bad)
out
mov
icebp
add
cmp
or
push
push
scas
pushf
mov
shr
rolb
inc
or
fcomp
pushf
push
in
pop
rcrb
mov
sbb
test
pop
das
idivl
and
and
call
push
subl
mov
mov
enter
jg
dec
mov
or
call
pop
fiaddl
mov
mov
dec
adc
xchg
lods
mov
test
xchg
xorl
adc
sbb
lahf
ja
lea
mov
shll
push
mov
sub
mov
aam
fwait

sbb
lret
xor
aaa
xchg
rcl
mov
pushf
fsub
push
and
mov
mov
mov
nop

jae
sbb
and
stc
push
roll
call
movsl
cmp
cwtl
ja
dec
ljmp
and
fs
xchg
ja
xchg
dec
ficoml
ret
mov
or
in
pop
push
stos
xchg
push
fisttpl
in
(bad)
scas
nop

sbb
pop
fs
test
dec
push
jmp
xchg
sbbl
mov
inc
sahf
mov
sub
sub
pushf
jno
pop
dec
(bad)
mov
xor
ret
loope
rclb
pushl
out
lahf
dec
sub
sbb
ficoml
lret
stos
mov
outsl
fildll
mov
mov
bound
pushf
mov
imul
insl
mov
or
iret
mov
or
cmp
dec
xchg
adc
xlat
xchg
ja
adc
mov
scas
mov
dec
out
mov
mov
xlat
sub
lods
push
adcl
sbb
negb
sbb
sub
and
sbb
(bad)
scas
icebp
dec
js
fwait

test
sahf
push
mov
sbb
adc
out
(bad)
pop
into
cmpsb
and
scas
shrb
daa
(bad)
or
add
jg
data16
pop
stos
dec
stos
test
ljmp
addr16
(bad)
jg
inc
or
mov
sub
ret
sbb
in
mov
jns
xchg
jns
mov
jbe
xchg
and
sub
inc
xchg
mulb
pushf
sarb
jecxz
(bad)
(bad)
outsl
or
pop
jbe
push
jecxz
mov
mov
jmp
pop
in
sbb
and
(bad)
cwtl
movsb
movsb
adc
fsubrs
xor
mov
ret
ret
sub
jecxz
xor
adc
out
les
lahf
dec
add
pop
bound
push
mov
gs
add
nop

sub
popf
mov
mov
mov
sub
ss
test
bound
dec
pop
es
cmpb
mov
xor
push
test
aad
stc
test
xchg
nop

sbb
jns
push
lea
inc
outsl
cmp
jmp
lcall
pop
(bad)
or
ja
jecxz
rorb
cmpl
imul
dec
sbb
push
movl
pop
add
cltd
sbb
xchg
and
lahf
pop
jb
out
xor
push
stc
stos
aaa
test
push
fistpll
subb
and
adc
adc
data16
test
cmpl
adc
mov
(bad)
push
enter
(bad)
mov
rorl
fcomps
imul
jecxz
pop
mov
mov
repnz
pop
sub
rol
lods
fs
(bad)
fdivrp
movb
add
sarb
es
int3
fs
mov
insl
mov
pusha
fisubrs
fmuls
inc
mov
adc
out
and
arpl
fisttpl
mov
scas
int3
and
lret
clc
cwtl
mov
sub
roll
push
vorps
jnp
inc
or
das
add
xlat
pop
in
test
pop
nop

jmp
inc
fwait

rcr
mov
jae
dec
insb
mov
sbb
mov
iret
jp
movsb
sti
jbe
in
jge
addb
sbb
sbb
sub
sbbl
mov
jmp
or
jne
and
pop
and
(bad)
adc
mov
imul
push
xor
in
test
sub
imul
test
clc
and
in
cmp
jbe
pop
lods
inc
lods
movsb
cmp
je
inc
(bad)
popa
bound
lcall
std
test
jbe
into
mov
sbb
dec
push
add
xchg
inc
xor
adc
fnstcw
sub
mov
sub
xor
lcall
int
imul
ficomps
lds
out
cwtl
push
out
movsb
jmp
sbb
test
pop
jmp
jne
xor
dec
xor
sbb
and
(bad)
sub
lods
cmpsb
sbb
fstpl
cltd
testb
mov
mov
xchg
jge
in
sub
ss
push
or
out
(bad)
dec
sbb
pop
rcr
dec
test
mull
cmpb
pushf
adc
int
fcompl
in
or
sbb
lahf
scas
andl
imul
xor
sub
adc
lret
add
cld
sub
mov
push
call
pop
sbb
dec
jge
and
fucomip
imul
rorl
pushf
add
ja
in
stc
dec
push
mov
lret
dec
cmp
mov
shlb
xor
loope
addr16
jl
add
adc
cmp
pop
rcrb
or
(bad)
add
sub
xchg
ja
adc
fisubl
mov
sbb
push
fistps
and
jb
and
rcr
testl
sbb
rcr
in
pop
mov
int
jp
sti
std
jle
mov
(bad)
adc
cmp
pusha
sbb
nop

adc
xchg
call
(bad)
push
mov
lods
movsb
mov
mov
aas
loop
sbb
jbe
nop

stos
(bad)
jmp
or
and
sbb
push
pop
add
mov
rorb
adc
lds
jmp
adcb
xlat
cmc
in
xchg
mov
out
ljmp
pop
add
sbb
sbb
call
push
adc
pusha
adc
test
push
aas
mov
add
mov
and
fiadds
aam
mov
test
repz
mov
push
test
push
ja
clc
adc
fisttpl
into
cs
adc
sbb
push
push
loopne
dec
sub
loopne
ffreep
lahf
or
(bad)

xchg
cmp
inc
adc
add
xchg
xchg
jno,pn
jle
cmp
inc
jle
mov
mov
push
cmp
aad
xor
jne
aas
dec
inc
test
adc
and
ljmp
ret
mov
or
sub
call
imul
sbb
call
bound
xchg
lret
cmp
loope
ds
lret
adc
lretw
xor
fistpl
xchg
jl
hlt
mov
inc
fisubrs
push
leave
daa
dec
loop
mov
xor
mov
inc
add
push
mov
(bad)

sbb
adc
leave
iret
fsubrs
mov
cmpsb
sbb
pop
pop
push
push
jge
dec
xor
popa
(bad)
(bad)
jbe
ret
mov
aad
xchg
rolb
adc
xor
mov
stos
insl
ljmp
sbb
icebp
negb
xor
push
lods
adc
mov
jo
and
repz
or
shll
enter
aad
negl
sub
push
fcomps
andl
out
mov
add
aas
mov
fldt
arpl
pushf
cmpsl
mov
es
cmpsl
jge
dec
scas
push
sub
nop

in
in
pop
in
mov
call
mov
testl
in
imul
pusha
pop
cmp
stos
adc
fdivs
les
xchg
es
add
(bad)
mulb
xchg
push
lock
xor
push
mov
mov
pop
xchg
out
(bad)
mov
lahf
cmc
(bad)
adc
inc
xor
stos
cmpb
je
sbb
jg
subb
rorl
mov
fdivl
xchg
daa
inc
lahf
ja
mov
pop
popf
push
lods
and
test
push
push
sub
xchg
test
mov
xlat
sub
lret
ds
xlat
in
dec
jg
and
insb
imul
push
push
loop
push
ja
clc
rolb
mov
jne
or
cmp
pop
sub
or
cltd
js
pop
aas
push
inc
or
sbb
enter
in
mov
frstor
adc
mov
dec
(bad)
int3
nop

adc
sbb
jge
fs
lret
int
lock
outsl
fcmove
jge
lock
dec
pop
mov
cmp
mov
cmc
fcoms
push
(bad)
rclb
push
mov
add
shlb
pop
ret
enter
int
pop
jnp
mov
fcmovbe
push
iret
mov
push
cmp
ja
xchg
repz
test
test
sub
xchg
xor
sub
fiaddl
mov
gs
out
mov
and
subl
fwait

and
stc
xchg
dec
mov
sbb
mov
int
pop
jg
mov
(bad)
in
add
pop
pop
lret
mov
sbb
and
jp
(bad)
stos
aas
or
decb
test
pop
stos
js
movsl
cs
scas
(bad)

fucomip
jb
imul
sbb
xor
add
add
pop
add
lods
mov
cmc
out
or
adc
cmp
insl
(bad)
xorl
in
jle
sbb
movsl
pop
test
insb
mov
fsubrs
mov
xchg
or
add
add
sahf
and
fists
xchg
lahf
fwait

xor
test
insl
cltd
mov
fidivl
(bad)
lds
jmp
imull
loope
sub
or
xchg
adc
inc
jp
and
xchg
sbb
inc
pop
mov
fs
pushw
test
sbb
adc
jg
mov
jbe
mov
jno
sahf
lods
and
imul
inc
int3
mov
adc
aaa
mov
mov
shrl
cli
inc
repnz
out
fidivl
add
push
int3
sbb
aas
and
sub
mov
xchg
testb
sbb
mov
movsb
stos
and
sarl
push
rcr
push
ret
dec
fistpl
repz
popf
inc
imull
clc
(bad)
pop
std
lock
inc
fnstcw
lret
sbb
mov
and
pop
adc
aaa
mov
push
or
sbb
cs
cmp
pusha
xor
pop
dec
movsb
outsb
test
gs
inc
sub
clc
cmpsb
ja
pop
mov
xchg
ja
stc
push
ret
pop
mov
sub
xchg
and
into
sbb
mov
mov
out
std
out
sbb
aad
int3
cmp
xor
sbb
or
(bad)
dec
dec
mov
and
stos
fs
aad
nop

cmc
jg
out
mov
add
fcomps
push
sbbl
pop
popa
movsl
insb
and
and
push
mov
cs
fcmovnbe
fwait

outsl
scas
jne
bound
lods
js
imul
notl
lods
fistpll
stos
imul
sbb
xchg
push
jge
sahf
je
aas
sbb
lods
pop
adcl
push
ja
jmp
jo
ret
jle
lock
and
dec
jge
popa
(bad)
cmp
pop
loop
push
push
cmpb
mov
push
pushl
lahf
ret
adc
jle
sbb
fimuls
jecxz
test
mov
mull
jg
aas
mov
mov
push
das
push
pop
sbb
jns
push
adc
lock
shl
xor
mov
push
push
adc
adc
pop
inc
mov
jne
adc
jge
mov
sub
dec
lahf
in
jo
sbb
jne
lret
test
xor
fsts
dec
pop
inc
mov
jp
jo
adc
add
out
mov
adc
ss
sub
lea
mov
adc
dec
and
push
push
mull
jns
and
daa
mov
out
fisubrl
imul
mov
mov
cmp
sub
loope
mul
loope
push
sbb
setae
lret
loopne
imul
cmpsb
lret
int3
lods
adcl
adc
push
mov
out
xchg
outsl
addb
push
mull
jmp
cltd
dec
cwtl
loop
lahf
dec
gs
lods
xchg
pop
shl
dec
test
or
mull
(bad)

sub
pushf
into
(bad)
dec
ficoml
sbb
or
pop
clc
insl
dec
ret
arpl
xchg
cltd
fldl
mov
std
mov
push
xor
test
popa
mov
pop
jg
jnp
jo
out
fimull
push
psadbw
cmp
inc
test
mov
push
lahf
subb
pushf
adc
jge
cs
dec
les
negl
stos
fisubrs
ret
sbb
sub
and
cltd
jp
test
into
lods
loop
popf
(bad)

and
mov
sub
adc
imul
push
xchg
xchg
mov
inc
sbb
rorl
imul
and
lods
in
and
dec
push
mov
sbb
out
or
push
lds
int
sub
in
inc
push
fldcw
push
in
jge
(bad)
dec
mov
cwtl
inc
push
jecxz
fidivrl
jo
ret
push
mov
leave
adc
mov
(bad)

or
out
cmpsl
stos
or
ds
dec
cltd
nop

dec
popa
pop
roll
mov
and
lds
sahf
ret
insl
aas
add
test
xchg
inc
sub
lret
mov
dec
push
jnp
sub
adc
push
ss
adc
mov
test
out
(bad)
ds
enter
jecxz
testb
dec
or
bound
rorl
adc
insl
push
(bad)
imul
scas
push
sub
js
and
out
insb
and
testb
fcomps
push
mov
mov
jg
addr16
mov
cmovg
adc
ds
ja
jmp
in
(bad)
fisttpll
sub
mov
clc
iret
test
dec
jge
dec
mov
push
popa
dec
aam
push
rolb
inc
add
leave
sbb
xor
pop
daa
fisubrl
sbb
les
fdivl
cs
cmp
sub
mov
xchg
cli
call
nop

adc
add
pusha
xchg
pop
sub
ljmp
mov
sbb
jp
pop
(bad)
adc
xchg
push
(bad)
sbb
sbb
push
add
push
out
iret
pop
roll
test
mov
fisttpl
xlat
aas
add
clc
cmpsb
xchg
repz
sbb
insl
int
imul
pop
lock
lret
(bad)
xor
scas
lods
inc
jmp
cmpsb
cs
ret
iret
xchg
sbb
lods
outsb
jno
ss
mov
inc
fs
nop

mov
dec
nop

sub
lcall
jo
jbe
jg
outsl
filds
push
fldt
dec
sub
dec
mov
or
imul
dec
mov
xor
lahf
mov
sbb
add
mov
push
inc
pop
sbb
imul
pusha
lock
js
repnz
adcl
push
mov
stos
cmpb
popf
cmpsb
dec
sub
dec
ss
loopne
daa
fcmovnb
jmp
xcrypt-ctr
cmpsl
lahf
test
(bad)
loope
push
std
enter
insb
pop
fbstp
iret
mov
and
addr16
sub
push
in
outsb
clc
in
sub
dec
cmp
ds
mov
(bad)
int
subl
imul
es
push
notl
xchg
jnp
xchg
pop
jecxz
sbb
int
loop
mov
dec
inc
jecxz
mov
imul
das
shll
mov
cmpsl
fistl
pop
shlb
push
int
sti
mov
jg
loop
aad
rorl
enter
mov
fbstp
outsl
push
shrb
mov
hlt
(bad)
in
stos
push
cmp
lods
cli
ja
sti
sub
enter
stc
mov
mov
cmpsb
lods
in
(bad)
nop

fisubrl
push
dec
cltd
or
pop
sbb
xor
pushf
pop
cs
and
xor
mov
sti
lods
mov
sti
or
sbb
pop
mov
push
incl
push
and
xchg
cmp
mull
movsb
scas
cmp
mov
push
ret
xchg
cltd
xor
fistpl
addr16
jge
into
xor
sbb
(bad)
cmp
lret
bsf
sub
push
mov
cmp
clc
mov
xor
rcrb
addr16
mov
ja
inc
push
(bad)
cli
lods
bound
add
mov
fwait

xor
(bad)
or
into
pop
cmpsl
mov
fisttpll
xchg
cmp
sbb
lahf
xor
fmull
xor
pop
mov
cmpb
mov
jnp
mov
inc
cltd
or
out
xor
popa
push
mov
fwait

loop
pop
test
out
and
sbb
jg
inc
dec
cmp
test
xchg
pop
filds
cltd
imul
test
mov
(bad)
inc
aas
mov
dec
cmp
push
cmp
mov
int
pop
mov
push
rcr
push
(bad)
cmc
pushf
dec
shlb
and
addb
xor
aas
test
jg
iret
xlat
mov
test
jmp
mov
into
lods
in
mov
mov
dec
ficoml
sbb
inc
jle
mov
out
xor
jo
mov
(bad)
cmp
int3
bound
popa
mov
adc
fidivs
adc
jle
push
ss
test
sti
xor
mov
leave
pop
notl
xchg
repnz
les
inc
and
mov
imul
add
ja
(bad)
mov
stos
mov
cwtl
stc
mov
jo
or
cwtl
subl
imul
sbb
sbb
jg
push
fs
mov
jo
filds
iret
pop
daa
std
nop

mov
adc
pushf
push
shll
push
pop
loope
ljmp
enter
ret
sbb
pop
xchg
mov
push
dec
iret
test
insl
lret
jno
sub
pushf
cmp
adc
adc
mov
add
popa
dec
sbb
and
(bad)
dec
adc
add
mov
mov
push
out
dec
idivl
ljmp
dec
sub
leave
ret
sub
lret
add
vhsubps
sarb
xor
imul
repnz
sub
sbb
insl
push
sbb
sbb
inc
dec
dec
or
arpl
add
inc
mov
jecxz
jns
push
xor
xor
jbe
xchg
mov
dec
push
xlat
das
gs
push
adc
cmp
cs
scas
stc
ja
rol
test
cmpsb
mov
mov
mov
mov
stos
js
sysenter
jge
clc
jb
mov
stos
cmp
mov
(bad)
aaa
inc
scas
push
sti
adc
stos
fists
xor
push
cltd
daa
cld
dec
sbb
sti
mov
into
pushf
cmp
and
or
cld
test
pop
xor
cs
ljmp
leave
and
gs
jb
and
xchg
inc
mov
push
pop
jmp
xchg
or
clc
jle
cmp
or
movsb
xchg
pop
push
and
ja
aaa
mov
sahf
and
or
mov
add
lods
movsb
xchg
cmp
jmp
sbb
ds
xchg
iret
lahf
inc
sbb
dec
dec
(bad)
call
and
xchg
and
in
push
pushf
pop
(bad)
in
cwtl
jge
mov
lods
inc
pusha
ret
fucomi
ds
xor
add
imul
out
imul
xchg
inc
notb
outsl
int3
cmp
out
sub
mov
xor
lods
push
and
aam
fisubs
mov
mov
xchg
pop
xor
mov
pop
stc
xchg
jae
lods
test
(bad)
lods
test
mov
push
fldt
aaa
and
xchg
dec
es
outsb
call
xor
mov
xorl
xorl
test
pushf
fildll
test
stc
fs
jg
push
clc
mov
repz
add
pop
pop
inc
inc
test
leave
xchg
mov
push
ds
addl
mov
mov
(bad)
(bad)
adc
jge
mov
fdivp
mov
fdivl
clc
in
subb
sbb
xchg
arpl
xor
adc
rcrb
leave
in
jno
or
sub
add
das
es
xchg
lcall
stos
xchg
lcall
subl
fbld
(bad)
leave
mov
xchg
add
test
fwait

and
add
in
jecxz
push
mov
jbe
lret
test
push
subw
test
mov
rcrb
pop
loop
repnz
pop
cmp
lds
dec
mov
cmpsb
push
adc
jmp
fstl
pop
and
cmp
arpl
adc
mov
aad
loopne
xor
push
pushf
into
test
ss
xor
pop
cmpb
lret
sub
cmc
scas
pop
lea
mov
dec
dec
push
ljmp
inc
aas
push
lock
inc
int
sbb
cld
int
xor
cmc
decl
insl
movsb
pop
mov
sbb
leave
test
das
push
ret
lret
add
shll
outsw
pop
xchg
xor
sub
rcll
adc
mov
sbb
mov
lahf
nop

insl
cld
adc
mov
cltd
sbb
je
mov
or
mov
in
jno
inc
sbb
or
inc
into
sbb
dec
loope
and
shll
inc
outsl
adc
ret
pop
into
lds
fcomps
incl
dec
adc
mov
jl
ljmp
dec
call
push
mov
stc
repz
add
push
sbb
movlps
dec
out
(bad)
adc
pushf
mov
or
mov
sbb
cmpsl
into
jne
imul
int3
jb
jno
rolb
mov
dec
or
(bad)
(bad)
ds
push
scas
(bad)

ds
pusha
loopne
aaa
pop
cmc
jecxz
les
pushf
icebp
ret
fxch
cmp
pop
fdivrs
pop
add
cmova
call
mov
cld
(bad)
mov
mov
mov
and
fs
test
test
sbb
je
pop
pop
adc
mul
into
cltd
(bad)
repnz
adc
lods
dec
xchg
out
push
push
mov
bound
orb
out
jbe
test
stc
scas
cltd
xchg
das
xor
lods
and
dec
neg
inc
loope
sub
sbb
push
dec
pop
outsb
xchg
push
ljmp
stos
popf
push
jle
aas
xchg
test
push
push
in
imul
sbb
adc
and
inc
jne
jle
popf
lods
mov
data16
outsb
mov
test
test
test
sbb
lods
lds
push
push
aas
mov
mov
test
lcall
mov
push
lock
fcmovb
xor
shlb
mov
frstor
mov
fs
loopne
push
ds
jno
adc
lea
(bad)
lds
sub
stc
inc
add
into
adc
daa
div
icebp
repz
outsb
sarb
aam
(bad)
push
mov
mov
andb
sbb
insl
out
xor
sbbl
repnz
inc
xchg
and
push
sahf
arpl
fstps
sub
int
push
imul
ret
xchg
mov
mov
(bad)
sbb
arpl
sbb
mov
xchg
loop
popa
fwait

cwtl
arpl
testl
ror
sahf
out
outsb
adc
int
(bad)
fdivp
push
adc
lea
xchg
mov
pop
addr16
imul
popf
xrelease
fdivrs
and
inc
push
ja
popa
push
cmp
sbb
xor
jae
insl
mov
push
out
add
add
pushf
adc
mov
test
sbb
in
xchg
adc
inc
in
mov
andl
mov
loop
push
jo
mov
shrl
jbe
mov
lock
xchg
fdivrs
and
shll
testl
fwait

(bad)
frstor
sub
cwtl
ret
daa
push
cld
test
imul
hlt
fidivrl
sub
int
nop

cmpsl
cwtl
call
dec
fnclex
mov
cmp
pop
cwtl
in
push
fs
fimull
imulb
mov
mov
and
cld
cs
mov
xchg
mov
mov
mov
pop
out
adc
dec
arpl
jp
in
mov
dec
mov
jnp
jmp
frstor
mov
dec
adc
idivl
add
stos
mov
mov
add
jb
and
dec
inc
push
test
pop
jl
push
int
std
or
inc
sub
xor
cs
mov
repz
add
ret
xlat
cwtl
pavgb
and
das
jne
xchg
daa
xlat
icebp
jg
cmp
push
mov
test
lods
sbb
or
ja
lahf
fsts
out
lahf
je
dec
fwait

addr16
aam
cmp
inc
adc
call
js
jge
(bad)
shl
inc
push
lock
iret
imulb
imul
out
jbe
int
cmpsb
movsb
xchg
add
jg
(bad)
jecxz
push
out
add
loopne
loop
ljmp
lds
gs
movsl
cmpb
scas
push
(bad)
out
decb
cmp
sub
jmp
lods
insb
mov
dec
inc
adc
das
mov
xor
pop
xchg
cmpsb
jle
scas
inc
push
repnz
pop
int
push
leave
daa
addb
mov
dec
shlb
push
sbb
mov
push
jbe
dec
shl
inc
ss
xor
jecxz
aad
pop
bnd
xor
cmpsl
add
decb
in
push
inc
ret
insl
je
mov
test
dec
mov
ret
scas
mov
lea
push
sbb
shlb
imul
sbb
stc
or
and
scas
in
(bad)
sub
out
cmp
push
lahf
rclb
mov
clc
xchg
dec
scas
mov
loop
ret
push
sbb
imul
inc
push
iret
cmpb
mov
(bad)
es
inc
jg
jnp
cmp
daa
xchg
imulb
xchg
mov
or
mov
repz
cmp
loop
dec
or
negb
testl
shll
mov
scas
mov
nop
fcoms
inc
shrb
pop
scas
ljmp
ljmp
dec
jmp
mov
in
pop
cwtl
out
test
(bad)

sub
inc
jnp
lahf
js
je
(bad)
jo
adc
(bad)
in
js
xchg
sbb
push
outsl
lret
or
sbb
popa
fwait

sti
fstpt
jbe
mov
or
pop
bound
sahf
xchg
rolb
out
out
mov
inc
aam
add
rcrl
mov
xlat
push
clc
mov
sub
bound
(bad)
imul
and
outsl
imul
clc
mov
scas
mov
cmpsl
mov
int3
xlat
mov
xor
adc
into
ja
ret
sti
mov
adc
jge
out
imul
jmp
fxch
scas
push
movsl
call
fidivl
push
rcrb
sti
je
mov
mov
push
fs
add
scas
(bad)
pop
cmp
push
aad
dec
lret
sub
int3
xchg
mov
adc
dec
jge
arpl
scas
in
add
mov
loopne
orb
pop
pop
jb
adc
mov
mov
loop
shl
and
into
add
sub
inc
scas
pop
in
scas
xchg
xor
and
add
cmpsb
js
mov
jge
ret
call
repnz
mov
xor
lahf
and
adc
imul
cli
mov
out
out
(bad)
jecxz
les
mov
sbb
lea
sub
xor
mov
aam
push
pop
lods
push
scas
push
dec
test
es
in
or
psrlq
enter
mov
sbb
fisubrs
fwait

lret
sbb
jle
mov
cmp
lock
xchg
mov
roll
lret
or
mov
sbb
lahf
js
(bad)
(bad)
jle
pop
int
test
mov
add
sub
dec
inc
stos
daa
sbb
hlt
add
subb
dec
dec
mov
mov
in
(bad)
and
xor
jae
xchg
push
inc
xchg
or
mov
pushf
and
imul
push
movsl
popa
out
negl
clc
outsl
fbld
rep
or
fst
loope
int3
int3
repnz
enter
inc
cmp
in
sarl
adc
cmpb
stos
adc
push
bound
xchg
jbe
stos
out
push
adc
mov
loop
mov
int
in
hlt
sbb
push
andl
out
mov
test
inc
fs
je
mov
bound
addl
mov
(bad)
adc
xorl
mov
lret
bound
push
mov
ljmp
cwtl
xchg
xchg
adc
mov
aas
jae
loopne
test
adc
std
(bad)
fld
xchg
inc
test
ljmp
mov
pushf
adc
xchg
pop
js
es
mov
or
push
enter
(bad)
icebp
xchg
xor
out
movsl
addr16
call
rcrl
idivb
in
stos
jle
sub
mov
addr16
jmp
fcompl
mov
xlat
adc
xrelease
gs
lcall
fs
movsb
in
int
sbb
lea
(bad)

adc
cmp
mov
(bad)
stos
(bad)
ja
(bad)

mul
gs
(bad)
or
pushf
mov
push
gs
mov
lcall
fnsave
and
outsl
push
cmp
push
ds
pop
std
ret
and
mov
insb
popf
mov
mov
push
out
xor
sub
imul
inc
fs
insl
sti
sub
in
loopne
fwait

add
daa
gs
mov
aas
ljmp
and
hlt
sub
jne
loopne
popa
je
outsb
out
push
or
shr
cmp
ss
mov
sbb
enter
push
lahf
inc
(bad)
push
nop

in
add
movsb
and
dec
cmp
scas
mov
inc
lret
(bad)
enter
not
int3
jnp
inc
xlat
cli
cmpsl
mov
dec
stos
fcoml
jg
xchg
outsb
adc
das
or
imul
int
pop
out
push
mov
lret
mov
loope
jecxz
inc
iret
insl
cmpsl
or
incb
sarb
scas
cwtl
adc
inc
loopne
out
push
cmp
pop
jno
(bad)
aaa
or
loope
mov
lods
shrb
data16
scas
mov
lods
inc
cmpsl
fwait

std
(bad)
cli
insb
pop
nop

mov
insl
fs
adc
lock
fs
pop
xor
pop
adc
inc
or
faddl
mov
out
lcall
xchg
outsl
dec
in
insb
rorb
lods
or
dec
gs
clc
leave
push
and
fcomi
ja
xchg
outsl
dec
in
mov
mov
ret
push
sub
cmp
pop
dec
jns
out
paddusw
js
fwait

repnz
stos
xchg
cmp
mov
push
pop
mov
test
xchg
sarb
std
es
out
cltd
pop
fisttpl
xchg
lods
test
enter
addr16
xchg
out
ja
mov
mov
mov
ljmp
dec
sbb
fsubr
add
pop
movsb
shlb
cmpsb
out
cmp
lods
push
xor
inc
call
lret
xlat
and
dec
sbb
mov
dec
adc
sub
jno
das
sbb
enter
test
jg
fcoms
cmpsl
pop
mov
shrb
cmc
and
in
jg
out
xchg
jo
xchg
stc
fidivl
iret
outsb
jmp
dec
dec
mov
nop

cmp
dec
leave
push
call
mov
decb
lcall
dec
out
mov
mov
xor
fisubrs
sbb
mov
fisubs
loope
daa
adc
sbb
aaa
js
push
sbb
mov
ret
sbb
pusha
cmp
inc
clc
cmp
andl
sub
pop
fs
pop
je,pn
fildl
and
pop
imul
repnz
pop
push
mov
aam
push
cs
iret
shrl
out
iret
test
andb
push
add
aaa
fimuls
pop
mov
sar
jecxz
xor
mov
aad
js
cwtl
jo
dec
rcrb
cs
inc
in
mov
(bad)
sbb
adc
dec
inc
jae
adc
nop

sub
sbb
aaa
aad
sbb
push
sti
inc
pop
jle
stos
xchg
mov
pop
cmp
mov
mov
mov
outsl
cmpsb
and
outsb
fwait

nop

mov
sti
inc
pop
mov
loope
mov
ja
lret
sbb
shr
daa
inc
out
push
sbb
adc
mov
add
sbb
outsl
fisttps
and
mov
sub
lds
ja
push
add
xchg
and
shlb
fwait

insb
mov
and
sub
dec
xor
(bad)
(bad)
mov
outsl
shrb
push
rcl
xchg
test
cld
inc
fs
adc
push
out
cmpsb
jle
mov
fildl
adc
xchg
cltd
sbb
sbb
push
arpl
push
add
cmp
fistpl
je
jnp
mov
sbb
in
andb
(bad)
push
add
adc
clc
cmpsl
mov
jl
adc
sbb
pop
test
sahf
jecxz
sub
mov
xor
mov
xchg
dec
sbb
mov
(bad)
jp
pushf
adc
sub
mov
and
(bad)
lods
jge
popf
push
mov
xchg
(bad)
jmp
jecxz
into
pop
push
clc
arpl
or
push
mov
and
imull
or
mov
mov
xchg
arpl
mov
fcompl
gs
hlt
mov
faddl
(bad)
fsubs
jmp
add
jno
jae
ret
gs
mov
adc
mov
mov
add
dec
cmp
(bad)
push
mov
(bad)
mov
push
push
adc
jg
lock
int
jno
mov
inc
sbb
inc
cmp
dec
sub
push
cmpsb
movsb
jecxz
arpl
mov
xor
and
gs
sti
lods
out
mov
cmpsb
push
mov
or
pop
cmc
in
cltd
fsubrp
cmpxchg
lods
test
cld
shl
fsubrl
clc
cmc
cmpsb
ja
sbb
fiadds
xor
cmp
popf
mov
lods
fdivrl
jg
pop
daa
add
sbb
adc
aaa
sub
fcmovnbe
pop
les
setae
test
test
adc
stos
xlat
mov
mov
fmul
inc
fbld
sbb
fsubrp
mov
push
xor
xchg
add
mov
or
sub
int
clc
test
sbb
aam
add
ja
(bad)
loopne
rcl
sbb
ja
sti
mov
clc
imulb
cmp
insl
mov
fistpl
dec
jge
and
sbb
pushf
mov
das
imul
leave
outsl
ja
clc
and
ja
xorl
add
nop

sbb
push
(bad)
push
add
lock
(bad)
mov
(bad)
cmpsl
mov
ss
rclb
xchg
inc
loope
lcall
xchg
les
pop
fistl
shll
outsl
ja
sbb
stos
jmp
mov
sbb
test
(bad)
xor
cli
mov
fisubrl
xchg
mov
loopne
fcomip
pop
dec
sbb
(bad)
cs
pop
lcall
arpl
lret
pop
mov
mov
out
scas
cmpsl
push
rcl
ffreep
cmp
sbb
divl
push
mov
fiaddl
inc
push
add
xchg
aas
sbb
push
popf
cmp
push
sub
pop
out
xchg
mov
out
sbb
in
dec
cli
ja
adc
mull
sbb
iret
pop
pushf
int
ja
fisubs
in
cld
int
sbb
or
movsb
mov
mov
ja
mov
and
xchg
sbb
scas
(bad)
loop
jae
xor
(bad)
cmc
movsb
stos
repnz
xchg
pop
gs
jle
jecxz
cmpsb
enter
adc
out
add
inc
and
insl
mov
pop
subb
jmp
and
dec
sub
imul
pop
jmp
mov
pop
pop
addb
xor
test
imulb
mov
adc
jmp
xchg
shl
dec
shll
dec
mov
cmp
add
push
dec
(bad)
push
and
push
dec
dec
shll
(bad)
sbb
rcl
(bad)
pushf
shlb
sbb
mov
in
mov
mov
(bad)

adc
dec
and
pshufw
push
call
and
(bad)
out
notl
out
mov
testb
and
add
dec
mov
clc
(bad)
lds
pushf
jns
icebp
inc
shr
fcmovu
xlat
(bad)
cmpb
or
sbb
inc
mov
loopne
sub
lahf
fisubrl
jge
lahf
ja
popa
mov
push
mov
mull
jnp
push
inc
mov
inc
loopne
fistl
inc
fucomip
adc
sbb
xchg
es
push
inc
call
ss
mov
xchg
out
in
xorb
xchg
add
loopne
cmpsb
stos
out
fcmovu
lahf
fistpl
inc
aas
mov
out
push
fs
inc
pop
sub
mov
test
add
fisubrl
cmp
out
and
push
push
ja
lret
out
ficoml
cs
pusha
add
in
ret
pushf
sbb
or
push
or
mov
mov
out
fildll
into
nop

rcrb
sbb
clc
(bad)
xchg
sbb
lret
xchg
mov
xchg
mov
sub
sbb
out
test
push
sub
cmpsb
ja
lret
out
fidivrl
fistpl
loop
in
pop
xchg
jb
and
adcb
ret
pushf
adc
push
add
mov
pop
aaa
outsl
fistpll
mov
imull
clc
(bad)
lea
mov
push
test
notl
pop
and
ret
pushf
mov
ja
out
hlt
fisubrl
xchg
pusha
lahf
fcmovnb
bound
rcll
js
lods
jbe
in
gs
adc
out
inc
sub
clc
imul
test
sbb
fs
push
ja
sub
(bad)
fistpl
in
cwtl
in
pop
fidivrl
add
sbb
mov
lods
imul
xchg
ds
test
adc
enter
gs
shl
sub
mov
loopne
mov
out
sahf
rcrb
jae
add
cmp
mov
mov
ds
cmc
jne
mov
push
or
sbb
int
stos
arpl
imul
test
popa
dec
sub
into
xchg
xor
cmp
and
aad
(bad)

in
mov
lret
mov
aam
fdivl
xchg
lret
sbb
(bad)
mov
cltd
mov
inc
arpl
stc
aam
cld
shll
cmpsl
adcl
sub
stc
sub
and
xchg
das
mov
lahf
mov
xlat
sub
into
rcrl
insb
dec
mov
pop
addr16
(bad)
xchg
(bad)
mov
pop
in
(bad)

mov
fisubrs
push
lahf
stc
mov
add
jae
ds
outsl
mov
adc
adc
incb
jg
hlt
lods
cli
cmc
(bad)
push
imul
mov
cmpsl
xor
fsubp
mov
adc
push
mov
lgs
fwait

lret
and
std
lods
lahf
ja
xchg
outsl
fucomip
pop
rcrb
lods
and
(bad)
push
ja
xchg
cmc
sub
stos
out
out
sbb
xchg
outsl
imul
sbb
fs
das
fldenv
mov
mov
dec
loopne
filds
xor
push
mov
mov
mov
mov
mov
sbb
test
test
xor
addb
lahf
ja
out
outsl
xchg
or
adc
bound
sub
fnstsw
out
cmp
sub
mov
loope
jns
int3
mov
rcl
fs
(bad)
mov
arpl
stc
fisubl
mov
sbb
push
fistps
and
std
fs
mov
or
je
xor
push
out
sbb
outsb
pop
data16
sbb
add
push
clc
xchg
clc
insl
inc
xor
xor
push
call
mov
(bad)
testb
lea
cs
push
mov
leave
add
mov
outsl
sahf
pmaxsw
push
clc
(bad)
jb
test
inc
fs
mov
push
xor
mov
lret
ss
scas
nop

rcrb
lods
fucomi
shlb
push
sub
(bad)
int
pop
mov
adc
pop
sub
xchg
(bad)
aam
out
movsb
fdivl
cmpsl
push
into
jae
xchg
bound
sbb
lds
fisubrl
lock
dec
sbb
mov
outsl
lcall
xor
leave
popa
mov
mov
mov
mov
sub
outsl
lcall
jo
xchg
sbb
test
and
push
mov
or
xorl
popa
(bad)
pop
dec
mov
ret
or
data16
adc
jne
adc
movsl
call
xor
pop
or
cmp
std
iret
lds
cmpsl
mov
testb
test
pop
dec
adc
lea
add
xlat
or
xor
imul
fistpl
pop
outsl
movb
lods
and
ja
(bad)
daa
lahf
cld
nop

adc
out
fisubrl
inc
lret
mov
xor
xor
stos
lret
scas
rcl
and
fstpt
xor
pop
sbb
sbb
lahf
fs
adc
pop
mov
(bad)
int
xchg
aas
adc
shlb
mov
mov
movl
or
ds
std
jl
xchg
xchg
dec
and
push
sbb
mov
jnp
notb
nop

push
jecxz
jae
fistpl
gs
les
push
rol
iret
adc
xor
mov
int
and
enter
and
mov
lods
les
rorb
mov
push
out
mov
ljmp
add
cmp
lods
mov
lds
fistpl
xchg
pop
jge
pop
decb
jp
data16
std
jns
xchg
andb
mov
xor
cmpl
mov
pop
add
testb
sahf
mov
mov
sub
call
fidivrl
mov
mov
arpl
xor
out
and
cltd
cmpsb
mov
aad
xor
scas
or
outsb
outsb
into
popa
loopne
mov
arpl
rclb
mov
mov
and
adc
mov
mov
outsl
outsl
mov
mov
mov
loope
jecxz
sub
sbb
lahf
add
push
lret
mov
xchg
jbe
ss
(bad)
shrl
sub
pop
sub
cmp
pop
ja
sbb
jno
jns
cmp
fidivrs
dec
jle
fiaddl
pop
iret
inc
mov
xchg
pop
xchg
test
adc
popa
js
out
cmp
mov
sbb
test
lock
stos
sub
xor
cmp
fucomip
inc
inc
sbb
inc
test
lcall
shl
(bad)
cs
dec
cmc
jne
(bad)
push
push
es
lock
jae
xlat
add
imul
mov
jmp
cs
add
xchg
dec
cmc
jmp
jl
ds
mull
call
sbb
cmpsl
cmp
outsb
imul
cmc
lret
mov
lods
and
(bad)
jns
xchg
adc
in
cs
xor
lds
loopne
fnsave
mov
jecxz
inc
inc
dec
mov
mov
and
xor
loop
outsl
sub
jno
cli
pop
cmp
in
sub
popa
mov
adc
adc
fisttps
loop
xchg
movsb
or
or
cwtl
bound
ja
xchg
loopne
jnp
sub
int
gs
push
ja
lahf
push
into
xchg
fcmovbe
mov
dec
and
rcrb
pop
rclb
inc
mov
fs
jns
sub
xlat
xcrypt-cfb
cmpsl
in
mov
movsb
fisttps
int3
adc
out
xchg
xor
pushf
cwtl
cmpsb
inc
into
dec
add
loopne
xor
dec
pusha
addr16
lods
and
push
mov
aas
push
in
loope
xor
(bad)
fstpt
insl
decb
shlb
and
inc
dec
mov
nop

adc
fidivl
cltd
jns
das
inc
mov
fisubs
and
and
js
pusha
sub
in
cs
repz
add
pop
test
notl
add
adc
out
push
movsl
fistpl
outsl
loope
cmp
mov
lods
push
ja
into
mov
jae
daa
imul
fildll
cmp
mull
aam
fs
xor
out
jmp
mov
xchg
xor
xchg
loop
cld
adc
sub
es
data16
in
mov
jne
dec
decl
dec
cmp
xor
pop
sarb
(bad)
ja
mov
mov
je
ret
out
sbb
js
jle
(bad)
mov
rcl
sub
cmpsb
pop
xchg
fadds
adc
outsl
adc
add
pop
popa
insl
arpl
fwait

shrb
cmp
or
sbb
adc
aaa
inc
loop
and
sbb
mov
mov
fildl
mov
sbb
mov
into
in
xchg
inc
insl
sub
mov
daa
les
outsl
pushf
push
pop
pop
xchg
pop
push
or
or
cwtl
ffree
(bad)
fwait

(bad)
lahf
pop
int
cld
mov
cwtl
dec
xorl
mov
push
outsl
fbld
push
mov
dec
jns
cwtl
sub
inc
mov
in
nop

mov
(bad)
mulb
shl
outsl
mov
pop
sub
sub
(bad)
gs
mov
notl
arpl
pop
lret
loopne
jns
lret
dec
(bad)
lods
jmp
rcll
push
lods
int
add
popa
fs
fs
xchg
push
sub
dec
idiv
rcpps
(bad)
(bad)
pop
sbb
push
lea
xchg
lods
iret
lds
std
mov
in
jnp
jno
test
adc
mov
cmp
hlt
inc
jbe
cld
subb
mov
mov
std
sub
add
push
(bad)
mov
test
sbbl
mov
xor
decb
mov
in
pop
loopne
xor
mov
xchg
sbb
or
mov
or
jns
cmc
sub
imull
cli
and
mov
add
inc
lahf
ja
push
(bad)
hlt
fsubr
popf
jl
jle
iret
outsb
sbb
lea
aam
and
adc
mov
das
loopne
jbe
imul
and
cltd
mov
mov
orl
rcrb
(bad)
adc
lods
cmpsb
pop
xchg
fstpl
sbb
loope
fdivs
repz
mov
out
aad
int
xchg
xchg
sub
scas
cltd
xor
call
push
loope
ret
sbb
loope
cltd
mov
mov
xor
push
mov
push
loope
cvtpi2ps
fcompl
rcrb
dec
shll
pop
mov
shr
cmp
sbb
sti
jle
(bad)
mov
(bad)
out
mov
and
loope
xchg
xchg
pop
cmp
push
loope
sti
adc
cmp
jl
dec
xlat
xchg
mov
inc
addr16
loop
fmull
popa
jo
mov
fdivrs
loope
test
adcb
mov
jns
push
or
loope
and
dec
lock
out
icebp
mov
leave
xchg
xor
in
stos
addr16
into
sbb
into
pusha
jns
nop

call
sub
xchg
and
out
stos
lret
mov
test
fucomip
push
or
arpl
cmpsb
in
scas
hlt
pop
aaa
rcll
mov
into
into
cmpsl
xchg
push
dec
mov
jne
in
or
xchg
cmpsb
sar
dec
mov
push
pop
into
sbb
inc
leave
ja
call
pop
inc
popf
inc
jno
aas
aas
mov
aam
push
testb
les
jns
loop
fmull
xor
push
adc
mov
test
loop
mov
out
sarl
pop
jnp
fchs
test
cld
and
adc
push
xchg
push
adc
dec
pop
jecxz
and
out
fidivl
add
pop
loope
add
test
int
mov
jo
jo
jno
add
dec
nop

ficompl
add
loopne
mov
movsb
xchg
mov
fsubrl
sahf
xchg
mov
ss
popa
outsb
loopew
sbb
xchg
xchg
jmp
mov
inc
mov
out
jne
or
and
push
out
lods
andb
jbe
pop
(bad)
js
(bad)
push
push
xchg
out
ljmp
push
xchg
dec
dec
sub
push
sti
nop

insb
inc
jbe
or
call
push
dec
mov
pop
push
pop
jmp
inc
dec
or
(bad)
insb
repz
cld
(bad)

pop
mov
fbld
test
out
add
xchg
cmp
lods
fucomp
sub
sbb
jb
add
pop
movsl
(bad)
shrb
mov
mov
fimuls
std
enter
shll
push
loopne
jns
add
lahf
ja
sbb
std
in
pop
inc
test
lods
and
mov
cmpsb
cmpb
lahf
adc
clc
rcl
xchg
sti
adc
int
fcomps
adc
push
nop

xchg
pop
mov
jb
imul
out
mov
inc
or
mov
enter
inc
pop
pushf
or
push
in
lods
dec
fmul
sub
add
cmp
jge
xor
shl
lods
push
or
mov
mov
cmpsl
pop
rcrb
lret
imull
fcomps
inc
xor
cmc
mov
inc
(bad)
sub
sub
adc
sbb
fstpt
scas
lret
push
enter
(bad)
iret
movsl
lea
cltd
add
inc
mov
ds
inc
inc
cmpsb
dec
xchg
ret
jl
pop
xlat
mov
arpl
push
and
mov
and
andl
mov
mov
out
pop
aaa
sub
xchg
subb
stc
push
not
jmp
ret
and
sbb
dec
mov
xchg
xor
xchg
pop
test
xor
mov
sub
scas
sti
shrb
xchg
(bad)
enter
aam
mov
and
lahf
jmp
push
xchg
data16
ljmp
lcall
aam
jmp
aaa
add
mov
arpl
lea
rorb
xor
push
xchg
rorl
(bad)
flds
pop
push
add
push
loopne
test
jmp
jb
lock
xchg
loopne
daa
es
adcb
fmuls
fsubrl
adc
add
movb
push
outsl
inc
insl
data16
std
pop
fisubrl
jecxz
out
enter
jle
sub
rcrl
fildl
adcb
(bad)
pop
mov
loop
jp
test
jns
sub
mov
mov
out
push
xor
in
and
push
jecxz
jg
into
xchg
mov
scas
mov
dec
or
sub
out
(bad)

loop
out
sub
lea
(bad)
arpl
ja
inc
sub
and
sbb
jo
xor
enter
stos
ja
outsb
add
inc
cs
out
xchg
pusha
bound
stc
adc
push
push
mov
xchg
mov
mov
push
cwtl
xor
xchg
cmp
test
cmpsb
ja
imul
push
xchg
gs
shrl
aas
add
nop

std
(bad)
shlb
enter
mov
xorl
inc
push
rorb
sbb
insb
stc
out
int
xchg
mov
stc
push
or
fidivrs
pop
push
jmp
dec
ficoms
cmp
mov
daa
mov
mov
cmpsl
leave
lahf
pop
mov
jmp
inc
dec
filds
jnp
push
and
enter
leave
aad
js
xorl
gs
xchg
xor
inc
pop
fdivrs
inc
xor
les
xchg
popl
ja
inc
push
fbld
(bad)
in
cmpl
mull
push
jg
sub
nop

push
cmpsl
push
or
in
cli
xchg
test
enter
ficoms
(bad)
sbb
jge
push
pop
aaa
(bad)
fdiv
push
push
stos
in
jnp
push
pop
mull
xchg
add
ja
adc
xchg
push
inc
mov
fs
xor
and
insl
xchg
ljmp
inc
(bad)
es
cmc
push
pop
les
adc
pop
pop
rcrb
es
ret
lahf
fs
mov
addr16
loope
(bad)
mov
repz
pushl
xchg
adc
dec
xor
xor
mov
repnz
pop
test
jbe
enter
mov
inc
andb
out
dec
add
icebp
dec
jb
mov
adc
loope
add
test
test
pop
into
mov
js
cmp
sbb
mov
movsl
mov
repz
orb
add
out
gs
scas
cmc
mov
inc
sbbl
adc
adcl
push
inc
sub
subl
mov
xorl
xor
xchg
(bad)
pop
lods
adc
xchg
leave
pop
sahf
dec
pop
adc
cmp
outsb
test
psubd
arpl
vpunpcklqdq
and
or
jnp
inc
lock
fdiv
sub
jp
xor
lret
mov
popf
nop

loope
pop
adc
sbb
mov
in
testl
adc
data16
(bad)
outsl
sub
push
mov
in
test
xchg
mov
in
mov
jecxz
sub
xchg
push
xchg
mov
jb
pop
(bad)
mov
cmp
adc
pop
insl
(bad)
scas
fidivrl
push
das
lret
leave
repnz
cmpsb
jnp
xlat
jns
ljmp
clc
inc
in
test
movsb
pusha
test
xchg
shrb
xor
and
add
xchg
gs
pop
iret
sbb
sbb
inc
sbb
mov
in
mov
fmull
fcoml
and
rol
mov
mov
popa
add
xchg
inc
outsb
pop
inc
hlt
pusha
popf
cmp
lds
int
inc
sbb
cmp
push
mov
into
cs
addr16
cmpsl
jp
popa
aas
fcmovb
cmp
mov
testl
add
js
shll
adc
rcrb
dec
sbb
dec
dec
pop
or
cli
sbb
add
aam
out
pop
xchg
and
jle
ljmp
leave
fdivrl
jnp
int
xor
shlb
cmp
movsl
std
test
adc
fcompl
inc
lods
hlt
aas
push
int
sbb
push
ja
and
dec
incb
cmp
mov
mov
xorb
addb
shll
mov
in
adc
mov
and
fmuls
ret
or
out
loope
stos
jo
sbb
sar
and
add
mov
sub
enter
dec
das
mov
mov
cld
cli
(bad)
out
filds
mov
mov
cld
adcb
xchg
jecxz
and
sarb
and
in
mov
push
add
pushf
xor
gs
loop
stos
jo
mov
fldl
xchg
scas
cld
mov
fisubrl
pop
pushl
push
mov
jg
lcall
dec
add
xchg
mov
mov
adc
dec
mov
addr16
in
add
ja
xchg
repnz
mov
test
stos
loope
sbb
pop
lret
movsl
pop
cmp
icebp
add
xchg
ja
sub
loop
xchg
inc
outsl
shlb
mov
jne
cld
dec
xor
jl
iret
sti
push
sbb
mov
and
cmp
aas
(bad)
jle
scas
movsl
xor
mov
cmp
(bad)
mov
call
and
push
outsl
mov
dec
sbb
lds
sti
jnp
push
xchg
cmpsb
ja
add
fcomip
add
xchg
xor
fistl
pop
cmc
and
imul
xor
dec
mov
int
call
sti
and
adc
mov
ja
xlat
mov
lds
nop

xor
mov
xchg
enter
fstpt
mov
scas
mov
js
pop
cmp
jge
dec
cmp
aaa
es
mov
mov
jecxz
sub
inc
cmp
loop
lahf
jmp
push
pop
out
jbe
xchg
cmc
pop
mov
sub
in
fstpl
jecxz
push
push
mov
(bad)
shr
or
rcrb
sub
adc
xor
ret
sbb
rcrb
add
jbe
jns
(bad)
pop
loopne
xchg
cli
cld
test
sub
cli
lcall
sarl
and
xchg
push
fidivrl
icebp
jo
call
xchg
lcall
jge
rcrl
inc
mov
jno
xchg
fcmovne
jno
aad
cld
enter
jecxz
xor
lods
mov
faddl
cmpsb
in
outsl
daa
xor
sbb
xchg
sti
pop
popa
test
pop
andl
test
mov
sbb
pop
ror
inc
fisubrs
inc
push
mov
subl
subb
push
cli
loope
mov
pop
adc
mov
pop
mov
add
ja
jbe
or
mov
gs
push
stos
bnd
aaa
into
jle
fsubl
push
mov
sbb
std
(bad)
dec
adc
fistpl
sbb
packsswb
pop
fldt
mov
and
outsl
mov
ja
add
mov
lods
adcb
push
xchg
cmp
iret
jg
cmpsb
mov
fcoml
aas
cwtl
dec
sub
shl
lahf
out
and
ja
inc
xor
test
mov
lock
jno
aad
adc
lods
cmpsl
arpl
out
cmpsl
rorl
scas
jae
or
inc
jbe
outsl
mov
jmp
les
and
mov
out
insb
xor
inc
lret
or
dec
lock
pop
int
push
loop
jbe
negl
fcoml
stc
out
mov
lahf
orb
(bad)
pop
leave
or
rorl
xchg
jnp
(bad)
cwtl
add
sbb
enter
mov
loope
add
xchg
jge
stos
or
repz
fidivrs
lahf
sub
mov
cs
out
mov
add
mov
adc
push
pop
mov
(bad)
sbb
and
pop
loop
add
mov
int3
and
cmpsb
sub
mov
mov
pop
test
stos
cmpb
mov
icebp
popa
pop
stc
mov
sub
out
repnz
pop
stos
sbb
sub
inc
jmp
(bad)
(bad)
xor
lret
lods
lods
jl
int
in
fidivs
test
xor
mov
mov
ret
xchg
mov
ror
or
xor
mov
outsl
(bad)
stc
stc
pop
add
add
pop
andb
out
das
outsl
scas
push
jbe
ds
xlat
add
clc
call
fcmovb
jo
ret
ds
pop
addb
call
adc
push
cld
adc
mov
add
popa
scas
mov
stos
sar
dec
cld
test
test
shl
out
cmc
test
xor
loopne
adc
cmp
mov
nop

dec
arpl
in
lcall
add
pushl
xchg
ss
icebp
(bad)
into
inc
mov
mov
jmp
add
iret
mov
(bad)
out
jne
mov
and
out
xchg
or
scas
sub
outsb
fistpll
dec
mov
inc
xchg
sbb
dec
sub
insb
pop
dec
shrb
cmpsl
imul
pushf
cmp
add
xor
or
dec
enter
lods
mov
pushf
adc
push
scas
lea
loopne
(bad)
inc
dec
dec
cltd
mov
adc
xor
ss
dec
sub
dec
sbb
rcr
bound
or
loopne
insl
(bad)

xchg
cmpsb
(bad)
lcall
cltd
push
lret
jns
add
out
stos
sbb
mov
mov
push
cmp
jge
pop
mov
pop
mov
fldt
cmpsl
test
or
vorps
jno
std
js
(bad)
gs
adc
mov
mov
out
incl
and
xor
(bad)
mov
test
ja
popa
nop

add
adc
pop
in
pop
ficompl
xchg
adc
out
jb
ficompl
and
push
fdivrs
mov
sub
shll
insb
lret
repz
imulb
adc
jb
xchg
push
enter
cwtl
adc
lods
and
int3
lods
aad
jae
into
xchg
jo
xchg
test
sub
nop

je
cmpsl
add
mov
stos
out
sbb
cmp
cmp
loopne
add
jge
mov
(bad)
push
cld
stos
pop
clc
ret
push
fidivs
fsubrl
add
xchg
cmp
or
xchg
lods
sbb
mov
repz
dec
add
je
and
loope
or
shlb
pop
sbb
jge
ja
jbe
lahf
jns
mov
(bad)
jae
lods
into
ror
lret
push
adc
loope
jecxz
mov
xor
(bad)
cld
adc
ljmp
stc
and
xchg
pop
and
mov
ljmp
sub
xchg
sub
arpl
cwtl
popf
pop
fsubs
sub
stc
das
push
jno
or
xlat
push
or
cwtl
sbb
sar
std
jbe
ficoml
pop
aas
jmp
adc
add
inc
dec
adc
pop
jecxz,pn
push
push
adc
daa
or
pop
ret
add
cltd
inc
ja
pop
mov
adc
cld
or
lahf
in
daa
pop
hlt
and
subb
out
imul
subl
jae
imul
sub
sub
rorb
jns
xchg
out
inc
lcall
push
and
jnp
dec
push
adc
jg
icebp
sbb
add
inc
xlat
out
ljmp
pusha
adc
je
sub
mov
push
pop
aam
test
fstl
mov
jns
rclb
test
enter
(bad)
adc
(bad)
loope
pushf
sub
mov
test
jecxz,pn
cmp
and
ja
nop

mov
mov
or
ljmp
xor
add
and
in
lahf
and
dec
addl
int
mov
lock
xor
mov
add
out
push
pop
pop
(bad)
xchg
mov
mov
jbe
cmp
mov
xorb
mov
add
cmp
movsb
lahf
sbbl
ja
dec
data16
fsubl
cmpsl
dec
push
push
mov
movsl
push
lds
adc
loope
xlat
push
jecxz
daa
pop
jb
jnp
push
adc
adc
sub
cmp
out
popa
(bad)
mov
and
xor
outsl
pop
or
notl
out
fbstp
scas
dec
call
arpl
rcrl
inc
push
mov
push
mov
mov
(bad)
sub
or
test
int
mov
xor
mov
adc
addb
dec
(bad)
lods
insb
sub
inc
inc
rorb
mov
popl
loope
jno
push
sub
pop
xchg
test
and
mov
and
mov
ret
enter
call
push
rorl
mov
in
add
xor
and
das
xchg
add
push
lods
jecxz
and
fidivrl
pop
addl
dec
pushf
or
std
cmp
and
shll
push
enter
push
(bad)
aam
lcall
mov
and
sub
jmp
addb
(bad)
sub
mov
cmpsb
xchg
test
out
jno
sbb
mov
in
loope
jb
out
adc
and
sub
icebp
fadds
mov
pusha
jecxz
cmp
aam
ret
push
xchg
mov
test
sub
pushf
test
fimuls
test
lods
or
aas
stos
test
out
(bad)
shrb
cmp
cmpsb
es
and
bound
scas
mov
rolb
(bad)
lds
add
mov
push
inc
(bad)
aam
jnp
fnstenv
and
mov
int3
enter
adc
dec
(bad)
sub
or
dec
lret
cltd
rclb
mov
out
arpl
mov
movsl
(bad)
and
add
inc
dec
adc
mov
push
dec
dec
jle
mov
outsl
stos
cmpb
pop
xchg
add
mov
jae
std
out
pop
cmp
jmp
pop
(bad)
test
or
or
pop
xchg
std
and
xor
xor
(bad)
jp
dec
push
or
pop
push
loop
sbb
fs
aam
imul
mov
pop
or
sar
push
inc
mov
(bad)
roll
das
push
and
fbld
repnz
inc
lret
xchg
sti
jecxz
dec
xor
pop
cltd
ljmp
cmpb
mov
sub
outsb
push
inc
jo
sub
pop
sahf
scas
aad
pop
decl
sbb
ja
add
cmc
or
movsl
aam
jb
adc
sub
or
pop
shlb
xchg
and
imul
inc
test
into
xor
test
in
(bad)
and
cmp
sbbb
xor
bound
lahf
ja
sti
mov
imul
adc
jns
add
adc
inc
dec
sbb
loope
xor
aam
inc
fiaddl
movsl
inc
ret
fbstp
sbb
lods
jb
sub
sbbb
and
js
mov
les
cmpsb
mov
in
xor
push
or
std
push
clc
(bad)
push
xor
push
stos
xchg
lods
add
mov
cwtl
xchg
xor
or
jg
rclb
scas
or
imulb
dec
fstps
(bad)
jle
aas
add
xor
cmp
pop
and
out
and
dec
lcall
and
dec
stos
stc
mov
xchg
pop
adc
or
mov
out
loopne
inc
std
mov
xchg
aam
push
lahf
pop
mov
in
xchg
aad
lods
cmp
xorb
sbb
inc
mov
jno
jmp
xchg
mov
add
xchg
or
int
call
dec
ss
mov
jg
rorl
xchg
adc
lock
adc
(bad)
pusha
lea
fwait

cmpsb
mov
ret
loope
insb
push
dec
inc
in
pop
jge
outsl
loope
ja
and
jl
sub
imul
ss
pop
mov
dec
push
sbb
xor
inc
imul
push
ret
pop
lock
mov
xchg
sbb
pop
neg
les
popa
xchg
jge
fs
or
cmpsl
loopne
jl
(bad)
out
cmc
pop
aam
lret
xchg
xchg
imul
shrb
push
fwait

(bad)
xlat
stos
jmp
adc
add
fdivrl
dec
adc
jl
mov
int3
mov
rorl
je
mov
pop
mov
fisttps
(bad)
xchg
in
or
incb
or
aad
cmp
outsl
adc
mov
orb
call
inc
jecxz
adc
cmp
mov
sahf
popa
dec
and
mov
mov
pop
pop
into
adc
or
jge
rol
mov
incb
fldcw
mov
pop
and
and
loopne
in
adc
rcll
test
into
shr
mov
pop
(bad)
fisttpl
xchg
arpl
or
pop
jecxz
cmpsb
xor
aas
xorb
jge
mov
pop
mov
mov
insb
inc
inc
cmpsb
jp
sub
jno
push
out
rol
int
repz
aad
or
lea
push
(bad)

pop
ret
xlat
mov
push
ret
pop
ror
or
insb
mov
lret
jnp
les
xor
dec
adc
imul
je
jmp
lret
xchg
iret
add
lods
dec
and
jns
(bad)
loop
sub
pop
cli
and
xchg
jl,pn
int3
outsb
rclb
mov
inc
mov
into
jmp
enter
and
das
pop
adc
push
inc
pushf
jp
xor
jns
or
lods
adc
jo
xor
dec
(bad)

clc
imul
add
sub
add
sub
and
adcb
jnp
xor
addr16
in
or
out
mov
fcompl
or
rcrb
and
data16
push
and
loopne
xchg
jle
xlat
mov
mov
(bad)
mov
cmp
and
push
or
pop
scas
ljmp
(bad)
in
roll
xchg
rclb
add
sub
cwtl
lcall
imul
mov
fists
faddl
dec
js
xor
sbb
lds
outsb
push
mov
mov
lea
xchg
test
mov
dec
popl
icebp
and
jge
push
pushf
push
lea
orl
xor
push
mov
dec
mull
mov
sub
push
sub
jno
ret
jne
jns
insb
cld
dec
pushf
repnz
fsubp
pushf
imul
mov
sbb
push
mov
push
cld
adc
and
pop
mov
pop
jnp
popa
xor
das
jns
adc
mov
fisttps
and
mull
xchg
push
nop

adc
inc
pop
ss
xor
inc
adc
into
pop
xor
pushl
adc
and
lret
nop

das
mov
shr
fdivrl
mov
cmpl
movsl
stos
cs
mov
fadd
xchg
or
outsl
dec
pop
pop
hlt
pusha
imul
sbb
mov
push
ja
inc
sub
dec
xor
out
in
xchg
(bad)
xchg
cwtl
js
stos
int
push
sbb
jns
out
mov
movsl
popa
cli
cmp
outsb
mov
inc
lods
pop
lret
pop
mull
cltd
mov
or
pop
cld
cwtl
sbb
add
and
inc
dec
(bad)
and
pop
cmp
out
ret
pop
bound
sti
pop
inc
xchg
inc
je
and
mov
mov
pop
dec
int
lock
pop
fstl
call
(bad)
cli
enter
pop
leave
lods
pop
fimull
mov
insl
jne
out
testl
pop
(bad)
xor
xchg
cmp
ljmp
pop
int3
and
adc
and
and
xchg
mov
push
addr16
or
cli
xchg
decl
push
dec
jae
(bad)
sbb
xchg
and
test
pop
dec
out
les
orb
iret
addb
adc
orb
ljmp
inc
in
pop
out
shll
nop

int
xor
dec
xlat
xor
enter
mov
jns
sbbb
mov
cwtl
inc
std
sbb
es
(bad)
push
xor
mov
push
dec
dec
push
loop
xor
jg
push
xchg
cmp
shrb
andb
mov
cwtl
mov
or
std
jno
and
rcrl
inc
popa
or
xor
rcrb
test
inc
andb
mov
int3
or
lods
sti
fs
in
cltd
data16
mov
sub
int
and
scas
fistps
mov
roll
test
lcall
jb
mov
pop
cmp
enter
sti
loop
(bad)
shr
cmp
jbe
stos
icebp
adc
sbbl
test
and
loop
shr
push
jno
fstl
imul
pop
stos
sbb
cltd
adc
inc
outsl
aad
lods
mov
aas
mov
out
out
push
sub
push
push
mov
jecxz
ss
jns
dec
jne
add
push
push
adc
sub
cmp
data16
in
push
cltd
cld
and
dec
xlat
jns
xchg
mov
or
insl
aad
pop
inc
push
jg
pushf
cmp
ficoml
(bad)
fistpl
(bad)
loop
push
sbb
mov
and
icebp
cli
movb
add
cmp
mov
fmul
mov
pop
mov
sub
sbb
sbb
loope
call
fisubrl
or
dec
outsl
fbstp
fwait

out
cmpsb
jge
stc
mov
sub
mov
xchg
jg
ja
cld
dec
in
mov
mov
sarl
pushf
gs
std
push
fwait

shlb
cmp
stos
repnz
lock
dec
mov
mov
xchg
fwait

sub
arpl
mov
inc
push
dec
cmp
mov
mov
sbb
and
clc
fistps
inc
pushf
xchg
(bad)
das
enter
(bad)
mov
call
lahf
shlb
es
(bad)
and
lahf
les
add
push
test
orb
pop
test
mov
or
clc
loope
mov
imul
mov
movsl
mov
cmpsl
imul
fucomip
inc
stos
push
leave
adc
scas
dec
add
pop
gs
fistl
lahf
pop
or
test
leave
mov
cwtl
cld
pusha
sar
sbb
pop
fldenv
mov
out
fnstcw
cs
aas
in
or
(bad)
mov
xchg
les
push
call
lds
ja
xorl
out
(bad)
pop
add
add
shr
jecxz
lods
rorb
pop
adc
sarb
or
and
sub
cmpsb
mov
inc
nop

mov
mov
jge
add
setae
add
in
and
clc
stos
ljmp
dec
int3
jne
in
fldt
jl
add
push
add
sbb
xchg
xchg
sbb
push
lahf
outsl
xchg
shrl
cmpsl
sarb
add
pop
dec
shll
loopne
jp
test
push
repz
push
call
pop
add
(bad)
xlat
aad
fdivrs
enter
imul
push
cmpsb
ja
adc
mov
sti
into
add
sti
repnz
fisubl
mov
dec
repnz
push
inc
xor
sar
adc
(bad)
sbb
add
xchg
lcall
stc
ret
ret
fimuls
stc
cmp
sbb
inc
jno
inc
pop
or
add
sub
ret
and
lret
cltd
or
rcll
mov
jns
(bad)
sub
sti
pop
sarl
mov
lcall
inc
lret
pop
cmc
jno
out
sub
cmp
sbb
xchg
shlb
lea
movsl
push
dec
outsb
mov
mov
xchg
sub
cwtl
jno
fists
data16
jns
sbb
mov
sub
mov
pop
dec
mov
jmp
arpl
xorl
(bad)
dec
xor
out
aas
clc
clc
repz
xchg
shl
sahf
and
aam
push
lret
dec
lods
mov
lock
lret
push
push
pushf
stos
pushw
test
sti
xor
in
imul
push
subl
mov
scas
jmp
push
mov
daa
test
mov
mov
fisubrl
mov
rcrb
adc
popa
cld
ljmp
popa
mov
cwtl
cmp
repnz
addr16
fwait

cmp
xor
in
sbb
ljmp
cmp
jl
loope
fsubrl
jge
je
push
les
aam
rclb
add
mov
dec
adc
mov
arpl
int
sub
ss
aam
or
xlat
out
ficompl
rcrl
mov
pushl
mov
adc
das
xor
repz
jp
iret
(bad)
lret
(bad)
push
and
xor
jnp
jecxz
or
test
push
jecxz
dec
add
or
repz
leave
arpl
clc
insl
cld
cmpsb
inc
sub
shrb
xor
mov
sub
dec
shl
and
scas
sbb
push
fistps
mov
ret
fcomps
mov
lds
jle
repz
sub
mov
enter
dec
test
or
adc
nop

jnp
mov
cli
sbb
jle
mov
inc
sbb
cmpsl
xchg
mov
call
fdivr
fdivs
fincstp
pusha
(bad)
add
addr16
in
out
dec
stos
sbb
mov
cwtl
add
xor
leave
ret
mov
jnp
xor
mov
cmp
pop
xchg
inc
mov
mov
mov
pop
cmp
sbb
ds
js
mov
mov
sbb
pop
rcrb
gs
fiaddl
notb
je
xchg
stos
xlat
ja
push
scas
jb
aaa
add
ss
xor
push
lret
loop
sbb
js
mov
dec
sub
jae
lcall
jle
lahf
pop
push
(bad)
pop
push
and
(bad)
insb
movsb
push
push
fistpll
scas
cmpsl
notb
into
lods
ret
dec
(bad)
pop
mov
xchg
test
adc
daa
test
addr16
and
dec
pop
or
ret
inc
repnz
mov
jo
jae
stc
pop
sub
push
rcr
ret
movsl
je
mov
shrl
and
cmpsl
loopne
push
repz
cmp
into
pop
mov
(bad)
cmp
mov
xchg
out
sbb
js
cmp
rorl
mov
jmp
insb
sub
ffreep
fcomp
xor
clc
ret
mov
or
setae
das
mov
imul
dec
and
cltd
push
push
mov
lods
push
xor
ja
ja
adc
pop
lods
sahf
mov
push
mov
xchg
adc
test
loop
ja
xchg
or
xor
mov
jns
(bad)
stc
or
lret
aad
inc
bound
dec
daa
cltd
cmpsb
dec
leave
mov
cld
or
push
out
mov
pop
aad
call
std
mov
es
enter
test
xchg
popf
xor
(bad)
mov
and
cmp
fwait

imul
fbld
push
call
es
loop
test
mov
clc
mov
add
in
loop
sub
addr16
push
and
xchg
test
lret
xor
aam
addr16
int3
jae
out
adc
cs
mov
jge
cmp
aad
inc
adc
dec
cmp
push
mov
pop
and
pop
out
ds
aad
dec
pop
inc
lahf
iret
int
aam
in
out
jne
sub
or
push
jae
pop
addr16
or
xchg
mov
mov
cli
nop

daa
or
jno
adc
push
pop
cmp
jecxz
inc
sbb
adcb
and
in
dec
pushf
lret
test
mov
xchg
aam
mov
cmp
lock
and
dec
jne
fsubr
xor
or
clc
push
daa
lret
xchg
lods
mull
pop
lock
mov
(bad)
or
push
adc
push
mov
xlat
push
push
mov
pop
gs
cld
paddq
pop
scas
push
test
push
arpl
add
(bad)
adc
lods
test
adc
xor
add
jle
cmp
adc
pop
xor
xlat
ss
push
pop
rolb
cmc
sti
test
test
rorl
xchg
(bad)
iret
outsb
loop
mov
nop

pop
popa
cmp
test
jns
jecxz
sarb
fldt
ja
jnp
add
cmpsb
movsl
test
sahf
into
lret
jp
int3
lods
cs
dec
ret
mov
and
std
push
dec
lds
jb
loope
mov
mov
fidivrs
scas
fprem
jle
adc
icebp
or
scas
call
out
cmp
jg
push
call
add
int
and
xchg
stos
sbb
mov
shll
rolb
repz
mov
cmpsl
sub
scas
outsb
(bad)
out
scas
cmpsl
push
push
stos
mov
sbb
movsb
ljmp
jns
(bad)

mov
faddp
dec
std
xor
addr16
outsb
lea
lods
cltd
push
addr16
mov
stos
(bad)
jp
sbb
leave
(bad)
cmpsl
jle
add
jns
fcomp
inc
dec
(bad)
stos
mov
pop
pop
fcomps
jmp
mov
mov
push
call
out
mov
movsl
lea
mov
(bad)
aas
movsl
sub
outsb
push
or
scas
ss
sbb
ljmp
adc
xchg
xchg
adc
test
mov
icebp
outsl
out
int3
fdivrl
mov
in
nop

inc
frstor
dec
shlb
aam
cmpsb
inc
cmpsb
(bad)
mov
es
xchg
fidivl
pushf
add
cli
test
push
push
pop
mov
jp
push
push
icebp
test
test
shrl
in
push
fcmovne
adc
jecxz
mov
sbb
into
cmp
mov
sbb
push
rorb
mov
cmpsl
test
dec
mov
outsl
cmpsb
(bad)
in
pop
stos
jg
sbb
hlt
insb
lods
dec
popa
pop
adc
repnz
add
push
jl
dec
jmp
pop
sub
ret
add
lds
xor
jecxz
mov
je
in
aam
lds
push
stos
repnz
xor
call
sbb
aas
(bad)
sbb
test
andl
in
cmp
je
sbb
cmpsb
popa
mov
es
imul
sbb
stos
out
dec
mov
xchg
inc
push
sbb
and
hlt
cmp
push
push
ja
fldt
pop
adc
xor
xchg
shll
jnp,pn
cmpsl
cld
sub
sub
inc
mov
jmp
fwait

and
mov
xor
cld
int3
dec
pop
cmpsb
cmpsb
mov
dec
mov
jo
sub
xchg
out
test
jg
lea
les
adc
cli
push
push
xchg
(bad)
sti
and
outsb
jno
dec
jo
adc
and
xchg
je
inc
mov
push
jnp
mov
add
xchg
pop
call
and
jle
mov
imul
xor
push
sub
jns
push
dec
mov
jbe
mov
pop
sarb
xchg
jb
(bad)

jp
loop
cmp
mov
andb
out
mov
xor
idivl
nop

rcll
push
pop
call
xchg
addr16
and
jecxz
push
shr
fisubrs
popf
or
mov
int
rclb
dec
fistpl
hlt
add
dec
and
xchg
jno
and
fwait

shlb
push
loopne
aam
sub
jecxz
loope
push
into
add
mov
and
push
sub
mov
out
lods
jp
sahf
dec
sbb
pop
inc
dec
adc
shll
clc
dec
sub
or
add
ficoms
mov
cmpsl
push
jb
mov
lods
scas
mov
pop
dec
jp
(bad)
arpl
mov
jnp
add
xlat
lret
scas
test
test
lods
add
pop
stos
jae
xchg
push
jno
xor
or
xchg
in
scas
les
and
call
dec
ret
mov
bound
or
and
adc
mov
mov
push
(bad)
loopne
aas
inc
fstpl
cmc
ss
pop
int
ja
adc
movsl
mov
push
xchg
sbb
enter
cwtl
push
bound
mov
xchg
push
add
add
inc
stos
(bad)
ja
loopne
frstor
sbb
add
je
inc
addr16
mov
pop
pusha
pop
mov
ds
adc
pushf
mov
adc
pop
fidivrl
dec
aam
dec
xchg
movsl
lcall
fs
fdivrs
sub
mov
outsl
loope
and
fisttpl
xchg
(bad)
and
aas
inc
cmp
(bad)
xchg
sbb
mov
dec
hlt
mov
jle
lds
sbb
insb
ljmp
ret
lea
push
adc
and
(bad)
into
cmp
aas
mov
sbb
repz
pop
data16
clc
cmpl
xor
dec
mov
dec
in
mov
lods
mov
jbe
andb
mov
push
mov
ret
mov
sub
sub
inc
sahf
xchg
aad
pop
gs
rcr
imul
and
or
sbb
dec
xor
xchg
call
mov
and
clc
push
mov
imul
lret
jns
popf
fstp
pop
outsl
shl
add
jmp
cmp
xor
rcrb
sub
pop
xchg
fisubrs
jg
cmc
mov
mov
pusha
cwtl
xchg
and
lea
mov
lea
pop
mov
jmp
xchg
mov
mov
push
push
aas
mull
jbe
sbb
mov
sbb
pusha
out
mov
xchg
mov
andb
loope
xchg
fildll
inc
ret
and
lcall
adc
daa
test
outsb
fcoml
jp
loope
pop
push
mov
add
rcrb
(bad)
jbe
ss
cmp
into
mov
negl
loop
push
jae
push
mov
or
pop
fidivs
test
fwait

aas
inc
pop
mov
arpl
or
push
xor
adc
shrb
sub
outsb
pop
ret
sbb
or
loope
hlt
pop
xchg
jge
jmp
jae
inc
notl
add
adcb
jae
push
lods
sti
jmp
movb
test
jae
add
push
xor
dec
cmp
jae
test
add
sahf
and
repnz
sub
dec
shl
jg
mov
(bad)

mov
jno
leave
lods
jbe
pushfw
xor
enter
push
dec
inc
int3
aad
push
mov
mov
jge
push
mov
cmp
repnz
mov
jg
or
dec
aas
ja
lcall
and
test
addr16
lods
cmp
push
loope
mov
stos
ja
or
cmp
xor
stc
xchg
xchg
jmp
inc
pop
add
imul
jg
or
mov
push
inc
and
xorb
sub
mov
lcall
dec
add
cltd
scas
roll
jo
clc
fdivrs
lods
xchg
pusha
(bad)
cwtl
mov
mov
mov
add
adc
mul
cmpsl
or
and
lods
in
fwait

bound
or
je
cltd
xor
pusha
xlat
(bad)
in
fsub
sbb
xor
out
cmp
fst
pop
lods
cltd
dec
mov
stos
pushf
loope
dec
xor
jmp
adc
or
and
or
scas
not
mov
and
mov
pop
cmpsl
idivl
cmp
nop

outsl
jae
inc
jns
fisubrs
jb
imul
(bad)
(bad)
imul
cmp
les
inc
jg
jb
lret
dec
pushf
adc
mov
std
xor
decb
lcall
in
xchg
les
xor
pop
or
aad
add
adc
push
sbb
(bad)
jmp
aas
jle
(bad)
mov
sbb
inc
mov
jne
scas
jle
jecxz
mov
cmp
jmp
xchg
fidivs
xchg
cld
sub
mov
push
mov
sub
movsl
aam
push
adc
in
movsl
arpl
roll
and
ret
mov
imul
std
cmp
or
int3
mov
movb
jbe
jp
and
es
push
arpl
fnsetpm(287
scas
mov
xor
cmp
int
xor
shr
ret
aas
mov
cs
loopne
or
fstl
adc
ret
xchg
lock
or
mov
enter
cmc
lea
jl
test
imul
(bad)
pop
adc
adc
xchg
dec
xor
les
sbb
mov
push
aas
cmp
jge
sbb
push
push
cmp
push
aas
fstpt
imul
mov
fs
cmp
out
xchg
fs
dec
or
scas
mov
mov
push
pop
xchg
dec
pop
jg
dec
dec
add
inc
adc
push
ja
clc
xchg
sahf
push
xchg
mov
lds
frstor
jmp
dec
jno
adc
andb
rclb
shrb
repnz
cmp
cmp
jle
scas
sbb
or
inc
(bad)
aaa
(bad)
cmp
inc
sub
and
jg
sbb
fistpl
gs
(bad)
dec
mov
mov
arpl
ss
sbbb
stos
addr16
jae
lea
ss
pop
pop
popa
fcomi
lahf
adc
push
fstl
andb
or
insb
aam
sub
ret
stos
in
cmp
push
pop
adc
jle
aaa
das
sbbl
imul
mov
fadds
xor
int
cmpb
mov
xor
cmp
test
(bad)
push
mov
push
jae
cmp
(bad)
shlb
mov
pop
pop
testb
sbb
in
loop
dec
xchg
and
xor
das
rorb
mov
roll
and
mov
js
gs
lock
into
adc
mov
xor
jp
mov
push
cs
out
js
popf
push
sahf
test
cld
ja
mov
movsb
cmpsl
roll
enter
xchg
mov
aaa
xor
ret
or
scas
cwtl
sub
fistpl
hlt
int
sbb
add
mov
repz
and
mov
adc
inc
out
mov
sbb
mov
clc
daa
rorb
jecxz
add
pop
divl
pop
or
dec
sub
idiv
stc
jbe
ljmp
add
add
xlat
pop
ss
lods
or
xchg
(bad)
(bad)
and
sbb
ret
gs
shlb
repz
pop
test
in
call
das
and
jecxz
pop
(bad)
lods
or
inc
int3
mov
sbb
sbb
or
les
pop
jae
test
dec
mov
sbb
cmp
mov
rcll
popa
mov
int
xchg
cli
push
xor
mov
(bad)
xor
xor
sub
add
xorl
jb
mov
mov
insl
les
addr16
out
call
jno
inc
add
add
sub
adc
xlat
out
push
or
stos
idivb
pop
bound
lods
mov
jnp
addl
movsb
push
fdivrs
pop
add
cmp
mov
(bad)
xchg
ret
xchg
fcmovnu
out
adc
in
xor
xchg
cmp
data16
fwait

rcrl
loope
mov
xchg
push
cmpsb
pushf
idivl
aas
mov
cmpsl
in
out
cmp
inc
sub
sbb
sub
xchg
ja
jo
out
ret
dec
ljmp
decb
(bad)
sti
pushf
loop
outsl
cmp
mov
ja
inc
out
stos
outsl
loopne
mov
lock
rcr
mov
enter
cld
push
iret
dec
adc
dec
call
add
(bad)
roll
cmp
ret
lcall
daa
adc
xchg
test
lahf
pushf
mov
gs
les
mov
adc
(bad)
dec
out
mov
ljmp
xchg
dec
repnz
xor
jmp
or
mov
cli
imul
mov
in
add
and
cwtl
xchg
adc
jo
cs
cmp
test
shlb
loopne
pop
cs
inc
adc
outsb
jb
xchg
inc
adc
in
int3
dec
cltd
add
mov
enter
sbb
fldt
inc
push
mov
shlb
jns
mov
pop
and
lock
lock
cmp
repz
xor
nop

push
xchg
aad
jno
fs
sbb
xor
jecxz
mov
mov
and
rolb
pop
push
xchg
fists
cmp
mov
lret
lea
xchg
lock
mov
and
mov
fwait

sub
rorl
out
mov
mov
push
into
cs
mov
popf
nop

(bad)
cld
out
mov
push
adc
xor
dec
loope
jge
mov
sub
mov
cld
shlb
xchg
mov
arpl
ljmp
pop
add
negl
sub
mov
fdivrl
jb
jmp
pop
and
into
call
add
outsb
cmp
and
dec
pop
loop
fcoml
jb
xor
adc
mov
adc
sub
xorl
loopne
popfw
inc
dec
addr16
sub
(bad)
cld
inc
pop
das
fs
add
mov
insb
fsubs
cmpsl
sbb
dec
hlt
pop
fdivrl
pop
addl
jbe
cld
cmp
ret
fbstp
imul
mov
inc
xchg
mov
inc
mov
scas
jb
dec
pop
mov
test
sbb
outsl
push
mov
cmpsl
pop
(bad)
sub
popf
mov
gs
mov
into
out
loop
test
add
in
xchg
mov
xor
push
inc
gs
xchg
or
push
fwait

je
scas
fwait

push
xor
adc
dec
faddl
push
shl
lock
pushf
mov
call
sbb
js
xchg
add
fstpl
lret
call
fisubl
pop
divl
mov
movsb
pop
test
fnstsw
(bad)
sub
in
xchg
(bad)
lock
pusha
cmp
push
mov
cli
mov
cmpsb
out
popa
js
test
fbstp
int
push
in
insb
call
iret
sub
leave
and
push
rorb
data16
xchg
imull
xchg
jb
push
jl
fldenv
clc
(bad)
or
add
and
pop
lahf
mov
add
mov
outsb
mov
add
iret
add
add
fldt
adc
sbb
adc
jl
es
add
ret
adc
ficoml
orl
mov
inc
push
pop
xor
pop
sub
adc
loope
mov
aaa
cmp
add
mov
andb
in
jae
and
rol
outsb
outsb
pop
mov
fcomps
pop
or
lods
call
call
stc
and
lods
negb
pop
xchg
xchg
sbb
jns
shrd
sbb
daa
jo
push
sarl
sbb
fimuls
pop
rol
(bad)
hlt
push
outsb
and
adc
pop
rorb
fimull
adc
and
or
jl
jle
(bad)
jo
lret
pmullw
xchg
mov
or
xlat
push
(bad)
sub
mov
jecxz
adc
sbb
repnz
push
add
pop
loopne
fstpl
add
inc
push
nop

adc
cmpsl
jle
sbbl
(bad)
adc
adc
fcmovb
sahf
(bad)
mov
mov
xlat
mov
inc
fs
ficomps
aaa
call
xlat
mov
mov
enter
jge
sbb
jle
loope
jmp
lahf
(bad)
imull
pop
ficompl
clc
test
movsb
aas
dec
and
xchg
pop
adc
sti
fiadds
push
add
jae
or
mov
stos
xchg
pushf
leave
sub
lods
jbe
cs
push
lods
add
sbb
cwtl
add
mov
adc
nop

call
insl
sub
jmp
adc
mov
mov
jg
leave
mov
lods
and
mov
les
in
mov
or
dec
hlt
outsb
clc
cmc
mov
lods
call
or
std
sti
cmp
insl
ss
pop
dec
fdivrp
push
sub
(bad)
inc
add
ljmp
test
in
xchg
sbb
outsb
pop
sbb
mov
stos
insb
shll
jl
push
mov
mov
clc
xchg
mov
adc
push
xor
jns
call
and
sbb
(bad)
je
lock
js
test
push
ja
jb
lea
test
jle
jl
sub
ret
push
mov
mov
jl
ret
repnz
jnp
out
push
xchg
mov
inc
mov
mov
fistps
cmp
jns
mov
insl
mov
rclb
out
cmc
inc
xchg
pushf
inc
and
xchg
imulb
loop
push
jle
dec
and
out
cmpsb
dec
sub
pop
add
into
mov
adc
pop
mov
in
jle
fistl
stos
jg
loop
mov
jecxz
fadd
mov
fs
int3
lods
pop
neg
cmp
mov
cmpsb
sbb
(bad)
sbb
adc
inc
arpl
and
lret
clc
test
bound
sbb
inc
dec
in
mov
push
push
loope
adc
aad
ret
call
clc
test
lock
add
stos
adc
mov
or
adc
stc
mov
push
push
imul
dec
mov
in
sbb
adc
aad
movsl
sub
ds
fldcw
and
lcall
lods
movsl
pop
inc
sub
jo
adc
and
push
ficoms
(bad)
sbb
pop
pop
das
inc
data16
cmp
cltd
(bad)
sub
loope
arpl
mov
push
pop
repnz
aam
cmpsl
out
mov
repz
in
or
outsl
pop
inc
pusha
jbe
dec
std
push
call
popf
das
push
inc
setae
mov
add
push
pop
sbb
pop
mov
(bad)
out
iret
call
mov
idivb
xchg
mov
lods
and
(bad)
xor
mov
out
(bad)
hlt
mov
enter
aaa
dec
repz
(bad)
movsl
insb
cwtl
xchg
mov
xchg
je
bound
adc
pushf
pop
adc
jmp
enter
lahf
jnp
xchg
in
adc
iret
jae
mov
xchg
or
dec
mov
xlat
dec
into
aam
out
or
out
pushf
dec
lods
or
cmp
push
in
popa
int3
sub
loop
rorb
mov
iret
sub
stos
scas
test
push
out
pop
addr16
(bad)
push
notl
and
cld
imul
push
(bad)
adc
out
xchg
inc
les
mov
sbb
fnstenv
pop
sub
shrb
clc
sub
hlt
call
inc
shlb
or
addr16
push
xchg
aaa
xor
ret
xor
xor
je
aas
stc
pop
movsl
mov
cwtl
rolb
dec
(bad)
(bad)
mov
xchg
add
and
sahf
inc
jle
dec
leave
fmull
mov
(bad)
mov
popf
dec
dec
xchg
cwtl
jnp
push
jns
icebp
mov
xor
adc
adc
lret
add
mov
fs
(bad)
mov
call
divl
lods
dec
jl
shl
inc
pop
mov
ret
add
scas
fstpt
pop
not
mov
jmp
xchg
sub
adc
into
dec
stos
jo
push
pop
cmpsl
mov
test
sbb
cld
push
or
rorb
xor
dec
and
inc
std
add
call
out
push
hlt
cld
mov
xor
fimull
in
icebp
stos
pop
cld
cld
mov
dec
stos
sbb
mov
inc
sub
jne
adc
xor
gs
rcrl
shll
(bad)
jo
sti
ljmp
cmpsl
bound
adc
lret
mov
rclb
inc
mov
sub
cmp
rorl
test
lahf
ja
xchg
adc
sahf
sbb
shll
cwtl
xchg
test
fsubl
rolb
pusha
xchg
lds
push
and
dec
dec
pop
imul
clc
les
out
jne
mov
mov
loope
xor
stos
push
je
loop
jle
cld
pop
inc
lcall
mov
mov
xor
sbb
(bad)
(bad)
adc
xchg
mov
lret
subb
shll
testl
sub
jns
or
loope
int3
pop
sarb
push
jbe
jp
std
mov
xor
into
cmp
(bad)
pop
cmp
add
es
mov
adc
or
jecxz
push
xchg
std
inc
push
sbb
push
adc
adc
nop

push
imul
and
fcom
gs
clc
cmpsb
ja
testb
js
xlat
add
js
pop
rcl
xchg
or
xchg
cltd
mov
fstpt
icebp
sub
aad
push
in
mov
loope
sbb
jp
outsb
lods
inc
lahf
mov
push
shlb
das
dec
or
and
adc
test
fistpll
and
mull
mov
mov
mov
mov
inc
js
push
outsl
adc
or
lret
cmc
push
rolb
dec
cmp
sub
dec
fwait

sub
dec
pop
fwait

add
insl
test
dec
xchg
jne
popa
mov
cmpsl
pop
jecxz
cmp
cmpsb
inc
xor
dec
sti
movl
adc
xor
and
sbb
dec
addb
xor
faddl
mov
call
frstor
(bad)
mov
mov
arpl
mov
scas
mov
push
ljmp
clc
mov
sub
mov
movsl
das
and
fisttps
aam
ret
lds
cmp
(bad)
aas
pop
ficoms
ret
mov
adc
lahf
ja
data16
fists
test
clc
(bad)
and
push
das
movsl
ja
adc
inc
cs
mov
mov
mov
movsl
adc
inc
int
(bad)
out
fcompl
push
pop
xchg
(bad)
out
mov
cmp
dec
push
sbb
jbe
or
nop

fsubs
loop
pop
testl
push
in
pop
shlb
dec
data16
int
pushl
inc
jmp
leave
mov
mov
test
sub
push
aam
and
sbb
add
sbb
mov
jg
shll
sbb
out
shll
xchg
lods
scas
imull
xor
pop
out
aad
popl
test
subl
push
push
cmpsb
nop

outsl
movsb
lahf
pop
adc
imul
or
mov
fmuls
movl
ljmp
ljmp
mov
mov
inc
fs
out
pushf
adc
push
loopne
js
jl
call
ss
shll
dec
add
aam
push
inc
add
movsl
push
shll
repnz
lea
(bad)
mov
in
pop
lods
sbb
mov
lcall
or
scas
push
xchg
jp
icebp
testl
sbb
jbe
or
jb
jo
and
push
repz
dec
inc
sbb
pop
nop

ja
sub
or
jg
je
and
gs
push
push
(bad)
(bad)
jbe
ja
call
pop
add
lds
pop
enter
adc
popa
mov
fistl
pop
insl
jbe
and
push
call
jno
lret
(bad)
lret
gs
sub
je
mov
push
pop
nop

fnstenv
test
dec
hlt
out
pop
sub
lds
pop
cwtl
int
and
clc
lods
push
jle
in
lods
jle
fadd
xchg
imul
inc
rcl
sub
aad
pop
adc
mov
and
push
ficoml
lahf
dec
sub
(bad)
sbb
cltd
xor
inc
xchg
xchg
pop
fcomip
(bad)
push
xor
or
cmpsl
incl
cli
and
adc
add
adc
adc
in
push
ja
adc
sarb
inc
dec
loopne
es
pop
popa
mov
and
and
sub
out
pop
data16
push
pop
add
pop
cmpsb
jbe
and
adc
xchg
xchg
and
dec
adc
fcom
cs
shrl
cwtl
xor
shll
mov
jae
sub
or
test
nop

int
mov
mov
jno
nop

dec
mov
and
leave
cmpsb
scas
dec
mov
lcall
push
add
shl
stc
lods
scas
sbb
cmc
loope
sub
mov
push
pop
pop
ror
pop
adc
cwtl
insb
js
pop
push
push
dec
adc
out
or
arpl
mov
push
xchg
pop
lret
call
(bad)
sbb
aas
divl
sub
aaa
jp
jno
sbb
repz
push
ljmp
mov
in
mov
(bad)
test
dec
aam
mov
cmp
cmp
adc
cld
push
jp
sti
dec
aaa
inc
scas
cmpsl
add
outsb
push
out
stos
lcall
xchg
and
dec
sbb
jle
xor
out
leave
mov
push
out
push
ja
in
(bad)
stos
push
movsl
ja
lds
xchg
fisubs
add
xchg
addr16
out
pop
cmp
mov
in
fdivrl
push
mov
lea
outsl
loope
loopne
mov
mov
imul
mov
jmp
or
ficompl
jnp
inc
cmp
add
jnp
jge
cli
daa
mov
icebp
loope
push
out
jb
cmc
or
fnclex
lcall
aas
call
push
inc
repz
mov
fwait

mov
cmpsl
dec
lret
xor
stos
mov
and
fwait

das
cmp
pop
inc
aas
call
push
pop
pop
push
fmull
xchg
xchg
int3
pop
notl
ret
pop
jne
pop
pop
stc
dec
pop
adc
imul
dec
add
outsb
adc
ret
jbe
xchg
notl
cli
or
jo
mov
add
jbe
imul
je
loop
lcall
jns
pop
mov
pop
cmpb
sbb
out
fucomip
ljmp
pop
cmp
mov
test
imul
add
or
fdivs
fs
mov
push
mov
aam
dec
ret
xor
pop
dec
pop
fdivr
cmpsb
dec
and
scas
test
xchg
std
cmp
ret
sub
test
push
adc
dec
sbb
data16
aam
ja
pop
fwait

push
out
fwait

push
xor
(bad)
and
add
loope
mov
faddl
push
mov
negl
or
sarl
add
dec
mov
mov
popa
cmpsb
in
(bad)
aad
and
repz
inc
xchg
xor
pop
xchg
inc
loop
mull
hlt
xchg
mov
aas
insl
cmp
popa
jg
mov
fisubrl
pop
cltd
jb
popa
int
popf
loope
inc
pop
xchg
xchg
sbb
pop
scas
mov
loope
xchg
mov
dec
inc
sub
cld
sub
dec
divl
stc
ja
dec
fmulp
push
dec
pop
or
cli
jnp
jmp
add
dec
addr16
push
int
popa
(bad)
mov
stos
cld
cmp
or
pop
imul
stos
aaa
pop
pushf
dec
inc
sbb
imul
add
into
(bad)
dec
in
add
xor
xchg
into
cmp
data16
xlat
adc
gs
cwtl
adc
leave
add
vmfunc
jbe
xor
xchg
pop
testl
repnz
ljmp
test
add
add
lret
(bad)
xchg
mov
or
dec
js
xor
push
jo
cmp
loopne
lret
inc
xchg
or
test
add
call
mov
mov
push
inc
fwait

push
cwtl
jo
das
mov
add
cmpsl
in
push
xchg
xchg
orb
cwtl
mov
sbb
int
sbb
xor
sub
push
sbb
adc
sbb
xor
sti
adcb
cmpsl
sbb
xchg
xchg
mov
or
je
adc
int
dec
dec
sub
add
or
push
and
fnstsw
out
xacquire
out
push
jns
das
xchg
xor
adc
jnp
test
or
or
dec
push
clc
xor
or
mov
rcrb
jp
mov
mov
scas
mov
mov
(bad)
pop
insb
mov
jecxz
adc
add
cs
add
js
mov
out
mov
xchg
sahf
or
int
lods
pop
gs
mov
in
iret
loopne
stos
cmp
rolb
mov
adc
push
movsb
movsb
and
(bad)
mov
clc
mov
inc
jno
mov
xchg
subb
pop
cli
(bad)
push
clc
test
pop
out
mov
add
mov
mov
test
shrb
ja
ret
push
or
cmp
sti
call
inc
(bad)
popa
shl
lret
int
adc
shll
push
loop
or
xchg
(bad)
and
pop
xchg
inc
jo
ljmp
hlt
adc
out
mov
xchg
gs
mov
xchg
mov
scas
jns
xchg
xchg
movsl
adc
xchg
sbb
stos
addl
xchg
jge
aam
inc
mulb
push
inc
(bad)
adc
xchg
sub
call
(bad)
pop
add
mov
(bad)
das
cmpsb
filds
movsb
in
pop
into
daa
test
add
ficomps
xchg
sub
push
mov
loopne
in
xchg
mov
xchg
loope
test
and
cmp
outsl
aaa
and
add
sti
fdivl
sub
adc
lods
cltd
dec
xor
pop
push
outsb
add
sbb
push
pop
and
mov
xchg
pop
pop
into
push
gs
rclb
test
inc
cmpsb
add
mov
dec
xor
and
rcll
popa
jle
lods
fmul
testl
inc
imul
mov
fcmovu
cmp
push
das
adc
jb
loope
sub
inc
and
jg
mov
push
dec
fdivrp
push
fnsave
sbb
stos
in
jmp
and
pop
clc
repz
adc
stos
fcompl
nop

test
and
add
insb
dec
insl
push
jmp
ss
mov
rol
jo
orl
fucomip
shlb
ljmp
mov
ds
ja
addr16
icebp
call
dec
push
fcmovu
call
cmp
xchg
cli
call
in
les
jno
(bad)
mov
lds
xchg
jns
jb
rcl
ljmp
mov
mov
clc
adc
add
out
add
out
enter
add
cld
sub
pop
lea
jl
cmp
(bad)
bound
sbb
sub
sbb
out
fidivrl
into
inc
mov
mov
ds
and
and
cwtl
cmp
es
loope
jnp
lahf
je
in
shl
test
fisubs
adcl
cmp
xchg
notb
cmp
dec
test
ret
cmp
imul
sub
cmp
sub
addr16
or
iret
push
fildl
or
cli
inc
andl
(bad)
sbb
mov
andl
jge
cmpsl
dec
sbb
call
xchg
sbb
push
fdivs
testb
push
les
inc
clc
int
mov
stos
data16
xor
jnp
(bad)
lret
xchg
pop
filds
inc
mulb
jnp
enter
dec
pop
inc
push
inc
add
adc
push
mov
test
jbe
mov
push
mov
lods
popa
sbb
rorl
jns
mov
mov
jb
popf
jl
inc
jo
mov
mov
xlat
jg
sahf
push
mov
dec
mov
(bad)
outsl
loopne
sub
pop
inc
or
push
inc
cmp
js
sbb
loope,pt
(bad)
popf
ret
nop

cmpsb
stc
popa
push
scas
add
call
in
divl
dec
cmp
(bad)
jle
fldl
jno
push
jbe
loop
cmp
mov
loop
xchg
cmpsb
aas
mov
sti
fsubs
cs
pop
and
rol
test
pop
jnp
sbb
je
std
out
adc
inc
sbbb
fcoms
cmpsl
les
and
inc
repz
in
mov
cld
cmp
int
nop

(bad)
sub
or
inc
call
fcompl
inc
loop
fcmove
clc
into
rcr
fs
daa
adc
iret
pop
adc
lods
(bad)
insl
rorl
push
imul
pop
loopne
xchg
(bad)
xlat
jle
scas
or
lds
(bad)
adc
pop
or
push
xchg
mov
mov
mov
test
push
dec
and
push
xor
xor
out
enter
inc
jp,pn
sbb
xchg
stos
ds
out
out
cmpsb
or
adc
cmpsw
enter
inc
dec
leave
mov
jo
(bad)
inc
insb
cmpsb
pushw
bound
xlat
(bad)
mov
dec
(bad)
faddl
cmp
mov
dec
sub
cmp
pop
seta
or
mov
outsl
(bad)
fists
fstps
adc
push
sbb
push
addr16
dec
jmp
mov
adc
jb
cmc
in
lock
cli
lea
ja
cwtl
shlb
jo
stos
notb
(bad)
fistl
pushf
xchg
jle
xchg
jb
lret
mov
xor
faddl
scas
jo
cli
imulb
into
sbbb
stos
cld
scas
int
repnz
stc
enter
jmp
jno
jbe
mov
mov
test
jb
loopne
xor
lahf
test
add
jle
push
push
pop
mov
data16
test
adc
stos
adc
jns
dec
sub
mov
xchg
and
xchg
rorb
adc
leave
imul
sbb
das
and
adc
bound
(bad)
jle
or
mov
xorl
rclb
sub
ret
cmp
or
aaa
stos
insl
or
mov
cmc
jbe
test
int3
mov
in
mov
pop
cmp
test
fisttps
cmpsb
sbb
inc
cmpb
add
sti
lods
shlb
mov
fwait

pop
xor
test
pop
das
pop
lea
mull
push
jge
fistpll
add
call
fdivrl
ret
in
stos
cltd
call
dec
xchg
imul
push
pusha
sbb
jbe
or
ret
pushl
pop
out
call
mov
addl
jecxz
pushf
push
popf
jbe
int
push
jns
and
mov
sbb
jp
and
dec
sbb
mov
in
push
addb
pop
or
jecxz
mov
dec
and
cwtl
mov
xchg
iret
mov
sub
mov
imul
sub
aam
sbb
inc
dec
ja
inc
xor
stos
std
int
mov
mov
(bad)
pop
popa
fisubl
push
popa
dec
popl
test
mov
and
loop
push
mov
xor
push
(bad)
rolb
test
stc
inc
fcompp
pop
sbb
or
mov
mov
fucom
xchg
push
inc
pop
aas
mov
out
jnp
popf
int3
(bad)
cltd
testb
movsb
push
cmpsl
adc
data16
lods
outsb
icebp
cmp
jno
sahf
arpl
cmp
inc
imul
or
stos
lahf
sti
fstpt
jo
xor
lahf
sbb
cmp
pop
mov
jmp
push
jecxz
fnsave
cmpsl
(bad)
xor
in
sbbb
addl
xor
adc
repz
pop
cmp
loope
add
lds
outsb
add
or
cmpl
jae
dec
fs
leave
addb
fsubrp
in
cmp
adc
xor
paddsw
pop
(bad)
out
dec
std
mov
xchg
out
stos
cld
mov
out
lods
mov
loope
lahf
and
mov
cmp
jns
and
and
das
mov
sub
push
fst
sbb
cwtl
mov
in
mov
sbb
or
adc
cltd
cmp
cli
sub
xor
cltd
lret
mov
push
push
pop
jbe
jnp
cmpl
inc
mov
mov
in
sub
outsb
mov
(bad)
popa
pop
enter
jo
pop
lods
sbb
lret
sub
add
test
xchg
shll
pop
jno
test
out
pop
leave
ret
int3
cs
scas
sbb
dec
hlt
dec
or
out
divl
cmpsb
xchg
ljmp
mov
aad
rol
test
cmpsb
or
pop
mov
aam
xchg
pop
pop
add
and
sub
cmp
sahf
hlt
rcrb
stc
sbb
pop
cmp
mov
adcl
sbb
fldenv
pop
outsb
mov
jg
loope
xchg
mov
cmpb
ret
(bad)
mov
xchg
add
cs
mov
mov
inc
addr16
push
cmp
mov
nop

ljmp
cmc
jecxz
sub
fs
sub
adc
out
sete
jbe
pop
cmpsb
loope
adc
dec
cmp
cld
mov
ret
out
xchg
popa
fisubl
jle
xor
or
sahf
xchg
out
pop
push
roll
je
(bad)
js
or
pop
xchg
cltd
mov
and
setbe
push
shll
inc
popf
pop
test
dec
xchg
pop
pop
loop
ret
scas
dec
jns
xor
das
pop
push
jle
popa
into
subb
cmpsb
inc
jne
aaa
rorl
call
xor
xchg
jns
int3
test
pop
mov
xchg
stos
sub
dec
sub
xor
pop
lods
or
lea
mov
sub
xchg
in
jnp
jns
xlat
stc
js
cltd
lret
loopne
loop
and
out
sub
rolb
aas
aam
jle
insl
pusha
imul
pusha
std
pop
(bad)
out
xchg
out
sbb
ret
insb
stc
mov
sbb
lea
int
fisttpl
push
or
(bad)
int3
pusha
mov
enter
gs
in
cmovbe
push
mov
jle
jmp
movsb
mov
jo
sbbl
push
sahf
out
cwtl
fstpt
es
or
mov
cmc
push
call
mov
aad
mov
mov
movsb
in
lds
xchg
int3
or
and
and
sub
sub
lods
clc
notl
scas
cmp
mov
dec
lods
jle
push
pop
fincstp
in
fdiv
cmpb
int3
shr
clc
mov
insl
test
out
adc
out
lret
sub
sbbb
(bad)
std
inc
cltd
adc
fmull
(bad)
das
mov
loop
cmpsl
adcl
sbb
add
rcrb
adcl
(bad)
dec
and
mov
(bad)
mov
mov
jmp
mov
add
insl
xchg
test
cmp
aam
xor
popa
xchg
jbe
jnp
push
dec
mov
mov
rclb
pop
outsb
sbb
int
sub
lret
mov
cmc
ljmp
push
sub
jnp
adcb
test
xor
loope
mov
stos
push
repnz
mov
out
roll
mov
mov
fcmovnb
xor
(bad)
loope
jecxz
xchg
adc
or
mov
loopw
ljmp
fs
shll
push
sti
aaa
mov
push
mov
or
or
lret
xor
das
mov
lret
ja
sub
push
mov
iret
dec
jne
mov
dec
(bad)
lcall
mov
jae
negl
xchg
orl
dec
pop
lea
sbbl
jno
xchg
into
sbb
mov
mov
lea
dec
jl
(bad)
lret
xchg
or
jnp
mov
movsl
int
jae
cmpsb
fldt
cmpsl
sub
add
pop
lods
daa
dec
xchg
lods
mov
mov
mov
int
pop
pop
dec
dec
mov
int3
dec
sbb
xor
xor
mov
fstpt
mov
sub
cmpsb
mov
mov
mov
or
fisttpl
test
(bad)
or
fwait

mov
(bad)
int
mov
dec
dec
fistpll
dec
popl
outsl
pop
xchg
repz
(bad)
sbb
sub
les
std
sub
andl
inc
inc
adc
jae
sub
rcrl
popa
in
addl
jne
dec
out
adc
mov
xor
shrl
sub
pop
test
or
insb
pop
cmp
push
jns
cmp
push
pop
push
(bad)
cmp
fstl
sub
xchg
jecxz
popl
dec
fdivl
idivl
sbb
lahf
ja
cli
dec
dec
outsl
sub
das
mov
std
mov
or
les
imul
sbb
(bad)
cmp
ljmp
sub
out
cmpsb
cs
and
xor
mov
jbe
jns
jb
dec
mov
push
xchg
cmc
mov
mov
mov
cmpsl
pop
or
into
(bad)
jns
loope
mov
fcmovu
sbb
and
mov
sbb
rol
mov
xor
sbb
adc
or
lahf
push
daa
ljmp
pop
les
icebp
pop
pop
or
(bad)
and
mov
in
addr16
cltd
sub
lcall
push
xchg
dec
jmp
test
fsubs
add
mov
adc
sahf
cmpsl
inc
cwtl
addl
mov
sbb
bound
movsb
jno
data16
adc
(bad)
rclb
into
and
adc
push
cld
fdivs
cmpsb
inc
push
sahf
outsb
repnz
daa
jp
cmpsb
out
into
or
push
push
sbb
stos
jnp
pop
inc
out
add
push
adc
into
in
cs
aas
cmp
ljmp
ja
icebp
xor
lahf
or
in
or
(bad)
ficoml
imul
insb
pushf
aas
js
or
rorl
(bad)
inc
loope
sub
ss
sub
test
push
sar
ficoms
outsb
jns
or
pop
dec
push
mov
pushf
out
enter
and
add
push
mov
rol
adc
add
shlb
dec
mov
mov
fs
movsl
imulb
inc
arpl
jg
int3
xor
ss
aad
adc
mov
and
adc
rcrb
inc
in
in
jg
(bad)
lret
loope
cwtl
jne
mov
arpl
add
fildl
pop
cmp
cld
clc
add
sbb
push
sub
xchg
jmp
inc
mov
sub
and
sbb
xor
movsl
dec
push
out
in
fstpt
xor
outsb
lret
xchg
mov
mov
(bad)
push
stos
pop
jbe
pop
mov
cmp
inc
mov
fisubrl
test
insb
inc
xbegin
loope
or
adc
pusha
imul
adc
xor
mov
pop
xchg
dec
mov
and
mov
xchg
push
mov
xor
ficompl
ljmp
rcr
into
stos
sarl
jle
pop
cltd
sub
dec
das
add
enter
pop
enter
ja
sbb
inc
fcmovb
negl
add
and
push
in
jno
or
sub
out
mov
xorb
xchg
sub
imul
push
fisubl
adc
div
decl
xor
repz
mov
xor
das
push
mov
sbb
insl
int
cmp
fwait

mov
or
lahf
aad
mov
insl
dec
loope
(bad)
aas
stos
xor
xchg
adc
stos
inc
call
out
lods
jb
cmp
xchg
into
pop
jb
cmpsl
sbb
lahf
pop
fstpl
and
pop
mov
enter
into
or
or
add
adc
lret
jbe
add
add
(bad)
movsb
stos
icebp
cmpsb
pop
xchg
and
sbb
sbb
into
cld
dec
fbld
shr
pop
xchg
xor
negb
call
insl
cltd
mov
out
(bad)
sbb
outsl
cmp
cmp
popf
or
clc
mov
jnp
and
jno
(bad)
sbb
add
pop
pop
sbb
sub
pop
pop
lcall
dec
mov
(bad)
adc
fldt
and
jno
add
xchg
mov
fnstenv
shl
enter
mov
movsl
push
je
mul
or
jns
push
push
jb
jp
lea
addr16
(bad)
sti
aaa
nop

aas
into
xchg
push
aad
mov
mov
fisubs
adcb
call
jmp
(bad)
pop
shlb
lock
lcall
fwait

mov
les
adc
pop
loopne
sub
lret
cmc
ja
mov
sbb
cli
das
sbb
or
pop
xor
adcb
pop
leave
dec
mov
cltd
xchg
pop
cmp
insb
and
or
inc
mov
out
sti
lods
imul
jnp
fbld
sub
cmp
test
sbb
clc
mov
add
test
imul
push
stc
pop
pushf
mov
cs
(bad)
lahf
inc
jne
fst
lock
out
add
inc
and
push
icebp
mov
fsub
add
mov
push
adc
pop
rcrb
stos
pushf
jg
lcall
dec
sub
adc
int
cmp
jnp
cmp
js
sbb
stos
pop
add
fldenv
nop

push
test
fldcw
adc
(bad)
xchg
fcmovnbe
arpl
test
add
(bad)
stos
js
mov
or
loope
jmp
adc
aam
sub
cmpsl
sbb
idivl
sbb
aam
aad
pop
xor
(bad)
lahf
jp
lods
aaa
(bad)
jb
cmp
pop
sub
sti
jb
lea
pushf
add
aaa
ret
lods
and
push
lock
xchg
jb
dec
sbb
test
jns
repz
jb
hlt
ja
std
mov
inc
andl
dec
aam
and
add
test
sub
imul
aas
test
(bad)
mov
adc
(bad)
(bad)
and
mov
insl
jmp
dec
sahf
shlb
sbb
aaa
fs
mov
out
in
mov
dec
xor
inc
mov
(bad)
or
xor
jmp
xchg
mov
pusha
dec
xlat
mov
mov
pop
movq
enter
mov
cmpsb
cmp
pop
cs
gs
arpl
xorl
pusha
les
inc
repz
stos
cwtl
sub
cmp
int3
xchg
fldt
mov
pop
and
mov
push
push
je
sub
dec
xchg
shll
inc
lods
jae
adc
adc
or
or
push
add
mov
(bad)
xor
aas
mov
cmp
mov
and
xchg
in
(bad)
out
hlt
sub
and
out
add
lea
out
cmp
mov
and
insb
jne
int3
sbb
test
mov
inc
repnz
out
xchg
pop
int3
jo
into
fisttpll
mov
push
ljmp
fisubs
mov
aam
cmp
fsubs
xor
push
stc
xchg
ret
mov
inc
je
and
stos
push
loope
and
lahf
dec
inc
loop
or
ret
add
fcoms
fucomip
lods
add
inc
andl
ret
push
je
xchg
scas
add
cltd
sub
push
outsl
pop
mov
data16
add
in
popf
outsb
or
push
mull
lods
decb
sub
mov
clc
and
ljmp
into
lret
sarl
fadds
mov
fsts
mov
pushf
test
xchg
xlat
popa
pop
or
popa
or
push
xor
pop
neg
pop
data16
xchg
test
push
dec
push
xchg
push
adc
out
int3
movsl
xchg
or
(bad)
mov
cmp
fistpll
dec
or
pusha
jnp
es
popf
fsubs
or
outsb
cmpsb
ror
adc
jp
(bad)
(bad)
jge
gs
jne
int3
(bad)
dec
inc
fsub
pop
xchg
mov
aaa
out
iret
lods
cmp
fisttpl
mov
in
in
into
inc
sbb
rclb
repnz
movsl
sbb
cmpsb
jl
pop
out
cmc
dec
sub
pop
int
out
push
out
loope
int3
test
sti
cmp
ss
and
pusha
aas
pop
mov
mov
out
in
xchg
das
dec
into
mov
incl
jge
sahf
mov
mov
inc
(bad)
lret
jmp
push
test
test
(bad)
out
addb
dec
test
push
push
(bad)
outsl
mov
cmpsb
jmp
mov
cmp
cmpsb
fnstcw
cmp
enter
outsb
mov
mov
pusha
mov
test
add
add
je
loopne
arpl
mov
or
mov
sub
outsb
mov
mov
jp
jecxz
test
xor
ja
jmp
popf
pop
rol
pop
dec
out
out
push
jno
aam
and
rol
test
(bad)
fnsave
add
cmpsb
mov
sbb
aas
scas
lds
cmp
and
pop
js
mov
push
frstor
xor
out
jnp
mov
call
adc
mov
lcall
pusha
push
and
lock
cmc
xchg
int3
test
add
push
jb
push
sub
xchg
lret
fxam
add
jno
fidivrl
fsubrs
das
sub
cmp
or
loope
mov
mov
sub
repnz
out
xchg
insl
push
cwtl
mov
fcmovnu
insb
mov
sub
mov
sbb
push
loope
orl
(bad)
cwtl
mov
insl
jb
gs
jecxz
push
sbb
push
mov
inc
fcmovne
pop
into
pop
aam
pop
hlt
pop
cwtl
xchg
jle
adc
ret
adc
rorb
xor
outsl
jmp
dec
sub
xor
or
stos
sub
mov
jp
ja
out
sbb
push
add
dec
mov
js
ret
and
pop
and
sahf
out
jl
mov
lods
mov
jb
dec
push
jg
push
fcompl
or
inc
fldl
test
iret
jg
mov
sub
or
lret
sbb
fldt
cld
cmp
insb
inc
cmp
inc
xchg
stos
lods
lea
(bad)
jbe
jmp
mov
adc
cmpl
add
add
clc
mov
mov
mov
clc
jecxz
mov
dec
arpl
(bad)
jmp
les
sbb
(bad)
int
mov
push
pop
pop
scas
and
outsl
test
std
push
cmp
pop
mov
stc
pop
cmp
inc
(bad)
(bad)
sarl
inc
xor
lods
and
sti
fs
inc
xchg
scas
imul
ret
or
mov
or
pushf
cltd
dec
mov
or
dec
push
aas
aas
or
or
xchg
jnp
ret
outsb
outsb
pop
or
jbe
ljmp
pop
and
sahf
mov
pusha
lods
movsl
repnz
cmc
mov
cmp
and
add
sub
push
pop
push
add
jp
mov
(bad)
jno
out
add
jno
mov
sub
fwait

pop
in
cmpb
cld
adc
xchg
fists
imul
push
rol
test
lret
adc
push
lea
pop
or
fdivl
cli
ds
sbb
sbb
mov
in
lahf
mov
insl
push
movsl
daa
cmpsb
lahf
sub
adc
in
shll
xchg
xor
xlat
xchg
mov
movsl
inc
jnp
push
add
lahf
dec
cmp
sbb
cmpsb
lods
pop
pop
(bad)
rcrl
cld
bound
jg
mov
jmp
xchg
aad
xchg
jbe
rol
and
sar
cmpsb
mov
xor
cmpsl
(bad)
push
sbb
xchg
dec
movsb
cmpsb
js
mov
xchg
jle
sti
into
fisubs
xor
stos
ja
fsts
and
subb
adc
pushf
jbe
outsb
cmp
cs
add
aaa
inc
or
loopne
(bad)
sub
cmpsb
fsubl
clc
mov
mov
pushf
mov
xlat
movb
out
or
(bad)
aas
stos
add
cmc
std
je
mov
dec
ret
fwait

ss
(bad)

or
xchg
dec
mov
add
mov
sahf
dec
mov
add
nop

notl
push
pusha
inc
jp
clc
scas
inc
aad
pop
(bad)
repz
jmp
mov
mov
movsl
jecxz
sub
jae
out
shl
lods
xchg
xchg
sbb
pop
jo
xchg
nop

adc
fdivrs
aas
sbb
lods
xor
or
jne
cwtl
sub
jge
pop
enter
cmp
xchg
repnz
fldl
adc
test
std
clc
inc
movsb
pop
push
sbb
or
sbb
mov
jb
mov
out
iret
xor
inc
cs
mov
decb
lods
and
out
orb
data16
xchg
lock
xchg
in
push
push
and
fists
adc
inc
sarl
cmp
movsl
int
dec
arpl
ret
pushf
adc
pop
sub
mov
cld
mov
dec
rclb
adc
lock
mov
xorb
push
iret
movsb
out
add
stos
scas
and
sub
test
in
inc
sub
mov
xor
sbb
inc
inc
cmp
mov
or
fsubrs
and
add
jae
add
sbbb
add
fsub
pop
mov
clc
push
aas
mov
sub
stos
int
cmp
jge
je
movl
inc
pop
sbbb
into
push
enter
adc
into
lds
rorb
sarl
movsb
jp
push
in
push
(bad)
pushf
into
mov
mov
mov
and
mov
test
in
push
mov
jle
cwtl
push
push
mov
cmc
pop
rcr
les
push
and
fstps
adc
fdivrl
rcrb
lods
loop
outsb
(bad)
jecxz
add
fldt
push
or
jno
mov
push
inc
adc
dec
aad
pop
xchg
xor
push
sahf
loope
mov
int
xchg
dec
push
pushf
inc
inc
ss
outsl
mov
pop
pop
adc
mov
in
and
das
aas
call
cmp
xchg
sbb
push
jno
jmp
lcall
xchg
and
addb
sbb
jo
hlt
fisubrs
dec
xlat
mov
mov
inc
or
imul
sub
sub
(bad)
mov
test
jne
ficomps
divl
mov
flds
fcmove
mov
xor
ret
je
aad
mov
daa
cmpl
inc
mov
cmpsb
lods
rorb
outsb
mov
mov
jg
jmp
pop
(bad)
int
aas
dec
mov
repnz
xor
push
or
loope
jmp
jle
stos
and
mov
add
das
in
lret
fimull
mov
sbb
push
pop
ljmp
scas
jg
enter
mov
mov
out
jno
pop
push
or
push
lods
mov
repnz
adc
pop
push
xchg
int
sarb
mov
jns
movsl
sub
(bad)
stos
scas
rolb
dec
(bad)
pop
xchg
(bad)
addr16
int
nop

outsb
in
outsb
(bad)
jbe
sub
leave
mov
lahf
mov
or
cmpsb
loop
ret
outsb
(bad)
nop

popf
cli
mov
push
push
xchg
jecxz
cmpsb
call
add
jge
push
fwait

xor
mov
lods
mov
cmc
dec
add
push
imul
andl
mov
xchg
fisubrl
subb
sub
in
mov
and
cmc
movsl
jg
stos
inc
pop
xor
fbld
pop
cmp
cwtl
int
jmp
mov
pushf
push
adc
sub
insl
cmp
fdivl
popf
mov
insb
loope
out
cmp
in
and
and
cltd
(bad)
xor
divl
lret
pop
insl
jmp
dec
xchg
push
fisubrs
fisubl
(bad)
pop
outsb
out
adc
mov
lock
jae
sbb
inc
mov
xor
stc
outsl
pop
pushl
lret
inc
rcl
and
jg
(bad)
sub
lea
in
es
std
cmpsb
add
out
lret
sti
xchg
in
xor
(bad)
sub
mov
mov
inc
imul
out
or
add
xor
sbb
lods
push
ret
mov
sbb
mov
fsts
scas
cmp
decb
dec
fcoml
neg
subb
ss
dec
ja
(bad)
(bad)
shlb
out
sub
xchg
aaa
adc
jle
pop
pop
out
add
out
dec
rcrl
ja
adc
xlat
xor
ret
adc
push
inc
sbb
xor
into
xchg
test
and
or
insl
and
loopne
mov
push
and
adc
mov
cmpsb
testb
mov
jmp
inc
mov
shlb
sub
out
inc
into
cmpsl
mov
pop
jl
outsl
cltd
push
stos
repnz
aaa
and
cltd
xchg
add
rcl
(bad)
negl
mov
add
dec
push
imul
hlt
xchg
or
(bad)
mov
and
sub
popa
lret
call
xchg
and
inc
xor
call
inc
shlb
mov
mov
cmp
inc
mov
les
mov
iret
pop
loope
ret
fisttps
arpl
dec
dec
pop
nop

cmc
pop
and
ds
popl
jb
mov
js
xor
adc
mov
push
sub
pop
sub
adc
cmp
(bad)
and
fldl
fistl
(bad)
dec
jle
mov
mov
xchg
insl
ret
neg
jno
dec
test
and
xchg
fnstsw
adc
inc
xchg
out
sub
mov
repnz
es
push
sub
fisubl
or
cmpsb
sbb
lods
inc
xor
mov
nop

mov
cmp
xchg
mov
mov
mov
cs
ss
xchg
rcrb
ds
rolb
add
add
in
pop
leave
sub
jg
fsubl
cmc
gs
out
incl
jne
adc
mov
sbb
push
pop
mov
xchg
inc
pop
div
ss
incl
test
xlat
sbb
ret
sbb
push
mov
jp
sbb
xchg
fcoml
fdivs
mov
adc
idivl
pop
adc
jge
xor
lret
mov
ljmp
jecxz
movl
(bad)
cmpsl
movsb
ja
mov
and
push
or
dec
jne
shrb
sbb
or
mov
adc
cmp
jbe
ja
push
daa
(bad)
repz
adc
int
add
sbb
jno
jbe
es
cmp
push
push
xor
(bad)
rcll
outsl
mov
popf
sbb
notl
call
int
xchg
sbb
lahf
movsb
or
out
mov
std
inc
jg
lds
movsl
cmp
aad
in
adc
cmp
out
orl
pop
add
inc
cltd
outsb
insb
sub
(bad)
sbb
(bad)
cltd
xor
int3
push
inc
mov
fists
ljmp
bound
into
pop
loop
mov
dec
dec
cld
add
mov
mov
icebp
mov
cmpsl
adc
xor
neg
popa
es
aaa
sbb
or
lcall
mov
cmp
sub
std
fucom
add
loop
adc
mov
repz
shrb
lds
and
adc
sub
(bad)
scas
lods
out
adc
or
lods
in
loopw
fcmovne
in
ss
or
add
jg
or
test
push
in
xlat
out
lock
add
ret
or
dec
fstpt
cmpsb
rclb
test
or
sbb
ljmp
repnz
mov
pushf
sahf
and
adc
mov
sub
cmpsl
jns
inc
xchg
mov
sbb
or
fs
dec
jne
pop
sbb
jl
xchg
push
ret
and
push
dec
popa
jle
inc
subl
xchg
xorb
outsb
cmp
call
in
in
out
fcmovnbe
call
sbb
sbb
sahf
cmpsb
fxch
mov
and
push
scas
cmc
aaa
aas
insb
and
sbb
mov
xor
mov
jecxz
inc
(bad)

pusha
mov
adc
pop
insl
adc
mov
stos
sbb
popf
mov
divl
mov
mov
or
dec
adc
and
cmp
pop
fucomip
lods
cmp
mov
cwtl
subl
xchg
je
aas
out
shll
dec
pusha
jns
jno
mov
cmc
test
xor
xchg
in
js
sbb
fisubrl
call
push
add
add
(bad)
pusha
fs
ljmp
in
push
(bad)
pop
or
int
es
jo
or
pop
shlb
insl
sbb
pop
adcb
shrb
inc
sbb
out
mov
cmp
dec
(bad)
arpl
ljmp
sub
mov
into
pop
stos
push
arpl
test
dec
xchg
out
jne
or
fists
dec
lods
inc
jecxz
test
out
inc
(bad)
std
mov
push
fs
xchg
or
fdivrp
dec
(bad)
lret
xor
pop
js
xchg
test
push
or
inc
dec
mov
sbb
jecxz
push
shrb
adc
cmp
imul
(bad)
push
sub
ja
dec
mov
shll
fdivrl
push
xlat
jo
mov
mov
fstp
jmp
int3
(bad)
scas
xchg
xor
clc
jns
ja
fdivr
mov
sbb
lahf
xor
addr16
and
pop
mov
mov
push
mov
fadd
scas
jae
fidivl
push
js
sbb
aaa
sub
pop
jno
cwtl
aas
add
jge
enter
scas
sbb
xchg
xlat
sub
nopl
xchg
cwtl
sbb
bound
inc
stos
daa
fwait

mov
loop
fstpl
xor
out
mov
data16
dec
cmp
je
dec
push
arpl
mov
push
ret
test
cmp
iret
mov
jns
stc
pop
(bad)
insl
xor
fsubl
mov
and
xor
mov
mov
mov
les
stos
sbbb
lahf
pop
mov
sbb
mov
loopne
or
add
xor
fdivrl
daa
sbb
stc
inc
test
xor
(bad)
adc
testl
jmp
das
push
dec
repnz
lods
add
js
sub
bound
sub
jno
lods
cmpsb
fmull
pop
stos
or
popa
leave
sarl
into
lahf
enter
xor
add
pop
cwtl
test
cmpsb
cli
into
sbb
addl
cmp
shr
xor
test
enter
xor
scas
mov
pop
jns
(bad)
repnz
pop
mov
push
and
mov
xor
(bad)
lock
or
sub
inc
dec
xchg
xchg
movsb
mov
adc
roll
fs
mov
ret
xchg
push
cwtl
inc
ja
fimull
repnz
push
les
lret
in
hlt
jbe
out
(bad)
(bad)
cli
jne
and
add
sub
cld
ss
scas
out
push
dec
ss
test
out
ljmp
cld
push
pushf
mov
jno
lcall
rorl
out
mov
and
repnz
mov
cwtl
ss
xlat
loope
dec
aad
fwait

repz
punpckhwd
sub
(bad)
pushl
divl
lcall
sub
xor
jns
cmp
stos
addr16
jecxz
cltd
mov
pushf
pop
fidivl
xchg
ret
inc
mov
popa
push
cmp
cmp
popf
mov
add
jns
int
scas
xchg
sbbl
std
mov
ja
call
js
ds
rol
sbb
mov
mov
pusha
sub
in
jo
mov
insb
call
add
imul
mov
and
insb
aas
stos
fcompl
dec
xchg
into
and
xor
sbb
fisubl
cwtl
mov
mov
inc
sbb
sub
sub
ljmp
xchg
ja
(bad)
addr16
push
sar
shlb
inc
mov
cli
out
push
add
push
xor
dec
mov
add
dec
les
test
in
les
icebp
or
filds
xchg
push
aas
imul
mov
cld
mov
jns
sub
jecxz
sbb
(bad)
in
sti
enter
xchg
aaa
call
orl
push
rcll
jg
mov
pop
sub
bound
cmp
cmpsb
xor
call
(bad)
stc
jge
push
dec
clc
sbb
(bad)
in
cwtl
pop
hlt
rep
idivb
scas
mov
ss
push
xchg
cmp
sub
mov
leave
loop
add
inc
fcmovne
scas
addb
aas
lret
jl
mov
sub
sub
dec
dec
(bad)
es
or
push
jbe
jb
pop
lcall
xchg
cmp
push
jmp
call
je
stos
(bad)
jg
mov
pushf
jne
push
sub
jne
outsb
xchg
lahf
xor
xlat
jle
dec
push
cmp
imul
mov
dec
or
fucomip
out
mov
std
inc
ret
jbe
ret
fistpll
sbb
fistpll
push
inc
sub
xor
gs
jg
ljmp
or
int3
push
pop
add
mov
psrlw
cmp
fwait

cwtl
mov
push
xor
adc
mov
(bad)
mov
push
push
pop
dec
cmpsb
rorl
nop

(bad)
jle
push
scas
cmpsb
dec
sbb
xchg
fbld
popl
dec
cmp
and
sub
outsl
and
mov
push
and
xchg
dec
push
ja
mov
fistpll
stos
test
mov
dec
xor
inc
jns
shlb
push
rclb
dec
xorl
cmp
cmc
or
out
mov
gs
adc
faddl
add
(bad)
add
std
fstps
adc
(bad)
daa
sub
jb
fs
imul
pop
jne
push
push
or
ret
popl
jle
inc
fmuls
xor
mov
push
shl
xchg
rolb
daa
xchg
push
sub
iret
loope
sbb
inc
cmp
xlat
in
insl
pop
loope
jae
jle
dec
cmp
push
lret
lret
xor
outsl
mov
mov
push
shrb
push
pop
jb
sub
addb
adc
cmp
stc
jp
roll
cmp
dec
(bad)
jae
sbb
movsl
jb
or
mov
mov
imul
and
sbb
xchg
pop
pop
jae
ret
inc
insl
fs
(bad)
sub
jb
lret
ret
mov
push
int
ds
test
push
adcb
sub
test
push
dec
cmp
out
dec
pusha
mov
les
imul
mov
mov
push
ljmp
dec
bound
jnp
movsl
lds
or
adc
pop
aas
mov
dec
ret
(bad)
xchg
test
imul
xchg
sbb
push
mov
mov
mov
xor
adc
mov
aas
shll
jb
je
int3
jae
and
aam
outsl
dec
push
mov
fs
scas
lea
and
fnsave
andl
int
cs
rcr
mov
gs
arpl
inc
and
jmp
in
cs
pop
dec
mov
cmp
insb
xlat
jle
dec
lret
ret
loope
js
les
sarl
aad
xchg
rcrb
out
cmp
xor
rcrl
shlb
and
push
mov
mov
icebp
xor
xchg
mov
and
jp
test
push
shl
popf
scas
xor
inc
je
(bad)
sbb
cld
icebp
jl
stc
stc
push
fabs
pop
xorb
pop
push
mov
mov
scas
pop
xchg
and
rclb
xchg
gs
add
mov
push
aas
jb
out
je
cmpsb
and
cmpl
mov
or
push
adc
fwait

out
imulb
fs
loopne
xchg
ret
sub
shlb
fisttpll
xchg
jno
in
shrl
and
in
out
fdivl
clc
(bad)
stos
mov
lods
xchg
out
comiss
sti
ficoms
(bad)
pop
cmp
xchg
(bad)
dec
and
dec
aas
adc
sbb
(bad)
pop
shl
fwait

mov
pop
adc
fadds
jb
add
mov
repz
add
loop
xor
call
rcl
dec
jae
inc
or
sbb
ss
shlb
(bad)
fsubl
int3
imul
pop
mov
add
nop

lret
pop
xchg
mov
loopne
push
xor
inc
and
clc
fbld
push
pop
sub
test
addr16
imul
orl
loop
movsl
jns
push
inc
shrl
out
sbb
lahf
adc
inc
cli
lcall
xchg
mov
inc
daa
mov
mov
or
stc
and
rorl
ss
sbb
mov
dec
xchg
test
sub
es
fisttpl
lcall
aad
xlat
mov
adc
arpl
out
aad
xchg
and
xchg
jecxz
in
hlt
call
xchg
orb
loop
(bad)
push
adc
jle
or
pop
cmc
cld
aaa
sub
sbb
and
shr
and
add
fcmovnbe
mov
test
jmp
push
dec
test
xor
xchg
or
mov
cmpsl
mov
fbstp
sub
addr16
xlat
sbb
pop
jae
clc
lods
in
add
(bad)
jo
jb
in
ds
les
int
xchg
inc
sbb
outsb
iret
xchg
inc
fistl
insb
xchg
mov
jg
xchg
mov
(bad)
push
jns
xlat
pop
repz
ret
lods
xchg
pop
jmp
pusha
ret
pop
std
sar
ret
(bad)
rorb
test
in
outsl
cs
mov
lret
in
cld
lds
repnz
(bad)
push
lock
mov
mov
psllw
popf
inc
cli
jo
shl
out
aam
sub
(bad)
sbb
leave
mov
mov
sbb
xchg
mov
push
xchg
pop
lahf
(bad)
pop
test
out
cmpsl
jle
xor
(bad)
cmp
aam
fistpl
(bad)
lods
(bad)
or
inc
or
push
jns
xchg
out
sti
shlb
jge
fwait

adc
out
xor
jg
and
pop
add
add
roll
jmp
test
cmpsb
imul
dec
fsubrs
aas
inc
xor
cli
mov
fstps
in
or
sub
test
fsub
(bad)
pop
mov
dec
push
(bad)
stc
adc
popa
dec
jle
es
adc
sahf
rcrl
subl
jmp
add
mov
clc
sbb
cmp
popa
scas
pop
cmpsl
xchg
pop
cld
imul
pop
mov
lret
cmp
adcb
xor
jecxz
and
sbb
int
loop
insb
xor
cli
cmp
popf
shrb
sahf
adc
inc
inc
push
int3
outsb
cwtl
pop
scas
add
(bad)
and
out
cmp
xchg
mov
fwait

cltd
sub
fdivrs
in
inc
dec
cmc
popa
pop
pushf
inc
push
(bad)
dec
xchg
shll
fsubp
aad
adc
sti
insb
or
rorb
rol
dec
add
outsb
xlat
fwait

out
nop

(bad)
fmulp
daa
mov
xchg
push
repz
jmp
popa
mov
cs
jge
out
push
fstpt
out
loope
jmp
xor
pop
mov
push
lods
sub
and
jno
aam
xchg
mov
dec
jmp
test
jp
dec
scas
inc
cmp
sub
icebp
cld
out
pop
shr
rorb
inc
and
das
sub
pop
cs
cmc
je
ljmp
fdivl
nop

xorl
add
sbb
imul
push
mov
and
add
andb
outsl
clc
mov
inc
jmp
out
subb
dec
lods
push
sub
pop
mov
test
jbe
clc
out
jge
cmc
lret
mov
mov
push
addr16
cmpsl
inc
jae
scas
mov
arpl
push
xlat
push
mull
mov
das
das
push
xchg
addr16
(bad)
fucomip
pop
mov
ja
sarb
cwtl
inc
adc
or
fldt
ret
ja
popa
loop
test
jle
mov
xchg
fninit
std
push
sbbl
mov
iret
test
mov
xor
out
outsb
in
clc
out
mov
stos
out
out
or
data16
idivl
adc
sar
add
dec
mov
sbb
jmp
lahf
mov
jg
je
mov
cs
dec
sbb
jb
in
loopne
adc
sbb
hlt
fidivs
dec
lahf
pop
mov
xchg
and
push
(bad)
int
stos
fwait

movsb
mov
shrl
fiadds
ret
jnp
add
and
mov
js
mov
jmp
jno
ds
jne
mov
xchg
mov
pop
mov
test
and
pop
pop
xchg
mov
sbb
mov
xchg
dec
push
lock
dec
das
hlt
js
insb
stc
sbb
xor
or
fst
ja
mov
imul
(bad)
daa
(bad)
aam
mov
fisubrl
add
mov
or
nop

shll
(bad)
out
pop
shl
jg
in
es
icebp
jle
and
js
jecxz
jle
sbb
das
shll
jo
add
out
stc
iret
xchg
sbbb
dec
addb
mov
dec
xchg
sub
push
lea
mov
sub
xor
mull
jl
cmpsb
andb
cs
cmc
and
nop

stos
les
push
dec
jp
outsl
filds
call
sub
out
ss
aaa
call
lock
pop
mov
or
adc
push
cld
ljmp
aaa
sbb
push
or
out
and
(bad)
bound
jmp
push
int
cmpsb
xchg
xlat
or
fnstcw
sti
jns
xchg
jbe
jae
mov
pop
sub
xor
mov
cmp
ja
adc
aas
imul
in
dec
add
lods
addr16
add
lock
cmp
out
(bad)
data16
ss
push
mov
(bad)
push
cmp
adc
mov
xchg
ja
jne
outsl
fistpll
mov
sbb
mov
mov
pushf
adc
push
js
mov
mov
outsl
fbstp
mov
(bad)
xor
adc
hlt
std
cs
les
outsl
fbld
mov
testl
push
mov
mov
jne
outsl
(bad)
sbb
sbb
out
divl
pushf
adc
mov
mov
cmp
dec
rcrb
fsub
mov
(bad)
lret
adc
lds
mov
mov
outsl
fistps
stc
mov
(bad)
imul
xor
mov
mov
popf
cmp
xchg
(bad)
sbb
lods
insb
inc
mov
push
ja
cmpsb
out
fidivl
neg
lahf
sbb
or
sbb
adc
fs
mov
loope
and
dec
cs
fsqrt
outsl
fistpll
ja
sbb
mov
(bad)
addr16
pushf
adc
icebp
dec
cs
movsl
cli
outsl
fildll
lret
gs
(bad)
push
orb
js
add
mov
sbb
test
iret
cmp
fiaddl
jmp
loopne
or
pop
test
mov
push
ja
adc
xchg
stos
mov
xchg
xor
bound
sbb
stos
notl
inc
(bad)
sub
test
adc
fisubrl
lahf
lock
loopne
fistps
and
pop
imul
push
or
add
dec
aaa
scas
adc
rorl
lods
je
testl
ja
push
jno
sub
lahf
add
mov
sub
fcmovnbe
stos
xor
ja
dec
cmp
xlat
adc
sbb
std
movsl
(bad)
jae
inc
icebp
imul
ror
sbb
xor
aaa
jmp
fbld
rolb
push
testb
arpl
xchg
xchg
pop
xor
xchg
callw
pop
cwtl
mov
sub
bound
rclb
ret
inc
push
pop
jae
fs
jns
and
shl
xchg
fmuls
loopne
xchg
mulps
add
int
ja
(bad)
fisubrl
or
ja
xor
mov
sbb
je
das
jo
adc
add
xchg
cmpsb
sbb
sahf
scas
fidivrs
or
xchg
fucomip
mov
adc
icebp
in
lock
arpl
inc
pop
clc
lds
adc
test
sbb
adc
cmp
adc
push
push
out
pushf
adc
mov
fidivl
int3
push
js
push
pop
shrb
movsl
clc
(bad)
mov
cmp
xor
pop
sbb
js
sub
(bad)
loop
add
pop
sub
int3
dec
out
xor
aaa
push
or
pusha
lea
call
and
xor
mov
int
ficoml
fsincos
(bad)
jg
mov
push
rorl
jg
int3
xchg
mov
or
cmc
adc
and
add
mov
(bad)
mov
xchg
mov
or
cltd
sti
sub
outsb
xor
xchg
push
add
jp
iret
test
cwtl
cmp
or
cmpsb
sbb
sti
insb
insl
cmp
mov
dec
cwtl
cmpsl
or
cwtl
sahf
mov
mov
mull
mov
pop
push
(bad)
push
pop
cli
(bad)
xchg
jmp
shlb
loop
jecxz
inc
push
es
cmp
lret
stos
addr16
mov
add
xchg
loopne
out
into
mov
jmp
lret
cs
or
outsl
mov
cmp
pop
dec
cmp
adc
jno
lcall
pop
jecxz
pop
xchg
shll
insb
mov
adc
cmp
mov
adc
(bad)
sub
fistps
int3
imul
out
xchg
or
jg
jmp
idiv
mov
sub
jg
inc
in
aas
mov
xor
loope
in
or
and
xchg
daa
test
cli
gs
mov
scas
movsl
aas
xchg
(bad)
add
sbb
hlt
fwait

rcrl
neg
mov
add
mov
test
sbb
push
xchg
ja
cmc
loop
icebp
clc
adc
mov
scas
and
push
add
in
inc
add
mov
(bad)
loopne
in
jg
sbb
fs
inc
add
nop

cmp
push
and
sar
cwtl
(bad)
mov
xor
aas
movsb
sahf
sbb
bound
iret
ja
(bad)
scas
nop

dec
iret
arpl
add
xlat
sbb
movsb
and
dec
(bad)
jns
cmovg
mov
pop
icebp
xchg
mov
jno
xchg
test
jno
mov
gs
insl
(bad)
push
ja
adc
(bad)
mov
mov
insl
(bad)
pop
fcompl
shll
mull
sub
adc
stc
fidivl
in
in
push
push
pop
mov
mov
ds
dec
dec
push
xlat
sub
(bad)
cmp
adc
lea
ds
jo
mov
mov
fucomip
inc
stc
dec
and
test
sub
inc
out
ja
sub
lahf
ror
loopne
sbb
pop
nop

cmp
movsl
pop
jg
push
inc
sub
daa
int
push
sarb
ljmp
fidivl
or
jno
test
adc
outsb
push
repz
pxor
pop
ds
cmc
jne
mov
push
xor
mov
stc
sub
sti
fldenv
rorb
ds
jmp
dec
mov
xchg
lods
insl
cld
arpl
popf
pop
std
adc
mov
fistpl
ret
pop
mov
ret
aad
mov
cmp
mov
lret
adc
mov
push
pop
xor
lds
dec
clc
pop
push
ja
xchg
insb
pop
in
pop
adc
xchg
outsl
cmpsl
in
mov
out
jp
cmpsb
out
push
jl
pop
sbb
cld
push
xor
fcomps
sbb
fs
mov
out
adc
fisubrl
mov
inc
imul
test
xor
pop
stc
jecxz
fistpll
out
(bad)

pop
dec
int
gs
fdivs
xchg
adc
jecxz
pop
sub
xchg
jecxz
push
lea
cld
fisttpll
outsl
and
and
sbb
ja
cmp
imul
mov
jmp
sbb
rclb
push
pop
and
data16
pop
mov
pushf
inc
aas
add
sbb
cmp
jno
mov
out
lret
pop
adc
fcomi
movsl
fs
mov
push
arpl
xchg
and
rorl
jg
cmp
cmpb
loope
test
and
das
ret
xchg
dec
ja
add
pop
dec
sbb
push
cmp
divb
sub
adc
pop
enter
test
cmp
mov
jge
pop
sbb
pop
jmp
sar
scas
mov
shrb
xor
sub
(bad)
add
in
test
lds
in
mov
jp
mov
cmp
and
leave
sbb
cli
adc
sti
(bad)
out
xchg
or
movsl
or
inc
inc
mov
sbb
lods
mov
xor
jg
push
out
and
jg
stc
jecxz
pusha
lods
sub
lret
cmp
fstpt
stos
outsl
fisubrl
inc
cmc
rclb
pusha
cmp
sbb
(bad)
(bad)
dec
mov
dec
xorl
test
mov
lods
and
test
sub
ja
addr16
out
ja
jae
jp
sbb
dec
pop
int3
sbb
dec
clc
into
mov
int
xchg
sbb
mov
add
jg
lea
and
dec
adc
mov
std
stos
adc
push
(bad)
enterw
lahf
cmp
rolb
pop
rolb
js
out
pop
clc
(bad)
sbbl
xor
mov
xchg
loope
(bad)
sbb
dec
sub
push
stc
insl
mov
fisubrl
fistpl
inc
fstl
rolb
and
(bad)
cmpsl
adc
mov
add
mov
jl
jns
xor
int3
mov
(bad)
cs
sub
cmovle
das
insb
cmpsl
add
mov
nop

lcall
mov
subl
and
or
mov
add
xor
andl
clc
scas
fstps
mov
sbb
jnp
pusha
(bad)
movsb
xlat
sub
lcall
in
enter
mov
and
cwtl
imul
cmc
adc
popw
and
inc
xlat
sub
cmpsb
pop
rorb
(bad)
insl
fwait

jp
add
sbb
and
lahf
js
sub
arpl
mov
fmulp
repz
ljmp
adc
lcall
adc
sub
in
cld
aad
push
mov
or
mov
and
mov
repz
out
dec
dec
mov
push
xchg
lcall
clc
data16
dec
(bad)
mov
mov
scas
add
lea
xchg
mov
dec
push
stos
xor
and
sub
xchg
dec
xchg
sarb
lea
pop
and
sbb
inc
xor
cmpsb
ja
data16
popa
cwtl
andnps
or
pop
dec
or
andb
imul
icebp
mov
and
dec
fiadds
push
outsl
imul
test
in
(bad)
pop
imul
loop
test
pop
push
pmullw
out
sbb
lods
and
std
dec
jno
outsb
pusha
pushf
icebp
cmp
cmpsb
adc
pop
mov
test
loop
scas
push
mov
(bad)
jae
rdpmc
sbb
mov
cmp
repnz
jns
fbstp
shlb
aad
dec
push
or
test
lret
aam
adc
adc
mov
mov
pop
fildl
fstpl
dec
and
pop
add
lahf
loope
xor
jae
and
(bad)
sub
loop
lods
stc
(bad)
lock
in
lret
jle
mov
(bad)
int
add
ljmp
xchg
xor
jge
outsl
xor
add
pop
add
nop

(bad)
push
xchg
xor
arpl
pop
mov
cmc
(bad)
loope
in
jnp,pn
inc
stos
and
xlat
stc
js
adc
or
mov
add
loopne
icebp
lahf
adc
push
int3
and
popa
in
sbb
in
ret
dec
sbb
push
jmp
xchg
jo
mov
dec
inc
outsb
sbb
test
ss
das
sub
shll
jno
das
jns
xor
fisttps
outsl
cmp
sbb
test
call
adc
(bad)
mov
push
cld
aas
lock
and
aad
adc
push
and
adc
pop
push
imul
ret
mov
outsl
dec
mov
jo
jge
pop
push
and
cld
or
mov
ds
loopne
inc
in
xchg
ja
jno
inc
(bad)
imul
cmpl
xor
pop
std
jg
testb
cltd
dec
dec
add
call
daa
int
decl
xchg
in
dec
push
push
mull
mov
adc
sbb
ret
(bad)
insl
jnp
cld
push
scas
cmc
xchg
mov
insb
cmc
fs
stc
hlt
das
sbb
mov
lahf
mov
cmp
pop
fnstenv
push
and
xchg
mov
push
xchg
adc
sarb
pop
jbe
mov
sub
pop
push
xlat
add
sbbb
adc
pop
in
dec
inc
xchg
ja
inc
dec
int3
int
fwait

mov
mov
sbb
dec
mov
inc
arpl
xchg
int
aas
lea
adc
cmpsb
and
lods
in
int
test
shr
rorb
daa
pop
call
fcmovu
lahf
scas
shlb
dec
inc
(bad)
dec
pop
stc
dec
push
sub
mov
lahf
and
out
sub
mov
dec
sbb
adc
sbb
cmp
add
cmpsb
mov
jecxz
cs
jno
mov
rsm
dec
cmpsb
outsb
xchg
(bad)
fidivrl
(bad)
enter
imulb
xchg
movsl
fisttps
ja
shlb
push
outsb
xchg
stos
mull
popf
cli
jbe
and
mov
jmp
cs
loope
mov
nop

testb
jo
mov
imul
xchg
inc
dec
cmp
iret
mov
bound
es
stos
js
push
scas
jb
clc
adc
adc
push
sub
sbb
fs
shlb
mov
sub
cmpsb
push
(bad)
(bad)
fdivs
fadds
nop

adc
es
cmp
and
sub
cmpb
inc
sarb
or
outsl
data16
sub
and
jbe
sub
out
fisubrl
mov
xor
inc
xchg
outsl
call
lods
and
cmp
pusha
enter
inc
jg
fstpt
fmul
mov
shrl
jg
xchg
adc
loopne
push
jle
sub
xchg
aaa
inc
lahf
ja
scas
jp
popa
jno
rcrb
pushf
sti
jmp
mov
jns
xor
and
add
sbb
orl
and
(bad)
dec
aas
(bad)
fisubs
jl
adc
sbb
rcr
imul
in
pop
lret
loope
je
or
xchg
jbe
ja
in
ja
adc
mov
aam
xchg
mov
lods
and
fsubrs
sub
inc
imul
jb
xchg
mov
jae
or
ljmp
repz
in
fisubs
(bad)
scas
mov
push
nop

add
fidivs
xlat
pop
xchg
int
sub
cs
xor
pop
push
push
loopne
loope
jno
gs
and
push
arpl
sarb
push
mov
fisubl
push
icebp
mov
outsl
add
mov
lods
and
into
cmpsb
xchg
imul
dec
add
push
xor
outsl
filds
mov
mov
(bad)
sbb
jle
inc
das
out
xchg
leave
repnz
ljmp
sub
dec
push
xor
dec
loopne
cs
push
mov
push
int3
(bad)
hlt
jl
out
out
(bad)
push
jns
jp
inc
ret
int3
daa
cs
test
add
(bad)
jae
adc
xchg
jge
push
push
sub
test
push
mov
jae
push
mov
jno
in
pop
xor
sub
mov
push
sbb
add
pop
ja
mov
lods
pop
neg
in
pop
aas
enter
mull
mov
inc
xchg
dec
adc
and
mov
xlat
pop
mov
in
pop
xchg
xchg
add
aad
gs
cmpsb
ja
mov
ja
mov
xlat
pop
loop
in
pop
adc
cmpsl
adc
mull
ja
sti
lock
adc
inc
rclb
fistpl
mov
bnd
cld
mull
loop
stos
lock
adc
mov
mov
fistpl
jp
in
pop
sahf
push
jmp
fs
ja
movsl
jns
pop
jns
lahf
ja
mov
sti
sbb
mov
cltd
aam
ljmp
inc
mov
cs
into
xor
fucomip
mov
adc
std
jmp
and
mov
mov
test
mov
mov
pop
xor
push
xchg
pop
mov
out
and
inc
int
dec
mov
mov
bound
rcll
dec
imul
jecxz
inc
cmp
xor
xor
out
int3
shrl
das
leave
mov
mov
mov
dec
jns
loope
cmpsb
adc
pop
pop
add
or
std
xchg
fidivrs
filds
push
inc
(bad)
adc
jmp
in
negl
cmp
xchg
dec
out
xchg
ds
push
add
cs
push
cltd
xchg
adc
lds
and
test
outsl
rclb
loop
ret
loopne
fbld
jecxz
jp
cmpsb
mov
adc
dec
jle,pn
lahf
sub
mov
pop
push
cmp
mov
rolb
notl
or
arpl
repz
loopne
ljmp
push
mov
push
sbb
sub
sub
not
mov
notb
or
cld
lods
jmp
dec
imul
mov
imul
or
cli
push
mov
loop
inc
and
pop
insl
fdivp
cltd
push
repz
in
jne
bound
cmpsl
push
ret
fnstsw
push
shlb
sub
fimuls
sub
push
pop
gs
rorl
mov
lahf
outsb
outsl
fcoms
mov
jge
sarl
pusha
inc
mov
lods
addb
daa
dec
bound
adc
or
xchg
adc
mov
add
dec
in
cmpsl
pop
dec
sub
out
out
xchg
rcr
push
adc
andb
js
push
jnp
jb
repnz
icebp
pop
rcrb
cmp
outsl
into
adc
test
andl
in
jp
jle
fsubs
lahf
fnstenv
rcrl
outsb
push
xchg
mov
push
daa
mov
outsb
arpl
push
pop
in
add
cmpl
dec
lcall
pop
lea
mov
cmp
push
in
or
xor
ret
popa
jns
jo
push
fxch
adc
int
loop
push
mov
lods
test
adc
cltd
cli
add
sub
jmp
fdivrp
fucomi
out
mov
xchg
nop

in
push
shlb
fs
(bad)
jo
ret
ja
adc
dec
cs
popa
lahf
popf
imul
lret
sbb
outsl
cmp
outsb
ljmp
dec
or
push
loopne
fistps
mov
movsl
arpl
mov
cmp
fstpt
fimuls
mov
and
and
or
lcall
or
lea
fisubrl
aam
lahf
adc
test
in
lods
lahf
xchg
loopne
xchg
xlat
aad
jne
fisubrl
adc
mov
push
jae
mov
xor
in
or
je
repz
imul
fimull
add
mov
loop
pushf
jl
out
movsb
cmc
cld
xor
lret
inc
lods
enter
lret
popa
mov
pop
mov
pop
cmp
push
push
lods
pop
addb
fcmovbe
xor
jecxz
mov
mov
sbb
sahf
shlb
mov
mov
add
cmovno
cltd
lahf
or
in
pop
rcrb
jo
mov
pop
add
mov
mov
aam
call
pop
add
ret
mov
add
sub
cs
daa
cmp
insb
sbb
inc
push
add
es
jb
gs
or
call
adc
dec
cs
xchg
inc
fildll
sub
xchg
mov
sub
mov
jp
sub
xchg
add
pop
jmp
(bad)
enter
fldcw
sub
dec
shr
push
jmp
or
xor
ja
mov
ficoms
and
xchg
test
pop
push
mov
xor
jecxz
cmp
in
push
mov
loopne
and
cmpsb
ja
testl
push
dec
sbb
notl
push
enter
cmpsb
mov
mov
pushf
frstor
dec
fs
pop
in
add
mull
jg
mov
or
inc
mov
or
cmpsl
and
cmp
and
les
or
data16
inc
inc
xor
cmp
lods
sbb
out
out
loop
dec
push
push
pop
fisubl
fldl
mov
leave
stos
stos
gs
gs
pop
xchg
ss
dec
ss
fistpl
adc
test
jne
xor
rcll
mov
fidivrl
fistl
and
movsb
xchg
mov
xchg
mov
xchg
addb
cmp
rorb
popf
negl
jo
hlt
loope
jae
or
fnstcw
lods
xor
adc
pop
cs
movsb
sbb
and
mov
and
push
push
test
mov
and
dec
pop
sub
jmp
lods
(bad)
xlat
sbb
xchg
sbb
popf
call
sbb
rorb
fs
fcomps
movsb
and
data16
popa
cmp
repz
sahf
add
mov
paddd
out
jb
pop
icebp
adc
enter
inc
ja
and
movsl
aad
add
stos
push
fucom
lock
inc
rcll
(bad)
push
rcrl
leave
mov
(bad)
xchg
lea
pop
push
rclb
mov
or
mov
iret
dec
adc
cs
imull
xor
ret
lcall
fistps
cmpsb
out
out
loopne
loopne
(bad)
xchg
jb
jb
pushf
add
sub
ljmp
cs
outsl
or
rep
rcrb
xchg
out
movsl
sub
push
push
fimull
push
fistpl
xchg
push
shll
mov
inc
lret
out
inc
lcall
je
dec
adc
inc
mov
rorl
mov
pop
clc
fcoms
mov
push
(bad)
sbb
pop
cli
outsl
pop
or
xchg
out
outsb
roll
cmpsb
out
insl
mov
dec
lcall
sub
stos
data16
pop
movsb
in
adc
lods
iret
push
mov
push
jns
test
cmpsb
out
inc
inc
std
repz
cwtl
push
rorb
mov
imull
and
rclb
gs
(bad)
or
rolb
jl
add
mov
sar
outsl
enter
rep
cmp
idiv
sub
repz
out
out
mov
in
dec
pop
xor
cli
add
mov
js
mov
in
cmc
mov
jo
cld
ss
push
dec
xchg
scas
pop
dec
lods
mov
mov
mov
push
sbb
mov
xor
roll
mov
cmp
cmpsl
insl
mov
push
sbbl
mov
and
lods
and
(bad)
out
fnstcw
imul
inc
shl
ret
jb
dec
ret
nop

xor
fldenv
iret
mov
scas
out
add
in
outsb
adc
jmp
icebp
mov
and
lods
xchg
mov
movsb
xchg
or
and
sub
fildll
fistpl
sub
dec
loope
jl
hlt
pop
clc
fdivrs
data16
adc
push
lret
mov
outsl
push
xchg
test
stc
and
stc
cwtl
mov
mov
lea
fisubrl
dec
shll
aam
shll
je
xchg
test
push
mov
or
xor
bound
js
push
das
icebp
call
pop
sbb
stc
popf
fldenv
cld
cld
fistpl
mov
xchg
mov
pusha
jbe
jbe
test
cli
ja
adc
push
insl
adc
mov
sub
xor
imul
xchg
cmp
sbb
lock
cmpb
sbb
and
(bad)
push
loopne
mov
xchg
mov
fs
lock
aam
push
pop
push
popf
adc
rorl
fnstcw
jno
and
and
popf
xor
push
cmp
push
pusha
out
pop
or
pop
pop
push
push
mov
mov
sbb
lahf
rcrl
or
and
jge
cwtl
jns
lock
ret
xchg
gs
fbld
xorb
enter
divl
pushf
and
jmp
in
fisubs
aad
test
jno
or
rclb
roll
cmp
fs
(bad)
rep
sub
ret
fxtract
flds
fidivrl
sbb
xor
cwtl
add
pusha
jns
int
cmpsb
ja
sbb
jle
mov
push
aam
fucomip
pop
xor
add
into
stos
or
test
push
add
pop
add
mov
aad
les
dec
mov
dec
mov
push
sbb
xchg
inc
mov
arpl
clc
outsb
xchg
scas
(bad)
hlt
push
outsb
pop
testb
dec
neg
xor
and
sbb
lock
xlat
jecxz
lds
movl
shrl
add
xor
mov
mov
pop
movsb
xchg
fisubs
jle
nop

ljmp
shr
pop
fcoml
test
popf
jmp
or
mull
jle
loop
outsb
adc
mov
aas
mov
dec
(bad)
mov
and
test
aam
out
pushf
adc
inc
xchg
cli
sbb
mov
dec
and
aad
mull
cmpsl
bound
cmp
adc
push
lock
mov
in
popa
cmp
enter
cmp
out
push
inc
xchg
or
sub
out
cwtl
mov
ret
daa
xor
xor
and
inc
imul
sbb
xchg
outsl
in
bndldx
lods
and
sbb
sub
test
rcrb
add
in
pop
mov
testb
pop
mov
pusha
cmp
mov
pushf
inc
pop
jbe
in
fistpl
es
call
fs
or
jno
in
daa
dec
cld
xchg
outsb
mov
adc
mov
jge
gs
mov
fwait

jecxz
mov
clc
in
rolb
sbbl
and
cld
out
jnp
push
push
mov
mov
cmpsb
xchg
or
xchg
push
or
pop
popa
cli
xchg
ss
sub
push
clc
and
cwtl
pop
(bad)
imul
jecxz
fisubl
cmpsb
shrb
pop
das
sbb
inc
inc
cmp
fucomp
mov
scas
mov
mov
ljmp
sbb
fiadds
loope
cli
or
cs
mov
pop
cmp
push
add
mov
cli
popa
mov
stos
inc
out
roll
mov
sbb
ret
fnstenv
out
push
xor
aad
jbe
and
aas
dec
sub
test
mov
daa
in
and
mov
les
sbb
nop

cmp
pushf
adc
imul
rcl
push
les
seto
xlat
clc
and
mov
inc
push
shlb
mov
push
adc
aaa
cmp
pusha
or
pop
dec
mov
adc
xchg
ffree
sbb
mov
(bad)
cmp
mov
jo
aas
stos
pop
xchg
and
aas
mov
adc
fldl
(bad)
ljmp
imul
mov
jmp
and
aad
clc
shrl
test
add
hlt
mull
sub
into
adc
jp
cmp
in
popa
dec
aas
lock
fisttpll
xchg
lods
leave
jb
out
test
add
subb
ret
popa
fiadds
unpcklps
xchg
dec
incl
lea
adc
mov
and
lods
and
push
dec
mov
rorb
(bad)
jmp
cmp
bswap
gs
inc
popa
fldt
leave
mov
fiaddl
out
ss
out
xchg
subl
outsb
std
cld
or
jecxz
adc
es
mov
add
push
push
int3
mov
out
scas
dec
jg
scas
idivb
xor
mov
mov
stc
loope
jecxz
mov
bound
les
loopne
movsl
mov
aas
lock
into
hlt
mov
insl
add
or
mov
push
jmp
lahf
jp
shll
fs
mov
mov
pop
out
inc
fucomi
mov
add
add
dec
add
out
ds
pop
ficomps
(bad)
push
loopne
add
popa
fbld
dec
movsl
addr16
mov
enter
int3
imul
sub
jmp
test
into
mov
xchg
xor
pushf
fiaddl
test
add
xchg
(bad)
shlb
mov
push
sbb
fisubrs
add
imul
xor
(bad)
loopne
sbb
aaa
(bad)
mov
push
mov
icebp
mov
enter
inc
xchg
sbb
inc
and
call
add
xor
sbb
mov
pop
(bad)
loopne
stos
lahf
into
shl
push
xor
addb
test
mov
cmp
jae
pop
cmp
movsb
fists
xchg
imul
or
test
mov
into
cmp
pop
and
mov
fbstp
imull
pushf
gs
xlat
xchg
cld
cmpsl
xchg
cmpsb
leave
inc
mov
mov
clc
jno
js
xlat
add
sarb
sub
mov
adc
sbb
scas
inc
cwtl
or
clc
sbb
fs
push
dec
sbb
sbb
scas
jge
mov
ja
adc
mov
mov
xchg
outsb
fs
and
mov
jbe
in
adc
mov
test
fstpt
push
(bad)
pop
inc
loopne
test
dec
ljmp
inc
jecxz
pop
stos
lea
push
lahf
scas
loopne
sbb
add
mov
test
jecxz
push
int
dec
data16
and
loop
mov
dec
ljmp
call
pop
mov
cmp
mov
mov
call
xor
sub
pop
test
pop
push
ficompl
sbb
aaa
push
mov
test
cmc
test
add
idiv
dec
test
push
jp
sub
sbb
inc
mov
test
ret
icebp
mov
in
dec
enter
shll
stos
lods
inc
mov
push
shrb
fidivrl
pop
outsl
clc
outsl
jno
xchg
mov
push
mov
test
pop
xor
mov
mov
movsb
fcomip
push
add
xor
mov
mov
fcmovnb
jp
push
jbe
and
movsb
es
xchg
fs
out
jg
push
ja
mov
int
ja
lahf
mov
pop
js
push
loopne
test
cmp
fs
out
arpl
jecxz
icebp
fistpll
int
call
mov
or
mov
jbe
mov
lods
aam
xchg
ficomps
ja
fbstp
lahf
in
mov
(bad)
pop
xor
inc
je
pop
sar
es
mov
mov
popf
hlt
mov
adc
xor
clc
xor
fadd
popa
mov
fdivr
in
or
xor
mov
adc
xor
adc
cmpsb
addr16
and
leave
sbb
mov
mov
lret
mov
xor
dec
outsl
dec
sub
pop
call
fisubrl
imulb
or
rclb
adc
cld
adc
mov
xchg
push
xchg
mov
fidivrs
stos
shll
imulb
pop
fstpt
dec
das
sbb
in
nop

andb
adcl
dec
xchg
jno
cmpsb
xor
ds
mov
dec
addr16
dec
into
mov
insb
cmc
test
ret
jp
fs
add
lahf
fidivrl
loopne
mov
lods
and
movlps
icebp
mov
sbb
out
xor
adc
mov
ret
divl
sar
adc
and
mov
and
cmpsb
push
fsubrl
int
sub
xchg
(bad)
sub
inc
arpl
dec
pop
or
scas
movsb
fists
sbb
imul
xor
std
out
cld
push
sbb
ds
aaa
add
lcall
inc
xor
test
js
int3
and
ret
lock
dec
push
stos
lods
push
clc
(bad)
test
jp
aad
sub
int
popf
or
inc
movsb
(bad)
shrl
gs
mov
adcl
cmpsb
dec
jno
out
lods
popf
sbb
xlat
test
scas
loopne
xchg
dec
jno
sub
jbe
inc
xchg
popf
nop

jbe
xor
cmp
fstpt
jp
dec
mov
fidivl
mov
insb
mov
or
mov
cmp
push
push
js
shlb
stos
jbe
cmpsl
inc
pop
adc
push
adc
sbb
in
or
sbb
(bad)
cld
mov
jbe
lods
xchg
push
cmpsl
fisttpll
mov
dec
mov
cs
cmp
pop
or
andb
call
sbb
cld
and
fisubl
xor
inc
lahf
idivb
jg
movsb
fucomip
xor
cld
cld
lcall
jo
dec
jecxz
sahf
adc
or
push
pusha
push
fcomip
push
daa
sahf
stc
(bad)

cmp
mov
xchg
out
fisubrl
jmp
pop
dec
push
pop
(bad)
into
rolb
dec
mov
mov
outsl
adc
push
mov
or
test
xsaveopt
fsubrp
das
jbe
lahf
push
clc
cltd
mov
sub
popf
mov
and
(bad)
cmp
fbld
stc
arpl
fs
test
stos
push
add
mulb
repnz
scas
loopne
xor
enter
(bad)
pop
xchg
clc
insb
ret
push
jns
call
push
or
(bad)
dec
jno
nop

gs
jmp
cmp
xchg
rolb
sub
(bad)
cwtl
jecxz
push
xor
mov
fists
sbb
gs
mov
xchg
out
mov
xor
sub
inc
xor
sbb
and
int
push
mov
and
lret
in
out
sub
icebp
xlat
or
loopne
xchg
dec
mov
cmp
test
aas
dec
xchg
fistpl
movsb
push
fstpt
dec
mov
xorb
jle
gs
adc
mov
imul
mov
fistps
xlat
xchg
lock
push
or
imul
enter
mov
pop
mov
xor
(bad)

jl
pusha
cld
adc
xor
adc
loop
lahf
xchg
mov
mov
dec
(bad)
lods
orb
test
and
jp
adcl
jp
fnstsw
je
xor
notb
adc
xchg
ficoms
xchg
out
sub
mov
loopne
xor
je
sub
lret
sbb
fsubl
push
test
sbb
movsl
idiv
cld
and
mov
insl
jmp
(bad)
stos
adc
hlt
or
movsl
insl
out
mov
xchg
int
sub
push
cli
das
xchg
std
popfw
fdivp
xor
aaa
jmp
daa
lahf
rorl
(bad)
xor
imul
cmc
adc
aaa
clc
inc
mov
xchg
daa
push
mov
(bad)
mov
dec
mov
outsl
fidivrs
fisubl
stos
inc
pop
cmp
dec
xchg
fs
and
mov
xchg
(bad)
adc
data16
stc
inc
mov
jo
call
xchg
mov
sbb
shrb
pop
in
lret
ds
adc
ljmp
test
testl
leave
ret
ja
aam
xor
(bad)
ss
jbe
outsl
(bad)
ror
sbb
jae
int
or
clc
clc
xlat
mov
cmpsb
mov
aaa
xchg
and
mov
aam
jg
sbb
call
push
mov
hlt
out
cs
pushf
pop
xor
mov
xchg
sub
call
or
js
cwtl
inc
mov
cmpsl
insl
outsl
jecxz
add
dec
out
cmp
adc
cmp
scas
sbb
pop
push
sbb
and
negl
fs
outsl
sub
adc
enter
push
lahf
cmc
add
pop
fisttps
jge
mov
pop
(bad)
in
pushf
bound
xor
jl
call
and
sbb
mov
mov
jmp
mov
(bad)
xor
dec
add
in
pop
dec
jecxz
fisttpll
cmpsb
ret
pop
push
jl
sbb
fcmovne
jnp
xchg
xlat
xor
xchg
cli
(bad)
stc
cld
adc
aas
push
ss
push
push
ljmp
aad
sub
fisubs
adc
inc
push
mov
movsl
ljmp
push
imul
idiv
repz
cmp
mov
int
lods
xlat
flds
adc
cmovnp
fisubs
(bad)
sub
inc
jmp
cmpsl
cli
pop
enter
enter
dec
pop
lds
mov
pop
and
call
leave
push
cmc
(bad)
cld
xorb
outsl
out
loop
cmpsl
scas
fistpl
in
fisttps
mov
or
cmc
movsl
adc
mov
cmp
js
mov
loopne
jg
jno
fadd
call
cmc
jbe
push
pop
dec
lea
mov
nop

aaa
imul
pavgb
add
mov
smsw
sbb
shlb
sbb
fucomip
call
pop
movsb
cmpb
sti
push
imul
das
jns
jno
inc
sti
mov
lods
xchg
insb
sub
or
test
cmp
fisubrl
cmpsl
lahf
inc
add
enter
sahf
xor
addl
jecxz,pn
andl
pushf
stc
popa
pop
cmp
add
mov
dec
js
in
movb
xchg
push
pusha
in
pop
lahf
pop
cmpsb
nop

stos
push
in
jl
mov
stos
sub
test
sbb
rcll
and
int
ljmp
movsb
xor
insl
and
mov
jbe
jmp
(bad)
lret
dec
movsb
add
jb
dec
xor
(bad)
out
xlat
nop

mov
or
addr16
adc
in
aas
cmp
dec
and
idivb
(bad)
jmp
add
jecxz
sbb
add
or
xchg
lret
jb
xchg
and
xor
test
xchg
xor
lret
fcomi
mov
popf
mov
ret
xorb
insl
lock
test
fdivl
aad
cwtl
cmpsb
das
lcall
rcrb
lods
and
(bad)
push
loopne
pop
out
fimull
fistpl
out
mov
or
mov
repz
cmp
sbb
lea
and
std
jp
insb
push
sbbb
in
mov
bnd
(bad)
imul
mov
mov
arpl
xchg
addb
xorl
sub
jae
gs
push
clc
test
out
int
jo
adc
mov
movlps
in
sbb
dec
dec
lock
fucom
xor
push
fsubr
push
sub
inc
loop
push
jo
or
jae
mov
mov
sbb
mov
iret
je
imul
add
cmpsb
push
fwait

sbb
cwtl
repnz
push
outsl
pop
outsb
add
(bad)
pop
dec
andb
test
loope
push
and
bound
cmc
jno
or
repnz
and
jno
push
xor
push
cmp
add
nop

lret
sub
lret
jl
arpl
xchg
das
push
xchg
and
pop
xchg
adc
pop
or
(bad)
fisubrs
ffree
insb
rcll
jne
and
pop
xor
(bad)
jo
test
les
sub
imul
jne
inc
sbb
xchg
jno
adc
jmp
and
cs
fistpl
lcall
or
mov
sahf
shrb
cmp
sbb
jns
push
or
pop
insb
addl
mov
loopne
jnp
(bad)
xlat
dec
adc
shlb
xchg
cmpl
push
into
clts
mov
mov
testb
xlat
shl
test
rcll
xchg
inc
imul
out
jae
dec
pop
pop
inc
lret
arpl
dec
sti
outsl
push
jb
or
ret
sbb
out
mov
pop
jmp
mov
(bad)
or
pop
bound
jge
add
push
lret
movsb
jmp
add
out
cs
xchg
fwait

push
or
pop
lcall
pop
mov
adc
mov
push
pop
cmp
inc
add
pop
jno
adc
cmpsb
push
pop
push
cmp
lcall
sub
pop
scas
push
mov
sbb
pop
movsl
add
in
add
xor
pop
sbb
jp
fwait

ret
clc
sbb
int3
test
adcb
sbb
and
orb
test
mov
aam
ss
add
push
push
(bad)
push
dec
cmovne
xor
xlat
cli
in
test
xchg
shrb
mov
pop
fstp
jo
or
jae
dec
lods
pop
mov
mov
iret
fimuls
xchg
dec
push
adc
xchg
test
push
pop
ret
sbb
add
(bad)
inc
dec
sbb
loop
pop
push
mov
rcr
sbb
and
pop
lret
adc
in
dec
popa
jb
add
call
data16
cmp
mov
into
test
xor
data16
ljmp
add
outsl
and
pop
xor
shlb
and
mull
xchg
fwait

cmp
sbb
push
fsubrl
jnp
sub
aad
jne
pop
test
cmp
mov
jo
adc
cmpsl
jns
cmp
out
xchg
mov
jge
shlb
(bad)
shrd
pushf
xor
loopne
jnp
movl
xor
leave
lahf
mov
(bad)
sbb
push
loopne
addr16
scas
mov
xchg
(bad)
push
add
jl
aaa
jno
jne
and
pop
pusha
adc
mov
(bad)

mov
call
add
adc
sbb
pop
inc
add
pop
jno
adc
cmpsb
mov
ds
mov
xor
dec
pop
sbb
call
mov
cmpsb
ja
push
int3
scas
fimuls
shr
test
mov
push
sti
scas
test
imul
lcall
(bad)
sub
aam
ss
jmp
lods
sahf
xchg
ret
fcompl
mov
int3
push
dec
xchg
xlat
shl
mov
push
(bad)
in
iret
sub
inc
or
in
movsb
cmp
mulb
repz
aaa
fsubl
bound
mov
sbb
sub
jns
fwait

cmpsb
inc
popa
mov
xor
repnz
xchg
mov
stos
xchg
jge
add
and
in
(bad)
jmp
add
out
mov
rorl
mov
pop
in
adc
test
js
jl
lcall
aas
xchg
xor
pop
gs
movsb
add
nop

push
sub
push
cmpsb
jle
pushf
movsl
sbb
lahf
ja
xchg
sbb
pop
mov
movsl
jp
fwait

jno
dec
clc
lods
flds
int3
pop
mov
lds
(bad)
adc
mov
pop
mov
loopne
data16
mov
in
test
shr
(bad)
sub
inc
(bad)
jo
or
jae
dec
mov
mov
iret
mov
mov
jge
orb
dec
sbb
(bad)

loop
inc
sub
mov
imul
push
ljmp
add
pop
jno
rcll
gs
dec
bound
inc
bound
pop
outsl
adc
or
shlb
gs
push
aad
clc
dec
fldenv
or
out
inc
test
jg
mov
or
mov
test
pop
cmp
and
and
or
fistl
cmp
mov
iret
jnp
(bad)
dec
dec
scas
mov
(bad)
xor
subl
dec
lahf
(bad)
mov
dec
hlt
movb
lahf
aas
mov
ret
jo
adc
rcrl
cmp
sbb
sbb
inc
loopne
and
push
fimull
xchg
push
and
aas
aaa
inc
into
js
lock
mov
sbb
mov
mov
stc
mov
jge
andb
sbb
ljmp
pop
pop
add
(bad)
pop
dec
or
mov
xlat
mov
aaa
sbb
andl
cmc
cmp
ds
mov
jno
aam
nop

mov
stos
aaa
push
and
idivb
add
push
lret
dec
jmp
mov
out
pop
repnz
stos
add
int
hlt
or
pop
clc
mov
imul
in
pop
sbb
jne
and
pop
mov
popf
mov
(bad)
loopne
sbb
nop

mov
adc
test
ss
in
add
sbb
mov
in
popf
xor
pop
pop
push
push
jbe
mov
rcrl
jmp
mov
fistpl
(bad)

cmp
fnstcw
fwait

(bad)
aad
clc
fnstcw
mov
sbbb
mov
mov
stos
add
pusha
(bad)
pop
dec
pop
inc
jmp
rcrl
inc
xchg
(bad)
adc
pop
fistl
btc
push
xor
loopne
jnp
(bad)
insl
clc
aad
xlat
enter
xor
push
lods
int
xor
test
pcmpgtd
insb
hlt
enter
mov
aas
dec
adc
rclb
inc
popl
popa
dec
flds
jecxz
cmp
pop
sti
int3
push
xchg
cmc
fwait

test
or
adc
add
(bad)
mov
gs
mov
sub
insl
push
push
sbb
cmpsb
pop
jle
pop
(bad)
cmp
mov
xor
shlb
mov
pop
mov
sbb
sub
fs
cmpsb
scas
popa
mov
jp
das
xor
aaa
imul
bound
jge
add
jge
mov
inc
xlat
jl
arpl
mov
lret
push
and
add
xchg
lret
aas
mov
imul
(bad)
lahf
rol
or
and
pop
(bad)
adc
cld
(bad)
pop
pop
push
mov
imul
(bad)
mov
push
fs
mul
fdivl
shll
jno
mov
adc
adc
rcrl
pop
inc
add
outsb
jno
sarl
mov
insl
cmp
ds
adc
or
loop
jbe
pop
mov
xor
pop
cmpsb
ja
in
out
fisubrl
or
out
xchg
test
mov
mov
fiaddl
subb
(bad)
mov
cmpl
mov
lahf
adc
(bad)
mov
scas
mov
and
clc
hlt
mov
sti
xor
leave
das
mov
push
bswap
mov
sbb
dec
xchg
xlat
cld
in
test
dec
nop

jmp
inc
dec
sbbl
adc
jge
xor
mulb
scas
mov
scas
fcmovb
push
mov
inc
repnz
sbb
mov
sbb
mov
iret
mov
dec
insl
shll
bound
pop
inc
lds
or
sbb
jnp
js
jbe
mov
in
lods
push
aas
cli
xor
pop
ret
pop
imul
shlb
or
lcall
or
push
pusha
lods
fs
sbb
mov
jmp
jle
cs
xchg
imull
data16
mov
adc
mov
xchg
or
jp
insb
xchg
orb
cmp
daa
jnp
(bad)
jae
insl
aam
cmp
arpl
(bad)
push
or
mov
loopne
sub
js
hlt
dec
mov
jne
(bad)
test
and
mov
or
fisttpll
sbb
dec
xchg
pop
xchg
lret
loopne,pt
iret
push
pusha
sti
test
test
ret
dec
push
inc
pop
and
(bad)
pop
dec
xchg
gs
mov
test
and
(bad)

xchg
push
lret
push
jmp
push
mov
(bad)
mov
xchg
add
int
sti
adc
cmpsb
or
xor
stc
movsl
adc
lcall
test
clc
pop
push
push
shrb
pushf
inc
cmpsb
ja
in
out
fidivl
gs
lods
test
mov
(bad)
cmp
sub
aad
clc
stos
fsts
mov
jecxz
out
and
mov
and
shrb
cmp
xchg
cmp
push
or
repnz
int
faddl
jl
shrl
scas
dec
push
jnp
(bad)
daa
dec
or
pop
ss
imul
mov
dec
clflush
repz
pop
cli
clc
add
xor
xchg
dec
push
xchg
andl
(bad)
scas
(bad)
and
sar
mov
loop
sahf
jo
adc
stc
push
nop

cmp
inc
sbb
mov
in
test
xlat
nop

subb
fwait

lahf
inc
ljmp
dec
aam
sub
ja
outsl
addr16
scas
shlb
(bad)
cmc
ret
xchg
aaa
sub
mov
mov
sbb
gs
mov
ret
mov
jge
sbbb
sbb
(bad)

mov
les
push
pop
mov
jl
arpl
push
loop
rol
mov
sbb
jne
and
pop
rclb
fnsave
push
mov
imul
mov
(bad)
loopne
xchg
add
and
rcl
gs
mov
add
call
pop
aas
shll
addps
pop
mov
mov
call
adc
cmp
outsb
adc
add
or
pop
and
jne
sub
cli
mov
out
fisubrl
sbb
lahf
push
add
sti
jmp
and
shll
xchg
sarb
add
jns
arpl
push
imul
push
add
std
add
add
pop
cmp
lahf
jo
xchg
pop
(bad)
adc
adc
sub
stos
inc
in
mov
aas
sbb
sbb
mov
shlb
ja
xchg
mov
in
pop
pop
xchg
and
mov
fbstp
dec
fldl
mov
mov
xchg
pop
push
mov
repnz
cwtl
sub
mov
mov
fidivl
dec
cld
nop

sbb
lret
fwait

leave
inc
push
addl
adc
xchg
cli
call
xchg
outsl
fucomip
shll
test
(bad)
push
ja
adc
fisubrl
mov
xchg
shlb
scas
push
or
out
(bad)
dec
sbb
pop
rcr
dec
test
mull
cmpb
pushf
adc
int
fcompl
in
or
sbb
lahf
scas
andl
imul
xor
sub
adc
lret
add
cld
sub
mov
push
call
pop
sbb
dec
jge
and
fucomip
imul
rorl
pushf
add
ja
in
stc
dec
push
mov
lret
dec
cmp
mov
shlb
xor
loope
addr16
jl
add
adc
cmp
pop
rcrb
or
(bad)
add
sub
xchg
ja
adc
fisubl
mov
sbb
push
fistps
and
jb
and
rcr
testl
sbb
rcr
in
pop
mov
int
jp
sti
std
jle
mov
(bad)
adc
cmp
pusha
sbb
nop

adc
xchg
call
(bad)
push
mov
lods
movsb
mov
mov
aas
loop
sbb
jbe
nop

stos
(bad)
jmp
or
and
sbb
push
pop
add
mov
rorb
adc
lds
jmp
adcb
xlat
cmc
in
xchg
mov
out
ljmp
pop
add
sbb
sbb
call
push
adc
pusha
adc
test
push
aas
mov
add
mov
and
fiadds
aam
mov
test
repz
mov
push
test
push
ja
clc
adc
fisttpl
into
cs
adc
sbb
push
push
loopne
dec
sub
loopne
ffreep
lahf
or
(bad)

xchg
cmp
inc
adc
add
xchg
xchg
jno,pn
jle
cmp
inc
jle
mov
mov
push
cmp
aad
xor
jne
aas
dec
inc
test
adc
and
ljmp
ret
mov
or
sub
call
imul
sbb
call
bound
xchg
lret
cmp
loope
ds
lret
adc
lretw
xor
fistpl
xchg
jl
hlt
mov
inc
fisubrs
push
leave
daa
dec
loop
mov
xor
mov
inc
add
push
mov
(bad)

sbb
adc
leave
iret
fsubrs
mov
cmpsb
sbb
pop
pop
push
push
jge
dec
xor
popa
(bad)
(bad)
jbe
ret
mov
aad
xchg
rolb
adc
xor
mov
stos
insl
ljmp
sbb
icebp
negb
xor
push
lods
adc
mov
jo
and
repz
or
shll
enter
aad
negl
sub
push
fcomps
andl
out
mov
add
aas
mov
fldt
arpl
pushf
cmpsl
mov
es
cmpsl
jge
dec
scas
push
sub
nop

in
in
pop
in
mov
call
mov
testl
in
imul
pusha
pop
cmp
stos
adc
fdivs
les
xchg
es
add
(bad)
mulb
xchg
push
lock
xor
push
mov
mov
pop
xchg
out
(bad)
mov
lahf
cmc
(bad)
adc
inc
xor
stos
cmpb
je
sbb
jg
subb
rorl
mov
fdivl
xchg
daa
inc
lahf
ja
mov
pop
popf
push
lods
and
test
push
push
sub
xchg
test
mov
xlat
sub
lret
ds
xlat
in
dec
jg
and
insb
imul
push
push
loop
push
ja
clc
rolb
mov
jne
or
cmp
pop
sub
or
cltd
js
pop
aas
push
inc
or
sbb
enter
in
mov
frstor
adc
mov
dec
(bad)
int3
nop

adc
sbb
jge
fs
lret
int
lock
outsl
fcmove
jge
lock
dec
pop
mov
cmp
mov
cmc
fcoms
push
(bad)
rclb
push
mov
add
shlb
pop
ret
enter
int
pop
jnp
mov
fcmovbe
push
iret
mov
push
cmp
ja
xchg
repz
test
test
sub
xchg
xor
sub
fiaddl
mov
gs
out
mov
and
subl
fwait

and
stc
xchg
dec
mov
sbb
mov
int
pop
jg
mov
(bad)
in
add
pop
pop
lret
mov
sbb
and
jp
(bad)
stos
aas
or
decb
test
pop
stos
js
movsl
cs
scas
(bad)

shr
jb
imul
sbb
xor
fisubl
out
mov
shr
pop
shlb
xchg
cld
divl
sub
xorb
xchg
repnz
aad
loop
ja
jae
out
sub
pop
and
jno
xchg
in
inc
mov
sbb
jecxz
sbb
ret
iret
or
mov
daa
or
sbb
xchg
movsl
jecxz
push
ret
arpl
fxch
inc
fcoms
pop
(bad)
int
mov
push
loope
sub
or
adc
mov
ja
add
xlat
dec
cmc
into
inc
push
lods
pushf
sbb
imul
(bad)
and
pushf
adc
out
(bad)
push
or
cs
test
mov
fbld
test
mov
dec
cmpsl
mov
dec
int3
sub
adc
outsb
adc
sbb
jbe
adc
adc
mov
int
cmp
pop
int3
loopne
xchg
inc
das
gs
mov
adc
mov
lahf
pop
stos
push
out
hlt
out
call
pop
sahf
add
mov
adc
ret
dec
fistpl
outsl
fucomi
pop
rol
lods
and
cwtl
jo
int3
fsub
icebp
mov
mov
dec
(bad)
outsl
loope
adc
xor
push
ret
xchg
xor
movsl
cld
dec
lahf
ja
cmp
fbld
popf
inc
idivl
cmp
jmp
jg
(bad)
cmpsl
inc
nop

lahf
roll
sbb
xor
sarb
mov
push
ret
fnstenv
(bad)
push
and
aam
setae
iret
dec
out
cltd
call
jae
ss
dec
mov
imul
fidivrl
fidivrs
hlt
stos
pop
(bad)
adc
rcrb
lods
js
push
jb
leave
cld
(bad)
aam
aam
ja
(bad)
push
mov
jcxz
sub
sbb
rcrb
mull
cmpsl
shlb
dec
mov
imul
js
pop
js
and
in
repz
pop
mov
sub
(bad)
notb
int3
and
and
cmp
adc
mov
sbb
cmp
and
(bad)
xor
push
push
iret
pop
loope
mov
jg
mov
(bad)
iret
mov
cmp
push
scas
push
lods
movsb
arpl
push
es
jmp
hlt
add
addr16
adc
and
das
es
dec
sub
iret
sti
push
sbb
inc
sbb
add
sub
xchg
xor
mov
ljmp
nop

addb
(bad)

and
rorb
adc
push
mov
mov
cltd
scas
cmp
sbb
(bad)
(bad)
mov
cld
(bad)
jg
adc
and
stos
pop
mov
mov
addr16
cmp
insb
out
inc
mov
pop
stos
sbb
addr16
xchg
pusha
jne
scas
bound
mov
fwait

add
roll
decb
push
lds
jecxz
in
pop
jne
iret
lret
cmc
and
dec
call
xor
xor
mov
int3
(bad)
jge
aas
lods
bound
pop
addr16
test
int
push
test
mov
mov
mov
sbb
add
(bad)
jmp
outsl
mov
adc
lods
sub
mov
jmp
scas
ljmp
bound
mov
cs
mov
xor
pop
in
mov
xchg
sbb
cmp
sub
mov
arpl
add
stc
xor
dec
in
mov
outsb
mov
jb
and
shll
xchg
push
mov
pop
stos
mov
nop

test
jo
(bad)

fisttps
std
in
mov
push
lods
rcl
push
mov
ds
pop
jge
mov
or
jecxz
dec
adc
insl
sbb
add
in
les
or
hlt
fs
cmp
mov
and
ljmp
mov
jmp
cmp
cmp
mov
mov
ja
push
xchg
jg
test
xchg
push
(bad)
dec
push
repz
cwtl
arpl
pop
or
in
or
mov
mov
(bad)

fcmove
lret
test
daa
push
pop
cld
xor
fldt
(bad)
pop
add
add
add
out
mov
das
cltd
mov
pop
arpl
mov
push
and
inc
rcll
mov
pop
shrb
loop
popa
ss
in
pop
or
(bad)
dec
int
fs
adc
jp
mov
sahf
jbe
outsb
sbb
(bad)
sub
adc
mov
rorl
adc
test
sub
jp
insb
jnp
stos
test
xor
pop
sbb
inc
outsl
inc
cltd
scas
inc
cmpsb
insl
push
add
dec
rolb
pop
sbb
iret
sbb
sub
inc
lret
fs
es
or
fstps
(bad)
pop
or
jne
cmp
pop
enter
sub
adc
dec
(bad)
adc
mov
mov
mov
inc
xor
lahf
xorb
push
add
add
into
sub
dec
jmp
push
(bad)
movsb
out
rorb
xchg
clc
insb
xorb
ja
das
and
cwtl
push
mov
movsl
imul
add
dec
jmp
sbb
cli
ret
xchg
call
imul
inc
inc
cltd
fldt
cmp
fmul
mov
ljmp
lods
adc
setl
icebp
outsl
cmp
adc
bound
das
pushf
ficoml
push
mov
jnp
mov
pushl
arpl
xorb
jle
aam
mov
fsub
sub
mov
stc
(bad)
addr16
mov
mov
lds
and
jecxz
adc
rorb
inc
stos
stos
es
sti
aad
lahf
sub
cmp
lea
inc
ficoml
inc
cmp
lcall
pop
jmp
dec
es
ret
incl
outsb
push
xorb
nop

mov
add
(bad)
ja
and
mov
push
push
pop
adc
cmp
stos
arpl
orb
mov
adc
stos
fucomip
adc
fwait

out
dec
mov
mov
pop
mull
sub
adc
icebp
dec
mov
leave
js
adc
push
add
sahf
sub
cmpsl
dec
jecxz
fs
xorl
pop
xor
pop
xor
push
pop
dec
push
stos
scas
pop
les
lods
jnp
adc
sub
inc
inc
adc
es
jge
mov
mov
jecxz
in
xor
lock
and
(bad)
iret
std
cli
pop
push
push
in
repz
lds
es
xchg
insl
outsb
call
or
adc
andl
add
insl
ret
xor
(bad)
in
fsubrp
enter
jecxz
adc
sahf
sbb
xor
xchg
cltd
in
rclb
xor
lcall
mov
lahf
fs
push
adc
mov
dec
pop
ja
push
mov
sarl
movd
xchg
cld
fildl
and
fbstp
cld
push
hlt
pop
push
cwtl
(bad)
xor
cmp
outsl
sti
xchg
sbb
mov
xor
pop
inc
out
and
out
push
xor
push
cwtl
daa
nopl
mov
in
ss
inc
leave
stos
xor
cmp
mov
sbb
test
pop
jbe
sbb
cmp
es
mov
xlat
adc
cltd
mov
sbb
or
icebp
mov
pop
push
cmp
pop
add
lcall
in
sbb
or
negl
push
adc
xor
(bad)
jo
repz
(bad)
out
and
sahf
int
xlat
sbb
ljmp
jo
inc
psadbw
lods
mov
ret
mov
das
xlat
arpl
jmp
mov
add
or
mov
inc
mov
inc
ret
cmpsl
jo
imul
dec
and
push
xor
scas
jns
add
dec
sarb
mov
cmp
sbb
popa
(bad)
aas
or
inc
mov
(bad)
sbbb
adc
sbb
cli
je
mov
sbbb
icebp
mov
ret
ja
push
ljmp
or
xor
and
inc
out
fisubrl
fcompl
mov
push
cmp
jae
pusha
(bad)
xchg
fbstp
xrelease
fwait

mov
and
cmp
adc
shlb
arpl
add
mov
add
inc
addl
shrl
cmc
dec
ror
cmc
inc
(bad)
aam
(bad)
mull
and
repnz
push
(bad)
mov
cmp
and
pcmpgtd
ss
jns
push
ds
push
scas
pop
(bad)
fistpl
mov
dec
xchg
push
jle
pop
insb
int3
push
push
jb
addl
and
pop
or
cmp
sub
(bad)
iret
js
mov
xchg
jb
push
cmp
in
push
jb
negl
lcall
xchg
call
push
sub
xor
dec
scas
mov
add
test
scas
clc
das
adc
mov
cmc
aad
and
loop
loop
in
adc
les
iret
mov
adc
outsb
inc
sub
test
xor
dec
mov
jae
lods
pusha
arpl
and
imul
push
xchg
dec
mov
xchg
(bad)
pop
mov
adc
das
aad
out
or
lea
push
pop
mov
jp
out
xchg
push
lahf
lock
cs
push
cmpb
jmp
(bad)

roll
call
fildll
dec
adc
lods
push
fists
sub
repnz
xchg
mov
mov
fsubp
negl
lea
mov
sbb
fbld
leave
scas
stos
jo
xor
mov
mov
inc
test
jno
pop
gs
loope
mov
insb
xor
aam
add
xchg
jb
aad
aad
mov
mov
push
int3
mov
mov
(bad)
sbb
pop
loop
ret
pop
sbb
ret
test
in
fsubs
pushf
adc
jno
arpl
iret
mov
outsl
fucomip
xchg
push
inc
push
pushf
mov
arpl
stc
mov
repnz
add
xchg
push
int
jp
xchg
push
movsb
xor
ret
scas
dec
sub
test
sbb
jns
ss
adc
pusha
jnp
gs
push
cs
cmp
lret
inc
mov
mov
ja
xor
mov
jbe
inc
lods
pop
xchg
jp
cld
dec
xor
pop
ret
jg
pop
mov
nop

adc
popf
je
scas
or
ss
mov
(bad)
jo
mov
shr
mov
fisubrl
in
loopne
inc
mull
test
xor
mov
fs
mov
add
inc
lea
sti
(bad)
pop
pushf
jb
adc
repz
sub
jbe
imull
rcl
dec
or
lcall
and
add
or
fidivl
mov
and
mov
push
test
lea
or
(bad)
push
inc
cltd
xchg
dec
ret
or
cld
ljmp
out
sarb
xor
cmp
fildl
mov
idivl
andps
stos
adc
jp
int3
in
popa
test
xchg
jmp
in
icebp
inc
and
aad
lahf
adcb
pushf
or
in
or
stos
js
in
in
ja
mov
jg
ljmp
clc
(bad)
lret
js
pop
jae
cmc
xchg
add
js
(bad)
in
ja
sub
lea
repz
in
int3
hlt
xchg
out
das
sbb
out
pop
test
inc
ljmp
test
nop

int
mov
jns
pop
imul
iret
mov
negb
std
jno
lock
inc
mov
adc
push
rcrb
shll
paddb
sub
xchg
xchg
movsl
aam
test
lds
jne
test
or
dec
xlat
fistpll
pop
bound
pop
rcll
sarl
fucomp
xor
loop
pop
pop
or
xchg
sahf
pop
shl
pop
or
lock
adc
mov
add
cmp
sbb
mov
dec
adcl
pop
mov
popa
dec
and
test
dec
mov
inc
sub
bound
es
xor
jp
scas
push
dec
pop
in
mov
and
lret
loopne
pop
cmp
nop

mov
mov
pusha
inc
push
sub
lahf
jno
mov
and
mov
sub
cmp
push
xor
or
add
inc
xor
jmp
pop
addl
repz
addr16
inc
xor
stos
outsb
popf
push
(bad)
and
inc
sbb
std
jne
jb
lahf
lret
mov
ss
add
xor
xchg
sub
and
mov
sub
push
pop
mov
scas
or
lret
mov
fdivl
cmp
xchg
outsb
dec
xchg
lret
out
ljmp
fists
or
adc
jle
mov
addr16
in
gs
repz
ja
inc
movd
pop
ja
mov
lret
add
jg
int
add
add
mov
jns
xchg
dec
pop
jbe
fiaddl
pop
adc
add
loope
cwtl
mov
cmp
and
rolb
ja
test
les
scas
cmp
sub
movsb
add
dec
mov
inc
mov
mov
jecxz
imul
sub
aad
(bad)
rorb
movsb
aas
inc
mov
cmc
cs
and
fnstsw
add
jp
test
lahf
mov
fwait

mov
js
popa
stos
subb
dec
inc
aas
mov
cmp
lds
negl
outsb
rorb
shlb
add
add
xchg
popa
xor
aam
jne
scas
adc
push
in
loopne
cld
mov
call
aam
xchg
in
xor
lret
add
adc
leave
daa
mov
into
xchg
sbb
aaa
sub
movsb
(bad)
cmp
pop
cmp
xor
repz
xor
xchg
mov
mov
push
jecxz
out
in
mull
xor
pushf
data16
out
scas
sub
into
xor
(bad)
xchg
pop
and
or
mov
clc
sub
pushf
mov
addb
jg
mov
shll
popf
das
xlat
adc
jg
pushf
jecxz
mov
xor
pop
inc
fs
push
push
movsb
inc
pop
cwtl
adc
outsb
inc
stc
inc
xchg
in
push
addl
addr16
sbb
jns
jge
mov
add
jbe
jp
add
mov
mov
push
nop

shrl
repnz
mov
out
cmp
ret
mull
scas
inc
ja
(bad)
scas
jp
adc
push
ret
fistpll
(bad)
xchg
andl
adc
push
pop
into
pop
ljmp
xchg
push
sub
sbb
and
outsb
ret
out
jnp
out
mov
iret
xlat
jb
stc
inc
adc
sbb
or
sti
sbb
add
mov
xchg
test
fldcw
mov
test
pushf
pop
testb
fidivs
mov
mov
aam
imul
push
pop
xor
and
aaa
insb
out
cmpsb
leave
daa
enter
sbb
into
xchg
sbb
dec
sti
inc
mov
and
mov
js
fs
jg
xor
in
sub
mov
mov
cmp
push
and
pop
lods
pop
sbb
mov
imul
pop
fildll
xorl
mov
inc
insb
cwtl
es
lcall
xchg
insl
mov
push
pop
mov
loop
inc
out
and
inc
inc
insb
std
cmpsb
xlat
sti
adc
(bad)

ficompl
jo
mov
(bad)
jo
in
out
push
pop
cmp
out
pop
mov
test
mov
mov
push
sbb
outsb
js
stos
fwait

jno
and
jl
(bad)
decl
xor
fdivl
rcrl
pop
nop

sbb
test
cld
mov
popa
push
adc
sbb
sbb
jle
cmp
dec
dec
ja
pop
sahf
mov
adc
inc
sub
lods
in
or
pop
mov
fwait

cld
xchg
mov
jb
out
jo
cmp
jg
add
(bad)
mov
xchg
mov
icebp
add
idivl
(bad)
jne
lret
or
fsubrl
arpl
or
hlt
fildll
dec
ret
or
cmpsb
sub
mov
inc
pushf
push
test
lahf
movsb
pop
stc
add
mov
call
fbstp
iret
cmp
fidivs
xlat
int
jge
adc
popf
inc
iret
sahf
sbb
movsl
(bad)

popa
xor
inc
test
(bad)
adc
mov
or
rcr
mov
loopne
xchg
iret
cmp
jl
xchg
fucomip
mov
ljmp
pop
pmaxub
aas
jno
mov
push
jle
lock
xchg
jae
mov
pop
cwtl
mov
push
or
mov
mov
adc
ficomps
mov
sbb
mov
andps
push
cltd
add
or
ret
push
cmp
sbb
mov
push
dec
mov
mov
out
pushf
mull
push
out
cmp
cmp
xor
push
dec
arpl
(bad)
cltd
lret
mov
jecxz
add
popa
and
ficompl
sub
dec
loop
ret
notb
adc
push
lahf
jmp
jns
imul
outsb
fsubrp
jns
mov
cli
cwtl
ja
(bad)
mov
ret
jns
xchg
lcall
sub
out
and
push
std
idiv
in
dec
push
std
mov
out
or
cmp
dec
and
fbstp
imul
shl
push
int
sti
xlat
mov
push
dec
sub
mov
cwtl
lretw
cmp
mov
fstl
fistl
loop
popf
shrb
data16
insl
push
cmp
or
les
xchg
jg
cmp
mov
fldt
sub
pusha
dec
inc
add
lret
and
aad
ret
cmp
clc
push
cli
sbb
hlt
sbb
push
gs
mov
flds
in
lea
mov
xchg
add
leave
xchg
fnstenv
stos
lcall
aam
cmc
in
push
aas
fildl
outsl
sub
(bad)
gs
das
gs
lock
xor
and
jnp
push
rcl
ja
pop
pop
mov
sbb
xchg
jl
and
out
jno
insl
mov
xchg
(bad)
mov
add
pop
dec
push
dec
sbb
mov
mull
sbb
cs
repz
push
and
into
fdivs
(bad)

movhps
and
and
push
sub
jne
xchg
rclb
addl
xlat
outsb
nop

ljmp
lods
cmp
xor
cld
into
cmp
mov
add
test
jno
bound
pop
fstpt
xrelease
mov
lock
mov
ljmp
and
and
popf
jnp
scas
outsb
mov
add
push
adcb
mov
jnp
hlt
lds
xor
and
push
xchg
sub
mov
mov
sbb
movsl
pusha
ljmp
jmp
jge
cmp
imul
rclb
lahf
in
mov
adc
add
dec
jne
cld
mov
nop

mov
seta
push
notl
repnz
fs
dec
add
push
idivl
(bad)
or
ja
mov
mov
mov
jno
movsb
int3
out
test
xlat
fsubrl
pop
or
xor
xchg
stc
inc
xchg
push
xor
jecxz
pop
sub
push
sbb
out
std
stc
lret
xor
stos
cld
ret
push
aam
jg
dec
es
data16
pop
addl
(bad)
dec
xor
inc
es
idivl
xchg
jecxz
dec
push
mov
xchg
ficompl
sub
loopne
in
call
arpl
lods
cli
cmpsb
out
sub
fisubs
sub
out
ret
mov
mov
push
adc
bound
stos
inc
stos
pop
aas
mov
popa
xor
push
les
daa
pop
jg
sbb
sbb
xchg
js
(bad)
fs
jg
pop
inc
or
ja
in
cmpsb
cmc
sbb
out
clc
jle
loope
fistps
lcall
inc
pop
shll
imulb
imul
fildl
in
repz
jns
xchg
pop
sbb
int
imul
add
rcrl
push
gs
xchg
out
push
call
aad
stos
les
mov
inc
mov
adc
xor
popf
jne
mov
xor
mov
out
inc
mull
pushf
mov
jecxz
sub
cmc
cmpsl
loop
xchg
fs
lods
loop
test
jno
and
sti
fisubs
jo
fisttpll
jp
and
dec
setae
test
push
bound
add
std
cltd
bound
enter
mov
ds
(bad)
out
int3
lea
clc
in
imulb
inc
lret
cmp
fiadds
cmc
push
out
arpl
imul
jmp
push
xchg
sbb
push
in
lret
dec
bound
mov
jns
orl
dec
loop
test
push
enter
push
lea
mov
dec
fadd
cwtl
cld
stos
xchg
lods
push
iret
dec
push
sbb
pop
mov
loopne
sub
(bad)
jg
int
fwait

xor
jge
div
jns
test
jno
lret
jb
js
pop
outsl
mov
roll
xor
insl
ljmp
dec
mov
mov
mov
mov
aam
fisubrl
adc
test
mov
adc
mov
mov
mov
testl
jmp
add
leave
out
lret
adc
sub
stos
rcrb
xchg
push
sbb
test
movsb
xchg
clc
cld
xor
jno
jmp
(bad)
in
sbb
sti
inc
arpl
dec
sbb
cmpb
xor
push
push
out
push
pop
cmp
(bad)
arpl
pop
push
jecxz
mov
xorb
icebp
mov
loope
in
imul
and
aaa
cltd
mov
adc
push
and
pushf
ja
dec
in
jno
jmp
ljmp
scas
(bad)
rorb
pop
test
adc
rol
scas
mov
adcb
jmp
jnp
mov
in
cmp
push
xorb
mov
jno
jmp
(bad)
or
lahf
cmpb
mov
popf
xchg
xchg
les
mov
shll
in
xchg
test
roll
mull
mov
jmp
inc
inc
orl
test
xor
sub
adc
out
idivl
roll
jae
pusha
stos
(bad)
sub
ss
add
sbb
cwtl
pop
stos
add
fisttps
cmpsb
mov
in
cmp
data16
push
push
inc
fcom
(bad)
add
test
add
add
pop
add
jmp
lods
or
pop
xchg
sbb
xor
sbb
mov
loopne
mov
mov
lods
sbb
dec
orb
cmp
popa
adc
fstps
dec
mov
cmp
jp
inc
test
adc
pop
or
(bad)
mov
sub
mov
(bad)
push
push
test
cmp
mov
cmc
jg
out
adc
or
jns
jp
loopne
adc
jecxz
push
and
das
addl
lods
rclb
pop
mov
inc
mov
add
sub
iret
mov
mov
lahf
pop
loop
test
(bad)
mov
(bad)
imul
insl
mov
xchg
sbb
out
xor
negb
iret
add
out
cld
std
and
movsl
scas
shrb
mov
hlt
insb
mov
in
push
bound
cmp
cmpsb
cli
andb
pushf
adc
lea
pop
fwait

jecxz
movsb
mov
arpl
lahf
ja
sbb
shr
out
mov
or
push
in
xchg
sbb
lods
mulb
xchg
lret
test
add
aas
(bad)
scas
fwait

mov
btcl
mov
xchg
push
cli
ret
imul
adcb
test
jae
inc
mov
xchg
push
adc
cld
cltd
dec
mov
cmpsb
xchg
ret
push
ret
mov
ret
lret
sbb
cli
or
popa
shlb
repnz
xor
cmpsl
adc
loopne
addr16
cwtl
mov
lods
fisttpl
fwait

xchg
sub
inc
mov
fwait

and
add
pop
pop
das
in
mov
loop
rcrl
add
adc
je
(bad)
lahf
mov
add
sub
in
pop
stos
fdivl
lds
jo
sbb
adc
call
setae
call
(bad)
aas
add
push
push
ret
sub
int3
insb
push
idiv
enter
add
mov
call
add
xchg
loop
xlat
out
or
mov
mov
dec
stos
fcmovu
push
stos
or
test
push
(bad)
mov
adc
mov
push
add
call
loopne
arpl
rorl
pop
mov
hlt
shll
xchg
cmpsl
inc
mov
imul
adc
mov
dec
sbb
mov
fldt
mov
adc
pop
in
idivb
int
mov
out
test
shlb
and
rcl
pushf
jecxz
insl
xor
push
paddusb
push
and
inc
xor
inc
jb
in
movd
cmpsl
pushf
out
mov
cld
mov
leave
daa
or
sub
push
pop
fsubl
xchg
fildl
add
inc
mov
cwtl
scas
in
pushfw
and
mov
lods
nop

jb
push
mov
cmp
out
fiadds
popa
cwtl
das
(bad)
out
aas
(bad)
xlat
pop
shll
jmp
push
test
outsl
fbstp
mov
dec
xchg
cli
push
mov
add
rcrb
inc
imul
xchg
out
sub
fadds
inc
(bad)
adc
fistl
inc
insl
lea
rcr
adc
xor
add
in
jmp
cwtl
jne
xchg
imul
mov
jo
lea
or
inc
iret
mov
das
mov
sub
push
(bad)
pushf
mov
inc
(bad)
jo
mov
jl
xchg
sti
mov
addr16
out
cmp
sub
and
out
jnp
fldt
pushf
cmp
sub
and
(bad)
ljmp
ret
sbb
push
scas
mov
out
loopne
inc
sub
xor
and
add
push
(bad)
cld
enter
mov
fsubrs
jbe
in
pushf
or
imul
pop
lock
arpl
in
push
lea
cmp
je,pt
push
cmc
sub
mov
push
aam
mov
hlt
pop
mov
mov
mov
mov
push
xlat
sub
mov
les
out
test
into
call
addb
sbb
pop
push
ljmp
in
dec
(bad)
into
in
xchg
call
cmp
fs
scas
mov
adc
rol
(bad)
cmp
adc
mov
cmpsb
sbb
out
sbb
push
push
sbb
mov
dec
and
into
pushf
mov
gs
aad
sbb
jg
mov
jae
pusha
pop
cmp
lret
dec
jle
pusha
mov
push
cmpsl
stc
mov
lret
mov
js
mov
fnsave
push
(bad)
aad
push
xor
fsubrp
divl
fidivrl
mov
mov
pop
xor
jg
push
into
imul
dec
adc
ret
in
sarb
pop
jg
cmpsb
jl
and
mov
out
cmpsl
repnz
cmp
jno
repnz
(bad)
sbb
je
dec
push
mov
sub
dec
sub
pop
fucomi
idivl
in
aad
aaa
pop
adc
cvtps2pd
outsb
in
out
push
mov
ficompl
mov
mov
sbb
mov
gs
mov
lods
lcall
(bad)
cmpsb
inc
loop
pop
xchg
cmpsb
xchg
jle
cmp
push
out
mov
adc
jg
mov
sahf
iret
or
repnz
add
inc
jns
hlt
lods
jo
ret
and
sbb
loope
mov
adc
adc
sbb
in
inc
pop
dec
cmpb
loopne
ljmp
push
inc
aad
shll
test
or
rcl
outsl
adc
and
lahf
inc
mov
xchg
sub
das
movsb
sbb
add
(bad)
cmp
aam
ljmp
add
cmp
popf
insl
inc
cltd
in
mull
add
sub
mov
cmp
and
and
mov
iret
pop
ss
sbb
and
add
lock
in
add
mov
test
outsl
mov
repnz
sahf
fbld
mov
push
bound
aad
lret
xchg
adc
mov
mov
jg
xor
jo
sbb
jno
pop
dec
inc
sbb
cmp
inc
ss
jp
push
xor
pop
xchg
les
jno
fsubs
lahf
push
pop
or
xchg
xor
jp,pn
jb
out
fidivrl
jg
insl
mov
lds
lods
int
lret
inc
mov
or
shll
in
sbb
fs
mov
mov
rorb
bound
sbb
dec
xchg
adc
mov
call
sbb
aas
mov
sub
lret
xchg
xor
(bad)
fistpll
sbb
mov
scas
ljmp
cmpsb
mov
jg
dec
in
cmp
ljmp
hlt
fwait

mov
call
push
(bad)
rclb
mov
add
pop
aaa
fildl
addl
pop
dec
mov
adc
nop

scas
mov
arpl
pop
sub
ja
popf
fisttps
mov
loope
sub
and
xlat
mov
inc
pushf
ljmp
movsl
mov
adc
out
sub
int3
int3
dec
sbb
fimull
pmaxsw
arpl
jb
and
movsb
pop
clc
imul
push
jmp
punpcklwd
cmp
aas
jns
mov
gs
fwait

ds
into
popa
ljmp
inc
xor
mov
divl
mov
xor
xorb
in
(bad)
mov
fsts
push
lods
sbb
push
les
jg
lock
enter
out
aas
add
mov
popf
outsb
inc
and
or
sbb
mov
les
fbstp
ret
les
push
sub
in
push
push
pop
(bad)
mov
into
sahf
ljmp
popa
jno
mov
arpl
insb
jle
dec
mov
add
jb
(bad)
addr16
xor
dec
out
or
xchg
in
loopne
mov
mov
xchg
test
or
cmp
mov
and
add
decl
out
mov
xchg
fwait

cmp
fldenv
jb
mov
repz
in
nop

inc
cmpsl
out
outsb
stc
fstl
push
mov
divl
or
fnstsw
dec
clc
mov
cmpb
call
out
rcrb
leave
scas
mov
xor
and
and
add
test
leave
cld
adc
jne
imul
outsl
aas
cmp
push
ret
mov
cmp
jo
sbb
jbe
mov
push
shl
push
ja
add
push
loop
and
stos
cmp
nop

dec
lock
inc
push
int3
ficompl
rcrb
inc
fcmovnu
lahf
and
adc
mov
fwait

in
aaa
movsl
or
pushf
scas
mov
bound
cmpl
lcall
mov
sub
add
add
shrl
rcrl
sbb
and
and
dec
mov
in
inc
inc
pop
in
cltd
outsl
cld
icebp
cmp
fcoml
sbb
add
and
mov
jle
mov
cs
mov
add
fstl
mov
aaa
adc
or
into
movsb
adc
lcall
adc
clc
adc
cmovg
or
sahf
data16
jb
pop
sahf
inc
add
adc
addb
dec
inc
cmpsl
fwait

mov
stos
xor
lahf
fmul
clc
mull
loop
repz
lods
or
(bad)
(bad)
lods
insl
iret
(bad)
cmp
dec
mov
fisttpl
push
mov
fcom
idivl
xchg
lcall
push
repz
add
fisttps
dec
mov
cld
subb
mov
xor
adc
mov
scas
fisubrs
xchg
pop
int
mov
push
fsts
add
xchg
arpl
cmpsl
sbbl
mov
(bad)
sub
mov
sbbb
(bad)
xlat
push
outsb
test
xor
xchg
dec
inc
xorl
add
inc
lock
push
xchg
std
gs
mov
cmp
dec
xchg
push
xorb
(bad)
ds
out
cld
mov
aam
loope
mov
data16
sub
push
inc
jbe
ficomps
stos
shll
xchg
repz
lds
out
sbb
and
outsb
scas
push
repnz
stos
icebp
inc
pop
in
mov
add
stos
adc
lock
(bad)
ja
xchg
cwtl
mov
push
sbb
or
mov
in
outsl
adc
and
mov
cld
lea
out
cld
ret
into
nop

shll
data16
lret
repnz
inc
(bad)
xchg
ret
and
xchg
std
push
in
mov
call
sbb
xchg
dec
fst
and
out
ss
or
ret
mov
xchg
arpl
ret
lret
repz
push
enter
fwait

daa
mov
mov
movsb
jmp
das
mov
mov
mov
lods
adc
mov
ror
lahf
mov
test
adc
pop
out
int3
sbb
std
push
mov
mov
or
jnp
(bad)
stos
adc
jecxz
scas
push
cltd
(bad)

test
into
(bad)
leave
push
mov
pop
xor
jl
negl
and
pop
pop
loope
xchg
or
sbb
dec
dec
lahf
repnz
in
sbb
ret
aad
cmp
leave
gs
mov
mov
push
movsb
mov
test
mov
mov
or
or
mov
pand
imul
jo
shrb
jnp
scas
mov
push
ret
enter
dec
andl
dec
sbb
mov
insb
xchg
ret
cmp
adc
xor
sbb
add
mov
into
(bad)
pop
mov
loope
pop
mov
jg
adcl
jnp
jbe
pop
add
or
adc
fs
stc
shlb
popaw
insb
or
xchg
inc
je
mov
pop
les
push
and
push
adc
pusha
scas
inc
or
cmp
cmp
sbb
lods
call
cmpsb
adc
dec
ret
outsb
sub
mov
pop
pop
xchg
push
add
xor
mov
lds
arpl
test
jmp
push
int3
insl
mov
lcall
psrld
nop

sbb
mov
jne
and
cmp
jmp
popa
ja
adc
adc
mov
jecxz
fisubl
les
or
bound
outsl
dec
ljmp
(bad)
push
pop
pop
incl
pop
mov
push
push
fcomps
scas
mov
inc
shrb
add
inc
test
movsb
push
push
popa
jnp
adc
mov
fiaddl
xchg
jmp
mov
push
(bad)
xor
xchg
push
mov
add
mov
shl
push
jno
jbe
and
movsl
mov
pop
in
sbb
out
xchg
add
icebp
mov
(bad)
jno
sbb
cwtl
dec
push
dec
adc
cmp
aas
mov
jge
xchg
xchg
xchg
and
adcl
pushf
leave
cld
(bad)
mov
push
gs
in
inc
cwtl
andb
nop

ror
xor
and
cmp
or
in
movl
(bad)
scas
outsb
xor
mov
mov
xor
add
clc
in
les
shll
lock
insb
sub
cld
enter
inc
jp
fmull
cltd
data16
fsub
faddl
jmp
ret
ss
out
mov
pop
out
rcrl
push
into
(bad)
je
dec
ljmp
jne
cmp
in
outsl
je
cld
jb
cmpsb
ja
adc
mov
enter
clc
xor
pushf
or
push
scas
fs
loope
or
add
mov
shlb
rcll
mov
pop
cwtl
inc
jmp
popl
adc
mov
mov
stc
test
ja
pop
pop
sub
jnp
orl
cmp
push
jmp
iret
aaa
push
decb
mov
pop
into
mov
jl
or
cmp
aaa
dec
test
and
xchg
mov
into
cmp
nop

sub
cmpsl
mov
cmp
negb
cmc
jbe
cld
call
xchg
loop
mov
pop
xchg
out
popa
sbb
pop
aaa
sbb
adc
into
in
sub
jns
xor
(bad)
jo
xor
fs
pop
or
adc
and
cmp
mov
rolb
mov
out
nop

in
pop
sbb
add
jecxz
mov
xor
xchg
shlb
mov
push
pop
inc
push
(bad)
push
cltd
fistpl
test
dec
ret
in
fldt
icebp
mov
mov
imul
and
lahf
mov
into
add
pop
cmp
xchg
je
int3
inc
lret
xchg
mov
ja
fnsave
addl
jmp
mov
pop
sub
jecxz
push
mulb
lea
mov
or
sub
scas
cmpl
testl
js
sbb
jle
sub
mov
fistps
sbb
jo
pop
jl
int
lahf
icebp
test
pop
push
inc
(bad)
fcompl
out
dec
sub
movsl
cmc
jg
pop
bound
lahf
jno
dec
lods
js
cmp
popl
popf
ja
ds
aas
cmc
push
fs
mov
lcall
cli
cmp
pop
inc
imul
push
bound
scas
xlat
mov
loopne
arpl
mov
stos
rolb
add
idiv
adc
cmp
pop
addr16
xor
push
inc
aam
loop
pop
jns
ss
inc
jb
pushf
fidivs
aas
daa
add
push
adc
and
nop

and
mov
jmp
loopne
mov
sub
inc
jecxz
testb
icebp
or
out
inc
cmp
fsubl
inc
fisubrs
les
xor
jge
mov
(bad)
loope
or
(bad)
sbb
fimuls
jnp
stos
es
sarl
scas
test
loope
push
cmp
(bad)
lahf
dec
ss
aas
and
aas
sarl
mov
adc
(bad)
js
stos
dec
inc
faddp
in
addr16
shrl
in
inc
mov
das
stos
add
fistps
push
or
xor
adc
cmc
pop
adc
pop
inc
addr16
add
test
mov
cltd
inc
adc
pusha
int
xchg
jecxz
sub
cmp
nop

in
pop
and
rep
push
sahf
insl
outsl
fistps
sbb
adc
pop
add
jge
shlb
push
inc
jae
orl
gs
mov
mov
andb
pop
shll
cmpsl
addr16
pop
shlb
arpl
enter
mov
jle
out
cmp
fwait

xchg
stos
icebp
cmpsb
lret
and
shr
out
mov
test
jae
jno
dec
xor
cli
mov
jecxz
pop
add
or
sbb
adc
mov
inc
pushf
insl
push
mov
imul
movsl
mull
test
fs
add
out
adc
push
pop
jmp
sti
xchg
pop
mov
call
les
xchg
xor
and
push
mov
shl
pusha
scas
mov
addr16
cli
mov
jecxz
or
dec
adc
add
xchg
ficoml
fnsave
(bad)
xor
sub
gs
pop
arpl
push
insl
adc
cmp
pop
ficompl
(bad)

in
roll
mov
cmc
xchg
out
repnz
imul
aam
fs
leave
sbb
sbb
dec
add
cld
and
mov
xchg
ja
adc
(bad)
les
insl
ja
adc
xchg
cmp
push
and
lods
enter
lahf
scas
adc
(bad)
divl
flds
test
and
mov
xchg
iretw
adc
outsb
xor
cmp
sub
xchg
pushl
fisubrl
and
jo
repnz
mov
int3
inc
aad
cmpsb
sub
mov
sbbl
les
std
jge
fistpl
test
add
mov
mov
jbe
mov
or
pop
aaa
out
inc
xchg
adc
cld
testb
or
je
sbb
imul
leave
cmp
cmp
mov
jb
or
push
mov
sub
mov
push
and
cmpsl
testl
sbb
and
mov
push
jle
sub
test
sbb
leave
add
daa
int3
add
bound
jbe
and
adc
into
mov
mov
div
inc
cmpsb
dec
movsb
and
ljmp
test
cmp
lds
(bad)
xchg
(bad)
or
rcrl
dec
in
iret
dec
xor
cli
push
data16
add
sahf
sbb
mov
nop

fidivrs
(bad)
stc
ljmp
add
push
(bad)
in
in
(bad)
in
or
mov
int3
cmp
add
xchg
or
inc
and
incb
pop
fmull
sbb
xchg
lds
mov
jle
xor
aam
sub
xchg
or
fldl
and
add
dec
(bad)
enter
ljmp
xor
in
jmp
mov
mov
call
nop

rcrl
cmpb
adc
push
into
mov
or
imul
test
cld
call
or
out
cmp
xchg
mov
(bad)
insl
mov
mov
pop
fwait

call
xor
repnz
div
mov
std
adc
jb
es
inc
xor
and
aam
ficoms
test
pop
lods
mov
pop
cwtl
xor
out
sub
adc
mov
mov
fisttps
add
mov
xchg
adc
(bad)
mov
(bad)
xor
sbb
movd
pop
cmp
push
orl
mov
(bad)
and
data16
ja
sbb
dec
mov
jmp
sbb
test
ljmp
sub
(bad)

xchg
mov
pop
and
ss
ret
xchg
mov
dec
int
push
pop
imul
mov
jbe
fninit
xchg
mov
test
mov
imul
mov
and
test
sbb
dec
cmp
out
push
mov
dec
scas
lahf
or
movsl
xchg
loop
mov
add
dec
sarl
out
ss
ja
jp
lea
dec
push
push
or
adc
es
sahf
lods
cmp
int3
jbe
icebp
rclb
lea
in
aam
cmc
or
test
add
mov
call
bound
aad
xchg
lahf
pushf
loope
inc
ja
adc
fiadds
imul
jge
xchg
sbb
dec
sbb
incl
es
and
add
mov
insl
(bad)
lods
jae
mov
xor
cmp
outsb
push
xor
mov
popf
xor
arpl
fistpl
sti
fmul
popf
enter
add
push
mov
mov
xchg
lcall
or
pop
mov
cmp
inc
arpl
lods
mov
imul
adc
jo
dec
xchg
adc
(bad)
bound
cmc
pop
fisttps
test
lret
pushf
data16
rcl
fildll
test
pop
mov
cmp
and
ljmp
fsubrs
cld
dec
adc
sub
rclb
sbb
or
cltd
fistpl
dec
lds
cmpb
xchg
pop
cld
pop
roll
mov
dec
lods
mov
add
in
imul
jecxz
adc
dec
stos
and
push
fs
xchg
cs
aas
mov
es
dec
xor
xchg
xchg
testb
dec
lcall
inc
lods
jg
aad
insl
daa
aas
or
mov
fs
pop
add
mov
push
add
and
fcompl
and
out
jmp
outsb
into
mov
fnsave
lret
(bad)
pusha
nop

adc
ret
enter
mov
repz
ja
insb
aaa
into
add
fstp
jge
aam
add
in
lcall
addr16
out
test
push
orl
mov
rcrb
sbb
xlat
xor
add
pop
xor
mov
loopne
jmp
mov
sub
fimuls
fdivrs
rol
or
sbb
push
fistpl
and
push
pushf
cmp
xchg
pop
sar
rcll
or
pop
out
lret
loope
mov
ds
mov
pushf
js
pop
xchg
push
(bad)
repnz
inc
push
out
push
lret
stos
jbe
cwtl
loop
les
(bad)
repz
and
mov
or
and
xchg
push
xchg
pop
adc
shl
es
pop
xor
xchg
out
je
push
repnz
dec
dec
roll
xchg
lds
xchg
mov
aam
xchg
or
adc
pop
lcall
loopne
mov
mov
xchg
xlat
pushf
jmp
(bad)
xor
clc
lea
adc
movl
sub
ret
movsl
sti
call
fmulp
jbe
jae
xor
dec
nop

das
cmp
pop
mov
aam
sub
xchg
jge
jecxz
insl
int3
mul
clc
in
pop
nop

push
inc
cmp
sbb
mov
inc
or
sub
test
std
inc
or
aaa
pop
sbb
xchg
inc
sbbb
test
jnp
cmp
push
or
push
cmp
frstor
and
fcoml
mov
outsb
lds
pop
add
insl
add
jecxz
mov
cmp
mov
lds
sub
mov
push
mov
pop
pop
adc
sti
mov
or
bound
and
loop
repz
xchg
sub
lahf
ficoms
mov
incb
xchg
xchg
fadds
stc
aam
sahf
inc
scas
leave
pusha
cmp
xor
inc
shl
mov
mov
sub
dec
int3
iret
lea
adc
xchg
inc
mov
cmp
aad
shl
aam
pop
mov
push
(bad)
insb
dec
push
xchg
out
lea
xchg
iret
(bad)
push
sti
xchg
(bad)
in
mov
jo
dec
adc
jg
repnz
adc
loop
cs
mov
or
xchg
cwtl
insb
in
pop
add
sbb
call
pop
icebp
leave
imul
ret
xor
fwait

cmp
add
test
in
and
push
or
daa
inc
mov
arpl
es
enter
loopne
cli
mov
inc
mov
daa
sbb
dec
pop
push
pop
xchg
sbb
cmp
lods
jg
xor
je
jle
sbb
jnp
or
dec
stos
push
add
cld
mov
pusha
je
dec
es
jge
cmpsb
jp
pop
push
insb
jecxz
xchg
dec
pop
cmp
pop
mov
repnz
sub
notb
mov
cld
outsl
loopne
sbb
jecxz
dec
nop

mov
jg
adc
mov
dec
and
or
pop
nop

bound
jecxz
push
xor
rcrl
setae
or
and
dec
cmpsb
mov
gs
sbb
mov
into
cmp
adc
pop
clc
repnz
fisubl
jne
imul
lea
dec
test
js
aas
lcall
mov
xlat
fs
inc
jecxz
hlt
inc
(bad)
xor
jo
cmp
add
out
dec
jmp
ret
(bad)
(bad)
bound
and
xchg
cmp
add
outsb
xor
cmp
nop

mov
jg
pop
xchg
pop
les
inc
mov
jmp
jg
xchg
push
jno
xor
and
lock
pop
bnd
int3
call
jmp
push
in
pop
mov
fstpl
int3
mov
out
rcll
int
mov
jae
pop
fstpl
xor
and
lds
in
mov
jp
jle
rorl
or
sbb
fiadds
or
adc
ret
cmp
mov
int
ficompl
ret
stos
xor
mov
pop
(bad)
lret
dec
jge
out
pushf
xlat
aad
loop
mov
cmpsb
out
test
fstpt
sar
jbe
cltd
imul
cmp
bnd
lcall
imulb
neg
jmp
jmp
or
adc
and
or
out
xchg
loope
(bad)
dec
loop
lcall
xchg
mov
add
jb
dec
cmp
enter
outsl
lcall
or
out
mov
adc
mov
popf
rcrl
loopne
scas
dec
psubsb
shl
test
adc
jp
int3
xor
test
out
or
mov
ds
mov
rcrl
test
push
push
sbb
idivb
inc
cli
ljmp
xchg
pop
call
(bad)
and
xchg
fsts
(bad)
xor
pop
lret
std
fimull
out
add
movsb
push
adc
cmpsl
or
cwtl
xor
mov
insb
pop
jns
scas
movsl
mov
addb
imul
std
jbe
push
ds
xchg
jg
mov
mov
in
ljmp
lahf
adc
in
or
and
jg
mov
mov
xor
jne
mov
xchg
cltd
pop
sbbl
adc
lahf
stos
addb
imul
(bad)
pop
jg
cmp
and
mov
lock
push
movsl
pop
mov
call
jg
push
movsl
popa
mov
push
ficompl
xlat
ja
mov
fisubrs
imul
xlat
das
out
jbe
hlt
imul
repnz
lock
cmp
sbb
mov
sti
data16
pusha
lods
mov
loope
sbb
cli
negb
es
mov
pushw
lahf
and
movsl
bound
call
cmp
cmp
pop
sarb
mov
push
iret
loopne
mov
(bad)

jg
jle
lret
adc
lods
dec
or
add
stos
adc
lret
cmp
out
fwait

adc
pop
lahf
ja
xchg
cmpsb
cmp
cli
les
pop
fdivr
or
mov
cmp
or
mov
jl
lea
(bad)
jo
push
jb
scas
hlt
cld
dec
push
adc
xchg
pushf
cmpsb
sbb
xchg
push
iret
pop
stos
sub
popf
insb
(bad)
ljmp
add
mov
rorb
mov
jb
cmpsb
in
stos
rorb
add
push
lods
pop
shlb
mov
mov
and
cmpsl
ds
ss
in
data16
push
jecxz
(bad)

xor
mov
rolb
dec
push
pop
cwtl
mov
mov
hlt
cmp
push
stos
shl
leave
mov
sub
mov
sub
in
loop
cmpsl
(bad)
lods
outsb
sub
sbb
sbbb
sub
push
jg
inc
pop
cmp
or
push
mov
shrb
push
cmpsb
pop
and
sub
jl
iret
bound
(bad)
aaa
inc
outsl
mov
lret
xchg
jmp
push
push
movsb
lock
arpl
test
dec
popf
bnd
jmp
add
pop
push
movsb
xchg
dec
push
(bad)
(bad)
into
pop
(bad)
cmp
sub
mov
inc
sbb
popa
xor
test
fcmovu
and
sarl
jecxz
mov
jae
push
jo
xchg
add
cltd
add
xchg
dec
int
(bad)
jo
push
or
cs
xchg
cld
dec
arpl
inc
inc
sub
dec
mov
aad
clc
dec
js
test
mov
xor
lods
mov
cltd
and
out
adc
mov
mov
pop
mov
and
int3
ljmp
mov
es
dec
adc
add
ja
pop
shlb
lret
lahf
fisttps
bound
rclb
mov
and
dec
aaa
(bad)
lahf
adc
sub
or
mov
sbb
notl
fs
cmp
jno
cld
sbb
mov
std
sub
mov
pop
xor
mov
pop
(bad)
out
out
push
ja
inc
addr16
hlt
xchg
(bad)

mov
lahf
iret
pop
jg
data16
jbe
fsubrs
mov
xchg
pop
cmpsl
out
xor
(bad)
ljmp
das
jg
je
mov
sub
(bad)
sbb
sub
int3
sbb
xor
mov
xchg
aas
and
insb
popa
das
jg
lea
(bad)
lods
xchg
andb
push
push
dec
addr16
hlt
call
out
rcrb
cmpsb
mov
mov
out
mov
mov
out
sub
xchg
test
movsl
sub
ret
loop
(bad)
lret
(bad)
push
popa
dec
xorb
out
jp
cld
fsubrp
pop
sbb
ficomps
xlat
pop
inc
sub
mov
ljmp
fldcw
sub
arpl
and
xchg
xor
xchg
in
inc
dec
sbb
jp
pop
ficomps
mov
push
xor
int3
mov
inc
js
dec
lcall
es
lods
and
mov
dec
ljmp
aas
test
loop
data16
mov
jle
sbb
sbb
stc
inc
aas
inc
xor
push
call
or
in
pop
into
jno
(bad)
and
push
sub
repz
ret
iret
movsb
push
mov
loope
clc
dec
mov
cmp
(bad)

ljmp
call
cmpsl
cmpsl
aas
adc
int
mov
cmc
test
and
xchg
pop
loope
pop
add
cmp
(bad)
mov
fstpl
push
jns
mov
mov
or
xchg
push
xor
xor
mov
add
pop
add
cld
scas
xor
icebp
ficompl
xorl
movsb
fs
mov
movsl
outsl
jg
je
push
ficoml
sbb
mov
in
mov
pop
sahf
lahf
ja
ja
andb
push
dec
mov
clc
std
(bad)
repnz
out
push
call
fstp
push
mov
inc
lds
cmp
fildl
data16
mov
mov
inc
into
mov
fdivl
jo
cmp
fnstenv
xchg
mov
jno
add
mov
add
shlw
cmp
push
push
iret
cmp
ficomps
shrb
mov
mov
xchg
loopne
clc
popf
and
sbb
cmp
sbb
(bad)
xor
xchg
mov
andps
pop
bound
clc
daa
test
add
xchg
and
mov
inc
ja
call
ss
dec
stos
lds
sbb
mov
ss
sub
loope
(bad)
xor
xchg
lea
in
(bad)
xchg
adc
mov
add
xchg
(bad)
loopne
mov
rolb
nop

jo
into
out
xor
jmp
inc
sbb
rcrb
jecxz
sub
nop

and
xor
cmp
mov
sbb
pop
sahf
in
(bad)
sti
loopne
xor
mov
popa
sbbl
in
jge
sub
xor
enter
outsb
or
fistps
xchg
insl
inc
mov
push
mov
loope
mov
mov
sbb
mov
aam
(bad)
dec
rorb
cld
xchg
std
out
xchg
fdivr
pushf
call
(bad)
faddl
call
sub
mov
nop

inc
data16
mov
mov
sbb
pop
xor
add
push
pusha
mov
dec
lds
mov
mov
inc
inc
jecxz
mov
sbb
jae
mov
call
sub
sub
lahf
idivl
aas
out
lahf
(bad)
call
inc
mov
aaa
xlat
mov
inc
sbb
sbb
int
loop
bound
sub
inc
ss
loope
aas
(bad)
stc
mov
push
jae
cmc
ds
mov
pop
and
xor
push
push
aas
dec
nop

(bad)
sahf
pushl
je
lahf
(bad)
lds
mov
cmp
xchg
aam
iret
mov
jns
(bad)
imul
das
cmp
xor
push
push
negb
cmp
(bad)
into
jmp
or
dec
in
dec
test
add
ret
pop
sbbl
ficompl
scas
lea
push
insb
jge
push
jle
(bad)
lods
outsb
push
ss
lods
and
popfw
lahf
or
push
mov
cld
pop
outsb
addr16
dec
rcr
sub
inc
adc
sbb
jne
cmp
jo
negb
xlat
and
mov
add
fisubs
mov
inc
loope
popf
push
cmp
aad
cltd
fiaddl
shl
dec
dec
mov
adc
test
xchg
add
movsl
mov
arpl
mov
shl
inc
jge
int3
orl
or
sbb
pushf
inc
adc
xor
fimull
and
cmp
lea
add
fwait

push
push
cs
sti
fsub
out
lret
and
cmp
mov
pop
push
popa
clc
pop
scas
rolb
pop
xchg
xor
lea
and
mov
(bad)
sub
jno
xor
js
ret
lds
out
pop
(bad)
rcr
and
adc
mov
mov
sbb
arpl
push
or
arpl
test
popf
mov
mov
inc
inc
out
out
and
sahf
nop

jecxz
pop
pop
(bad)
mov
push
push
xchg
sub
lret
pop
sub
inc
insb
in
push
sarb
pop
pop
cmc
mov
ja
repz
inc
dec
xchg
clc
int
xchg
or
xorl
int3
sbb
les
add
jbe
sbb
mov
jle
sbb
cmp
xchg
nop

fiadds
cltd
or
gs
(bad)
out
insl
cmp
jle
jle
mov
(bad)
out
xchg
ficoms
testl
orb
shr
repz
sbb
add
xchg
push
(bad)
sub
xor
scas
loopne
stos
jo
jno
in
les
lret
adc
les
and
rorl
sub
add
rolb
lret
mov
jns
test
pop
mov
sbb
push
movsl
sbb
shl
aam
adc
adc
lcall
mov
subb
jge
and
insb
cmp
add
sbb
mov
sub
fwait

adcl
sbb
push
xrelease
mov
int
(bad)
paddw
std
and
jp
sarl
adc
je
(bad)
outsb
jns
xchg
subb
aad
xchg
(bad)
adc
add
or
xchg
xor
sbb
fnstsw
dec
mov
ds
xor
data16
out
and
jbe
outsl
mov
mov
mov
loop
not
imul
mov
or
sahf
out
adc
cwtl
dec
or
dec
mov
jnp
popa
cmc
fidivs
(bad)
fldcw
fdivrs
je
jmp
push
sub
dec
mov
in
push
xchg
int
call
scas
pop
push
inc
dec
loop
jl
push
adc
enter
ljmp
sti
push
xlat
mov
inc
(bad)
jo
jmp
jnp
inc
fiadds
scas
std
or
sub
push
test
mov
test
int
or
int
xchg
inc
mov
jle
call
xchg
adc
imul
mov
mov
pushf
mov
frstor
and
xchg
movsb
(bad)
fsts
sbb
stc
aam
mull
cmp
push
cli
mov
test
cltd
cmp
mov
stc
push
add
lods
mov
inc
push
gs
int
pop
ja
popaw
rcrb
cmp
mov
push
xor
cmp
psrlw
pushf
jecxz
aam
cmp
movsl
out
dec
pop
mov
cltd
adc
rcll
data16
jne
xchg
mov
cmp
aas
popf
cmpsl
mov
cld
xor
cmp
shll
pop
(bad)
pop
cmc
mov
fcomps
pop
push
lods
stos
insl
ret
mov
or
sub
int3
cmc
pop
mov
gs
xchg
mov
pop
mov
insl
mov
jbe
scas
mov
js
ljmp
clc
jg
outsb
in
aam
jnp
xchg
repz
push
xorl
ja
xchg
mov
mov
xchg
and
cmp
push
je
test
mov
mov
and
notl
mov
xchg
addr16
repz
xchg
pushf
in
add
adc
adc
push
pop
cmp
adc
adc
shl
mov
sub
aam
jle
shrl
cwtl
(bad)
adc
or
adc
xchg
and
jnp
sub
notl
nop

xchg
insl
ret
mov
jns
push
fildll
mov
test
insl
and
dec
jp
daa
sarb
in
ret
lods
lahf
enter
inc
lcall
lds
cmp
push
cmp
push
push
into
addr16
loop
(bad)
sarb
stc
inc
lret
mov
mull
or
sub
fcmovnbe
cmp
dec
fadd
fisubrl
movsl
pop
cmp
nop

jae
mov
dec
inc
xor
sbb
pop
mov
add
negl
pusha
xchg
ss
loope
inc
add
les
rcrl
push
cltd
jae
pop
mov
sub
cmp
or
adc
jno
mov
loope
and
xchg
adc
xchg
(bad)
jae
and
cmp
fisubrs
mov
lock
push
mov
sub
and
movb
mov
jbe
shlb
subl
push
cmp
cmpsl
and
sbb
popf
inc
notl
cmp
clc
(bad)
add
leave
jbe
(bad)
rorl
repz
mov
lahf
lods
xor
mov
arpl
cwtl
xchg
inc
xchg
adc
es
mov
jns
hlt
pop
push
(bad)
std
add
cmp
xor
jb
xchg
cwtl
push
fildl
lahf
push
jmp
(bad)
pop
lcall
leave
imul
xchg
out
icebp
into
adc
shll
mov
shll
sbb
push
fdivl
add
aaa
adc
mov
sbb
and
lods
mov
and
scas
xorb
pushf
xor
outsb
rcrb
add
dec
dec
nop

insl
jmp
mov
fbstp
add
test
(bad)
jns
sub
in
icebp
fbld
pop
gs
sbb
dec
push
cld
mov
aad
ret
mov
mov
test
inc
cmp
movsb
les
stos
jecxz
int
fdivs
movl
jp
push
lods
mov
in
pushf
jbe
adc
fbstp
sub
ja
adc
inc
cs
cmp
test
test
fucomi
leave
vpshad
push
mov
nop

insl
lcall
cwtl
jnp
imul
call
dec
call
loope
mov
call
jp
xchg
das
gs
scas
outsb
out
repz
push
loope
push
and
notl
std
dec
sbb
jns
inc
and
lock
adc
inc
push
js
out
call
loope
and
lock
xchg
xchg
mov
pop
stos
out
cwtl
pop
stos
into
add
sbb
add
es
add
lds
cmp
add
imul
adc
cmp
insl
lret
cmp
arpl
dec
and
jnp
into
push
cmc
addr16
cmp
outsl
push
es
sahf
jp
cmp
fcomip
fisttpl
sbb
dec
mov
lods
fistpll
push
pop
pop
jg
pop
repz
cmp
cmp
std
jge
cwtl
or
push
(bad)
push
out
jecxz
(bad)
mov
in
ds
pop
scas
xchg
sub
imul
pushf
loope
inc
push
fs
lret
fs
inc
or
cmpsl
push
and
sub
mov
dec
hlt
xchg
lods
fisubs
mov
adc
push
sub
stc
jecxz
jle
in
loop
data16
cli
and
(bad)
xor
imul
or
or
mov
or
mov
inc
out
test
mov
sub
cwtl
cmpsb
ja
xchg
mov
fdivs
xchg
aad
mov
xchg
movsb
daa
pop
hlt
and
(bad)
stc
xchg
mov
test
push
emms
pop
or
leave
adc
add
aad
mov
sbb
sbb
cmp
movsl
jp
adc
test
or
pop
push
pop
sbb
cmp
stos
loop
sti
jae
push
inc
mov
inc
call
mov
fisubrl
pop
mov
adc
xchg
push
mov
mov
hlt
idivl
pop
popf
xor
mov
scas
mov
xchg
xchg
jl
in
ljmp
gs
(bad)
push
ja
js
fisubrl
(bad)
fcmovnbe
add
sbb
mov
jmp
data16
cwtl
push
stc
push
xchg
sub
pop
sbb
fsubl
outsl
cmp
mov
sbb
add
and
or
mov
push
shrb
sarl
adcl
mov
mov
dec
pop
mov
clc
push
popa
xchg
sbb
xchg
fdivrs
push
iret
cld
push
sbb
inc
mov
data16
jnp
push
mov
mov
shlb
inc
mov
jecxz
fisubrl
xchg
call
push
imul
aas
pop
push
iret
dec
jne
mov
cmp
into
aas
cmp
call
push
mov
mov
sub
fbld
pop
js
aas
xor
vpavgb
pushf
pop
xchg
sub
sub
ds
dec
xor
mov
or
sbb
(bad)
mov
rorl
rorb
lcall
pop
sub
sbb
mov
push
jb
mov
in
inc
mov
aam
frstor
iret
lahf
pop
rcrb
aam
xor
mov
inc
cmp
mov
(bad)
out
push
shrl
shl
push
push
pop
mov
lock
adc
icebp
lods
jecxz
aaa
popa
pop
in
mov
fs
movsl
mov
out
bound
xchg
xchg
dec
sbb
sub
xchg
adc
mov
xchg
call
dec
adc
mov
jecxz
xchg
incb
out
push
xlat
adc
inc
shlb
pop
jns
jecxz
mov
pop
mov
mov
and
sub
fdivrs
insl
mov
dec
cmp
addl
mov
test
mov
popa
add
sub
int
jnp
cmp
jg
inc
test
int
into
sub
push
ja
sub
cs
sub
outsl
fildll
mov
or
aas
pushf
xchg
cmp
xor
jecxz
push
popa
arpl
ja
leave
dec
outsl
and
add
(bad)
stos
sti
call
pop
out
jno
emms
mov
mov
lret
xor
cmp
lods
dec
and
adc
repz
pop
mov
mov
pop
jl
nop

jbe
inc
sbb
test
cwtl
jo
xchg
dec
mov
mov
mov
xchg
jbe
mov
inc
jns
cmpsb
(bad)
cmp
xchg
icebp
nop

pop
fiadds
mov
pop
cmp
push
cmp
dec
aam
xchg
mov
into
xlat
repnz
cld
or
es
pop
lahf
ja
push
mov
mov
xchg
fcoml
(bad)
push
cmp
mov
inc
ret
imul
mov
ret
jnp
ds
pop
mov
call
stos
movsb
(bad)
lods
cwtl
enter
outsl
in
loop
and
dec
pop
test
adc
mov
sbb
mov
iret
sub
pop
ja
call
scas
jge
sub
test
test
sub
add
inc
jae
ljmp
outsb
mov
xchg
pop
cwtl
xchg
sbb
int
xor
xchg
push
aas
jle
in
add
mov
mov
dec
sub
fimull
lods
repnz
xor
mov
or
add
popa
(bad)
mov
xor
xchg
cmpb
daa
adc
xchg
push
loope
mov
pop
cmpsb
out
xchg
and
mov
or
inc
lods
les
mov
mov
das
cmpsb
aaa
outsl
xor
rorl
mov
lea
xchg
sbb
push
or
fsubl
ret
mov
hlt
into
rcrb
xlat
fcoml
cmp
test
rol
iret
mov
enter
dec
mov
sub
js
ljmp
addr16
nop

mov
jbe
pop
imul
push
inc
in
mov
push
test
arpl
(bad)
and
adc
int
cli
mov
sbb
jp
les
sbb
pop
push
or
test
or
or
jae
in
fcomip
bound
into
mov
pop
pop
fistpl
outsl
fdivrs
cmpsb
andb
clc
movb
lea
jmp
bound
je
jmp
(bad)
sahf
fldt
leave
xchg
adc
adc
jae
hlt
movsb
iret
fsts
push
pop
mov
push
inc
stos
mov
in
cli
mov
outsb
outsl
in
pop
loope
jbe
lahf
scas
adc
jno
cltd
(bad)

push
mov
jg
hlt
jae
or
stc
mov
(bad)
mov
into
pop
das
ljmp
fisttpl
cmpsl
aad
aas
cli
pop
jmp
adc
dec
movsl
push
addr16
inc
mov
pop
adc
jle
rcr
movnti
in
mov
inc
pushf
adc
and
dec
out
cmp
mov
push
out
mov
xchg
and
mov
cmp
inc
xchg
(bad)
push
nop

dec
xchg
std
jne
(bad)
push
sub
lea
fisubrs
test
outsl
adc
mov
test
(bad)
into
decb
and
fwait

repz
nop

in
js
mov
cmc
push
imul
push
(bad)
xlat
(bad)

mov
jmp
and
pusha
xor
jne
dec
das
xlat
out
negl
notl
aas
mov
aam
push
inc
mov
dec
std
fisttps
pop
push
mov
test
fsubrs
fwait

or
adc
add
mov
call
xchg
xchg
jecxz
into
adc
or
mov
enter
push
pop
inc
mov
jb
mov
mov
clc
pop
int
jae
sbb
jno
pushf
out
mov
test
popf
in
dec
sbb
sub
or
xchg
inc
orl
iret
sbb
dec
dec
cmpsl
xchg
and
addr16
(bad)
mov
xchg
mov
(bad)
sti
sbb
aam
add
lcall
add
fwait

aam
and
icebp
sahf
insl
ss
pop
test
push
loopne
sti
sti
dec
mov
mov
iret
push
bound
sub
ja
jp
jmp
mov
dec
jle
pop
push
pop
push
iret
sbbb
jmp
push
dec
mov
cmp
popf
shr
mov
in
loop
mov
ret
dec
into
cltd
push
call
sbb
mov
call
adc
and
pop
(bad)
jp
jl
mov
int3
sub
inc
sub
test
or
push
shlb
mov
mov
faddl
push
iret
dec
loope
into
xchg
xchg
jp
cmp
sub
repnz
cmp
dec
icebp
dec
imul
xor
jo,pn
xchg
add
xor
sti
push
add
push
sbb
fdivs
push
and
xchg
or
mov
scas
shlb
dec
cmpl
(bad)
sub
in
xor
cmp
mov
not
cmp
sbb
punpckhdq
je
cs
subb
adc
inc
lret
pop
scas
adc
mov
add
add
loope
aad
fbld
jecxz
(bad)
pop
cmp
(bad)
and
fistpl
scas
loop
cmp
(bad)
scas
movsl
mov
sub
movsl
ja
adc
xor
cli
cmpsb
andl
xchg
jbe
leave
mov
or
stos
hlt
jno
lea
push
aas
sub
inc
adc
xor
idiv
sub
and
cmp
mov
mov
lahf
jbe
jb
cmp
into
rorl
jnp
int3
movsb
mov
mov
ret
mov
cmp
rep
call
ljmp
mov
jbe
xlat
and
ds
push
dec
ret
pop
test
push
inc
lahf
stc
push
xchg
orb
and
xor
mov
sbb
push
data16
push
add
shll
push
or
adc
in
gs
loope
fwait

jmp
inc
pop
cltd
gs
fwait

imul
fdivrl
push
out
int
les
outsb
popa
pop
pop
out
xchg
sbb
sub
or
outsb
xchg
aas
sbb
push
xchg
mov
enter
fnstcw
outsl
xchg
je
cld
xchg
dec
dec
xchg
adc
adc
(bad)
call
jbe
dec
jbe
inc
dec
pop
mov
icebp
cld
pop
sbb
popa
adc
push
adc
mov
rcr
xchg
popa
outsl
fs
sbb
push
ss
rcrl
mov
xchg
xor
add
xchg
xlat
mov
sbb
out
mov
push
shr
mov
fiaddl
and
jmp
mull
push
dec
and
lods
jp
stos
pop
sbb
mov
mov
and
xchg
dec
mov
rcrb
cmpsl
enter
loope
cmp
cltd
or
push
mov
jmp
popa
push
sti
sti
dec
add
sbb
addb
jg
aad
dec
ljmp
ret
imul
cmpsl
mov
imul
sbb
clc
push
mov
movl
dec
sbb
cli
outsl
fcoms
int
xchg
lods
dec
ja
xor
sbb
and
clc
adc
int
ss
mov
addr16
xchg
fwait

mov
arpl
int
mov
adcb
shlb
sbb
cmc
fmul
lret
mov
jns
inc
jne
xor
jae
negl
sbbb
fists
mov
push
ja
dec
jno
roll
int
repnz
inc
cmp
nop

and
and
jae
cmpsb
add
ret
pop
xchg
jg
mov
int
pop
push
mov
jecxz
pop
vmwrite
enter
mov
subb
daa
ds
push
(bad)
popa
mulb
pop
out
cmpsb
jns
(bad)
pop
cwtl
add
(bad)
(bad)
nop

mov
dec
arpl
xor
mov
adc
dec
inc
roll
mov
xor
leave
mov
mov
or
lods
iret
test
push
shrb
xor
sbb
mov
lock
shlb
sub
mov
mov
mov
xchg
(bad)
adc
into
add
clc
(bad)
popa
push
inc
(bad)
sbb
cs
mov
mov
mov
sbb
call
(bad)
cmp
lea
push
in
mov
or
inc
dec
pmaxsw
sbb
lea
cmpsl
sub
pop
out
jno
(bad)
imul
psubq
and
outsb
push
or
loope
xchg
sbb
leave
fimull
cmp
add
xchg
jae
iret
rcrl
lret
and
das
jg
jnp
into
adc
repnz
mov
xlat
lock
pop
popa
or
(bad)
pop
stos
mov
ljmp
push
jo
ss
paddusw
push
movsb
mov
gs
push
or
sbb
mov
pushf
mov
dec
std
insb
adc
mov
cltd
adc
xor
jp
dec
sub
push
pop
lock
sbb
push
ret
popa
cmpsb
xchg
daa
xor
add
pushf
cmpsb
xor
out
lods
sahf
ja
into
xchg
lret
xor
jge
dec
stos
icebp
mov
es
and
pop
or
xchg
rorl
sub
scas
jecxz
xchg
(bad)
sbb
or
ljmp
out
insb
outsb
pop
mov
mov
push
or
adc
(bad)
data16
clc
pushf
xor
fidivl
xor
sbb
jo
and
(bad)
repnz
imul
popa
xchg
(bad)
cli
int3
inc
in
ja
sub
xor
sti
mov
pop
cmc
outsl
cs
les
aad
jg
xor
clc
outsb
jp
push
fiaddl
aaa
aam
test
add
mov
fwait

pusha
jno
sbb
sbb
adc
mov
outsl
push
ret
xlat
aas
add
in
xchg
cwtl
sub
xor
imul
negb
dec
nop

insl
dec
rcll
mov
fsub
mov
ja
cmpsb
rcll
scas
test
addb
lret
lcall
in
aas
arpl
xor
addr16
ficoms
outsl
pop
aas
mov
mov
jecxz
out
loope
movb
xor
mov
mov
out
bnd
mov
into
pop
xor
or
stos
mov
ljmp
test
xlat
notb
insb
mov
pusha
inc
dec
fwait

movsl
ljmp
xchg
inc
and
add
mov
(bad)
mov
and
shl
mov
mov
aam
rorl
cmp
aaa
loopne
repnz
data16
addr16
repz
sbb
jecxz
and
or
imul
(bad)
ja
xor
or
imul
dec
cmp
std
cmp
add
sub
jo
in
fcompl
fisttpl
cwtl
dec
push
and
in
rorl
mov
sub
jg
jmp
cs
ffree
sahf
inc
cmp
mov
popf
inc
cld
cmpsl
pop
shlb
fistpl
dec
or
sub
fistpl
rcl
mov
test
mov
shlb
push
scas
mov
ror
popf
push
jle
(bad)
add
loope
jb
jbe
rclb
addr16
xor
or
in
mov
dec
in
or
add
jb
inc
mov
mov
jb
icebp
ljmp
rcrl
test
adcl
pushf
mov
scas
fcom
sub
in
sbb
cmpsl
mov
pushf
jnp
xor
loopne
sub
cmp
or
stos
js
imul
pusha
in
lods
mov
xor
sub
test
decb
cmp
push
mov
loop
adc
pop
ret
xor
sbb
ror
cld
lods
leave
fiaddl
cmp
mov
pusha
mov
in
dec
sub
inc
(bad)
out
push
(bad)
fdivrs
xor
inc
pop
and
rcl
mov
and
es
fsub
dec
mov
sbb
subb
in
push
rorb
jne
pop
in
and
push
sub
insb
mov
cs
decl
jbe
xchg
inc
xchg
xor
in
sti
mov
mov
mov
xor
outsb
outsb
push
mov
out
cmp
push
or
mull
leave
adc
cmpsb
ja
pop
jae
std
cli
add
dec
push
push
popa
mov
pop
inc
es
push
xor
xor
mov
xor
cmp
pop
call
in
jg
loope
push
cmpsb
ja
cld
sbb
or
ljmp
les
pop
add
enter
bound
data16
dec
add
mov
sti
inc
pop
xchg
mov
sbb
fdivl
cmp
mov
jno
xchg
push
loop
out
scas
(bad)
jg
aad
stos
push
sbb
push
sbb
sub
fwait

aam
aam
add
ljmp
xchg
movsl
xchg
inc
mov
push
(bad)
push
add
sub
or
jns
mov
lds
in
or
jne
(bad)
jmp
and
add
push
add
(bad)
popf
sub
push
mov
pushf
adcb
cmpl
jg
jno
lret
cmpsb
fcmovnb
cltd
fdivr
cltd
pushf
jecxz
je
loop
jge
mov
sub
loopne
adc
pushf
sbb
push
call
ret
push
cmp
dec
or
jmp
xor
push
jns
mov
cld
add
cmp
rcrb
je
mov
pop
rorl
dec
dec
(bad)
lret
(bad)
popf
cmpb
push
mov
divl
sahf
mov
xchg
dec
cmp
sbbb
push
jno
inc
shll
iret
cld
push
(bad)
call
xchg
jns
andb
(bad)
std
adc
jmp
rcr
push
rcrl
dec
ja
jle
dec
(bad)
cmp
adc
clc
and
jg
xchg
rorl
cs
(bad)
cmp
push
or
mov
imul
sbb
loop
mov
add
cmp
push
mov
or
vmovhpd
cmp
cmp
jp
push
leave
push
sbb
and
(bad)
push
sbb
mov
jns
sbb
add
jbe
dec
stc
aam
imul
movsb
cld
pushf
lret
int3
insl
lahf
and
push
pop
and
inc
push
push
popa
jg
add
cmp
out
jmp
ljmp
push
push
and
mov
(bad)

iret
cmpsl
jnp
loopne
mov
in
adc
gs
cmp
iret
dec
mov
mov
jne
cmp
xchg
or
xchg
adc
mov
push
lods
dec
mov
pushf
(bad)
aad
iret
push
ja
cmpsb
cmp
rorb
push
(bad)
adc
push
(bad)
incl
mov
xor
dec
inc
lea
push
sub
mov
inc
movsl
insb
add
push
lahf
pop
lret
flds
cmpsb
(bad)
add
and
bound
add
loop
xor
ret
sbb
xor
add
arpl
lods
sub
test
out
jecxz
sub
rorl
(bad)
jge
cmpsl
pop
inc
clc
call
xor
pop
mov
pop
gs
pop
inc
push
xchg
and
ds
arpl
or
cmp
shlb
jecxz
dec
loope
repnz
rorl
test
outsb
jne
jmp
inc
aas
xor
int3
inc
add
inc
jbe
cmp
lods
addr16
pop
dec
dec
lods
adc
shlb
push
add
rcr
xchg
cli
jnp
loop
es
idivb
mov
pop
xor
adc
ja
mov
jg
es
fcmove
sub
mov
stos
push
pop
aam
dec
jnp
(bad)
xor
(bad)
xchg
je
sarl
adc
icebp
sbb
add
(bad)
mov
aas
xlat
cmp
inc
in
fisubrl
(bad)
mov
out
mov
mov
mov
push
cld
pop
bound
mov
push
mov
xor
jle
popa
repnz
sahf
add
mov
adc
daa
mov
test
push
mov
loopne
push
push
lods
push
bound
push
jp
test
scas
push
or
and
xchg
sub
lret
add
scas
xchg
push
enter
jns
in
je
negb
or
xor
aam
mov
into
inc
neg
popa
adcl
and
pop
mov
das
cwtl
add
cmp
inc
cltd
push
adc
(bad)
out
mov
mov
push
mov
xor
sbb
repnz
sub
push
orl
les
push
pop
out
sbb
int3
mov
(bad)

jne
imul
repnz
cmpsb
sarl
insb
outsb
aaa
daa
movsb
xor
add
popa
jbe
or
push
cmp
fucom
out
sbb
(bad)
mov
xchg
adc
aaa
xchg
fucomi
or
or
sbb
mov
inc
mov
popf
out
and
cwtl
mov
in
mov
(bad)
popa
pop
rcr
arpl
shrb
dec
inc
cltd
ds
popa
sahf
in
int3
pop
jbe
pop
mov
xlat
in
and
nop

mov
pop
cwtl
pop
fwait

and
aam
push
(bad)
pop
gs
iret
js
push
sahf
and
sub
les
xchg
xor
jmp
in
sbb
adc
ficoms
pop
daa
dec
sti
lahf
mov
scas
(bad)
popf
adc
xor
aas
and
mov
jle
addb
test
pop
in
sbb
push
mov
jo
adc
lea
xchg
xchg
sbb
adc
dec
add
mov
enter
outsl
lea
fcoml
(bad)
cld
hlt
xlat
ljmp
fidivrl
sbb
out
adc
or
loop
jne
pop
pshufw
cmp
out
sub
sbb
mov
out
pop
sbb
cli
pop
dec
push
outsl
lcall
(bad)
add
mov
cwtl
cmpsb
xor
cld
hlt
mov
into
adc
cmp
lcall
imul
xchg
add
jbe
sbb
mov
mov
das
ror
les
jg
fildl
jns
rclb
test
les
pop
xor
and
cmpsb
rorb
or
mov
inc
mov
pop
shl
test
fmuls
mov
mov
out
push
clc
lahf
std
insb
add
mov
into
dec
icebp
fisubs
mov
sub
(bad)
(bad)
fmuls
jbe
cmp
xor
mov
adc
ja
cmp
mov
cmp
in
outsl
add
mov
push
fs
loope
(bad)

jmp
addr16
and
cs
jno
jmp
js
leave
push
pop
push
ret
xor
outsb
adc
and
iret
adcb
sbb
push
xchg
inc
mov
cmp
sbb
call
rorl
xor
outsl
xchg
in
inc
adc
or
inc
sub
in
mov
add
aad
rcrl
aas
ret
xchg
sub
clc
mov
andb
lea
pop
aam
test
jecxz
cmp
mov
jae
pusha
(bad)
jo
cltd
dec
cld
sub
ljmp
pop
xchg
mov
dec
loopne
insl
sbb
(bad)

mov
call
or
popf
fisubs
je
rorb
sbb
inc
inc
mov
es
lcall
cmp
cld
leave
(bad)
js
arpl
leave
cmp
and
insb
mov
xchg
lea
ss
iret
cld
jmp
loopne
sbb
cld
dec
mov
xchg
pop
and
inc
test
test
stos
lret
add
fdivrl
stos
repnz
pop
cmpl
jp
or
add
push
jnp
dec
scas
jmp
dec
xchg
xchg
adc
ljmp
sbb
pushf
mov
addr16
dec
hlt
push
mov
les
add
mov
test
jbe
mov
lea
jle
fildll
jecxz
mov
(bad)
jg
mov
mov
sbb
sub
inc
jbe
fisttps
iret
cmp
fs
fcmovnbe
pop
jbe
shlb
adc
into
aad
add
xchg
add
into
jge
int3
pusha
test
test
ret
in
or
mov
cmpsl
mov
popf
out
push
fldenv
xchg
outsb
jae
pop
int
mov
lahf
pop
dec
in
jg
inc
js
(bad)
das
mov
pop
dec
nop

push
xor
cmpsb
xor
ja
jecxz
scas
push
mov
lods
in
mulb
cmp
mov
ret
inc
add
into
inc
mov
out
lods
in
fiaddl
repnz
xchg
mov
lods
hlt
dec
nop

in
lcall
sbb
out
pushf
inc
loope
jge
add
enter
mov
js
mov
xor
xchg
cmc
jecxz
sub
xchg
xlat
pop
(bad)
and
cwtl
sub
sub
and
mov
cmpsl
xor
lds
pop
into
jo
sub
int3
popf
popa
push
fisttpll
inc
fists
cmp
lods
adc
lods
push
int
xlat
sub
add
test
sbb
stos
cltd
dec
out
cmp
cmpsb
movsb
leave
popa
jae
xor
fsubr
daa
add
push
cmpsl
hlt
(bad)
aam
lret
jb
imul
sbb
xchg
orb
push
xchg
mov
jbe
cmp
push
das
add
pushf
cmp
cmp
push
shlb
sar
scas
add
push
pop
inc
arpl
mov
cmp
outsb
test
sub
ficoms
pop
xchg
cmp
(bad)
mov
aad
ret
mov
les
pop
out
push
adc
push
stos
js
test
push
cmp
push
stos
stos
arpl
dec
mov
and
je
cli
mov
sbb
(bad)
cmpsb
out
adc
out
sti
fistl
xchg
adc
ja
mov
ljmp
ja
test
cld
jb
addr16
mov
push
addb
rcrb
imul
push
enter
sti
mov
dec
push
mov
mov
add
mov
jge
mov
and
jge
(bad)
(bad)
mov
int
ljmp
adc
mov
xchg
mov
call
ds
out
push
mov
adc
xor
xchg
jo
pop
mov
cmp
jb
pop
cwtl
cmpsl
and
in
ret
pop
out
mov
mov
inc
pop
ficoml
sbb
fsubs
cld
dec
jne
flds
xor
aam
mov
mov
or
push
outsl
mov
cmp
add
out
repnz
jg
in
int
add
mov
pop
popa
dec
push
jg
pop
sbb
icebp
dec
ss
pop
sbb
xor
cmp
int3
jle
test
mov
lods
and
(bad)
cld
xor
pop
addr16
das
push
test
mov
cmp
(bad)
pop
or
or
mov
loop
les
stos
cmp
inc
sti
mov
stos
out
xchg
xchg
adc
mov
sbbb
jbe
lcall
dec
xchg
xchg
jne
mov
mov
subb
inc
data16
hlt
js
stos
xorb
loop
sub
sub
and
outsl
outsb
enter
cld
rclb
cmp
scas
insb
jle
dec
je
push
out
andl
mov
ret
sub
xchg
push
sub
sub
cmp
push
ret
daa
imul
mov
cmpsb
movhps
lods
xchg
lds
dec
xchg
dec
mov
faddl
lahf
pop
mov
arpl
jecxz
adc
mov
imulb
out
pop
mov
pop
enter
scas
int
daa
xchg
in
and
popa
or
xchg
fs
(bad)
mov
stc
xchg
iret
(bad)
out
cltd
jo
ret
ds
out
aam
daa
scas
pop
push
xor
or
rcll
out
jno
sbb
dec
imul
out
xchg
pop
cltd
push
jecxz
inc
dec
gs
mov
fisttpll
sub
xor
fwait

subb
(bad)
test
lds
xorl
cld
adc
sub
cmp
mov
and
dec
pop
xor
lret
or
mov
outsb
cmpsl
jge
add
rclb
test
nop

or
and
push
popf
pop
imul
imul
stc
repz
and
repz
cli
lea
adc
push
push
inc
repnz
fwait

mov
add
adc
lahf
sub
mov
sbb
inc
jle
mov
ss
ficompl
and
call
cltd
push
sbb
mov
jo
dec
aam
mov
xchg
hlt
mov
cmpsb
inc
inc
or
int
add
lea
cmp
inc
sbb
and
cmp
out
xor
repz
jg
loop
jns
imul
jl
lds
mov
ret
(bad)
and
jo
add
lcall
gs
adc
mov
imul
andb
inc
dec
ljmp
pushf
ljmp
ret
sub
clc
jl
inc
fs
mov
mov
test
and
pop
cmp
inc
subb
testl
js
sahf
outsl
mov
mov
push
scas
jb
lret
stos
test
mov
daa
xchg
push
add
cld
xchg
fimull
and
fwait

out
dec
or
lret
sub
inc
inc
dec
repz
ret
pop
sahf
movsb
sarb
adc
bound
test
push
ja
sub
add
adc
aas
shrb
push
cmp
insb
lret
pop
lcall
rcll
pop
jg
add
mov
nop

or
inc
xor
sub
leave
js
xor
pop
rcll
das
(bad)

(bad)
cmpsb
and
jnp
(bad)
stos
jle
repz
lahf
ds
and
add
addr16
dec
cmc
in
inc
jb
ficomps
pop
pop
jg
int
dec
xchg
jl
mov
jecxz
mov
rolb
inc
mov
andl
jno
insl
pop
cmp
inc
repz
fsubs
sub
and
sub
gs
ss
insl
sub
mov
sbb
mov
sahf
or
insl
popa
(bad)
into
add
xchg
lcall
xor
jno
add
sbb
push
repnz
cltd
rolb
in
mov
pop
rcl
jae
jmp
pushf
in
fistl
jmp
cwtl
mov
and
loope
xchg
ret
in
cmpl
pop
int
and
mov
dec
aam
sub
orl
sbb
pop
cli
int
xor
loopne
mov
inc
or
xlat
and
adc
cmp
mov
xor
adcb
inc
add
cmpsl
stc
pop
les
jmp
xchg
xor
mov
add
mov
aam
ret
push
fcmovnb
jns
add
ret
pinsrw
or
sbb
xchg
lods
loopne
in
dec
or
cli
mov
mov
jo
xchg
xor
jmp
mov
pop
jne
sub
sub
in
jmp
sti
int3
bound
sub
mov
push
add
jbe
xor
mov
cmpsb
jecxz
in
push
ja
je
dec
and
push
scas
dec
mov
bound
push
or
sub
cmpsl
push
es
jae
daa
pop
out
in
add
das
jb
pop
shrl
xchg
cld
int3
push
hlt
jg
sbb
ja
inc
mov
mov
clc
or
cli
mov
xor
sbbb
cs
adc
push
test
adc
(bad)
lret
fmul
out
mov
and
pop
sbb
cmp
cmpsb
bound
sti
add
enter
lea
ret
inc
test
or
lods
xor
test
loope
in
icebp
push
xchg
add
scas
sub
and
jmp
sbb
xor
jle
mov
push
pop
or
data16
insb
adc
adc
fnstcw
or
add
and
push
in
out
inc
xchg
adc
es
call
shl
sbb
pop
lahf
imul
adc
ss
mov
loop
nop

xor
int3
and
and
jo
shll
gs
loop
xchg
imul
cmp
mov
sbb
js
test
mov
rolb
mov
mov
xchg
test
pop
pusha
sbb
pop
mov
push
js
pushf
dec
add
(bad)
push
mov
xor
ja
not
push
or
scas
lretw
ret
push
sahf
sub
xor
pop
or
xchg
dec
ljmp
cmp
push
add
pop
test
xchg
rorb
push
lods
sub
into
xor
imul
out
rolb
mov
imul
cmp
cmp
pusha
sub
xchg
out
pop
xchg
push
(bad)
aad
es
arpl
sbb
out
subb
(bad)
pop
sbb
int
jb
cmp
sbb
mov
out
mov
mov
xchg
mov
or
aam
inc
dec
fldl2t
mov
sbb
jne
inc
mov
xor
stos
or
sub
mov
push
xchg
lahf
subb
aas
inc
pop
es
js
jge
test
jno
popa
pop
into
in
mov
pop
rorb
dec
push
xchg
jg
repz
adc
and
adc
adc
fdivl
fwait

push
pop
adc
stos
mov
sarb
mov
lret
pmullw
add
dec
push
and
mov
mov
cld
mov
adc
adc
xchg
scas
cmp
xlat
xchg
adc
mov
push
dec
inc
push
ds
xorl
jp
aas
sbb
fs
cmp
dec
pop
gs
rcrb
jne
mov
stos
xor
mov
clc
mov
je
mov
cpuid
jmp
push
subb
inc
mov
scas
inc
or
outsb
jnp
pop
loopne
mov
pop
pop
jb
stos
ds
mov
pop
inc
mov
lods
mov
ja
mov
push
xchg
or
push
mov
sub
in
xchg
imul
push
iret
mov
cmp
test
data16
inc
xchg
mov
cli
pop
mov
insb
pop
clc
jae
aam
dec
gs
test
arpl
cmp
lods
pop
inc
enter
xchg
iret
adc
push
pop
or
sar
loop
ss
decb
(bad)
(bad)
xchg
cld
jl
test
ret
jae
stc
mov
jo
ret
rcr
movsb
repz
sub
add
ljmp
ret
ss
xchg
push
or
jbe
pop
roll
mov
mov
lahf
fistpl
nop

in
popa
mov
(bad)
ds
daa
iret
sbb
and
inc
stc
pop
popa
jae
es
imul
cld
and
movsl
leave
cld
(bad)
faddl
das
rorb
cmp
xchg
push
call
orl
push
sub
push
dec
inc
repz
das
clc
adcb
mov
int3
pop
jecxz
setbe
cmp
arpl
add
mov
jne
lret
outsl
call
lret
popf
aam
cmc
sub
testb
lahf
jb
incb
out
idiv
and
pop
outsb
nop

push
add
mov
ret
out
push
add
cmp
gs
ret
shll
cwtl
sub
inc
je
adc
ret
(bad)
insl
xor
cs
je
mov
js
mov
add
test
inc
mov
cmpsb
adc
mov
(bad)
or
xor
dec
xorb
ljmp
loopne
mov
inc
(bad)
jo
push
xchg
cmp
xchg
jbe
pop
mov
mov
dec
sub
mov
and
sbb
popa
mov
fisttps
jg
inc
xchg
mov
mov
repz
xchg
aam
fucompp
ljmp
mov
and
adc
ss
inc
sub
aas
ds
cmpsl
icebp
dec
pop
jge
inc
shlb
mov
cmpb
ds
push
lcall
mov
add
dec
jns
adc
out
test
sti
and
mull
mov
mov
xor
cmpsl
mov
(bad)
loop
add
outsl
cmpsb
and
rcr
and
into
in
rclb
out
shrl
push
cmp
ds
jb
xchg
pop
dec
stos
fs
xchg
lea
daa
inc
mov
mov
negl
push
push
mov
adc
cmpsl
test
pop
ret
adc
adc
pop
daa
pushf
cmp
dec
cmpl
sbb
sub
sub
xchg
lcall
xchg
sbb
cs
inc
fstps
cmc
repz
inc
gs
dec
ret
adc
iret
sbb
ds
jmp
dec
pop
nop

pop
jb
call
rolb
or
arpl
jle
dec
sub
cmpsl
mov
sti
and
insl
das
mov
ret
push
dec
out
outsb
daa
int3
mov
pop
mov
lods
dec
push
clc
insl
ss
call
mov
sti
or
add
push
test
iret
addr16
loopne
ljmp
mov
je
es
lcall
and
int
clc
rcrb
adc
clc
jg
or
lods
test
imul
test
mov
pop
push
xchg
scas
push
dec
sbb
dec
iret
fdivl
pop
test
mov
sbbb
dec
pop
mov
repnz
(bad)
in
sbb
adc
lret
jae
daa
(bad)
out
xlat
xchg
mov
pop
iret
sbb
(bad)
jmp
adc
lea
dec
sbb
xchg
outsb
loop
repnz
sahf
jp
pop
xor
pop
fnstsw
dec
or
or
in
mov
hlt
push
add
inc
mov
fcmovnbe
jp
inc
dec
pop
das
xchg
rcrb
sbb
shll
mov
mov
jb
(bad)
rolb
enter
(bad)
movsb
cltd
(bad)
and
cmpsl
es
mov
in
push
adc
repz
push
sti
rcrb
shl
inc
fidivrs
inc
lahf
ja
sbb
out
fs
or
test
(bad)
into
lahf
mov
sub
mov
cmpsl
mov
lret
stc
mov
fidivrl
sbb
ds
out
xchg
repz
push
inc
cmp
and
pop
paddd
scas
subl
cld
lods
sub
jae
push
sbb
and
test
fildl
mov
push
leave
lods
cmp
es
ret
pop
pop
jae
mov
mov
cmp
cmpsl
inc
orl
or
(bad)
stc
adc
(bad)
xchg
orps
mov
jbe
or
arpl
in
adc
mov
inc
and
movsb
push
jp
imul
xchg
xchg
(bad)
lods
das
sub
xorl
pop
and
jle
ja
out
mov
mov
dec
outsb
imul
rolb
pusha
mov
pop
ja
add
push
rclb
cltd
je
cmpsl
iret
mov
insl
loopne
insl
xchg
xchg
mov
scas
xlat
mov
ret
(bad)
into
into
mov
rorb
lock
std
sbb
sub
adc
mov
mov
or
outsb
imul
mov
lret
stos
scas
sub
out
jne
les
or
popf
or
out
mov
inc
hlt
dec
push
jne
imul
mov
rcr
lea
popf
push
orl
aaa
jnp
das
jae
in
mov
out
jle
js
sbb
mov
pop
add
shrb
cmp
cltd
jmp
mov
adc
rorb
lods
mov
pop
and
add
adc
jl
imul
idivb
push
popf
lods
pop
and
mov
push
jbe
(bad)
mov
arpl
out
inc
jnp
mov
shrl
pop
jb
outsl
xor
jne
cmpsb
jbe
pop
or
leave
(bad)
out
or
faddl
push
in
inc
cmp
mov
pop
pop
out
movsb
mov
push
(bad)
rcl
into
dec
jge
jge
dec
mov
mov
jns
std
sub
jae
jbe
fsts
ret
dec
jp
or
scas
fisttpl
xchg
mov
in
pop
in
test
xchg
mov
add
and
xor
dec
imul
inc
cmpsb
sub
xchg
xchg
inc
idiv
ret
sbb
fsts
xchg
mov
add
jmp
dec
ljmp
and
aad
jo
ret
add
ret
cmp
js
or
mov
sahf
jns
push
mov
sti
sahf
sub
(bad)
push
mov
test
jbe
sub
popa
jg
mov
pop
xor
insl
sbb
xchg
pop
xor
xchg
fsubrl
push
aas
jge
mov
cmpsl
stc
js
scas
mov
(bad)
jo
fildl
xchg
fprem
xor
leave
xchg
ljmp
loope
cmp
outsl
(bad)
cld
test
add
adc
pop
data16
push
add
lret
mov
or
add
ret
fildll
and
mov
push
and
outsb
data16
(bad)
mov
mov
inc
(bad)
(bad)
enter
fsubl
mov
add
mov
push
leave
pushl
dec
stos
sub
and
pop
cmpsb
xchg
into
xchg
je,pt
jne
jle
lds
sub
xchg
das
fs
push
repnz
push
into
sbb
pusha
add
pop
jo
push
cmp
repz
pop
mov
mov
jno
push
jno
inc
arpl
mov
sbb
mov
stc
lret
sbb
pop
out
sub
jecxz
mov
pop
push
in
sbb
or
out
rcrl
(bad)
leave
out
fidivl
enter
pop
jbe
xchg
mov
xchg
aas
or
mov
data16
or
ss
add
outsl
clc
or
out
mov
pop
sbbl
adc
lret
std
call
in
xchg
dec
sbb
xchg
cli
push
and
dec
add
cmp
add
push
popf
imul
test
mov
xchg
jmp
xor
inc
daa
add
test
std
jnp
push
mov
decl
inc
sti
scas
popf
fiadds
test
outsl
cld
addr16
pop
or
adc
pop
popa
pop
loope
(bad)
call
outsb
jle
xchg
mov
das
jp
dec
push
sub
jg
test
enter
or
xchg
sub
movsb
ret
or
cmp
rorl
sbb
and
test
and
rcll
andl
(bad)
cmc
dec
ret
pushf
fadd
mov
mov
fs
repnz
popa
inc
pop
jae
cmp
jb
push
cli
xchg
test
mov
lcall
adc
rcl
das
test
add
push
xchg
inc
imul
mov
imul
lret
push
cmpsb
cmp
in
ljmp
pushf
adc
lahf
lcall
dec
sti
mov
jae
pop
int
bound
adc
sub
filds
add
xchg
add
sbb
xor
mov
lds
cmp
push
pop
sub
mov
jbe
sbb
scas
pop
call
mov
fimull
pop
ffreep
rolb
jno
mov
xchg
xor
repnz
imul
testl
push
cmp
xor
daa
and
xchg
enter
jnp
popa
dec
sub
clc
lds
test
movsl
pop
das
and
inc
jp
sbb
subl
inc
xchg
les
jb
push
into
add
mov
adc
dec
test
out
ljmp
mov
or
xchg
jl
adc
mov
jns
faddl
ljmp
movsb
shl
ret
inc
cmp
andl
dec
push
popf
out
loope
out
popa
ret
lods
out
scas
aam
mov
notl
mov
mov
mov
jne
out
fidivl
push
add
push
pop
movl
mov
je
push
and
add
mov
fwait

xchg
jns
idivl
xchg
(bad)
jb
mov
jne
sbb
mov
push
cmp
fisubrl
xchg
fbstp
or
dec
xchg
add
rclb
push
or
mov
xor
movsb
pop
filds
add
and
mov
xchg
add
cli
scas
int
sbb
push
mov
inc
dec
pop
jns
cs
sbb
shll
cs
lea
incb
fiaddl
les
push
cmp
cmc
fimuls
xor
jmp
and
out
adc
mov
or
rcrb
repz
sbb
je
mov
cmp
and
adcl
add
aaa
(bad)
(bad)
iret
scas
jb
clc
daa
dec
sbb
rolb
pop
lock
shlb
jg
xchg
cmp
divl
cmp
adc
popa
jno
jo
fsts
add
sub
mov
sbb
popf
cld
testb
and
cmp
lcall
jp,pt
frstor
push
repz
les
mov
into
clc
and
lea
enter
inc
(bad)
push
icebp
jp
mov
jne
iret
lret
push
cltd
aas
sbb
out
or
push
decb
orb
xchg
lock
lcall
xor
inc
fwait

push
xchg
pop
mov
dec
loopne
insl
leave
jnp
xor
(bad)
cmp
test
sbb
dec
adc
jmp
sti
push
mov
pop
push
rcrb
sahf
movsb
mov
aas
(bad)
push
aam
jo
mov
dec
in
(bad)
aas
fistl
sbb
cmp
cmp
cmpb
and
outsb
jp
cs
dec
repnz
cmp
stc
mov
and
mov
gs
cmc
jg
jg
pop
loope
mov
ss
imul
aad
adc
mov
subb
in
imul
testl
hlt
test
mov
dec
dec
pop
jge
ljmp
insb
cmp
mov
cs
and
jne
loopne
scas
nop

outsl
pushf
xchg
pop
(bad)
jge
orb
xchg
int
sbb
jle
adc
jne
rcrb
sub
adc
mov
sbb
in
mov
push
mov
sbb
sbb
es
mov
and
repz
push
addb
pop
jns
push
jg
aas
add
nop

mov
xor
pop
add
cmpl
insl
inc
(bad)
lock
jmp
fidivl
leave
insl
clc
scas
push
fsubrl
(bad)
(bad)
or
jnp
add
(bad)
mov
jmp
rorl
(bad)
cmp
inc
pushf
out
fisubl
loop
loopne
es
jecxz
shll
(bad)
gs
daa
add
add
sti
dec
out
ds
push
ficomps
jbe
js
daa
rclb
mov
scas
outsl
mov
cwtl
and
mov
cmp
jbe
push
inc
ljmp
push
lods
mov
pushf
lcall
dec
jl
mov
jnp
adc
in
leave
out
sahf
adc
mov
lods
dec
ret
cs
add
gs
in
psraw
mov
sarl
cmp
or
cltd
loope
mov
and
mov
fs
xchg
add
pop
mov
icebp
xor
ljmp
enter
ja
test
test
imul
push
cmp
lret
rolb
arpl
xchg
xor
add
add
and
add
fdivp
add
cmp
int3
lds
lea
pop
dec
inc
adc
adc
dec
das
mov
test
jns
dec
xchg
test
or
sbb
outsb
data16
je
into
in
jae
or
inc
hlt
and
ss
add
xchg
paddusb
fwait

jge
mulb
cmc
fiadds
adc
lock
adc
jae
mov
(bad)
xchg
test
sub
push
jmp
filds
movsb
xchg
mov
test
out
cmp
adc
dec
dec
mov
pop
(bad)
popl
cmp
lods
pop
mov
or
cmp
push
fs
lods
stc
mov
cmpb
dec
cmp
jo
dec
je
add
stos
clc
test
js
sub
rcll
inc
out
dec
hlt
call
mov
arpl
loopne
int3
push
cmp
and
dec
ret
jno
or
sbb
adc
js
roll
jo
fidivl
xchg
adc
pop
stos
cmpsb
add
fs
jmp
arpl
and
push
xchg
or
cmp
jbe
inc
push
jge
iret
push
lret
mov
cwtl
das
das
fildll
aam
mov
addl
sub
test
jns
mov
xchg
dec
pop
movsl
rclb
pop
mov
(bad)

mov
inc
enter
outsb
shrb
out
cmpsl
jne
sti
xchg
pop
xchg
scas
jns
adc
pop
mov
xchg
imul
inc
jbe
scas
mov
enter
adc
imul
das
jne
pop
cltd
push
lds
in
jbe
imul
pushf
mov
sti
jge
adc
rorl
mov
mov
lahf
popf
adc
pushf
mull
lods
mov
xchg
inc
cmp
mov
dec
push
sub
jae
std
lahf
scas
insl
or
sbb
(bad)
data16
insl
mov
shrl
test
orl
ljmp
add
mov
push
mov
sbb
out
add
je
sub
es
fcompl
jne
cmp
hlt
xchg
cmp
xor
jecxz
push
mov
inc
setae
fsub
or
(bad)
jne
push
jbe
mov
mov
iret
cmp
and
and
imul
jb
repz
xor
inc
lea
enter
cmp
xchg
loopne
jne
sbbb
xlat
mov
ja
popa
(bad)

dec
aam
push
dec
sbb
call
fsts
(bad)
jg
out
or
push
pop
sbb
dec
xor
repnz
mov
push
fcompl
or
nop

xchg
loope
and
(bad)
loop
stos
js
pop
dec
cmp
(bad)
in
sbb
push
xor
cmp
push
adc
leave
shll
test
mov
pushl
imul
pop
sub
mov
or
push
aad
shlb
jns
repz
mov
sbb
(bad)
sbb
mov
into
push
cmpsb
adc
ss
int
xchg
int
sub
loope
sub
out
loope
fildl
pop
jp
rorb
mov
call
jg
jl
repz
mov
out
lret
add
enter
sbb
sbb
adc
cwtl
das
insl
lcall
push
dec
(bad)
push
fmull
and
lods
xor
and
int
fnsave
push
shl
in
les
outsb
in
push
fs
xor
lods
test
out
or
push
cmp
mov
push
pop
mov
call
sahf
lods
and
out
push
pushl
lods
mov
mov
mov
pushf
and
xchg
lods
and
int
dec
ja
push
mov
mov
jl
jl
outsl
(bad)
mov
js
leave
and
mov
iret
push
cmp
push
add
jecxz
loope
mov
lahf
add
push
adc
test
notb
xchg
es
pop
mov
aaa
push
sbb
lods
test
(bad)
push
ja
adc
sub
pop
jle
or
dec
pushl
push
cmp
push
mov
mov
mov
mov
xchg
cmp
test
pop
mov
mov
xlat
sbb
sub
jne
add
outsl
clc
adc
xchg
or
jg
xor
cmc
ret
xor
das
cmpsl
dec
xlat
dec
mov
out
mov
sar
lahf
pop
mov
jecxz
imul
push
sub
jbe
outsl
addr16
or
or
int
jle
jg
xchg
fists
insl
int
insl
mov
loop
std
ret
xor
cmp
(bad)

test
pop
in
(bad)
leave
jbe
inc
outsb
xchg
mov
jmp
popf
pop
div
fxch
pop
subl
out
xor
jecxz
repz
and
mov
ja
push
stos
jno
orb
cmp
test
pop
sbb
(bad)
sbb
(bad)
out
and
pop
mov
and
cmc
mov
or
or
into
ja
(bad)
jns
andb
lahf
ja
or
data16
shl
roll
cld
adc
pushf
std
push
ja
mov
ds
fldt
push
jecxz
out
out
jo
das
xchg
addl
aas
jp
mov
mov
sub
into
rol
out
xchg
jno
sbb
pushf
adc
lods
mov
or
xchg
outsl
pop
test
mov
lahf
cltd
ss
xor
push
mov
lret
add
jbe
fisttpll
out
pop
add
mov
sub
cwtl
cmpsb
ja
inc
out
fisubrl
imul
or
adc
push
and
fmulp
mov
adc
loope
add
stos
jg
divl
out
(bad)
(bad)
ret
mov
or
nop

jg
push
mov
js
ja
sti
xchg
daa
scas
in
pop
loopne
jne
hlt
adc
mov
push
add
xor
(bad)
mov
xorl
lea
gs
add
(bad)
addr16
(bad)
xchg
fists
push
xchg
sbb
mov
and
mulb
andb
incl
or
dec
hlt
cmp
int3
mov
sbb
xchg
cmp
shrb
fdivrs
shlb
xchg
leave
cwtl
das
loop
outsb
inc
mov
rcrb
pop
fildl
push
ds
push
or
cld
outsb
inc
add
mov
ds
pop
sub
jecxz
ror
sbb
cmp
leave
xchg
or
mov
mov
lea
stos
loope
loopne
(bad)
mov
cld
scas
bound
dec
push
outsb
stos
pushf
lret
add
aaa
pop
test
setae
add
add
imull
(bad)
push
mov
pop
les
xchg
(bad)

ja
adc
cltd
rcrb
mov
cltd
mull
clc
mov
cmpsb
xor
xchg
pop
sbb
bswap
jo
leave
add
test
or
call
dec
mov
call
cmp
jns
fidivs
add
mov
sbb
jne
negb
out
test
mov
adcl
out
out
divl
into
repnz
cltd
stc
sub
loopne
cld
adc
cmp
add
inc
outsb
out
ja
pop
mov
pushf
adc
les
jg
push
insb
jecxz
cwtl
js
jbe
mov
pop
data16
andb
(bad)
mov
rcl
pop
repnz
scas
aaa
aas
shl
cmp
cmp
addr16
out
pop
xor
sbb
jbe
pop
gs
xchg
shll
push
(bad)
es
jo
imull
dec
sub
mov
je
test
mov
adc
fildll
imul
mov
stos
push
dec
les
xchg
jle
into
push
in
xchg
les
andl
pop
push
mov
insb
stos
js
pop
inc
dec
loop
ret
add
bound
outsb
jae
insl
aad
lahf
scas
mov
aad
aam
push
mov
aam
js
fwait

push
aas
nop

insl
mov
xchg
mov
push
xchg
je
cli
push
push
adc
ss
dec
and
push
xchg
inc
pop
cmp
jl
pop
mov
lcall
loopne
add
in
pop
mov
test
sbb
psadbw
or
das
fxch
mov
push
dec
scas
add
inc
ret
sti
iret
bound
(bad)
and
ss
aas
int
pushf
cld
lahf
ja
mov
xchg
sub
stc
adc
cld
cmp
jmp
jle
sbb
dec
pop
es
fisubrs
sbb
std
push
(bad)
(bad)
iret
(bad)
jmp
pop
dec
xor
shr
clc
xor
scas
outsb
in
stos
mov
int3
les
mov
dec
mov
je
mov
shrb
jbe
leave
jo
push
cmp
mov
out
xchg
pop
int
imul
pop
jne
inc
js
xor
fistpl
in
mul
sarb
lcall
ret
mov
xor
lret
cmpsb
repnz
xchg
pop
sbb
out
push
xchg
enter
test
sbb
jne
(bad)
test
cmp
imul
fdivrp
(bad)
cltd
aaa
shrl
mov
cwtl
push
dec
mov
lods
aas
(bad)
cmp
es
insl
adc
repz
(bad)

setae
dec
adc
loopne,pt
and
push
fs
pushw
lods
in
ja
mov
push
push
loop
push
or
dec
adc
in
dec
adc
rcrb
repz
popa
sbb
sbb
fcoml
inc
cmpl
push
mov
insb
cmp
xchg
test
fistpl
cmp
gs
lods
frstor
test
or
or
repnz
insl
cmp
loopne
(bad)
mov
cmp
fnop
adc
not
shr
sbb
pop
test
add
xlat
lds
incl
mov
imul
clc
dec
sbb
pop
outsb
cmpsb
es
jg
fdivp
inc
or
lods
and
in
push
insl
shll
roll
pop
pop
push
decl
test
mov
mov
movsl
rcr
cmpsl
cmp
pop
sbb
adc
xchg
ja
xchg
(bad)
clc
frstor
mov
aam
test
outsl
addl
adc
mov
std
or
xchg
push
mov
out
lahf
jb
jnp
iret
xchg
out
test
out
sub
test
xor
loop
inc
push
jae
adc
popa
xor
notl
dec
adc
mov
add
xor
imul
sbb
das
roll
das
xchg
lahf
pop
adc
lret
cmp
mov
mov
or
jl
ljmp
sbb
or
sbb
in
and
adc
in
aas
pop
and
cld
out
cmpsb
pop
das
les
and
push
pop
cmpsb
fcoms
dec
dec
in
sub
cmp
aam
aas
loopne
nop

hlt
lahf
icebp
out
and
cmc
dec
scas
fnstsw
cmp
fistpl
jmp
xchg
ss
js
inc
mov
inc
push
lcall
xchg
lea
mov
mov
fimuls
mov
loop
sbb
repnz
pop
dec
loope
push
mov
sbb
fs
push
adc
(bad)
lods
or
sub
pop
shl
xor
lods
push
pop
mov
sub
in
pop
int3
inc
scas
cld
add
pop
push
xor
cmp
inc
lahf
ja
lea
mov
shl
scas
gs
pop
call
mov
in
add
fsubr
(bad)
ud2
xchg
push
xchg
sbb
jnp
(bad)
sbb
frstor
dec
mov
cmp
fiadds
dec
stos
sub
mov
inc
in
adc
and
aas
notl
add
testb
stos
in
hlt
pop
dec
cld
cmpsl
push
dec
pop
inc
inc
xchg
jp
aam
sti
cwtl
inc
adc
clc
arpl
mov
sbb
js
in
cmpsl
imul
cmp
jg
inc
inc
notl
add
adc
dec
fistpll
dec
mov
(bad)
lods
test
sbb
test
jnp
sti
sub
dec
push
lods
outsb
jecxz
daa
sbb
shll
push
sbb
push
ljmp
shrb
int
imull
xchg
xor
out
bound
cmp
iret
repnz
mov
lock
lds
in
int
pop
cmp
sub
and
push
or
push
pop
mov
sbb
add
fdivrs
push
pop
ret
jne
test
out
mov
push
jle
rol
ficompl
out
ja
inc
xchg
adc
and
and
call
pushf
out
gs
outsb
test
sarb
mov
push
sbb
ss
dec
mov
aad
ret
push
pop
push
decl
sahf
ficomps
inc
push
ljmp
xor
lea
addl
iret
outsl
mov
scas
sub
pop
xchg
(bad)
stos
cs
cmpsb
das
pop
std
and
hlt
not
imul
lock
aam
jbe
imul
push
mov
jle
cmc
mov
loopne
mov
push
loope
lea
mov
out
adc
xchg
popf
cmp
pusha
call
popf
xor
dec
stos
cltd
fldt
clc
pop
popa
imul
ljmp
push
out
test
ljmp
or
mov
int3
lods
imul
lahf
jecxz
or
repz
mov
sub
outsb
mov
mov
xchg
bound
push
pushf
adc
loope
push
cmp
out
shll
mov
inc
inc
es
movsl
xchg
ror
mov
xchg
sbb
cmpl
adc
sbb
les
mov
mov
or
dec
(bad)
cld
jmp
mov
mov
add
fsubs
jnp
xchg
mov
xchg
and
fildll
pushf
adc
add
arpl
add
test
bound
jno
mov
(bad)
mov
pop
xchg
loopne
in
ja
dec
dec
icebp
enter
push
mov
add
cld
hlt
shrb
mov
jge
hlt
call
xchg
xchg
fimuls
mov
hlt
fs
into
mov
lahf
iret
(bad)
idivl
xor
xor
mov
dec
ret
enter
sahf
les
in
xchg
lock
mov
mov
mov
pop
es
push
lea
dec
shlb
adc
xor
lahf
jge
xor
pop
not
(bad)
cmp
adc
jecxz
mov
shrl
daa
into
je
or
aad
stos
add
mov
mov
bound
repz
jns
mov
mov
testb
rcrl
xor
negl
jns
idivl
mov
sti
iret
fildll
leave
pushf
adc
mov
movsl
in
xchg
bound
jno
inc
adc
push
sbb
dec
push
cmp
shlb
scas
(bad)
outsb
add
xchg
jmp
add
push
nop

sbbb
ja
lods
in
ret
cmpsl
add
fcompl
ret
push
pushf
mov
adc
lret
push
mov
pop
lods
(bad)
js
inc
outsb
int
cltd
cmp
fisubl
sbb
push
iret
js
sbb
sahf
fstps
add
xchg
sub
mov
arpl
sub
add
inc
lea
int3
inc
insl
add
inc
pop
enter
mov
dec
cli
xchg
movsb
icebp
mov
xor
test
aas
leave
or
adc
int
cmp
lds
add
dec
shrb
cmp
pop
movl
inc
mov
stos
in
rep
in
mov
clc
lret
xchg
xor
cmp
xchg
xor
sub
and
jp
mov
push
and
pop
and
and
je
int
in
movsl
dec
(bad)
out
popa
clc
mov
jp
pop
pop
jae
inc
xor
inc
cmp
into
stos
inc
add
test
sahf
push
sbb
fimuls
mov
mov
je
sbbl
xor
out
fimull
push
fidivs
jne
outsl
rorb
pop
jle
lods
cmc
sahf
divl
or
mov
idiv
adc
fwait

cwtl
mov
add
cli
outsl
in
pop
inc
xor
mov
jp
sub
adc
dec
cs
mov
and
es
and
(bad)
xchg
repnz
mov
cmp
push
fildl
outsb
cli
outsl
adc
pop
push
repz
push
sahf
divl
sub
(bad)
jb
aad
adc
dec
cs
xchg
fbld
repnz
push
(bad)

adc
cmp
(bad)
push
fistpl
add
pop
jns
stos
mov
clc
(bad)
(bad)
sub
adc
dec
or
and
add
gs
sbb
in
mov
gs
cmp
mov
fs
inc
movsb
in
enter
pop
sub
loopne
jne
ljmp
or
push
sbb
jecxz
outsl
dec
or
rep
fistps
adc
cmpsb
add
jbe,pn
lahf
jno
xchg
gs
push
dec
mov
rep
sub
adc
sub
jb
rclb
dec
adc
sub
(bad)
leave
and
in
push
jne
pop
cmc
pushf
jns
ja
sbb
mov
xchg
xor
bound
sbb
stos
notl
inc
(bad)
sub
test
loope
ficompl
mov
fnstsw
mov
mov
in
pop
pop
and
fisubrs
pusha
pop
repz
sbb
dec
push
in
add
lahf
mov
mov
pop
sarb
sub
aaa
jae
jle
pop
push
ja
push
jno
sub
lahf
add
mov
sub
fcmovnu
xchg
xor
(bad)
push
and
or
flds
test
pop
mulb
arpl
jge
stos
xchg
in
out
scas
outsl
adc
push
rolb
iret
aaa
cwtl
sahf
sbb
jg
leave
sub
mov
adc
jnp
inc
adc
sub
xor
adc
loop
mov
movd
adc
int3
dec
rcll
adc
cmpl
mov
imul
jae
ljmp
mov
mov
mov
xor
outsl
lcall
mov
test
test
or
cltd
add
js
cwtl
imul
sbb
das
or
xchg
test
pushf
int
gs
callw
xchg
shll
lds
sub
out
test
mov
leave
pushf
adc
(bad)
int
lret
jne
int3
push
js
into
jns
lock
orb
sub
aad
cmpsb
ja
inc
mov
sbb
jne
adc
sub
inc
lods
sarb
add
outsl
mov
hlt
mov
(bad)
inc
or
notb
es
cli
out
cmc
pop
pop
and
push
mov
push
cld
call
sbb
or
or
adc
fwait

jecxz
cmp
jmp
mov
fcompl
ret
out
and
out
clc
mov
xor
dec
sub
mov
lret
iret
or
data16
cmc
jmp
fs
fistpl
daa
push
dec
das
inc
jmp
insl
sbbl
pop
mov
mov
cmp
sbb
loop
jne
stos
les
pop
outsl
ljmp
fldt
adc
sub
cs
mov
rcr
shrb
(bad)
xor
cmc
sbb
(bad)
xabort
or
mov
xchg
pop
fisubl
fistpl
xlat
shr
pop
rolb
gs
mov
cmpsb
ja
mov
fisubl
fistpl
js
lret
mov
xchg
cmp
sub
and
pop
pop
xor
adc
push
cmp
int
fildl
push
jecxz
adc
pushf
adc
jecxz
das
sbb
and
rorb
cmpsl
in
repnz
clc
insl
sti
jg
daa
nop

aam
adc
scas
mov
sbb
roll
inc
js
jbe
pop
cmp
lock
lahf
dec
mov
lret
cmp
adc
jle
jg
bound
push
je
gs
nop

shlb
xlat
daa
add
pop
inc
icebp
les
movsl
push
cwtl
push
and
jle
adc
sbb
pop
(bad)

in
sub
jbe
arpl
sbb
xor
mov
cltd
int3
sub
pop
mov
sub
sbb
sbb
ret
push
xor
out
lea
mov
pop
cmp
jae
rcrl
xchg
and
mov
cltd
pop
clc
jl
adc
mov
jmp
mov
iret
sub
adc
inc
aad
inc
add
leave
pop
xor
movl
mov
and
shll
ja
dec
loopne
and
pop
sarb
sbb
inc
(bad)
jae
sub
stc
(bad)
mov
int3
loopne
(bad)
pop
scas
sbb
and
pop
popl
pop
ja
pop
neg
rclb
add
dec
inc
lcall
and
scas
clc
pop
lcall
sbb
ficompl
xchg
and
add
aam
stc
sbb
and
ret
add
int3
or
das
mov
imul
cmpsl
in
sbb
add
je
dec
loope,pn
adcl
sbb
pop
xor
sahf
imul
push
testl
nop

mov
sub
sbb
int3
aad
adc
inc
daa
testl
mov
(bad)
sub
fwait

test
mov
stos
in
stc
cwtl
sbb
push
(bad)
push
(bad)
mov
pop
cmp
xchg
push
add
nop

pop
cmp
fs
mov
lret
sbb
xchg
(bad)
aad
xchg
sbb
clc
sbb
(bad)
pushf
pop
cmpsb
jb
filds
sbb
movsb
mov
aad
lods
test
clc
movb
add
cmpsb
inc
mov
inc
adc
int
inc
outsb
pop
cmp
sub
ja
adc
inc
pop
cmp
in
mov
sub
inc
fs
test
ja
mov
lret
cmp
mov
rcrb
mov
int
mov
(bad)
inc
push
cmp
push
fistpl
xor
out
notb
lcall
jg
adc
ds
mov
clc
jae
movsl
mov
mov
pop
(bad)
mov
hlt
add
xchg
mov
push
dec
scas
icebp
cltd
fisttps
sub
push
aas
lret
pop
push
fcomp
adc
lahf
push
adc
fisubrl
mov
inc
int3
mov
sub
fmul
mov
imulb
int3
dec
call
popl
jb
in
in
rorb
xor
mov
arpl
inc
cmp
and
out
stc
clc
cmp
ds
roll
sbb
aad
daa
sbb
fsubl
jle
cld
xchg
lock
mull
cmpsb
pop
fs
repnz
iret
in
movsl
or
xchg
arpl
xchg
ret
addr16
leave
jmp
stc
in
pop
mov
(bad)
and
mov
fld1
pop
add
sarl
pop
outsb
rorb
mov
in
mov
divl
ret
ja
sub
(bad)
cmpsb
fisttpl
push
sti
in
nop

(bad)
adc
(bad)

dec
mov
test
sbb
xchg
xor
mov
dec
lea
aas
push
stos
pop
mov
jbe
out
imul
clc
and
add
rcr
xchg
mov
(bad)
push
or
out
pop
mov
add
push
pop
div
or
(bad)
xchg
sbbl
fisubrl
jnp
lahf
add
jl
movsb
add
mov
sbb
icebp
xor
xor
(bad)
pcmpgtw
cmp
mov
repz
movsb
ffreep
push
and
mov
in
out
mov
pop
ficompl
cmpsl
lahf
add
dec
mov
mov
pop
rorb
and
add
gs
pop
add
sub
xchg
int3
test
and
lods
xlat
sub
mov
sbb
or
mov
loopne
mov
and
sar
adc
es
cwtl
popa
ja
in
in
cs
(bad)
ja
fldenv
outsl
ds
popf
rcrb
in
jo
(bad)
fs
pop
jne
pushf
loop
(bad)
mov
cs
(bad)
ja
inc
loopne
rolb
rcl
ret
in
mov
mov
rolb
mov
cmpsl
iret
adc
cmpsb
cmc
lock
fsubl
pop
sub
jp
mov
ja,pn
popa
ja
fldenv
dec
pop
inc
enter
insl
(bad)
gs
fcomi
sub
and
mov
ja
flds
push
jge
mov
and
test
in
xchg
(bad)
add
xchg
pop
fucomip
jne
stos
lods
and
mov
push
out
shr
mov
jl
mov
pushf
(bad)
cmp
mull
(bad)
cli
adc
xchg
push
xor
ja
jbe
rcr
mov
cmp
neg
pop
lahf
(bad)
aad
jno
dec
pop
js
mov
(bad)
movsl
movq
loope
rcrb
add
and
dec
pop
mov
add
fcmovb
xchg
aaa
pop
aas
in
rcl
js
mov
and
test
out
lock
pushf
mov
inc
lahf
sub
and
mov
pop
push
xchg
mov
jae
add
ja
ljmp
ja
es
shlb
andb
sub
decl
imul
rorb
mov
loopne
inc
rclb
or
clc
pusha
lea
push
xchg
cs
mov
ret
or
(bad)
outsl
cld
dec
cmp
aad
and
(bad)
in
pushf
mov
ja
jbe
fisubrl
arpl
lahf
ja
push
and
fwait

or
outsb
adc
mov
pushf
orb
jg
aas
mov
stc
mov
outsl
fucomip
mov
sbb
aas
sarl
ja
leave
decb
mov
or
popa
fbld
pop
movsl
xor
sub
jg
sub
cmpsb
ja
data16
xchg
fisttpl
push
xchg
xchg
daa
iret
push
or
das
ljmp
aam
mov
mov
popa
mov
jns
pop
shlb
aad
mov
sbb
ja
std
mov
lods
enter
push
fists
sarl
data16
std
jnp
fwait

out
inc
cwtl
mov
jecxz
ss
addr16
fxch
outsl
test
pop
rcl
mov
mov
adc
cmpsb
ja
fwait

mov
call
lock
fcmovnbe
lock
arpl
dec
adc
outsb
jge
sub
out
lahf
icebp
mov
fnsave
rol
pop
int
sar
in
std
inc
outsb
int
out
jg
int
enter
adc
add
(bad)
cmc
fwait

rcrb
insl
mov
clc
pop
or
mov
adc
pushf
and
xlat
xor
pop
mov
inc
pop
mov
aam
hlt
and
das
stc
dec
rcrl
push
pop
out
fisubrl
cs
lds
push
dec
cli
lods
sti
inc
out
fisubrs
in
out
repnz
aas
(bad)
es
out
fsubl
sqrtps
outsl
and
(bad)
dec
cmp
mov
inc
out
pushf
mov
add
mov
fistpl
cmp
push
rcrb
inc
sbb
fwait

test
test
dec
mov
out
jge
fstpt
jbe
jno
pop
dec
in
cmpsl
cmp
testl
adc
mov
lahf
ja
popa
mov
mov
sbb
inc
js
sti
inc
fs
and
cli
into
adc
insl
shll
xchg
stos
loopne
adc
inc
push
jecxz
addl
push
dec
or
mov
test
push
jbe
outsl
cs
fbstp
sub
insl
(bad)
xlat
negb
and
cld
lea
fsin
outsl
data16
cmpsl
lock
repz
sbb
idiv
(bad)
(bad)
pop
xchg
mov
jae
push
adcl
push
ja
cmpsb
adc
out
movsl
add
xchg
jns
jg
sbb
jae
nop

sbb
jo
fwait

pop
movsb
int
cld
dec
js
daa
cs
pop
cmpsl
addr16
popa
inc
mov
iret
cmp
fs
push
mov
and
(bad)
fistpl
xchg
jno
xchg
es
das
sub
lods
pusha
push
nop

push
ljmp
fcmovne
push
pop
xchg
jp
mov
test
dec
fldenv
clc
int3
and
pushf
push
mov
imul
lahf
add
xor
rorl
lods
(bad)
ds
xchg
fsubs
mov
mov
mov
mov
faddl
mov
sbb
xor
or
fisubrl
(bad)
dec
adc
stc
iret
xchg
std
pop
dec
or
lock
rcrb
mov
cmp
mov
rorb
ror
add
mov
adc
mov
insl
js
add
ja
xor
lds
lods
scas
pop
fsubrs
sub
out
fidivl
gs
loopne
test
inc
outsl
xchg
in
push
jg
test
sbb
push
jecxz
(bad)
sub
loop
mov
add
inc
outsl
cmp
into
sarb
pop
add
pop
push
out
pop
push
daa
cs
jns
jno
scas
insl
cltd
xchg
pop
shlb
sti
mov
stos
sub
pushf
dec
adc
mov
icebp
lcall
pop
dec
(bad)
stos
cmp
mov
in
out
pushf
jns
add
fsubs
mov
jns
sarb
popf
js
notl
punpcklbw
aas
add
out
jmp
adc
xchg
out
adc
adc
xchg
gs
xor
mov
dec
push
out
in
arpl
xor
fistpl
mov
mov
sbb
fs
subl
cmpsb
les
mov
popa
mov
sub
pop
shlb
push
fs
cmc
ja
add
nop

mov
push
ja,pt
xor
mov
pop
pop
sub
insb
test
aas
lret
dec
testb
out
jl
ja
cmpsl
loopne
pop
cmp
mov
stos
and
(bad)
out
mov
jmp
fistpl
xchg
stc
mov
mov
cmp
inc
mov
adc
cwtl
and
loope
jp
pop
dec
jae
mov
mov
inc
cmpsb
jle
loope
push
fcom
cmp
and
xchg
loope
in
pop
out
(bad)
fcomp
fs
push
mov
cwtl
fists
xlat
imul
addr16
pop
rclb
xchg
pop
clc
das
push
push
add
out
aaa
fiadds
(bad)
adc
xchg
out
mov
mov
pop
divl
leave
nop

(bad)
mov
adc
bound
std
adc
inc
jns
pop
rolb
and
mov
xchg
repz
leave
mov
sbbl
ja
jl
cmp
sbb
aaa
dec
stos
insb
lahf
je
sub
int
mov
pop
rcll
ds
testl
mov
(bad)
imul
jl
jle
inc
mov
test
outsb
fldt
fs
ss
push
ret
ja
cli
out
sub
mov
xchg
fucomip
push
insb
outsb
adc
loop
adc
mov
lock
ret
aam
push
loope
mov
push
push
les
std
test
mov
sbb
cs
xchg
jmp
mov
fs
sar
cmp
mov
or
loopne
xchg
cmp
push
push
(bad)
mov
jg
in
pop
xor
adc
shl
pop
in
cwtl
or
hlt
xor
jg
and
out
fs
int3
sub
scas
movsl
ja
in
test
or
pop
lahf
adc
xchg
xchg
in
and
inc
mov
push
rorb
inc
xor
outsl
and
fisttpl
iret
gs
sti
push
scas
ss
subl
dec
daa
mov
sbb
mov
push
xor
adc
shlb
(bad)
dec
sbb
mov
insl
mov
jne
add
mov
rolb
push
sbb
outsb
out
and
mov
fs
push
ja
into
int
ja
mov
fistpl
outsl
pop
js
daa
icebp
lods
and
pop
out
push
stos
cmpsb
ja
fwait

mov
out
mov
xchg
lahf
push
dec
aad
testl
movaps
adc
push
push
loopne
(bad)
out
(bad)
je
in
and
lods
xchg
push
gs
cmc
test
aas
add
push
dec
pop
pop
test
popa
leave
lcall
push
xchg
out
cmpb
div
lock
ja
jb
outsl
loope
andnps
cmp
mov
pop
jne
pushf
loop
add
dec
mov
test
lock
xchg
sarb
pop
repnz
jne
movsb
pushf
mov
ljmp
fistpl
push
push
lahf
sbbl
les
push
mull
mov
xor
clc
or
inc
add
xchg
in
inc
in
ljmp
clc
mov
pushf
inc
imul
cmpsl
sbb
(bad)
and
pop
adcl
in
test
adc
adc
mov
xchg
addr16
rcrl
sbb
dec
(bad)
(bad)
icebp
stc
pushf
adc
lods
shrb
mov
dec
leave
(bad)
mov
neg
out
(bad)
sti
inc
jecxz
test
inc
jns
or
dec
jnp
lock
sbb
shrl
push
cmc
push
push
(bad)
not
sbb
xchg
lret
xchg
mov
mov
and
arpl
sub
ja
pop
xor
add
aam
sbb
popa
shlb
dec
lock
push
inc
xorb
and
daa
xlat
icebp
add
inc
mov
xrelease
clc
mov
(bad)
outsl
shlb
inc
push
imul
mov
dec
imul
bt
popf
dec
lret
jno
subl
lds
lock
lahf
ja
push
loopne
loope
add
mov
(bad)
push
ja
ret
xchg
mov
push
roll
xor
shll
stos
push
adc
push
adc
xor
cmpsl
scas
sub
ja
repz
enter
or
pop
pop
test
sub
int3
arpl
jno
inc
push
ss
ja
add
outsl
fbstp
and
push
gs
add
pop
sub
dec
mov
inc
dec
ret
dec
cld
xchg
fxch
outsl
mov
ret
inc
xor
mull
test
push
in
into
cmp
dec
dec
pop
jge
jl
ficoms
and
scas
gs
push
add
mov
imul
pop
rclb
gs
pop
inc
push
imul
and
imul
mov
lcall
stos
mov
cmpsb
leave
or
add
add
fcmovnbe
shrb
mov
lods
sub
inc
add
fimull
fisubrl
mov
jno
mov
rcl
stos
jbe
idivl
(bad)
(bad)
adc
mov
cmp
jno
std
rclb
mov
(bad)
int3
out
fucomip
mov
sbb
pushf
and
jecxz
(bad)
push
mov
adc
ret
(bad)
push
jbe
ss
je
jo
data16
cld
sarl
int3
adc
cmp
sar
jl
ret
sarl
gs
mov
push
cmpsb
icebp
sahf
push
stc
lret
iret
mov
dec
jl
outsl
fists
mov
adc
fcoms
mov
movsl
fisttpl
inc
aad
dec
in
xlat
das
dec
lods
mov
movsb
ror
inc
cs
lods
mov
loope
pop
movsl
push
sbb
xchg
lods
stc
pusha
sbb
mov
xchg
mov
jns
inc
clc
jg
ds
pop
ret
cmpsb
cli
xchg
divb
push
int3
movsb
out
data16
(bad)
mov
xor
mov
push
lret
mov
js
lcall
jns
shlb
add
lret
and
sub
insb
inc
xchg
cmpsb
ja
arpl
sbb
shr
outsl
ljmp
mov
(bad)
fstpt
jbe
lret
nop

jecxz
pop
dec
int3
xor
rcr
lret
sub
sbb
popa
in
sbb
pusha
arpl
stc
aam
sbb
xchg
push
fiadds
push
fwait

je
xchg
pop
gs
xlat
dec
and
movsl
dec
or
mov
out
imul
and
out
imul
or
sub
out
imul
mov
inc
jbe
mov
jbe
popa
cmpsw
in
ds
mov
flds
cmpsb
cwtl
mov
cmpsb
lods
lahf
ja
rorb
inc
dec
cmp
ja
push
nop

stos
push
aas
es
jge
jne
inc
xlat
adc
movsb
mov
fwait

jno
stos
jmp
mov
outsb
cs
outsb
imul
stc
lret
inc
mov
mov
lret
xor
fisttpl
nop

(bad)
loopne
xchg
sub
out
(bad)
int
xchg
fistpl
or
outsl
js
stos
sbb
aas
mov
xor
jnp
cmp
dec
shr
mov
add
jnp
pop
aas
xchg
pop
pop
push
mov
stc
push
in
fwait

pop
aam
lcall
push
fidivs
mov
push
cmp
(bad)
adc
addr16
adc
inc
mov
inc
imul
sbb
ljmp
adc
fcoml
ds
or
icebp
and
add
adc
xchg
fidivrs
mov
xor
mov
popa
mov
sarb
iret
jmp
sbbb
xlat
hlt
jmp
pop
jmp
scas
loopne
fidivs
or
fadds
ja
adc
fcmovbe
sbb
sbb
adc
out
pop
pop
cmp
mov
add
dec
cmp
insl
out
(bad)
dec
test
mov
dec
shlb
das
jnp
cmp
(bad)
(bad)
das
jg
sub
or
xchg
jnp
je
mov
insb
lock
jge
cmc
cmp
xchg
(bad)
and
cmp
inc
popa
pop
movsl
xchg
mov
es
ja
xor
insb
xor
add
xchg
fistps
lods
or
add
rol
jecxz
or
mov
add
jmp
int3
enter
sbb
sbb
popf
daa
test
pop
addr16
imul
ds
imul
and
das
sub
sub
cmp
pop
into
ret
insb
sub
gs
clc
in
pop
in
stos
sti
jo
xchg
lret
arpl
sub
in
hlt
mov
loope
pop
test
aad
test
aad
add
(bad)
mov
imul
out
or
add
xchg
ss
ljmp
pop
aas
cmpsl
jecxz
in
lea
sbb
jle
idivl
add
scas
jbe
and
push
xlat
int
ds
pushf
pushf
adc
mov
lahf
(bad)

lods
(bad)
push
mov
lods
and
pop
xchg
pushf
pushf
imul
cmp
xchg
adc
mov
mov
jbe
fs
hlt
xor
xchg
dec
sbb
dec
sub
cmpsl
mov
push
aad
loop
cltd
ja
out
(bad)
or
mov
dec
shlb
imul
(bad)
je
adc
std
ss
shll
imul
clc
mov
dec
cmp
fistpl
cmp
sbb
ret
jbe
sub
xor
jo
out
xor
dec
push
(bad)
mov
cmp
loope
adc
and
fcmovu
lahf
stc
and
arpl
lahf
adc
popl
mov
pop
sbb
lret
or
cs
addr16
rorb
fbstp
pop
cmc
mov
adc
pushf
or
imul
inc
stos
sbb
jbe
outsl
fisttps
cmp
imul
mov
pushf
adc
lea
(bad)
popa
dec
mov
xor
sbb
(bad)
xchg
test
cltd
xchg
mov
pop
xchg
lahf
ja
mov
rcrb
adc
mov
xchg
fs
(bad)
testb
in
cmc
cli
mov
xor
fucomip
leave
cmp
lods
pushf
in
gs
mov
xchg
cmpsb
adc
mov
inc
mov
test
push
(bad)
cmpsl
cld
dec
mov
cld
cmp
(bad)
push
imul
mov
xchg
in
outsl
cmp
sbb
aam
(bad)
push
mov
xor
ret
aas
int3
iret
fildll
jp
add
clc
inc
nop

fnstenv
jns
mov
and
out
mov
mov
lods
mov
in
push
pop
mov
repz
mov
add
mov
fisubs
inc
in
cmpsb
jns
jecxz
add
xor
mov
fistpll
cs
hlt
andl
sub
xor
push
dec
jno
pop
ret
testl
rol
outsl
jp
mov
(bad)
sub
fucomip
and
sub
shll
repz
xor
pop
pop
push
inc
jg
aad
jno
fsubrl
mov
addr16
gs
xchg
popf
mov
pushf
adc
sub
mov
jmp
jns
rorl
jp
or
mov
sahf
pop
sub
les
pop
fldl
fwait

and
fiaddl
push
out
andb
popa
mov
(bad)
xchg
addr16
xor
pop
sar
(bad)
das
push
or
sub
into
sarl
test
(bad)
(bad)
cli
push
stos
cli
xchg
push
idivl
fucomip
sub
lahf
test
pop
xchg
ss
push
movsl
fstl
cvtpi2ps
mov
clc
das
pusha
lock
adc
(bad)
pop
xchg
mov
push
std
fidivrl
pop
test
sub
mov
pop
ljmp
stc
jo
lds
out
dec
jo
cltd
lea
ficoml
gs
jmp
or
adc
or
push
sbb
push
xchg
dec
loope
jno
jmp
inc
add
adc
call
mov
sub
mov
jb
mulb
les
loop
push
pop
push
xchg
and
add
dec
cmp
loope
cmp
xchg
cmc
inc
or
mov
inc
jb
mov
in
fcoml
(bad)
addr16
sub
mov
std
mov
test
adc
cs
int3
inc
pop
fst
mov
xchg
subb
dec
push
xlat
xchg
std
repnz
rclb
clc
nop

cs
movb
nop

leave
lods
and
push
or
lret
out
fisubrl
mov
aad
cltd
inc
imul
lods
and
push
mov
test
push
bnd
out
fisubrl
sub
test
sahf
aas
jb
out
ds
imul
mov
fisubrl
stos
ret
push
outsl
fisubs
mov
pop
and
shlb
pushf
adc
jg
push
sub
cld
xor
jnp
rcrb
lods
push
push
out
fs
ds
dec
into
gs
call
sub
in
pop
xchg
xchg
int3
and
xor
or
ss
adc
jge
sbb
jo
or
(bad)
lds
ds
fldenv
and
std
mov
add
lods
pop
and
in
pop
add
jae
popf
jbe
mov
leave
outsl
dec
mov
push
nop

jns
aas
dec
pop
xor
jle
mov
sub
or
mov
enter
in
pop
or
jae
mull
test
sbb
push
adc
(bad)
icebp
mov
sbb
in
pop
les
push
xorl
shlb
xor
adc
xchg
fimuls
cmpsl
sbb
xchg
push
aad
and
mov
push
repz
pop
test
movsl
rorb
popf
sbb
mov
(bad)
push
scas
into
adc
xchg
ficompl
cmpsb
add
lds
mov
sub
adc
call
shlb
pop
daa
(bad)
sub
mov
test
out
(bad)
pop
cmpsl
lahf
or
jl
sarb
ljmp
inc
(bad)
push
jecxz
lods
cwtl
testb
inc
(bad)
mov
sahf
les
inc
gs
test
adcb
arpl
pop
add
fs
cli
sbb
push
lret
mov
xor
mov
adc
mov
pusha
cmc
daa
popa
jg
stos
lods
cmp
or
mov
outsb
test
xchg
gs
mov
shrb
cmp
push
in
gs
add
mov
push
push
sbb
data16
add
fists
pop
call
fcmovbe
mov
xlat
push
fwait

insl
loopne
and
mov
aaa
arpl
andb
push
adc
xor
sub
mov
fistps
inc
lahf
lds
nop

(bad)
cwtl
idivb
push
outsl
sarl
ret
inc
xlat
and
dec
jno
iret
pusha
test
aas
fcoml
in
sub
movl
xor
cmp
mov
mov
(bad)
loope
ja
pop
fiadds
push
int3
int
sub
sarb
(bad)
aam
mov
fdivs
inc
enter
outsl
pushf
sahf
add
jb
pushf
pop
daa
ds
clc
filds
mov
fiaddl
mov
sbb
shll
mov
test
sub
mov
mov
push
and
inc
loopne
test
jg
push
gs
js
into
sbb
or
insl
loopne
adc
pop
dec
les
mov
insl
ficomps
cwtl
cmpsb
adc
and
divb
ja
xchg
dec
sbb
inc
lds
imul
int
push
into
jg
mov
enter
(bad)

pop
sub
aad
fdivrp
test
xor
out
pop
mov
xchg
xlat
or
insl
loopne
mov
push
dec
xchg
mov
mov
xchg
fidivs
repz
mov
pop
jbe
ja
xchg
mov
fimuls
sub
sbb
imul
push
das
cmpsl
xchg
out
xchg
cmpl
cli
aas
js
dec
sbb
push
xlat
xchg
cld
inc
movsl
xor
xor
arpl
push
adc
imul
mov
xor
mov
scas
dec
inc
enter
dec
fidivrs
dec
push
xchg
ljmp
xor
les
inc
int3
add
subl
(bad)
mov
test
repz
out
cmp
or
push
inc
fistps
cld
sbb
fnstsw
gs
sbb
cld
sub
xor
inc
pop
jmp
cs
mov
mov
and
int3
push
cli
clc
(bad)
pop
xlat
add
add
or
test
adc
jo
mov
add
dec
hlt
or
out
xor
divl
dec
xor
jle
mov
out
je
adc
xchg
push
mov
pop
ffreep
iret
les
lock
call
(bad)
leave
loope
out
daa
pop
loope
pop
push
pop
xor
sub
adc
mov
test
outsl
xlat
mov
dec
rcr
sbb
jb
mov
fsubrs
xor
add
inc
lahf
adc
sti
clc
xchg
dec
push
push
popa
sbb
lahf
ds
pushf
clc
and
sub
or
jge
in
mov
outsl
fucomip
imul
mov
cmpsb
out
xlat
dec
pushf
adc
arpl
and
jae
out
add
movsb
out
shlb
and
mov
xor
xor
imul
or
mov
xchg
jae
hlt
mov
loope
pushf
xor
cmpsb
or
out
inc
call
repz
pop
cmp
xor
test
pop
cmp
imulb
mov
jle
loop
repz
jmp
mov
(bad)
je
adc
and
sti
mov
test
mov
or
sbb
dec
stos
stos
test
(bad)
(bad)
mov
ja
adc
fiaddl
adc
push
clc
(bad)
push
shl
in
adc
or
ja
adc
fiaddl
loope
emms
jge
loopne
(bad)
in
ss
divl
test
lods
push
mov
adc
ficompl
(bad)
fldt
out
mov
test
adc
popa
es
stc
xchg
sub
mov
push
or
sbb
outsl
ds
inc
adc
faddl
fwait

decl
add
fldl2e
fwait

repz
into
idiv
test
movsl
not
out
lds
loopne
cmp
mov
mov
adc
jbe
outsl
jecxz
sub
test
sub
ror
inc
dec
push
mov
fmull
notb
fiadds
ja
test
lods
addr16
lods
push
popf
data16
jbe
roll
jmp
sarb
jbe
cs
xor
out
shlb
push
mov
add
jns
movsl
mov
stos
out
shlb
loope
pushw
sti
mov
cmpsb
lods
mov
pop
stos
frstor
rorl
pop
std
rep
pop
sahf
imull
clc
addr16
sub
adc
out
jo
lahf
ficompl
xor
sbb
enter
sbb
adc
xor
rclb
add
in
sbb
fldl
(bad)
int3
add
mov
popa
loopne
xor
mull
mov
subl
jae
ja
adc
fisubl
add
enter
mov
mul
mov
(bad)
mov
jb
adc
xor
fistpl
rolb
xchg
mov
in
incl
in
adc
gs
stos
push
ja
xor
fisubrl
into
(bad)
outsl
fists
in
negl
int3
clc
(bad)
ja
pushf
adc
data16
mov
xchg
addl
pop
inc
adc
and
(bad)
gs
cmpsb
ja
loop
fiaddl
fidivrs
mov
sbbb
lods
push
pushf
ret
push
clc
(bad)
in
pushf
adc
out
fiaddl
mov
into
pop
cmp
xor
or
add
out
pop
sbb
(bad)
fldl
pop
mov
and
gs
cmpsl
push
ja
shr
xor
fisttpll
shl
mov
mov
pushf
push
adc
out
ficompl
int3
xchg
loopne
adc
sbb
pop
lods
and
xchg
insl
(bad)
mov
mov
mov
fisubrl
arpl
mov
enter
scas
stos
mov
or
jecxz
repz
ja
aas
out
ficoml
add
loopne
pop
pop
lods
mov
and
mull
cmp
push
addr16
mov
into
jo
fbld
mov
inc
jge
push
sub
clc
popa
push
sub
insb
fisubrs
mov
sub
filds
leave
maskmovq
mull
inc
adc
cmpsb
ja
test
and
decb
lahf
ja
dec
mov
int
daa
call
mov
push
xchg
mov
mov
xchg
mov
fldt
imul
scas
cmpsb
ja
hlt
out
fisubrl
and
lahf
enter
outsl
sub
jbe
fsubl
sub
into
sbbb
fistpl
out
bound
rcrb
iret
inc
mov
nop

pop
sub
and
loopne,pn
shlb
dec
push
fucomip
add
sbb
cltd
xchg
push
push
lahf
mov
out
sarb
pop
push
outsl
fistpll
pop
mov
icebp
and
dec
dec
sub
iret
sub
sub
inc
outsl
fistps
rcrb
iret
and
movb
mov
mov
sbb
rcrb
mov
mov
mov
rcl
inc
sub
(bad)
arpl
lahf
inc
dec
xchg
loope
in
pop
pop
push
mov
dec
or
lea
pushf
cs
es
lahf
(bad)
loop
dec
sbb
enter
inc
pushf
adc
in
fisubrl
cmp
ja
dec
loopne
mov
sub
aaa
sub
pop
leave
(bad)
jmp
ja
in
pop
xor
loopne
lahf
ja
jecxz
out
in
stos
sbb
iret
and
mov
sub
out
fisubrl
arpl
lahf
pop
es
xchg
mov
inc
cwtl
movsb
cmpl
pop
cmpsb
ja
adc
xchg
pop
mov
xchg
and
in
std
out
(bad)
and
adc
cmpsb
ja
pop
pop
xor
mov
push
and
es
lods
sbb
mov
cmpsb
ja
inc
out
ficompl
add
or
push
inc
cmpsb
call
cmp
mov
adc
out
add
cmp
outsl
fistpll
jae
and
outsl
push
imul
add
js
sbb
test
or
cmpsb
jl
adc
mov
xchg
scas
jbe
push
xor
out
mov
test
sub
xchg
cs
jmp
ja
mov
call
es
push
sti
push
adc
fsubl
(bad)
fcmovnb
xchg
xchg
or
lods
fstpl
gs
(bad)
push
testl
fldt
push
fucomip
stos
jnp
lods
cmp
mull
js
push
adc
and
ret
iret
sbb
aad
lods
and
xchg
mov
(bad)
push
add
pop
out
and
icebp
push
mov
mov
push
ja
push
out
fiaddl
pop
xchg
ret
cmp
pop
outsb
add
gs
push
lock
popa
cmpsb
ja
out
fcmovu
insl
fistpl
cmpsl
cs
pop
test
in
gs
push
push
ja
imul
xchg
stos
xchg
cld
jno
xor
add
adc
xchg
bound
(bad)
ja
or
pop
iret
fisubrl
loopne
out
frstor
pop
shr
iret
lds
gs
pop
push
ja
pop
push
test
(bad)
or
xchg
mov
sbb
xchg
push
and
push
lahf
ja
cmp
outsl
fbstp
jb
testl
mov
mov
sub
dec
rcrb
jne
sub
dec
int3
and
out
inc
cs
test
outsl
fistpll
pop
mov
and
cmp
pop
mov
lea
add
pop
mov
(bad)
and
test
or
mov
addb
mov
mov
mov
mov
fs
push
push
ja
in
test
mov
in
ret
jne
mov
xor
movsl
jns
mov
out
fiaddl
pop
fistpl
jns
in
loope
sbb
adc
(bad)
pop
dec
pushf
cmp
sbb
movb
lahf
xchg
in
loop
aaa
sbb
enter
dec
pushf
adc
add
mov
sub
loopne
scas
insb
mov
mov
dec
pusha
mov
adc
mov
leave
imul
pop
pop
sarb
cmp
jmp
cmpsb
ja
adc
lcall
popa
loopne
adc
loope
xor
mull
clc
(bad)
ja
mov
mov
ficompl
imul
cmp
movsl
sbb
(bad)
rcrb
and
mov
push
gs
fwait

out
push
addb
loopne
fsubr
pop
inc
iret
movsb
fldenv
gs
(bad)
push
adc
out
pop
cmp
xchg
lock
gs
add
pop
mov
xchg
pop
push
mull
sbb
adc
mov
xchg
mov
fwait

clc
mov
mov
adc
aaa
push
adc
out
inc
cs
mov
push
outsl
fistpll
pop
mov
sub
mov
aad
adc
sbb
lahf
ja
xchg
in
pop
dec
fisubrl
notb
cmpsb
iret
mov
inc
jbe
ja
out
outsl
in
push
xchg
mov
gs
adc
out
inc
cs
pop
ja
inc
xchg
cltd
orl
mov
jmp
pushf
outsb
cmp
lahf
ja
loopne,pn
cmp
mov
sbb
and
(bad)
push
rcl
adc
jge
mov
pop
test
lahf
mov
sbb
mov
(bad)
dec
mov
adc
out
inc
cs
test
shlb
dec
pop
lods
jmp
mull
pop
(bad)
push
std
mov
pop
lods
push
push
leave
stos
loopne
pop
out
sarb
xchg
clc
(bad)
sarl
stos
std
fisubrs
ja
out
rcr
sbb
sbb
repz
mov
inc
add
pop
mov
adc
lahf
push
fucomip
fcompl
jbe
push
ljmp
aad
call
movsb
add
inc
mov
inc
rcrb
iret
and
inc
fs
pop
jnp
pushf
jns
mov
out
fimull
xchg
fistpl
push
fucomip
xchg
pusha
sbb
mov
mov
adc
(bad)
inc
ficoms
mov
xchg
rcrb
iret
and
and
hlt
sub
icebp
adcl
pop
dec
cmc
pmaddwd
shlb
lock
jbe
cmpsb
gs
push
fists
adc
mov
ja
int3
xchg
outsl
(bad)
iret
rcrb
push
jo
negl
ss
adc
adc
out
fisubl
icebp
pop
rolb
shrl
pop
mov
dec
ja
jge
cmp
mov
mov
popa
loopne
int3
jne
shrb
and
cmc
push
ja
adc
and
mov
xchg
outsl
(bad)
ret
fstpl
lods
aas
and
gs
(bad)
push
xor
out
lods
fdivrl
xchg
adc
adc
dec
pop
int3
xchg
xor
pushf
jns
icebp
adc
out
fisubrl
cmp
sahf
rcr
in
or
sbb
(bad)
cwtl
int3
pushf
adc
push
scas
je
fildl
xchg
xchg
mov
add
sub
mov
(bad)
out
fisubl
(bad)
sub
mov
rcrb
dec
push
mov
fisubrs
sub
aaa
fisubrl
pushf
inc
pop
stos
or
mov
fists
sub
mull
xchg
(bad)
push
jb
adc
nop

add
jbe
cli
cmpsl
xchg
idivb
add
xchg
sub
shll
scas
mov
xchg
xor
cwtl
push
adc
fdivrl
ja
adc
pop
int3
mov
xchg
outsl
jecxz
mov
mov
aam
or
mov
dec
ficoml
mov
clc
test
lods
clc
push
mull
pop
(bad)
push
or
call
shll
ja
xchg
out
lods
and
inc
test
mov
imul
fisttpl
add
mov
sbb
in
nop

push
cmp
pushf
in
divb
addr16
jne
add
push
cmpsb
jl
xchg
cwtl
or
clc
(bad)
out
sub
int
add
add
push
loope,pt
adc
mov
mov
clc
rcr
push
pushf
pushl
popa
push
cmpsl
push
adc
cmp
out
inc
xor
pop
push
test
int
es
pop
cmp
and
jbe
fstpt
xor
sahf
stc
sub
sbb
adc
loope
lcall
cli
sahf
xchg
pusha
flds
jo
and
sbb
adc
pop
ds
or
adc
lahf
mov
lods
pop
daa
add
mull
icebp
in
movsl
iret
inc
pushf
cmp
xlat
cmp
add
loop
movsb
mov
(bad)
adc
pop
add
bound
sub
pop
insl
(bad)
pop
add
(bad)

aas
jno
nop

mov
lock
xchg
jle
xchg
lea
inc
jns
addr16
mov
cmpsl
imul
test
mov
cmpsl
sbb
inc
xchg
lea
mov
(bad)
in
mov
lahf
jae
xchg
loopne
fistpl
add
xor
or
mov
push
ja
xchg
iret
(bad)
lock
and
incl
mov
call
jne
addps
out
or
mov
mov
jbe
jmp
gs
(bad)
jmp
pushf
adc
out
fisubrl
mov
xor
sub
out
fisubrl
mov
xchg
outsl
fucomip
pop
rcrb
lods
and
(bad)
push
dec
push
or
loopne,pt
in
sbb
and
sbb
mov
mov
mov
mov
loope
out
jp
repnz
mov
ljmp
adc
cli
fists
and
mov
jmp
je
lahf
pop
jno
mov
inc
icebp
or
xlat
les
add
int
mov
inc
jg
and
lods
pop
dec
or
adc
scas
std
mov
pop
dec
and
jge
scas
outsb
mov
pushf
xchg
imul
repz
or
push
pop
hlt
xchg
fcomps
clc
xchg
xchg
aaa
cmpsl
icebp
adc
ja
inc
lret
call
dec
add
aas
xor
push
daa
int
cmp
mov
retw
(bad)
in
mov
xor
scas
loopne
mov
cltd
idivl
or
fmulp
add
test
mov
mov
push
sub
sbbl
cmp
repz
outsl
iret
mov
inc
jg
ja
push
pushf
sbb
inc
push
lcall
mov
enter
(bad)
lret
cmp
mov
call
movsb
cmp
pop
mov
imull
pop
addb
cmp
jno
pop
adc
add
mov
outsb
add
adc
repnz
in
cld
push
adc
shl
jmp
loop
xor
sub
cltd
xor
rclb
push
pop
test
and
xor
aam
movsl
movsl
lods
xchg
icebp
adc
ror
ds
es
testb
mov
xor
push
xorb
orb
xchg
out
mov
and
out
jp
mov
jb
sub
xor
orl
cmp
pop
cltd
and
mov
adc
cmp
out
out
pop
rorb
and
das
xor
cmp
pop
push
subb
sbb
jle
shll
pop
jne
in
ja
jo
dec
fwait

sub
or
add
mov
cltd
outsb
sbb
iret
sbb
(bad)
popa
cmp
pop
push
lea
test
negb
fisubrl
sbb
shrl
(bad)
jp
icebp
jbe
js
inc
lea
and
mov
(bad)
sti
icebp
and
add
das
xor
insl
mov
push
stos
fnsave
mov
icebp
add
hlt
sub
stc
out
and
mov
lods
dec
test
iret
div
pop
sbb
push
xor
pop
jp
adc
inc
lahf
add
dec
xchg
xchg
inc
sbb
mov
sbbb
xor
and
and
sub
push
lods
adc
xchg
jno
in
xor
imul
std
in
inc
and
sahf
adc
out
push
jecxz
(bad)
shlb
dec
cmp
test
sub
mov
aam
sub
loop
fldcw
sarb
jb
sub
daa
xor
pop
setno
sub
mov
mov
inc
sub
sub
mov
je
adc
sub
cwtl
cmp
add
test
sub
lods
bound
sbb
or
(bad)
fisubs
arpl
daa
mov
mov
mov
or
sub
jg
sbbb
repz
enter
loopne
mov
push
ret
inc
sub
cld
daa
sub
ja
mov
add
sub
dec
idivb
std
mov
mov
outsl
jo
sub
or
stc
or
lds
lds
sub
push
and
iret
imul
rclb
in
dec
xchg
sti
mov
popf
jae
outsb
subb
(bad)
(bad)
jne
pop
push
xor
push
dec
pop
jno
sub
cltd
mov
(bad)
ret
add
mov
sub
testb
xor
push
test
sub
xchg
inc
jne
xor
or
jecxz
jl
sub
ss
mov
into
stos
iret
push
xchg
sub
sbb
jno
mov
inc
fyl2x
adc
xor
xor
rcll
sub
rcrl
iret
xor
leave
sub
sub
mov
scas
mov
sarb
jp
mov
sub
(bad)
push
jecxz
dec
rcr
push
fsubrl
add
js
subb
loopne
(bad)
sub
test
and
stc
inc
lds
sub
mov
aad
sub
popf
jbe
ret
mov
dec
das
pusha
fmuls
or
insl
in
clc
mov
rcrb
push
jle
fwait

xchg
xor
int3
mov
push
fisubrs
cltd
lret
dec
cmp
push
es
aam
fisubrs
fs
cmp
(bad)
sub
jl
xchg
sub
pop
add
pop
push
shrl
out
jne
inc
inc
sbb
cltd
mov
ret
lcall
fwait

pusha
and
sub
xor
jge
sub
and
sub
push
and
mov
pop
jno
sub
shrb
jo
sbb
cmp
scas
cs
and
std
aas
adc
mov
mov
push
dec
out
xchg
sub
push
jo
mov
adc
sub
div
xor
jb
into
stc
push
inc
dec
mov
insl
push
or
nop

into
sub
push
jnp
jo
cltd
sub
cltd
dec
or
mov
push
(bad)
or
sub
out
gs
sbb
sub
ficompl
andb
jo
jp
xor
call
fildll
and
iret
filds
sub
in
mov
cli
push
enter
cmp
sub
cmp
test
pusha
cmpsl
loop
jno
sub
mov
push
mov
fcoml
(bad)
in
pop
adc
sub
xchg
add
cmpsl
lods
pusha
ja
add
fwait

js
xchg
das
fmuls
and
inc
pop
idiv
jne
cmp
jae
sub
add
cld
mov
dec
sub
ja
jg
sub
and
or
movsb
lahf
arpl
imul
fisubrs
enter
adc
jge
mov
repz
inc
cmpsl
sub
dec
mov
pop
sub
rcl
fsubrs
popf
inc
mov
sub
jns
popa
int3
loop
lods
sub
arpl
test
jo
xor
cmp
pop
sub
cltd
pop
cli
mov
ds
aaa
mov
insl
cmp
filds
je
stos
bound
dec
add
jb
ds
sub
shlb
and
lds
mov
or
scas
jmp
dec
dec
lds
adc
sub
dec
(bad)
or
shrb
test
mov
int
ss
pop
mov
mov
jl
jle
pop
sub
repz
or
sub
and
sub
lods
insb
pop
repnz
dec
jns
push
mov
inc
sub
enter
sub
lea
jo
jne
out
fldcw
pop
mov
mov
sti
ds
rorb
jmp
sbb
outsl
int3
jg
sub
enter
push
shll
sub
addr16
jle
stc
mov
sub
jge
push
fsubrl
mov
in
jp
mov
jge
les
xor
cmp
push
push
sub
xor
and
sub
xor
ss
mov
push
ss
push
sub
mov
decb
xor
mov
sub
stc
and
cmc
in
and
jmp
and
or
jge
xor
loop
push
and
sub
repnz
and
push
mov
mov
or
loop
(bad)
jl
sub
mov
mov
mov
sub
sub
xor
mov
loop
xchg
xor
xor
ss
lret
mov
sub
and
icebp
inc
ds
icebp
stos
xor
test
sbb
sub
mov
aam
aam
aam
aam
aam
aam
aam
aam
and
sub
sub
sub
sub
jnp
lahf
cltd
mov
jae
sub
insb
leave
ds
xchg
leave
sub
lahf
xor
aaa
push
jp
js
cs
lahf
push
call
jge
in
push
(bad)
push
call
sub
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
aam
sub
sub
sub
sub
sub
sub
sub
sub
and
and
and
sub
test
test
sub
or
outsl
jbe
push
cltd
insl
xchg
sub
test
dec
sub
adc
sub
rcr
(bad)
(bad)
rorl
and
add
jge
es
(bad)
push
popf
and
out
call
sub
jo
xor
lods
sub
nop

ficoml
in
int3
or
sub
xor
xor
rorl
cltd
xchg
int3
push
sbb
inc
(bad)
jecxz
sub
out
incl
adc
mov
sub
mov
sub
mov
or
syscall
dec
sub
aas
cmp
repnz
subb
adc
sub
test
jmp
xchg
or
jb
sub
stos
ljmp
rcrb
sub
outsb
lods
insb
imul
pop
sahf
lcall
dec
js
stc
mov
sub
orl
icebp
cmc
mov
sub
mov
pop
dec
pop
pop
sub
dec
inc
push
or
sub
or
inc
sub
pop
dec
inc
dec
inc
dec
pop
sub
pop
inc
pop
inc
sub
add
inc
pop
dec
sub
sbb
or
dec
inc
inc
dec
dec
pop
pop
jge
dec
pop
pop
inc
inc
inc
push
movntps
daa
or
pop
pop
pop
fs
inc
dec
inc
hlt
sub
sub
sub
pop
sub
cs
dec
dec
pop
pop
inc
pop
stos
push
fldcw
cmp
pop
jge
sub
inc
pop
inc
inc
sbb
dec
pop
jmp
les
push
pop
lods
and
pop
dec
inc
das
or
or
sub
inc
inc
dec
pop
ud2
lods
pop
inc
push
dec
dec
pop
std
and
dec
unpckhps
adc
cs
sub
cmc
sub
add
imul
sub
push
outsl
(bad)
jne
test
sub
sub
aam
aam
aam
aam
aam
aam
aam
aam
aam
sub
sub
sub
sub
sub
sub
sub
sub
aam
aam
aam
aam
aam
aam
aam
aam
sub
sub
sub
xor
sbb
sbb
loopne
das
sbb
sbb
inc
sbb
test
mov
sub
enter
sub
sbb
mov
(bad)
sbb
jle
jecxz
sub
sbb
sbb
je
sub
sahf
sbb
sbb
cli
pop
enter
xor
sbb
push
sbb
sub
inc
push
push
push
(bad)
push
sub
fstpl
aam
sub
sbb
sub
call
or
push
sbb
sbb
adc
std
push
test
sub
dec
push
sub
mov
test
sub
push
leave
push
(bad)
push
and
adc
lods
and
sub
sbb
cld
sbb
and
sbb
sbb
mov
mov
sbbb
sbb
sub
inc
pop
pop
pop
sub
lods
sbb
lea
cs
cmp
xor
sub
sbb
push
sbb
insl
push
jno
dec
push
sbbb
lahf
sbb
sbb
sbb
pop
sub
or
sbb
or
sbb
dec
sbb
stos
pop
mov
pop
sub
in
sbb
sbb
lret
pop
ret
pop
and
or
or
push
jge
jp
and
sub
push
test
movsb
sbb
sbb
xlat
push
sub
sub
pop
sbb
(bad)
sbb
das
aas
frstor
mov
sub
xchg
sbb
sbb
ret
sbb
sbb
adc
sub
out
adc
adc
adc
gs
adc
adc
adc
out
std
adc
adc
adc
ds
or
sub
adc
adc
loope
fsts
and
push
push
sub
adc
jge
js
sub
pop
push
push
push
sub
adc
push
hlt
push
ficoml
sub
adc
pop
xor
or
sub
dec
adc
sub
xchg
(bad)
pop
fcoml
sub
pop
adc
and
jno
push
push
mov
mov
mov
cwtl
adc
in
push
loop
les
rclb
sub
movlps
sub
adc
sub
mov
popf
adc
lock
push
adc
adc
arpl
js
jo
sub
pop
adc
adc
adc
mov
sbb
sub
sbb
nopl
imul
sbb
sub
inc
sbb
sbb
sbb
xchg
sbb
sbb
ret
sbb
sbb
sbb
or
sbb
add
push
sbb
dec
sbb
pop
sbb
sbb
push
sbb
sbb
cmp
or
sub
sbb
pop
sbb
sub
mov
fcomps
(bad)
sbb
sbb
sbb
push
push
adc
js
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sbb
iret
addr16
push
adc
fstl
scas
fstps
jp
sbb
pop
scas
jg
repnz
ror
dec
push
push
adc
push
mov
mov
nop

nop

nop

shll
lds
xor
sahf
aam
sub
xchg
xchg
les
imull
mov
sub
push
push
push
push
mov
mov
add
mov
add
mov
mov
sub
sub
jne
xor
xor
mov
mov
add
add
nop

mov
dec
dec
mov
cmp
cld
dec
inc
add
mov
nop

jne
cmp
push
sub
pop
push
push
push
mov
pop
pop
pop
or
inc
dec
push
push
jno
cmp
pop
pop
jb
jnp
sub
jno
push
inc
pop
jo
push
cmp
pop
or
jp
push
or
pop
cmp
add
push
mov
pop
lea
stc
and
mov
push
cltd
pop
push
xchg
pop
cmp
push
push
or
pop
pop
push
jb
add
pop
cmp
stc
cmc
js
push
push
cmp
pop
pop
push
add
ror
test
push
sub
pop
push
push
sub
pop
pop
push
std
cld
pop
cmp
push
test
pop
stc
mov
mov
mov
push
mov
pop
push
xor
pop
cmp
sub
push
push
rol
pop
pop
add
push
add
jo
push
or
pop
jno
rol
je
jnp
or
test
push
jbe
sub
pop
push
or
pop
cld
cld
mov
stc
and
cld
mov
nop

add
xor
mov
nop

add
push
push
cld
and
cld
mov
mov
add
mov
xor
mov
shl
nop

shl
nop

shl
nop

add
mov
shl
jo
push
push
push
add
pop
pop
sub
jge
push
xchg
xchg
pop
push
xor
pop
push
push
jns
add
pop
pop
push
push
test
pop
pop
and
jl
cld
push
mov
pop
add
je
rol
push
push
and
pop
pop
cmp
cld
add
add
push
xor
pop
push
push
sub
pop
pop
push
xor
pop
test
jae
and
rol
jbe
ja
and
ja
push
jb
sub
pop
jns
and
push
and
pop
jp
push
or
pop
jge
push
or
pop
cmc
lea
mov
and
test
jne
pop
push
push
jg
sub
pop
pop
add
cmc
nop

pop
cmp
je
inc
inc
inc
inc
inc
cmp
jne
mov
push
dec
pop
jbe
push
push
test
pop
pop
cmc
nop

add
xor
mov
mov
push
jbe
push
shr
pop
pop
lea
and
add
or
push
add
pop
mov
nop

add
mov
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
nop

mov
mov
test
nop

je
mov
jg
test
push
pop
inc
dec
rol
stc
mov
nop

inc
rol
jbe
push
or
pop
and
inc
nop

dec
nop

test
nop

jne
pop
pop
pop
leave
ret
movsb
and
mov
and
test
inc
add
and
in
inc
add
inc
add
and
mov
and
lock
shlb
add
inc
add
and
cld
and
mov
and
enter
cwtl
and
fsubl
inc
add
nop

nop

nop

nop

nop

nop

mov
push
subl
decl
xor
subl
incl
incl
mov
nop

nop

shrl
xor
mov
mov
xor
inc
cmp
jb
pop
lea
dec
mov
jo
push
test
pop
push
jo
cld
pop
push
mov
push
mov
push
mov
push
call
mov
mov
mov
dec
dec
add
mov
movl
addl
xor
push
shl
pop
rol
xor
push
lea
push
push
nop

push
nop

pushl
nop

xor
ret
mov
add
mov
mov
call
mov
call
add
jno
je
push
jns
cmc
pop
nop

clc
push
push
push
push
push
push
push
push
pushl
push
call
lea
push
dec
inc
lea
xor
std
cld
test
cmc
clc
mov
mov
push
call
or
jl
mov
mov
mov
add
test
or
push
jbe
shl
pop
cmp
or
mov
mov
push
pushl
mov
call
cmp
jge
mov
add
mov
jae
jnp
push
push
pop
pop
jle
ror
mov
mov
mov
ja
push
push
pop
pop
push
dec
pop
and
cmc
stc
mov
mov
mov
push
push
lea
push
ja
push
push
add
pop
pop
cmc
sub
push
lea
push
mov
push
push
pushl
ret
test
jge
mov
mov
mov
add
mov
lea
push
push
cld
push
jle
push
test
pop
pop
add
lea
push
mov
push
mov
push
call
test
jl
push
mov
inc
mov
push
mov
push
mov
push
mov
push
mov
call
test
jl
movl
jmp
mov
add
mov
mov
movzwl
cmp
jae
mov
push
rol
pop
and
or
cld
mov
jle
push
test
pop
ror
push
dec
pop
clc
mov
nop

imul
add
nop

lea
nop

mov
mov
mov
inc
add
mov
mov
mov
nop

nop

lea
push
mov
push
mov
add
push
mov
push
mov
push
mov
call
jmp
mov
mov
add
mov
lea
push
mov
push
mov
call
test
jl
pushl
mov
mov
push
mov
push
mov
push
mov
call
test
je
jle
push
push
add
pop
push
push
mov
pop
pop
mov
push
push
ret
or
jnp
jo
ror
stc
stc
push
call
ret
push
mov
sub
movl
mov
call
xor
lea
add
push
pushl
pushl
pushl
pushl
push
mov
call
leave
ret
push
push
add
jle
jns
or
push
or
pop
jo
ror
test
push
sub
pop
add
rol
push
push
rol
pop
pop
je
jp
je
push
cltd
pop
call
subl
jne
pop
xor
ret
